AST dump for ChapelRange after pass bulkCopyRecords.
Module use list: ChapelBase SysBasic HaltWrappers Math DSIUtil 

{
  function chpl__init_ChapelRange[416067]() : void[4] "insert line file info" "module init" "resolved"
  {
    {
    }
    (512245 return _void[55])
  }
  type BoundedRangeType[64216] def bounded[64208]:BoundedRangeType[64216] def boundedLow[64210]:BoundedRangeType[64216] def boundedHigh[64212]:BoundedRangeType[64216] def boundedNone[64214]:BoundedRangeType[64216]
  function _ref(range(byteIndex,bounded,false))[1025990]._low[1028529](ref arg this[1028533]:_ref(range(byteIndex,bounded,false))[1025990]) ref : _ref(int(64))[936761] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[1028535]:_ref(int(64))[936761] "dead after last mention" "RVV" "temp"
    ref call_tmp[1028543]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (1028545 'move' call_tmp[1028543](1028547 '.' this[1028533] _low[1025943]))
    (1028550 'move' ret[1028535] call_tmp[1028543])
    (1028554 return ret[1028535])
  }
  function _ref(range(int(64),bounded,false))[1027047]._low[1028641](ref arg this[1028645]:_ref(range(int(64),bounded,false))[1027047]) ref : _ref(int(64))[936761] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[1028647]:_ref(int(64))[936761] "dead after last mention" "RVV" "temp"
    ref call_tmp[1028655]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (1028657 'move' call_tmp[1028655](1028659 '.' this[1028645] _low[1026965]))
    (1028662 'move' ret[1028647] call_tmp[1028655])
    (1028666 return ret[1028647])
  }
  function _ref(range(int(64),boundedLow,false))[1087798]._low[1090874](ref arg this[1090878]:_ref(range(int(64),boundedLow,false))[1087798]) ref : _ref(int(64))[936761] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[1090880]:_ref(int(64))[936761] "dead after last mention" "RVV" "temp"
    ref call_tmp[1090888]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (1090890 'move' call_tmp[1090888](1090892 '.' this[1090878] _low[1087716]))
    (1090895 'move' ret[1090880] call_tmp[1090888])
    (1090899 return ret[1090880])
  }
  function _ref(range(byteIndex,boundedLow,false))[1143636]._low[1146357](ref arg this[1146361]:_ref(range(byteIndex,boundedLow,false))[1143636]) ref : _ref(int(64))[936761] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[1146363]:_ref(int(64))[936761] "dead after last mention" "RVV" "temp"
    ref call_tmp[1146371]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (1146373 'move' call_tmp[1146371](1146375 '.' this[1146361] _low[1143554]))
    (1146378 'move' ret[1146363] call_tmp[1146371])
    (1146382 return ret[1146363])
  }
  function _ref(range(int(64),boundedHigh,false))[1187627]._low[1188589](ref arg this[1188593]:_ref(range(int(64),boundedHigh,false))[1187627]) ref : _ref(int(64))[936761] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[1188595]:_ref(int(64))[936761] "dead after last mention" "RVV" "temp"
    ref call_tmp[1188603]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (1188605 'move' call_tmp[1188603](1188607 '.' this[1188593] _low[1187580]))
    (1188610 'move' ret[1188595] call_tmp[1188603])
    (1188614 return ret[1188595])
  }
  function _ref(range(byteIndex,boundedHigh,false))[1185152]._low[1188701](ref arg this[1188705]:_ref(range(byteIndex,boundedHigh,false))[1185152]) ref : _ref(int(64))[936761] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[1188707]:_ref(int(64))[936761] "dead after last mention" "RVV" "temp"
    ref call_tmp[1188715]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (1188717 'move' call_tmp[1188715](1188719 '.' this[1188705] _low[1185070]))
    (1188722 'move' ret[1188707] call_tmp[1188715])
    (1188726 return ret[1188707])
  }
  function _ref(range(int(64),bounded,true))[1570567]._low[1571648](ref arg this[1571652]:_ref(range(int(64),bounded,true))[1570567]) ref : _ref(int(64))[936761] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[1571654]:_ref(int(64))[936761] "dead after last mention" "RVV" "temp"
    ref call_tmp[1571662]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (1571664 'move' call_tmp[1571662](1571666 '.' this[1571652] _low[1570485]))
    (1571669 'move' ret[1571654] call_tmp[1571662])
    (1571673 return ret[1571654])
  }
  function _ref(range(byteIndex,bounded,false))[1025990]._high[1028778](ref arg this[1028782]:_ref(range(byteIndex,bounded,false))[1025990]) ref : _ref(int(64))[936761] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[1028784]:_ref(int(64))[936761] "dead after last mention" "RVV" "temp"
    ref call_tmp[1028792]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (1028794 'move' call_tmp[1028792](1028796 '.' this[1028782] _high[1025948]))
    (1028799 'move' ret[1028784] call_tmp[1028792])
    (1028803 return ret[1028784])
  }
  function _ref(range(int(64),bounded,false))[1027047]._high[1028849](ref arg this[1028853]:_ref(range(int(64),bounded,false))[1027047]) ref : _ref(int(64))[936761] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[1028855]:_ref(int(64))[936761] "dead after last mention" "RVV" "temp"
    ref call_tmp[1028863]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (1028865 'move' call_tmp[1028863](1028867 '.' this[1028853] _high[1026970]))
    (1028870 'move' ret[1028855] call_tmp[1028863])
    (1028874 return ret[1028855])
  }
  function _ref(range(int(64),boundedLow,false))[1087798]._high[1093530](ref arg this[1093534]:_ref(range(int(64),boundedLow,false))[1087798]) ref : _ref(int(64))[936761] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[1093536]:_ref(int(64))[936761] "dead after last mention" "RVV" "temp"
    ref call_tmp[1093544]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (1093546 'move' call_tmp[1093544](1093548 '.' this[1093534] _high[1087721]))
    (1093551 'move' ret[1093536] call_tmp[1093544])
    (1093555 return ret[1093536])
  }
  function _ref(range(byteIndex,boundedLow,false))[1143636]._high[1146483](ref arg this[1146487]:_ref(range(byteIndex,boundedLow,false))[1143636]) ref : _ref(int(64))[936761] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[1146489]:_ref(int(64))[936761] "dead after last mention" "RVV" "temp"
    ref call_tmp[1146497]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (1146499 'move' call_tmp[1146497](1146501 '.' this[1146487] _high[1143559]))
    (1146504 'move' ret[1146489] call_tmp[1146497])
    (1146508 return ret[1146489])
  }
  function _ref(range(int(64),boundedHigh,false))[1187627]._high[1188783](ref arg this[1188787]:_ref(range(int(64),boundedHigh,false))[1187627]) ref : _ref(int(64))[936761] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[1188789]:_ref(int(64))[936761] "dead after last mention" "RVV" "temp"
    ref call_tmp[1188797]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (1188799 'move' call_tmp[1188797](1188801 '.' this[1188787] _high[1187585]))
    (1188804 'move' ret[1188789] call_tmp[1188797])
    (1188808 return ret[1188789])
  }
  function _ref(range(byteIndex,boundedHigh,false))[1185152]._high[1188854](ref arg this[1188858]:_ref(range(byteIndex,boundedHigh,false))[1185152]) ref : _ref(int(64))[936761] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[1188860]:_ref(int(64))[936761] "dead after last mention" "RVV" "temp"
    ref call_tmp[1188868]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (1188870 'move' call_tmp[1188868](1188872 '.' this[1188858] _high[1185075]))
    (1188875 'move' ret[1188860] call_tmp[1188868])
    (1188879 return ret[1188860])
  }
  function _ref(range(int(64),bounded,true))[1570567]._high[1571676](ref arg this[1571680]:_ref(range(int(64),bounded,true))[1570567]) ref : _ref(int(64))[936761] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[1571682]:_ref(int(64))[936761] "dead after last mention" "RVV" "temp"
    ref call_tmp[1571690]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (1571692 'move' call_tmp[1571690](1571694 '.' this[1571680] _high[1570490]))
    (1571697 'move' ret[1571682] call_tmp[1571690])
    (1571701 return ret[1571682])
  }
  function _ref(range(int(64),bounded,true))[1570567]._stride[1570655](ref arg this[1570659]:_ref(range(int(64),bounded,true))[1570567]) ref : _ref(int(64))[936761] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[1570661]:_ref(int(64))[936761] "dead after last mention" "RVV" "temp"
    ref call_tmp[1570669]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (1570671 'move' call_tmp[1570669](1570673 '.' this[1570659] _stride[1570495]))
    (1570676 'move' ret[1570661] call_tmp[1570669])
    (1570680 return ret[1570661])
  }
  function _ref(range(int(64),boundedLow,false))[1087798]._alignment[1091147](ref arg this[1091151]:_ref(range(int(64),boundedLow,false))[1087798]) ref : nothing[7] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    (1881680 return none[57])
  }
  function _ref(range(int(64),bounded,true))[1570567]._alignment[1570684](ref arg this[1570688]:_ref(range(int(64),bounded,true))[1570567]) ref : _ref(int(64))[936761] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[1570690]:_ref(int(64))[936761] "dead after last mention" "RVV" "temp"
    ref call_tmp[1570698]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (1570700 'move' call_tmp[1570698](1570702 '.' this[1570688] _alignment[1570505]))
    (1570705 'move' ret[1570690] call_tmp[1570698])
    (1570709 return ret[1570690])
  }
  function _ref(range(int(64),bounded,true))[1570567]._aligned[1570714](ref arg this[1570718]:_ref(range(int(64),bounded,true))[1570567]) ref : _ref(bool)[937388] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[1570720]:_ref(bool)[937388] "dead after last mention" "RVV" "temp"
    ref call_tmp[1570728]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (1570730 'move' call_tmp[1570728](1570732 '.' this[1570718] _aligned[1570515]))
    (1570735 'move' ret[1570720] call_tmp[1570728])
    (1570739 return ret[1570720])
  }
  function range(byteIndex,bounded,false)[1025981].deinit[1674454](const in arg this[1674458]:range(byteIndex,bounded,false)[1025981]) : void[4] "compiler generated" "destructor" "inline" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "fn synchronization free"
  {
    (1674464 return _void[55])
  }
  function range(int(64),bounded,false)[1027003].deinit[1674499](const in arg this[1674503]:range(int(64),bounded,false)[1027003]) : void[4] "compiler generated" "destructor" "inline" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "fn synchronization free"
  {
    (1674509 return _void[55])
  }
  function range(int(64),boundedLow,false)[1087754].deinit[1680856](const in arg this[1680860]:range(int(64),boundedLow,false)[1087754]) : void[4] "compiler generated" "destructor" "inline" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "fn synchronization free"
  {
    (1680866 return _void[55])
  }
  function range(byteIndex,boundedLow,false)[1143592].deinit[1682938](const in arg this[1682942]:range(byteIndex,boundedLow,false)[1143592]) : void[4] "compiler generated" "destructor" "inline" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "fn synchronization free"
  {
    (1682948 return _void[55])
  }
  function range(byteIndex,boundedHigh,false)[1185108].deinit[1683995](const in arg this[1683999]:range(byteIndex,boundedHigh,false)[1185108]) : void[4] "compiler generated" "destructor" "inline" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "fn synchronization free"
  {
    (1684005 return _void[55])
  }
  function range(int(64),boundedHigh,false)[1187618].deinit[1685512](const in arg this[1685516]:range(int(64),boundedHigh,false)[1187618]) : void[4] "compiler generated" "destructor" "inline" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "fn synchronization free"
  {
    (1685522 return _void[55])
  }
  function range(int(64),bounded,true)[1570523].deinit[1825142](const in arg this[1825146]:range(int(64),bounded,true)[1570523]) : void[4] "compiler generated" "destructor" "inline" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "fn synchronization free"
  {
    (1825152 return _void[55])
  }
  type range(byteIndex,bounded,false)[1025981] val _low[1025943]:int(64)[13] val _high[1025948]:int(64)[13]
  type range(byteIndex,boundedLow,false)[1143592] val _low[1143554]:int(64)[13] val _high[1143559]:int(64)[13]
  type range(byteIndex,boundedHigh,false)[1185108] val _low[1185070]:int(64)[13] val _high[1185075]:int(64)[13]
  type range(int(64),bounded,false)[1027003] val _low[1026965]:int(64)[13] val _high[1026970]:int(64)[13]
  type range(int(64),bounded,true)[1570523] val _low[1570485]:int(64)[13] val _high[1570490]:int(64)[13] val _stride[1570495]:int(64)[13] val _alignment[1570505]:int(64)[13] val _aligned[1570515]:bool[10]
  type range(int(64),boundedLow,false)[1087754] val _low[1087716]:int(64)[13] val _high[1087721]:int(64)[13]
  type range(int(64),boundedHigh,false)[1187618] val _low[1187580]:int(64)[13] val _high[1187585]:int(64)[13]
  function range(int(64),bounded,false)[1027003].init[1026226](ref arg this[1026232]:range(int(64),bounded,false)[1027003], const in arg _low[1026253]:int(64)[13], const in arg _high[1026262]:int(64)[13], const in arg _stride[1026270]:int(64)[13], const in arg _alignment[1026279]:int(64)[13], const in arg _aligned[1026283]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    val _formal_type_tmp_[1879696]:int(64)[13] "temp"
    val tmp[1026462]:int(64)[13] "dead after last mention" "temp" "type variable"
    const-val call_tmp[1026497]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (1026499 'move' call_tmp[1026497](1026502 call chpl__idxToInt[1027105] _low[1026253]))
    val call_tmp[1026504]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1026511]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    val tmp[1026518]:int(64)[13] "dead after last mention" "temp"
    (1026520 'move' tmp[1026518] call_tmp[1026497])
    (1026524 '.=' this[1026232] _low[1026965] tmp[1026518])
    const-val call_tmp[1026529]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (1026531 'move' call_tmp[1026529](1026534 call chpl__idxToInt[1027105] _high[1026262]))
    val call_tmp[1026536]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1026543]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    val tmp[1026550]:int(64)[13] "dead after last mention" "temp"
    (1026552 'move' tmp[1026550] call_tmp[1026529])
    (1026556 '.=' this[1026232] _high[1026970] tmp[1026550])
    {
      const-val call_tmp[1026830]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1026832 'move' call_tmp[1026830](1026835 call ==[435744] _stride[1026270] 1))
      (1026839 call assert[210432] call_tmp[1026830])
    }
    (1026842 return _void[55])
  }
  function init_default__high[1033394]() : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1879720]:int(64)[13] "temp"
    val ret[1033398]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val _high[1033403]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1033410]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1033412]:int(64)[13] "dead after last mention" "temp" "type variable"
    const-val call_tmp[1033426]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1033429 'move' call_tmp[1033426](1033407 call chpl__intToIdx[1027601]))
    (1033437 'move' tmp[1033410] call_tmp[1033426])
    (1033423 'move' _high[1033403] tmp[1033410])
    (1033432 'move' ret[1033398] _high[1033403])
    (1033401 return ret[1033398])
  }
  function init_default__low[1033253]() : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1879716]:int(64)[13] "temp"
    val ret[1033257]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val _low[1033262]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1033269]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1033271]:int(64)[13] "dead after last mention" "temp" "type variable"
    const-val call_tmp[1033285]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1033288 'move' call_tmp[1033285](1033266 call chpl__intToIdx[1033290]))
    (1033383 'move' tmp[1033269] call_tmp[1033285])
    (1033282 'move' _low[1033262] tmp[1033269])
    (1033378 'move' ret[1033257] _low[1033262])
    (1033260 return ret[1033257])
  }
  function init_default__alignment[1027551]() : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1879698]:int(64)[13] "temp"
    val ret[1027555]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val _alignment[1027560]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1027567]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1027569]:int(64)[13] "dead after last mention" "temp" "type variable"
    const-val call_tmp[1027583]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1027586 'move' call_tmp[1027583](1027564 call chpl__intToIdx[1027601]))
    (1027713 'move' tmp[1027567] call_tmp[1027583])
    (1027580 'move' _alignment[1027560] tmp[1027567])
    (1027708 'move' ret[1027555] _alignment[1027560])
    (1027558 return ret[1027555])
  }
  function init_default__stride[1027511]() : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved" "fn synchronization free"
  {
    val ret[1027513]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val _stride[1027518]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1027522]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1027524]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1027532 'move' tmp[1027522] 1)
    (1027535 'move' _stride[1027518] tmp[1027522])
    (1027540 'move' ret[1027513] _stride[1027518])
    (1027516 return ret[1027513])
  }
  function range(byteIndex,bounded,false)[1025981].init[1028897](ref arg this[1028903]:range(byteIndex,bounded,false)[1025981], const  ref arg _low[1028924]:byteIndex[28173], const  ref arg _high[1028933]:byteIndex[28173], const in arg _stride[1028941]:int(64)[13], const  ref arg _alignment[1028950]:byteIndex[28173], const in arg _aligned[1028954]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    val _formal_type_tmp_[1879706]:byteIndex[28173] "temp"
    val tmp[1028970]:byteIndex[28173] "dead after last mention" "temp" "type variable"
    const-val call_tmp[1029005]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (1029007 'move' call_tmp[1029005](1029010 call chpl__idxToInt[1029358] _low[1028924]))
    val call_tmp[1029012]:byteIndex[28173] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1029019]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    val tmp[1029026]:int(64)[13] "dead after last mention" "temp"
    (1029028 'move' tmp[1029026] call_tmp[1029005])
    (1029032 '.=' this[1028903] _low[1025943] tmp[1029026])
    const-val call_tmp[1029037]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (1029039 'move' call_tmp[1029037](1029042 call chpl__idxToInt[1029358] _high[1028933]))
    val call_tmp[1029044]:byteIndex[28173] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1029051]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    val tmp[1029058]:int(64)[13] "dead after last mention" "temp"
    (1029060 'move' tmp[1029058] call_tmp[1029037])
    (1029064 '.=' this[1028903] _high[1025948] tmp[1029058])
    {
      const-val call_tmp[1029338]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1029340 'move' call_tmp[1029338](1029343 call ==[435744] _stride[1028941] 1))
      (1029347 call assert[210432] call_tmp[1029338])
    }
    (1029350 return _void[55])
  }
  function init_default__alignment[1030041](ref arg _retArg[1908564]:_ref(byteIndex)[948948]) : void[4] "compiler generated" "default actual function" "fn returns via _retArg" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1879712]:byteIndex[28173] "temp"
    const-val ret[1030045]:byteIndex[28173] "dead after last mention" "RVV" "maybe param" "temp"
    const-val _alignment[1030050]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    const-val ret_tmp[1893798]:byteIndex[28173] "temp"
    (1030054 call chpl__intToIdx[28505] 0 ret_tmp[1893798])
    (1893801 'move' _alignment[1030050] ret_tmp[1893798])
    (1030061 'move' ret[1030045] _alignment[1030050])
    (1908566 '=' _retArg[1908564] ret[1030045])
    (1908568 return _void[55])
  }
  function init_default__stride[1030001]() : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved" "fn synchronization free"
  {
    val ret[1030003]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val _stride[1030008]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1030012]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1030014]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1030022 'move' tmp[1030012] 1)
    (1030025 'move' _stride[1030008] tmp[1030012])
    (1030030 'move' ret[1030003] _stride[1030008])
    (1030006 return ret[1030003])
  }
  function init_default__high[1029949](ref arg _retArg[1908546]:_ref(byteIndex)[948948]) : void[4] "compiler generated" "default actual function" "fn returns via _retArg" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val _formal_type_tmp_[1879710]:byteIndex[28173] "temp"
    const-val ret[1029953]:byteIndex[28173] "dead after last mention" "RVV" "maybe param" "temp"
    const-val _high[1029958]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    const-val ret_tmp[1893792]:byteIndex[28173] "temp"
    (1029962 call chpl__intToIdx[28505] 0 ret_tmp[1893792])
    (1893795 'move' _high[1029958] ret_tmp[1893792])
    (1029988 'move' ret[1029953] _high[1029958])
    (1908548 '=' _retArg[1908546] ret[1029953])
    (1908550 return _void[55])
  }
  function init_default__low[1029527](ref arg _retArg[1908534]:_ref(byteIndex)[948948]) : void[4] "compiler generated" "default actual function" "fn returns via _retArg" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val _formal_type_tmp_[1879708]:byteIndex[28173] "temp"
    const-val ret[1029531]:byteIndex[28173] "dead after last mention" "RVV" "maybe param" "temp"
    const-val _low[1029536]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    const-val ret_tmp[1893786]:byteIndex[28173] "temp"
    (1029540 call chpl__intToIdx[28505] 1 ret_tmp[1893786])
    (1893789 'move' _low[1029536] ret_tmp[1893786])
    (1029936 'move' ret[1029531] _low[1029536])
    (1908536 '=' _retArg[1908534] ret[1029531])
    (1908538 return _void[55])
  }
  function _ref(range(byteIndex,bounded,false))[1025990].init[1046095](ref arg this[1046101]:_ref(range(byteIndex,bounded,false))[1025990], const  ref arg _low[1046122]:byteIndex[28173], const  ref arg _high[1046131]:byteIndex[28173], const in arg _stride[1046139]:int(64)[13], const  ref arg _alignment[1046148]:byteIndex[28173], const in arg _aligned[1046152]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[1879722]:byteIndex[28173] "temp"
    val tmp[1046720]:byteIndex[28173] "dead after last mention" "temp" "type variable"
    const-val call_tmp[1046755]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (1046757 'move' call_tmp[1046755](1046760 call chpl__idxToInt[1029358] _low[1046122]))
    val call_tmp[1046762]:byteIndex[28173] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1046769]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    val tmp[1046776]:int(64)[13] "dead after last mention" "temp"
    (1046778 'move' tmp[1046776] call_tmp[1046755])
    (1046782 '.=' this[1046101] _low[1025943] tmp[1046776])
    const-val call_tmp[1046787]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (1046789 'move' call_tmp[1046787](1046792 call chpl__idxToInt[1029358] _high[1046131]))
    val call_tmp[1046794]:byteIndex[28173] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1046801]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    val tmp[1046808]:int(64)[13] "dead after last mention" "temp"
    (1046810 'move' tmp[1046808] call_tmp[1046787])
    (1046814 '.=' this[1046101] _high[1025948] tmp[1046808])
    {
      const-val call_tmp[1047088]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1047090 'move' call_tmp[1047088](1047093 call ==[435744] _stride[1046139] 1))
      (1047097 call assert[210432] call_tmp[1047088])
    }
    (1047100 return _void[55])
  }
  function _ref(range(int(64),bounded,false))[1027047].init[1086095](ref arg this[1086101]:_ref(range(int(64),bounded,false))[1027047], const in arg _low[1086122]:int(64)[13], const in arg _high[1086131]:int(64)[13], const in arg _stride[1086139]:int(64)[13], const in arg _alignment[1086148]:int(64)[13], const in arg _aligned[1086152]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    val _formal_type_tmp_[1879747]:int(64)[13] "temp"
    val tmp[1086223]:int(64)[13] "dead after last mention" "temp" "type variable"
    const-val call_tmp[1086258]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (1086260 'move' call_tmp[1086258](1086263 call chpl__idxToInt[1027105] _low[1086122]))
    val call_tmp[1086265]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1086272]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    val tmp[1086279]:int(64)[13] "dead after last mention" "temp"
    (1086281 'move' tmp[1086279] call_tmp[1086258])
    (1086285 '.=' this[1086101] _low[1026965] tmp[1086279])
    const-val call_tmp[1086290]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (1086292 'move' call_tmp[1086290](1086295 call chpl__idxToInt[1027105] _high[1086131]))
    val call_tmp[1086297]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1086304]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    val tmp[1086311]:int(64)[13] "dead after last mention" "temp"
    (1086313 'move' tmp[1086311] call_tmp[1086290])
    (1086317 '.=' this[1086101] _high[1026970] tmp[1086311])
    {
      const-val call_tmp[1086591]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1086593 'move' call_tmp[1086591](1086596 call ==[435744] _stride[1086139] 1))
      (1086600 call assert[210432] call_tmp[1086591])
    }
    (1086603 return _void[55])
  }
  function range(int(64),boundedLow,false)[1087754].init[1087201](ref arg this[1087207]:range(int(64),boundedLow,false)[1087754], const in arg _low[1087228]:int(64)[13], const in arg _high[1087237]:int(64)[13], const in arg _stride[1087245]:int(64)[13], const in arg _alignment[1087254]:int(64)[13], const in arg _aligned[1087258]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    val _formal_type_tmp_[1879749]:int(64)[13] "temp"
    val tmp[1087265]:int(64)[13] "dead after last mention" "temp" "type variable"
    const-val call_tmp[1087300]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (1087302 'move' call_tmp[1087300](1087305 call chpl__idxToInt[1027105] _low[1087228]))
    val call_tmp[1087307]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1087314]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    val tmp[1087321]:int(64)[13] "dead after last mention" "temp"
    (1087323 'move' tmp[1087321] call_tmp[1087300])
    (1087327 '.=' this[1087207] _low[1087716] tmp[1087321])
    const-val call_tmp[1087332]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (1087334 'move' call_tmp[1087332](1087337 call chpl__idxToInt[1027105] _high[1087237]))
    val call_tmp[1087339]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1087346]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    val tmp[1087353]:int(64)[13] "dead after last mention" "temp"
    (1087355 'move' tmp[1087353] call_tmp[1087332])
    (1087359 '.=' this[1087207] _high[1087721] tmp[1087353])
    {
      const-val call_tmp[1087633]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1087635 'move' call_tmp[1087633](1087638 call ==[435744] _stride[1087245] 1))
      (1087642 call assert[210432] call_tmp[1087633])
    }
    (1087645 return _void[55])
  }
  function init_default__low[1146543]() : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1879785]:int(64)[13] "temp"
    val ret[1146547]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val _low[1146552]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1146559]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1146561]:int(64)[13] "dead after last mention" "temp" "type variable"
    const-val call_tmp[1146575]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1146578 'move' call_tmp[1146575](1146556 call chpl__intToIdx[1033290]))
    (1146586 'move' tmp[1146559] call_tmp[1146575])
    (1146572 'move' _low[1146552] tmp[1146559])
    (1146581 'move' ret[1146547] _low[1146552])
    (1146550 return ret[1146547])
  }
  function init_default__alignment[1088033]() : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1879753]:int(64)[13] "temp"
    val ret[1088037]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val _alignment[1088042]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1088049]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1088051]:int(64)[13] "dead after last mention" "temp" "type variable"
    const-val call_tmp[1088065]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1088068 'move' call_tmp[1088065](1088046 call chpl__intToIdx[1027601]))
    (1088076 'move' tmp[1088049] call_tmp[1088065])
    (1088062 'move' _alignment[1088042] tmp[1088049])
    (1088071 'move' ret[1088037] _alignment[1088042])
    (1088040 return ret[1088037])
  }
  function init_default__stride[1087993]() : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved" "fn synchronization free"
  {
    val ret[1087995]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val _stride[1088000]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1088004]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1088006]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1088014 'move' tmp[1088004] 1)
    (1088017 'move' _stride[1088000] tmp[1088004])
    (1088022 'move' ret[1087995] _stride[1088000])
    (1087998 return ret[1087995])
  }
  function init_default__high[1087939]() : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1879751]:int(64)[13] "temp"
    val ret[1087943]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val _high[1087948]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1087955]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1087957]:int(64)[13] "dead after last mention" "temp" "type variable"
    const-val call_tmp[1087971]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1087974 'move' call_tmp[1087971](1087952 call chpl__intToIdx[1027601]))
    (1087982 'move' tmp[1087955] call_tmp[1087971])
    (1087968 'move' _high[1087948] tmp[1087955])
    (1087977 'move' ret[1087943] _high[1087948])
    (1087946 return ret[1087943])
  }
  function _ref(range(int(64),boundedLow,false))[1087798].init[1130442](ref arg this[1130448]:_ref(range(int(64),boundedLow,false))[1087798], const in arg _low[1130469]:int(64)[13], const in arg _high[1130478]:int(64)[13], const in arg _stride[1130486]:int(64)[13], const in arg _alignment[1130495]:int(64)[13], const in arg _aligned[1130499]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    val _formal_type_tmp_[1879771]:int(64)[13] "temp"
    val tmp[1130570]:int(64)[13] "dead after last mention" "temp" "type variable"
    const-val call_tmp[1130605]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (1130607 'move' call_tmp[1130605](1130610 call chpl__idxToInt[1027105] _low[1130469]))
    val call_tmp[1130612]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1130619]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    val tmp[1130626]:int(64)[13] "dead after last mention" "temp"
    (1130628 'move' tmp[1130626] call_tmp[1130605])
    (1130632 '.=' this[1130448] _low[1087716] tmp[1130626])
    const-val call_tmp[1130637]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (1130639 'move' call_tmp[1130637](1130642 call chpl__idxToInt[1027105] _high[1130478]))
    val call_tmp[1130644]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1130651]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    val tmp[1130658]:int(64)[13] "dead after last mention" "temp"
    (1130660 'move' tmp[1130658] call_tmp[1130637])
    (1130664 '.=' this[1130448] _high[1087721] tmp[1130658])
    {
      const-val call_tmp[1130938]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1130940 'move' call_tmp[1130938](1130943 call ==[435744] _stride[1130486] 1))
      (1130947 call assert[210432] call_tmp[1130938])
    }
    (1130950 return _void[55])
  }
  function range(byteIndex,boundedLow,false)[1143592].init[1143039](ref arg this[1143045]:range(byteIndex,boundedLow,false)[1143592], const  ref arg _low[1143066]:byteIndex[28173], const  ref arg _high[1143075]:byteIndex[28173], const in arg _stride[1143083]:int(64)[13], const  ref arg _alignment[1143092]:byteIndex[28173], const in arg _aligned[1143096]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    val _formal_type_tmp_[1879777]:byteIndex[28173] "temp"
    val tmp[1143103]:byteIndex[28173] "dead after last mention" "temp" "type variable"
    const-val call_tmp[1143138]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (1143140 'move' call_tmp[1143138](1143143 call chpl__idxToInt[1029358] _low[1143066]))
    val call_tmp[1143145]:byteIndex[28173] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1143152]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    val tmp[1143159]:int(64)[13] "dead after last mention" "temp"
    (1143161 'move' tmp[1143159] call_tmp[1143138])
    (1143165 '.=' this[1143045] _low[1143554] tmp[1143159])
    const-val call_tmp[1143170]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (1143172 'move' call_tmp[1143170](1143175 call chpl__idxToInt[1029358] _high[1143075]))
    val call_tmp[1143177]:byteIndex[28173] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1143184]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    val tmp[1143191]:int(64)[13] "dead after last mention" "temp"
    (1143193 'move' tmp[1143191] call_tmp[1143170])
    (1143197 '.=' this[1143045] _high[1143559] tmp[1143191])
    {
      const-val call_tmp[1143471]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1143473 'move' call_tmp[1143471](1143476 call ==[435744] _stride[1143083] 1))
      (1143480 call assert[210432] call_tmp[1143471])
    }
    (1143483 return _void[55])
  }
  function init_default__alignment[1143850](ref arg _retArg[1910356]:_ref(byteIndex)[948948]) : void[4] "compiler generated" "default actual function" "fn returns via _retArg" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1879781]:byteIndex[28173] "temp"
    const-val ret[1143854]:byteIndex[28173] "dead after last mention" "RVV" "maybe param" "temp"
    const-val _alignment[1143859]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    const-val ret_tmp[1893834]:byteIndex[28173] "temp"
    (1143863 call chpl__intToIdx[28505] 0 ret_tmp[1893834])
    (1893837 'move' _alignment[1143859] ret_tmp[1893834])
    (1143870 'move' ret[1143854] _alignment[1143859])
    (1910358 '=' _retArg[1910356] ret[1143854])
    (1910360 return _void[55])
  }
  function init_default__stride[1143810]() : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved" "fn synchronization free"
  {
    val ret[1143812]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val _stride[1143817]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1143821]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1143823]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1143831 'move' tmp[1143821] 1)
    (1143834 'move' _stride[1143817] tmp[1143821])
    (1143839 'move' ret[1143812] _stride[1143817])
    (1143815 return ret[1143812])
  }
  function init_default__high[1143777](ref arg _retArg[1910344]:_ref(byteIndex)[948948]) : void[4] "compiler generated" "default actual function" "fn returns via _retArg" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1879779]:byteIndex[28173] "temp"
    const-val ret[1143781]:byteIndex[28173] "dead after last mention" "RVV" "maybe param" "temp"
    const-val _high[1143786]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    const-val ret_tmp[1893828]:byteIndex[28173] "temp"
    (1143790 call chpl__intToIdx[28505] 0 ret_tmp[1893828])
    (1893831 'move' _high[1143786] ret_tmp[1893828])
    (1143797 'move' ret[1143781] _high[1143786])
    (1910346 '=' _retArg[1910344] ret[1143781])
    (1910348 return _void[55])
  }
  function _ref(range(byteIndex,boundedLow,false))[1143636].init[1148906](ref arg this[1148912]:_ref(range(byteIndex,boundedLow,false))[1143636], const  ref arg _low[1148933]:byteIndex[28173], const  ref arg _high[1148942]:byteIndex[28173], const in arg _stride[1148950]:int(64)[13], const  ref arg _alignment[1148959]:byteIndex[28173], const in arg _aligned[1148963]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[1879787]:byteIndex[28173] "temp"
    val tmp[1149034]:byteIndex[28173] "dead after last mention" "temp" "type variable"
    const-val call_tmp[1149069]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (1149071 'move' call_tmp[1149069](1149074 call chpl__idxToInt[1029358] _low[1148933]))
    val call_tmp[1149076]:byteIndex[28173] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1149083]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    val tmp[1149090]:int(64)[13] "dead after last mention" "temp"
    (1149092 'move' tmp[1149090] call_tmp[1149069])
    (1149096 '.=' this[1148912] _low[1143554] tmp[1149090])
    const-val call_tmp[1149101]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (1149103 'move' call_tmp[1149101](1149106 call chpl__idxToInt[1029358] _high[1148942]))
    val call_tmp[1149108]:byteIndex[28173] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1149115]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    val tmp[1149122]:int(64)[13] "dead after last mention" "temp"
    (1149124 'move' tmp[1149122] call_tmp[1149101])
    (1149128 '.=' this[1148912] _high[1143559] tmp[1149122])
    {
      const-val call_tmp[1149402]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1149404 'move' call_tmp[1149402](1149407 call ==[435744] _stride[1148950] 1))
      (1149411 call assert[210432] call_tmp[1149402])
    }
    (1149414 return _void[55])
  }
  function range(byteIndex,boundedHigh,false)[1185108].init[1184555](ref arg this[1184561]:range(byteIndex,boundedHigh,false)[1185108], const  ref arg _low[1184582]:byteIndex[28173], const  ref arg _high[1184591]:byteIndex[28173], const in arg _stride[1184599]:int(64)[13], const  ref arg _alignment[1184608]:byteIndex[28173], const in arg _aligned[1184612]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    val _formal_type_tmp_[1879791]:byteIndex[28173] "temp"
    val tmp[1184619]:byteIndex[28173] "dead after last mention" "temp" "type variable"
    const-val call_tmp[1184654]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (1184656 'move' call_tmp[1184654](1184659 call chpl__idxToInt[1029358] _low[1184582]))
    val call_tmp[1184661]:byteIndex[28173] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1184668]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    val tmp[1184675]:int(64)[13] "dead after last mention" "temp"
    (1184677 'move' tmp[1184675] call_tmp[1184654])
    (1184681 '.=' this[1184561] _low[1185070] tmp[1184675])
    const-val call_tmp[1184686]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (1184688 'move' call_tmp[1184686](1184691 call chpl__idxToInt[1029358] _high[1184591]))
    val call_tmp[1184693]:byteIndex[28173] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1184700]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    val tmp[1184707]:int(64)[13] "dead after last mention" "temp"
    (1184709 'move' tmp[1184707] call_tmp[1184686])
    (1184713 '.=' this[1184561] _high[1185075] tmp[1184707])
    {
      const-val call_tmp[1184987]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1184989 'move' call_tmp[1184987](1184992 call ==[435744] _stride[1184599] 1))
      (1184996 call assert[210432] call_tmp[1184987])
    }
    (1184999 return _void[55])
  }
  function init_default__alignment[1185366](ref arg _retArg[1910708]:_ref(byteIndex)[948948]) : void[4] "compiler generated" "default actual function" "fn returns via _retArg" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1879795]:byteIndex[28173] "temp"
    const-val ret[1185370]:byteIndex[28173] "dead after last mention" "RVV" "maybe param" "temp"
    const-val _alignment[1185375]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    const-val ret_tmp[1893870]:byteIndex[28173] "temp"
    (1185379 call chpl__intToIdx[28505] 0 ret_tmp[1893870])
    (1893873 'move' _alignment[1185375] ret_tmp[1893870])
    (1185386 'move' ret[1185370] _alignment[1185375])
    (1910710 '=' _retArg[1910708] ret[1185370])
    (1910712 return _void[55])
  }
  function init_default__stride[1185326]() : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved" "fn synchronization free"
  {
    val ret[1185328]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val _stride[1185333]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1185337]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1185339]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1185347 'move' tmp[1185337] 1)
    (1185350 'move' _stride[1185333] tmp[1185337])
    (1185355 'move' ret[1185328] _stride[1185333])
    (1185331 return ret[1185328])
  }
  function init_default__low[1185293](ref arg _retArg[1910696]:_ref(byteIndex)[948948]) : void[4] "compiler generated" "default actual function" "fn returns via _retArg" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1879793]:byteIndex[28173] "temp"
    const-val ret[1185297]:byteIndex[28173] "dead after last mention" "RVV" "maybe param" "temp"
    const-val _low[1185302]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    const-val ret_tmp[1893864]:byteIndex[28173] "temp"
    (1185306 call chpl__intToIdx[28505] 1 ret_tmp[1893864])
    (1893867 'move' _low[1185302] ret_tmp[1893864])
    (1185313 'move' ret[1185297] _low[1185302])
    (1910698 '=' _retArg[1910696] ret[1185297])
    (1910700 return _void[55])
  }
  function range(int(64),boundedHigh,false)[1187618].init[1188902](ref arg this[1188908]:range(int(64),boundedHigh,false)[1187618], const in arg _low[1188929]:int(64)[13], const in arg _high[1188938]:int(64)[13], const in arg _stride[1188946]:int(64)[13], const in arg _alignment[1188955]:int(64)[13], const in arg _aligned[1188959]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    val _formal_type_tmp_[1879799]:int(64)[13] "temp"
    val tmp[1188966]:int(64)[13] "dead after last mention" "temp" "type variable"
    const-val call_tmp[1189001]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (1189003 'move' call_tmp[1189001](1189006 call chpl__idxToInt[1027105] _low[1188929]))
    val call_tmp[1189008]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1189015]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    val tmp[1189022]:int(64)[13] "dead after last mention" "temp"
    (1189024 'move' tmp[1189022] call_tmp[1189001])
    (1189028 '.=' this[1188908] _low[1187580] tmp[1189022])
    const-val call_tmp[1189033]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (1189035 'move' call_tmp[1189033](1189038 call chpl__idxToInt[1027105] _high[1188938]))
    val call_tmp[1189040]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1189047]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    val tmp[1189054]:int(64)[13] "dead after last mention" "temp"
    (1189056 'move' tmp[1189054] call_tmp[1189033])
    (1189060 '.=' this[1188908] _high[1187585] tmp[1189054])
    {
      const-val call_tmp[1189334]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1189336 'move' call_tmp[1189334](1189339 call ==[435744] _stride[1188946] 1))
      (1189343 call assert[210432] call_tmp[1189334])
    }
    (1189346 return _void[55])
  }
  function init_default__alignment[1189557]() : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1879805]:int(64)[13] "temp"
    val ret[1189561]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val _alignment[1189566]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1189573]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1189575]:int(64)[13] "dead after last mention" "temp" "type variable"
    const-val call_tmp[1189589]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1189592 'move' call_tmp[1189589](1189570 call chpl__intToIdx[1027601]))
    (1189600 'move' tmp[1189573] call_tmp[1189589])
    (1189586 'move' _alignment[1189566] tmp[1189573])
    (1189595 'move' ret[1189561] _alignment[1189566])
    (1189564 return ret[1189561])
  }
  function init_default__stride[1189517]() : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved" "fn synchronization free"
  {
    val ret[1189519]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val _stride[1189524]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1189528]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1189530]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1189538 'move' tmp[1189528] 1)
    (1189541 'move' _stride[1189524] tmp[1189528])
    (1189546 'move' ret[1189519] _stride[1189524])
    (1189522 return ret[1189519])
  }
  function init_default__high[1189463]() : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1879803]:int(64)[13] "temp"
    val ret[1189467]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val _high[1189472]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1189479]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1189481]:int(64)[13] "dead after last mention" "temp" "type variable"
    const-val call_tmp[1189495]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1189498 'move' call_tmp[1189495](1189476 call chpl__intToIdx[1027601]))
    (1189506 'move' tmp[1189479] call_tmp[1189495])
    (1189492 'move' _high[1189472] tmp[1189479])
    (1189501 'move' ret[1189467] _high[1189472])
    (1189470 return ret[1189467])
  }
  function init_default__low[1189409]() : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1879801]:int(64)[13] "temp"
    val ret[1189413]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val _low[1189418]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1189425]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1189427]:int(64)[13] "dead after last mention" "temp" "type variable"
    const-val call_tmp[1189441]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1189444 'move' call_tmp[1189441](1189422 call chpl__intToIdx[1033290]))
    (1189452 'move' tmp[1189425] call_tmp[1189441])
    (1189438 'move' _low[1189418] tmp[1189425])
    (1189447 'move' ret[1189413] _low[1189418])
    (1189416 return ret[1189413])
  }
  function _ref(range(byteIndex,boundedHigh,false))[1185152].init[1193113](ref arg this[1193119]:_ref(range(byteIndex,boundedHigh,false))[1185152], const  ref arg _low[1193140]:byteIndex[28173], const  ref arg _high[1193149]:byteIndex[28173], const in arg _stride[1193157]:int(64)[13], const  ref arg _alignment[1193166]:byteIndex[28173], const in arg _aligned[1193170]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[1879807]:byteIndex[28173] "temp"
    val tmp[1193241]:byteIndex[28173] "dead after last mention" "temp" "type variable"
    const-val call_tmp[1193276]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (1193278 'move' call_tmp[1193276](1193281 call chpl__idxToInt[1029358] _low[1193140]))
    val call_tmp[1193283]:byteIndex[28173] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1193290]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    val tmp[1193297]:int(64)[13] "dead after last mention" "temp"
    (1193299 'move' tmp[1193297] call_tmp[1193276])
    (1193303 '.=' this[1193119] _low[1185070] tmp[1193297])
    const-val call_tmp[1193308]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (1193310 'move' call_tmp[1193308](1193313 call chpl__idxToInt[1029358] _high[1193149]))
    val call_tmp[1193315]:byteIndex[28173] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1193322]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    val tmp[1193329]:int(64)[13] "dead after last mention" "temp"
    (1193331 'move' tmp[1193329] call_tmp[1193308])
    (1193335 '.=' this[1193119] _high[1185075] tmp[1193329])
    {
      const-val call_tmp[1193609]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1193611 'move' call_tmp[1193609](1193614 call ==[435744] _stride[1193157] 1))
      (1193618 call assert[210432] call_tmp[1193609])
    }
    (1193621 return _void[55])
  }
  function range(int(64),bounded,true)[1570523].init[1569962](ref arg this[1569968]:range(int(64),bounded,true)[1570523], const in arg _low[1569989]:int(64)[13], const in arg _high[1569998]:int(64)[13], const in arg _stride[1570006]:int(64)[13], const in arg _alignment[1570015]:int(64)[13], const in arg _aligned[1570019]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    val _formal_type_tmp_[1880274]:int(64)[13] "temp"
    val tmp[1570086]:int(64)[13] "dead after last mention" "temp" "type variable"
    const-val call_tmp[1570121]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (1570123 'move' call_tmp[1570121](1570126 call chpl__idxToInt[1027105] _low[1569989]))
    val call_tmp[1570128]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1570135]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    val tmp[1570142]:int(64)[13] "dead after last mention" "temp"
    (1570144 'move' tmp[1570142] call_tmp[1570121])
    (1570148 '.=' this[1569968] _low[1570485] tmp[1570142])
    const-val call_tmp[1570153]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (1570155 'move' call_tmp[1570153](1570158 call chpl__idxToInt[1027105] _high[1569998]))
    val call_tmp[1570160]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1570167]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    val tmp[1570174]:int(64)[13] "dead after last mention" "temp"
    (1570176 'move' tmp[1570174] call_tmp[1570153])
    (1570180 '.=' this[1569968] _high[1570490] tmp[1570174])
    val tmp[1570185]:int(64)[13] "dead after last mention" "temp"
    val tmp[1570187]:int(64)[13] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp" "type variable"
    val tmp[1570205]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp" "type variable"
    val call_tmp[1570207]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1570753 'move' tmp[1570185] 0)
    (1570234 '.=' this[1569968] _stride[1570495] tmp[1570185])
    val tmp[1570239]:int(64)[13] "dead after last mention" "temp"
    val tmp[1570241]:int(64)[13] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp" "type variable"
    val tmp[1570259]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp" "type variable"
    val call_tmp[1570261]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1570756 'move' tmp[1570239] 0)
    (1570288 '.=' this[1569968] _alignment[1570505] tmp[1570239])
    val tmp[1570293]:bool[10] "dead after last mention" "temp"
    val tmp[1570295]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp" "type variable"
    (1570759 'move' tmp[1570293] 0)
    (1570328 '.=' this[1569968] _aligned[1570515] tmp[1570293])
    {
      ref call_tmp[1570342]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
      (1570344 'move' call_tmp[1570342](1570347 call _stride[1570655] this[1569968]))
      (1570351 call =[435443] call_tmp[1570342] _stride[1570006])
      ref call_tmp[1570355]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
      (1570357 'move' call_tmp[1570355](1570360 call _alignment[1570684] this[1569968]))
      const-val call_tmp[1570363]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1570365 'move' call_tmp[1570363](1570368 call chpl__idxToInt[1027105] _alignment[1570015]))
      (1570371 call =[435443] call_tmp[1570355] call_tmp[1570363])
      ref call_tmp[1570375]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
      (1570377 'move' call_tmp[1570375](1570380 call _aligned[1570714] this[1569968]))
      (1570384 call =[435290] call_tmp[1570375] _aligned[1570019])
    }
    (1570466 return _void[55])
  }
  function range(int(64),bounded,false)[1027003].init[1091453](ref arg this[1091459]:range(int(64),bounded,false)[1027003], const in arg _low[1091480]:int(64)[13], const in arg _high[1091489]:int(64)[13], const in arg _stride[1091491]:int(64)[13], const in arg _aligned[1091495]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    val _formal_type_tmp_[1879757]:int(64)[13] "temp"
    val tmp[1092063]:int(64)[13] "dead after last mention" "temp" "type variable"
    const-val call_tmp[1092098]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (1092100 'move' call_tmp[1092098](1092103 call chpl__idxToInt[1027105] _low[1091480]))
    val call_tmp[1092105]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1092112]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    val tmp[1092119]:int(64)[13] "dead after last mention" "temp"
    (1092121 'move' tmp[1092119] call_tmp[1092098])
    (1092125 '.=' this[1091459] _low[1026965] tmp[1092119])
    const-val call_tmp[1092130]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (1092132 'move' call_tmp[1092130](1092135 call chpl__idxToInt[1027105] _high[1091489]))
    val call_tmp[1092137]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1092144]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    val tmp[1092151]:int(64)[13] "dead after last mention" "temp"
    (1092153 'move' tmp[1092151] call_tmp[1092130])
    (1092157 '.=' this[1091459] _high[1026970] tmp[1092151])
    (1092323 return _void[55])
  }
  function range(int(64),bounded,false)[1027003].init[1094664](ref arg this[1094670]:range(int(64),bounded,false)[1027003], const in arg _low[1094691]:int(64)[13], const in arg _high[1094700]:int(64)[13]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    val _formal_type_tmp_[1879761]:int(64)[13] "temp"
    val tmp[1095202]:int(64)[13] "dead after last mention" "temp" "type variable"
    const-val call_tmp[1095237]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (1095239 'move' call_tmp[1095237](1095242 call chpl__idxToInt[1027105] _low[1094691]))
    val call_tmp[1095244]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1095251]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    val tmp[1095258]:int(64)[13] "dead after last mention" "temp"
    (1095260 'move' tmp[1095258] call_tmp[1095237])
    (1095264 '.=' this[1094670] _low[1026965] tmp[1095258])
    const-val call_tmp[1095269]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (1095271 'move' call_tmp[1095269](1095274 call chpl__idxToInt[1027105] _high[1094700]))
    val call_tmp[1095276]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1095283]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    val tmp[1095290]:int(64)[13] "dead after last mention" "temp"
    (1095292 'move' tmp[1095290] call_tmp[1095269])
    (1095296 '.=' this[1094670] _high[1026970] tmp[1095290])
    (1095462 return _void[55])
  }
  function _ref(range(byteIndex,bounded,false))[1025990].init=[1044724](ref arg this[1044730]:_ref(range(byteIndex,bounded,false))[1025990], const in arg other[1044732]:range(byteIndex,bounded,false)[1025981]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val call_tmp[1044740]:range(byteIndex,bounded,false)[1025981] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1044746]:byteIndex[28173] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val idxType[1044762]:byteIndex[28173] "dead at end of block" "insert auto destroy" "type variable"
    val tmp[1044781]:byteIndex[28173] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp" "type variable"
    val call_tmp[1044785]:range(byteIndex,bounded,false)[1025981] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1044791]:byteIndex[28173] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[1044827]:byteIndex[28173] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp" "type variable"
    val call_tmp[1044829]:range(byteIndex,bounded,false)[1025981] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1044856]:range(byteIndex,bounded,false)[1025981] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1044900]:range(byteIndex,bounded,false)[1025981] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1044928]:range(byteIndex,bounded,false)[1025981] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1044972]:range(byteIndex,bounded,false)[1025981] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val str[1045186]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val call_tmp[1045259]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1045278 'move' str[1045186] 1)
    ref call_tmp[1045283]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1045285 'move' call_tmp[1045283](1045288 call _low[1028529] other[1044732]))
    const-val call_tmp[1045291]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1045589]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1045593 'move' coerce_tmp[1045589](1045591 'deref' call_tmp[1045283]))
    const-val ret_tmp[1893810]:byteIndex[28173] "temp"
    (1045296 call chpl__intToIdx[28505] coerce_tmp[1045589] ret_tmp[1893810])
    (1893813 'move' call_tmp[1045291] ret_tmp[1893810])
    ref call_tmp[1045299]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1045301 'move' call_tmp[1045299](1045304 call _high[1028778] other[1044732]))
    const-val call_tmp[1045307]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1045597]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1045601 'move' coerce_tmp[1045597](1045599 'deref' call_tmp[1045299]))
    const-val ret_tmp[1893816]:byteIndex[28173] "temp"
    (1045312 call chpl__intToIdx[28505] coerce_tmp[1045597] ret_tmp[1893816])
    (1893819 'move' call_tmp[1045307] ret_tmp[1893816])
    const-val call_tmp[1045315]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1908874]:byteIndex[28173] "temp"
    (1045320 call alignment[1045624] other[1044732] ret_tmp[1908874])
    (1908877 'move' call_tmp[1045315] ret_tmp[1908874])
    const-val call_tmp[1045323]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1045325 'move' call_tmp[1045323](1045328 call chpl__idxToInt[1029358] call_tmp[1045315]))
    const-val call_tmp[1045330]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1893822]:byteIndex[28173] "temp"
    (1045335 call chpl__intToIdx[28505] call_tmp[1045323] ret_tmp[1893822])
    (1893825 'move' call_tmp[1045330] ret_tmp[1893822])
    (1045350 call init[1046095] this[1044730] call_tmp[1045291] call_tmp[1045307] str[1045186] call_tmp[1045330] 1)
    (1920432 call chpl__autoDestroy[1601936] call_tmp[1045330])
    (1920429 call chpl__autoDestroy[1601936] call_tmp[1045315])
    (1920426 call chpl__autoDestroy[1601936] call_tmp[1045307])
    (1920423 call chpl__autoDestroy[1601936] call_tmp[1045291])
    (1045365 return _void[55])
  }
  function _ref(range(int(64),bounded,false))[1027047].init=[1085220](ref arg this[1085226]:_ref(range(int(64),bounded,false))[1027047], const in arg other[1085228]:range(int(64),bounded,false)[1027003]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[1085236]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1085242]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val idxType[1085258]:int(64)[13] "dead at end of block" "insert auto destroy" "type variable"
    val tmp[1085277]:int(64)[13] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp" "type variable"
    val call_tmp[1085281]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1085287]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[1085323]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp" "type variable"
    val call_tmp[1085325]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1085352]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1085396]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1085424]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1085468]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val str[1085682]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val call_tmp[1085755]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1085774 'move' str[1085682] 1)
    ref call_tmp[1085779]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1085781 'move' call_tmp[1085779](1085784 call _low[1028641] other[1085228]))
    const-val call_tmp[1085787]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1086075]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1086079 'move' coerce_tmp[1086075](1086077 'deref' call_tmp[1085779]))
    (1085789 'move' call_tmp[1085787](1085792 call chpl__intToIdx[1027588] coerce_tmp[1086075]))
    ref call_tmp[1085795]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1085797 'move' call_tmp[1085795](1085800 call _high[1028849] other[1085228]))
    const-val call_tmp[1085803]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1086083]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1086087 'move' coerce_tmp[1086083](1086085 'deref' call_tmp[1085795]))
    (1085805 'move' call_tmp[1085803](1085808 call chpl__intToIdx[1027588] coerce_tmp[1086083]))
    const-val call_tmp[1085811]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1085813 'move' call_tmp[1085811](1085816 call alignment[1034440] other[1085228]))
    const-val call_tmp[1085819]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1085821 'move' call_tmp[1085819](1085824 call chpl__idxToInt[1027105] call_tmp[1085811]))
    const-val call_tmp[1085826]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1085828 'move' call_tmp[1085826](1085831 call chpl__intToIdx[1027588] call_tmp[1085819]))
    (1085846 call init[1086095] this[1085226] call_tmp[1085787] call_tmp[1085803] str[1085682] call_tmp[1085826] 1)
    (1085861 return _void[55])
  }
  function _ref(range(int(64),boundedLow,false))[1087798].init=[1129366](ref arg this[1129372]:_ref(range(int(64),boundedLow,false))[1087798], const in arg other[1129374]:range(int(64),boundedLow,false)[1087754]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[1129382]:range(int(64),boundedLow,false)[1087754] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1129388]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val idxType[1129404]:int(64)[13] "dead at end of block" "insert auto destroy" "type variable"
    val tmp[1129423]:int(64)[13] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp" "type variable"
    val call_tmp[1129427]:range(int(64),boundedLow,false)[1087754] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1129433]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[1129469]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp" "type variable"
    val call_tmp[1129471]:range(int(64),boundedLow,false)[1087754] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1129498]:range(int(64),boundedLow,false)[1087754] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1129542]:range(int(64),boundedLow,false)[1087754] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1129570]:range(int(64),boundedLow,false)[1087754] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1129614]:range(int(64),boundedLow,false)[1087754] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val str[1129828]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val call_tmp[1129901]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1129920 'move' str[1129828] 1)
    ref call_tmp[1129925]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1129927 'move' call_tmp[1129925](1129930 call _low[1090874] other[1129374]))
    const-val call_tmp[1129933]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1130422]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1130426 'move' coerce_tmp[1130422](1130424 'deref' call_tmp[1129925]))
    (1129935 'move' call_tmp[1129933](1129938 call chpl__intToIdx[1027588] coerce_tmp[1130422]))
    ref call_tmp[1129941]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1129943 'move' call_tmp[1129941](1129946 call _high[1093530] other[1129374]))
    const-val call_tmp[1129949]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1130430]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1130434 'move' coerce_tmp[1130430](1130432 'deref' call_tmp[1129941]))
    (1129951 'move' call_tmp[1129949](1129954 call chpl__intToIdx[1027588] coerce_tmp[1130430]))
    const-val call_tmp[1129957]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1129959 'move' call_tmp[1129957](1129962 call alignment[1128309] other[1129374]))
    const-val call_tmp[1129965]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1129967 'move' call_tmp[1129965](1129970 call chpl__idxToInt[1027105] call_tmp[1129957]))
    const-val call_tmp[1129972]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1129974 'move' call_tmp[1129972](1129977 call chpl__intToIdx[1027588] call_tmp[1129965]))
    (1129992 call init[1130442] this[1129372] call_tmp[1129933] call_tmp[1129949] str[1129828] call_tmp[1129972] 1)
    (1130007 return _void[55])
  }
  function _ref(range(byteIndex,boundedLow,false))[1143636].init=[1147537](ref arg this[1147543]:_ref(range(byteIndex,boundedLow,false))[1143636], const in arg other[1147545]:range(byteIndex,boundedLow,false)[1143592]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val call_tmp[1147553]:range(byteIndex,boundedLow,false)[1143592] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1147559]:byteIndex[28173] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val idxType[1147575]:byteIndex[28173] "dead at end of block" "insert auto destroy" "type variable"
    val tmp[1147594]:byteIndex[28173] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp" "type variable"
    val call_tmp[1147598]:range(byteIndex,boundedLow,false)[1143592] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1147604]:byteIndex[28173] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[1147640]:byteIndex[28173] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp" "type variable"
    val call_tmp[1147642]:range(byteIndex,boundedLow,false)[1143592] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1147669]:range(byteIndex,boundedLow,false)[1143592] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1147713]:range(byteIndex,boundedLow,false)[1143592] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1147741]:range(byteIndex,boundedLow,false)[1143592] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1147785]:range(byteIndex,boundedLow,false)[1143592] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val str[1147999]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val call_tmp[1148072]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1148091 'move' str[1147999] 1)
    ref call_tmp[1148096]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1148098 'move' call_tmp[1148096](1148101 call _low[1146357] other[1147545]))
    const-val call_tmp[1148104]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1148392]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1148396 'move' coerce_tmp[1148392](1148394 'deref' call_tmp[1148096]))
    const-val ret_tmp[1893846]:byteIndex[28173] "temp"
    (1148109 call chpl__intToIdx[28505] coerce_tmp[1148392] ret_tmp[1893846])
    (1893849 'move' call_tmp[1148104] ret_tmp[1893846])
    ref call_tmp[1148112]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1148114 'move' call_tmp[1148112](1148117 call _high[1146483] other[1147545]))
    const-val call_tmp[1148120]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1148400]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1148404 'move' coerce_tmp[1148400](1148402 'deref' call_tmp[1148112]))
    const-val ret_tmp[1893852]:byteIndex[28173] "temp"
    (1148125 call chpl__intToIdx[28505] coerce_tmp[1148400] ret_tmp[1893852])
    (1893855 'move' call_tmp[1148120] ret_tmp[1893852])
    const-val call_tmp[1148128]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1910536]:byteIndex[28173] "temp"
    (1148133 call alignment[1148427] other[1147545] ret_tmp[1910536])
    (1910539 'move' call_tmp[1148128] ret_tmp[1910536])
    const-val call_tmp[1148136]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1148138 'move' call_tmp[1148136](1148141 call chpl__idxToInt[1029358] call_tmp[1148128]))
    const-val call_tmp[1148143]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1893858]:byteIndex[28173] "temp"
    (1148148 call chpl__intToIdx[28505] call_tmp[1148136] ret_tmp[1893858])
    (1893861 'move' call_tmp[1148143] ret_tmp[1893858])
    (1148163 call init[1148906] this[1147543] call_tmp[1148104] call_tmp[1148120] str[1147999] call_tmp[1148143] 1)
    (1922222 call chpl__autoDestroy[1601936] call_tmp[1148143])
    (1922219 call chpl__autoDestroy[1601936] call_tmp[1148128])
    (1922216 call chpl__autoDestroy[1601936] call_tmp[1148120])
    (1922213 call chpl__autoDestroy[1601936] call_tmp[1148104])
    (1148178 return _void[55])
  }
  function _ref(range(byteIndex,boundedHigh,false))[1185152].init=[1191742](ref arg this[1191748]:_ref(range(byteIndex,boundedHigh,false))[1185152], const in arg other[1191750]:range(byteIndex,boundedHigh,false)[1185108]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val call_tmp[1191758]:range(byteIndex,boundedHigh,false)[1185108] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1191764]:byteIndex[28173] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val idxType[1191780]:byteIndex[28173] "dead at end of block" "insert auto destroy" "type variable"
    val tmp[1191799]:byteIndex[28173] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp" "type variable"
    val call_tmp[1191803]:range(byteIndex,boundedHigh,false)[1185108] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1191809]:byteIndex[28173] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[1191845]:byteIndex[28173] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp" "type variable"
    val call_tmp[1191847]:range(byteIndex,boundedHigh,false)[1185108] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1191874]:range(byteIndex,boundedHigh,false)[1185108] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1191918]:range(byteIndex,boundedHigh,false)[1185108] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1191946]:range(byteIndex,boundedHigh,false)[1185108] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1191990]:range(byteIndex,boundedHigh,false)[1185108] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val str[1192204]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val call_tmp[1192277]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1192296 'move' str[1192204] 1)
    ref call_tmp[1192301]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1192303 'move' call_tmp[1192301](1192306 call _low[1188701] other[1191750]))
    const-val call_tmp[1192309]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1192597]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1192601 'move' coerce_tmp[1192597](1192599 'deref' call_tmp[1192301]))
    const-val ret_tmp[1893882]:byteIndex[28173] "temp"
    (1192314 call chpl__intToIdx[28505] coerce_tmp[1192597] ret_tmp[1893882])
    (1893885 'move' call_tmp[1192309] ret_tmp[1893882])
    ref call_tmp[1192317]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1192319 'move' call_tmp[1192317](1192322 call _high[1188854] other[1191750]))
    const-val call_tmp[1192325]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1192605]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1192609 'move' coerce_tmp[1192605](1192607 'deref' call_tmp[1192317]))
    const-val ret_tmp[1893888]:byteIndex[28173] "temp"
    (1192330 call chpl__intToIdx[28505] coerce_tmp[1192605] ret_tmp[1893888])
    (1893891 'move' call_tmp[1192325] ret_tmp[1893888])
    const-val call_tmp[1192333]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1910858]:byteIndex[28173] "temp"
    (1192338 call alignment[1192850] other[1191750] ret_tmp[1910858])
    (1910861 'move' call_tmp[1192333] ret_tmp[1910858])
    const-val call_tmp[1192341]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1192343 'move' call_tmp[1192341](1192346 call chpl__idxToInt[1029358] call_tmp[1192333]))
    const-val call_tmp[1192348]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1893894]:byteIndex[28173] "temp"
    (1192353 call chpl__intToIdx[28505] call_tmp[1192341] ret_tmp[1893894])
    (1893897 'move' call_tmp[1192348] ret_tmp[1893894])
    (1192368 call init[1193113] this[1191748] call_tmp[1192309] call_tmp[1192325] str[1192204] call_tmp[1192348] 0)
    (1924494 call chpl__autoDestroy[1601936] call_tmp[1192348])
    (1924491 call chpl__autoDestroy[1601936] call_tmp[1192333])
    (1924488 call chpl__autoDestroy[1601936] call_tmp[1192325])
    (1924485 call chpl__autoDestroy[1601936] call_tmp[1192309])
    (1192383 return _void[55])
  }
  function chpl_build_bounded_range[455253](const in arg low[455260]:int(64)[13], const in arg high[455266]:int(64)[13], ref arg _retArg[1907700]:_ref(range(int(64),bounded,false))[1027047]) : void[4] "fn returns via _retArg" "resolved" "fn synchronization free"
  {
    const-val ret[509157]:range(int(64),bounded,false)[1027003] "dead after last mention" "RVV" "temp"
    val call_tmp[616928]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[616933]:range(int(64),bounded,false)[1027003] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1026214]:range(int(64),bounded,false)[1027003] "dead after last mention" "delay instantiation" "temp"
    const-val default_arg__stride[1027543]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (1027547 'move' default_arg__stride[1027543](1027545 call init_default__stride[1027511]))
    const-val default_arg__alignment[1027715]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (1027720 'move' default_arg__alignment[1027715](1027717 call init_default__alignment[1027551]))
    (1026217 call init[1026226] initTemp[1026214] low[455260] high[455266] default_arg__stride[1027543] default_arg__alignment[1027715] 0)
    (616936 'move' call_tmp[616933] initTemp[1026214])
    (509162 'move' ret[509157] call_tmp[616933])
    (1907702 '=' _retArg[1907700] ret[509157])
    (1907704 return _void[55])
  }
  function chpl_build_low_bounded_range[1087147](const in arg low[1087149]:int(64)[13], ref arg _retArg[1909576]:_ref(range(int(64),boundedLow,false))[1087798]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val ret[1087151]:range(int(64),boundedLow,false)[1087754] "dead after last mention" "RVV" "temp"
    val call_tmp[1087166]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1087172]:range(int(64),boundedLow,false)[1087754] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1087190]:range(int(64),boundedLow,false)[1087754] "dead after last mention" "delay instantiation" "temp"
    const-val default_arg__high[1087984]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (1087989 'move' default_arg__high[1087984](1087986 call init_default__high[1087939]))
    const-val default_arg__stride[1088025]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (1088029 'move' default_arg__stride[1088025](1088027 call init_default__stride[1087993]))
    const-val default_arg__alignment[1088078]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (1088083 'move' default_arg__alignment[1088078](1088080 call init_default__alignment[1088033]))
    (1087193 call init[1087201] initTemp[1087190] low[1087149] default_arg__high[1087984] default_arg__stride[1088025] default_arg__alignment[1088078] 0)
    (1087174 'move' call_tmp[1087172] initTemp[1087190])
    (1087182 'move' ret[1087151] call_tmp[1087172])
    (1909578 '=' _retArg[1909576] ret[1087151])
    (1909580 return _void[55])
  }
  function range(int(64),bounded,true)[1570523].stride[1571704](const in arg this[1571710]:range(int(64),bounded,true)[1570523]) : int(64)[13] "inline" "instantiated generic" "invisible fn" "method" "no parens" "resolved" "fn synchronization free"
  {
    val ret[1571717]:int(64)[13] "dead after last mention" "RVV" "temp"
    ref call_tmp[1571756]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    (1571758 'move' call_tmp[1571756](1571761 call _stride[1570655] this[1571710]))
    (1571764 'move' ret[1571717](1571766 'deref' call_tmp[1571756]))
    (1571768 return ret[1571717])
  }
  function range(int(64),bounded,false)[1027003].alignment[1034440](const in arg this[1034446]:range(int(64),bounded,false)[1027003]) : int(64)[13] "instantiated generic" "invisible fn" "method" "no doc" "no parens" "resolved" "fn synchronization free"
  {
    val ret[1034526]:int(64)[13] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1034556]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1034558 'move' call_tmp[1034556](1034561 call low[1028600] this[1034446]))
    (1034564 'move' ret[1034526] call_tmp[1034556])
    (1034568 return ret[1034526])
  }
  function range(byteIndex,bounded,false)[1025981].alignment[1045624](const in arg this[1045630]:range(byteIndex,bounded,false)[1025981], ref arg _retArg[1908880]:_ref(byteIndex)[948948]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "no parens" "resolved"
  {
    const-val ret[1045710]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1045854]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1908642]:byteIndex[28173] "temp"
    (1045859 call low[1033080] this[1045630] ret_tmp[1908642])
    (1908645 'move' call_tmp[1045854] ret_tmp[1908642])
    (1045862 'move' ret[1045710] call_tmp[1045854])
    (1908882 '=' _retArg[1908880] ret[1045710])
    (1908884 return _void[55])
  }
  function range(int(64),boundedLow,false)[1087754].alignment[1128309](const in arg this[1128315]:range(int(64),boundedLow,false)[1087754]) : int(64)[13] "instantiated generic" "invisible fn" "method" "no doc" "no parens" "resolved" "fn synchronization free"
  {
    val ret[1128395]:int(64)[13] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1128425]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1128427 'move' call_tmp[1128425](1128430 call low[1128232] this[1128315]))
    (1128433 'move' ret[1128395] call_tmp[1128425])
    (1128437 return ret[1128395])
  }
  function range(byteIndex,boundedLow,false)[1143592].alignment[1148427](const in arg this[1148433]:range(byteIndex,boundedLow,false)[1143592], ref arg _retArg[1910548]:_ref(byteIndex)[948948]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "no parens" "resolved"
  {
    const-val ret[1148513]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1148661]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1910460]:byteIndex[28173] "temp"
    (1148666 call low[1146316] this[1148433] ret_tmp[1910460])
    (1910463 'move' call_tmp[1148661] ret_tmp[1910460])
    (1148669 'move' ret[1148513] call_tmp[1148661])
    (1910550 '=' _retArg[1910548] ret[1148513])
    (1910552 return _void[55])
  }
  function range(int(64),boundedHigh,false)[1187618].alignment[1190783](const in arg this[1190789]:range(int(64),boundedHigh,false)[1187618]) : int(64)[13] "instantiated generic" "invisible fn" "method" "no doc" "no parens" "resolved" "fn synchronization free"
  {
    val ret[1190791]:int(64)[13] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1190799]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1190801 'move' call_tmp[1190799](1190807 call chpl_intToIdx[1190490] this[1190789] 0))
    (1190809 'move' ret[1190791] call_tmp[1190799])
    (1190813 return ret[1190791])
  }
  function range(byteIndex,boundedHigh,false)[1185108].alignment[1192850](const in arg this[1192856]:range(byteIndex,boundedHigh,false)[1185108], ref arg _retArg[1910870]:_ref(byteIndex)[948948]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "no parens" "resolved"
  {
    const-val ret[1192858]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1192866]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1910800]:byteIndex[28173] "temp"
    (1192874 call chpl_intToIdx[1188729] this[1192856] 0 ret_tmp[1910800])
    (1910803 'move' call_tmp[1192866] ret_tmp[1910800])
    (1192876 'move' ret[1192858] call_tmp[1192866])
    (1910872 '=' _retArg[1910870] ret[1192858])
    (1910874 return _void[55])
  }
  function range(int(64),bounded,true)[1570523].aligned[1572764](const in arg this[1572770]:range(int(64),bounded,true)[1570523]) : bool[10] "inline" "instantiated generic" "invisible fn" "method" "no parens" "resolved" "fn synchronization free"
  {
    val ret[1572777]:bool[10] "dead after last mention" "RVV" "temp"
    ref call_tmp[1572971]:_ref(bool)[937388] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    (1572973 'move' call_tmp[1572971](1572976 call _aligned[1570714] this[1572770]))
    (1572979 'move' ret[1572777](1572981 'deref' call_tmp[1572971]))
    (1572983 return ret[1572777])
  }
  function range(int(64),bounded,false)[1027003].first[1042820](const in arg this[1042826]:range(int(64),bounded,false)[1027003]) : int(64)[13] "inline" "instantiated generic" "invisible fn" "method" "no parens" "resolved" "fn synchronization free"
  {
    val ret[1042828]:int(64)[13] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1042836]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1042838 'move' call_tmp[1042836](1042841 call firstAsInt[1042861] this[1042826]))
    const-val call_tmp[1042844]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1042846 'move' call_tmp[1042844](1042852 call chpl_intToIdx[1028669] this[1042826] call_tmp[1042836]))
    (1042854 'move' ret[1042828] call_tmp[1042844])
    (1042858 return ret[1042828])
  }
  function range(int(64),bounded,false)[1027003].firstAsInt[1042861](const in arg this[1042867]:range(int(64),bounded,false)[1027003]) : int(64)[13] "inline" "instantiated generic" "invisible fn" "method" "no doc" "no parens" "resolved" "fn synchronization free"
  {
    val ret[1042869]:int(64)[13] "dead after last mention" "RVV" "temp"
    {
      ref call_tmp[1042901]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
      (1042903 'move' call_tmp[1042901](1042906 call _low[1028641] this[1042867]))
      (1042909 'move' ret[1042869](1042911 'deref' call_tmp[1042901]))
      gotoReturn _end_firstAsInt[1042978] _end_firstAsInt[1042978]
    }
    label _end_firstAsInt[1042978]
    (1042980 return ret[1042869])
  }
  function range(int(64),bounded,true)[1570523].firstAsInt[1571772](const in arg this[1571778]:range(int(64),bounded,true)[1570523]) : int(64)[13] "inline" "instantiated generic" "invisible fn" "method" "no doc" "no parens" "resolved" "fn synchronization free"
  {
    val ret[1571780]:int(64)[13] "dead after last mention" "RVV" "temp"
    {
      val tmp[1571827]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1571829]:bool[10] "dead after last mention" "maybe param" "temp"
      ref call_tmp[1571831]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
      (1571833 'move' call_tmp[1571831](1571836 call _stride[1570655] this[1571778]))
      const-val call_tmp[1571839]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1571901]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1571905 'move' coerce_tmp[1571901](1571903 'deref' call_tmp[1571831]))
      (1571841 'move' call_tmp[1571839](1571844 call >[437788] coerce_tmp[1571901] 0))
      (1571847 'move' tmp[1571829] call_tmp[1571839])
      if tmp[1571829]
      {
        const-val tmp[1571854]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        (1571856 'move' tmp[1571854](1571859 call alignedLowAsInt[1571908] this[1571778]))
        (1571862 'move' tmp[1571827] tmp[1571854])
      }
      {
        const-val tmp[1571868]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        (1571870 'move' tmp[1571868](1571873 call alignedHighAsInt[1572260] this[1571778]))
        (1571876 'move' tmp[1571827] tmp[1571868])
      }
      (1571882 'move' ret[1571780] tmp[1571827])
      gotoReturn _end_firstAsInt[1571889] _end_firstAsInt[1571889]
    }
    label _end_firstAsInt[1571889]
    (1571891 return ret[1571780])
  }
  function range(int(64),bounded,false)[1027003].last[1585719](const in arg this[1585725]:range(int(64),bounded,false)[1027003]) : int(64)[13] "inline" "instantiated generic" "invisible fn" "method" "no parens" "resolved" "fn synchronization free"
  {
    val ret[1585727]:int(64)[13] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1585735]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1585737 'move' call_tmp[1585735](1585740 call lastAsInt[1096136] this[1585725]))
    const-val call_tmp[1585743]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1585745 'move' call_tmp[1585743](1585751 call chpl_intToIdx[1028669] this[1585725] call_tmp[1585735]))
    (1585753 'move' ret[1585727] call_tmp[1585743])
    (1585757 return ret[1585727])
  }
  function range(int(64),bounded,false)[1027003].lastAsInt[1096136](const in arg this[1096142]:range(int(64),bounded,false)[1027003]) : int(64)[13] "inline" "instantiated generic" "invisible fn" "method" "no doc" "no parens" "resolved" "fn synchronization free"
  {
    val ret[1096144]:int(64)[13] "dead after last mention" "RVV" "temp"
    {
      ref call_tmp[1096176]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
      (1096178 'move' call_tmp[1096176](1096181 call _high[1028849] this[1096142]))
      (1096184 'move' ret[1096144](1096186 'deref' call_tmp[1096176]))
      gotoReturn _end_lastAsInt[1096253] _end_lastAsInt[1096253]
    }
    label _end_lastAsInt[1096253]
    (1096255 return ret[1096144])
  }
  function range(int(64),bounded,true)[1570523].lastAsInt[1572406](const in arg this[1572412]:range(int(64),bounded,true)[1570523]) : int(64)[13] "inline" "instantiated generic" "invisible fn" "method" "no doc" "no parens" "resolved" "fn synchronization free"
  {
    val ret[1572414]:int(64)[13] "dead after last mention" "RVV" "temp"
    {
      val tmp[1572461]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1572463]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1572465]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1572467 'move' call_tmp[1572465](1572470 call stride[1571704] this[1572412]))
      const-val call_tmp[1572473]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1572475 'move' call_tmp[1572473](1572478 call >[437788] call_tmp[1572465] 0))
      (1572481 'move' tmp[1572463] call_tmp[1572473])
      if tmp[1572463]
      {
        const-val tmp[1572488]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        (1572490 'move' tmp[1572488](1572493 call alignedHighAsInt[1572260] this[1572412]))
        (1572496 'move' tmp[1572461] tmp[1572488])
      }
      {
        const-val tmp[1572502]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        (1572504 'move' tmp[1572502](1572507 call alignedLowAsInt[1571908] this[1572412]))
        (1572510 'move' tmp[1572461] tmp[1572502])
      }
      (1572516 'move' ret[1572414] tmp[1572461])
      gotoReturn _end_lastAsInt[1572523] _end_lastAsInt[1572523]
    }
    label _end_lastAsInt[1572523]
    (1572525 return ret[1572414])
  }
  function range(int(64),bounded,false)[1027003].low[1028600](const in arg this[1028606]:range(int(64),bounded,false)[1027003]) : int(64)[13] "inline" "instantiated generic" "invisible fn" "method" "no parens" "resolved" "fn synchronization free"
  {
    val ret[1028608]:int(64)[13] "dead after last mention" "RVV" "temp"
    ref call_tmp[1028616]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    (1028618 'move' call_tmp[1028616](1028621 call _low[1028641] this[1028606]))
    const-val call_tmp[1028624]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1028711]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1028715 'move' coerce_tmp[1028711](1028713 'deref' call_tmp[1028616]))
    (1028626 'move' call_tmp[1028624](1028632 call chpl_intToIdx[1028669] this[1028606] coerce_tmp[1028711]))
    (1028634 'move' ret[1028608] call_tmp[1028624])
    (1028638 return ret[1028608])
  }
  function range(byteIndex,bounded,false)[1025981].low[1033080](const in arg this[1033086]:range(byteIndex,bounded,false)[1025981], ref arg _retArg[1908654]:_ref(byteIndex)[948948]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "no parens" "resolved" "fn synchronization free"
  {
    const-val ret[1033088]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    ref call_tmp[1033096]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    (1033098 'move' call_tmp[1033096](1033101 call _low[1028529] this[1033086]))
    const-val call_tmp[1033104]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1033164]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1033168 'move' coerce_tmp[1033164](1033166 'deref' call_tmp[1033096]))
    const-val ret_tmp[1908660]:byteIndex[28173] "temp"
    (1033112 call chpl_intToIdx[1033122] this[1033086] coerce_tmp[1033164] ret_tmp[1908660])
    (1908663 'move' call_tmp[1033104] ret_tmp[1908660])
    (1033114 'move' ret[1033088] call_tmp[1033104])
    (1908656 '=' _retArg[1908654] ret[1033088])
    (1908658 return _void[55])
  }
  function range(int(64),boundedLow,false)[1087754].low[1128232](const in arg this[1128238]:range(int(64),boundedLow,false)[1087754]) : int(64)[13] "inline" "instantiated generic" "invisible fn" "method" "no parens" "resolved" "fn synchronization free"
  {
    val ret[1128240]:int(64)[13] "dead after last mention" "RVV" "temp"
    ref call_tmp[1128248]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    (1128250 'move' call_tmp[1128248](1128253 call _low[1090874] this[1128238]))
    const-val call_tmp[1128256]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1128274]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1128278 'move' coerce_tmp[1128274](1128276 'deref' call_tmp[1128248]))
    (1128258 'move' call_tmp[1128256](1128264 call chpl_intToIdx[1094593] this[1128238] coerce_tmp[1128274]))
    (1128266 'move' ret[1128240] call_tmp[1128256])
    (1128270 return ret[1128240])
  }
  function range(byteIndex,boundedLow,false)[1143592].low[1146316](const in arg this[1146322]:range(byteIndex,boundedLow,false)[1143592], ref arg _retArg[1910472]:_ref(byteIndex)[948948]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "no parens" "resolved" "fn synchronization free"
  {
    const-val ret[1146324]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    ref call_tmp[1146332]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    (1146334 'move' call_tmp[1146332](1146337 call _low[1146357] this[1146322]))
    const-val call_tmp[1146340]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1146427]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1146431 'move' coerce_tmp[1146427](1146429 'deref' call_tmp[1146332]))
    const-val ret_tmp[1910478]:byteIndex[28173] "temp"
    (1146348 call chpl_intToIdx[1146385] this[1146322] coerce_tmp[1146427] ret_tmp[1910478])
    (1910481 'move' call_tmp[1146340] ret_tmp[1910478])
    (1146350 'move' ret[1146324] call_tmp[1146340])
    (1910474 '=' _retArg[1910472] ret[1146324])
    (1910476 return _void[55])
  }
  function range(byteIndex,boundedHigh,false)[1185108].low[1188660](const in arg this[1188666]:range(byteIndex,boundedHigh,false)[1185108], ref arg _retArg[1910782]:_ref(byteIndex)[948948]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "no parens" "resolved" "fn synchronization free"
  {
    const-val ret[1188668]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    ref call_tmp[1188676]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    (1188678 'move' call_tmp[1188676](1188681 call _low[1188701] this[1188666]))
    const-val call_tmp[1188684]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1188771]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1188775 'move' coerce_tmp[1188771](1188773 'deref' call_tmp[1188676]))
    const-val ret_tmp[1910788]:byteIndex[28173] "temp"
    (1188692 call chpl_intToIdx[1188729] this[1188666] coerce_tmp[1188771] ret_tmp[1910788])
    (1910791 'move' call_tmp[1188684] ret_tmp[1910788])
    (1188694 'move' ret[1188668] call_tmp[1188684])
    (1910784 '=' _retArg[1910782] ret[1188668])
    (1910786 return _void[55])
  }
  function range(int(64),bounded,true)[1570523].low[1573036](const in arg this[1573042]:range(int(64),bounded,true)[1570523]) : int(64)[13] "inline" "instantiated generic" "invisible fn" "method" "no parens" "resolved" "fn synchronization free"
  {
    val ret[1573044]:int(64)[13] "dead after last mention" "RVV" "temp"
    ref call_tmp[1573052]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    (1573054 'move' call_tmp[1573052](1573057 call _low[1571648] this[1573042]))
    const-val call_tmp[1573060]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1573120]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1573124 'move' coerce_tmp[1573120](1573122 'deref' call_tmp[1573052]))
    (1573062 'move' call_tmp[1573060](1573068 call chpl_intToIdx[1573078] this[1573042] coerce_tmp[1573120]))
    (1573070 'move' ret[1573044] call_tmp[1573060])
    (1573074 return ret[1573044])
  }
  function range(int(64),bounded,false)[1027003].high[1028808](const in arg this[1028814]:range(int(64),bounded,false)[1027003]) : int(64)[13] "inline" "instantiated generic" "invisible fn" "method" "no parens" "resolved" "fn synchronization free"
  {
    val ret[1028816]:int(64)[13] "dead after last mention" "RVV" "temp"
    ref call_tmp[1028824]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    (1028826 'move' call_tmp[1028824](1028829 call _high[1028849] this[1028814]))
    const-val call_tmp[1028832]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1028877]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1028881 'move' coerce_tmp[1028877](1028879 'deref' call_tmp[1028824]))
    (1028834 'move' call_tmp[1028832](1028840 call chpl_intToIdx[1028669] this[1028814] coerce_tmp[1028877]))
    (1028842 'move' ret[1028816] call_tmp[1028832])
    (1028846 return ret[1028816])
  }
  function range(byteIndex,bounded,false)[1025981].high[1033179](const in arg this[1033185]:range(byteIndex,bounded,false)[1025981], ref arg _retArg[1908690]:_ref(byteIndex)[948948]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "no parens" "resolved" "fn synchronization free"
  {
    const-val ret[1033187]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    ref call_tmp[1033195]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    (1033197 'move' call_tmp[1033195](1033200 call _high[1028778] this[1033185]))
    const-val call_tmp[1033203]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1033221]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1033225 'move' coerce_tmp[1033221](1033223 'deref' call_tmp[1033195]))
    const-val ret_tmp[1908666]:byteIndex[28173] "temp"
    (1033211 call chpl_intToIdx[1033122] this[1033185] coerce_tmp[1033221] ret_tmp[1908666])
    (1908669 'move' call_tmp[1033203] ret_tmp[1908666])
    (1033213 'move' ret[1033187] call_tmp[1033203])
    (1908692 '=' _retArg[1908690] ret[1033187])
    (1908694 return _void[55])
  }
  function range(byteIndex,boundedLow,false)[1143592].high[1146442](const in arg this[1146448]:range(byteIndex,boundedLow,false)[1143592], ref arg _retArg[1910502]:_ref(byteIndex)[948948]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "no parens" "resolved" "fn synchronization free"
  {
    const-val ret[1146450]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    ref call_tmp[1146458]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    (1146460 'move' call_tmp[1146458](1146463 call _high[1146483] this[1146448]))
    const-val call_tmp[1146466]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1146511]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1146515 'move' coerce_tmp[1146511](1146513 'deref' call_tmp[1146458]))
    const-val ret_tmp[1910484]:byteIndex[28173] "temp"
    (1146474 call chpl_intToIdx[1146385] this[1146448] coerce_tmp[1146511] ret_tmp[1910484])
    (1910487 'move' call_tmp[1146466] ret_tmp[1910484])
    (1146476 'move' ret[1146450] call_tmp[1146466])
    (1910504 '=' _retArg[1910502] ret[1146450])
    (1910506 return _void[55])
  }
  function range(byteIndex,boundedHigh,false)[1185108].high[1188813](const in arg this[1188819]:range(byteIndex,boundedHigh,false)[1185108], ref arg _retArg[1910824]:_ref(byteIndex)[948948]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "no parens" "resolved" "fn synchronization free"
  {
    const-val ret[1188821]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    ref call_tmp[1188829]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    (1188831 'move' call_tmp[1188829](1188834 call _high[1188854] this[1188819]))
    const-val call_tmp[1188837]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1188882]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1188886 'move' coerce_tmp[1188882](1188884 'deref' call_tmp[1188829]))
    const-val ret_tmp[1910794]:byteIndex[28173] "temp"
    (1188845 call chpl_intToIdx[1188729] this[1188819] coerce_tmp[1188882] ret_tmp[1910794])
    (1910797 'move' call_tmp[1188837] ret_tmp[1910794])
    (1188847 'move' ret[1188821] call_tmp[1188837])
    (1910826 '=' _retArg[1910824] ret[1188821])
    (1910828 return _void[55])
  }
  function range(int(64),boundedHigh,false)[1187618].high[1190448](const in arg this[1190454]:range(int(64),boundedHigh,false)[1187618]) : int(64)[13] "inline" "instantiated generic" "invisible fn" "method" "no parens" "resolved" "fn synchronization free"
  {
    val ret[1190456]:int(64)[13] "dead after last mention" "RVV" "temp"
    ref call_tmp[1190464]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    (1190466 'move' call_tmp[1190464](1190469 call _high[1188783] this[1190454]))
    const-val call_tmp[1190472]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1190532]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1190536 'move' coerce_tmp[1190532](1190534 'deref' call_tmp[1190464]))
    (1190474 'move' call_tmp[1190472](1190480 call chpl_intToIdx[1190490] this[1190454] coerce_tmp[1190532]))
    (1190482 'move' ret[1190456] call_tmp[1190472])
    (1190486 return ret[1190456])
  }
  function range(int(64),bounded,true)[1570523].high[1573130](const in arg this[1573136]:range(int(64),bounded,true)[1570523]) : int(64)[13] "inline" "instantiated generic" "invisible fn" "method" "no parens" "resolved" "fn synchronization free"
  {
    val ret[1573138]:int(64)[13] "dead after last mention" "RVV" "temp"
    ref call_tmp[1573146]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    (1573148 'move' call_tmp[1573146](1573151 call _high[1571676] this[1573136]))
    const-val call_tmp[1573154]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1573172]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1573176 'move' coerce_tmp[1573172](1573174 'deref' call_tmp[1573146]))
    (1573156 'move' call_tmp[1573154](1573162 call chpl_intToIdx[1573078] this[1573136] coerce_tmp[1573172]))
    (1573164 'move' ret[1573138] call_tmp[1573154])
    (1573168 return ret[1573138])
  }
  function range(int(64),bounded,false)[1027003].alignedLow[1105050](const in arg this[1105056]:range(int(64),bounded,false)[1027003]) : int(64)[13] "inline" "instantiated generic" "invisible fn" "method" "no parens" "resolved" "fn synchronization free"
  {
    val ret[1105063]:int(64)[13] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1105073]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1105075 'move' call_tmp[1105073](1105078 call alignedLowAsInt[1036419] this[1105056]))
    const-val call_tmp[1105081]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1105083 'move' call_tmp[1105081](1105089 call chpl_intToIdx[1028669] this[1105056] call_tmp[1105073]))
    val call_tmp[1105091]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1105112 'move' ret[1105063] call_tmp[1105081])
    (1105104 return ret[1105063])
  }
  function range(int(64),boundedLow,false)[1087754].alignedLow[1142381](const in arg this[1142387]:range(int(64),boundedLow,false)[1087754]) : int(64)[13] "inline" "instantiated generic" "invisible fn" "method" "no parens" "resolved" "fn synchronization free"
  {
    val ret[1142394]:int(64)[13] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1142404]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1142406 'move' call_tmp[1142404](1142409 call alignedLowAsInt[1137469] this[1142387]))
    const-val call_tmp[1142412]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1142414 'move' call_tmp[1142412](1142420 call chpl_intToIdx[1094593] this[1142387] call_tmp[1142404]))
    val call_tmp[1142422]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1142443 'move' ret[1142394] call_tmp[1142412])
    (1142435 return ret[1142394])
  }
  function range(int(64),bounded,false)[1027003].alignedLowAsInt[1036419](const in arg this[1036425]:range(int(64),bounded,false)[1027003]) : int(64)[13] "inline" "instantiated generic" "invisible fn" "method" "no doc" "no parens" "resolved" "fn synchronization free"
  {
    val ret[1036427]:int(64)[13] "dead after last mention" "RVV" "temp"
    {
      ref call_tmp[1036459]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
      (1036461 'move' call_tmp[1036459](1036464 call _low[1028641] this[1036425]))
      (1036467 'move' ret[1036427](1036469 'deref' call_tmp[1036459]))
      gotoReturn _end_alignedLowAsInt[1036530] _end_alignedLowAsInt[1036530]
    }
    label _end_alignedLowAsInt[1036530]
    (1036532 return ret[1036427])
  }
  function range(int(64),boundedLow,false)[1087754].alignedLowAsInt[1137469](const in arg this[1137475]:range(int(64),boundedLow,false)[1087754]) : int(64)[13] "inline" "instantiated generic" "invisible fn" "method" "no doc" "no parens" "resolved" "fn synchronization free"
  {
    val ret[1137477]:int(64)[13] "dead after last mention" "RVV" "temp"
    {
      ref call_tmp[1137509]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
      (1137511 'move' call_tmp[1137509](1137514 call _low[1090874] this[1137475]))
      (1137517 'move' ret[1137477](1137519 'deref' call_tmp[1137509]))
      gotoReturn _end_alignedLowAsInt[1137580] _end_alignedLowAsInt[1137580]
    }
    label _end_alignedLowAsInt[1137580]
    (1137582 return ret[1137477])
  }
  function range(byteIndex,boundedLow,false)[1143592].alignedLowAsInt[1156168](const in arg this[1156174]:range(byteIndex,boundedLow,false)[1143592]) : int(64)[13] "inline" "instantiated generic" "invisible fn" "method" "no doc" "no parens" "resolved"
  {
    val ret[1156176]:int(64)[13] "dead after last mention" "RVV" "temp"
    {
      ref call_tmp[1156208]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
      (1156210 'move' call_tmp[1156208](1156213 call _low[1146357] this[1156174]))
      (1156216 'move' ret[1156176](1156218 'deref' call_tmp[1156208]))
      gotoReturn _end_alignedLowAsInt[1156279] _end_alignedLowAsInt[1156279]
    }
    label _end_alignedLowAsInt[1156279]
    (1156281 return ret[1156176])
  }
  function range(int(64),bounded,true)[1570523].alignedLowAsInt[1571908](const in arg this[1571914]:range(int(64),bounded,true)[1570523]) : int(64)[13] "inline" "instantiated generic" "invisible fn" "method" "no doc" "no parens" "resolved" "fn synchronization free"
  {
    val ret[1571916]:int(64)[13] "dead after last mention" "RVV" "temp"
    {
      ref call_tmp[1571963]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
      (1571965 'move' call_tmp[1571963](1571968 call _low[1571648] this[1571914]))
      ref call_tmp[1571971]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
      (1571973 'move' call_tmp[1571971](1571976 call _alignment[1570684] this[1571914]))
      ref call_tmp[1571979]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
      (1571981 'move' call_tmp[1571979](1571984 call _low[1571648] this[1571914]))
      const-val call_tmp[1571987]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1571989 'move' call_tmp[1571987](1571992 call stride[1571704] this[1571914]))
      const-val call_tmp[1571995]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1572229]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1572233 'move' coerce_tmp[1572229](1572231 'deref' call_tmp[1571971]))
      const-val coerce_tmp[1572235]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1572239 'move' coerce_tmp[1572235](1572237 'deref' call_tmp[1571979]))
      (1571997 'move' call_tmp[1571995](1572000 call chpl__diffMod[1572034] coerce_tmp[1572229] coerce_tmp[1572235] call_tmp[1571987]))
      const-val call_tmp[1572004]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1572253]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1572257 'move' coerce_tmp[1572253](1572255 'deref' call_tmp[1571963]))
      (1572006 'move' call_tmp[1572004](1572009 call +[439752] coerce_tmp[1572253] call_tmp[1571995]))
      (1572012 'move' ret[1571916] call_tmp[1572004])
      gotoReturn _end_alignedLowAsInt[1572019] _end_alignedLowAsInt[1572019]
    }
    label _end_alignedLowAsInt[1572019]
    (1572021 return ret[1571916])
  }
  function range(int(64),bounded,false)[1027003].alignedHigh[1105114](const in arg this[1105120]:range(int(64),bounded,false)[1027003]) : int(64)[13] "inline" "instantiated generic" "invisible fn" "method" "no parens" "resolved" "fn synchronization free"
  {
    val ret[1105127]:int(64)[13] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1105137]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1105139 'move' call_tmp[1105137](1105142 call alignedHighAsInt[1036296] this[1105120]))
    const-val call_tmp[1105145]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1105147 'move' call_tmp[1105145](1105153 call chpl_intToIdx[1028669] this[1105120] call_tmp[1105137]))
    val call_tmp[1105155]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1105176 'move' ret[1105127] call_tmp[1105145])
    (1105168 return ret[1105127])
  }
  function range(int(64),bounded,false)[1027003].alignedHighAsInt[1036296](const in arg this[1036302]:range(int(64),bounded,false)[1027003]) : int(64)[13] "inline" "instantiated generic" "invisible fn" "method" "no doc" "no parens" "resolved" "fn synchronization free"
  {
    val ret[1036304]:int(64)[13] "dead after last mention" "RVV" "temp"
    {
      ref call_tmp[1036336]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
      (1036338 'move' call_tmp[1036336](1036341 call _high[1028849] this[1036302]))
      (1036344 'move' ret[1036304](1036346 'deref' call_tmp[1036336]))
      gotoReturn _end_alignedHighAsInt[1036407] _end_alignedHighAsInt[1036407]
    }
    label _end_alignedHighAsInt[1036407]
    (1036409 return ret[1036304])
  }
  function range(int(64),bounded,true)[1570523].alignedHighAsInt[1572260](const in arg this[1572266]:range(int(64),bounded,true)[1570523]) : int(64)[13] "inline" "instantiated generic" "invisible fn" "method" "no doc" "no parens" "resolved" "fn synchronization free"
  {
    val ret[1572268]:int(64)[13] "dead after last mention" "RVV" "temp"
    {
      ref call_tmp[1572315]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
      (1572317 'move' call_tmp[1572315](1572320 call _high[1571676] this[1572266]))
      ref call_tmp[1572323]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
      (1572325 'move' call_tmp[1572323](1572328 call _high[1571676] this[1572266]))
      ref call_tmp[1572331]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
      (1572333 'move' call_tmp[1572331](1572336 call _alignment[1570684] this[1572266]))
      const-val call_tmp[1572339]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1572341 'move' call_tmp[1572339](1572344 call stride[1571704] this[1572266]))
      const-val call_tmp[1572347]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1572386]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1572390 'move' coerce_tmp[1572386](1572388 'deref' call_tmp[1572323]))
      const-val coerce_tmp[1572392]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1572396 'move' coerce_tmp[1572392](1572394 'deref' call_tmp[1572331]))
      (1572349 'move' call_tmp[1572347](1572352 call chpl__diffMod[1572034] coerce_tmp[1572386] coerce_tmp[1572392] call_tmp[1572339]))
      const-val call_tmp[1572356]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1572399]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1572403 'move' coerce_tmp[1572399](1572401 'deref' call_tmp[1572315]))
      (1572358 'move' call_tmp[1572356](1572361 call -[440532] coerce_tmp[1572399] call_tmp[1572347]))
      (1572364 'move' ret[1572268] call_tmp[1572356])
      gotoReturn _end_alignedHighAsInt[1572371] _end_alignedHighAsInt[1572371]
    }
    label _end_alignedHighAsInt[1572371]
    (1572373 return ret[1572268])
  }
  function range(int(64),boundedLow,false)[1087754].isEmpty[1092981](const in arg this[1092987]:range(int(64),boundedLow,false)[1087754]) : bool[10] "inline" "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free"
  {
    val ret[1092989]:bool[10] "dead after last mention" "RVV" "temp"
    {
      (1093159 'move' ret[1092989] 0)
      gotoReturn _end_isEmpty[1093166] _end_isEmpty[1093166]
    }
    label _end_isEmpty[1093166]
    (1093168 return ret[1092989])
  }
  function range(int(64),bounded,false)[1027003].isEmpty[1104844](const in arg this[1104850]:range(int(64),bounded,false)[1027003]) : bool[10] "inline" "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free"
  {
    val ret[1104852]:bool[10] "dead after last mention" "RVV" "temp"
    {
      const-val tmp[1104961]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val tmp[1104979]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[1104981]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1104983 'move' call_tmp[1104981](1104986 call alignedLow[1105050] this[1104850]))
      const-val call_tmp[1104989]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1104991 'move' call_tmp[1104989](1104994 call alignedHigh[1105114] this[1104850]))
      const-val call_tmp[1104997]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1104999 'move' call_tmp[1104997](1105002 call >[437788] call_tmp[1104981] call_tmp[1104989]))
      (1105005 'move' tmp[1104979] call_tmp[1104997])
      (1105010 'move' tmp[1104961] tmp[1104979])
      (1105022 'move' ret[1104852] tmp[1104961])
      gotoReturn _end_isEmpty[1105029] _end_isEmpty[1105029]
    }
    label _end_isEmpty[1105029]
    (1105031 return ret[1104852])
  }
  function range(int(64),bounded,false)[1027003].size[1035978](const in arg this[1035984]:range(int(64),bounded,false)[1027003]) : int(64)[13] "instantiated generic" "invisible fn" "method" "no parens" "resolved" "fn synchronization free"
  {
    val ret[1035991]:int(64)[13] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1036028]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1036030 'move' call_tmp[1036028](1036033 call alignedHighAsInt[1036296] this[1035984]))
    const-val ah[1036036]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1036038 'move' ah[1036036] call_tmp[1036028])
    const-val call_tmp[1036041]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1036043 'move' call_tmp[1036041](1036046 call alignedLowAsInt[1036419] this[1035984]))
    const-val al[1036049]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1036051 'move' al[1036049] call_tmp[1036041])
    const-val call_tmp[1036055]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1036057 'move' call_tmp[1036055](1036060 call >[437788] al[1036049] ah[1036036]))
    const-val call_tmp[1036063]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1036065 'move' call_tmp[1036063] call_tmp[1036055])
    if call_tmp[1036063]
    {
      val call_tmp[1036072]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[1036088]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1036096 'move' ret[1035991] 0)
      gotoReturn _end_size[1036200] _end_size[1036200]
    }
    val call_tmp[1036104]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val s[1036135]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1036137 'move' s[1036135] 1)
    const-val call_tmp[1036141]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1036143 'move' call_tmp[1036141](1036146 call -[440532] ah[1036036] al[1036049]))
    const-val call_tmp[1036149]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1036151 'move' call_tmp[1036149](1036154 call /[442796] call_tmp[1036141] s[1036135]))
    val call_tmp[1036157]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1036173]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1036175 'move' call_tmp[1036173](1036178 call +[949855] call_tmp[1036149]))
    val call_tmp[1036181]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1037156 'move' ret[1035991] call_tmp[1036173])
    gotoReturn _end_size[1036200] _end_size[1036200]
    label _end_size[1036200]
    (1036202 return ret[1035991])
  }
  function range(int(64),bounded,false)[1027003].hasFirst[1104666](const in arg this[1104672]:range(int(64),bounded,false)[1027003]) : bool[10] "inline" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    val ret[1104674]:bool[10] "dead after last mention" "RVV" "temp"
    const-val tmp[1104704]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[1104728]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    const-val call_tmp[1104730]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1104732 'move' call_tmp[1104730](1104738 call isEmpty[1104844] this[1104672]))
    (1104739 'move' tmp[1104728] call_tmp[1104730])
    (1104744 'move' tmp[1104704] tmp[1104728])
    val tmp[1104750]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1104752]:bool[10] "dead after last mention" "maybe param" "temp"
    (1104754 'move' tmp[1104752] tmp[1104704])
    if tmp[1104752]
    {
      (1104761 'move' tmp[1104750] 0)
    }
    {
      (1104824 'move' tmp[1104750] 1)
    }
    (1104830 'move' ret[1104674] tmp[1104750])
    (1104834 return ret[1104674])
  }
  function range(int(64),boundedLow,false)[1087754].hasLast[1092803](const in arg this[1092809]:range(int(64),boundedLow,false)[1087754]) : bool[10] "inline" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    val ret[1092811]:bool[10] "dead after last mention" "RVV" "temp"
    const-val tmp[1092841]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[1092865]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    const-val call_tmp[1092867]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1092869 'move' call_tmp[1092867](1092875 call isEmpty[1092981] this[1092809]))
    (1092876 'move' tmp[1092865] call_tmp[1092867])
    (1092881 'move' tmp[1092841] tmp[1092865])
    val tmp[1092887]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1092889]:bool[10] "dead after last mention" "maybe param" "temp"
    (1092891 'move' tmp[1092889] tmp[1092841])
    if tmp[1092889]
    {
      (1092898 'move' tmp[1092887] 0)
    }
    {
      (1092961 'move' tmp[1092887] 0)
    }
    (1092967 'move' ret[1092811] tmp[1092887])
    (1092971 return ret[1092811])
  }
  function range(int(64),boundedLow,false)[1087754].isNaturallyAligned[1136952](const in arg this[1136958]:range(int(64),boundedLow,false)[1087754]) : bool[10] "inline" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    val ret[1137045]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1137438]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1137440 'move' call_tmp[1137438](1137443 call alignedLowAsInt[1137469] this[1136958]))
    ref call_tmp[1137446]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    (1137448 'move' call_tmp[1137446](1137451 call _low[1090874] this[1136958]))
    const-val call_tmp[1137454]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1137593]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1137597 'move' coerce_tmp[1137593](1137595 'deref' call_tmp[1137446]))
    (1137456 'move' call_tmp[1137454](1137459 call ==[435744] call_tmp[1137438] coerce_tmp[1137593]))
    (1137462 'move' ret[1137045] call_tmp[1137454])
    (1137466 return ret[1137045])
  }
  function range(byteIndex,boundedLow,false)[1143592].isNaturallyAligned[1155651](const in arg this[1155657]:range(byteIndex,boundedLow,false)[1143592]) : bool[10] "inline" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    val ret[1155744]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1156137]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1156139 'move' call_tmp[1156137](1156142 call alignedLowAsInt[1156168] this[1155657]))
    ref call_tmp[1156145]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    (1156147 'move' call_tmp[1156145](1156150 call _low[1146357] this[1155657]))
    const-val call_tmp[1156153]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1156292]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1156296 'move' coerce_tmp[1156292](1156294 'deref' call_tmp[1156145]))
    (1156155 'move' call_tmp[1156153](1156158 call ==[435744] call_tmp[1156137] coerce_tmp[1156292]))
    (1156161 'move' ret[1155744] call_tmp[1156153])
    (1156165 return ret[1155744])
  }
  function range(int(64),bounded,true)[1570523].isAmbiguous[1572580](const in arg this[1572586]:range(int(64),bounded,true)[1570523]) : bool[10] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    val ret[1572593]:bool[10] "dead after last mention" "RVV" "temp"
    const-val tmp[1572603]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1572605]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1572607 'move' call_tmp[1572605](1572610 call aligned[1572764] this[1572586]))
    (1572613 'move' tmp[1572603](1572616 call ![7494] call_tmp[1572605]))
    val tmp[1572631]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1572633]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1572635]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1572637 'move' call_tmp[1572635] tmp[1572603])
    (1572642 'move' tmp[1572633] call_tmp[1572635])
    if tmp[1572633]
    {
      const-val tmp[1572649]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1572651]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1572653 'move' call_tmp[1572651](1572656 call stride[1571704] this[1572586]))
      (1572659 'move' tmp[1572649](1572662 call >[437788] call_tmp[1572651] 1))
      val tmp[1572678]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1572680]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1572682]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1572684 'move' call_tmp[1572682] tmp[1572649])
      (1572689 'move' tmp[1572680] call_tmp[1572682])
      if tmp[1572680]
      {
        (1572696 'move' tmp[1572678] 1)
      }
      {
        const-val tmp[1572702]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1572704]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1572706 'move' call_tmp[1572704](1572709 call stride[1571704] this[1572586]))
        const-val call_tmp[1572719]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1572721 'move' call_tmp[1572719](1572724 call <[1572999] call_tmp[1572704]))
        (1572727 'move' tmp[1572702] call_tmp[1572719])
        (1572732 'move' tmp[1572678] tmp[1572702])
      }
      const-val tmp[1572738]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      (1572740 'move' tmp[1572738] tmp[1572678])
      (1572745 'move' tmp[1572631] tmp[1572738])
    }
    {
      (1572751 'move' tmp[1572631] 0)
    }
    (1572757 'move' ret[1572593] tmp[1572631])
    (1572761 return ret[1572593])
  }
  function range(int(64),bounded,false)[1027003].contains[1037162](const in arg this[1037168]:range(int(64),bounded,false)[1027003], const in arg ind[1037175]:int(64)[13]) : bool[10] "inline" "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free"
  {
    val ret[1037177]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1337603]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1337605 'move' call_tmp[1337603](1337608 call chpl__idxToInt[1027105] ind[1037175]))
    const-val i[1337610]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1337612 'move' i[1337610] call_tmp[1337603])
    {
      ref call_tmp[1337634]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
      (1337636 'move' call_tmp[1337634](1337639 call _high[1028849] this[1037168]))
      const-val call_tmp[1337642]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1337846]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1337850 'move' coerce_tmp[1337846](1337848 'deref' call_tmp[1337634]))
      (1337644 'move' call_tmp[1337642](1337647 call >[437788] i[1337610] coerce_tmp[1337846]))
      const-val call_tmp[1337650]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1337652 'move' call_tmp[1337650] call_tmp[1337642])
      if call_tmp[1337650]
      {
        (1337659 'move' ret[1037177] 0)
        gotoReturn _end_contains[1337818] _end_contains[1337818]
      }
    }
    {
      ref call_tmp[1337685]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
      (1337687 'move' call_tmp[1337685](1337690 call _low[1028641] this[1037168]))
      const-val call_tmp[1337693]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1337859]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1337863 'move' coerce_tmp[1337859](1337861 'deref' call_tmp[1337685]))
      (1337695 'move' call_tmp[1337693](1337698 call <[437568] i[1337610] coerce_tmp[1337859]))
      const-val call_tmp[1337701]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1337703 'move' call_tmp[1337701] call_tmp[1337693])
      if call_tmp[1337701]
      {
        (1337710 'move' ret[1037177] 0)
        gotoReturn _end_contains[1337818] _end_contains[1337818]
      }
    }
    (1337814 'move' ret[1037177] 1)
    label _end_contains[1337818]
    (1337820 return ret[1037177])
  }
  function range(int(64),bounded,false)[1027003].contains[1037184](const in arg this[1037190]:range(int(64),bounded,false)[1027003], const in arg other[1037192]:range(int(64),bounded,false)[1027003]) : bool[10] "inline" "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free"
  {
    val ret[1037194]:bool[10] "dead after last mention" "RVV" "temp"
    {
    }
    const-val call_tmp[1037590]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1908702]:range(int(64),bounded,false)[1027003] "temp"
    (1037595 call this[1037637] this[1037190] other[1037192] ret_tmp[1908702])
    (1908705 'move' call_tmp[1037590] ret_tmp[1908702])
    const-val call_tmp[1037597]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1037599 'move' call_tmp[1037597](1037602 call ==[1042101] other[1037192] call_tmp[1037590]))
    (1037605 'move' ret[1037194] call_tmp[1037597])
    (1920370 call chpl__autoDestroy[1407763] call_tmp[1037590])
    label _end_contains[1037609]
    (1037611 return ret[1037194])
  }
  function ==[1042101](const in arg r1[1042103]:range(int(64),bounded,false)[1027003], const in arg r2[1042105]:range(int(64),bounded,false)[1027003]) : bool[10] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1042130]:bool[10] "dead after last mention" "RVV" "temp"
    {
      const-val call_tmp[1042239]:int(64)[13] "dead at end of block" "maybe param" "temp"
      (1042241 'move' call_tmp[1042239](1042244 call size[1035978] r1[1042103]))
      const-val len[1042247]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      (1042249 'move' len[1042247] call_tmp[1042239])
      const-val call_tmp[1042252]:int(64)[13] "dead at end of block" "maybe param" "temp"
      (1042254 'move' call_tmp[1042252](1042257 call size[1035978] r2[1042105]))
      const-val l2[1042260]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      (1042262 'move' l2[1042260] call_tmp[1042252])
      const-val call_tmp[1042266]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1042268 'move' call_tmp[1042266](1042271 call !=[436128] len[1042247] l2[1042260]))
      const-val call_tmp[1042274]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1042276 'move' call_tmp[1042274] call_tmp[1042266])
      if call_tmp[1042274]
      {
        (1042283 'move' ret[1042130] 0)
        gotoReturn _end_==[1042600] _end_==[1042600]
      }
      const-val call_tmp[1042291]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1042293 'move' call_tmp[1042291](1042296 call ==[435744] len[1042247] 0))
      const-val call_tmp[1042299]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1042301 'move' call_tmp[1042299] call_tmp[1042291])
      if call_tmp[1042299]
      {
        (1042308 'move' ret[1042130] 1)
        gotoReturn _end_==[1042600] _end_==[1042600]
      }
      const-val call_tmp[1042316]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1042318 'move' call_tmp[1042316](1042321 call first[1042820] r1[1042103]))
      const-val call_tmp[1042324]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1042326 'move' call_tmp[1042324](1042329 call first[1042820] r2[1042105]))
      const-val call_tmp[1042332]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1042334 'move' call_tmp[1042332](1042337 call !=[436128] call_tmp[1042316] call_tmp[1042324]))
      const-val call_tmp[1042340]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1042342 'move' call_tmp[1042340] call_tmp[1042332])
      if call_tmp[1042340]
      {
        (1042349 'move' ret[1042130] 0)
        gotoReturn _end_==[1042600] _end_==[1042600]
      }
      const-val call_tmp[1042357]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1042359 'move' call_tmp[1042357](1042362 call ==[435744] len[1042247] 1))
      const-val call_tmp[1042365]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1042367 'move' call_tmp[1042365] call_tmp[1042357])
      if call_tmp[1042365]
      {
        (1042374 'move' ret[1042130] 1)
        gotoReturn _end_==[1042600] _end_==[1042600]
      }
      (1042423 'move' ret[1042130] 1)
      gotoReturn _end_==[1042600] _end_==[1042600]
    }
    label _end_==[1042600]
    (1042602 return ret[1042130])
  }
  function !=[1842744](const in arg r1[1842746]:range(int(64),bounded,false)[1027003], const in arg r2[1842748]:range(int(64),bounded,false)[1027003]) : bool[10] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1842750]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1842760]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1842762 'move' call_tmp[1842760](1842765 call ==[1042101] r1[1842746] r2[1842748]))
    const-val call_tmp[1842768]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1842770 'move' call_tmp[1842768](1842773 call ![7494] call_tmp[1842760]))
    (1842775 'move' ret[1842750] call_tmp[1842768])
    (1842779 return ret[1842750])
  }
  function range(int(64),bounded,false)[1027003].safeCast[1297206](const in arg this[1297212]:range(int(64),bounded,false)[1027003], ref arg _retArg[1913358]:_ref(range(int(64),bounded,false))[1027047]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1879961]:range(int(64),bounded,false)[1027003] "temp"
    const-val ret[1297216]:range(int(64),bounded,false)[1027003] "dead after last mention" "RVV" "temp"
    val tmp[1297241]:range(int(64),bounded,false)[1027003] "dead at end of block" "insert auto destroy"
    const-val default_arg__low[1297636]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (1297641 'move' default_arg__low[1297636](1297638 call init_default__low[1033253]))
    const-val default_arg__high[1297645]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (1297650 'move' default_arg__high[1297645](1297647 call init_default__high[1033394]))
    const-val default_arg__stride[1297654]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (1297658 'move' default_arg__stride[1297654](1297656 call init_default__stride[1027511]))
    const-val default_arg__alignment[1297662]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (1297667 'move' default_arg__alignment[1297662](1297664 call init_default__alignment[1027551]))
    (1297615 call init[1026226] tmp[1297241] default_arg__low[1297636] default_arg__high[1297645] default_arg__stride[1297654] default_arg__alignment[1297662] 0)
    {
    }
    ref call_tmp[1297465]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (1297467 'move' call_tmp[1297465](1297470 call _low[1028641] tmp[1297241]))
    ref call_tmp[1297473]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    (1297475 'move' call_tmp[1297473](1297478 call _low[1028641] this[1297212]))
    val call_tmp[1297481]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1297489]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1297593]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1297597 'move' coerce_tmp[1297593](1297595 'deref' call_tmp[1297473]))
    (1297491 'move' call_tmp[1297489](1297497 call safeCast[1137723] coerce_tmp[1297593]))
    (1297500 call =[435443] call_tmp[1297465] call_tmp[1297489])
    ref call_tmp[1297506]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (1297508 'move' call_tmp[1297506](1297511 call _high[1028849] tmp[1297241]))
    ref call_tmp[1297514]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    (1297516 'move' call_tmp[1297514](1297519 call _high[1028849] this[1297212]))
    val call_tmp[1297522]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1297530]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1297605]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1297609 'move' coerce_tmp[1297605](1297607 'deref' call_tmp[1297514]))
    (1297532 'move' call_tmp[1297530](1297538 call safeCast[1137723] coerce_tmp[1297605]))
    (1297541 call =[435443] call_tmp[1297506] call_tmp[1297530])
    (1297547 'move' ret[1297216] tmp[1297241])
    gotoReturn _end_safeCast[1297555] _end_safeCast[1297555]
    label _end_safeCast[1297555]
    (1913360 '=' _retArg[1913358] ret[1297216])
    (1913362 return _void[55])
  }
  function _cast[1027751](const in arg r[1027755]:range(int(64),bounded,false)[1027003], ref arg _retArg[1908522]:_ref(range(byteIndex,bounded,false))[1025990]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "resolved"
  {
    val _formal_type_tmp_[1879704]:range(byteIndex,bounded,false)[1025981] "temp"
    const-val ret[1027757]:range(byteIndex,bounded,false)[1025981] "dead after last mention" "RVV" "temp"
    val tmp[1027767]:range(byteIndex,bounded,false)[1025981] "dead at end of block" "insert auto destroy"
    const-val default_arg__low[1029940]:byteIndex[28173] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val ret_tmp[1908528]:byteIndex[28173] "temp"
    (1029942 call init_default__low[1029527] ret_tmp[1908528])
    (1908531 'move' default_arg__low[1029940] ret_tmp[1908528])
    const-val default_arg__high[1029992]:byteIndex[28173] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val ret_tmp[1908540]:byteIndex[28173] "temp"
    (1029994 call init_default__high[1029949] ret_tmp[1908540])
    (1908543 'move' default_arg__high[1029992] ret_tmp[1908540])
    const-val default_arg__stride[1030033]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (1030037 'move' default_arg__stride[1030033](1030035 call init_default__stride[1030001]))
    const-val default_arg__alignment[1030065]:byteIndex[28173] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val ret_tmp[1908552]:byteIndex[28173] "temp"
    (1030067 call init_default__alignment[1030041] ret_tmp[1908552])
    (1908555 'move' default_arg__alignment[1030065] ret_tmp[1908552])
    (1028888 call init[1028897] tmp[1027767] default_arg__low[1029940] default_arg__high[1029992] default_arg__stride[1030033] default_arg__alignment[1030065] 0)
    ref call_tmp[1027948]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (1027950 'move' call_tmp[1027948](1027953 call _low[1028529] tmp[1027767]))
    val call_tmp[1027956]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1027964]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1027966 'move' call_tmp[1027964](1027969 call low[1028600] r[1027755]))
    const-val call_tmp[1027972]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1027974 'move' call_tmp[1027972] call_tmp[1027964])
    (1027981 call =[435443] call_tmp[1027948] call_tmp[1027972])
    ref call_tmp[1027987]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (1027989 'move' call_tmp[1027987](1027992 call _high[1028778] tmp[1027767]))
    val call_tmp[1027995]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1028003]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1028005 'move' call_tmp[1028003](1028008 call high[1028808] r[1027755]))
    const-val call_tmp[1028011]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1028013 'move' call_tmp[1028011] call_tmp[1028003])
    (1028020 call =[435443] call_tmp[1027987] call_tmp[1028011])
    (1028026 'move' ret[1027757] tmp[1027767])
    (1920303 call chpl__autoDestroy[1601936] default_arg__alignment[1030065])
    (1920306 call chpl__autoDestroy[1601936] default_arg__high[1029992])
    (1920309 call chpl__autoDestroy[1601936] default_arg__low[1029940])
    gotoReturn _end__cast[1028034] _end__cast[1028034]
    label _end__cast[1028034]
    (1908524 '=' _retArg[1908522] ret[1027757])
    (1908526 return _void[55])
  }
  function _cast[1032672](const in arg r[1032676]:range(byteIndex,bounded,false)[1025981], ref arg _retArg[1908630]:_ref(range(int(64),bounded,false))[1027047]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1879714]:range(int(64),bounded,false)[1027003] "temp"
    const-val ret[1032678]:range(int(64),bounded,false)[1027003] "dead after last mention" "RVV" "temp"
    val tmp[1032688]:range(int(64),bounded,false)[1027003] "dead at end of block" "insert auto destroy"
    const-val default_arg__low[1033385]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (1033390 'move' default_arg__low[1033385](1033387 call init_default__low[1033253]))
    const-val default_arg__high[1033439]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (1033444 'move' default_arg__high[1033439](1033441 call init_default__high[1033394]))
    const-val default_arg__stride[1033448]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (1033452 'move' default_arg__stride[1033448](1033450 call init_default__stride[1027511]))
    const-val default_arg__alignment[1033456]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (1033461 'move' default_arg__alignment[1033456](1033458 call init_default__alignment[1027551]))
    (1033232 call init[1026226] tmp[1032688] default_arg__low[1033385] default_arg__high[1033439] default_arg__stride[1033448] default_arg__alignment[1033456] 0)
    ref call_tmp[1032869]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (1032871 'move' call_tmp[1032869](1032874 call _low[1028641] tmp[1032688]))
    val call_tmp[1032877]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1032885]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1908636]:byteIndex[28173] "temp"
    (1032890 call low[1033080] r[1032676] ret_tmp[1908636])
    (1908639 'move' call_tmp[1032885] ret_tmp[1908636])
    const-val call_tmp[1032893]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1032895 'move' call_tmp[1032893](1032898 call _cast[39465] call_tmp[1032885]))
    (1032902 call =[435443] call_tmp[1032869] call_tmp[1032893])
    (1920361 call chpl__autoDestroy[1601936] call_tmp[1032885])
    ref call_tmp[1032908]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (1032910 'move' call_tmp[1032908](1032913 call _high[1028849] tmp[1032688]))
    val call_tmp[1032916]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1032924]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1908678]:byteIndex[28173] "temp"
    (1032929 call high[1033179] r[1032676] ret_tmp[1908678])
    (1908681 'move' call_tmp[1032924] ret_tmp[1908678])
    const-val call_tmp[1032932]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1032934 'move' call_tmp[1032932](1032937 call _cast[39465] call_tmp[1032924]))
    (1032941 call =[435443] call_tmp[1032908] call_tmp[1032932])
    (1920364 call chpl__autoDestroy[1601936] call_tmp[1032924])
    (1032947 'move' ret[1032678] tmp[1032688])
    gotoReturn _end__cast[1032955] _end__cast[1032955]
    label _end__cast[1032955]
    (1908632 '=' _retArg[1908630] ret[1032678])
    (1908634 return _void[55])
  }
  function _cast[1146002](const in arg r[1146006]:range(byteIndex,boundedLow,false)[1143592], ref arg _retArg[1910448]:_ref(range(int(64),boundedLow,false))[1087798]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1879783]:range(int(64),boundedLow,false)[1087754] "temp"
    const-val ret[1146008]:range(int(64),boundedLow,false)[1087754] "dead after last mention" "RVV" "temp"
    val tmp[1146018]:range(int(64),boundedLow,false)[1087754] "dead at end of block" "insert auto destroy"
    const-val default_arg__low[1146588]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (1146593 'move' default_arg__low[1146588](1146590 call init_default__low[1146543]))
    const-val default_arg__high[1146597]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (1146602 'move' default_arg__high[1146597](1146599 call init_default__high[1087939]))
    const-val default_arg__stride[1146606]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (1146610 'move' default_arg__stride[1146606](1146608 call init_default__stride[1087993]))
    const-val default_arg__alignment[1146614]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (1146619 'move' default_arg__alignment[1146614](1146616 call init_default__alignment[1088033]))
    (1146522 call init[1087201] tmp[1146018] default_arg__low[1146588] default_arg__high[1146597] default_arg__stride[1146606] default_arg__alignment[1146614] 0)
    ref call_tmp[1146199]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (1146201 'move' call_tmp[1146199](1146204 call _low[1090874] tmp[1146018]))
    val call_tmp[1146207]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1146215]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1910454]:byteIndex[28173] "temp"
    (1146220 call low[1146316] r[1146006] ret_tmp[1910454])
    (1910457 'move' call_tmp[1146215] ret_tmp[1910454])
    const-val call_tmp[1146223]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1146225 'move' call_tmp[1146223](1146228 call _cast[39465] call_tmp[1146215]))
    (1146232 call =[435443] call_tmp[1146199] call_tmp[1146223])
    (1922184 call chpl__autoDestroy[1601936] call_tmp[1146215])
    ref call_tmp[1146238]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (1146240 'move' call_tmp[1146238](1146243 call _high[1093530] tmp[1146018]))
    val call_tmp[1146246]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1146254]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1910496]:byteIndex[28173] "temp"
    (1146259 call high[1146442] r[1146006] ret_tmp[1910496])
    (1910499 'move' call_tmp[1146254] ret_tmp[1910496])
    const-val call_tmp[1146262]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1146264 'move' call_tmp[1146262](1146267 call _cast[39465] call_tmp[1146254]))
    (1146271 call =[435443] call_tmp[1146238] call_tmp[1146262])
    (1922187 call chpl__autoDestroy[1601936] call_tmp[1146254])
    (1146277 'move' ret[1146008] tmp[1146018])
    gotoReturn _end__cast[1146285] _end__cast[1146285]
    label _end__cast[1146285]
    (1910450 '=' _retArg[1910448] ret[1146008])
    (1910452 return _void[55])
  }
  function _cast[1187820](const in arg r[1187824]:range(byteIndex,boundedHigh,false)[1185108], ref arg _retArg[1910770]:_ref(range(int(64),boundedHigh,false))[1187627]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1879797]:range(int(64),boundedHigh,false)[1187618] "temp"
    const-val ret[1187826]:range(int(64),boundedHigh,false)[1187618] "dead after last mention" "RVV" "temp"
    val tmp[1187836]:range(int(64),boundedHigh,false)[1187618] "dead at end of block" "insert auto destroy"
    const-val default_arg__low[1189454]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (1189459 'move' default_arg__low[1189454](1189456 call init_default__low[1189409]))
    const-val default_arg__high[1189508]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (1189513 'move' default_arg__high[1189508](1189510 call init_default__high[1189463]))
    const-val default_arg__stride[1189549]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (1189553 'move' default_arg__stride[1189549](1189551 call init_default__stride[1189517]))
    const-val default_arg__alignment[1189602]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (1189607 'move' default_arg__alignment[1189602](1189604 call init_default__alignment[1189557]))
    (1188893 call init[1188902] tmp[1187836] default_arg__low[1189454] default_arg__high[1189508] default_arg__stride[1189549] default_arg__alignment[1189602] 0)
    ref call_tmp[1188017]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (1188019 'move' call_tmp[1188017](1188022 call _low[1188589] tmp[1187836]))
    val call_tmp[1188025]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1188033]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1910776]:byteIndex[28173] "temp"
    (1188038 call low[1188660] r[1187824] ret_tmp[1910776])
    (1910779 'move' call_tmp[1188033] ret_tmp[1910776])
    const-val call_tmp[1188041]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1188043 'move' call_tmp[1188041](1188046 call _cast[39465] call_tmp[1188033]))
    (1188050 call =[435443] call_tmp[1188017] call_tmp[1188041])
    (1924453 call chpl__autoDestroy[1601936] call_tmp[1188033])
    ref call_tmp[1188056]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (1188058 'move' call_tmp[1188056](1188061 call _high[1188783] tmp[1187836]))
    val call_tmp[1188064]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1188072]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1910812]:byteIndex[28173] "temp"
    (1188077 call high[1188813] r[1187824] ret_tmp[1910812])
    (1910815 'move' call_tmp[1188072] ret_tmp[1910812])
    const-val call_tmp[1188080]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1188082 'move' call_tmp[1188080](1188085 call _cast[39465] call_tmp[1188072]))
    (1188089 call =[435443] call_tmp[1188056] call_tmp[1188080])
    (1924456 call chpl__autoDestroy[1601936] call_tmp[1188072])
    (1188095 'move' ret[1187826] tmp[1187836])
    gotoReturn _end__cast[1188103] _end__cast[1188103]
    label _end__cast[1188103]
    (1910772 '=' _retArg[1910770] ret[1187826])
    (1910774 return _void[55])
  }
  function range(int(64),bounded,false)[1027003].boundsCheck[1033563](const in arg this[1033569]:range(int(64),bounded,false)[1027003], const in arg other[1033571]:range(int(64),bounded,false)[1027003]) : bool[10] "inline" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    val ret[1033573]:bool[10] "dead after last mention" "RVV" "temp"
    const-val boundedOther[1033709]:range(int(64),bounded,false)[1027003] "dead at end of block" "delay instantiation" "insert auto destroy"
    const-val tmp[1033756]:int(64)[13] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[1033776]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
    (1033778 'move' tmp[1033776](1033781 call low[1028600] other[1033571]))
    (1033784 'move' tmp[1033756] tmp[1033776])
    const-val tmp[1033804]:int(64)[13] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[1033824]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
    (1033826 'move' tmp[1033824](1033829 call high[1028808] other[1033571]))
    (1033832 'move' tmp[1033804] tmp[1033824])
    val call_tmp[1033852]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1033868]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1033870 'move' call_tmp[1033868](1033873 call alignment[1034440] other[1033571]))
    const-val call_tmp[1033876]:range(int(64),bounded,false)[1027003] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[1034573]:range(int(64),bounded,false)[1027003] "dead at end of block" "delay instantiation" "temp"
    (1034576 call init[1026226] initTemp[1034573] tmp[1033756] tmp[1033804] 1 call_tmp[1033868] 1)
    (1033878 'move' call_tmp[1033876] initTemp[1034573])
    (1033890 'move' boundedOther[1033709] call_tmp[1033876])
    const-val tmp[1033894]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1033896]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1033898 'move' call_tmp[1033896](1033901 call size[1035978] boundedOther[1033709]))
    (1033904 'move' tmp[1033894](1033907 call ==[435744] call_tmp[1033896] 0))
    val tmp[1033923]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1033925]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1033927]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1033929 'move' call_tmp[1033927] tmp[1033894])
    (1033934 'move' tmp[1033925] call_tmp[1033927])
    if tmp[1033925]
    {
      (1033941 'move' tmp[1033923] 1)
    }
    {
      const-val tmp[1033947]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[1033949]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1033951 'move' call_tmp[1033949](1033957 call contains[1037184] this[1033569] boundedOther[1033709]))
      (1033959 'move' tmp[1033947] call_tmp[1033949])
      (1033964 'move' tmp[1033923] tmp[1033947])
    }
    (1033970 'move' ret[1033573] tmp[1033923])
    (1920367 call chpl__autoDestroy[1407763] boundedOther[1033709])
    gotoReturn _end_boundsCheck[1033978] _end_boundsCheck[1033978]
    label _end_boundsCheck[1033978]
    (1033980 return ret[1033573])
  }
  function range(int(64),bounded,false)[1027003].boundsCheck[1127810](const in arg this[1127816]:range(int(64),bounded,false)[1027003], const in arg other[1127818]:range(int(64),boundedLow,false)[1087754]) : bool[10] "inline" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    val ret[1127820]:bool[10] "dead after last mention" "RVV" "temp"
    const-val boundedOther[1127934]:range(int(64),bounded,false)[1027003] "dead at end of block" "delay instantiation" "insert auto destroy"
    const-val tmp[1127981]:int(64)[13] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[1128001]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
    (1128003 'move' tmp[1128001](1128006 call low[1128232] other[1127818]))
    (1128009 'move' tmp[1127981] tmp[1128001])
    const-val tmp[1128029]:int(64)[13] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[1128063]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
    (1128065 'move' tmp[1128063](1128068 call high[1028808] this[1127816]))
    (1128071 'move' tmp[1128029] tmp[1128063])
    val call_tmp[1128077]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1128093]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1128095 'move' call_tmp[1128093](1128098 call alignment[1128309] other[1127818]))
    const-val call_tmp[1128101]:range(int(64),bounded,false)[1027003] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[1128442]:range(int(64),bounded,false)[1027003] "dead at end of block" "delay instantiation" "temp"
    (1128445 call init[1026226] initTemp[1128442] tmp[1127981] tmp[1128029] 1 call_tmp[1128093] 1)
    (1128103 'move' call_tmp[1128101] initTemp[1128442])
    (1128115 'move' boundedOther[1127934] call_tmp[1128101])
    const-val tmp[1128119]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1128121]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1128123 'move' call_tmp[1128121](1128126 call size[1035978] boundedOther[1127934]))
    (1128129 'move' tmp[1128119](1128132 call ==[435744] call_tmp[1128121] 0))
    val tmp[1128148]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1128150]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1128152]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1128154 'move' call_tmp[1128152] tmp[1128119])
    (1128159 'move' tmp[1128150] call_tmp[1128152])
    if tmp[1128150]
    {
      (1128166 'move' tmp[1128148] 1)
    }
    {
      const-val tmp[1128172]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[1128174]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1128176 'move' call_tmp[1128174](1128182 call contains[1037184] this[1127816] boundedOther[1127934]))
      (1128184 'move' tmp[1128172] call_tmp[1128174])
      (1128189 'move' tmp[1128148] tmp[1128172])
    }
    (1128195 'move' ret[1127820] tmp[1128148])
    (1922068 call chpl__autoDestroy[1407763] boundedOther[1127934])
    gotoReturn _end_boundsCheck[1128203] _end_boundsCheck[1128203]
    label _end_boundsCheck[1128203]
    (1128205 return ret[1127820])
  }
  function range(int(64),bounded,false)[1027003].boundsCheck[1189727](const in arg this[1189733]:range(int(64),bounded,false)[1027003], const in arg other[1189735]:range(int(64),boundedHigh,false)[1187618]) : bool[10] "inline" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    val ret[1189737]:bool[10] "dead after last mention" "RVV" "temp"
    const-val boundedOther[1189851]:range(int(64),bounded,false)[1027003] "dead at end of block" "delay instantiation" "insert auto destroy"
    const-val tmp[1189898]:int(64)[13] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[1189932]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
    (1189934 'move' tmp[1189932](1189937 call low[1028600] this[1189733]))
    (1189940 'move' tmp[1189898] tmp[1189932])
    const-val tmp[1189946]:int(64)[13] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[1189966]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
    (1189968 'move' tmp[1189966](1189971 call high[1190448] other[1189735]))
    (1189974 'move' tmp[1189946] tmp[1189966])
    val call_tmp[1189994]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1190010]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1190012 'move' call_tmp[1190010](1190015 call alignment[1190783] other[1189735]))
    const-val call_tmp[1190018]:range(int(64),bounded,false)[1027003] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[1190818]:range(int(64),bounded,false)[1027003] "dead at end of block" "delay instantiation" "temp"
    (1190821 call init[1026226] initTemp[1190818] tmp[1189898] tmp[1189946] 1 call_tmp[1190010] 1)
    (1190020 'move' call_tmp[1190018] initTemp[1190818])
    (1190032 'move' boundedOther[1189851] call_tmp[1190018])
    const-val tmp[1190036]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1190038]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1190040 'move' call_tmp[1190038](1190043 call size[1035978] boundedOther[1189851]))
    (1190046 'move' tmp[1190036](1190049 call ==[435744] call_tmp[1190038] 0))
    val tmp[1190065]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1190067]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1190069]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1190071 'move' call_tmp[1190069] tmp[1190036])
    (1190076 'move' tmp[1190067] call_tmp[1190069])
    if tmp[1190067]
    {
      (1190083 'move' tmp[1190065] 1)
    }
    {
      const-val tmp[1190089]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[1190091]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1190093 'move' call_tmp[1190091](1190099 call contains[1037184] this[1189733] boundedOther[1189851]))
      (1190101 'move' tmp[1190089] call_tmp[1190091])
      (1190106 'move' tmp[1190065] tmp[1190089])
    }
    (1190112 'move' ret[1189737] tmp[1190065])
    (1924459 call chpl__autoDestroy[1407763] boundedOther[1189851])
    gotoReturn _end_boundsCheck[1190120] _end_boundsCheck[1190120]
    label _end_boundsCheck[1190120]
    (1190122 return ret[1189737])
  }
  function range(int(64),bounded,false)[1027003].orderToIndex[1104229](const in arg this[1104235]:range(int(64),bounded,false)[1027003], const in arg ord[1104237]:int(64)[13]) : int(64)[13] "instantiated generic" "invisible fn" "method" "resolved"
  {
    val ret[1104244]:int(64)[13] "dead after last mention" "RVV" "temp"
    {
      const-val call_tmp[1104265]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1104267 'move' call_tmp[1104265](1104273 call hasFirst[1104666] this[1104235]))
      const-val call_tmp[1104274]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1104276 'move' call_tmp[1104274](1104279 call ![7494] call_tmp[1104265]))
      const-val call_tmp[1104281]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1104283 'move' call_tmp[1104281] call_tmp[1104274])
      if call_tmp[1104281]
      {
        (1104293 call boundsCheckHalt[210254] "invoking orderToIndex on a range that has no first index")
      }
      const-val call_tmp[1104324]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1104326 'move' call_tmp[1104324](1104329 call <[948587] ord[1104237]))
      const-val call_tmp[1104332]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1104334 'move' call_tmp[1104332] call_tmp[1104324])
      if call_tmp[1104332]
      {
        const-val call_tmp[1104343]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1909018]:string[26] "temp"
        (1104348 call _cast[1063342] ord[1104237] ret_tmp[1909018])
        (1909021 'move' call_tmp[1104343] ret_tmp[1909018])
        const-val call_tmp[1104351]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1905806]:string[26] "temp"
        (1104356 call +[38345] "invoking orderToIndex on a negative integer: " call_tmp[1104343] ret_tmp[1905806])
        (1905809 'move' call_tmp[1104351] ret_tmp[1905806])
        (1104360 call boundsCheckHalt[210254] call_tmp[1104351])
        (1921680 call chpl__autoDestroy[1601673] call_tmp[1104351])
        (1921683 call chpl__autoDestroy[1601673] call_tmp[1104343])
      }
      const-val tmp[1104385]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val tmp[1104403]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[1104405]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1104407 'move' call_tmp[1104405](1104410 call size[1035978] this[1104235]))
      const-val call_tmp[1104413]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1104415 'move' call_tmp[1104413](1104418 call >=[437348] ord[1104237] call_tmp[1104405]))
      (1104421 'move' tmp[1104403] call_tmp[1104413])
      (1104426 'move' tmp[1104385] tmp[1104403])
      const-val call_tmp[1104438]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1104440 'move' call_tmp[1104438] tmp[1104385])
      if call_tmp[1104438]
      {
        const-val call_tmp[1104449]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1909024]:string[26] "temp"
        (1104454 call _cast[1063342] ord[1104237] ret_tmp[1909024])
        (1909027 'move' call_tmp[1104449] ret_tmp[1909024])
        const-val call_tmp[1104457]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1905812]:string[26] "temp"
        (1104462 call +[38345] "invoking orderToIndex on an integer " call_tmp[1104449] ret_tmp[1905812])
        (1905815 'move' call_tmp[1104457] ret_tmp[1905812])
        const-val call_tmp[1104465]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1905818]:string[26] "temp"
        (1104470 call +[38345] call_tmp[1104457] " that is larger than the range's number of indices " ret_tmp[1905818])
        (1905821 'move' call_tmp[1104465] ret_tmp[1905818])
        const-val call_tmp[1104473]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1104475 'move' call_tmp[1104473](1104478 call size[1035978] this[1104235]))
        const-val call_tmp[1104481]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1909030]:string[26] "temp"
        (1104486 call _cast[1063342] call_tmp[1104473] ret_tmp[1909030])
        (1909033 'move' call_tmp[1104481] ret_tmp[1909030])
        const-val call_tmp[1104489]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1905824]:string[26] "temp"
        (1104494 call +[38345] call_tmp[1104465] call_tmp[1104481] ret_tmp[1905824])
        (1905827 'move' call_tmp[1104489] ret_tmp[1905824])
        (1104498 call boundsCheckHalt[210254] call_tmp[1104489])
        (1921687 call chpl__autoDestroy[1601673] call_tmp[1104489])
        (1921690 call chpl__autoDestroy[1601673] call_tmp[1104481])
        (1921693 call chpl__autoDestroy[1601673] call_tmp[1104465])
        (1921696 call chpl__autoDestroy[1601673] call_tmp[1104457])
        (1921699 call chpl__autoDestroy[1601673] call_tmp[1104449])
      }
    }
    const-val call_tmp[1104504]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1104506 'move' call_tmp[1104504](1104509 call firstAsInt[1042861] this[1104235]))
    const-val call_tmp[1104520]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1104522 'move' call_tmp[1104520](1104525 call chpl__addRangeStrides[1105216] call_tmp[1104504] 1 ord[1104237]))
    const-val call_tmp[1104529]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1104531 'move' call_tmp[1104529](1104537 call chpl_intToIdx[1028669] this[1104235] call_tmp[1104520]))
    val call_tmp[1104539]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1106224 'move' ret[1104244] call_tmp[1104529])
    (1104552 return ret[1104244])
  }
  function =[1251739](ref arg r1[1251741]:_ref(range(int(64),bounded,false))[1027047], const in arg r2[1251743]:range(int(64),bounded,false)[1027003]) : void[4] "assignop" "inline" "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    (2226349 '=' r1[1251741] r2[1251743])
    (2226350 return _void[55])
  }
  function chpl_check_step_integral[972777](const in arg step[972779]:int(64)[13]) : void[4] "inline" "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[972785]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (972833 return _void[55])
  }
  function chpl_range_check_stride[1103022](const in arg step[1103024]:int(64)[13]) : void[4] "inline" "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    val _formal_type_tmp_[1879765]:int(64)[13] "temp"
    (1302343 call chpl_check_step_integral[972777] step[1103024])
    val strType[1302346]:int(64)[13] "dead at end of block" "insert auto destroy" "type variable"
    val call_tmp[1302357]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      const-val call_tmp[1302432]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1302434 'move' call_tmp[1302432](1302437 call ==[435744] step[1103024] 0))
      const-val call_tmp[1302440]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1302442 'move' call_tmp[1302440] call_tmp[1302432])
      if call_tmp[1302440]
      {
        (1302452 call boundsCheckHalt[210254] "the step argument of the 'by' operator is zero")
      }
    }
    (1302580 return _void[55])
  }
  function chpl_range_check_stride[972608]() : void[4] "inline" "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    val _formal_type_tmp_[1879562]:int(32)[95] "temp"
    (972621 call chpl_check_step_integral[972777] 1)
    val strType[972624]:int(32)[95] "dead at end of block" "insert auto destroy" "type variable"
    val call_tmp[972697]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (972774 return _void[55])
  }
  function chpl_range_check_stride[1103033]() : void[4] "inline" "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    val _formal_type_tmp_[1879767]:int(64)[13] "temp"
    (1103046 call chpl_check_step_integral[972777] 1)
    val strType[1103049]:int(64)[13] "dead at end of block" "insert auto destroy" "type variable"
    (1103199 return _void[55])
  }
  function chpl_range_check_stride[1446822]() : void[4] "inline" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[1880205]:int(64)[13] "temp"
    (1446835 call chpl_check_step_integral[972777] -1)
    val strType[1446838]:int(64)[13] "dead at end of block" "insert auto destroy" "type variable"
    (1446988 return _void[55])
  }
  function chpl_by_help[1569245](const in arg r[1569247]:range(int(64),bounded,false)[1027003], const in arg step[1569249]:int(64)[13], ref arg _retArg[1916925]:_ref(range(int(64),bounded,true))[1570567]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val ret[1569251]:range(int(64),bounded,true)[1570523] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1569261]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1569263 'move' call_tmp[1569261](1569266 call low[1028600] r[1569247]))
    val call_tmp[1569269]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    const-val lw[1569276]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1569278 'move' lw[1569276] call_tmp[1569261])
    const-val call_tmp[1569282]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1569284 'move' call_tmp[1569282](1569287 call high[1028808] r[1569247]))
    val call_tmp[1569290]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    const-val hh[1569297]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1569299 'move' hh[1569297] call_tmp[1569282])
    val call_tmp[1569311]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1569319]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1569321 'move' call_tmp[1569319] step[1569249])
    const-val call_tmp[1569327]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1569329 'move' call_tmp[1569327](1569332 call *[1246833] call_tmp[1569319]))
    val call_tmp[1569335]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    const-val st[1569343]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1569345 'move' st[1569343] call_tmp[1569327])
    const-val tmp[1569350]:(bool,int(64))[1265321] "dead at end of block" "const" "insert auto destroy" "temp"
    const-val tmp[1569352]:(bool,int(64))[1265321] "dead at end of block" "expr temp" "insert auto destroy" "maybe copy elided" "maybe param" "temp"
    const-val tmp[1569465]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[1569483]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    const-val call_tmp[1569485]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1569487 'move' call_tmp[1569485](1569490 call >[437788] st[1569343] 0))
    (1569493 'move' tmp[1569483] call_tmp[1569485])
    (1569498 'move' tmp[1569465] tmp[1569483])
    val tmp[1569510]:(bool,int(64))[1265321] "dead at end of block" "expr temp" "if-expr result" "temp"
    const-val tmp[1569512]:bool[10] "dead after last mention" "maybe param" "temp"
    (1569514 'move' tmp[1569512] tmp[1569465])
    if tmp[1569512]
    {
      const-val tmp[1569521]:(bool,int(64))[1265321] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[1569523]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (1569525 'move' call_tmp[1569523](1569528 call alignedLow[1105050] r[1569247]))
      const-val ret_tmp[1913114]:(bool,int(64))[1265321] "temp"
      (1569534 call _build_tuple[1272197] 1 call_tmp[1569523] ret_tmp[1913114])
      (1913117 'move' tmp[1569521] ret_tmp[1913114])
      (1569537 'move' tmp[1569510] tmp[1569521])
    }
    {
      const-val tmp[1569565]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val tmp[1569583]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[1569585]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1569587 'move' call_tmp[1569585](1569590 call <[948587] st[1569343]))
      (1569593 'move' tmp[1569583] call_tmp[1569585])
      (1569598 'move' tmp[1569565] tmp[1569583])
      val tmp[1569610]:(bool,int(64))[1265321] "dead at end of block" "expr temp" "if-expr result" "temp"
      const-val tmp[1569612]:bool[10] "dead after last mention" "maybe param" "temp"
      (1569614 'move' tmp[1569612] tmp[1569565])
      if tmp[1569612]
      {
        const-val tmp[1569621]:(bool,int(64))[1265321] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1569623]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (1569625 'move' call_tmp[1569623](1569628 call alignedHigh[1105114] r[1569247]))
        const-val ret_tmp[1913120]:(bool,int(64))[1265321] "temp"
        (1569634 call _build_tuple[1272197] 1 call_tmp[1569623] ret_tmp[1913120])
        (1913123 'move' tmp[1569621] ret_tmp[1913120])
        (1569637 'move' tmp[1569610] tmp[1569621])
      }
      {
        const-val tmp[1569643]:(bool,int(64))[1265321] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val tmp[1569692]:(bool,int(64))[1265321] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1569694]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (1569696 'move' call_tmp[1569694](1569702 call chpl_intToIdx[1028669] r[1569247] 0))
        const-val ret_tmp[1913126]:(bool,int(64))[1265321] "temp"
        (1569707 call _build_tuple[1272197] 0 call_tmp[1569694] ret_tmp[1913126])
        (1913129 'move' tmp[1569692] ret_tmp[1913126])
        (1569710 'move' tmp[1569643] tmp[1569692])
        (1569716 'move' tmp[1569610] tmp[1569643])
      }
      (1569722 'move' tmp[1569510] tmp[1569610])
    }
    (1569728 'move' tmp[1569352] tmp[1569510])
    val call_tmp[1569734]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1569741]:(bool,int(64))[1265321] "dead after last mention" "maybe param" "temp" "type variable"
    (1927582 '=' tmp[1569350] tmp[1569352])
    (1569749 'noop')
    1
    ref call_tmp[1569758]:_ref(bool)[937388] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1569760 'move' call_tmp[1569758](1569910 '.' tmp[1569350] x0[1265317]))
    const-val ald[1569765]:bool[10] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1569915]:bool[10] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1569919 'move' coerce_tmp[1569915](1569917 'deref' call_tmp[1569758]))
    (1927585 '=' ald[1569765] coerce_tmp[1569915])
    (1569767 'noop')
    ref call_tmp[1569770]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1569772 'move' call_tmp[1569770](1569924 '.' tmp[1569350] x1[1265319]))
    const-val alt[1569777]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1569929]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1569933 'move' coerce_tmp[1569929](1569931 'deref' call_tmp[1569770]))
    (1927588 '=' alt[1569777] coerce_tmp[1569929])
    (1569779 'noop')
    val call_tmp[1569783]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1569797]:range(int(64),bounded,true)[1570523] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1569947]:range(int(64),bounded,true)[1570523] "dead after last mention" "delay instantiation" "temp"
    (1569950 call init[1569962] initTemp[1569947] lw[1569276] hh[1569297] st[1569343] alt[1569777] ald[1569765])
    (1569799 'move' call_tmp[1569797] initTemp[1569947])
    (1569811 'move' ret[1569251] call_tmp[1569797])
    (1927591 call chpl__autoDestroy[1697426] tmp[1569350])
    gotoReturn _end_chpl_by_help[1569823] _end_chpl_by_help[1569823]
    label _end_chpl_by_help[1569823]
    (1916927 '=' _retArg[1916925] ret[1569251])
    (1916929 return _void[55])
  }
  function chpl_by[1569109](const in arg r[1569111]:range(int(64),bounded,false)[1027003], const in arg step[1569113]:int(64)[13], ref arg _retArg[1916913]:_ref(range(int(64),bounded,true))[1570567]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1569115]:range(int(64),bounded,true)[1570523] "dead after last mention" "RVV" "temp"
    val call_tmp[1569152]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1569161 call chpl_range_check_stride[1103022] step[1569113])
    const-val call_tmp[1569165]:range(int(64),bounded,true)[1570523] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1916919]:range(int(64),bounded,true)[1570523] "temp"
    (1569170 call chpl_by_help[1569245] r[1569111] step[1569113] ret_tmp[1916919])
    (1916922 'move' call_tmp[1569165] ret_tmp[1916919])
    (1569173 'move' ret[1569115] call_tmp[1569165])
    (1916915 '=' _retArg[1916913] ret[1569115])
    (1916917 return _void[55])
  }
  function range(int(64),bounded,false)[1027003].this[1037637](const in arg this[1037643]:range(int(64),bounded,false)[1027003], const in arg other[1037645]:range(int(64),bounded,false)[1027003], ref arg _retArg[1908720]:_ref(range(int(64),bounded,false))[1027047]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1037647]:range(int(64),bounded,false)[1027003] "dead after last mention" "RVV" "temp"
    const-val ambig[1037657]:bool[10] "dead at end of block" "insert auto destroy"
    (1037659 'move' ambig[1037657] 0)
    const-val lo1[1038186]:int(64)[13] "dead at end of block" "insert auto destroy"
    ref tmp[1038188]:_ref(int(64))[936761] "dead at end of block" "insert auto destroy" "maybe param" "reference to a const" "temp"
    ref tmp[1038208]:_ref(int(64))[936761] "dead at end of block" "maybe param" "no auto destroy" "reference to a const field of 'this'" "reference to a const" "temp"
    (1038210 'move' tmp[1038208](1038213 call _low[1028641] this[1037643]))
    (1038216 'move' tmp[1038188] tmp[1038208])
    const-val coerce_tmp[1040127]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1040131 'move' coerce_tmp[1040127](1040129 'deref' tmp[1038188]))
    (1920373 '=' lo1[1038186] coerce_tmp[1040127])
    (1038236 'noop')
    const-val hi1[1038240]:int(64)[13] "dead at end of block" "insert auto destroy"
    ref tmp[1038242]:_ref(int(64))[936761] "dead at end of block" "insert auto destroy" "maybe param" "reference to a const" "temp"
    ref tmp[1038262]:_ref(int(64))[936761] "dead at end of block" "maybe param" "no auto destroy" "reference to a const field of 'this'" "reference to a const" "temp"
    (1038264 'move' tmp[1038262](1038267 call _high[1028849] this[1037643]))
    (1038270 'move' tmp[1038242] tmp[1038262])
    const-val coerce_tmp[1040140]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1040144 'move' coerce_tmp[1040140](1040142 'deref' tmp[1038242]))
    (1920376 '=' hi1[1038240] coerce_tmp[1040140])
    (1038290 'noop')
    const-val st1[1038309]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1038311 'move' st1[1038309] 1)
    const-val lo2[1038315]:int(64)[13] "dead at end of block" "insert auto destroy"
    ref tmp[1038317]:_ref(int(64))[936761] "dead at end of block" "insert auto destroy" "maybe param" "reference to a const" "temp"
    ref tmp[1038337]:_ref(int(64))[936761] "dead at end of block" "maybe param" "no auto destroy" "reference to a const" "temp"
    (1038339 'move' tmp[1038337](1038342 call _low[1028641] other[1037645]))
    (1038345 'move' tmp[1038317] tmp[1038337])
    const-val coerce_tmp[1040157]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1040161 'move' coerce_tmp[1040157](1040159 'deref' tmp[1038317]))
    (1920379 '=' lo2[1038315] coerce_tmp[1040157])
    (1038365 'noop')
    const-val hi2[1038369]:int(64)[13] "dead at end of block" "insert auto destroy"
    ref tmp[1038371]:_ref(int(64))[936761] "dead at end of block" "insert auto destroy" "maybe param" "reference to a const" "temp"
    ref tmp[1038391]:_ref(int(64))[936761] "dead at end of block" "maybe param" "no auto destroy" "reference to a const" "temp"
    (1038393 'move' tmp[1038391](1038396 call _high[1028849] other[1037645]))
    (1038399 'move' tmp[1038371] tmp[1038391])
    const-val coerce_tmp[1040170]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1040174 'move' coerce_tmp[1040170](1040172 'deref' tmp[1038371]))
    (1920382 '=' hi2[1038369] coerce_tmp[1040170])
    (1038419 'noop')
    const-val st2[1038438]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1038440 'move' st2[1038438] 1)
    val call_tmp[1038444]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1038501]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    const-val newStride[1038509]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1038511 'move' newStride[1038509] 1)
    val call_tmp[1038531]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    const-val lcm[1038539]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1038541 'move' lcm[1038539] 1)
    val call_tmp[1038546]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1038562]:2*int(64)[1040245] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1908726]:2*int(64)[1040245] "temp"
    (1038567 call _build_tuple[1040203] lcm[1038539] 0 ret_tmp[1908726])
    (1908729 'move' call_tmp[1038562] ret_tmp[1908726])
    val call_tmp[1038570]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1038578]:2*int(64)[1040245] "dead after last mention" "maybe param" "temp" "type variable"
    const-val tmp[1038586]:2*int(64)[1040245] "dead at end of block" "insert auto destroy" "temp"
    (1038588 'move' tmp[1038586] call_tmp[1038562])
    1
    ref call_tmp[1038597]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
    (1038599 'move' call_tmp[1038597](1040645 '.' tmp[1038586] x0[1040241]))
    const-val g[1038604]:int(64)[13] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[1040650]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1040654 'move' coerce_tmp[1040650](1040652 'deref' call_tmp[1038597]))
    (1920385 '=' g[1038604] coerce_tmp[1040650])
    (1038606 'noop')
    ref call_tmp[1038609]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
    (1038611 'move' call_tmp[1038609](1040659 '.' tmp[1038586] x1[1040243]))
    const-val x[1038616]:int(64)[13] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[1040664]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1040668 'move' coerce_tmp[1040664](1040666 'deref' call_tmp[1038609]))
    (1920388 '=' x[1038616] coerce_tmp[1040664])
    (1038618 'noop')
    const-val emptyIntersection[1038973]:bool[10] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[1038975]:bool[10] "dead after last mention" "maybe param" "temp" "type variable"
    (1039240 'move' emptyIntersection[1038973] 0)
    val call_tmp[1039246]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1039254]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1039256 'move' call_tmp[1039254](1039259 call max[450224] lo1[1038186] lo2[1038315]))
    const-val call_tmp[1039262]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1039264 'move' call_tmp[1039262] call_tmp[1039254])
    val newlo[1039270]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1039272 'move' newlo[1039270] call_tmp[1039262])
    val call_tmp[1039276]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1039284]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1039286 'move' call_tmp[1039284](1039289 call min[450112] hi1[1038240] hi2[1038369]))
    const-val call_tmp[1039292]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1039294 'move' call_tmp[1039292] call_tmp[1039284])
    val newhi[1039300]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1039302 'move' newhi[1039300] call_tmp[1039292])
    const-val call_tmp[1039306]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1039308 'move' call_tmp[1039306] emptyIntersection[1038973])
    if call_tmp[1039306]
    {
      (1039316 call =[435443] newlo[1039270] 1)
      (1039322 call =[435443] newhi[1039300] 0)
    }
    const-val tmp[1039328]:bool[10] "dead after last mention" "maybe param" "temp"
    (1039330 'move' tmp[1039328](1039333 call ![7494] ambig[1037657]))
    const-val result[1039348]:range(int(64),bounded,false)[1027003] "dead at end of block" "delay instantiation" "insert auto destroy"
    val tmp[1039350]:bool[10] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1039352]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1039354]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1039356 'move' call_tmp[1039354] tmp[1039328])
    (1039361 'move' tmp[1039352] call_tmp[1039354])
    if tmp[1039352]
    {
      (1039441 'move' tmp[1039350] 1)
    }
    {
      (1039447 'move' tmp[1039350] 0)
    }
    val call_tmp[1039453]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1039493]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1039495 'move' call_tmp[1039493](1039501 call chpl_intToIdx[1028669] this[1037643] newlo[1039270]))
    const-val call_tmp[1039503]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1039505 'move' call_tmp[1039503](1039511 call chpl_intToIdx[1028669] this[1037643] newhi[1039300]))
    const-val call_tmp[1039513]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1039515 'move' call_tmp[1039513](1039521 call chpl_intToIdx[1028669] this[1037643] 0))
    const-val call_tmp[1039523]:range(int(64),bounded,false)[1027003] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[1042017]:range(int(64),bounded,false)[1027003] "dead at end of block" "delay instantiation" "temp"
    (1042020 call init[1026226] initTemp[1042017] call_tmp[1039493] call_tmp[1039503] newStride[1038509] call_tmp[1039513] tmp[1039350])
    (1039525 'move' call_tmp[1039523] initTemp[1042017])
    (1039537 'move' result[1039348] call_tmp[1039523])
    (1040096 'move' ret[1037647] result[1039348])
    (1920391 call chpl__autoDestroy[1674803] tmp[1038586])
    gotoReturn _end_this[1040104] _end_this[1040104]
    label _end_this[1040104]
    (1908722 '=' _retArg[1908720] ret[1037647])
    (1908724 return _void[55])
  }
  function range(int(64),boundedLow,false)[1087754].this[1139158](const in arg this[1139164]:range(int(64),boundedLow,false)[1087754], const in arg other[1139166]:range(int(64),bounded,false)[1027003], ref arg _retArg[1910296]:_ref(range(int(64),bounded,false))[1027047]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1139168]:range(int(64),bounded,false)[1027003] "dead after last mention" "RVV" "temp"
    const-val ambig[1139178]:bool[10] "dead at end of block" "insert auto destroy"
    (1139180 'move' ambig[1139178] 0)
    const-val lo1[1139707]:int(64)[13] "dead at end of block" "insert auto destroy"
    ref tmp[1139709]:_ref(int(64))[936761] "dead at end of block" "insert auto destroy" "maybe param" "reference to a const" "temp"
    ref tmp[1139729]:_ref(int(64))[936761] "dead at end of block" "maybe param" "no auto destroy" "reference to a const field of 'this'" "reference to a const" "temp"
    (1139731 'move' tmp[1139729](1139734 call _low[1090874] this[1139164]))
    (1139737 'move' tmp[1139709] tmp[1139729])
    const-val coerce_tmp[1141648]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1141652 'move' coerce_tmp[1141648](1141650 'deref' tmp[1139709]))
    (1922108 '=' lo1[1139707] coerce_tmp[1141648])
    (1139757 'noop')
    const-val hi1[1139761]:int(64)[13] "dead at end of block" "insert auto destroy"
    ref tmp[1139763]:_ref(int(64))[936761] "dead at end of block" "insert auto destroy" "maybe param" "reference to a const" "temp"
    ref tmp[1139797]:_ref(int(64))[936761] "dead at end of block" "maybe param" "no auto destroy" "reference to a const" "temp"
    (1139799 'move' tmp[1139797](1139802 call _high[1028849] other[1139166]))
    (1139805 'move' tmp[1139763] tmp[1139797])
    const-val coerce_tmp[1141661]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1141665 'move' coerce_tmp[1141661](1141663 'deref' tmp[1139763]))
    (1922111 '=' hi1[1139761] coerce_tmp[1141661])
    (1139811 'noop')
    const-val st1[1139830]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1139832 'move' st1[1139830] 1)
    const-val lo2[1139836]:int(64)[13] "dead at end of block" "insert auto destroy"
    ref tmp[1139838]:_ref(int(64))[936761] "dead at end of block" "insert auto destroy" "maybe param" "reference to a const" "temp"
    ref tmp[1139858]:_ref(int(64))[936761] "dead at end of block" "maybe param" "no auto destroy" "reference to a const" "temp"
    (1139860 'move' tmp[1139858](1139863 call _low[1028641] other[1139166]))
    (1139866 'move' tmp[1139838] tmp[1139858])
    const-val coerce_tmp[1141678]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1141682 'move' coerce_tmp[1141678](1141680 'deref' tmp[1139838]))
    (1922114 '=' lo2[1139836] coerce_tmp[1141678])
    (1139886 'noop')
    const-val hi2[1139890]:int(64)[13] "dead at end of block" "insert auto destroy"
    ref tmp[1139892]:_ref(int(64))[936761] "dead at end of block" "insert auto destroy" "maybe param" "reference to a const" "temp"
    ref tmp[1139912]:_ref(int(64))[936761] "dead at end of block" "maybe param" "no auto destroy" "reference to a const" "temp"
    (1139914 'move' tmp[1139912](1139917 call _high[1028849] other[1139166]))
    (1139920 'move' tmp[1139892] tmp[1139912])
    const-val coerce_tmp[1141691]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1141695 'move' coerce_tmp[1141691](1141693 'deref' tmp[1139892]))
    (1922117 '=' hi2[1139890] coerce_tmp[1141691])
    (1139940 'noop')
    const-val st2[1139959]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1139961 'move' st2[1139959] 1)
    val call_tmp[1139965]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1140022]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    const-val newStride[1140030]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1140032 'move' newStride[1140030] 1)
    val call_tmp[1140052]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    const-val lcm[1140060]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1140062 'move' lcm[1140060] 1)
    val call_tmp[1140067]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1140083]:2*int(64)[1040245] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1908744]:2*int(64)[1040245] "temp"
    (1140088 call _build_tuple[1040203] lcm[1140060] 0 ret_tmp[1908744])
    (1908747 'move' call_tmp[1140083] ret_tmp[1908744])
    val call_tmp[1140091]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1140099]:2*int(64)[1040245] "dead after last mention" "maybe param" "temp" "type variable"
    const-val tmp[1140107]:2*int(64)[1040245] "dead at end of block" "insert auto destroy" "temp"
    (1140109 'move' tmp[1140107] call_tmp[1140083])
    1
    ref call_tmp[1140118]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
    (1140120 'move' call_tmp[1140118](1141736 '.' tmp[1140107] x0[1040241]))
    const-val g[1140125]:int(64)[13] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[1141741]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1141745 'move' coerce_tmp[1141741](1141743 'deref' call_tmp[1140118]))
    (1922120 '=' g[1140125] coerce_tmp[1141741])
    (1140127 'noop')
    ref call_tmp[1140130]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
    (1140132 'move' call_tmp[1140130](1141750 '.' tmp[1140107] x1[1040243]))
    const-val x[1140137]:int(64)[13] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[1141755]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1141759 'move' coerce_tmp[1141755](1141757 'deref' call_tmp[1140130]))
    (1922123 '=' x[1140137] coerce_tmp[1141755])
    (1140139 'noop')
    const-val emptyIntersection[1140494]:bool[10] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[1140496]:bool[10] "dead after last mention" "maybe param" "temp" "type variable"
    (1140761 'move' emptyIntersection[1140494] 0)
    val call_tmp[1140767]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1140775]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1140777 'move' call_tmp[1140775](1140780 call max[450224] lo1[1139707] lo2[1139836]))
    const-val call_tmp[1140783]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1140785 'move' call_tmp[1140783] call_tmp[1140775])
    val newlo[1140791]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1140793 'move' newlo[1140791] call_tmp[1140783])
    val call_tmp[1140797]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1140805]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1140807 'move' call_tmp[1140805](1140810 call min[450112] hi1[1139761] hi2[1139890]))
    const-val call_tmp[1140813]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1140815 'move' call_tmp[1140813] call_tmp[1140805])
    val newhi[1140821]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1140823 'move' newhi[1140821] call_tmp[1140813])
    const-val call_tmp[1140827]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1140829 'move' call_tmp[1140827] emptyIntersection[1140494])
    if call_tmp[1140827]
    {
      (1140837 call =[435443] newlo[1140791] 1)
      (1140843 call =[435443] newhi[1140821] 0)
    }
    const-val tmp[1140849]:bool[10] "dead after last mention" "maybe param" "temp"
    (1140851 'move' tmp[1140849](1140854 call ![7494] ambig[1139178]))
    const-val result[1140869]:range(int(64),bounded,false)[1027003] "dead at end of block" "delay instantiation" "insert auto destroy"
    val tmp[1140871]:bool[10] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1140873]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1140875]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1140877 'move' call_tmp[1140875] tmp[1140849])
    (1140882 'move' tmp[1140873] call_tmp[1140875])
    if tmp[1140873]
    {
      (1140962 'move' tmp[1140871] 1)
    }
    {
      (1140968 'move' tmp[1140871] 0)
    }
    val call_tmp[1140974]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1141014]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1141016 'move' call_tmp[1141014](1141022 call chpl_intToIdx[1094593] this[1139164] newlo[1140791]))
    const-val call_tmp[1141024]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1141026 'move' call_tmp[1141024](1141032 call chpl_intToIdx[1094593] this[1139164] newhi[1140821]))
    const-val call_tmp[1141034]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1141036 'move' call_tmp[1141034](1141042 call chpl_intToIdx[1094593] this[1139164] 0))
    const-val call_tmp[1141044]:range(int(64),bounded,false)[1027003] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[1142132]:range(int(64),bounded,false)[1027003] "dead at end of block" "delay instantiation" "temp"
    (1142135 call init[1026226] initTemp[1142132] call_tmp[1141014] call_tmp[1141024] newStride[1140030] call_tmp[1141034] tmp[1140871])
    (1141046 'move' call_tmp[1141044] initTemp[1142132])
    (1141058 'move' result[1140869] call_tmp[1141044])
    (1141617 'move' ret[1139168] result[1140869])
    (1922126 call chpl__autoDestroy[1674803] tmp[1140107])
    gotoReturn _end_this[1141625] _end_this[1141625]
    label _end_this[1141625]
    (1910298 '=' _retArg[1910296] ret[1139168])
    (1910300 return _void[55])
  }
  function range(int(64),boundedHigh,false)[1187618].this[1200538](const in arg this[1200544]:range(int(64),boundedHigh,false)[1187618], const in arg other[1200546]:range(int(64),bounded,false)[1027003], ref arg _retArg[1910894]:_ref(range(int(64),bounded,false))[1027047]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1200548]:range(int(64),bounded,false)[1027003] "dead after last mention" "RVV" "temp"
    const-val ambig[1200558]:bool[10] "dead at end of block" "insert auto destroy"
    (1200560 'move' ambig[1200558] 0)
    const-val lo1[1201087]:int(64)[13] "dead at end of block" "insert auto destroy"
    ref tmp[1201089]:_ref(int(64))[936761] "dead at end of block" "insert auto destroy" "maybe param" "reference to a const" "temp"
    ref tmp[1201123]:_ref(int(64))[936761] "dead at end of block" "maybe param" "no auto destroy" "reference to a const" "temp"
    (1201125 'move' tmp[1201123](1201128 call _low[1028641] other[1200546]))
    (1201131 'move' tmp[1201089] tmp[1201123])
    const-val coerce_tmp[1203028]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1203032 'move' coerce_tmp[1203028](1203030 'deref' tmp[1201089]))
    (1924517 '=' lo1[1201087] coerce_tmp[1203028])
    (1201137 'noop')
    const-val hi1[1201141]:int(64)[13] "dead at end of block" "insert auto destroy"
    ref tmp[1201143]:_ref(int(64))[936761] "dead at end of block" "insert auto destroy" "maybe param" "reference to a const" "temp"
    ref tmp[1201163]:_ref(int(64))[936761] "dead at end of block" "maybe param" "no auto destroy" "reference to a const field of 'this'" "reference to a const" "temp"
    (1201165 'move' tmp[1201163](1201168 call _high[1188783] this[1200544]))
    (1201171 'move' tmp[1201143] tmp[1201163])
    const-val coerce_tmp[1203041]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1203045 'move' coerce_tmp[1203041](1203043 'deref' tmp[1201143]))
    (1924520 '=' hi1[1201141] coerce_tmp[1203041])
    (1201191 'noop')
    const-val st1[1201210]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1201212 'move' st1[1201210] 1)
    const-val lo2[1201216]:int(64)[13] "dead at end of block" "insert auto destroy"
    ref tmp[1201218]:_ref(int(64))[936761] "dead at end of block" "insert auto destroy" "maybe param" "reference to a const" "temp"
    ref tmp[1201238]:_ref(int(64))[936761] "dead at end of block" "maybe param" "no auto destroy" "reference to a const" "temp"
    (1201240 'move' tmp[1201238](1201243 call _low[1028641] other[1200546]))
    (1201246 'move' tmp[1201218] tmp[1201238])
    const-val coerce_tmp[1203058]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1203062 'move' coerce_tmp[1203058](1203060 'deref' tmp[1201218]))
    (1924523 '=' lo2[1201216] coerce_tmp[1203058])
    (1201266 'noop')
    const-val hi2[1201270]:int(64)[13] "dead at end of block" "insert auto destroy"
    ref tmp[1201272]:_ref(int(64))[936761] "dead at end of block" "insert auto destroy" "maybe param" "reference to a const" "temp"
    ref tmp[1201292]:_ref(int(64))[936761] "dead at end of block" "maybe param" "no auto destroy" "reference to a const" "temp"
    (1201294 'move' tmp[1201292](1201297 call _high[1028849] other[1200546]))
    (1201300 'move' tmp[1201272] tmp[1201292])
    const-val coerce_tmp[1203071]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1203075 'move' coerce_tmp[1203071](1203073 'deref' tmp[1201272]))
    (1924526 '=' hi2[1201270] coerce_tmp[1203071])
    (1201320 'noop')
    const-val st2[1201339]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1201341 'move' st2[1201339] 1)
    val call_tmp[1201345]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1201402]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    const-val newStride[1201410]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1201412 'move' newStride[1201410] 1)
    val call_tmp[1201432]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    const-val lcm[1201440]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1201442 'move' lcm[1201440] 1)
    val call_tmp[1201447]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1201463]:2*int(64)[1040245] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1908750]:2*int(64)[1040245] "temp"
    (1201468 call _build_tuple[1040203] lcm[1201440] 0 ret_tmp[1908750])
    (1908753 'move' call_tmp[1201463] ret_tmp[1908750])
    val call_tmp[1201471]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1201479]:2*int(64)[1040245] "dead after last mention" "maybe param" "temp" "type variable"
    const-val tmp[1201487]:2*int(64)[1040245] "dead at end of block" "insert auto destroy" "temp"
    (1201489 'move' tmp[1201487] call_tmp[1201463])
    1
    ref call_tmp[1201498]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
    (1201500 'move' call_tmp[1201498](1203116 '.' tmp[1201487] x0[1040241]))
    const-val g[1201505]:int(64)[13] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[1203121]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1203125 'move' coerce_tmp[1203121](1203123 'deref' call_tmp[1201498]))
    (1924529 '=' g[1201505] coerce_tmp[1203121])
    (1201507 'noop')
    ref call_tmp[1201510]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
    (1201512 'move' call_tmp[1201510](1203130 '.' tmp[1201487] x1[1040243]))
    const-val x[1201517]:int(64)[13] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[1203135]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1203139 'move' coerce_tmp[1203135](1203137 'deref' call_tmp[1201510]))
    (1924532 '=' x[1201517] coerce_tmp[1203135])
    (1201519 'noop')
    const-val emptyIntersection[1201874]:bool[10] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[1201876]:bool[10] "dead after last mention" "maybe param" "temp" "type variable"
    (1202141 'move' emptyIntersection[1201874] 0)
    val call_tmp[1202147]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1202155]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1202157 'move' call_tmp[1202155](1202160 call max[450224] lo1[1201087] lo2[1201216]))
    const-val call_tmp[1202163]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1202165 'move' call_tmp[1202163] call_tmp[1202155])
    val newlo[1202171]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1202173 'move' newlo[1202171] call_tmp[1202163])
    val call_tmp[1202177]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1202185]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1202187 'move' call_tmp[1202185](1202190 call min[450112] hi1[1201141] hi2[1201270]))
    const-val call_tmp[1202193]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1202195 'move' call_tmp[1202193] call_tmp[1202185])
    val newhi[1202201]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1202203 'move' newhi[1202201] call_tmp[1202193])
    const-val call_tmp[1202207]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1202209 'move' call_tmp[1202207] emptyIntersection[1201874])
    if call_tmp[1202207]
    {
      (1202217 call =[435443] newlo[1202171] 1)
      (1202223 call =[435443] newhi[1202201] 0)
    }
    const-val tmp[1202229]:bool[10] "dead after last mention" "maybe param" "temp"
    (1202231 'move' tmp[1202229](1202234 call ![7494] ambig[1200558]))
    const-val result[1202249]:range(int(64),bounded,false)[1027003] "dead at end of block" "delay instantiation" "insert auto destroy"
    val tmp[1202251]:bool[10] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1202253]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1202255]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1202257 'move' call_tmp[1202255] tmp[1202229])
    (1202262 'move' tmp[1202253] call_tmp[1202255])
    if tmp[1202253]
    {
      (1202342 'move' tmp[1202251] 1)
    }
    {
      (1202348 'move' tmp[1202251] 0)
    }
    val call_tmp[1202354]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1202394]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1202396 'move' call_tmp[1202394](1202402 call chpl_intToIdx[1190490] this[1200544] newlo[1202171]))
    const-val call_tmp[1202404]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1202406 'move' call_tmp[1202404](1202412 call chpl_intToIdx[1190490] this[1200544] newhi[1202201]))
    const-val call_tmp[1202414]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1202416 'move' call_tmp[1202414](1202422 call chpl_intToIdx[1190490] this[1200544] 0))
    const-val call_tmp[1202424]:range(int(64),bounded,false)[1027003] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[1203739]:range(int(64),bounded,false)[1027003] "dead at end of block" "delay instantiation" "temp"
    (1203742 call init[1026226] initTemp[1203739] call_tmp[1202394] call_tmp[1202404] newStride[1201410] call_tmp[1202414] tmp[1202251])
    (1202426 'move' call_tmp[1202424] initTemp[1203739])
    (1202438 'move' result[1202249] call_tmp[1202424])
    (1202997 'move' ret[1200548] result[1202249])
    (1924535 call chpl__autoDestroy[1674803] tmp[1201487])
    gotoReturn _end_this[1203005] _end_this[1203005]
    label _end_this[1203005]
    (1910896 '=' _retArg[1910894] ret[1200548])
    (1910898 return _void[55])
  }
  function chpl_count_help[1088505](const in arg r[1088507]:range(int(64),boundedLow,false)[1087754], const in arg count[1088509]:int(64)[13], ref arg _retArg[1909690]:_ref(range(int(64),bounded,false))[1027047]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1088511]:range(int(64),bounded,false)[1027003] "dead after last mention" "RVV" "temp"
    val resultType[1088598]:int(64)[13] "dead at end of block" "insert auto destroy" "type variable"
    val strType[1088610]:int(64)[13] "dead at end of block" "insert auto destroy" "type variable"
    const-val call_tmp[1088710]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1088712 'move' call_tmp[1088710](1088715 call ==[435744] count[1088509] 0))
    const-val call_tmp[1088718]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1088720 'move' call_tmp[1088718] call_tmp[1088710])
    if call_tmp[1088718]
    {
      {
        val call_tmp[1088745]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val call_tmp[1088761]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        ref call_tmp[1088769]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1088771 'move' call_tmp[1088769](1088774 call _low[1090874] r[1088507]))
        const-val call_tmp[1088777]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1090902]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1090906 'move' coerce_tmp[1090902](1090904 'deref' call_tmp[1088769]))
        (1088779 'move' call_tmp[1088777](1088782 call chpl__intToIdx[1027588] coerce_tmp[1090902]))
        val call_tmp[1088785]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        ref call_tmp[1088793]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1088795 'move' call_tmp[1088793](1088798 call _low[1090874] r[1088507]))
        const-val call_tmp[1088809]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1088811 'move' call_tmp[1088809](1088814 call absSameType[1091031] 1))
        const-val call_tmp[1088816]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1091135]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1091139 'move' coerce_tmp[1091135](1091137 'deref' call_tmp[1088793]))
        (1088818 'move' call_tmp[1088816](1088821 call -[440532] coerce_tmp[1091135] call_tmp[1088809]))
        const-val call_tmp[1088824]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1088826 'move' call_tmp[1088824](1088829 call chpl__intToIdx[1027588] call_tmp[1088816]))
        val call_tmp[1088840]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        (1088853 call _alignment[1091147] r[1088507])
        (1088861 call chpl__intToIdx[1091175])
        const-val call_tmp[1088872]:range(int(64),bounded,false)[1027003] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
        const-val initTemp[1091430]:range(int(64),bounded,false)[1027003] "dead after last mention" "delay instantiation" "temp"
        (1091433 call init[1091453] initTemp[1091430] call_tmp[1088777] call_tmp[1088824] 1 1)
        (1088874 'move' call_tmp[1088872] initTemp[1091430])
        (1088894 'move' ret[1088511] call_tmp[1088872])
        gotoReturn _end_chpl_count_help[1090477] _end_chpl_count_help[1090477]
      }
    }
    const-val tmp[1089228]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val tmp[1089248]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[1089266]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    const-val call_tmp[1089268]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1089270 'move' call_tmp[1089268](1089276 call hasLast[1092803] r[1088507]))
    const-val call_tmp[1089277]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1089279 'move' call_tmp[1089277](1089282 call ![7494] call_tmp[1089268]))
    (1089284 'move' tmp[1089266] call_tmp[1089277])
    (1089289 'move' tmp[1089248] tmp[1089266])
    (1089301 'move' tmp[1089228] tmp[1089248])
    val tmp[1089317]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1089319]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1089321]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1089323 'move' call_tmp[1089321] tmp[1089228])
    (1089328 'move' tmp[1089319] call_tmp[1089321])
    if tmp[1089319]
    {
      const-val tmp[1089335]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[1089337]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1089339 'move' call_tmp[1089337](1089342 call <[948587] count[1088509]))
      (1089345 'move' tmp[1089335] call_tmp[1089337])
      (1089350 'move' tmp[1089317] tmp[1089335])
    }
    {
      (1089356 'move' tmp[1089317] 0)
    }
    const-val call_tmp[1089362]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1089364 'move' call_tmp[1089362] tmp[1089317])
    if call_tmp[1089362]
    {
      (1089372 call boundsCheckHalt[210254] "With a negative count, the range must have a last index.")
    }
    val call_tmp[1089805]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val computeType[1089811]:int(64)[13] "dead at end of block" "insert auto destroy" "type variable"
    val call_tmp[1089817]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val signedComputeType[1089829]:int(64)[13] "dead at end of block" "insert auto destroy" "type variable"
    const-val call_tmp[1089839]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1089841 'move' call_tmp[1089839] count[1088509])
    const-val call_tmp[1089863]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1089865 'move' call_tmp[1089863](1089868 call *[1093496] call_tmp[1089839]))
    const-val diff[1089871]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1089873 'move' diff[1089871] call_tmp[1089863])
    const-val lo[1089877]:int(64)[13] "dead at end of block" "insert auto destroy"
    val tmp[1089879]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1089881]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1089883]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1089885 'move' call_tmp[1089883](1089888 call >[437788] diff[1089871] 0))
    (1089891 'move' tmp[1089881] call_tmp[1089883])
    if tmp[1089881]
    {
      ref tmp[1089898]:_ref(int(64))[936761] "dead at end of block" "maybe param" "no auto destroy" "reference to a const" "temp"
      (1089900 'move' tmp[1089898](1089903 call _low[1090874] r[1088507]))
      (1095506 'move' tmp[1089879](1095505 'deref' tmp[1089898]))
    }
    {
      const-val tmp[1089912]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      ref call_tmp[1089914]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1089916 'move' call_tmp[1089914](1089919 call _high[1093530] r[1088507]))
      ref call_tmp[1089922]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1089924 'move' call_tmp[1089922] call_tmp[1089914])
      const-val call_tmp[1089930]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (1089932 'move' call_tmp[1089930](1089935 call +[949855] diff[1089871]))
      const-val call_tmp[1089938]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (1089940 'move' call_tmp[1089938] call_tmp[1089930])
      const-val coerce_tmp[1094509]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1094513 'move' coerce_tmp[1094509](1094511 'deref' call_tmp[1089922]))
      (1089946 'move' tmp[1089912](1089949 call chpl__add[1093561] coerce_tmp[1094509] call_tmp[1089938]))
      (1089953 'move' tmp[1089879] tmp[1089912])
    }
    (1089959 'move' lo[1089877] tmp[1089879])
    const-val hi[1089964]:int(64)[13] "dead at end of block" "insert auto destroy"
    val tmp[1089966]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1089968]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1089970]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1089972 'move' call_tmp[1089970](1089975 call <[948587] diff[1089871]))
    (1089978 'move' tmp[1089968] call_tmp[1089970])
    if tmp[1089968]
    {
      ref tmp[1089985]:_ref(int(64))[936761] "dead at end of block" "maybe param" "no auto destroy" "reference to a const" "temp"
      (1089987 'move' tmp[1089985](1089990 call _high[1093530] r[1088507]))
      (1095508 'move' tmp[1089966](1095507 'deref' tmp[1089985]))
    }
    {
      const-val tmp[1089999]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      ref call_tmp[1090001]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1090003 'move' call_tmp[1090001](1090006 call _low[1090874] r[1088507]))
      ref call_tmp[1090009]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1090011 'move' call_tmp[1090009] call_tmp[1090001])
      const-val call_tmp[1090017]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (1090019 'move' call_tmp[1090017] diff[1089871])
      const-val call_tmp[1090025]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (1090027 'move' call_tmp[1090025](1090030 call -[962415] call_tmp[1090017]))
      const-val coerce_tmp[1094562]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1094566 'move' coerce_tmp[1094562](1094564 'deref' call_tmp[1090009]))
      (1090033 'move' tmp[1089999](1090036 call chpl__add[1093561] coerce_tmp[1094562] call_tmp[1090025]))
      (1090040 'move' tmp[1089966] tmp[1089999])
    }
    (1090046 'move' hi[1089964] tmp[1089966])
    val call_tmp[1090409]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1090425]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1090427 'move' call_tmp[1090425](1090433 call chpl_intToIdx[1094593] r[1088507] lo[1089877]))
    const-val call_tmp[1090435]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1090437 'move' call_tmp[1090435](1090443 call chpl_intToIdx[1094593] r[1088507] hi[1089964]))
    const-val call_tmp[1090445]:range(int(64),bounded,false)[1027003] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1094641]:range(int(64),bounded,false)[1027003] "dead after last mention" "delay instantiation" "temp"
    (1094644 call init[1094664] initTemp[1094641] call_tmp[1090425] call_tmp[1090435])
    (1090447 'move' call_tmp[1090445] initTemp[1094641])
    (1090467 'move' ret[1088511] call_tmp[1090445])
    gotoReturn _end_chpl_count_help[1090477] _end_chpl_count_help[1090477]
    label _end_chpl_count_help[1090477]
    (1909692 '=' _retArg[1909690] ret[1088511])
    (1909694 return _void[55])
  }
  function #[1088114](const in arg r[1088116]:range(int(64),boundedLow,false)[1087754], const in arg count[1088129]:int(64)[13], ref arg _retArg[1909678]:_ref(range(int(64),bounded,false))[1027047]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val ret[1088131]:range(int(64),bounded,false)[1027003] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1088360]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1909684]:range(int(64),bounded,false)[1027003] "temp"
    (1088365 call chpl_count_help[1088505] r[1088116] count[1088129] ret_tmp[1909684])
    (1909687 'move' call_tmp[1088360] ret_tmp[1909684])
    (1088368 'move' ret[1088131] call_tmp[1088360])
    (1909680 '=' _retArg[1909678] ret[1088131])
    (1909682 return _void[55])
  }
  function chpl_checkIfRangeIterWillOverflow[976539](const in arg low[976543]:int(32)[95], const in arg high[976545]:int(32)[95], const in arg stride[976547]:int(64)[13], const in arg first[976553]:int(32)[95], const in arg last[976559]:int(32)[95], const in arg shouldHalt[976565]:bool[10]) : bool[10] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1879564]:int(32)[95] "temp"
    val ret[976567]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[976581]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (976583 'move' call_tmp[976581](976586 call >[437766] low[976543] high[976545]))
    const-val call_tmp[976589]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (976591 'move' call_tmp[976589] call_tmp[976581])
    if call_tmp[976589]
    {
      (976598 'move' ret[976567] 0)
      gotoReturn _end_chpl_checkIfRangeIterWillOverflow[977079] _end_chpl_checkIfRangeIterWillOverflow[977079]
    }
    val willOverFlow[976605]:bool[10] "dead at end of block" "insert auto destroy"
    (976607 'move' willOverFlow[976605] 0)
    {
      const-val tmp[976627]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val coerce_tmp[977187]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (977193 'move' coerce_tmp[977187](977189 'cast' int(32)[95] 0))
      (976629 'move' tmp[976627](976632 call >[437766] last[976559] coerce_tmp[977187]))
      val tmp[976648]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[976650]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[976652]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (976654 'move' call_tmp[976652] tmp[976627])
      (976659 'move' tmp[976650] call_tmp[976652])
      if tmp[976650]
      {
        const-val tmp[976666]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[976668]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (976670 'move' call_tmp[976668](976673 call >[437788] stride[976547] 0))
        (976676 'move' tmp[976666] call_tmp[976668])
        (976681 'move' tmp[976648] tmp[976666])
      }
      {
        (976687 'move' tmp[976648] 0)
      }
      const-val call_tmp[976693]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (976695 'move' call_tmp[976693] tmp[976648])
      if call_tmp[976693]
      {
        const-val call_tmp[976709]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
        (976711 'move' call_tmp[976709](976714 call -[440510] 2147483647 last[976559]))
        const-val call_tmp[976717]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[977347]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (977353 'move' coerce_tmp[977347](977349 'cast' int(64)[13] call_tmp[976709]))
        (976719 'move' call_tmp[976717](976722 call >[437788] stride[976547] coerce_tmp[977347]))
        const-val call_tmp[976725]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (976727 'move' call_tmp[976725] call_tmp[976717])
        if call_tmp[976725]
        {
          (976735 call =[435290] willOverFlow[976605] 1)
        }
      }
      {
        const-val tmp[976742]:bool[10] "dead after last mention" "maybe param" "temp"
        const-val coerce_tmp[977357]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (977363 'move' coerce_tmp[977357](977359 'cast' int(32)[95] 0))
        (976744 'move' tmp[976742](976747 call <[437546] last[976559] coerce_tmp[977357]))
        val tmp[976763]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        const-val tmp[976765]:bool[10] "dead after last mention" "maybe param" "temp"
        const-val call_tmp[976767]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (976769 'move' call_tmp[976767] tmp[976742])
        (976774 'move' tmp[976765] call_tmp[976767])
        if tmp[976765]
        {
          const-val tmp[976781]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
          const-val call_tmp[976783]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (976785 'move' call_tmp[976783](976788 call <[948587] stride[976547]))
          (976791 'move' tmp[976781] call_tmp[976783])
          (976796 'move' tmp[976763] tmp[976781])
        }
        {
          (976802 'move' tmp[976763] 0)
        }
        const-val call_tmp[976808]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (976810 'move' call_tmp[976808] tmp[976763])
        if call_tmp[976808]
        {
          const-val call_tmp[976824]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
          (976826 'move' call_tmp[976824](976829 call -[440510] -2147483648 last[976559]))
          const-val call_tmp[976832]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[977975]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (977981 'move' coerce_tmp[977975](977977 'cast' int(64)[13] call_tmp[976824]))
          (976834 'move' call_tmp[976832](976837 call <[437568] stride[976547] coerce_tmp[977975]))
          const-val call_tmp[976840]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (976842 'move' call_tmp[976840] call_tmp[976832])
          if call_tmp[976840]
          {
            (976850 call =[435290] willOverFlow[976605] 1)
          }
        }
      }
    }
    const-val tmp[976999]:bool[10] "dead after last mention" "maybe param" "temp"
    (977001 'move' tmp[976999] willOverFlow[976605])
    val tmp[977017]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[977019]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[977021]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (977023 'move' call_tmp[977021] tmp[976999])
    (977028 'move' tmp[977019] call_tmp[977021])
    if tmp[977019]
    {
      const-val tmp[977035]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      (977037 'move' tmp[977035] shouldHalt[976565])
      (977042 'move' tmp[977017] tmp[977035])
    }
    {
      (977048 'move' tmp[977017] 0)
    }
    const-val call_tmp[977054]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (977056 'move' call_tmp[977054] tmp[977017])
    if call_tmp[977054]
    {
      (977066 call boundsCheckHalt[210254] "Iteration over a bounded range may be incorrect due to overflow.")
    }
    (977071 'move' ret[976567] willOverFlow[976605])
    gotoReturn _end_chpl_checkIfRangeIterWillOverflow[977079] _end_chpl_checkIfRangeIterWillOverflow[977079]
    label _end_chpl_checkIfRangeIterWillOverflow[977079]
    (977081 return ret[976567])
  }
  function chpl_checkIfRangeIterWillOverflow_default_last[977119](const in arg high[977121]:int(32)[95]) : int(32)[95] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "resolved" "fn synchronization free"
  {
    val ret[977123]:int(32)[95] "dead after last mention" "RVV" "maybe param" "temp"
    const-val last[977128]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (977132 'move' last[977128] high[977121])
    (977135 'move' ret[977123] last[977128])
    (977126 return ret[977123])
  }
  function chpl_checkIfRangeIterWillOverflow_default_first[977091](const in arg low[977093]:int(32)[95]) : int(32)[95] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "resolved" "fn synchronization free"
  {
    val ret[977095]:int(32)[95] "dead after last mention" "RVV" "maybe param" "temp"
    const-val first[977100]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (977104 'move' first[977100] low[977093])
    (977107 'move' ret[977095] first[977100])
    (977098 return ret[977095])
  }
  function chpl_checkIfRangeIterWillOverflow[1096265](const in arg low[1096269]:int(64)[13], const in arg high[1096271]:int(64)[13], const in arg stride[1096273]:int(64)[13], const in arg first[1096279]:int(64)[13], const in arg last[1096285]:int(64)[13], const in arg shouldHalt[1096291]:bool[10]) : bool[10] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1879763]:int(64)[13] "temp"
    val ret[1096293]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1096307]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1096309 'move' call_tmp[1096307](1096312 call >[437788] low[1096269] high[1096271]))
    const-val call_tmp[1096315]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1096317 'move' call_tmp[1096315] call_tmp[1096307])
    if call_tmp[1096315]
    {
      (1096324 'move' ret[1096293] 0)
      gotoReturn _end_chpl_checkIfRangeIterWillOverflow[1096805] _end_chpl_checkIfRangeIterWillOverflow[1096805]
    }
    val willOverFlow[1096331]:bool[10] "dead at end of block" "insert auto destroy"
    (1096333 'move' willOverFlow[1096331] 0)
    {
      const-val tmp[1096353]:bool[10] "dead after last mention" "maybe param" "temp"
      (1096355 'move' tmp[1096353](1096358 call >[437788] last[1096285] 0))
      val tmp[1096374]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1096376]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1096378]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1096380 'move' call_tmp[1096378] tmp[1096353])
      (1096385 'move' tmp[1096376] call_tmp[1096378])
      if tmp[1096376]
      {
        const-val tmp[1096392]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1096394]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1096396 'move' call_tmp[1096394](1096399 call >[437788] stride[1096273] 0))
        (1096402 'move' tmp[1096392] call_tmp[1096394])
        (1096407 'move' tmp[1096374] tmp[1096392])
      }
      {
        (1096413 'move' tmp[1096374] 0)
      }
      const-val call_tmp[1096419]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1096421 'move' call_tmp[1096419] tmp[1096374])
      if call_tmp[1096419]
      {
        const-val call_tmp[1096435]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1096437 'move' call_tmp[1096435](1096440 call -[980537] last[1096285]))
        const-val call_tmp[1096443]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1096445 'move' call_tmp[1096443](1096448 call >[437788] stride[1096273] call_tmp[1096435]))
        const-val call_tmp[1096451]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1096453 'move' call_tmp[1096451] call_tmp[1096443])
        if call_tmp[1096451]
        {
          (1096461 call =[435290] willOverFlow[1096331] 1)
        }
      }
      {
        const-val tmp[1096468]:bool[10] "dead after last mention" "maybe param" "temp"
        (1096470 'move' tmp[1096468](1096473 call <[948587] last[1096285]))
        val tmp[1096489]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        const-val tmp[1096491]:bool[10] "dead after last mention" "maybe param" "temp"
        const-val call_tmp[1096493]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1096495 'move' call_tmp[1096493] tmp[1096468])
        (1096500 'move' tmp[1096491] call_tmp[1096493])
        if tmp[1096491]
        {
          const-val tmp[1096507]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
          const-val call_tmp[1096509]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1096511 'move' call_tmp[1096509](1096514 call <[948587] stride[1096273]))
          (1096517 'move' tmp[1096507] call_tmp[1096509])
          (1096522 'move' tmp[1096489] tmp[1096507])
        }
        {
          (1096528 'move' tmp[1096489] 0)
        }
        const-val call_tmp[1096534]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1096536 'move' call_tmp[1096534] tmp[1096489])
        if call_tmp[1096534]
        {
          const-val call_tmp[1096550]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (1096552 'move' call_tmp[1096550](1096555 call -[980389] last[1096285]))
          const-val call_tmp[1096558]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1096560 'move' call_tmp[1096558](1096563 call <[437568] stride[1096273] call_tmp[1096550]))
          const-val call_tmp[1096566]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1096568 'move' call_tmp[1096566] call_tmp[1096558])
          if call_tmp[1096566]
          {
            (1096576 call =[435290] willOverFlow[1096331] 1)
          }
        }
      }
    }
    const-val tmp[1096725]:bool[10] "dead after last mention" "maybe param" "temp"
    (1096727 'move' tmp[1096725] willOverFlow[1096331])
    val tmp[1096743]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1096745]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1096747]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1096749 'move' call_tmp[1096747] tmp[1096725])
    (1096754 'move' tmp[1096745] call_tmp[1096747])
    if tmp[1096745]
    {
      const-val tmp[1096761]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      (1096763 'move' tmp[1096761] shouldHalt[1096291])
      (1096768 'move' tmp[1096743] tmp[1096761])
    }
    {
      (1096774 'move' tmp[1096743] 0)
    }
    const-val call_tmp[1096780]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1096782 'move' call_tmp[1096780] tmp[1096743])
    if call_tmp[1096780]
    {
      (1096792 call boundsCheckHalt[210254] "Iteration over a bounded range may be incorrect due to overflow.")
    }
    (1096797 'move' ret[1096293] willOverFlow[1096331])
    gotoReturn _end_chpl_checkIfRangeIterWillOverflow[1096805] _end_chpl_checkIfRangeIterWillOverflow[1096805]
    label _end_chpl_checkIfRangeIterWillOverflow[1096805]
    (1096807 return ret[1096293])
  }
  function chpl_checkIfRangeIterWillOverflow_default_last[1103415](const in arg high[1103417]:int(64)[13]) : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "resolved" "fn synchronization free"
  {
    val ret[1103419]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val last[1103424]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (1103428 'move' last[1103424] high[1103417])
    (1103431 'move' ret[1103419] last[1103424])
    (1103422 return ret[1103419])
  }
  function chpl_checkIfRangeIterWillOverflow_default_first[1103387](const in arg low[1103389]:int(64)[13]) : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "resolved" "fn synchronization free"
  {
    val ret[1103391]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val first[1103396]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (1103400 'move' first[1103396] low[1103389])
    (1103403 'move' ret[1103391] first[1103396])
    (1103394 return ret[1103391])
  }
  function range(int(64),bounded,false)[1027003].checkIfIterWillOverflow[1096003](const in arg this[1096009]:range(int(64),bounded,false)[1027003], const in arg shouldHalt[1096015]:bool[10]) : bool[10] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    val ret[1096017]:bool[10] "dead after last mention" "RVV" "temp"
    val call_tmp[1096025]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[1096033]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    (1096035 'move' call_tmp[1096033](1096038 call _low[1028641] this[1096009]))
    ref call_tmp[1096041]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    (1096043 'move' call_tmp[1096041](1096046 call _high[1028849] this[1096009]))
    const-val call_tmp[1096057]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1096059 'move' call_tmp[1096057](1096062 call firstAsInt[1042861] this[1096009]))
    const-val call_tmp[1096065]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1096067 'move' call_tmp[1096065](1096070 call lastAsInt[1096136] this[1096009]))
    const-val call_tmp[1096073]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1096809]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1096813 'move' coerce_tmp[1096809](1096811 'deref' call_tmp[1096033]))
    const-val coerce_tmp[1096815]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1096819 'move' coerce_tmp[1096815](1096817 'deref' call_tmp[1096041]))
    (1096075 'move' call_tmp[1096073](1096078 call chpl_checkIfRangeIterWillOverflow[1096265] coerce_tmp[1096809] coerce_tmp[1096815] 1 call_tmp[1096057] call_tmp[1096065] shouldHalt[1096015]))
    (1096086 'move' ret[1096017] call_tmp[1096073])
    (1096090 return ret[1096017])
  }
  function range(int(64),bounded,true)[1570523].checkIfIterWillOverflow[1571479](const in arg this[1571485]:range(int(64),bounded,true)[1570523], const in arg shouldHalt[1571491]:bool[10]) : bool[10] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    val ret[1571493]:bool[10] "dead after last mention" "RVV" "temp"
    val call_tmp[1571501]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[1571509]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    (1571511 'move' call_tmp[1571509](1571514 call _low[1571648] this[1571485]))
    ref call_tmp[1571517]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    (1571519 'move' call_tmp[1571517](1571522 call _high[1571676] this[1571485]))
    const-val call_tmp[1571525]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1571527 'move' call_tmp[1571525](1571530 call stride[1571704] this[1571485]))
    const-val call_tmp[1571533]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1571535 'move' call_tmp[1571533](1571538 call firstAsInt[1571772] this[1571485]))
    const-val call_tmp[1571541]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1571543 'move' call_tmp[1571541](1571546 call lastAsInt[1572406] this[1571485]))
    const-val call_tmp[1571549]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1572538]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1572542 'move' coerce_tmp[1572538](1572540 'deref' call_tmp[1571509]))
    const-val coerce_tmp[1572544]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1572548 'move' coerce_tmp[1572544](1572546 'deref' call_tmp[1571517]))
    (1571551 'move' call_tmp[1571549](1571554 call chpl_checkIfRangeIterWillOverflow[1096265] coerce_tmp[1572538] coerce_tmp[1572544] call_tmp[1571525] call_tmp[1571533] call_tmp[1571541] shouldHalt[1571491]))
    (1571562 'move' ret[1571493] call_tmp[1571549])
    (1571566 return ret[1571493])
  }
  function chpl_direct_range_iter[1230419](const in arg low[1230423]:int(64)[13], const in arg high[1230427]:int(64)[13], ref arg _retArg[1911136]:_ref(_ir_chpl_direct_range_iter)[1230690]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "iterator fn" "resolved" "fn synchronization free" "no return value for void"
  {
    val _ir[2117620]:_ir_chpl_direct_range_iter[1230579] "temp"
    (2117622 '.=' _ir[2117620] F0_low[2116766] low[1230423])
    (2117626 '.=' _ir[2117620] F1_high[2116770] high[1230427])
    (2117630 '=' _retArg[1911136] _ir[2117620])
    (2117633 return _void[55])
  }
  type _ic_chpl_direct_range_iter[1230573] val super[1230574]:object[22] "super class" val more[1230576]:int(64)[13] const-val F0_low[2116764]:int(64)[13] const-val F1_high[2116768]:int(64)[13] val F2__iterator[2116772]:_ic_chpl_direct_param_stride_range_iter[1103475] val F3_i[2116774]:int(64)[13] const-val F4_low[2116776]:int(64)[13] val value[2116778]:int(64)[13]
  type _ir_chpl_direct_range_iter[1230579] const-val F0_low[2116766]:int(64)[13] const-val F1_high[2116770]:int(64)[13]
  function _getIterator[1230588](const  ref arg ir[1230590]:_ir_chpl_direct_range_iter[1230579]) : _ic_chpl_direct_range_iter[1230573] "auto ii" "inline" "resolved" "fn synchronization free" "unsafe"
  {
    val ret[1230697]:_ic_chpl_direct_range_iter[1230573] "dead after last mention" "RVV" "temp"
    val _ic_[1230580]:_ic_chpl_direct_range_iter[1230573] "dead after last mention" "temp"
    const-val call_tmp[1230704]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1230707 'move' call_tmp[1230704](1230719 'sizeof_bundle' _ic_chpl_direct_range_iter[1230573]))
    const-val cast_tmp[1230722]:c_void_ptr[149] "dead after last mention" "temp"
    (1230724 'move' cast_tmp[1230722](1230585 call chpl_here_alloc[187788] call_tmp[1230704] 39))
    (1230593 'move' _ic_[1230580](1230726 'cast' _ic_chpl_direct_range_iter[1230573] cast_tmp[1230722]))
    (1230595 'setcid' _ic_[1230580])
    (1230702 'move' ret[1230697] _ic_[1230580])
    (2117636 '.=' ret[1230697] more[1230576] 1)
    const-val tmp[2117640]:int(64)[13] "temp"
    (2117645 'move' tmp[2117640](2117641 '.v' ir[1230590] F0_low[2116766]))
    (2117647 '.=' ret[1230697] F0_low[2116764] tmp[2117640])
    const-val tmp[2117651]:int(64)[13] "temp"
    (2117656 'move' tmp[2117651](2117652 '.v' ir[1230590] F1_high[2116770]))
    (2117658 '.=' ret[1230697] F1_high[2116768] tmp[2117651])
    (1230699 return ret[1230697])
  }
  function chpl_direct_range_iter[1446433](const in arg low[1446437]:int(64)[13], const in arg high[1446441]:int(64)[13], ref arg _retArg[1915219]:_ref(_ir_chpl_direct_range_iter)[1447910]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "iterator fn" "resolved" "no return value for void"
  {
    val _ir[2145683]:_ir_chpl_direct_range_iter[1447799] "temp"
    (2145685 '.=' _ir[2145683] F0_low[2144855] low[1446437])
    (2145689 '.=' _ir[2145683] F1_high[2144859] high[1446441])
    (2145693 '=' _retArg[1915219] _ir[2145683])
    (2145696 return _void[55])
  }
  type _ic_chpl_direct_range_iter[1447793] val super[1447794]:object[22] "super class" val more[1447796]:int(64)[13] const-val F0_low[2144853]:int(64)[13] const-val F1_high[2144857]:int(64)[13] val F2__iterator[2144861]:_ic_chpl_direct_param_stride_range_iter[1447539] val F3_i[2144863]:int(64)[13] const-val F4_high[2144865]:int(64)[13] val value[2144867]:int(64)[13]
  type _ir_chpl_direct_range_iter[1447799] const-val F0_low[2144855]:int(64)[13] const-val F1_high[2144859]:int(64)[13]
  function _getIterator[1447808](const  ref arg ir[1447810]:_ir_chpl_direct_range_iter[1447799]) : _ic_chpl_direct_range_iter[1447793] "auto ii" "inline" "resolved" "unsafe"
  {
    val ret[1447917]:_ic_chpl_direct_range_iter[1447793] "dead after last mention" "RVV" "temp"
    val _ic_[1447800]:_ic_chpl_direct_range_iter[1447793] "dead after last mention" "temp"
    const-val call_tmp[1447924]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1447927 'move' call_tmp[1447924](1447939 'sizeof_bundle' _ic_chpl_direct_range_iter[1447793]))
    const-val cast_tmp[1447942]:c_void_ptr[149] "dead after last mention" "temp"
    (1447944 'move' cast_tmp[1447942](1447805 call chpl_here_alloc[187788] call_tmp[1447924] 85))
    (1447813 'move' _ic_[1447800](1447946 'cast' _ic_chpl_direct_range_iter[1447793] cast_tmp[1447942]))
    (1447815 'setcid' _ic_[1447800])
    (1447922 'move' ret[1447917] _ic_[1447800])
    (2145699 '.=' ret[1447917] more[1447796] 1)
    const-val tmp[2145703]:int(64)[13] "temp"
    (2145708 'move' tmp[2145703](2145704 '.v' ir[1447810] F0_low[2144855]))
    (2145710 '.=' ret[1447917] F0_low[2144853] tmp[2145703])
    const-val tmp[2145714]:int(64)[13] "temp"
    (2145719 'move' tmp[2145714](2145715 '.v' ir[1447810] F1_high[2144859]))
    (2145721 '.=' ret[1447917] F1_high[2144857] tmp[2145714])
    (1447919 return ret[1447917])
  }
  function chpl_direct_counted_range_iter[458112](const in arg low[458119]:int(64)[13], const in arg count[458125]:int(64)[13], ref arg _retArg[1907782]:_ref(_ir_chpl_direct_counted_range_iter)[1104096]) : void[4] "fn returns via _retArg" "inline" "iterator fn" "resolved" "fn synchronization free" "no return value for void"
  {
    val _ir[2109300]:_ir_chpl_direct_counted_range_iter[1103985] "temp"
    (2109302 '.=' _ir[2109300] F0_low[2107538] low[458119])
    (2109306 '.=' _ir[2109300] F1_count[2107542] count[458125])
    (2109310 '=' _retArg[1907782] _ir[2109300])
    (2109313 return _void[55])
  }
  type _ic_chpl_direct_counted_range_iter[1103979] val super[1103980]:object[22] "super class" val more[1103982]:int(64)[13] const-val F0_low[2107536]:int(64)[13] const-val F1_count[2107540]:int(64)[13] val F2__iterator[2107544]:_ic_chpl_direct_counted_range_iter_helper[1103729] const F3_tmp[2107546]:2*int(64)[1040245] val F4__iterator[2107548]:_ic_chpl_direct_param_stride_range_iter[1103475] val F5_i[2107550]:int(64)[13] const-val F6_low[2107552]:int(64)[13] val value[2107554]:int(64)[13]
  type _ir_chpl_direct_counted_range_iter[1103985] const-val F0_low[2107538]:int(64)[13] const-val F1_count[2107542]:int(64)[13]
  function _getIterator[1103994](const  ref arg ir[1103996]:_ir_chpl_direct_counted_range_iter[1103985]) : _ic_chpl_direct_counted_range_iter[1103979] "auto ii" "inline" "resolved" "fn synchronization free" "unsafe"
  {
    val ret[1104103]:_ic_chpl_direct_counted_range_iter[1103979] "dead after last mention" "RVV" "temp"
    val _ic_[1103986]:_ic_chpl_direct_counted_range_iter[1103979] "dead after last mention" "temp"
    const-val call_tmp[1104110]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1104113 'move' call_tmp[1104110](1104125 'sizeof_bundle' _ic_chpl_direct_counted_range_iter[1103979]))
    const-val cast_tmp[1104128]:c_void_ptr[149] "dead after last mention" "temp"
    (1104130 'move' cast_tmp[1104128](1103991 call chpl_here_alloc[187788] call_tmp[1104110] 30))
    (1103999 'move' _ic_[1103986](1104132 'cast' _ic_chpl_direct_counted_range_iter[1103979] cast_tmp[1104128]))
    (1104001 'setcid' _ic_[1103986])
    (1104108 'move' ret[1104103] _ic_[1103986])
    (2109316 '.=' ret[1104103] more[1103982] 1)
    const-val tmp[2109320]:int(64)[13] "temp"
    (2109325 'move' tmp[2109320](2109321 '.v' ir[1103996] F0_low[2107538]))
    (2109327 '.=' ret[1104103] F0_low[2107536] tmp[2109320])
    const-val tmp[2109331]:int(64)[13] "temp"
    (2109336 'move' tmp[2109331](2109332 '.v' ir[1103996] F1_count[2107542]))
    (2109338 '.=' ret[1104103] F1_count[2107540] tmp[2109331])
    (1104105 return ret[1104103])
  }
  function chpl_direct_counted_range_iter[458056](const in arg low[458063]:int(32)[95], const in arg count[458069]:int(32)[95], ref arg _retArg[1907712]:_ref(_ir_chpl_direct_counted_range_iter)[978617]) : void[4] "fn returns via _retArg" "inline" "iterator fn" "resolved" "fn synchronization free" "no return value for void"
  {
    val _ir[2107494]:_ir_chpl_direct_counted_range_iter[978506] "temp"
    (2107496 '.=' _ir[2107494] F0_low[2105689] low[458063])
    (2107500 '.=' _ir[2107494] F1_count[2105693] count[458069])
    (2107504 '=' _retArg[1907712] _ir[2107494])
    (2107507 return _void[55])
  }
  type _ic_chpl_direct_counted_range_iter[978500] val super[978501]:object[22] "super class" val more[978503]:int(64)[13] const-val F0_low[2105687]:int(32)[95] const-val F1_count[2105691]:int(32)[95] val F2__iterator[2105695]:_ic_chpl_direct_counted_range_iter_helper[978250] const F3_tmp[2105697]:2*int(32)[971867] val F4__iterator[2105699]:_ic_chpl_direct_param_stride_range_iter[977996] val F5_i[2105701]:int(32)[95] const-val F6_low[2105703]:int(32)[95] val value[2105705]:int(32)[95]
  type _ir_chpl_direct_counted_range_iter[978506] const-val F0_low[2105689]:int(32)[95] const-val F1_count[2105693]:int(32)[95]
  function _getIterator[978515](const  ref arg ir[978517]:_ir_chpl_direct_counted_range_iter[978506]) : _ic_chpl_direct_counted_range_iter[978500] "auto ii" "inline" "resolved" "fn synchronization free" "unsafe"
  {
    val ret[978624]:_ic_chpl_direct_counted_range_iter[978500] "dead after last mention" "RVV" "temp"
    val _ic_[978507]:_ic_chpl_direct_counted_range_iter[978500] "dead after last mention" "temp"
    const-val call_tmp[978631]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (978634 'move' call_tmp[978631](978646 'sizeof_bundle' _ic_chpl_direct_counted_range_iter[978500]))
    const-val cast_tmp[978649]:c_void_ptr[149] "dead after last mention" "temp"
    (978651 'move' cast_tmp[978649](978512 call chpl_here_alloc[187788] call_tmp[978631] 5))
    (978520 'move' _ic_[978507](978653 'cast' _ic_chpl_direct_counted_range_iter[978500] cast_tmp[978649]))
    (978522 'setcid' _ic_[978507])
    (978629 'move' ret[978624] _ic_[978507])
    (2107510 '.=' ret[978624] more[978503] 1)
    const-val tmp[2107514]:int(32)[95] "temp"
    (2107519 'move' tmp[2107514](2107515 '.v' ir[978517] F0_low[2105689]))
    (2107521 '.=' ret[978624] F0_low[2105687] tmp[2107514])
    const-val tmp[2107525]:int(32)[95] "temp"
    (2107530 'move' tmp[2107525](2107526 '.v' ir[978517] F1_count[2105693]))
    (2107532 '.=' ret[978624] F1_count[2105691] tmp[2107525])
    (978626 return ret[978624])
  }
  function chpl_direct_counted_range_iter[458336](const in arg low[458343]:int(64)[13], const in arg count[458349]:uint(64)[115], ref arg _retArg[1907792]:_ref(_ir_chpl_direct_counted_range_iter)[1407467]) : void[4] "fn returns via _retArg" "inline" "iterator fn" "resolved" "fn synchronization free" "no return value for void"
  {
    val _ir[2110986]:_ir_chpl_direct_counted_range_iter[1407356] "temp"
    (2110988 '.=' _ir[2110986] F0_low[2109344] low[458343])
    (2110992 '.=' _ir[2110986] F1_count[2109348] count[458349])
    (2110996 '=' _retArg[1907792] _ir[2110986])
    (2110999 return _void[55])
  }
  type _ic_chpl_direct_counted_range_iter[1407350] val super[1407351]:object[22] "super class" val more[1407353]:int(64)[13] const-val F0_low[2109342]:int(64)[13] const-val F1_count[2109346]:uint(64)[115] val F2__iterator[2109350]:_ic_chpl_direct_counted_range_iter_helper[1407100] const F3_tmp[2109352]:2*int(64)[1040245] val F4__iterator[2109354]:_ic_chpl_direct_param_stride_range_iter[1103475] val F5_i[2109356]:int(64)[13] const-val F6_low[2109358]:int(64)[13] val value[2109360]:int(64)[13]
  type _ir_chpl_direct_counted_range_iter[1407356] const-val F0_low[2109344]:int(64)[13] const-val F1_count[2109348]:uint(64)[115]
  function _getIterator[1407365](const  ref arg ir[1407367]:_ir_chpl_direct_counted_range_iter[1407356]) : _ic_chpl_direct_counted_range_iter[1407350] "auto ii" "inline" "resolved" "fn synchronization free" "unsafe"
  {
    val ret[1407474]:_ic_chpl_direct_counted_range_iter[1407350] "dead after last mention" "RVV" "temp"
    val _ic_[1407357]:_ic_chpl_direct_counted_range_iter[1407350] "dead after last mention" "temp"
    const-val call_tmp[1407481]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1407484 'move' call_tmp[1407481](1407496 'sizeof_bundle' _ic_chpl_direct_counted_range_iter[1407350]))
    const-val cast_tmp[1407499]:c_void_ptr[149] "dead after last mention" "temp"
    (1407501 'move' cast_tmp[1407499](1407362 call chpl_here_alloc[187788] call_tmp[1407481] 82))
    (1407370 'move' _ic_[1407357](1407503 'cast' _ic_chpl_direct_counted_range_iter[1407350] cast_tmp[1407499]))
    (1407372 'setcid' _ic_[1407357])
    (1407479 'move' ret[1407474] _ic_[1407357])
    (2111002 '.=' ret[1407474] more[1407353] 1)
    const-val tmp[2111006]:int(64)[13] "temp"
    (2111011 'move' tmp[2111006](2111007 '.v' ir[1407367] F0_low[2109344]))
    (2111013 '.=' ret[1407474] F0_low[2109342] tmp[2111006])
    const-val tmp[2111017]:uint(64)[115] "temp"
    (2111022 'move' tmp[2111017](2111018 '.v' ir[1407367] F1_count[2109348]))
    (2111024 '.=' ret[1407474] F1_count[2109346] tmp[2111017])
    (1407476 return ret[1407474])
  }
  function chpl_direct_counted_range_iter_helper[971077](const in arg low[971079]:int(32)[95], const in arg count[971081]:int(32)[95], ref arg _retArg[1908014]:_ref(_ir_chpl_direct_counted_range_iter_helper)[978367]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "iterator fn" "resolved" "fn synchronization free" "no return value for void"
  {
    val _ir[2112527]:_ir_chpl_direct_counted_range_iter_helper[978256] "temp"
    (2112529 '.=' _ir[2112527] F0_low[2111030] low[971079])
    (2112533 '.=' _ir[2112527] F1_count[2111034] count[971081])
    (2112537 '=' _retArg[1908014] _ir[2112527])
    (2112540 return _void[55])
  }
  type _ic_chpl_direct_counted_range_iter_helper[978250] val super[978251]:object[22] "super class" val more[978253]:int(64)[13] const-val F0_low[2111028]:int(32)[95] const-val F1_count[2111032]:int(32)[95] const F2_tmp[2111036]:2*int(32)[971867] val F3__iterator[2111038]:_ic_chpl_direct_param_stride_range_iter[977996] val F4_i[2111040]:int(32)[95] const-val F5_low[2111042]:int(32)[95] val value[2111044]:int(32)[95]
  type _ir_chpl_direct_counted_range_iter_helper[978256] const-val F0_low[2111030]:int(32)[95] const-val F1_count[2111034]:int(32)[95]
  function _getIterator[978265](const  ref arg ir[978267]:_ir_chpl_direct_counted_range_iter_helper[978256]) : _ic_chpl_direct_counted_range_iter_helper[978250] "auto ii" "inline" "resolved" "fn synchronization free" "unsafe"
  {
    val ret[978374]:_ic_chpl_direct_counted_range_iter_helper[978250] "dead after last mention" "RVV" "temp"
    val _ic_[978257]:_ic_chpl_direct_counted_range_iter_helper[978250] "dead after last mention" "temp"
    const-val call_tmp[978381]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (978384 'move' call_tmp[978381](978396 'sizeof_bundle' _ic_chpl_direct_counted_range_iter_helper[978250]))
    const-val cast_tmp[978399]:c_void_ptr[149] "dead after last mention" "temp"
    (978401 'move' cast_tmp[978399](978262 call chpl_here_alloc[187788] call_tmp[978381] 4))
    (978270 'move' _ic_[978257](978403 'cast' _ic_chpl_direct_counted_range_iter_helper[978250] cast_tmp[978399]))
    (978272 'setcid' _ic_[978257])
    (978379 'move' ret[978374] _ic_[978257])
    (2112543 '.=' ret[978374] more[978253] 1)
    const-val tmp[2112547]:int(32)[95] "temp"
    (2112552 'move' tmp[2112547](2112548 '.v' ir[978267] F0_low[2111030]))
    (2112554 '.=' ret[978374] F0_low[2111028] tmp[2112547])
    const-val tmp[2112558]:int(32)[95] "temp"
    (2112563 'move' tmp[2112558](2112559 '.v' ir[978267] F1_count[2111034]))
    (2112565 '.=' ret[978374] F1_count[2111032] tmp[2112558])
    (978376 return ret[978374])
  }
  function chpl_direct_counted_range_iter_helper[1102287](const in arg low[1102289]:int(64)[13], const in arg count[1102291]:int(64)[13], ref arg _retArg[1909722]:_ref(_ir_chpl_direct_counted_range_iter_helper)[1103846]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "iterator fn" "resolved" "fn synchronization free" "no return value for void"
  {
    val _ir[2115150]:_ir_chpl_direct_counted_range_iter_helper[1103735] "temp"
    (2115152 '.=' _ir[2115150] F0_low[2113696] low[1102289])
    (2115156 '.=' _ir[2115150] F1_count[2113700] count[1102291])
    (2115160 '=' _retArg[1909722] _ir[2115150])
    (2115163 return _void[55])
  }
  type _ic_chpl_direct_counted_range_iter_helper[1103729] val super[1103730]:object[22] "super class" val more[1103732]:int(64)[13] const-val F0_low[2113694]:int(64)[13] const-val F1_count[2113698]:int(64)[13] const F2_tmp[2113702]:2*int(64)[1040245] val F3__iterator[2113704]:_ic_chpl_direct_param_stride_range_iter[1103475] val F4_i[2113706]:int(64)[13] const-val F5_low[2113708]:int(64)[13] val value[2113710]:int(64)[13]
  type _ir_chpl_direct_counted_range_iter_helper[1103735] const-val F0_low[2113696]:int(64)[13] const-val F1_count[2113700]:int(64)[13]
  function _getIterator[1103744](const  ref arg ir[1103746]:_ir_chpl_direct_counted_range_iter_helper[1103735]) : _ic_chpl_direct_counted_range_iter_helper[1103729] "auto ii" "inline" "resolved" "fn synchronization free" "unsafe"
  {
    val ret[1103853]:_ic_chpl_direct_counted_range_iter_helper[1103729] "dead after last mention" "RVV" "temp"
    val _ic_[1103736]:_ic_chpl_direct_counted_range_iter_helper[1103729] "dead after last mention" "temp"
    const-val call_tmp[1103860]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1103863 'move' call_tmp[1103860](1103875 'sizeof_bundle' _ic_chpl_direct_counted_range_iter_helper[1103729]))
    const-val cast_tmp[1103878]:c_void_ptr[149] "dead after last mention" "temp"
    (1103880 'move' cast_tmp[1103878](1103741 call chpl_here_alloc[187788] call_tmp[1103860] 29))
    (1103749 'move' _ic_[1103736](1103882 'cast' _ic_chpl_direct_counted_range_iter_helper[1103729] cast_tmp[1103878]))
    (1103751 'setcid' _ic_[1103736])
    (1103858 'move' ret[1103853] _ic_[1103736])
    (2115166 '.=' ret[1103853] more[1103732] 1)
    const-val tmp[2115170]:int(64)[13] "temp"
    (2115175 'move' tmp[2115170](2115171 '.v' ir[1103746] F0_low[2113696]))
    (2115177 '.=' ret[1103853] F0_low[2113694] tmp[2115170])
    const-val tmp[2115181]:int(64)[13] "temp"
    (2115186 'move' tmp[2115181](2115182 '.v' ir[1103746] F1_count[2113700]))
    (2115188 '.=' ret[1103853] F1_count[2113698] tmp[2115181])
    (1103855 return ret[1103853])
  }
  function chpl_direct_counted_range_iter_helper[1406669](const in arg low[1406671]:int(64)[13], const in arg count[1406673]:uint(64)[115], ref arg _retArg[1914865]:_ref(_ir_chpl_direct_counted_range_iter_helper)[1407217]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "iterator fn" "resolved" "fn synchronization free" "no return value for void"
  {
    val _ir[2144811]:_ir_chpl_direct_counted_range_iter_helper[1407106] "temp"
    (2144813 '.=' _ir[2144811] F0_low[2143449] low[1406671])
    (2144817 '.=' _ir[2144811] F1_count[2143453] count[1406673])
    (2144821 '=' _retArg[1914865] _ir[2144811])
    (2144824 return _void[55])
  }
  type _ic_chpl_direct_counted_range_iter_helper[1407100] val super[1407101]:object[22] "super class" val more[1407103]:int(64)[13] const-val F0_low[2143447]:int(64)[13] const-val F1_count[2143451]:uint(64)[115] const F2_tmp[2143455]:2*int(64)[1040245] val F3__iterator[2143457]:_ic_chpl_direct_param_stride_range_iter[1103475] val F4_i[2143459]:int(64)[13] const-val F5_low[2143461]:int(64)[13] val value[2143463]:int(64)[13]
  type _ir_chpl_direct_counted_range_iter_helper[1407106] const-val F0_low[2143449]:int(64)[13] const-val F1_count[2143453]:uint(64)[115]
  function _getIterator[1407115](const  ref arg ir[1407117]:_ir_chpl_direct_counted_range_iter_helper[1407106]) : _ic_chpl_direct_counted_range_iter_helper[1407100] "auto ii" "inline" "resolved" "fn synchronization free" "unsafe"
  {
    val ret[1407224]:_ic_chpl_direct_counted_range_iter_helper[1407100] "dead after last mention" "RVV" "temp"
    val _ic_[1407107]:_ic_chpl_direct_counted_range_iter_helper[1407100] "dead after last mention" "temp"
    const-val call_tmp[1407231]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1407234 'move' call_tmp[1407231](1407246 'sizeof_bundle' _ic_chpl_direct_counted_range_iter_helper[1407100]))
    const-val cast_tmp[1407249]:c_void_ptr[149] "dead after last mention" "temp"
    (1407251 'move' cast_tmp[1407249](1407112 call chpl_here_alloc[187788] call_tmp[1407231] 81))
    (1407120 'move' _ic_[1407107](1407253 'cast' _ic_chpl_direct_counted_range_iter_helper[1407100] cast_tmp[1407249]))
    (1407122 'setcid' _ic_[1407107])
    (1407229 'move' ret[1407224] _ic_[1407107])
    (2144827 '.=' ret[1407224] more[1407103] 1)
    const-val tmp[2144831]:int(64)[13] "temp"
    (2144836 'move' tmp[2144831](2144832 '.v' ir[1407117] F0_low[2143449]))
    (2144838 '.=' ret[1407224] F0_low[2143447] tmp[2144831])
    const-val tmp[2144842]:uint(64)[115] "temp"
    (2144847 'move' tmp[2144842](2144843 '.v' ir[1407117] F1_count[2143453]))
    (2144849 '.=' ret[1407224] F1_count[2143451] tmp[2144842])
    (1407226 return ret[1407224])
  }
  function chpl_direct_pos_stride_range_iter[1302141](const in arg low[1302143]:int(64)[13], const in arg high[1302145]:int(64)[13], const in arg stride[1302147]:int(64)[13], ref arg _retArg[1913454]:_ref(_ir_chpl_direct_pos_stride_range_iter)[1303303]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "iterator fn" "resolved" "fn synchronization free" "no return value for void"
  {
    val _ir[2126782]:_ir_chpl_direct_pos_stride_range_iter[1303192] "temp"
    (2126784 '.=' _ir[2126782] F0_low[2126222] low[1302143])
    (2126788 '.=' _ir[2126782] F1_high[2126226] high[1302145])
    (2126792 '.=' _ir[2126782] F2_stride[2126230] stride[1302147])
    (2126796 '=' _retArg[1913454] _ir[2126782])
    (2126799 return _void[55])
  }
  type _ic_chpl_direct_pos_stride_range_iter[1303186] val super[1303187]:object[22] "super class" val more[1303189]:int(64)[13] const-val F0_low[2126220]:int(64)[13] const-val F1_high[2126224]:int(64)[13] const-val F2_stride[2126228]:int(64)[13] val value[2126232]:int(64)[13]
  type _ir_chpl_direct_pos_stride_range_iter[1303192] const-val F0_low[2126222]:int(64)[13] const-val F1_high[2126226]:int(64)[13] const-val F2_stride[2126230]:int(64)[13]
  function _getIterator[1303201](const  ref arg ir[1303203]:_ir_chpl_direct_pos_stride_range_iter[1303192]) : _ic_chpl_direct_pos_stride_range_iter[1303186] "auto ii" "inline" "resolved" "fn synchronization free" "unsafe"
  {
    val ret[1303310]:_ic_chpl_direct_pos_stride_range_iter[1303186] "dead after last mention" "RVV" "temp"
    val _ic_[1303193]:_ic_chpl_direct_pos_stride_range_iter[1303186] "dead after last mention" "temp"
    const-val call_tmp[1303317]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1303320 'move' call_tmp[1303317](1303332 'sizeof_bundle' _ic_chpl_direct_pos_stride_range_iter[1303186]))
    const-val cast_tmp[1303335]:c_void_ptr[149] "dead after last mention" "temp"
    (1303337 'move' cast_tmp[1303335](1303198 call chpl_here_alloc[187788] call_tmp[1303317] 50))
    (1303206 'move' _ic_[1303193](1303339 'cast' _ic_chpl_direct_pos_stride_range_iter[1303186] cast_tmp[1303335]))
    (1303208 'setcid' _ic_[1303193])
    (1303315 'move' ret[1303310] _ic_[1303193])
    (2126802 '.=' ret[1303310] more[1303189] 1)
    const-val tmp[2126806]:int(64)[13] "temp"
    (2126811 'move' tmp[2126806](2126807 '.v' ir[1303203] F0_low[2126222]))
    (2126813 '.=' ret[1303310] F0_low[2126220] tmp[2126806])
    const-val tmp[2126817]:int(64)[13] "temp"
    (2126822 'move' tmp[2126817](2126818 '.v' ir[1303203] F1_high[2126226]))
    (2126824 '.=' ret[1303310] F1_high[2126224] tmp[2126817])
    const-val tmp[2126828]:int(64)[13] "temp"
    (2126833 'move' tmp[2126828](2126829 '.v' ir[1303203] F2_stride[2126230]))
    (2126835 '.=' ret[1303310] F2_stride[2126228] tmp[2126828])
    (1303312 return ret[1303310])
  }
  function chpl_direct_param_stride_range_iter[972288](const in arg low[972290]:int(32)[95], const in arg high[972292]:int(32)[95], ref arg _retArg[1908054]:_ref(_ir_chpl_direct_param_stride_range_iter)[978113]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "iterator fn" "resolved" "fn synchronization free" "no return value for void"
  {
    val _ir[2113029]:_ir_chpl_direct_param_stride_range_iter[978002] "temp"
    (2113031 '.=' _ir[2113029] F0_low[2112571] low[972290])
    (2113035 '.=' _ir[2113029] F1_high[2112575] high[972292])
    (2113039 '=' _retArg[1908054] _ir[2113029])
    (2113042 return _void[55])
  }
  type _ic_chpl_direct_param_stride_range_iter[977996] val super[977997]:object[22] "super class" val more[977999]:int(64)[13] const-val F0_low[2112569]:int(32)[95] const-val F1_high[2112573]:int(32)[95] val value[2112577]:int(32)[95]
  type _ir_chpl_direct_param_stride_range_iter[978002] const-val F0_low[2112571]:int(32)[95] const-val F1_high[2112575]:int(32)[95]
  function _getIterator[978011](const  ref arg ir[978013]:_ir_chpl_direct_param_stride_range_iter[978002]) : _ic_chpl_direct_param_stride_range_iter[977996] "auto ii" "inline" "resolved" "fn synchronization free" "unsafe"
  {
    val ret[978120]:_ic_chpl_direct_param_stride_range_iter[977996] "dead after last mention" "RVV" "temp"
    val _ic_[978003]:_ic_chpl_direct_param_stride_range_iter[977996] "dead after last mention" "temp"
    const-val call_tmp[978127]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (978130 'move' call_tmp[978127](978142 'sizeof_bundle' _ic_chpl_direct_param_stride_range_iter[977996]))
    const-val cast_tmp[978145]:c_void_ptr[149] "dead after last mention" "temp"
    (978147 'move' cast_tmp[978145](978008 call chpl_here_alloc[187788] call_tmp[978127] 3))
    (978016 'move' _ic_[978003](978149 'cast' _ic_chpl_direct_param_stride_range_iter[977996] cast_tmp[978145]))
    (978018 'setcid' _ic_[978003])
    (978125 'move' ret[978120] _ic_[978003])
    (2113045 '.=' ret[978120] more[977999] 1)
    const-val tmp[2113049]:int(32)[95] "temp"
    (2113054 'move' tmp[2113049](2113050 '.v' ir[978013] F0_low[2112571]))
    (2113056 '.=' ret[978120] F0_low[2112569] tmp[2113049])
    const-val tmp[2113060]:int(32)[95] "temp"
    (2113065 'move' tmp[2113060](2113061 '.v' ir[978013] F1_high[2112575]))
    (2113067 '.=' ret[978120] F1_high[2112573] tmp[2113060])
    (978122 return ret[978120])
  }
  function chpl_direct_param_stride_range_iter[1102713](const in arg low[1102715]:int(64)[13], const in arg high[1102717]:int(64)[13], ref arg _retArg[1909744]:_ref(_ir_chpl_direct_param_stride_range_iter)[1103592]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "iterator fn" "resolved" "fn synchronization free" "no return value for void"
  {
    val _ir[2115652]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
    (2115654 '.=' _ir[2115652] F0_low[2115194] low[1102715])
    (2115658 '.=' _ir[2115652] F1_high[2115198] high[1102717])
    (2115662 '=' _retArg[1909744] _ir[2115652])
    (2115665 return _void[55])
  }
  type _ic_chpl_direct_param_stride_range_iter[1103475] val super[1103476]:object[22] "super class" val more[1103478]:int(64)[13] const-val F0_low[2115192]:int(64)[13] const-val F1_high[2115196]:int(64)[13] val value[2115200]:int(64)[13]
  type _ir_chpl_direct_param_stride_range_iter[1103481] const-val F0_low[2115194]:int(64)[13] const-val F1_high[2115198]:int(64)[13]
  function _getIterator[1103490](const  ref arg ir[1103492]:_ir_chpl_direct_param_stride_range_iter[1103481]) : _ic_chpl_direct_param_stride_range_iter[1103475] "auto ii" "inline" "resolved" "fn synchronization free" "unsafe"
  {
    val ret[1103599]:_ic_chpl_direct_param_stride_range_iter[1103475] "dead after last mention" "RVV" "temp"
    val _ic_[1103482]:_ic_chpl_direct_param_stride_range_iter[1103475] "dead after last mention" "temp"
    const-val call_tmp[1103606]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1103609 'move' call_tmp[1103606](1103621 'sizeof_bundle' _ic_chpl_direct_param_stride_range_iter[1103475]))
    const-val cast_tmp[1103624]:c_void_ptr[149] "dead after last mention" "temp"
    (1103626 'move' cast_tmp[1103624](1103487 call chpl_here_alloc[187788] call_tmp[1103606] 28))
    (1103495 'move' _ic_[1103482](1103628 'cast' _ic_chpl_direct_param_stride_range_iter[1103475] cast_tmp[1103624]))
    (1103497 'setcid' _ic_[1103482])
    (1103604 'move' ret[1103599] _ic_[1103482])
    (2115668 '.=' ret[1103599] more[1103478] 1)
    const-val tmp[2115672]:int(64)[13] "temp"
    (2115677 'move' tmp[2115672](2115673 '.v' ir[1103492] F0_low[2115194]))
    (2115679 '.=' ret[1103599] F0_low[2115192] tmp[2115672])
    const-val tmp[2115683]:int(64)[13] "temp"
    (2115688 'move' tmp[2115683](2115684 '.v' ir[1103492] F1_high[2115198]))
    (2115690 '.=' ret[1103599] F1_high[2115196] tmp[2115683])
    (1103601 return ret[1103599])
  }
  function chpl_direct_param_stride_range_iter[1446513](const in arg low[1446515]:int(64)[13], const in arg high[1446517]:int(64)[13], ref arg _retArg[1915229]:_ref(_ir_chpl_direct_param_stride_range_iter)[1447656]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "iterator fn" "resolved" "no return value for void"
  {
    val _ir[2146159]:_ir_chpl_direct_param_stride_range_iter[1447545] "temp"
    (2146161 '.=' _ir[2146159] F0_low[2145727] low[1446515])
    (2146165 '.=' _ir[2146159] F1_high[2145731] high[1446517])
    (2146169 '=' _retArg[1915229] _ir[2146159])
    (2146172 return _void[55])
  }
  type _ic_chpl_direct_param_stride_range_iter[1447539] val super[1447540]:object[22] "super class" val more[1447542]:int(64)[13] const-val F0_low[2145725]:int(64)[13] const-val F1_high[2145729]:int(64)[13] val value[2145733]:int(64)[13]
  type _ir_chpl_direct_param_stride_range_iter[1447545] const-val F0_low[2145727]:int(64)[13] const-val F1_high[2145731]:int(64)[13]
  function _getIterator[1447554](const  ref arg ir[1447556]:_ir_chpl_direct_param_stride_range_iter[1447545]) : _ic_chpl_direct_param_stride_range_iter[1447539] "auto ii" "inline" "resolved" "unsafe"
  {
    val ret[1447663]:_ic_chpl_direct_param_stride_range_iter[1447539] "dead after last mention" "RVV" "temp"
    val _ic_[1447546]:_ic_chpl_direct_param_stride_range_iter[1447539] "dead after last mention" "temp"
    const-val call_tmp[1447670]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1447673 'move' call_tmp[1447670](1447685 'sizeof_bundle' _ic_chpl_direct_param_stride_range_iter[1447539]))
    const-val cast_tmp[1447688]:c_void_ptr[149] "dead after last mention" "temp"
    (1447690 'move' cast_tmp[1447688](1447551 call chpl_here_alloc[187788] call_tmp[1447670] 84))
    (1447559 'move' _ic_[1447546](1447692 'cast' _ic_chpl_direct_param_stride_range_iter[1447539] cast_tmp[1447688]))
    (1447561 'setcid' _ic_[1447546])
    (1447668 'move' ret[1447663] _ic_[1447546])
    (2146175 '.=' ret[1447663] more[1447542] 1)
    const-val tmp[2146179]:int(64)[13] "temp"
    (2146184 'move' tmp[2146179](2146180 '.v' ir[1447556] F0_low[2145727]))
    (2146186 '.=' ret[1447663] F0_low[2145725] tmp[2146179])
    const-val tmp[2146190]:int(64)[13] "temp"
    (2146195 'move' tmp[2146190](2146191 '.v' ir[1447556] F1_high[2145731]))
    (2146197 '.=' ret[1447663] F1_high[2145729] tmp[2146190])
    (1447665 return ret[1447663])
  }
  function range(int(64),bounded,true)[1570523].these[1570881](const in arg this[1570887]:range(int(64),bounded,true)[1570523], ref arg _retArg[1916937]:_ref(_ir_these_range_int64_t_bounded_T)[1573314]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "iterator fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    val _ir[2168268]:_ir_these_range_int64_t_bounded_T[1573203] "temp"
    (2168270 '.=' _ir[2168268] F0_this[2167401] this[1570887])
    (2168274 '=' _retArg[1916937] _ir[2168268])
    (2168277 return _void[55])
  }
  type _ic_these_range_int64_t_bounded_T[1573197] val super[1573198]:object[22] "super class" val more[1573200]:int(64)[13] const-val F0_this[2167399]:range(int(64),bounded,true)[1570523] val F1_i[2167403]:int(64)[13] const F2_end[2167405]:int(64)[13] const F3_start[2167407]:int(64)[13] val value[2167409]:int(64)[13]
  type _ir_these_range_int64_t_bounded_T[1573203] const-val F0_this[2167401]:range(int(64),bounded,true)[1570523]
  function _getIterator[1573212](const  ref arg ir[1573214]:_ir_these_range_int64_t_bounded_T[1573203]) : _ic_these_range_int64_t_bounded_T[1573197] "auto ii" "inline" "resolved" "fn synchronization free" "unsafe"
  {
    val ret[1573321]:_ic_these_range_int64_t_bounded_T[1573197] "dead after last mention" "RVV" "temp"
    val _ic_[1573204]:_ic_these_range_int64_t_bounded_T[1573197] "dead after last mention" "temp"
    const-val call_tmp[1573328]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1573331 'move' call_tmp[1573328](1573343 'sizeof_bundle' _ic_these_range_int64_t_bounded_T[1573197]))
    const-val cast_tmp[1573346]:c_void_ptr[149] "dead after last mention" "temp"
    (1573348 'move' cast_tmp[1573346](1573209 call chpl_here_alloc[187788] call_tmp[1573328] 104))
    (1573217 'move' _ic_[1573204](1573350 'cast' _ic_these_range_int64_t_bounded_T[1573197] cast_tmp[1573346]))
    (1573219 'setcid' _ic_[1573204])
    (1573326 'move' ret[1573321] _ic_[1573204])
    (2168280 '.=' ret[1573321] more[1573200] 1)
    const-val tmp[2168284]:range(int(64),bounded,true)[1570523] "temp"
    (2168289 'move' tmp[2168284](2168285 '.v' ir[1573214] F0_this[2167401]))
    (2168291 '.=' ret[1573321] F0_this[2167399] tmp[2168284])
    (1573323 return ret[1573321])
  }
  function _ic_these_range_int64_t_bounded_F[1096892].advance[1096918](const in arg this[1096920]:_ic_these_range_int64_t_bounded_F[1096892]) : void[4] "auto ii" "method" "resolved"
  {
    const-val more[2113562]:int(64)[13]
    (2113590 'move' more[2113562](2113587 '.v' this[1096920] more[1096895]))
    const-val tmp[2113565]:bool[10] "temp"
    (2113572 'move' tmp[2113565](2113569 '==' more[2113562] 2))
    if tmp[2113565]
    {
      gotoIterResume _jump_2[2113554] _jump_2[2113554]
    }
    const-val tmp[2113577]:bool[10] "temp"
    (2113582 'move' tmp[2113577](2113579 '==' more[2113562] -2))
    if tmp[2113577]
    {
      gotoIterResume _jump_break_2[2113556] _jump_break_2[2113556]
    }
    val ret[1095778]:_ir_these_range_int64_t_bounded_F[1096898] "dead after last mention" "RVV" "temp"
    const-val _return_tmp_[1875480]:bool[10] "dead after last mention" "temp"
    const-val tmp[2113083]:range(int(64),bounded,false)[1027003] "temp"
    (2113088 'move' tmp[2113083](2113085 '.v' this[1096920] F0_this[2113071]))
    (1875482 'move' _return_tmp_[1875480](1095819 call checkIfIterWillOverflow[1096003] tmp[2113083] 1))
    val call_tmp[1095823]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[2113090]:int(64)[13] "temp"
    (1096889 'move' tmp[2113090] 0)
    (2113092 '.=' this[1096920] F1_i[2113075] tmp[2113090])
    ref call_tmp[1095835]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    ref tmp[2113096]:_ref(range(int(64),bounded,false))[1027047] "temp"
    (2113101 'move' tmp[2113096](2113098 '.' this[1096920] F0_this[2113071]))
    (1095837 'move' call_tmp[1095835](1095840 call _low[1028641] tmp[2113096]))
    const-val start[1095843]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val tmp[2113103]:int(64)[13] "temp"
    (1096869 'move' tmp[2113103](1096867 'deref' call_tmp[1095835]))
    (2113105 '.=' this[1096920] F3_coerce_tmp[2113079] tmp[2113103])
    const-val tmp[2113109]:int(64)[13] "temp"
    (2113114 'move' tmp[2113109](2113111 '.v' this[1096920] F3_coerce_tmp[2113079]))
    (1921602 '=' start[1095843] tmp[2113109])
    (1095845 'noop')
    ref call_tmp[1095849]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    ref tmp[2113116]:_ref(range(int(64),bounded,false))[1027047] "temp"
    (2113121 'move' tmp[2113116](2113118 '.' this[1096920] F0_this[2113071]))
    (1095851 'move' call_tmp[1095849](1095854 call _high[1028849] tmp[2113116]))
    const-val coerce_tmp[1096875]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1096879 'move' coerce_tmp[1096875](1096877 'deref' call_tmp[1095849]))
    const tmp[2113123]:int(64)[13] "temp"
    (1921605 '=' tmp[2113123] coerce_tmp[1096875])
    (2113125 '.=' this[1096920] F2_end[2113077] tmp[2113123])
    (1095859 'noop')
    CForLoop[1095863]
    {
      const-val yret[1095909]:int(64)[13] "dead after last mention" "YVV" "temp"
      val tmp[2113129]:int(64)[13] "temp"
      const-val tmp[2113135]:range(int(64),bounded,false)[1027003] "temp"
      (2113140 'move' tmp[2113135](2113137 '.v' this[1096920] F0_this[2113071]))
      const-val tmp[2113142]:int(64)[13] "temp"
      (2113147 'move' tmp[2113142](2113144 '.v' this[1096920] F1_i[2113075]))
      (1095913 'move' tmp[2113129](1095919 call chpl_intToIdx[1028669] tmp[2113135] tmp[2113142]))
      (2113131 '.=' this[1096920] value[2113081] tmp[2113129])
      const-val tmp[2113149]:int(64)[13] "temp"
      (2113154 'move' tmp[2113149](2113151 '.v' this[1096920] value[2113081]))
      (1095921 'move' yret[1095909] tmp[2113149])
      (2113548 '.=' this[1096920] more[1096895] 2)
      gotoIterEnd _end[2113546] _end[2113546]
      label _jump_break_2[2113556]
      gotoReturn _endthese[1889519] _endthese[1889519]
      label _jump_2[2113554]
      {
        val tmp[2113156]:int(64)[13] "temp"
        const-val tmp[2113162]:int(64)[13] "temp"
        (2113167 'move' tmp[2113162](2113164 '.v' this[1096920] F3_coerce_tmp[2113079]))
        (1095865 '=' tmp[2113156] tmp[2113162])
        (2113158 '.=' this[1096920] F1_i[2113075] tmp[2113156])
      }
      {
        val tmp[2113169]:int(64)[13] "temp"
        (2113174 'move' tmp[2113169](2113171 '.v' this[1096920] F1_i[2113075]))
        const tmp[2113176]:int(64)[13] "temp"
        (2113181 'move' tmp[2113176](2113178 '.v' this[1096920] F2_end[2113077]))
        (1095872 '<=' tmp[2113169] tmp[2113176])
      }
      {
        val call_tmp[1095879]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val tmp[2113183]:int(64)[13] "temp"
        (2113188 'move' tmp[2113183](2113185 '.v' this[1096920] F1_i[2113075]))
        (1095903 '+=' tmp[2113183] 1)
        (2113190 '.=' this[1096920] F1_i[2113075] tmp[2113183])
      }
    }
    label _endthese[1889519]
    (2113558 '.=' this[1096920] more[1096895] 0)
    label _end[2113546]
    (2113593 return _void[55])
  }
  function _ic_these_range_int64_t_bounded_F[1096892].zip1[1096927](const in arg this[1096929]:_ic_these_range_int64_t_bounded_F[1096892]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    val ret[2113195]:_ir_these_range_int64_t_bounded_F[1096898] "dead after last mention" "RVV" "temp"
    const-val _return_tmp_[2113197]:bool[10] "dead after last mention" "temp"
    val i[2113199]:int(64)[13] "dead at end of block" "insert auto destroy"
    val call_tmp[2113201]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[2113203]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    const-val start[2113205]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[2113207]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    ref call_tmp[2113209]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    const end[2113211]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[2113213]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    val yret[2113215]:int(64)[13] "dead after last mention" "YVV" "temp"
    val call_tmp[2113217]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val call_tmp[2113219]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    label _endthese[2113221]
    const-val tmp[2113223]:range(int(64),bounded,false)[1027003] "temp"
    val tmp[2113225]:int(64)[13] "temp"
    ref tmp[2113227]:_ref(range(int(64),bounded,false))[1027047] "temp"
    val tmp[2113229]:int(64)[13] "temp"
    const-val tmp[2113231]:int(64)[13] "temp"
    ref tmp[2113233]:_ref(range(int(64),bounded,false))[1027047] "temp"
    const tmp[2113235]:int(64)[13] "temp"
    val tmp[2113237]:int(64)[13] "temp"
    const-val tmp[2113239]:range(int(64),bounded,false)[1027003] "temp"
    val tmp[2113241]:int(64)[13] "temp"
    val tmp[2113243]:int(64)[13] "temp"
    val tmp[2113245]:int(64)[13] "temp"
    val tmp[2113247]:int(64)[13] "temp"
    val tmp[2113249]:int(64)[13] "temp"
    const tmp[2113251]:int(64)[13] "temp"
    val tmp[2113253]:int(64)[13] "temp"
    (2113255 'move' tmp[2113223](2113257 '.v' this[1096929] F0_this[2113071]))
    (2113260 'move' _return_tmp_[2113197](2113263 call checkIfIterWillOverflow[1096003] tmp[2113223] 1))
    (2113266 'move' tmp[2113225] 0)
    (2113269 '.=' this[1096929] F1_i[2113075] tmp[2113225])
    (2113273 'move' tmp[2113227](2113275 '.' this[1096929] F0_this[2113071]))
    (2113278 'move' call_tmp[2113203](2113281 call _low[1028641] tmp[2113227]))
    (2113283 'move' tmp[2113229](2113285 'deref' call_tmp[2113203]))
    (2113287 '.=' this[1096929] F3_coerce_tmp[2113079] tmp[2113229])
    (2113291 'move' tmp[2113231](2113293 '.v' this[1096929] F3_coerce_tmp[2113079]))
    (2113296 '=' start[2113205] tmp[2113231])
    (2113299 'noop')
    (2113300 'move' tmp[2113233](2113302 '.' this[1096929] F0_this[2113071]))
    (2113305 'move' call_tmp[2113209](2113308 call _high[1028849] tmp[2113233]))
    (2113310 'move' coerce_tmp[2113213](2113312 'deref' call_tmp[2113209]))
    (2113314 '=' tmp[2113235] coerce_tmp[2113213])
    (2113317 '.=' this[1096929] F2_end[2113077] tmp[2113235])
    (2113321 'noop')
    (2113322 return _void[55])
  }
  function _ic_these_range_int64_t_bounded_F[1096892].zip2[1096936](const in arg this[1096938]:_ic_these_range_int64_t_bounded_F[1096892]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    val ret[2113325]:_ir_these_range_int64_t_bounded_F[1096898] "dead after last mention" "RVV" "temp"
    val _return_tmp_[2113327]:bool[10] "dead after last mention" "temp"
    val i[2113329]:int(64)[13] "dead at end of block" "insert auto destroy"
    val call_tmp[2113331]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[2113333]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    const start[2113335]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[2113337]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    ref call_tmp[2113339]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    const end[2113341]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[2113343]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    const-val yret[2113345]:int(64)[13] "dead after last mention" "YVV" "temp"
    val call_tmp[2113347]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val call_tmp[2113349]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    label _endthese[2113351]
    const-val tmp[2113353]:range(int(64),bounded,false)[1027003] "temp"
    val tmp[2113355]:int(64)[13] "temp"
    ref tmp[2113357]:_ref(range(int(64),bounded,false))[1027047] "temp"
    val tmp[2113359]:int(64)[13] "temp"
    val tmp[2113361]:int(64)[13] "temp"
    ref tmp[2113363]:_ref(range(int(64),bounded,false))[1027047] "temp"
    const tmp[2113365]:int(64)[13] "temp"
    val tmp[2113367]:int(64)[13] "temp"
    const-val tmp[2113369]:range(int(64),bounded,false)[1027003] "temp"
    const-val tmp[2113371]:int(64)[13] "temp"
    const-val tmp[2113373]:int(64)[13] "temp"
    val tmp[2113375]:int(64)[13] "temp"
    val tmp[2113377]:int(64)[13] "temp"
    val tmp[2113379]:int(64)[13] "temp"
    const tmp[2113381]:int(64)[13] "temp"
    val tmp[2113383]:int(64)[13] "temp"
    (2113385 'move' tmp[2113369](2113387 '.v' this[1096938] F0_this[2113071]))
    (2113390 'move' tmp[2113371](2113392 '.v' this[1096938] F1_i[2113075]))
    (2113395 'move' tmp[2113367](2113398 call chpl_intToIdx[1028669] tmp[2113369] tmp[2113371]))
    (2113401 '.=' this[1096938] value[2113081] tmp[2113367])
    (2113405 'move' tmp[2113373](2113407 '.v' this[1096938] value[2113081]))
    (2113410 'move' yret[2113345] tmp[2113373])
    (2113413 '.=' this[1096938] more[1096895] 2)
    (2113417 return _void[55])
  }
  function _ic_these_range_int64_t_bounded_F[1096892].zip3[1096945](const in arg this[1096947]:_ic_these_range_int64_t_bounded_F[1096892]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    val ret[2113420]:_ir_these_range_int64_t_bounded_F[1096898] "dead after last mention" "RVV" "temp"
    val _return_tmp_[2113422]:bool[10] "dead after last mention" "temp"
    val i[2113424]:int(64)[13] "dead at end of block" "insert auto destroy"
    val call_tmp[2113426]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[2113428]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    const start[2113430]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[2113432]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    ref call_tmp[2113434]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    const end[2113436]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[2113438]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    val yret[2113440]:int(64)[13] "dead after last mention" "YVV" "temp"
    val call_tmp[2113442]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val call_tmp[2113444]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    label _endthese[2113446]
    const-val tmp[2113448]:range(int(64),bounded,false)[1027003] "temp"
    val tmp[2113450]:int(64)[13] "temp"
    ref tmp[2113452]:_ref(range(int(64),bounded,false))[1027047] "temp"
    val tmp[2113454]:int(64)[13] "temp"
    val tmp[2113456]:int(64)[13] "temp"
    ref tmp[2113458]:_ref(range(int(64),bounded,false))[1027047] "temp"
    const tmp[2113460]:int(64)[13] "temp"
    val tmp[2113462]:int(64)[13] "temp"
    const-val tmp[2113464]:range(int(64),bounded,false)[1027003] "temp"
    val tmp[2113466]:int(64)[13] "temp"
    val tmp[2113468]:int(64)[13] "temp"
    val tmp[2113470]:int(64)[13] "temp"
    val tmp[2113472]:int(64)[13] "temp"
    val tmp[2113474]:int(64)[13] "temp"
    const tmp[2113476]:int(64)[13] "temp"
    val tmp[2113478]:int(64)[13] "temp"
    (2113480 return _void[55])
  }
  function _ic_these_range_int64_t_bounded_F[1096892].zip4[1096954](const in arg this[1096956]:_ic_these_range_int64_t_bounded_F[1096892]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    val ret[2113483]:_ir_these_range_int64_t_bounded_F[1096898] "dead after last mention" "RVV" "temp"
    val _return_tmp_[2113485]:bool[10] "dead after last mention" "temp"
    val i[2113487]:int(64)[13] "dead at end of block" "insert auto destroy"
    val call_tmp[2113489]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[2113491]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    const start[2113493]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[2113495]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    ref call_tmp[2113497]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    const end[2113499]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[2113501]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    val yret[2113503]:int(64)[13] "dead after last mention" "YVV" "temp"
    val call_tmp[2113505]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val call_tmp[2113507]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    label _endthese[2113509]
    const-val tmp[2113511]:range(int(64),bounded,false)[1027003] "temp"
    val tmp[2113513]:int(64)[13] "temp"
    ref tmp[2113515]:_ref(range(int(64),bounded,false))[1027047] "temp"
    val tmp[2113517]:int(64)[13] "temp"
    val tmp[2113519]:int(64)[13] "temp"
    ref tmp[2113521]:_ref(range(int(64),bounded,false))[1027047] "temp"
    const tmp[2113523]:int(64)[13] "temp"
    val tmp[2113525]:int(64)[13] "temp"
    const-val tmp[2113527]:range(int(64),bounded,false)[1027003] "temp"
    val tmp[2113529]:int(64)[13] "temp"
    val tmp[2113531]:int(64)[13] "temp"
    val tmp[2113533]:int(64)[13] "temp"
    val tmp[2113535]:int(64)[13] "temp"
    val tmp[2113537]:int(64)[13] "temp"
    const tmp[2113539]:int(64)[13] "temp"
    val tmp[2113541]:int(64)[13] "temp"
    (2113543 return _void[55])
  }
  function _ic_these_range_int64_t_bounded_F[1096892].hasMore[1096963](const in arg this[1096965]:_ic_these_range_int64_t_bounded_F[1096892]) : int(64)[13] "auto ii" "inline" "method" "resolved"
  {
    val tmp[2113596]:int(64)[13] "temp"
    const-val tmp[2113598]:int(64)[13] "temp"
    (2113600 'move' tmp[2113598](2113602 '.v' this[1096965] F1_i[2113075]))
    const-val tmp[2113605]:int(64)[13] "temp"
    (2113607 'move' tmp[2113605](2113609 '.v' this[1096965] F2_end[2113077]))
    (2113615 'move' tmp[2113596](2113612 '<=' tmp[2113598] tmp[2113605]))
    (2113617 return tmp[2113596])
  }
  function _ic_these_range_int64_t_bounded_F[1096892].getValue[1096972](const in arg this[1096974]:_ic_these_range_int64_t_bounded_F[1096892]) : int(64)[13] "auto ii" "inline" "method" "resolved"
  {
    val tmp[2113620]:int(64)[13] "temp"
    (2113625 'move' tmp[2113620](2113622 '.v' this[1096974] value[2113081]))
    (2113627 return tmp[2113620])
  }
  function range(int(64),bounded,false)[1027003].these[1095684](const in arg this[1095690]:range(int(64),bounded,false)[1027003], ref arg _retArg[1909702]:_ref(_ir_these_range_int64_t_bounded_F)[1097009]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "iterator fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    val _ir[2113667]:_ir_these_range_int64_t_bounded_F[1096898] "temp"
    (2113669 '.=' _ir[2113667] F0_this[2113073] this[1095690])
    (2113673 '=' _retArg[1909702] _ir[2113667])
    (2113676 return _void[55])
  }
  function _ic_these_range_int64_t_bounded_F[1096892].init[1096981](const in arg this[1096983]:_ic_these_range_int64_t_bounded_F[1096892]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    val tmp[2113630]:int(64)[13] "temp"
    const-val tmp[2113632]:int(64)[13] "temp"
    (2113634 'move' tmp[2113632](2113636 '.v' this[1096983] F3_coerce_tmp[2113079]))
    (2113639 '=' tmp[2113630] tmp[2113632])
    (2113642 '.=' this[1096983] F1_i[2113075] tmp[2113630])
    (2113646 return _void[55])
  }
  function _ic_these_range_int64_t_bounded_F[1096892].incr[1096990](const in arg this[1096992]:_ic_these_range_int64_t_bounded_F[1096892]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    val call_tmp[2113649]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[2113651]:int(64)[13] "temp"
    (2113653 'move' tmp[2113651](2113655 '.v' this[1096992] F1_i[2113075]))
    (2113658 '+=' tmp[2113651] 1)
    (2113661 '.=' this[1096992] F1_i[2113075] tmp[2113651])
    (2113665 return _void[55])
  }
  type _ic_these_range_int64_t_bounded_F[1096892] val super[1096893]:object[22] "super class" val more[1096895]:int(64)[13] const-val F0_this[2113071]:range(int(64),bounded,false)[1027003] val F1_i[2113075]:int(64)[13] const F2_end[2113077]:int(64)[13] val F3_coerce_tmp[2113079]:int(64)[13] val value[2113081]:int(64)[13]
  type _ir_these_range_int64_t_bounded_F[1096898] const-val F0_this[2113073]:range(int(64),bounded,false)[1027003]
  function _getIterator[1096907](const  ref arg ir[1096909]:_ir_these_range_int64_t_bounded_F[1096898]) : _ic_these_range_int64_t_bounded_F[1096892] "auto ii" "inline" "resolved" "fn synchronization free" "unsafe"
  {
    val ret[1097016]:_ic_these_range_int64_t_bounded_F[1096892] "dead after last mention" "RVV" "temp"
    val _ic_[1096899]:_ic_these_range_int64_t_bounded_F[1096892] "dead after last mention" "temp"
    const-val call_tmp[1097023]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1097026 'move' call_tmp[1097023](1097038 'sizeof_bundle' _ic_these_range_int64_t_bounded_F[1096892]))
    const-val cast_tmp[1097041]:c_void_ptr[149] "dead after last mention" "temp"
    (1097043 'move' cast_tmp[1097041](1096904 call chpl_here_alloc[187788] call_tmp[1097023] 27))
    (1096912 'move' _ic_[1096899](1097045 'cast' _ic_these_range_int64_t_bounded_F[1096892] cast_tmp[1097041]))
    (1096914 'setcid' _ic_[1096899])
    (1097021 'move' ret[1097016] _ic_[1096899])
    (2113679 '.=' ret[1097016] more[1096895] 1)
    const-val tmp[2113683]:range(int(64),bounded,false)[1027003] "temp"
    (2113688 'move' tmp[2113683](2113684 '.v' ir[1096909] F0_this[2113073]))
    (2113690 '.=' ret[1097016] F0_this[2113071] tmp[2113683])
    (1097018 return ret[1097016])
  }
  function _cast[1054547](const in arg x[1054551]:range(byteIndex,bounded,false)[1025981], ref arg _retArg[1908892]:_ref(string)[938128]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    val _formal_type_tmp_[1879724]:string[26] "temp"
    const-val ret[1054553]:string[26] "dead after last mention" "RVV" "temp"
    val ret[1054561]:string[26] "dead at end of block" "insert auto destroy"
    (1084897 call init[30763] ret[1054561])
    {
      const-val call_tmp[1054585]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1908648]:byteIndex[28173] "temp"
      (1054590 call low[1033080] x[1054551] ret_tmp[1908648])
      (1908651 'move' call_tmp[1054585] ret_tmp[1908648])
      const-val call_tmp[1054593]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1908898]:string[26] "temp"
      (1054598 call _cast[1054830] call_tmp[1054585] ret_tmp[1908898])
      (1908901 'move' call_tmp[1054593] ret_tmp[1908898])
      (1054602 call +=[38800] ret[1054561] call_tmp[1054593])
      (1920436 call chpl__autoDestroy[1601673] call_tmp[1054593])
      (1920439 call chpl__autoDestroy[1601936] call_tmp[1054585])
    }
    (1054609 call +=[38800] ret[1054561] "..")
    {
      const-val call_tmp[1054632]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1908684]:byteIndex[28173] "temp"
      (1054637 call high[1033179] x[1054551] ret_tmp[1908684])
      (1908687 'move' call_tmp[1054632] ret_tmp[1908684])
      const-val call_tmp[1054640]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1908904]:string[26] "temp"
      (1054645 call _cast[1054830] call_tmp[1054632] ret_tmp[1908904])
      (1908907 'move' call_tmp[1054640] ret_tmp[1908904])
      (1054649 call +=[38800] ret[1054561] call_tmp[1054640])
      (1920443 call chpl__autoDestroy[1601673] call_tmp[1054640])
      (1920446 call chpl__autoDestroy[1601936] call_tmp[1054632])
    }
    const-val alignCheckRange[1054711]:range(byteIndex,bounded,false)[1025981] "dead at end of block" "insert auto destroy"
    (1054713 'move' alignCheckRange[1054711] x[1054551])
    (1054721 call normalizeAlignment[1083795] alignCheckRange[1054711])
    (1054803 'move' ret[1054553] ret[1054561])
    (1920449 call chpl__autoDestroy[1674473] alignCheckRange[1054711])
    gotoReturn _end__cast[1054811] _end__cast[1054811]
    label _end__cast[1054811]
    (1908894 '=' _retArg[1908892] ret[1054553])
    (1908896 return _void[55])
  }
  function _cast[1119626](const in arg x[1119630]:range(int(64),bounded,false)[1027003], ref arg _retArg[1909990]:_ref(string)[938128]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    val _formal_type_tmp_[1879769]:string[26] "temp"
    const-val ret[1119632]:string[26] "dead after last mention" "RVV" "temp"
    val ret[1119640]:string[26] "dead at end of block" "insert auto destroy"
    (1120933 call init[30763] ret[1119640])
    {
      const-val call_tmp[1119664]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1119666 'move' call_tmp[1119664](1119669 call low[1028600] x[1119630]))
      const-val call_tmp[1119672]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1909042]:string[26] "temp"
      (1119677 call _cast[1063342] call_tmp[1119664] ret_tmp[1909042])
      (1909045 'move' call_tmp[1119672] ret_tmp[1909042])
      (1119681 call +=[38800] ret[1119640] call_tmp[1119672])
      (1921887 call chpl__autoDestroy[1601673] call_tmp[1119672])
    }
    (1119688 call +=[38800] ret[1119640] "..")
    {
      const-val call_tmp[1119711]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1119713 'move' call_tmp[1119711](1119716 call high[1028808] x[1119630]))
      const-val call_tmp[1119719]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1909048]:string[26] "temp"
      (1119724 call _cast[1063342] call_tmp[1119711] ret_tmp[1909048])
      (1909051 'move' call_tmp[1119719] ret_tmp[1909048])
      (1119728 call +=[38800] ret[1119640] call_tmp[1119719])
      (1921891 call chpl__autoDestroy[1601673] call_tmp[1119719])
    }
    const-val alignCheckRange[1119790]:range(int(64),bounded,false)[1027003] "dead at end of block" "insert auto destroy"
    (1119792 'move' alignCheckRange[1119790] x[1119630])
    (1119800 call normalizeAlignment[1119929] alignCheckRange[1119790])
    (1119882 'move' ret[1119632] ret[1119640])
    (1921894 call chpl__autoDestroy[1407763] alignCheckRange[1119790])
    gotoReturn _end__cast[1119890] _end__cast[1119890]
    label _end__cast[1119890]
    (1909992 '=' _retArg[1909990] ret[1119632])
    (1909994 return _void[55])
  }
  function _cast[1136149](const in arg x[1136153]:range(int(64),boundedLow,false)[1087754], ref arg _retArg[1910278]:_ref(string)[938128]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    val _formal_type_tmp_[1879773]:string[26] "temp"
    const-val ret[1136155]:string[26] "dead after last mention" "RVV" "temp"
    val ret[1136163]:string[26] "dead at end of block" "insert auto destroy"
    (1138987 call init[30763] ret[1136163])
    {
      const-val call_tmp[1136187]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1136189 'move' call_tmp[1136187](1136192 call low[1128232] x[1136153]))
      const-val call_tmp[1136195]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1909060]:string[26] "temp"
      (1136200 call _cast[1063342] call_tmp[1136187] ret_tmp[1909060])
      (1909063 'move' call_tmp[1136195] ret_tmp[1909060])
      (1136204 call +=[38800] ret[1136163] call_tmp[1136195])
      (1922095 call chpl__autoDestroy[1601673] call_tmp[1136195])
    }
    (1136211 call +=[38800] ret[1136163] "..")
    const-val alignCheckRange[1136313]:range(int(64),boundedLow,false)[1087754] "dead at end of block" "insert auto destroy"
    (1136315 'move' alignCheckRange[1136313] x[1136153])
    (1136323 call normalizeAlignment[1136449] alignCheckRange[1136313])
    const-val call_tmp[1136326]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1136328 'move' call_tmp[1136326](1136334 call isNaturallyAligned[1136952] alignCheckRange[1136313]))
    const-val call_tmp[1136335]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1136337 'move' call_tmp[1136335](1136340 call ![7494] call_tmp[1136326]))
    const-val call_tmp[1136342]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1136344 'move' call_tmp[1136342] call_tmp[1136335])
    if call_tmp[1136342]
    {
      const-val call_tmp[1136351]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1136353 'move' call_tmp[1136351](1136356 call alignment[1128309] x[1136153]))
      const-val call_tmp[1136359]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1136361 'move' call_tmp[1136359](1136364 call chpl__idxToInt[1027105] call_tmp[1136351]))
      const-val call_tmp[1136374]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1136376 'move' call_tmp[1136374](1136379 call chpl__mod[1137605] call_tmp[1136359] 1))
      const-val call_tmp[1136382]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1909066]:string[26] "temp"
      (1136387 call _cast[1063342] call_tmp[1136374] ret_tmp[1909066])
      (1909069 'move' call_tmp[1136382] ret_tmp[1909066])
      const-val call_tmp[1136390]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1905842]:string[26] "temp"
      (1136395 call +[38345] " align " call_tmp[1136382] ret_tmp[1905842])
      (1905845 'move' call_tmp[1136390] ret_tmp[1905842])
      (1136399 call +=[38800] ret[1136163] call_tmp[1136390])
      (1922099 call chpl__autoDestroy[1601673] call_tmp[1136390])
      (1922102 call chpl__autoDestroy[1601673] call_tmp[1136382])
    }
    (1136405 'move' ret[1136155] ret[1136163])
    (1922105 call chpl__autoDestroy[1680875] alignCheckRange[1136313])
    gotoReturn _end__cast[1136413] _end__cast[1136413]
    label _end__cast[1136413]
    (1910280 '=' _retArg[1910278] ret[1136155])
    (1910282 return _void[55])
  }
  function _cast[1154613](const in arg x[1154617]:range(byteIndex,boundedLow,false)[1143592], ref arg _retArg[1910560]:_ref(string)[938128]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    val _formal_type_tmp_[1879789]:string[26] "temp"
    const-val ret[1154619]:string[26] "dead after last mention" "RVV" "temp"
    val ret[1154627]:string[26] "dead at end of block" "insert auto destroy"
    (1156308 call init[30763] ret[1154627])
    {
      const-val call_tmp[1154651]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1910466]:byteIndex[28173] "temp"
      (1154656 call low[1146316] x[1154617] ret_tmp[1910466])
      (1910469 'move' call_tmp[1154651] ret_tmp[1910466])
      const-val call_tmp[1154659]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1908910]:string[26] "temp"
      (1154664 call _cast[1054830] call_tmp[1154651] ret_tmp[1908910])
      (1908913 'move' call_tmp[1154659] ret_tmp[1908910])
      (1154668 call +=[38800] ret[1154627] call_tmp[1154659])
      (1922226 call chpl__autoDestroy[1601673] call_tmp[1154659])
      (1922229 call chpl__autoDestroy[1601936] call_tmp[1154651])
    }
    (1154675 call +=[38800] ret[1154627] "..")
    const-val alignCheckRange[1154777]:range(byteIndex,boundedLow,false)[1143592] "dead at end of block" "insert auto destroy"
    (1154779 'move' alignCheckRange[1154777] x[1154617])
    (1154787 call normalizeAlignment[1155148] alignCheckRange[1154777])
    const-val call_tmp[1154790]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1154792 'move' call_tmp[1154790](1154798 call isNaturallyAligned[1155651] alignCheckRange[1154777]))
    const-val call_tmp[1154799]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1154801 'move' call_tmp[1154799](1154804 call ![7494] call_tmp[1154790]))
    const-val call_tmp[1154806]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1154808 'move' call_tmp[1154806] call_tmp[1154799])
    if call_tmp[1154806]
    {
      const-val call_tmp[1154815]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1910542]:byteIndex[28173] "temp"
      (1154820 call alignment[1148427] x[1154617] ret_tmp[1910542])
      (1910545 'move' call_tmp[1154815] ret_tmp[1910542])
      const-val call_tmp[1154823]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1154825 'move' call_tmp[1154823](1154828 call chpl__idxToInt[1029358] call_tmp[1154815]))
      const-val call_tmp[1154838]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1154840 'move' call_tmp[1154838](1154843 call chpl__mod[1137605] call_tmp[1154823] 1))
      const-val call_tmp[1154846]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1909078]:string[26] "temp"
      (1154851 call _cast[1063342] call_tmp[1154838] ret_tmp[1909078])
      (1909081 'move' call_tmp[1154846] ret_tmp[1909078])
      const-val call_tmp[1154854]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1905854]:string[26] "temp"
      (1154859 call +[38345] " align " call_tmp[1154846] ret_tmp[1905854])
      (1905857 'move' call_tmp[1154854] ret_tmp[1905854])
      (1154863 call +=[38800] ret[1154627] call_tmp[1154854])
      (1922233 call chpl__autoDestroy[1601673] call_tmp[1154854])
      (1922236 call chpl__autoDestroy[1601673] call_tmp[1154846])
      (1922239 call chpl__autoDestroy[1601936] call_tmp[1154815])
    }
    (1154869 'move' ret[1154619] ret[1154627])
    (1922242 call chpl__autoDestroy[1682957] alignCheckRange[1154777])
    gotoReturn _end__cast[1154877] _end__cast[1154877]
    label _end__cast[1154877]
    (1910562 '=' _retArg[1910560] ret[1154619])
    (1910564 return _void[55])
  }
  function _cast[1198820](const in arg x[1198824]:range(byteIndex,boundedHigh,false)[1185108], ref arg _retArg[1910882]:_ref(string)[938128]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    val _formal_type_tmp_[1879809]:string[26] "temp"
    const-val ret[1198826]:string[26] "dead after last mention" "RVV" "temp"
    val ret[1198834]:string[26] "dead at end of block" "insert auto destroy"
    (1200367 call init[30763] ret[1198834])
    (1198882 call +=[38800] ret[1198834] "..")
    {
      const-val call_tmp[1198905]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1910818]:byteIndex[28173] "temp"
      (1198910 call high[1188813] x[1198824] ret_tmp[1910818])
      (1910821 'move' call_tmp[1198905] ret_tmp[1910818])
      const-val call_tmp[1198913]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1908916]:string[26] "temp"
      (1198918 call _cast[1054830] call_tmp[1198905] ret_tmp[1908916])
      (1908919 'move' call_tmp[1198913] ret_tmp[1908916])
      (1198922 call +=[38800] ret[1198834] call_tmp[1198913])
      (1924498 call chpl__autoDestroy[1601673] call_tmp[1198913])
      (1924501 call chpl__autoDestroy[1601936] call_tmp[1198905])
    }
    const-val alignCheckRange[1198984]:range(byteIndex,boundedHigh,false)[1185108] "dead at end of block" "insert auto destroy"
    (1198986 'move' alignCheckRange[1198984] x[1198824])
    (1198994 call normalizeAlignment[1199355] alignCheckRange[1198984])
    {
      const-val call_tmp[1199022]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1910864]:byteIndex[28173] "temp"
      (1199027 call alignment[1192850] x[1198824] ret_tmp[1910864])
      (1910867 'move' call_tmp[1199022] ret_tmp[1910864])
      const-val call_tmp[1199030]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1199032 'move' call_tmp[1199030](1199035 call chpl__idxToInt[1029358] call_tmp[1199022]))
      const-val call_tmp[1199045]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1199047 'move' call_tmp[1199045](1199050 call chpl__mod[1137605] call_tmp[1199030] 1))
      const-val call_tmp[1199053]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1909090]:string[26] "temp"
      (1199058 call _cast[1063342] call_tmp[1199045] ret_tmp[1909090])
      (1909093 'move' call_tmp[1199053] ret_tmp[1909090])
      const-val call_tmp[1199061]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1905902]:string[26] "temp"
      (1199066 call +[38345] " align " call_tmp[1199053] ret_tmp[1905902])
      (1905905 'move' call_tmp[1199061] ret_tmp[1905902])
      (1199070 call +=[38800] ret[1198834] call_tmp[1199061])
      (1924505 call chpl__autoDestroy[1601673] call_tmp[1199061])
      (1924508 call chpl__autoDestroy[1601673] call_tmp[1199053])
      (1924511 call chpl__autoDestroy[1601936] call_tmp[1199022])
    }
    (1199076 'move' ret[1198826] ret[1198834])
    (1924514 call chpl__autoDestroy[1684014] alignCheckRange[1198984])
    gotoReturn _end__cast[1199084] _end__cast[1199084]
    label _end__cast[1199084]
    (1910884 '=' _retArg[1910882] ret[1198826])
    (1910886 return _void[55])
  }
  function _ref(range(byteIndex,bounded,false))[1025990].normalizeAlignment[1083795](ref arg this[1083801]:_ref(range(byteIndex,bounded,false))[1025990]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    (1084081 return _void[55])
  }
  function _ref(range(int(64),bounded,false))[1027047].normalizeAlignment[1119929](ref arg this[1119935]:_ref(range(int(64),bounded,false))[1027047]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    (1120215 return _void[55])
  }
  function _ref(range(int(64),boundedLow,false))[1087798].normalizeAlignment[1136449](ref arg this[1136455]:_ref(range(int(64),boundedLow,false))[1087798]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    (1136735 return _void[55])
  }
  function _ref(range(byteIndex,boundedLow,false))[1143636].normalizeAlignment[1155148](ref arg this[1155154]:_ref(range(byteIndex,boundedLow,false))[1143636]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    (1155434 return _void[55])
  }
  function _ref(range(byteIndex,boundedHigh,false))[1185152].normalizeAlignment[1199355](ref arg this[1199361]:_ref(range(byteIndex,boundedHigh,false))[1185152]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    (1199641 return _void[55])
  }
  function chpl__mod[1137605](const in arg dividend[1137607]:int(64)[13], const in arg modulus[1137609]:int(64)[13]) : int(64)[13] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1137611]:int(64)[13] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1137621]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1137623 'move' call_tmp[1137621](1137626 call abs[463557] modulus[1137609]))
    val call_tmp[1137628]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1137634]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1137636 'move' call_tmp[1137634](1137642 call safeCast[1137723] call_tmp[1137621]))
    const-val m[1137644]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1137646 'move' m[1137644] call_tmp[1137634])
    const-val call_tmp[1137650]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1137652 'move' call_tmp[1137650](1137655 call %[444700] dividend[1137607] m[1137644]))
    val tmp[1137658]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1137660 'move' tmp[1137658] call_tmp[1137650])
    {
      const-val call_tmp[1137681]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1137683 'move' call_tmp[1137681](1137686 call <[948587] tmp[1137658]))
      const-val call_tmp[1137689]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1137691 'move' call_tmp[1137689] call_tmp[1137681])
      if call_tmp[1137689]
      {
        (1137699 call +=[451431] tmp[1137658] m[1137644])
      }
    }
    (1137707 'move' ret[1137611] tmp[1137658])
    gotoReturn _end_chpl__mod[1137715] _end_chpl__mod[1137715]
    label _end_chpl__mod[1137715]
    (1137717 return ret[1137611])
  }
  function chpl__diffMod[1572034](const in arg minuend[1572036]:int(64)[13], const in arg subtrahend[1572038]:int(64)[13], const in arg modulus[1572040]:int(64)[13]) : int(64)[13] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1572062]:int(64)[13] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1572090]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1572092 'move' call_tmp[1572090](1572095 call abs[463557] modulus[1572040]))
    val call_tmp[1572097]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1572103]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1572105 'move' call_tmp[1572103](1572111 call safeCast[1137723] call_tmp[1572090]))
    const-val m[1572113]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1572115 'move' m[1572113] call_tmp[1572103])
    const-val call_tmp[1572119]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1572121 'move' call_tmp[1572119](1572124 call chpl__mod[1137605] minuend[1572036] m[1572113]))
    const-val minMod[1572127]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1572129 'move' minMod[1572127] call_tmp[1572119])
    const-val call_tmp[1572133]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1572135 'move' call_tmp[1572133](1572138 call chpl__mod[1137605] subtrahend[1572038] m[1572113]))
    const-val subMod[1572141]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1572143 'move' subMod[1572141] call_tmp[1572133])
    val tmp[1572149]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1572151]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1572153]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1572155 'move' call_tmp[1572153](1572158 call <[437568] minMod[1572127] subMod[1572141]))
    (1572161 'move' tmp[1572151] call_tmp[1572153])
    if tmp[1572151]
    {
      const-val tmp[1572168]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[1572170]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1572172 'move' call_tmp[1572170](1572175 call -[440532] subMod[1572141] minMod[1572127]))
      (1572178 'move' tmp[1572168](1572181 call -[440532] m[1572113] call_tmp[1572170]))
      (1572184 'move' tmp[1572149] tmp[1572168])
    }
    {
      const-val tmp[1572190]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      (1572192 'move' tmp[1572190](1572195 call -[440532] minMod[1572127] subMod[1572141]))
      (1572198 'move' tmp[1572149] tmp[1572190])
    }
    val call_tmp[1572204]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1572251 'move' ret[1572062] tmp[1572149])
    gotoReturn _end_chpl__diffMod[1572225] _end_chpl__diffMod[1572225]
    label _end_chpl__diffMod[1572225]
    (1572227 return ret[1572062])
  }
  function chpl__add[1093561](const in arg a[1093563]:int(64)[13], const in arg b[1093568]:int(64)[13]) : int(64)[13] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1879759]:int(64)[13] "temp"
    val ret[1093572]:int(64)[13] "dead after last mention" "RVV" "temp"
    val call_tmp[1093582]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val tmp[1093615]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val tmp[1093617]:bool[10] "dead after last mention" "maybe param" "temp"
    (1093619 'move' tmp[1093617](1093622 call >[437788] a[1093563] 0))
    val tmp[1093638]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1093640]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1093642]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1093644 'move' call_tmp[1093642] tmp[1093617])
    (1093649 'move' tmp[1093640] call_tmp[1093642])
    if tmp[1093640]
    {
      const-val tmp[1093656]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[1093658]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1093660 'move' call_tmp[1093658](1093663 call >[437788] b[1093568] 0))
      (1093666 'move' tmp[1093656] call_tmp[1093658])
      (1093671 'move' tmp[1093638] tmp[1093656])
    }
    {
      (1093677 'move' tmp[1093638] 0)
    }
    (1093683 'move' tmp[1093615] tmp[1093638])
    val tmp[1093699]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1093701]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1093703]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1093705 'move' call_tmp[1093703] tmp[1093615])
    (1093710 'move' tmp[1093701] call_tmp[1093703])
    if tmp[1093701]
    {
      const-val tmp[1093717]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      val call_tmp[1093719]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[1093732]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1093734 'move' call_tmp[1093732](1093737 call -[980537] a[1093563]))
      const-val call_tmp[1093740]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1093742 'move' call_tmp[1093740](1093745 call >[437788] b[1093568] call_tmp[1093732]))
      (1093748 'move' tmp[1093717] call_tmp[1093740])
      (1093753 'move' tmp[1093699] tmp[1093717])
    }
    {
      (1093759 'move' tmp[1093699] 0)
    }
    const-val call_tmp[1093765]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1093767 'move' call_tmp[1093765] tmp[1093699])
    if call_tmp[1093765]
    {
      (1093781 'move' ret[1093572] 9223372036854775807)
      gotoReturn _end_chpl__add[1094505] _end_chpl__add[1094505]
    }
    const-val tmp[1093788]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val tmp[1093790]:bool[10] "dead after last mention" "maybe param" "temp"
    (1093792 'move' tmp[1093790](1093795 call <[948587] a[1093563]))
    val tmp[1093811]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1093813]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1093815]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1093817 'move' call_tmp[1093815] tmp[1093790])
    (1093822 'move' tmp[1093813] call_tmp[1093815])
    if tmp[1093813]
    {
      const-val tmp[1093829]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[1093831]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1093833 'move' call_tmp[1093831](1093836 call <[948587] b[1093568]))
      (1093839 'move' tmp[1093829] call_tmp[1093831])
      (1093844 'move' tmp[1093811] tmp[1093829])
    }
    {
      (1093850 'move' tmp[1093811] 0)
    }
    (1093856 'move' tmp[1093788] tmp[1093811])
    val tmp[1093872]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1093874]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1093876]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1093878 'move' call_tmp[1093876] tmp[1093788])
    (1093883 'move' tmp[1093874] call_tmp[1093876])
    if tmp[1093874]
    {
      const-val tmp[1093890]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      val call_tmp[1093892]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[1093905]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1093907 'move' call_tmp[1093905](1093910 call -[980389] a[1093563]))
      const-val call_tmp[1093913]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1093915 'move' call_tmp[1093913](1093918 call <[437568] b[1093568] call_tmp[1093905]))
      (1093921 'move' tmp[1093890] call_tmp[1093913])
      (1093926 'move' tmp[1093872] tmp[1093890])
    }
    {
      (1093932 'move' tmp[1093872] 0)
    }
    const-val call_tmp[1093938]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1093940 'move' call_tmp[1093938] tmp[1093872])
    if call_tmp[1093938]
    {
      (1093954 'move' ret[1093572] -9223372036854775808)
      gotoReturn _end_chpl__add[1094505] _end_chpl__add[1094505]
    }
    const-val call_tmp[1094485]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1094487 'move' call_tmp[1094485](1094490 call +[439752] a[1093563] b[1093568]))
    const-val call_tmp[1094493]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1094495 'move' call_tmp[1094493] call_tmp[1094485])
    (1094501 'move' ret[1093572] call_tmp[1094493])
    label _end_chpl__add[1094505]
    (1094507 return ret[1093572])
  }
  function chpl__addRangeStrides[1105216](const in arg start[1105218]:int(64)[13], const in arg stride[1105220]:int(64)[13], const in arg count[1105222]:int(64)[13]) : int(64)[13] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1105227]:int(64)[13] "dead after last mention" "RVV" "temp"
    val call_tmp[1105680]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1105686]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1105688 'move' call_tmp[1105686](1105691 call mul[1105724] stride[1105220] count[1105222]))
    const-val call_tmp[1105694]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1105696 'move' call_tmp[1105694](1105699 call add[1106111] start[1105218] call_tmp[1105686]))
    const-val call_tmp[1105702]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1105704 'move' call_tmp[1105702] call_tmp[1105694])
    val call_tmp[1105710]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1106218 'move' ret[1105227] call_tmp[1105702])
    (1105721 return ret[1105227])
  }
  function range(int(64),bounded,false)[1027003].chpl_intToIdx[1028669](const in arg this[1028675]:range(int(64),bounded,false)[1027003], const in arg i[1028677]:int(64)[13]) : int(64)[13] "inline" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    val ret[1028679]:int(64)[13] "dead after last mention" "RVV" "temp"
    val call_tmp[1028689]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1028697]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1028699 'move' call_tmp[1028697](1028702 call chpl__intToIdx[1027588] i[1028677]))
    (1028705 'move' ret[1028679] call_tmp[1028697])
    (1028709 return ret[1028679])
  }
  function range(byteIndex,bounded,false)[1025981].chpl_intToIdx[1033122](const in arg this[1033128]:range(byteIndex,bounded,false)[1025981], const in arg i[1033130]:int(64)[13], ref arg _retArg[1908672]:_ref(byteIndex)[948948]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1033132]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    val call_tmp[1033142]:byteIndex[28173] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1033150]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1893804]:byteIndex[28173] "temp"
    (1033155 call chpl__intToIdx[28505] i[1033130] ret_tmp[1893804])
    (1893807 'move' call_tmp[1033150] ret_tmp[1893804])
    (1033158 'move' ret[1033132] call_tmp[1033150])
    (1908674 '=' _retArg[1908672] ret[1033132])
    (1908676 return _void[55])
  }
  function range(int(64),boundedLow,false)[1087754].chpl_intToIdx[1094593](const in arg this[1094599]:range(int(64),boundedLow,false)[1087754], const in arg i[1094601]:int(64)[13]) : int(64)[13] "inline" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    val ret[1094603]:int(64)[13] "dead after last mention" "RVV" "temp"
    val call_tmp[1094613]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1094621]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1094623 'move' call_tmp[1094621](1094626 call chpl__intToIdx[1027588] i[1094601]))
    (1094629 'move' ret[1094603] call_tmp[1094621])
    (1094633 return ret[1094603])
  }
  function range(byteIndex,boundedLow,false)[1143592].chpl_intToIdx[1146385](const in arg this[1146391]:range(byteIndex,boundedLow,false)[1143592], const in arg i[1146393]:int(64)[13], ref arg _retArg[1910490]:_ref(byteIndex)[948948]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1146395]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    val call_tmp[1146405]:byteIndex[28173] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1146413]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1893840]:byteIndex[28173] "temp"
    (1146418 call chpl__intToIdx[28505] i[1146393] ret_tmp[1893840])
    (1893843 'move' call_tmp[1146413] ret_tmp[1893840])
    (1146421 'move' ret[1146395] call_tmp[1146413])
    (1910492 '=' _retArg[1910490] ret[1146395])
    (1910494 return _void[55])
  }
  function range(byteIndex,boundedHigh,false)[1185108].chpl_intToIdx[1188729](const in arg this[1188735]:range(byteIndex,boundedHigh,false)[1185108], const in arg i[1188737]:int(64)[13], ref arg _retArg[1910806]:_ref(byteIndex)[948948]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1188739]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    val call_tmp[1188749]:byteIndex[28173] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1188757]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1893876]:byteIndex[28173] "temp"
    (1188762 call chpl__intToIdx[28505] i[1188737] ret_tmp[1893876])
    (1893879 'move' call_tmp[1188757] ret_tmp[1893876])
    (1188765 'move' ret[1188739] call_tmp[1188757])
    (1910808 '=' _retArg[1910806] ret[1188739])
    (1910810 return _void[55])
  }
  function range(int(64),boundedHigh,false)[1187618].chpl_intToIdx[1190490](const in arg this[1190496]:range(int(64),boundedHigh,false)[1187618], const in arg i[1190498]:int(64)[13]) : int(64)[13] "inline" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    val ret[1190500]:int(64)[13] "dead after last mention" "RVV" "temp"
    val call_tmp[1190510]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1190518]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1190520 'move' call_tmp[1190518](1190523 call chpl__intToIdx[1027588] i[1190498]))
    (1190526 'move' ret[1190500] call_tmp[1190518])
    (1190530 return ret[1190500])
  }
  function range(int(64),bounded,true)[1570523].chpl_intToIdx[1573078](const in arg this[1573084]:range(int(64),bounded,true)[1570523], const in arg i[1573086]:int(64)[13]) : int(64)[13] "inline" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    val ret[1573088]:int(64)[13] "dead after last mention" "RVV" "temp"
    val call_tmp[1573098]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1573106]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1573108 'move' call_tmp[1573106](1573111 call chpl__intToIdx[1027588] i[1573086]))
    (1573114 'move' ret[1573088] call_tmp[1573106])
    (1573118 return ret[1573088])
  }
  function chpl__intToIdx[1027588](const in arg i[1027592]:int(64)[13]) : int(64)[13] "inline" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1879700]:int(64)[13] "temp"
    val ret[1027594]:int(64)[13] "dead after last mention" "RVV" "temp"
    val call_tmp[1028723]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      (1028746 'move' ret[1027594] i[1027592])
      gotoReturn _end_chpl__intToIdx[1028768] _end_chpl__intToIdx[1028768]
    }
    label _end_chpl__intToIdx[1028768]
    (1028770 return ret[1027594])
  }
  function chpl__intToIdx[1027601]() : int(64)[13] "inline" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1879702]:int(64)[13] "temp"
    val ret[1027607]:int(64)[13] "dead after last mention" "RVV" "temp"
    val call_tmp[1027655]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      (1027678 'move' ret[1027607] 0)
      gotoReturn _end_chpl__intToIdx[1027700] _end_chpl__intToIdx[1027700]
    }
    label _end_chpl__intToIdx[1027700]
    (1027702 return ret[1027607])
  }
  function chpl__intToIdx[1033290]() : int(64)[13] "inline" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1879718]:int(64)[13] "temp"
    val ret[1033296]:int(64)[13] "dead after last mention" "RVV" "temp"
    val call_tmp[1033325]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      (1033348 'move' ret[1033296] 1)
      gotoReturn _end_chpl__intToIdx[1033370] _end_chpl__intToIdx[1033370]
    }
    label _end_chpl__intToIdx[1033370]
    (1033372 return ret[1033296])
  }
  function chpl__intToIdx[1091175]() : nothing[7] "inline" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1879755]:int(64)[13] "temp"
    (1881682 return none[57])
  }
  function chpl__idxToInt[1027105](const in arg i[1027107]:int(64)[13]) : int(64)[13] "inline" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1027109]:int(64)[13] "dead after last mention" "RVV" "temp"
    (1027213 'move' ret[1027109] i[1027107])
    (1027217 return ret[1027109])
  }
  function absSameType[1091031](const in arg str[1091033]:int(64)[13]) : int(64)[13] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1091035]:int(64)[13] "dead after last mention" "RVV" "temp"
    {
      (1091114 'move' ret[1091035] 1)
      gotoReturn _end_absSameType[1091121] _end_absSameType[1091121]
    }
    label _end_absSameType[1091121]
    (1091123 return ret[1091035])
  }
  function mul[1105724](const in arg a[1105726]:int(64)[13], const in arg b[1105728]:int(64)[13]) : int(64)[13] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1105730]:int(64)[13] "dead after last mention" "RVV" "temp"
    const-val tmp[1105740]:int(64)[13] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[1105803]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (1105805 'move' tmp[1105803](1105808 call *[441944] a[1105726] b[1105728]))
    (1105811 'move' tmp[1105740] tmp[1105803])
    (1105817 'move' ret[1105730] tmp[1105740])
    (1105821 return ret[1105730])
  }
  function add[1106111](const in arg a[1106113]:int(64)[13], const in arg b[1106115]:int(64)[13]) : int(64)[13] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1106117]:int(64)[13] "dead after last mention" "RVV" "temp"
    const-val tmp[1106127]:int(64)[13] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[1106190]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (1106192 'move' tmp[1106190](1106195 call +[439752] a[1106113] b[1106115]))
    (1106198 'move' tmp[1106127] tmp[1106190])
    (1106204 'move' ret[1106117] tmp[1106127])
    (1106208 return ret[1106117])
  }
}