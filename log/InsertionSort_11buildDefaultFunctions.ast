AST dump for InsertionSort after pass buildDefaultFunctions.
Module use list: ChapelStandard Sort ShallowCopy 

{
  function chpl__init_InsertionSort[416039]() : void[4] "insert line file info" "module init"
  {
    (537778 return _void[55])
  }
  function insertionSort[270021](arg Data[270018]:_array[133588](?), arg comparator[270026]:_any[178](?) :
  defaultComparator[267889] =
  defaultComparator[267889], arg lo[270035]:int(64)[13] =
  unknown call_tmp[737577] "expr temp" "maybe param" "maybe type" "temp", arg hi[270044]:int(64)[13] =
  unknown call_tmp[737586] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "no return value for void"
  {
    unknown call_tmp[737595] "expr temp" "maybe param" "maybe type" "temp"
    (737598 'move' call_tmp[737595](466598 call eltType _mt[243] Data[270018]))
    (270052 call chpl_check_comparator comparator[270026] call_tmp[737595])
    (489805 'end of statement')
    unknown call_tmp[737602] "expr temp" "maybe param" "maybe type" "temp"
    (737605 'move' call_tmp[737602](466590 call _dom _mt[243] Data[270018]))
    unknown call_tmp[737609] "expr temp" "maybe param" "maybe type" "temp"
    (737612 'move' call_tmp[737609](270056 call rank _mt[243] call_tmp[737602]))
    unknown call_tmp[737614] "expr temp" "maybe param" "maybe type" "temp"
    (737617 'move' call_tmp[737614](270060 call != call_tmp[737609] 1))
    unknown call_tmp[737619] "expr temp" "maybe param" "maybe type" "temp"
    (737622 'move' call_tmp[737619](270084 call _cond_test call_tmp[737614]))
    if call_tmp[737619]
    {
      (270081 call compilerError "insertionSort() requires 1-D array")
    }
    const low[270089] "dead at end of block" "const" "insert auto destroy"
    (548665 'init var' low[270089] lo[270035])
    const high[270093] "dead at end of block" "const" "insert auto destroy"
    (548667 'init var' high[270093] hi[270044])
    unknown call_tmp[737626] "expr temp" "maybe param" "maybe type" "temp"
    (737629 'move' call_tmp[737626](466594 call _dom _mt[243] Data[270018]))
    unknown call_tmp[737633] "expr temp" "maybe param" "maybe type" "temp"
    (737636 'move' call_tmp[737633](270098 call stride _mt[243] call_tmp[737626]))
    unknown call_tmp[737638] "maybe param" "maybe type" "temp"
    (737641 'move' call_tmp[737638](270102 call abs call_tmp[737633]))
    const stride[270103] "dead at end of block" "const" "insert auto destroy"
    (548669 'init var' stride[270103] call_tmp[737638])
    (270106 'end of statement')
    {
      unknown _indexOfInterest[270260] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[270261] "expr temp" "temp"
      unknown call_tmp[737643] "expr temp" "maybe param" "maybe type" "temp"
      (737646 'move' call_tmp[737643](270279 call chpl_direct_range_iter low[270089] high[270093] stride[270103]))
      (270270 'move' _iterator[270261](270268 call _getIterator call_tmp[737643]))
      Defer
      {
        {
          (270295 call _freeIterator _iterator[270261])
        }
      }
      { scopeless type
        (270284 'move' _indexOfInterest[270260](270281 call iteratorIndex _iterator[270261]))
      }
      ForLoop[270262]
      {
        unknown i[270288] "index var" "insert auto destroy"
        (489808 'end of statement')
        (270290 'move' i[270288] _indexOfInterest[270260])
        (489809 'end of statement' i[270288])
        {
          unknown call_tmp[737648] "maybe param" "maybe type" "temp"
          (737651 'move' call_tmp[737648](270118 call Data[270018] i[270288]))
          unknown ithVal[270119] "dead at end of block" "insert auto destroy"
          (548671 'init var' ithVal[270119] call_tmp[737648])
          (270122 'end of statement')
          unknown inserted[270125] "dead at end of block" "insert auto destroy"
          (548673 'init var' inserted[270125] 0)
          (270128 'end of statement' i[270288])
          {
            unknown _indexOfInterest[270194] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[270195] "expr temp" "temp"
            unknown call_tmp[737653] "expr temp" "maybe param" "maybe type" "temp"
            (737656 'move' call_tmp[737653](270218 call - i[270288] stride[270103]))
            unknown call_tmp[737658] "expr temp" "maybe param" "maybe type" "temp"
            (737661 'move' call_tmp[737658](270214 call - stride[270103]))
            unknown call_tmp[737663] "expr temp" "maybe param" "maybe type" "temp"
            (737666 'move' call_tmp[737663](270221 call chpl_direct_range_iter low[270089] call_tmp[737653] call_tmp[737658]))
            (270204 'move' _iterator[270195](270202 call _getIterator call_tmp[737663]))
            Defer
            {
              {
                (270237 call _freeIterator _iterator[270195])
              }
            }
            { scopeless type
              (270226 'move' _indexOfInterest[270194](270223 call iteratorIndex _iterator[270195]))
            }
            ForLoop[270196]
            {
              unknown j[270230] "index var" "insert auto destroy"
              (489813 'end of statement')
              (270232 'move' j[270230] _indexOfInterest[270194])
              (489814 'end of statement' j[270230])
              {
                unknown call_tmp[737668] "expr temp" "maybe param" "maybe type" "temp"
                (737671 'move' call_tmp[737668](270148 call Data[270018] j[270230]))
                unknown call_tmp[737673] "expr temp" "maybe param" "maybe type" "temp"
                (737676 'move' call_tmp[737673](270150 call chpl_compare ithVal[270119] call_tmp[737668] comparator[270026]))
                unknown call_tmp[737678] "expr temp" "maybe param" "maybe type" "temp"
                (737681 'move' call_tmp[737678](270152 call < call_tmp[737673] 0))
                unknown call_tmp[737683] "expr temp" "maybe param" "maybe type" "temp"
                (737686 'move' call_tmp[737683](270189 call _cond_test call_tmp[737678]))
                if call_tmp[737683]
                {
                  unknown call_tmp[737688] "expr temp" "maybe param" "maybe type" "temp"
                  (737691 'move' call_tmp[737688](270157 call + j[270230] stride[270103]))
                  unknown call_tmp[737693] "expr temp" "maybe param" "maybe type" "temp"
                  (737696 'move' call_tmp[737693](270160 call Data[270018] call_tmp[737688]))
                  unknown call_tmp[737698] "expr temp" "maybe param" "maybe type" "temp"
                  (737701 'move' call_tmp[737698](270164 call Data[270018] j[270230]))
                  (270165 call = call_tmp[737693] call_tmp[737698])
                  (489816 'end of statement' j[270230] stride[270103] j[270230])
                }
                {
                  unknown call_tmp[737703] "expr temp" "maybe param" "maybe type" "temp"
                  (737706 'move' call_tmp[737703](270172 call + j[270230] stride[270103]))
                  unknown call_tmp[737708] "expr temp" "maybe param" "maybe type" "temp"
                  (737711 'move' call_tmp[737708](270175 call Data[270018] call_tmp[737703]))
                  (270177 call = call_tmp[737708] ithVal[270119])
                  (489820 'end of statement' j[270230] stride[270103] ithVal[270119])
                  (270183 call = inserted[270125] 1)
                  (489824 'end of statement' inserted[270125])
                  break _breakLabel[270200] _breakLabel[270200]
                }
              }
              label _continueLabel[270199]
              _indexOfInterest[270194]
              _iterator[270195]
            }
            label _breakLabel[270200]
          }
          unknown call_tmp[737713] "expr temp" "maybe param" "maybe type" "temp"
          (737716 'move' call_tmp[737713](270245 call ! inserted[270125]))
          unknown call_tmp[737718] "expr temp" "maybe param" "maybe type" "temp"
          (737721 'move' call_tmp[737718](270256 call _cond_test call_tmp[737713]))
          if call_tmp[737718]
          {
            unknown call_tmp[737723] "expr temp" "maybe param" "maybe type" "temp"
            (737726 'move' call_tmp[737723](270250 call Data[270018] low[270089]))
            (270252 call = call_tmp[737723] ithVal[270119])
            (489826 'end of statement' low[270089] ithVal[270119])
          }
        }
        label _continueLabel[270265]
        _indexOfInterest[270260]
        _iterator[270261]
      }
      label _breakLabel[270266]
    }
    (537774 return _void[55])
  }
  function insertionSortMoveElts[270316](arg Data[270313]:_array[133588](?), arg comparator[270321]:_any[178](?) :
  defaultComparator[267889] =
  defaultComparator[267889], arg lo[270330]:int(64)[13] =
  unknown call_tmp[737730] "expr temp" "maybe param" "maybe type" "temp", arg hi[270339]:int(64)[13] =
  unknown call_tmp[737739] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "no return value for void"
  {
    unknown call_tmp[737748] "expr temp" "maybe param" "maybe type" "temp"
    (737751 'move' call_tmp[737748](466620 call eltType _mt[243] Data[270313]))
    (270347 call chpl_check_comparator comparator[270321] call_tmp[737748])
    (489829 'end of statement')
    unknown call_tmp[737755] "expr temp" "maybe param" "maybe type" "temp"
    (737758 'move' call_tmp[737755](466612 call _dom _mt[243] Data[270313]))
    unknown call_tmp[737762] "expr temp" "maybe param" "maybe type" "temp"
    (737765 'move' call_tmp[737762](270351 call rank _mt[243] call_tmp[737755]))
    unknown call_tmp[737767] "expr temp" "maybe param" "maybe type" "temp"
    (737770 'move' call_tmp[737767](270355 call != call_tmp[737762] 1))
    unknown call_tmp[737772] "expr temp" "maybe param" "maybe type" "temp"
    (737775 'move' call_tmp[737772](270363 call _cond_test call_tmp[737767]))
    if call_tmp[737772]
    {
      (270360 call compilerError "insertionSort() requires 1-D array")
    }
    const low[270368] "dead at end of block" "const" "insert auto destroy"
    (548675 'init var' low[270368] lo[270330])
    const high[270372] "dead at end of block" "const" "insert auto destroy"
    (548677 'init var' high[270372] hi[270339])
    unknown call_tmp[737779] "expr temp" "maybe param" "maybe type" "temp"
    (737782 'move' call_tmp[737779](466616 call _dom _mt[243] Data[270313]))
    unknown call_tmp[737786] "expr temp" "maybe param" "maybe type" "temp"
    (737789 'move' call_tmp[737786](270377 call stride _mt[243] call_tmp[737779]))
    unknown call_tmp[737791] "maybe param" "maybe type" "temp"
    (737794 'move' call_tmp[737791](270381 call abs call_tmp[737786]))
    const stride[270382] "dead at end of block" "const" "insert auto destroy"
    (548679 'init var' stride[270382] call_tmp[737791])
    (270385 'end of statement')
    {
      unknown _indexOfInterest[270561] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[270562] "expr temp" "temp"
      unknown call_tmp[737796] "expr temp" "maybe param" "maybe type" "temp"
      (737799 'move' call_tmp[737796](270580 call chpl_direct_range_iter low[270368] high[270372] stride[270382]))
      (270571 'move' _iterator[270562](270569 call _getIterator call_tmp[737796]))
      Defer
      {
        {
          (270596 call _freeIterator _iterator[270562])
        }
      }
      { scopeless type
        (270585 'move' _indexOfInterest[270561](270582 call iteratorIndex _iterator[270562]))
      }
      ForLoop[270563]
      {
        unknown i[270589] "index var" "insert auto destroy"
        (489832 'end of statement')
        (270591 'move' i[270589] _indexOfInterest[270561])
        (489833 'end of statement' i[270589])
        {
          unknown call_tmp[737801] "expr temp" "maybe param" "maybe type" "temp"
          (737804 'move' call_tmp[737801](270403 call Data[270313] i[270589]))
          unknown call_tmp[737806] "maybe param" "maybe type" "temp"
          (737809 'move' call_tmp[737806](270405 call shallowCopyInit module=[255] ShallowCopy[277293] call_tmp[737801]))
          unknown ithVal[270406] "dead at end of block" "no auto destroy"
          (548681 'init var' ithVal[270406] call_tmp[737806])
          (270409 'end of statement')
          unknown inserted[270412] "dead at end of block" "insert auto destroy"
          (548683 'init var' inserted[270412] 0)
          (270415 'end of statement' i[270589])
          {
            unknown _indexOfInterest[270491] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[270492] "expr temp" "temp"
            unknown call_tmp[737811] "expr temp" "maybe param" "maybe type" "temp"
            (737814 'move' call_tmp[737811](270515 call - i[270589] stride[270382]))
            unknown call_tmp[737816] "expr temp" "maybe param" "maybe type" "temp"
            (737819 'move' call_tmp[737816](270511 call - stride[270382]))
            unknown call_tmp[737821] "expr temp" "maybe param" "maybe type" "temp"
            (737824 'move' call_tmp[737821](270518 call chpl_direct_range_iter low[270368] call_tmp[737811] call_tmp[737816]))
            (270501 'move' _iterator[270492](270499 call _getIterator call_tmp[737821]))
            Defer
            {
              {
                (270534 call _freeIterator _iterator[270492])
              }
            }
            { scopeless type
              (270523 'move' _indexOfInterest[270491](270520 call iteratorIndex _iterator[270492]))
            }
            ForLoop[270493]
            {
              unknown j[270527] "index var" "insert auto destroy"
              (489837 'end of statement')
              (270529 'move' j[270527] _indexOfInterest[270491])
              (489838 'end of statement' j[270527])
              {
                unknown call_tmp[737826] "expr temp" "maybe param" "maybe type" "temp"
                (737829 'move' call_tmp[737826](270435 call Data[270313] j[270527]))
                unknown call_tmp[737831] "expr temp" "maybe param" "maybe type" "temp"
                (737834 'move' call_tmp[737831](270437 call chpl_compare ithVal[270406] call_tmp[737826] comparator[270321]))
                unknown call_tmp[737836] "expr temp" "maybe param" "maybe type" "temp"
                (737839 'move' call_tmp[737836](270439 call < call_tmp[737831] 0))
                unknown call_tmp[737841] "expr temp" "maybe param" "maybe type" "temp"
                (737844 'move' call_tmp[737841](270486 call _cond_test call_tmp[737836]))
                if call_tmp[737841]
                {
                  unknown call_tmp[737846] "expr temp" "maybe param" "maybe type" "temp"
                  (737849 'move' call_tmp[737846](270450 call + j[270527] stride[270382]))
                  unknown call_tmp[737851] "expr temp" "maybe param" "maybe type" "temp"
                  (737854 'move' call_tmp[737851](270453 call Data[270313] call_tmp[737846]))
                  unknown call_tmp[737856] "expr temp" "maybe param" "maybe type" "temp"
                  (737859 'move' call_tmp[737856](270458 call Data[270313] j[270527]))
                  (270459 call shallowCopy module=[255] ShallowCopy[277293] call_tmp[737851] call_tmp[737856])
                  (489840 'end of statement' j[270527] stride[270382] j[270527])
                  (364061 'referenced modules list' ShallowCopy[277293])
                }
                {
                  unknown call_tmp[737861] "expr temp" "maybe param" "maybe type" "temp"
                  (737864 'move' call_tmp[737861](270469 call + j[270527] stride[270382]))
                  unknown call_tmp[737866] "expr temp" "maybe param" "maybe type" "temp"
                  (737869 'move' call_tmp[737866](270472 call Data[270313] call_tmp[737861]))
                  (270475 call shallowCopy module=[255] ShallowCopy[277293] call_tmp[737866] ithVal[270406])
                  (489844 'end of statement' j[270527] stride[270382] ithVal[270406])
                  (270480 call = inserted[270412] 1)
                  (489848 'end of statement' inserted[270412])
                  break _breakLabel[270497] _breakLabel[270497]
                  (364067 'referenced modules list' ShallowCopy[277293])
                }
              }
              label _continueLabel[270496]
              _indexOfInterest[270491]
              _iterator[270492]
            }
            label _breakLabel[270497]
          }
          unknown call_tmp[737871] "expr temp" "maybe param" "maybe type" "temp"
          (737874 'move' call_tmp[737871](270542 call ! inserted[270412]))
          unknown call_tmp[737876] "expr temp" "maybe param" "maybe type" "temp"
          (737879 'move' call_tmp[737876](270557 call _cond_test call_tmp[737871]))
          if call_tmp[737876]
          {
            unknown call_tmp[737881] "expr temp" "maybe param" "maybe type" "temp"
            (737884 'move' call_tmp[737881](270551 call Data[270313] low[270368]))
            (270554 call shallowCopy module=[255] ShallowCopy[277293] call_tmp[737881] ithVal[270406])
            (489850 'end of statement' low[270368] ithVal[270406])
            (364073 'referenced modules list' ShallowCopy[277293])
          }
          (364055 'referenced modules list' ShallowCopy[277293])
        }
        label _continueLabel[270566]
        _indexOfInterest[270561]
        _iterator[270562]
      }
      label _breakLabel[270567]
    }
    (537776 return _void[55])
  }
  (355250 'used modules list'(352936 'use' ChapelStandard[20264])(270006 'use' Sort[267880]))
}