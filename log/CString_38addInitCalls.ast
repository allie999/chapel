AST dump for CString after pass addInitCalls.
Module use list: ChapelStandard SysCTypes 

{
  function chpl__init_CString[415955]() : void[4] "fast on" "insert line file info" "local fn" "module init" "resolved"
  {
    if chpl__init_CString_p[2590568]
    {
      goto _exit_chpl__init_CString[2590605] _exit_chpl__init_CString[2590605]
    }
    val modFormatStr[2590576]:c_string[19] "temp"
    val modStr[2590577]:c_string[19] "temp"
    ref refIndentLevel[2590591]:int(32)[95] "temp"
    (2590584 'move' modFormatStr[2590576] c"%*s\n")
    (2590586 'move' modStr[2590577] c"CString")
    (2590589 call printModuleInit[20429] modFormatStr[2590576] modStr[2590577] 7)
    (2590595 'move' refIndentLevel[2590591](2590594 'addr of' moduleInitLevel[20419]))
    (2590598 '+=' refIndentLevel[2590591] 1)
    (2590574 'move' chpl__init_CString_p[2590568] 1)
    {
      (2589906 call chpl__init_SysCTypes[415946])
    }
    (2590601 '-=' refIndentLevel[2590591] 1)
    label _endchpl__init_CString[2590607]
    label _exit_chpl__init_CString[2590605]
    (501848 return _void[55])
  }
  function chpl_rt_free_c_string[22717](ref arg cs[22714]:c_string[19]) : void[4] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    (501840 return _void[55])
  }
}