AST dump for RangeChunk after pass createTaskFunctions.
Module use list: ChapelStandard 

{
  function chpl__init_RangeChunk[416165]() : void[4] "insert line file info" "module init"
  {
    (537516 return _void[55])
  }
  type RemElems[266487] def Thru[266481]:RemElems[266487] def Pack[266483]:RemElems[266487] def Mod[266485]:RemElems[266487]
  function chunks[266510](arg r[266507]:range[64319](?), arg numChunks[266513]:integral[199](?), arg remPol[266518]:RemElems[266487] =
  Thru[266481]) : _unknown[51] "compiler added where" "iterator fn" "no return value for void"
  {
    unknown ret[537321] "RVV" "temp"
    {
      unknown _indexOfInterest[266582] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[266583] "expr temp" "temp"
      unknown call_tmp[734814] "expr temp" "maybe param" "maybe type" "temp"
      (734817 'move' call_tmp[734814](266538 call chunksOrder r[266507] numChunks[266513] remPol[266518]))
      (266592 'move' _iterator[266583](266590 call _getIterator call_tmp[734814]))
      Defer
      {
        {
          (266623 call _freeIterator _iterator[266583])
        }
      }
      { scopeless type
        (266598 'move' _indexOfInterest[266582](266595 call iteratorIndex _iterator[266583]))
      }
      ForLoop[266584]
      {
        (266603 call _check_tuple_var_decl _indexOfInterest[266582] 2)
        (489648 'end of statement')
        unknown startOrder[266609] "index var" "insert auto destroy"
        (489649 'end of statement')
        (266611 'move' startOrder[266609](266607 call _indexOfInterest[266582] 0))
        (489650 'end of statement' startOrder[266609])
        unknown endOrder[266616] "index var" "insert auto destroy"
        (489652 'end of statement')
        (266618 'move' endOrder[266616](266614 call _indexOfInterest[266582] 1))
        (489653 'end of statement' endOrder[266616])
        {
          unknown call_tmp[734821] "maybe param" "maybe type" "temp"
          (734824 'move' call_tmp[734821](266545 call(266540 call (partial) orderToIndex _mt[243] r[266507]) startOrder[266609]))
          const start[266546] "dead at end of block" "const" "insert auto destroy"
          (548617 'init var' start[266546] call_tmp[734821])
          (266549 'end of statement')
          unknown call_tmp[734828] "maybe param" "maybe type" "temp"
          (734831 'move' call_tmp[734828](266557 call(266552 call (partial) orderToIndex _mt[243] r[266507]) endOrder[266616]))
          const end[266558] "dead at end of block" "const" "insert auto destroy"
          (548619 'init var' end[266558] call_tmp[734828])
          (266561 'end of statement' startOrder[266609] endOrder[266616])
          unknown yret[537325] "YVV" "temp"
          unknown tmp[579160] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[579161] "maybe param" "temp"
          unknown call_tmp[734833] "expr temp" "maybe param" "maybe type" "temp"
          (734836 'move' call_tmp[734833](466488 'query' r[266507] 3))
          (579166 'move' tmp[579161](579164 call _cond_test call_tmp[734833]))
          if tmp[579161]
          {
            unknown tmp[579168] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[734838] "expr temp" "maybe param" "maybe type" "temp"
            (734841 'move' call_tmp[734838](266565 call chpl_build_bounded_range start[266546] end[266558]))
            unknown call_tmp[734845] "expr temp" "maybe param" "maybe type" "temp"
            (734848 'move' call_tmp[734845](266568 call stride _mt[243] r[266507]))
            (579170 'move' tmp[579168](266571 call chpl_by call_tmp[734838] call_tmp[734845]))
            (579175 'move' tmp[579160](579172 '_paramFoldLogical' tmp[579161] tmp[579168]))
          }
          {
            unknown tmp[579177] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            (579179 'move' tmp[579177](266575 call chpl_build_bounded_range start[266546] end[266558]))
            (579184 'move' tmp[579160](579181 '_paramFoldLogical' tmp[579161] tmp[579177]))
          }
          unknown call_tmp[734850] "expr temp" "maybe param" "maybe type" "temp"
          (734853 'move' call_tmp[734850](537329 'query' r[266507] 1))
          unknown call_tmp[734855] "expr temp" "maybe param" "maybe type" "temp"
          (734858 'move' call_tmp[734855](537333 'query' r[266507] 3))
          unknown call_tmp[734860] "expr temp" "maybe param" "maybe type" "temp"
          (734863 'move' call_tmp[734860](537328 call range[64319](?) call_tmp[734850] bounded[64208] call_tmp[734855]))
          (537337 'move' yret[537325](537336 'coerce' tmp[579160] call_tmp[734860]))
          (537339 yield yret[537325])
          (489657 'end of statement' start[266546] end[266558] start[266546] end[266558])
        }
        label _continueLabel[266587]
        _indexOfInterest[266582]
        _iterator[266583]
      }
      label _breakLabel[266588]
    }
    (537323 return ret[537321])
  }
  where {
    unknown call_tmp[734865] "expr temp" "maybe param" "maybe type" "temp"
    (734868 'move' call_tmp[734865](466475 'query' r[266507] 2))
    unknown call_tmp[734870] "expr temp" "maybe param" "maybe type" "temp"
    (734873 'move' call_tmp[734870](466479 call == bounded[64208] call_tmp[734865]))
    (466483 call & 1 call_tmp[734870])
  }
  { scopeless type
    unknown call_tmp[734875] "expr temp" "maybe param" "maybe type" "temp"
    (734878 'move' call_tmp[734875](466472 'query' r[266507] 1))
    unknown call_tmp[734880] "expr temp" "maybe param" "maybe type" "temp"
    (734883 'move' call_tmp[734880](466491 'query' r[266507] 3))
    (266527 call range[64319](?) call_tmp[734875] bounded[64208] call_tmp[734880])
  }
  function chunk[266647](arg r[266644]:range[64319](?), arg numChunks[266650]:integral[199](?), arg idx[266654]:integral[199](?), arg remPol[266659]:RemElems[266487] =
  Thru[266481]) : _unknown[51] "compiler added where"
  {
    unknown ret[537343] "RVV" "temp"
    unknown call_tmp[734885] "maybe param" "maybe type" "temp"
    (734888 'move' call_tmp[734885](266680 call chunkOrder r[266644] numChunks[266650] idx[266654] remPol[266659]))
    const tmp[266681] "dead at end of block" "const" "insert auto destroy" "temp"
    (548621 'init var' tmp[266681] call_tmp[734885])
    (266688 call _check_tuple_var_decl tmp[266681] 2)
    (489662 'end of statement')
    unknown call_tmp[734890] "maybe param" "maybe type" "temp"
    (734893 'move' call_tmp[734890](266682 call tmp[266681] 0))
    const startOrder[266669] "dead at end of block" "const" "insert auto destroy"
    (548623 'init var' startOrder[266669] call_tmp[734890])
    unknown call_tmp[734895] "maybe param" "maybe type" "temp"
    (734898 'move' call_tmp[734895](266685 call tmp[266681] 1))
    const endOrder[266671] "dead at end of block" "const" "insert auto destroy"
    (548625 'init var' endOrder[266671] call_tmp[734895])
    (266693 'end of statement')
    unknown call_tmp[734902] "maybe param" "maybe type" "temp"
    (734905 'move' call_tmp[734902](266701 call(266696 call (partial) orderToIndex _mt[243] r[266644]) startOrder[266669]))
    const start[266702] "dead at end of block" "const" "insert auto destroy"
    (548627 'init var' start[266702] call_tmp[734902])
    (266705 'end of statement')
    unknown call_tmp[734909] "maybe param" "maybe type" "temp"
    (734912 'move' call_tmp[734909](266712 call(266707 call (partial) orderToIndex _mt[243] r[266644]) endOrder[266671]))
    const end[266713] "dead at end of block" "const" "insert auto destroy"
    (548629 'init var' end[266713] call_tmp[734909])
    (266716 'end of statement' startOrder[266669] endOrder[266671])
    unknown tmp[579191] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[579192] "maybe param" "temp"
    unknown call_tmp[734914] "expr temp" "maybe param" "maybe type" "temp"
    (734917 'move' call_tmp[734914](466517 'query' r[266644] 3))
    (579197 'move' tmp[579192](579195 call _cond_test call_tmp[734914]))
    if tmp[579192]
    {
      unknown tmp[579199] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[734919] "expr temp" "maybe param" "maybe type" "temp"
      (734922 'move' call_tmp[734919](266720 call chpl_build_bounded_range start[266702] end[266713]))
      unknown call_tmp[734926] "expr temp" "maybe param" "maybe type" "temp"
      (734929 'move' call_tmp[734926](266723 call stride _mt[243] r[266644]))
      (579201 'move' tmp[579199](266726 call chpl_by call_tmp[734919] call_tmp[734926]))
      (579206 'move' tmp[579191](579203 '_paramFoldLogical' tmp[579192] tmp[579199]))
    }
    {
      unknown tmp[579208] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (579210 'move' tmp[579208](266730 call chpl_build_bounded_range start[266702] end[266713]))
      (579215 'move' tmp[579191](579212 '_paramFoldLogical' tmp[579192] tmp[579208]))
    }
    unknown call_tmp[734931] "expr temp" "maybe param" "maybe type" "temp"
    (734934 'move' call_tmp[734931](537349 'query' r[266644] 1))
    unknown call_tmp[734936] "expr temp" "maybe param" "maybe type" "temp"
    (734939 'move' call_tmp[734936](537353 'query' r[266644] 3))
    unknown call_tmp[734941] "expr temp" "maybe param" "maybe type" "temp"
    (734944 'move' call_tmp[734941](537348 call range[64319](?) call_tmp[734931] bounded[64208] call_tmp[734936]))
    (537357 'move' ret[537343](537356 'coerce' tmp[579191] call_tmp[734941]))
    gotoReturn _end_chunk[537341] _end_chunk[537341]
    (489665 'end of statement' start[266702] end[266713] start[266702] end[266713])
    label _end_chunk[537341]
    (537345 return ret[537343])
  }
  where {
    unknown call_tmp[734946] "expr temp" "maybe param" "maybe type" "temp"
    (734949 'move' call_tmp[734946](466504 'query' r[266644] 2))
    unknown call_tmp[734951] "expr temp" "maybe param" "maybe type" "temp"
    (734954 'move' call_tmp[734951](466508 call == bounded[64208] call_tmp[734946]))
    (466512 call & 1 call_tmp[734951])
  }
  { scopeless type
    unknown call_tmp[734956] "expr temp" "maybe param" "maybe type" "temp"
    (734959 'move' call_tmp[734956](466501 'query' r[266644] 1))
    unknown call_tmp[734961] "expr temp" "maybe param" "maybe type" "temp"
    (734964 'move' call_tmp[734961](466520 'query' r[266644] 3))
    (266668 call range[64319](?) call_tmp[734956] bounded[64208] call_tmp[734961])
  }
  function blockCyclicChunks[266757](arg r[266754]:range[64319](?), arg blockSize[266760]:integral[199](?), arg tid[266764]:integral[199](?), arg nTasks[266768]:integral[199](?)) : _unknown[51] "compiler added where" "iterator fn" "no return value for void"
  {
    unknown ret[537363] "RVV" "temp"
    unknown call_tmp[734966] "expr temp" "maybe param" "maybe type" "temp"
    (734969 'move' call_tmp[734966](266773 call >= tid[266764] nTasks[266768]))
    unknown call_tmp[734971] "expr temp" "maybe param" "maybe type" "temp"
    (734974 'move' call_tmp[734971](266815 call _cond_test call_tmp[734966]))
    if call_tmp[734971]
    {
      unknown call_tmp[734976] "expr temp" "maybe param" "maybe type" "temp"
      (734979 'move' call_tmp[734976](266810 call + "Parameter tid must be < nTasks " "because blocks are indexed from 0..nTasks-1"))
      (266813 call halt call_tmp[734976])
    }
    unknown call_tmp[734981] "expr temp" "maybe param" "maybe type" "temp"
    (734984 'move' call_tmp[734981](266823 call <= blockSize[266760] 0))
    unknown call_tmp[734986] "expr temp" "maybe param" "maybe type" "temp"
    (734989 'move' call_tmp[734986](266846 call _cond_test call_tmp[734981]))
    if call_tmp[734986]
    {
      (266844 call halt "blockSize must a positive number")
    }
    unknown call_tmp[734991] "expr temp" "maybe param" "maybe type" "temp"
    (734994 'move' call_tmp[734991](266853 call <= nTasks[266768] 0))
    unknown call_tmp[734996] "expr temp" "maybe param" "maybe type" "temp"
    (734999 'move' call_tmp[734996](266876 call _cond_test call_tmp[734991]))
    if call_tmp[734996]
    {
      (266874 call halt "nTasks must be a positive number")
    }
    unknown call_tmp[735003] "maybe param" "maybe type" "temp"
    (735006 'move' call_tmp[735003](266882 call stride _mt[243] r[266754]))
    unknown rangeStride[266885] "dead at end of block" "insert auto destroy"
    (548631 'init var' rangeStride[266885] call_tmp[735003])
    (266888 'end of statement')
    unknown call_tmp[735008] "maybe param" "maybe type" "temp"
    (735011 'move' call_tmp[735008](266891 call * blockSize[266760] rangeStride[266885]))
    unknown blockStride[266893] "dead at end of block" "insert auto destroy"
    (548633 'init var' blockStride[266893] call_tmp[735008])
    (266896 'end of statement')
    unknown call_tmp[735015] "maybe param" "maybe type" "temp"
    (735018 'move' call_tmp[735015](266898 call low _mt[243] r[266754]))
    unknown low[266901] "dead at end of block" "insert auto destroy"
    (548635 'init var' low[266901] call_tmp[735015])
    (266904 'end of statement')
    unknown call_tmp[735022] "maybe param" "maybe type" "temp"
    (735025 'move' call_tmp[735022](266906 call high _mt[243] r[266754]))
    unknown high[266909] "dead at end of block" "insert auto destroy"
    (548637 'init var' high[266909] call_tmp[735022])
    (266912 'end of statement')
    unknown firstBlockStart[266934] "dead at end of block" "insert auto destroy"
    unknown tmp[579222] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[579223] "maybe param" "temp"
    unknown call_tmp[735027] "expr temp" "maybe param" "maybe type" "temp"
    (735030 'move' call_tmp[735027](266915 call > rangeStride[266885] 0))
    (579228 'move' tmp[579223](579226 call _cond_test call_tmp[735027]))
    if tmp[579223]
    {
      unknown tmp[579230] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (579232 'move' tmp[579230](266918 call low _mt[243] r[266754]))
      (579237 'move' tmp[579222](579234 '_paramFoldLogical' tmp[579223] tmp[579230]))
    }
    {
      unknown tmp[579239] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (579241 'move' tmp[579239](266922 call high _mt[243] r[266754]))
      (579246 'move' tmp[579222](579243 '_paramFoldLogical' tmp[579223] tmp[579239]))
    }
    unknown call_tmp[735036] "expr temp" "maybe param" "maybe type" "temp"
    (735039 'move' call_tmp[735036](266930 call * blockStride[266893] tid[266764]))
    unknown call_tmp[735041] "maybe param" "maybe type" "temp"
    (735044 'move' call_tmp[735041](266932 call + tmp[579222] call_tmp[735036]))
    (548639 'init var' firstBlockStart[266934] call_tmp[735041])
    (266937 'end of statement')
    unknown tmp[434041] "maybe param" "temp"
    unknown call_tmp[735048] "expr temp" "maybe param" "maybe type" "temp"
    (735051 'move' call_tmp[735048](266940 call high _mt[243] r[266754]))
    (434052 'move' tmp[434041](266943 call > firstBlockStart[266934] call_tmp[735048]))
    unknown call_tmp[735053] "expr temp" "maybe param" "maybe type" "temp"
    (735056 'move' call_tmp[735053](434054 call _cond_invalid tmp[434041]))
    if call_tmp[735053]
    {
      (434057 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[579253] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[579254] "maybe param" "temp"
    unknown call_tmp[735058] "expr temp" "maybe param" "maybe type" "temp"
    (735061 'move' call_tmp[735058](434042 call isTrue tmp[434041]))
    (579259 'move' tmp[579254](579257 call _cond_test call_tmp[735058]))
    if tmp[579254]
    {
      (579264 'move' tmp[579253](579261 '_paramFoldLogical' tmp[579254] 1))
    }
    {
      unknown tmp[579266] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735065] "expr temp" "maybe param" "maybe type" "temp"
      (735068 'move' call_tmp[735065](266947 call low _mt[243] r[266754]))
      unknown call_tmp[735070] "expr temp" "maybe param" "maybe type" "temp"
      (735073 'move' call_tmp[735070](266950 call < firstBlockStart[266934] call_tmp[735065]))
      (579268 'move' tmp[579266](434046 call isTrue call_tmp[735070]))
      (579273 'move' tmp[579253](579270 '_paramFoldLogical' tmp[579254] tmp[579266]))
    }
    unknown call_tmp[735075] "expr temp" "maybe param" "maybe type" "temp"
    (735078 'move' call_tmp[735075](266956 call _cond_test tmp[579253]))
    if call_tmp[735075]
    {
      gotoReturn _end_blockCyclicChunks[537361] _end_blockCyclicChunks[537361]
    }
    unknown call_tmp[735080] "maybe param" "maybe type" "temp"
    (735083 'move' call_tmp[735080](266963 call * blockStride[266893] nTasks[266768]))
    unknown strideToNextBlock[266965] "dead at end of block" "insert auto destroy"
    (548641 'init var' strideToNextBlock[266965] call_tmp[735080])
    (266968 'end of statement' rangeStride[266885] rangeStride[266885] blockStride[266893] blockStride[266893])
    unknown call_tmp[735085] "expr temp" "maybe param" "maybe type" "temp"
    (735088 'move' call_tmp[735085](266971 call > rangeStride[266885] 0))
    unknown call_tmp[735090] "expr temp" "maybe param" "maybe type" "temp"
    (735093 'move' call_tmp[735090](267125 call _cond_test call_tmp[735085]))
    if call_tmp[735090]
    {
      {
        unknown _indexOfInterest[267006] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[267007] "expr temp" "temp"
        unknown call_tmp[735095] "expr temp" "maybe param" "maybe type" "temp"
        (735098 'move' call_tmp[735095](267025 call chpl_direct_range_iter firstBlockStart[266934] high[266909] strideToNextBlock[266965]))
        (267016 'move' _iterator[267007](267014 call _getIterator call_tmp[735095]))
        Defer
        {
          {
            (267041 call _freeIterator _iterator[267007])
          }
        }
        { scopeless type
          (267030 'move' _indexOfInterest[267006](267027 call iteratorIndex _iterator[267007]))
        }
        ForLoop[267008]
        {
          unknown blockStart[267034] "index var" "insert auto destroy"
          (489680 'end of statement')
          (267036 'move' blockStart[267034] _indexOfInterest[267006])
          (489681 'end of statement' blockStart[267034])
          {
            unknown call_tmp[735100] "expr temp" "maybe param" "maybe type" "temp"
            (735103 'move' call_tmp[735100](266986 call + blockStart[267034] blockStride[266893]))
            unknown call_tmp[735105] "expr temp" "maybe param" "maybe type" "temp"
            (735108 'move' call_tmp[735105](266989 call - call_tmp[735100] 1))
            unknown call_tmp[735110] "maybe param" "maybe type" "temp"
            (735113 'move' call_tmp[735110](266991 call min high[266909] call_tmp[735105]))
            unknown blockEnd[266992] "dead at end of block" "insert auto destroy"
            (548643 'init var' blockEnd[266992] call_tmp[735110])
            (266995 'end of statement' high[266909] blockStart[267034] blockStride[266893])
            unknown yret[537369] "YVV" "temp"
            unknown call_tmp[735115] "expr temp" "maybe param" "maybe type" "temp"
            (735118 'move' call_tmp[735115](266999 call chpl_build_bounded_range blockStart[267034] blockEnd[266992]))
            unknown call_tmp[735120] "expr temp" "maybe param" "maybe type" "temp"
            (735123 'move' call_tmp[735120](267002 call chpl_by call_tmp[735115] rangeStride[266885]))
            (537372 'move' yret[537369](537371 'deref' call_tmp[735120]))
            (537374 yield yret[537369])
            (489686 'end of statement' blockStart[267034] blockEnd[266992] rangeStride[266885])
          }
          label _continueLabel[267011]
          _indexOfInterest[267006]
          _iterator[267007]
        }
        label _breakLabel[267012]
      }
    }
    {
      {
        unknown _indexOfInterest[267082] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[267083] "expr temp" "temp"
        unknown call_tmp[735125] "expr temp" "maybe param" "maybe type" "temp"
        (735128 'move' call_tmp[735125](267101 call chpl_direct_range_iter low[266901] firstBlockStart[266934] strideToNextBlock[266965]))
        (267092 'move' _iterator[267083](267090 call _getIterator call_tmp[735125]))
        Defer
        {
          {
            (267117 call _freeIterator _iterator[267083])
          }
        }
        { scopeless type
          (267106 'move' _indexOfInterest[267082](267103 call iteratorIndex _iterator[267083]))
        }
        ForLoop[267084]
        {
          unknown blockEnd[267110] "index var" "insert auto destroy"
          (489691 'end of statement')
          (267112 'move' blockEnd[267110] _indexOfInterest[267082])
          (489692 'end of statement' blockEnd[267110])
          {
            unknown call_tmp[735130] "expr temp" "maybe param" "maybe type" "temp"
            (735133 'move' call_tmp[735130](267062 call + blockEnd[267110] blockStride[266893]))
            unknown call_tmp[735135] "expr temp" "maybe param" "maybe type" "temp"
            (735138 'move' call_tmp[735135](267065 call + call_tmp[735130] 1))
            unknown call_tmp[735140] "maybe param" "maybe type" "temp"
            (735143 'move' call_tmp[735140](267067 call max low[266901] call_tmp[735135]))
            unknown blockStart[267068] "dead at end of block" "insert auto destroy"
            (548645 'init var' blockStart[267068] call_tmp[735140])
            (267071 'end of statement' low[266901] blockEnd[267110] blockStride[266893])
            unknown yret[537376] "YVV" "temp"
            unknown call_tmp[735145] "expr temp" "maybe param" "maybe type" "temp"
            (735148 'move' call_tmp[735145](267075 call chpl_build_bounded_range blockStart[267068] blockEnd[267110]))
            unknown call_tmp[735150] "expr temp" "maybe param" "maybe type" "temp"
            (735153 'move' call_tmp[735150](267078 call chpl_by call_tmp[735145] rangeStride[266885]))
            (537379 'move' yret[537376](537378 'deref' call_tmp[735150]))
            (537381 yield yret[537376])
            (489697 'end of statement' blockStart[267068] blockEnd[267110] rangeStride[266885])
          }
          label _continueLabel[267087]
          _indexOfInterest[267082]
          _iterator[267083]
        }
        label _breakLabel[267088]
      }
    }
    label _end_blockCyclicChunks[537361]
    (537365 return ret[537363])
  }
  where {
    unknown call_tmp[735155] "expr temp" "maybe param" "maybe type" "temp"
    (735158 'move' call_tmp[735155](466529 'query' r[266754] c"boundedType"))
    unknown call_tmp[735160] "expr temp" "maybe param" "maybe type" "temp"
    (735163 'move' call_tmp[735160](466532 call == bounded[64208] call_tmp[735155]))
    (466536 call & 1 call_tmp[735160])
  }
  function chunksOrder[267143](arg r[267140]:range[64319](?), arg numChunks[267146]:integral[199](?), arg remPol[267151]:RemElems[266487] =
  Thru[266481]) : _unknown[51] "compiler added where" "iterator fn" "no return value for void"
  {
    unknown ret[537385] "RVV" "temp"
    unknown tmp[434062] "maybe param" "temp"
    unknown call_tmp[735167] "expr temp" "maybe param" "maybe type" "temp"
    (735170 'move' call_tmp[735167](267160 call size _mt[243] r[267140]))
    (434073 'move' tmp[434062](267164 call == call_tmp[735167] 0))
    unknown call_tmp[735172] "expr temp" "maybe param" "maybe type" "temp"
    (735175 'move' call_tmp[735172](434075 call _cond_invalid tmp[434062]))
    if call_tmp[735172]
    {
      (434078 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[579280] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[579281] "maybe param" "temp"
    unknown call_tmp[735177] "expr temp" "maybe param" "maybe type" "temp"
    (735180 'move' call_tmp[735177](434063 call isTrue tmp[434062]))
    (579286 'move' tmp[579281](579284 call _cond_test call_tmp[735177]))
    if tmp[579281]
    {
      (579291 'move' tmp[579280](579288 '_paramFoldLogical' tmp[579281] 1))
    }
    {
      unknown tmp[579293] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735182] "expr temp" "maybe param" "maybe type" "temp"
      (735185 'move' call_tmp[735182](267168 call <= numChunks[267146] 0))
      (579295 'move' tmp[579293](434067 call isTrue call_tmp[735182]))
      (579300 'move' tmp[579280](579297 '_paramFoldLogical' tmp[579281] tmp[579293]))
    }
    unknown call_tmp[735187] "expr temp" "maybe param" "maybe type" "temp"
    (735190 'move' call_tmp[735187](267174 call _cond_test tmp[579280]))
    if call_tmp[735187]
    {
      gotoReturn _end_chunksOrder[537383] _end_chunksOrder[537383]
    }
    unknown call_tmp[735194] "maybe param" "maybe type" "temp"
    (735197 'move' call_tmp[735194](267181 call size _mt[243] r[267140]))
    const nElems[267184] "dead at end of block" "const" "insert auto destroy"
    (548647 'init var' nElems[267184] call_tmp[735194])
    (267187 'end of statement')
    unknown call_tmp[735199] "expr temp" "maybe param" "maybe type" "temp"
    (735202 'move' call_tmp[735199](466553 'query' r[267140] 1))
    unknown call_tmp[735204] "expr temp" "maybe param" "maybe type" "temp"
    (735207 'move' call_tmp[735204](267192 call min numChunks[267146] nElems[267184]))
    unknown call_tmp[735209] "maybe param" "maybe type" "temp"
    (735212 'move' call_tmp[735209](267194 call _cast call_tmp[735199] call_tmp[735204]))
    unknown nChunks[267196] "dead at end of block" "insert auto destroy"
    (548649 'init var' nChunks[267196] call_tmp[735209])
    (267199 'end of statement')
    unknown chunkSize[267200] "dead at end of block" "insert auto destroy"
    unknown call_tmp[735214] "expr temp" "maybe param" "maybe type" "temp"
    (735217 'move' call_tmp[735214](466556 'query' r[267140] 1))
    (548651 'default init var' chunkSize[267200] call_tmp[735214])
    unknown rem[267204] "dead at end of block" "insert auto destroy"
    unknown call_tmp[735219] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735222 'move' call_tmp[735219](267208 'typeof' chunkSize[267200]))
    (548653 'default init var' rem[267204] call_tmp[735219])
    (267209 'end of statement' nElems[267184] chunkSize[267200])
    {
      unknown tmp[267276] "expr temp" "maybe param" "maybe type" "temp"
      (267278 'move' tmp[267276] remPol[267151])
      unknown call_tmp[735224] "expr temp" "maybe param" "maybe type" "temp"
      (735227 'move' call_tmp[735224](267280 call == tmp[267276] Pack[266483]))
      unknown call_tmp[735229] "expr temp" "maybe param" "maybe type" "temp"
      (735232 'move' call_tmp[735229](267283 call _cond_test call_tmp[735224]))
      if call_tmp[735229]
      {
        unknown call_tmp[735234] "expr temp" "maybe param" "maybe type" "temp"
        (735237 'move' call_tmp[735234](267217 call / nElems[267184] nChunks[267196]))
        (267219 call = chunkSize[267200] call_tmp[735234])
        (489705 'end of statement' chunkSize[267200] nElems[267184] nChunks[267196])
        unknown call_tmp[735239] "expr temp" "maybe param" "maybe type" "temp"
        (735242 'move' call_tmp[735239](267225 call * chunkSize[267200] nChunks[267196]))
        unknown call_tmp[735244] "expr temp" "maybe param" "maybe type" "temp"
        (735247 'move' call_tmp[735244](267228 call != call_tmp[735239] nElems[267184]))
        unknown call_tmp[735249] "expr temp" "maybe param" "maybe type" "temp"
        (735252 'move' call_tmp[735249](267245 call _cond_test call_tmp[735244]))
        if call_tmp[735249]
        {
          (267232 call += chunkSize[267200] 1)
          (489709 'end of statement' chunkSize[267200])
          unknown call_tmp[735254] "expr temp" "maybe param" "maybe type" "temp"
          (735257 'move' call_tmp[735254](267241 call divceil nElems[267184] chunkSize[267200]))
          (267242 call = nChunks[267196] call_tmp[735254])
          (489711 'end of statement' nChunks[267196] nElems[267184] chunkSize[267200])
        }
      }
      {
        unknown call_tmp[735259] "expr temp" "maybe param" "maybe type" "temp"
        (735262 'move' call_tmp[735259](267286 call == tmp[267276] Mod[266485]))
        unknown call_tmp[735264] "expr temp" "maybe param" "maybe type" "temp"
        (735267 'move' call_tmp[735264](267289 call _cond_test call_tmp[735259]))
        if call_tmp[735264]
        {
          unknown call_tmp[735269] "expr temp" "maybe param" "maybe type" "temp"
          (735272 'move' call_tmp[735269](267256 call / nElems[267184] nChunks[267196]))
          (267258 call = chunkSize[267200] call_tmp[735269])
          (489715 'end of statement' chunkSize[267200] nElems[267184] nChunks[267196])
          unknown call_tmp[735274] "expr temp" "maybe param" "maybe type" "temp"
          (735277 'move' call_tmp[735274](267266 call * chunkSize[267200] nChunks[267196]))
          unknown call_tmp[735279] "expr temp" "maybe param" "maybe type" "temp"
          (735282 'move' call_tmp[735279](267268 call - nElems[267184] call_tmp[735274]))
          (267270 call = rem[267204] call_tmp[735279])
          (489719 'end of statement' rem[267204] nElems[267184] chunkSize[267200] nChunks[267196])
        }
      }
    }
    {
      unknown _indexOfInterest[267412] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[267413] "expr temp" "temp"
      unknown call_tmp[735284] "expr temp" "maybe param" "maybe type" "temp"
      (735287 'move' call_tmp[735284](267429 call chpl_direct_counted_range_iter 0 nChunks[267196]))
      (267422 'move' _iterator[267413](267420 call _getIterator call_tmp[735284]))
      Defer
      {
        {
          (267445 call _freeIterator _iterator[267413])
        }
      }
      { scopeless type
        (267434 'move' _indexOfInterest[267412](267431 call iteratorIndex _iterator[267413]))
      }
      ForLoop[267414]
      {
        unknown i[267438] "index var" "insert auto destroy"
        (489725 'end of statement')
        (267440 'move' i[267438] _indexOfInterest[267412])
        (489726 'end of statement' i[267438])
        {
          unknown chunk[267305] "dead at end of block" "insert auto destroy"
          unknown call_tmp[735289] "expr temp" "maybe param" "maybe type" "temp"
          (735292 'move' call_tmp[735289](466559 'query' r[267140] 1))
          unknown call_tmp[735294] "expr temp" "maybe param" "maybe type" "temp"
          (735297 'move' call_tmp[735294](267303 call * 2 call_tmp[735289]))
          (548655 'default init var' chunk[267305] call_tmp[735294])
          (267308 'end of statement')
          {
            unknown tmp[267384] "expr temp" "maybe param" "maybe type" "temp"
            (267386 'move' tmp[267384] remPol[267151])
            unknown call_tmp[735299] "expr temp" "maybe param" "maybe type" "temp"
            (735302 'move' call_tmp[735299](267388 call == tmp[267384] Thru[266481]))
            unknown call_tmp[735304] "expr temp" "maybe param" "maybe type" "temp"
            (735307 'move' call_tmp[735304](267391 call _cond_test call_tmp[735299]))
            if call_tmp[735304]
            {
              unknown call_tmp[735309] "expr temp" "maybe param" "maybe type" "temp"
              (735312 'move' call_tmp[735309](267320 call chunkOrderThru nElems[267184] nChunks[267196] i[267438]))
              (267321 call = chunk[267305] call_tmp[735309])
              (489728 'end of statement' chunk[267305] nElems[267184] nChunks[267196] i[267438])
            }
            {
              unknown call_tmp[735314] "expr temp" "maybe param" "maybe type" "temp"
              (735317 'move' call_tmp[735314](267394 call == tmp[267384] Pack[266483]))
              unknown call_tmp[735319] "expr temp" "maybe param" "maybe type" "temp"
              (735322 'move' call_tmp[735319](267397 call _cond_test call_tmp[735314]))
              if call_tmp[735319]
              {
                unknown call_tmp[735324] "expr temp" "maybe param" "maybe type" "temp"
                (735327 'move' call_tmp[735324](267335 call chunkOrderPack chunkSize[267200] nElems[267184] i[267438]))
                (267336 call = chunk[267305] call_tmp[735324])
                (489733 'end of statement' chunk[267305] chunkSize[267200] nElems[267184] i[267438])
              }
              {
                unknown call_tmp[735329] "expr temp" "maybe param" "maybe type" "temp"
                (735332 'move' call_tmp[735329](267401 call == tmp[267384] Mod[266485]))
                unknown call_tmp[735334] "expr temp" "maybe param" "maybe type" "temp"
                (735337 'move' call_tmp[735334](267404 call _cond_test call_tmp[735329]))
                if call_tmp[735334]
                {
                  unknown call_tmp[735339] "expr temp" "maybe param" "maybe type" "temp"
                  (735342 'move' call_tmp[735339](267352 call chunkOrderMod chunkSize[267200] rem[267204] nElems[267184] nChunks[267196] i[267438]))
                  (267353 call = chunk[267305] call_tmp[735339])
                  (489738 'end of statement' chunk[267305] chunkSize[267200] rem[267204] nElems[267184] nChunks[267196] i[267438])
                }
                {
                  (267378 call halt "RangeChunk: unknown RemElems in chunksOrder")
                }
              }
            }
          }
          unknown yret[537391] "YVV" "temp"
          unknown call_tmp[735344] "expr temp" "maybe param" "maybe type" "temp"
          (735347 'move' call_tmp[735344](537396 'query' r[267140] 1))
          unknown call_tmp[735349] "expr temp" "maybe param" "maybe type" "temp"
          (735352 'move' call_tmp[735349](537394 call * 2 call_tmp[735344]))
          (537400 'move' yret[537391](537399 'coerce' chunk[267305] call_tmp[735349]))
          (537402 yield yret[537391])
          (489746 'end of statement' chunk[267305])
        }
        label _continueLabel[267417]
        _indexOfInterest[267412]
        _iterator[267413]
      }
      label _breakLabel[267418]
    }
    label _end_chunksOrder[537383]
    (537387 return ret[537385])
  }
  where {
    unknown call_tmp[735354] "expr temp" "maybe param" "maybe type" "temp"
    (735357 'move' call_tmp[735354](466565 'query' r[267140] 2))
    unknown call_tmp[735359] "expr temp" "maybe param" "maybe type" "temp"
    (735362 'move' call_tmp[735359](466569 call == bounded[64208] call_tmp[735354]))
    (466573 call & 1 call_tmp[735359])
  }
  { scopeless type
    unknown call_tmp[735364] "expr temp" "maybe param" "maybe type" "temp"
    (735367 'move' call_tmp[735364](466562 'query' r[267140] 1))
    (267157 call * 2 call_tmp[735364])
  }
  function chunkOrder[267467](arg r[267464]:range[64319](?), arg numChunks[267470]:integral[199](?), arg idx[267474]:integral[199](?), arg remPol[267479]:RemElems[266487] =
  Thru[266481]) : _unknown[51] "compiler added where"
  {
    unknown ret[537406] "RVV" "temp"
    unknown tmp[434083] "maybe param" "temp"
    unknown tmp[434104] "maybe param" "temp"
    unknown tmp[434125] "maybe param" "temp"
    unknown call_tmp[735371] "expr temp" "maybe param" "maybe type" "temp"
    (735374 'move' call_tmp[735371](267488 call size _mt[243] r[267464]))
    (434136 'move' tmp[434125](267492 call == call_tmp[735371] 0))
    unknown call_tmp[735376] "expr temp" "maybe param" "maybe type" "temp"
    (735379 'move' call_tmp[735376](434138 call _cond_invalid tmp[434125]))
    if call_tmp[735376]
    {
      (434141 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[579307] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[579308] "maybe param" "temp"
    unknown call_tmp[735381] "expr temp" "maybe param" "maybe type" "temp"
    (735384 'move' call_tmp[735381](434126 call isTrue tmp[434125]))
    (579313 'move' tmp[579308](579311 call _cond_test call_tmp[735381]))
    if tmp[579308]
    {
      (579318 'move' tmp[579307](579315 '_paramFoldLogical' tmp[579308] 1))
    }
    {
      unknown tmp[579320] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735386] "expr temp" "maybe param" "maybe type" "temp"
      (735389 'move' call_tmp[735386](267496 call <= numChunks[267470] 0))
      (579322 'move' tmp[579320](434130 call isTrue call_tmp[735386]))
      (579327 'move' tmp[579307](579324 '_paramFoldLogical' tmp[579308] tmp[579320]))
    }
    (434115 'move' tmp[434104] tmp[579307])
    unknown call_tmp[735391] "expr temp" "maybe param" "maybe type" "temp"
    (735394 'move' call_tmp[735391](434117 call _cond_invalid tmp[434104]))
    if call_tmp[735391]
    {
      (434120 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[579334] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[579335] "maybe param" "temp"
    unknown call_tmp[735396] "expr temp" "maybe param" "maybe type" "temp"
    (735399 'move' call_tmp[735396](434105 call isTrue tmp[434104]))
    (579340 'move' tmp[579335](579338 call _cond_test call_tmp[735396]))
    if tmp[579335]
    {
      (579345 'move' tmp[579334](579342 '_paramFoldLogical' tmp[579335] 1))
    }
    {
      unknown tmp[579347] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735401] "expr temp" "maybe param" "maybe type" "temp"
      (735404 'move' call_tmp[735401](267502 call < idx[267474] 0))
      (579349 'move' tmp[579347](434109 call isTrue call_tmp[735401]))
      (579354 'move' tmp[579334](579351 '_paramFoldLogical' tmp[579335] tmp[579347]))
    }
    (434094 'move' tmp[434083] tmp[579334])
    unknown call_tmp[735406] "expr temp" "maybe param" "maybe type" "temp"
    (735409 'move' call_tmp[735406](434096 call _cond_invalid tmp[434083]))
    if call_tmp[735406]
    {
      (434099 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[579361] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[579362] "maybe param" "temp"
    unknown call_tmp[735411] "expr temp" "maybe param" "maybe type" "temp"
    (735414 'move' call_tmp[735411](434084 call isTrue tmp[434083]))
    (579367 'move' tmp[579362](579365 call _cond_test call_tmp[735411]))
    if tmp[579362]
    {
      (579372 'move' tmp[579361](579369 '_paramFoldLogical' tmp[579362] 1))
    }
    {
      unknown tmp[579374] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735416] "expr temp" "maybe param" "maybe type" "temp"
      (735419 'move' call_tmp[735416](267508 call >= idx[267474] numChunks[267470]))
      (579376 'move' tmp[579374](434088 call isTrue call_tmp[735416]))
      (579381 'move' tmp[579361](579378 '_paramFoldLogical' tmp[579362] tmp[579374]))
    }
    unknown call_tmp[735421] "expr temp" "maybe param" "maybe type" "temp"
    (735424 'move' call_tmp[735421](267525 call _cond_test tmp[579361]))
    if call_tmp[735421]
    {
      unknown call_tmp[735426] "expr temp" "maybe param" "maybe type" "temp"
      (735429 'move' call_tmp[735426](466585 'query' r[267464] 1))
      unknown call_tmp[735431] "expr temp" "maybe param" "maybe type" "temp"
      (735434 'move' call_tmp[735431](267514 call _cast call_tmp[735426] 1))
      unknown call_tmp[735436] "expr temp" "maybe param" "maybe type" "temp"
      (735439 'move' call_tmp[735436](466588 'query' r[267464] 1))
      unknown call_tmp[735441] "expr temp" "maybe param" "maybe type" "temp"
      (735444 'move' call_tmp[735441](267518 call _cast call_tmp[735436] 0))
      unknown call_tmp[735446] "expr temp" "maybe param" "maybe type" "temp"
      (735449 'move' call_tmp[735446](267521 call _build_tuple call_tmp[735431] call_tmp[735441]))
      unknown call_tmp[735451] "expr temp" "maybe param" "maybe type" "temp"
      (735454 'move' call_tmp[735451](537413 'query' r[267464] 1))
      unknown call_tmp[735456] "expr temp" "maybe param" "maybe type" "temp"
      (735459 'move' call_tmp[735456](537411 call * 2 call_tmp[735451]))
      (537417 'move' ret[537406](537416 'coerce' call_tmp[735446] call_tmp[735456]))
      gotoReturn _end_chunkOrder[537404] _end_chunkOrder[537404]
    }
    unknown call_tmp[735463] "maybe param" "maybe type" "temp"
    (735466 'move' call_tmp[735463](267532 call size _mt[243] r[267464]))
    const nElems[267535] "dead at end of block" "const" "insert auto destroy"
    (548657 'init var' nElems[267535] call_tmp[735463])
    (267538 'end of statement')
    unknown call_tmp[735468] "expr temp" "maybe param" "maybe type" "temp"
    (735471 'move' call_tmp[735468](466591 'query' r[267464] 1))
    unknown call_tmp[735473] "expr temp" "maybe param" "maybe type" "temp"
    (735476 'move' call_tmp[735473](267543 call min numChunks[267470] nElems[267535]))
    unknown call_tmp[735478] "maybe param" "maybe type" "temp"
    (735481 'move' call_tmp[735478](267545 call _cast call_tmp[735468] call_tmp[735473]))
    const nChunks[267547] "dead at end of block" "const" "insert auto destroy"
    (548659 'init var' nChunks[267547] call_tmp[735478])
    (267550 'end of statement')
    unknown call_tmp[735483] "expr temp" "maybe param" "maybe type" "temp"
    (735486 'move' call_tmp[735483](466594 'query' r[267464] 1))
    unknown call_tmp[735488] "maybe param" "maybe type" "temp"
    (735491 'move' call_tmp[735488](267553 call _cast call_tmp[735483] idx[267474]))
    const i[267555] "dead at end of block" "const" "insert auto destroy"
    (548661 'init var' i[267555] call_tmp[735488])
    (267558 'end of statement' nElems[267535])
    {
      unknown tmp[267671] "expr temp" "maybe param" "maybe type" "temp"
      (267673 'move' tmp[267671] remPol[267479])
      unknown call_tmp[735493] "expr temp" "maybe param" "maybe type" "temp"
      (735496 'move' call_tmp[735493](267675 call == tmp[267671] Thru[266481]))
      unknown call_tmp[735498] "expr temp" "maybe param" "maybe type" "temp"
      (735501 'move' call_tmp[735498](267678 call _cond_test call_tmp[735493]))
      if call_tmp[735498]
      {
        unknown call_tmp[735503] "expr temp" "maybe param" "maybe type" "temp"
        (735506 'move' call_tmp[735503](267568 call chunkOrderThru nElems[267535] nChunks[267547] i[267555]))
        unknown call_tmp[735508] "expr temp" "maybe param" "maybe type" "temp"
        (735511 'move' call_tmp[735508](537424 'query' r[267464] 1))
        unknown call_tmp[735513] "expr temp" "maybe param" "maybe type" "temp"
        (735516 'move' call_tmp[735513](537422 call * 2 call_tmp[735508]))
        (537428 'move' ret[537406](537427 'coerce' call_tmp[735503] call_tmp[735513]))
        gotoReturn _end_chunkOrder[537404] _end_chunkOrder[537404]
        (489753 'end of statement' nElems[267535] nChunks[267547] i[267555])
      }
      {
        unknown call_tmp[735518] "expr temp" "maybe param" "maybe type" "temp"
        (735521 'move' call_tmp[735518](267681 call == tmp[267671] Pack[266483]))
        unknown call_tmp[735523] "expr temp" "maybe param" "maybe type" "temp"
        (735526 'move' call_tmp[735523](267684 call _cond_test call_tmp[735518]))
        if call_tmp[735523]
        {
          unknown call_tmp[735528] "maybe param" "maybe type" "temp"
          (735531 'move' call_tmp[735528](267578 call / nElems[267535] nChunks[267547]))
          unknown chunkSize[267580] "dead at end of block" "insert auto destroy"
          (548663 'init var' chunkSize[267580] call_tmp[735528])
          (267583 'end of statement' nElems[267535] nChunks[267547])
          unknown call_tmp[735533] "expr temp" "maybe param" "maybe type" "temp"
          (735536 'move' call_tmp[735533](267587 call * chunkSize[267580] nChunks[267547]))
          unknown call_tmp[735538] "expr temp" "maybe param" "maybe type" "temp"
          (735541 'move' call_tmp[735538](267590 call != call_tmp[735533] nElems[267535]))
          unknown call_tmp[735543] "expr temp" "maybe param" "maybe type" "temp"
          (735546 'move' call_tmp[735543](267597 call _cond_test call_tmp[735538]))
          if call_tmp[735543]
          {
            (267594 call += chunkSize[267580] 1)
            (489759 'end of statement' chunkSize[267580])
          }
          unknown call_tmp[735548] "expr temp" "maybe param" "maybe type" "temp"
          (735551 'move' call_tmp[735548](267607 call chunkOrderPack chunkSize[267580] nElems[267535] i[267555]))
          unknown call_tmp[735553] "expr temp" "maybe param" "maybe type" "temp"
          (735556 'move' call_tmp[735553](537435 'query' r[267464] 1))
          unknown call_tmp[735558] "expr temp" "maybe param" "maybe type" "temp"
          (735561 'move' call_tmp[735558](537433 call * 2 call_tmp[735553]))
          (537439 'move' ret[537406](537438 'coerce' call_tmp[735548] call_tmp[735558]))
          gotoReturn _end_chunkOrder[537404] _end_chunkOrder[537404]
          (489761 'end of statement' chunkSize[267580] nElems[267535] i[267555])
        }
        {
          unknown call_tmp[735563] "expr temp" "maybe param" "maybe type" "temp"
          (735566 'move' call_tmp[735563](267688 call == tmp[267671] Mod[266485]))
          unknown call_tmp[735568] "expr temp" "maybe param" "maybe type" "temp"
          (735571 'move' call_tmp[735568](267691 call _cond_test call_tmp[735563]))
          if call_tmp[735568]
          {
            unknown call_tmp[735573] "maybe param" "maybe type" "temp"
            (735576 'move' call_tmp[735573](267616 call / nElems[267535] nChunks[267547]))
            const chunkSize[267618] "dead at end of block" "const" "insert auto destroy"
            (548665 'init var' chunkSize[267618] call_tmp[735573])
            (267621 'end of statement')
            unknown call_tmp[735578] "expr temp" "maybe param" "maybe type" "temp"
            (735581 'move' call_tmp[735578](267626 call * chunkSize[267618] nChunks[267547]))
            unknown call_tmp[735583] "maybe param" "maybe type" "temp"
            (735586 'move' call_tmp[735583](267628 call - nElems[267535] call_tmp[735578]))
            const rem[267630] "dead at end of block" "const" "insert auto destroy"
            (548667 'init var' rem[267630] call_tmp[735583])
            (267633 'end of statement' nElems[267535] nChunks[267547] nElems[267535] chunkSize[267618] nChunks[267547])
            unknown call_tmp[735588] "expr temp" "maybe param" "maybe type" "temp"
            (735591 'move' call_tmp[735588](267641 call chunkOrderMod chunkSize[267618] rem[267630] nElems[267535] nChunks[267547] i[267555]))
            unknown call_tmp[735593] "expr temp" "maybe param" "maybe type" "temp"
            (735596 'move' call_tmp[735593](537446 'query' r[267464] 1))
            unknown call_tmp[735598] "expr temp" "maybe param" "maybe type" "temp"
            (735601 'move' call_tmp[735598](537444 call * 2 call_tmp[735593]))
            (537450 'move' ret[537406](537449 'coerce' call_tmp[735588] call_tmp[735598]))
            gotoReturn _end_chunkOrder[537404] _end_chunkOrder[537404]
            (489770 'end of statement' chunkSize[267618] rem[267630] nElems[267535] nChunks[267547] i[267555])
          }
          {
            (267665 call halt "RangeChunk: unknown RemElems in chunkOrder")
          }
        }
      }
    }
    label _end_chunkOrder[537404]
    (537408 return ret[537406])
  }
  where {
    unknown call_tmp[735603] "expr temp" "maybe param" "maybe type" "temp"
    (735606 'move' call_tmp[735603](466600 'query' r[267464] 2))
    unknown call_tmp[735608] "expr temp" "maybe param" "maybe type" "temp"
    (735611 'move' call_tmp[735608](466604 call == bounded[64208] call_tmp[735603]))
    (466608 call & 1 call_tmp[735608])
  }
  { scopeless type
    unknown call_tmp[735613] "expr temp" "maybe param" "maybe type" "temp"
    (735616 'move' call_tmp[735613](466597 'query' r[267464] 1))
    (267485 call * 2 call_tmp[735613])
  }
  function chunkOrderThru[267706](arg nElems[267703]:_any[178](?), arg nChunks[267709] :
  (466614 'typeof' nElems[267703]), arg i[267713] :
  (466616 'typeof' nElems[267703])) : _unknown[51] "no doc" "private"
  {
    unknown ret[537456] "RVV" "temp"
    unknown call_tmp[735618] "maybe param" "maybe type" "temp"
    (735621 'move' call_tmp[735618](267723 call * nElems[267703] i[267713]))
    const m[267725] "dead at end of block" "const" "insert auto destroy"
    (548669 'init var' m[267725] call_tmp[735618])
    (267728 'end of statement')
    const start[267746] "dead at end of block" "const" "insert auto destroy"
    unknown tmp[579388] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[579389] "maybe param" "temp"
    unknown call_tmp[735623] "expr temp" "maybe param" "maybe type" "temp"
    (735626 'move' call_tmp[735623](267732 call == i[267713] 0))
    (579394 'move' tmp[579389](579392 call _cond_test call_tmp[735623]))
    if tmp[579389]
    {
      unknown tmp[579396] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735628] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (735631 'move' call_tmp[735628](466618 'typeof' nElems[267703]))
      (579398 'move' tmp[579396](267736 call _cast call_tmp[735628] 0))
      (579403 'move' tmp[579388](579400 '_paramFoldLogical' tmp[579389] tmp[579396]))
    }
    {
      unknown tmp[579405] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (579407 'move' tmp[579405](267742 call divceil m[267725] nChunks[267709]))
      (579412 'move' tmp[579388](579409 '_paramFoldLogical' tmp[579389] tmp[579405]))
    }
    (548671 'init var' start[267746] tmp[579388])
    (267749 'end of statement')
    const end[267775] "dead at end of block" "const" "insert auto destroy"
    unknown tmp[579419] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[579420] "maybe param" "temp"
    unknown call_tmp[735633] "expr temp" "maybe param" "maybe type" "temp"
    (735636 'move' call_tmp[735633](267753 call - nChunks[267709] 1))
    unknown call_tmp[735638] "expr temp" "maybe param" "maybe type" "temp"
    (735641 'move' call_tmp[735638](267755 call == i[267713] call_tmp[735633]))
    (579425 'move' tmp[579420](579423 call _cond_test call_tmp[735638]))
    if tmp[579420]
    {
      unknown tmp[579427] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (579429 'move' tmp[579427](267759 call - nElems[267703] 1))
      (579434 'move' tmp[579419](579431 '_paramFoldLogical' tmp[579420] tmp[579427]))
    }
    {
      unknown tmp[579436] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735643] "expr temp" "maybe param" "maybe type" "temp"
      (735646 'move' call_tmp[735643](267764 call + m[267725] nElems[267703]))
      unknown call_tmp[735648] "expr temp" "maybe param" "maybe type" "temp"
      (735651 'move' call_tmp[735648](267768 call divceil call_tmp[735643] nChunks[267709]))
      (579438 'move' tmp[579436](267770 call - call_tmp[735648] 1))
      (579443 'move' tmp[579419](579440 '_paramFoldLogical' tmp[579420] tmp[579436]))
    }
    (548673 'init var' end[267775] tmp[579419])
    (267778 'end of statement' m[267725] m[267725])
    unknown call_tmp[735653] "expr temp" "maybe param" "maybe type" "temp"
    (735656 'move' call_tmp[735653](267782 call _build_tuple start[267746] end[267775]))
    unknown call_tmp[735658] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735661 'move' call_tmp[735658](537462 'typeof' nElems[267703]))
    unknown call_tmp[735663] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735666 'move' call_tmp[735663](537464 'typeof' nElems[267703]))
    unknown call_tmp[735668] "expr temp" "maybe param" "maybe type" "temp"
    (735671 'move' call_tmp[735668](537461 call _build_tuple call_tmp[735658] call_tmp[735663]))
    (537467 'move' ret[537456](537466 'coerce' call_tmp[735653] call_tmp[735668]))
    gotoReturn _end_chunkOrderThru[537454] _end_chunkOrderThru[537454]
    (489779 'end of statement' start[267746] end[267775])
    label _end_chunkOrderThru[537454]
    (537458 return ret[537456])
  }
  { scopeless type
    unknown call_tmp[735673] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735676 'move' call_tmp[735673](466620 'typeof' nElems[267703]))
    unknown call_tmp[735678] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735681 'move' call_tmp[735678](466622 'typeof' nElems[267703]))
    (267719 call _build_tuple call_tmp[735673] call_tmp[735678])
  }
  function chunkOrderPack[267796](arg chunkSize[267793]:_any[178](?), arg nElems[267799] :
  (466624 'typeof' chunkSize[267793]), arg i[267803] :
  (466626 'typeof' chunkSize[267793])) : _unknown[51] "no doc" "private"
  {
    unknown ret[537473] "RVV" "temp"
    unknown call_tmp[735683] "maybe param" "maybe type" "temp"
    (735686 'move' call_tmp[735683](267813 call * chunkSize[267793] i[267803]))
    const start[267815] "dead at end of block" "const" "insert auto destroy"
    (548675 'init var' start[267815] call_tmp[735683])
    (267818 'end of statement')
    unknown call_tmp[735688] "expr temp" "maybe param" "maybe type" "temp"
    (735691 'move' call_tmp[735688](267822 call >= start[267815] nElems[267799]))
    unknown call_tmp[735693] "expr temp" "maybe param" "maybe type" "temp"
    (735696 'move' call_tmp[735693](267837 call _cond_test call_tmp[735688]))
    if call_tmp[735693]
    {
      unknown call_tmp[735698] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (735701 'move' call_tmp[735698](466628 'typeof' chunkSize[267793]))
      unknown call_tmp[735703] "expr temp" "maybe param" "maybe type" "temp"
      (735706 'move' call_tmp[735703](267826 call _cast call_tmp[735698] 1))
      unknown call_tmp[735708] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (735711 'move' call_tmp[735708](466630 'typeof' chunkSize[267793]))
      unknown call_tmp[735713] "expr temp" "maybe param" "maybe type" "temp"
      (735716 'move' call_tmp[735713](267830 call _cast call_tmp[735708] 0))
      unknown call_tmp[735718] "expr temp" "maybe param" "maybe type" "temp"
      (735721 'move' call_tmp[735718](267833 call _build_tuple call_tmp[735703] call_tmp[735713]))
      unknown call_tmp[735723] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (735726 'move' call_tmp[735723](537479 'typeof' chunkSize[267793]))
      unknown call_tmp[735728] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (735731 'move' call_tmp[735728](537481 'typeof' chunkSize[267793]))
      unknown call_tmp[735733] "expr temp" "maybe param" "maybe type" "temp"
      (735736 'move' call_tmp[735733](537478 call _build_tuple call_tmp[735723] call_tmp[735728]))
      (537484 'move' ret[537473](537483 'coerce' call_tmp[735718] call_tmp[735733]))
      gotoReturn _end_chunkOrderPack[537471] _end_chunkOrderPack[537471]
    }
    unknown call_tmp[735738] "expr temp" "maybe param" "maybe type" "temp"
    (735741 'move' call_tmp[735738](267844 call + start[267815] chunkSize[267793]))
    unknown call_tmp[735743] "maybe param" "maybe type" "temp"
    (735746 'move' call_tmp[735743](267847 call - call_tmp[735738] 1))
    unknown end[267849] "dead at end of block" "insert auto destroy"
    (548677 'init var' end[267849] call_tmp[735743])
    (267852 'end of statement' start[267815])
    unknown call_tmp[735748] "expr temp" "maybe param" "maybe type" "temp"
    (735751 'move' call_tmp[735748](267855 call >= end[267849] nElems[267799]))
    unknown call_tmp[735753] "expr temp" "maybe param" "maybe type" "temp"
    (735756 'move' call_tmp[735753](267865 call _cond_test call_tmp[735748]))
    if call_tmp[735753]
    {
      unknown call_tmp[735758] "expr temp" "maybe param" "maybe type" "temp"
      (735761 'move' call_tmp[735758](267860 call - nElems[267799] 1))
      (267862 call = end[267849] call_tmp[735758])
      (489784 'end of statement' end[267849])
    }
    unknown call_tmp[735763] "expr temp" "maybe param" "maybe type" "temp"
    (735766 'move' call_tmp[735763](267873 call _build_tuple start[267815] end[267849]))
    unknown call_tmp[735768] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735771 'move' call_tmp[735768](537490 'typeof' chunkSize[267793]))
    unknown call_tmp[735773] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735776 'move' call_tmp[735773](537492 'typeof' chunkSize[267793]))
    unknown call_tmp[735778] "expr temp" "maybe param" "maybe type" "temp"
    (735781 'move' call_tmp[735778](537489 call _build_tuple call_tmp[735768] call_tmp[735773]))
    (537495 'move' ret[537473](537494 'coerce' call_tmp[735763] call_tmp[735778]))
    gotoReturn _end_chunkOrderPack[537471] _end_chunkOrderPack[537471]
    (489786 'end of statement' start[267815] end[267849])
    label _end_chunkOrderPack[537471]
    (537475 return ret[537473])
  }
  { scopeless type
    unknown call_tmp[735783] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735786 'move' call_tmp[735783](466632 'typeof' chunkSize[267793]))
    unknown call_tmp[735788] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735791 'move' call_tmp[735788](466634 'typeof' chunkSize[267793]))
    (267809 call _build_tuple call_tmp[735783] call_tmp[735788])
  }
  function chunkOrderMod[267887](arg chunkSize[267884]:_any[178](?), arg rem[267890] :
  (466636 'typeof' chunkSize[267884]), arg nElems[267894] :
  (466638 'typeof' chunkSize[267884]), arg nChunks[267898] :
  (466640 'typeof' chunkSize[267884]), arg i[267902] :
  (466642 'typeof' chunkSize[267884])) : _unknown[51] "no doc" "private"
  {
    unknown ret[537501] "RVV" "temp"
    unknown start[267910] "dead at end of block" "insert auto destroy"
    unknown call_tmp[735793] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735796 'move' call_tmp[735793](466644 'typeof' chunkSize[267884]))
    (548679 'default init var' start[267910] call_tmp[735793])
    unknown end[267914] "dead at end of block" "insert auto destroy" "split inited"
    unknown type_tmp[548681] "maybe param" "maybe type" "temp"
    (548688 'move' type_tmp[548681](548686 'typeof' start[267910]))
    (548683 'init var split decl' end[267914] type_tmp[548681])
    (267919 'end of statement' start[267910])
    unknown call_tmp[735798] "expr temp" "maybe param" "maybe type" "temp"
    (735801 'move' call_tmp[735798](267923 call < i[267902] rem[267890]))
    unknown call_tmp[735803] "expr temp" "maybe param" "maybe type" "temp"
    (735806 'move' call_tmp[735803](267971 call _cond_test call_tmp[735798]))
    if call_tmp[735803]
    {
      unknown call_tmp[735808] "expr temp" "maybe param" "maybe type" "temp"
      (735811 'move' call_tmp[735808](267929 call + chunkSize[267884] 1))
      unknown call_tmp[735813] "expr temp" "maybe param" "maybe type" "temp"
      (735816 'move' call_tmp[735813](267931 call * i[267902] call_tmp[735808]))
      (267933 call = start[267910] call_tmp[735813])
      (489790 'end of statement' start[267910])
      unknown call_tmp[735818] "maybe param" "maybe type" "temp"
      (735821 'move' call_tmp[735818](267940 call + start[267910] chunkSize[267884]))
      (548690 'init var split init' end[267914] call_tmp[735818] type_tmp[548681])
      (489792 'end of statement' end[267914] start[267910])
    }
    {
      unknown call_tmp[735823] "expr temp" "maybe param" "maybe type" "temp"
      (735826 'move' call_tmp[735823](267949 call - nChunks[267898] i[267902]))
      unknown call_tmp[735828] "expr temp" "maybe param" "maybe type" "temp"
      (735831 'move' call_tmp[735828](267952 call * call_tmp[735823] chunkSize[267884]))
      unknown call_tmp[735833] "expr temp" "maybe param" "maybe type" "temp"
      (735836 'move' call_tmp[735833](267954 call - nElems[267894] call_tmp[735828]))
      (267956 call = start[267910] call_tmp[735833])
      (489795 'end of statement' start[267910])
      unknown call_tmp[735838] "expr temp" "maybe param" "maybe type" "temp"
      (735841 'move' call_tmp[735838](267963 call + start[267910] chunkSize[267884]))
      unknown call_tmp[735843] "maybe param" "maybe type" "temp"
      (735846 'move' call_tmp[735843](267966 call - call_tmp[735838] 1))
      (548693 'init var split init' end[267914] call_tmp[735843] type_tmp[548681])
      (489797 'end of statement' end[267914] start[267910])
    }
    unknown call_tmp[735848] "expr temp" "maybe param" "maybe type" "temp"
    (735851 'move' call_tmp[735848](267978 call _build_tuple start[267910] end[267914]))
    unknown call_tmp[735853] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735856 'move' call_tmp[735853](537507 'typeof' chunkSize[267884]))
    unknown call_tmp[735858] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735861 'move' call_tmp[735858](537509 'typeof' chunkSize[267884]))
    unknown call_tmp[735863] "expr temp" "maybe param" "maybe type" "temp"
    (735866 'move' call_tmp[735863](537506 call _build_tuple call_tmp[735853] call_tmp[735858]))
    (537512 'move' ret[537501](537511 'coerce' call_tmp[735848] call_tmp[735863]))
    gotoReturn _end_chunkOrderMod[537499] _end_chunkOrderMod[537499]
    (489800 'end of statement' start[267910] end[267914])
    label _end_chunkOrderMod[537499]
    (537503 return ret[537501])
  }
  { scopeless type
    unknown call_tmp[735868] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735871 'move' call_tmp[735868](466646 'typeof' chunkSize[267884]))
    unknown call_tmp[735873] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735876 'move' call_tmp[735873](466648 'typeof' chunkSize[267884]))
    (267908 call _build_tuple call_tmp[735868] call_tmp[735873])
  }
  (355367 'used modules list'(353058 'use' ChapelStandard[20267])(266492 'use' RemElems[266487])(266495 'use' BoundedRangeType[64216]))
}