AST dump for RangeChunk after pass createTaskFunctions.
Module use list: ChapelStandard 

{
  function chpl__init_RangeChunk[416160]() : void[4] "insert line file info" "module init"
  {
    (537502 return _void[55])
  }
  type RemElems[266485] def Thru[266479]:RemElems[266485] def Pack[266481]:RemElems[266485] def Mod[266483]:RemElems[266485]
  function chunks[266508](arg r[266505]:range[64319](?), arg numChunks[266511]:integral[199](?), arg remPol[266516]:RemElems[266485] =
  Thru[266479]) : _unknown[51] "compiler added where" "iterator fn" "no return value for void"
  {
    unknown ret[537307] "RVV" "temp"
    {
      unknown _indexOfInterest[266580] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[266581] "expr temp" "temp"
      unknown call_tmp[734773] "expr temp" "maybe param" "maybe type" "temp"
      (734776 'move' call_tmp[734773](266536 call chunksOrder r[266505] numChunks[266511] remPol[266516]))
      (266590 'move' _iterator[266581](266588 call _getIterator call_tmp[734773]))
      Defer
      {
        {
          (266621 call _freeIterator _iterator[266581])
        }
      }
      { scopeless type
        (266596 'move' _indexOfInterest[266580](266593 call iteratorIndex _iterator[266581]))
      }
      ForLoop[266582]
      {
        (266601 call _check_tuple_var_decl _indexOfInterest[266580] 2)
        (489643 'end of statement')
        unknown startOrder[266607] "index var" "insert auto destroy"
        (489644 'end of statement')
        (266609 'move' startOrder[266607](266605 call _indexOfInterest[266580] 0))
        (489645 'end of statement' startOrder[266607])
        unknown endOrder[266614] "index var" "insert auto destroy"
        (489647 'end of statement')
        (266616 'move' endOrder[266614](266612 call _indexOfInterest[266580] 1))
        (489648 'end of statement' endOrder[266614])
        {
          unknown call_tmp[734780] "maybe param" "maybe type" "temp"
          (734783 'move' call_tmp[734780](266543 call(266538 call (partial) orderToIndex _mt[243] r[266505]) startOrder[266607]))
          const start[266544] "dead at end of block" "const" "insert auto destroy"
          (548601 'init var' start[266544] call_tmp[734780])
          (266547 'end of statement')
          unknown call_tmp[734787] "maybe param" "maybe type" "temp"
          (734790 'move' call_tmp[734787](266555 call(266550 call (partial) orderToIndex _mt[243] r[266505]) endOrder[266614]))
          const end[266556] "dead at end of block" "const" "insert auto destroy"
          (548603 'init var' end[266556] call_tmp[734787])
          (266559 'end of statement' startOrder[266607] endOrder[266614])
          unknown yret[537311] "YVV" "temp"
          unknown tmp[579144] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[579145] "maybe param" "temp"
          unknown call_tmp[734792] "expr temp" "maybe param" "maybe type" "temp"
          (734795 'move' call_tmp[734792](466483 'query' r[266505] 3))
          (579150 'move' tmp[579145](579148 call _cond_test call_tmp[734792]))
          if tmp[579145]
          {
            unknown tmp[579152] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[734797] "expr temp" "maybe param" "maybe type" "temp"
            (734800 'move' call_tmp[734797](266563 call chpl_build_bounded_range start[266544] end[266556]))
            unknown call_tmp[734804] "expr temp" "maybe param" "maybe type" "temp"
            (734807 'move' call_tmp[734804](266566 call stride _mt[243] r[266505]))
            (579154 'move' tmp[579152](266569 call chpl_by call_tmp[734797] call_tmp[734804]))
            (579159 'move' tmp[579144](579156 '_paramFoldLogical' tmp[579145] tmp[579152]))
          }
          {
            unknown tmp[579161] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            (579163 'move' tmp[579161](266573 call chpl_build_bounded_range start[266544] end[266556]))
            (579168 'move' tmp[579144](579165 '_paramFoldLogical' tmp[579145] tmp[579161]))
          }
          unknown call_tmp[734809] "expr temp" "maybe param" "maybe type" "temp"
          (734812 'move' call_tmp[734809](537315 'query' r[266505] 1))
          unknown call_tmp[734814] "expr temp" "maybe param" "maybe type" "temp"
          (734817 'move' call_tmp[734814](537319 'query' r[266505] 3))
          unknown call_tmp[734819] "expr temp" "maybe param" "maybe type" "temp"
          (734822 'move' call_tmp[734819](537314 call range[64319](?) call_tmp[734809] bounded[64208] call_tmp[734814]))
          (537323 'move' yret[537311](537322 'coerce' tmp[579144] call_tmp[734819]))
          (537325 yield yret[537311])
          (489652 'end of statement' start[266544] end[266556] start[266544] end[266556])
        }
        label _continueLabel[266585]
        _indexOfInterest[266580]
        _iterator[266581]
      }
      label _breakLabel[266586]
    }
    (537309 return ret[537307])
  }
  where {
    unknown call_tmp[734824] "expr temp" "maybe param" "maybe type" "temp"
    (734827 'move' call_tmp[734824](466470 'query' r[266505] 2))
    unknown call_tmp[734829] "expr temp" "maybe param" "maybe type" "temp"
    (734832 'move' call_tmp[734829](466474 call == bounded[64208] call_tmp[734824]))
    (466478 call & 1 call_tmp[734829])
  }
  { scopeless type
    unknown call_tmp[734834] "expr temp" "maybe param" "maybe type" "temp"
    (734837 'move' call_tmp[734834](466467 'query' r[266505] 1))
    unknown call_tmp[734839] "expr temp" "maybe param" "maybe type" "temp"
    (734842 'move' call_tmp[734839](466486 'query' r[266505] 3))
    (266525 call range[64319](?) call_tmp[734834] bounded[64208] call_tmp[734839])
  }
  function chunk[266645](arg r[266642]:range[64319](?), arg numChunks[266648]:integral[199](?), arg idx[266652]:integral[199](?), arg remPol[266657]:RemElems[266485] =
  Thru[266479]) : _unknown[51] "compiler added where"
  {
    unknown ret[537329] "RVV" "temp"
    unknown call_tmp[734844] "maybe param" "maybe type" "temp"
    (734847 'move' call_tmp[734844](266678 call chunkOrder r[266642] numChunks[266648] idx[266652] remPol[266657]))
    const tmp[266679] "dead at end of block" "const" "insert auto destroy" "temp"
    (548605 'init var' tmp[266679] call_tmp[734844])
    (266686 call _check_tuple_var_decl tmp[266679] 2)
    (489657 'end of statement')
    unknown call_tmp[734849] "maybe param" "maybe type" "temp"
    (734852 'move' call_tmp[734849](266680 call tmp[266679] 0))
    const startOrder[266667] "dead at end of block" "const" "insert auto destroy"
    (548607 'init var' startOrder[266667] call_tmp[734849])
    unknown call_tmp[734854] "maybe param" "maybe type" "temp"
    (734857 'move' call_tmp[734854](266683 call tmp[266679] 1))
    const endOrder[266669] "dead at end of block" "const" "insert auto destroy"
    (548609 'init var' endOrder[266669] call_tmp[734854])
    (266691 'end of statement')
    unknown call_tmp[734861] "maybe param" "maybe type" "temp"
    (734864 'move' call_tmp[734861](266699 call(266694 call (partial) orderToIndex _mt[243] r[266642]) startOrder[266667]))
    const start[266700] "dead at end of block" "const" "insert auto destroy"
    (548611 'init var' start[266700] call_tmp[734861])
    (266703 'end of statement')
    unknown call_tmp[734868] "maybe param" "maybe type" "temp"
    (734871 'move' call_tmp[734868](266710 call(266705 call (partial) orderToIndex _mt[243] r[266642]) endOrder[266669]))
    const end[266711] "dead at end of block" "const" "insert auto destroy"
    (548613 'init var' end[266711] call_tmp[734868])
    (266714 'end of statement' startOrder[266667] endOrder[266669])
    unknown tmp[579175] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[579176] "maybe param" "temp"
    unknown call_tmp[734873] "expr temp" "maybe param" "maybe type" "temp"
    (734876 'move' call_tmp[734873](466512 'query' r[266642] 3))
    (579181 'move' tmp[579176](579179 call _cond_test call_tmp[734873]))
    if tmp[579176]
    {
      unknown tmp[579183] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[734878] "expr temp" "maybe param" "maybe type" "temp"
      (734881 'move' call_tmp[734878](266718 call chpl_build_bounded_range start[266700] end[266711]))
      unknown call_tmp[734885] "expr temp" "maybe param" "maybe type" "temp"
      (734888 'move' call_tmp[734885](266721 call stride _mt[243] r[266642]))
      (579185 'move' tmp[579183](266724 call chpl_by call_tmp[734878] call_tmp[734885]))
      (579190 'move' tmp[579175](579187 '_paramFoldLogical' tmp[579176] tmp[579183]))
    }
    {
      unknown tmp[579192] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (579194 'move' tmp[579192](266728 call chpl_build_bounded_range start[266700] end[266711]))
      (579199 'move' tmp[579175](579196 '_paramFoldLogical' tmp[579176] tmp[579192]))
    }
    unknown call_tmp[734890] "expr temp" "maybe param" "maybe type" "temp"
    (734893 'move' call_tmp[734890](537335 'query' r[266642] 1))
    unknown call_tmp[734895] "expr temp" "maybe param" "maybe type" "temp"
    (734898 'move' call_tmp[734895](537339 'query' r[266642] 3))
    unknown call_tmp[734900] "expr temp" "maybe param" "maybe type" "temp"
    (734903 'move' call_tmp[734900](537334 call range[64319](?) call_tmp[734890] bounded[64208] call_tmp[734895]))
    (537343 'move' ret[537329](537342 'coerce' tmp[579175] call_tmp[734900]))
    gotoReturn _end_chunk[537327] _end_chunk[537327]
    (489660 'end of statement' start[266700] end[266711] start[266700] end[266711])
    label _end_chunk[537327]
    (537331 return ret[537329])
  }
  where {
    unknown call_tmp[734905] "expr temp" "maybe param" "maybe type" "temp"
    (734908 'move' call_tmp[734905](466499 'query' r[266642] 2))
    unknown call_tmp[734910] "expr temp" "maybe param" "maybe type" "temp"
    (734913 'move' call_tmp[734910](466503 call == bounded[64208] call_tmp[734905]))
    (466507 call & 1 call_tmp[734910])
  }
  { scopeless type
    unknown call_tmp[734915] "expr temp" "maybe param" "maybe type" "temp"
    (734918 'move' call_tmp[734915](466496 'query' r[266642] 1))
    unknown call_tmp[734920] "expr temp" "maybe param" "maybe type" "temp"
    (734923 'move' call_tmp[734920](466515 'query' r[266642] 3))
    (266666 call range[64319](?) call_tmp[734915] bounded[64208] call_tmp[734920])
  }
  function blockCyclicChunks[266755](arg r[266752]:range[64319](?), arg blockSize[266758]:integral[199](?), arg tid[266762]:integral[199](?), arg nTasks[266766]:integral[199](?)) : _unknown[51] "compiler added where" "iterator fn" "no return value for void"
  {
    unknown ret[537349] "RVV" "temp"
    unknown call_tmp[734925] "expr temp" "maybe param" "maybe type" "temp"
    (734928 'move' call_tmp[734925](266771 call >= tid[266762] nTasks[266766]))
    unknown call_tmp[734930] "expr temp" "maybe param" "maybe type" "temp"
    (734933 'move' call_tmp[734930](266813 call _cond_test call_tmp[734925]))
    if call_tmp[734930]
    {
      unknown call_tmp[734935] "expr temp" "maybe param" "maybe type" "temp"
      (734938 'move' call_tmp[734935](266808 call + "Parameter tid must be < nTasks " "because blocks are indexed from 0..nTasks-1"))
      (266811 call halt call_tmp[734935])
    }
    unknown call_tmp[734940] "expr temp" "maybe param" "maybe type" "temp"
    (734943 'move' call_tmp[734940](266821 call <= blockSize[266758] 0))
    unknown call_tmp[734945] "expr temp" "maybe param" "maybe type" "temp"
    (734948 'move' call_tmp[734945](266844 call _cond_test call_tmp[734940]))
    if call_tmp[734945]
    {
      (266842 call halt "blockSize must a positive number")
    }
    unknown call_tmp[734950] "expr temp" "maybe param" "maybe type" "temp"
    (734953 'move' call_tmp[734950](266851 call <= nTasks[266766] 0))
    unknown call_tmp[734955] "expr temp" "maybe param" "maybe type" "temp"
    (734958 'move' call_tmp[734955](266874 call _cond_test call_tmp[734950]))
    if call_tmp[734955]
    {
      (266872 call halt "nTasks must be a positive number")
    }
    unknown call_tmp[734962] "maybe param" "maybe type" "temp"
    (734965 'move' call_tmp[734962](266880 call stride _mt[243] r[266752]))
    unknown rangeStride[266883] "dead at end of block" "insert auto destroy"
    (548615 'init var' rangeStride[266883] call_tmp[734962])
    (266886 'end of statement')
    unknown call_tmp[734967] "maybe param" "maybe type" "temp"
    (734970 'move' call_tmp[734967](266889 call * blockSize[266758] rangeStride[266883]))
    unknown blockStride[266891] "dead at end of block" "insert auto destroy"
    (548617 'init var' blockStride[266891] call_tmp[734967])
    (266894 'end of statement')
    unknown call_tmp[734974] "maybe param" "maybe type" "temp"
    (734977 'move' call_tmp[734974](266896 call low _mt[243] r[266752]))
    unknown low[266899] "dead at end of block" "insert auto destroy"
    (548619 'init var' low[266899] call_tmp[734974])
    (266902 'end of statement')
    unknown call_tmp[734981] "maybe param" "maybe type" "temp"
    (734984 'move' call_tmp[734981](266904 call high _mt[243] r[266752]))
    unknown high[266907] "dead at end of block" "insert auto destroy"
    (548621 'init var' high[266907] call_tmp[734981])
    (266910 'end of statement')
    unknown firstBlockStart[266932] "dead at end of block" "insert auto destroy"
    unknown tmp[579206] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[579207] "maybe param" "temp"
    unknown call_tmp[734986] "expr temp" "maybe param" "maybe type" "temp"
    (734989 'move' call_tmp[734986](266913 call > rangeStride[266883] 0))
    (579212 'move' tmp[579207](579210 call _cond_test call_tmp[734986]))
    if tmp[579207]
    {
      unknown tmp[579214] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (579216 'move' tmp[579214](266916 call low _mt[243] r[266752]))
      (579221 'move' tmp[579206](579218 '_paramFoldLogical' tmp[579207] tmp[579214]))
    }
    {
      unknown tmp[579223] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (579225 'move' tmp[579223](266920 call high _mt[243] r[266752]))
      (579230 'move' tmp[579206](579227 '_paramFoldLogical' tmp[579207] tmp[579223]))
    }
    unknown call_tmp[734995] "expr temp" "maybe param" "maybe type" "temp"
    (734998 'move' call_tmp[734995](266928 call * blockStride[266891] tid[266762]))
    unknown call_tmp[735000] "maybe param" "maybe type" "temp"
    (735003 'move' call_tmp[735000](266930 call + tmp[579206] call_tmp[734995]))
    (548623 'init var' firstBlockStart[266932] call_tmp[735000])
    (266935 'end of statement')
    unknown tmp[434036] "maybe param" "temp"
    unknown call_tmp[735007] "expr temp" "maybe param" "maybe type" "temp"
    (735010 'move' call_tmp[735007](266938 call high _mt[243] r[266752]))
    (434047 'move' tmp[434036](266941 call > firstBlockStart[266932] call_tmp[735007]))
    unknown call_tmp[735012] "expr temp" "maybe param" "maybe type" "temp"
    (735015 'move' call_tmp[735012](434049 call _cond_invalid tmp[434036]))
    if call_tmp[735012]
    {
      (434052 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[579237] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[579238] "maybe param" "temp"
    unknown call_tmp[735017] "expr temp" "maybe param" "maybe type" "temp"
    (735020 'move' call_tmp[735017](434037 call isTrue tmp[434036]))
    (579243 'move' tmp[579238](579241 call _cond_test call_tmp[735017]))
    if tmp[579238]
    {
      (579248 'move' tmp[579237](579245 '_paramFoldLogical' tmp[579238] 1))
    }
    {
      unknown tmp[579250] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735024] "expr temp" "maybe param" "maybe type" "temp"
      (735027 'move' call_tmp[735024](266945 call low _mt[243] r[266752]))
      unknown call_tmp[735029] "expr temp" "maybe param" "maybe type" "temp"
      (735032 'move' call_tmp[735029](266948 call < firstBlockStart[266932] call_tmp[735024]))
      (579252 'move' tmp[579250](434041 call isTrue call_tmp[735029]))
      (579257 'move' tmp[579237](579254 '_paramFoldLogical' tmp[579238] tmp[579250]))
    }
    unknown call_tmp[735034] "expr temp" "maybe param" "maybe type" "temp"
    (735037 'move' call_tmp[735034](266954 call _cond_test tmp[579237]))
    if call_tmp[735034]
    {
      gotoReturn _end_blockCyclicChunks[537347] _end_blockCyclicChunks[537347]
    }
    unknown call_tmp[735039] "maybe param" "maybe type" "temp"
    (735042 'move' call_tmp[735039](266961 call * blockStride[266891] nTasks[266766]))
    unknown strideToNextBlock[266963] "dead at end of block" "insert auto destroy"
    (548625 'init var' strideToNextBlock[266963] call_tmp[735039])
    (266966 'end of statement' rangeStride[266883] rangeStride[266883] blockStride[266891] blockStride[266891])
    unknown call_tmp[735044] "expr temp" "maybe param" "maybe type" "temp"
    (735047 'move' call_tmp[735044](266969 call > rangeStride[266883] 0))
    unknown call_tmp[735049] "expr temp" "maybe param" "maybe type" "temp"
    (735052 'move' call_tmp[735049](267123 call _cond_test call_tmp[735044]))
    if call_tmp[735049]
    {
      {
        unknown _indexOfInterest[267004] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[267005] "expr temp" "temp"
        unknown call_tmp[735054] "expr temp" "maybe param" "maybe type" "temp"
        (735057 'move' call_tmp[735054](267023 call chpl_direct_range_iter firstBlockStart[266932] high[266907] strideToNextBlock[266963]))
        (267014 'move' _iterator[267005](267012 call _getIterator call_tmp[735054]))
        Defer
        {
          {
            (267039 call _freeIterator _iterator[267005])
          }
        }
        { scopeless type
          (267028 'move' _indexOfInterest[267004](267025 call iteratorIndex _iterator[267005]))
        }
        ForLoop[267006]
        {
          unknown blockStart[267032] "index var" "insert auto destroy"
          (489675 'end of statement')
          (267034 'move' blockStart[267032] _indexOfInterest[267004])
          (489676 'end of statement' blockStart[267032])
          {
            unknown call_tmp[735059] "expr temp" "maybe param" "maybe type" "temp"
            (735062 'move' call_tmp[735059](266984 call + blockStart[267032] blockStride[266891]))
            unknown call_tmp[735064] "expr temp" "maybe param" "maybe type" "temp"
            (735067 'move' call_tmp[735064](266987 call - call_tmp[735059] 1))
            unknown call_tmp[735069] "maybe param" "maybe type" "temp"
            (735072 'move' call_tmp[735069](266989 call min high[266907] call_tmp[735064]))
            unknown blockEnd[266990] "dead at end of block" "insert auto destroy"
            (548627 'init var' blockEnd[266990] call_tmp[735069])
            (266993 'end of statement' high[266907] blockStart[267032] blockStride[266891])
            unknown yret[537355] "YVV" "temp"
            unknown call_tmp[735074] "expr temp" "maybe param" "maybe type" "temp"
            (735077 'move' call_tmp[735074](266997 call chpl_build_bounded_range blockStart[267032] blockEnd[266990]))
            unknown call_tmp[735079] "expr temp" "maybe param" "maybe type" "temp"
            (735082 'move' call_tmp[735079](267000 call chpl_by call_tmp[735074] rangeStride[266883]))
            (537358 'move' yret[537355](537357 'deref' call_tmp[735079]))
            (537360 yield yret[537355])
            (489681 'end of statement' blockStart[267032] blockEnd[266990] rangeStride[266883])
          }
          label _continueLabel[267009]
          _indexOfInterest[267004]
          _iterator[267005]
        }
        label _breakLabel[267010]
      }
    }
    {
      {
        unknown _indexOfInterest[267080] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[267081] "expr temp" "temp"
        unknown call_tmp[735084] "expr temp" "maybe param" "maybe type" "temp"
        (735087 'move' call_tmp[735084](267099 call chpl_direct_range_iter low[266899] firstBlockStart[266932] strideToNextBlock[266963]))
        (267090 'move' _iterator[267081](267088 call _getIterator call_tmp[735084]))
        Defer
        {
          {
            (267115 call _freeIterator _iterator[267081])
          }
        }
        { scopeless type
          (267104 'move' _indexOfInterest[267080](267101 call iteratorIndex _iterator[267081]))
        }
        ForLoop[267082]
        {
          unknown blockEnd[267108] "index var" "insert auto destroy"
          (489686 'end of statement')
          (267110 'move' blockEnd[267108] _indexOfInterest[267080])
          (489687 'end of statement' blockEnd[267108])
          {
            unknown call_tmp[735089] "expr temp" "maybe param" "maybe type" "temp"
            (735092 'move' call_tmp[735089](267060 call + blockEnd[267108] blockStride[266891]))
            unknown call_tmp[735094] "expr temp" "maybe param" "maybe type" "temp"
            (735097 'move' call_tmp[735094](267063 call + call_tmp[735089] 1))
            unknown call_tmp[735099] "maybe param" "maybe type" "temp"
            (735102 'move' call_tmp[735099](267065 call max low[266899] call_tmp[735094]))
            unknown blockStart[267066] "dead at end of block" "insert auto destroy"
            (548629 'init var' blockStart[267066] call_tmp[735099])
            (267069 'end of statement' low[266899] blockEnd[267108] blockStride[266891])
            unknown yret[537362] "YVV" "temp"
            unknown call_tmp[735104] "expr temp" "maybe param" "maybe type" "temp"
            (735107 'move' call_tmp[735104](267073 call chpl_build_bounded_range blockStart[267066] blockEnd[267108]))
            unknown call_tmp[735109] "expr temp" "maybe param" "maybe type" "temp"
            (735112 'move' call_tmp[735109](267076 call chpl_by call_tmp[735104] rangeStride[266883]))
            (537365 'move' yret[537362](537364 'deref' call_tmp[735109]))
            (537367 yield yret[537362])
            (489692 'end of statement' blockStart[267066] blockEnd[267108] rangeStride[266883])
          }
          label _continueLabel[267085]
          _indexOfInterest[267080]
          _iterator[267081]
        }
        label _breakLabel[267086]
      }
    }
    label _end_blockCyclicChunks[537347]
    (537351 return ret[537349])
  }
  where {
    unknown call_tmp[735114] "expr temp" "maybe param" "maybe type" "temp"
    (735117 'move' call_tmp[735114](466524 'query' r[266752] c"boundedType"))
    unknown call_tmp[735119] "expr temp" "maybe param" "maybe type" "temp"
    (735122 'move' call_tmp[735119](466527 call == bounded[64208] call_tmp[735114]))
    (466531 call & 1 call_tmp[735119])
  }
  function chunksOrder[267141](arg r[267138]:range[64319](?), arg numChunks[267144]:integral[199](?), arg remPol[267149]:RemElems[266485] =
  Thru[266479]) : _unknown[51] "compiler added where" "iterator fn" "no return value for void"
  {
    unknown ret[537371] "RVV" "temp"
    unknown tmp[434057] "maybe param" "temp"
    unknown call_tmp[735126] "expr temp" "maybe param" "maybe type" "temp"
    (735129 'move' call_tmp[735126](267158 call size _mt[243] r[267138]))
    (434068 'move' tmp[434057](267162 call == call_tmp[735126] 0))
    unknown call_tmp[735131] "expr temp" "maybe param" "maybe type" "temp"
    (735134 'move' call_tmp[735131](434070 call _cond_invalid tmp[434057]))
    if call_tmp[735131]
    {
      (434073 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[579264] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[579265] "maybe param" "temp"
    unknown call_tmp[735136] "expr temp" "maybe param" "maybe type" "temp"
    (735139 'move' call_tmp[735136](434058 call isTrue tmp[434057]))
    (579270 'move' tmp[579265](579268 call _cond_test call_tmp[735136]))
    if tmp[579265]
    {
      (579275 'move' tmp[579264](579272 '_paramFoldLogical' tmp[579265] 1))
    }
    {
      unknown tmp[579277] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735141] "expr temp" "maybe param" "maybe type" "temp"
      (735144 'move' call_tmp[735141](267166 call <= numChunks[267144] 0))
      (579279 'move' tmp[579277](434062 call isTrue call_tmp[735141]))
      (579284 'move' tmp[579264](579281 '_paramFoldLogical' tmp[579265] tmp[579277]))
    }
    unknown call_tmp[735146] "expr temp" "maybe param" "maybe type" "temp"
    (735149 'move' call_tmp[735146](267172 call _cond_test tmp[579264]))
    if call_tmp[735146]
    {
      gotoReturn _end_chunksOrder[537369] _end_chunksOrder[537369]
    }
    unknown call_tmp[735153] "maybe param" "maybe type" "temp"
    (735156 'move' call_tmp[735153](267179 call size _mt[243] r[267138]))
    const nElems[267182] "dead at end of block" "const" "insert auto destroy"
    (548631 'init var' nElems[267182] call_tmp[735153])
    (267185 'end of statement')
    unknown call_tmp[735158] "expr temp" "maybe param" "maybe type" "temp"
    (735161 'move' call_tmp[735158](466548 'query' r[267138] 1))
    unknown call_tmp[735163] "expr temp" "maybe param" "maybe type" "temp"
    (735166 'move' call_tmp[735163](267190 call min numChunks[267144] nElems[267182]))
    unknown call_tmp[735168] "maybe param" "maybe type" "temp"
    (735171 'move' call_tmp[735168](267192 call _cast call_tmp[735158] call_tmp[735163]))
    unknown nChunks[267194] "dead at end of block" "insert auto destroy"
    (548633 'init var' nChunks[267194] call_tmp[735168])
    (267197 'end of statement')
    unknown chunkSize[267198] "dead at end of block" "insert auto destroy"
    unknown call_tmp[735173] "expr temp" "maybe param" "maybe type" "temp"
    (735176 'move' call_tmp[735173](466551 'query' r[267138] 1))
    (548635 'default init var' chunkSize[267198] call_tmp[735173])
    unknown rem[267202] "dead at end of block" "insert auto destroy"
    unknown call_tmp[735178] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735181 'move' call_tmp[735178](267206 'typeof' chunkSize[267198]))
    (548637 'default init var' rem[267202] call_tmp[735178])
    (267207 'end of statement' nElems[267182] chunkSize[267198])
    {
      unknown tmp[267274] "expr temp" "maybe param" "maybe type" "temp"
      (267276 'move' tmp[267274] remPol[267149])
      unknown call_tmp[735183] "expr temp" "maybe param" "maybe type" "temp"
      (735186 'move' call_tmp[735183](267278 call == tmp[267274] Pack[266481]))
      unknown call_tmp[735188] "expr temp" "maybe param" "maybe type" "temp"
      (735191 'move' call_tmp[735188](267281 call _cond_test call_tmp[735183]))
      if call_tmp[735188]
      {
        unknown call_tmp[735193] "expr temp" "maybe param" "maybe type" "temp"
        (735196 'move' call_tmp[735193](267215 call / nElems[267182] nChunks[267194]))
        (267217 call = chunkSize[267198] call_tmp[735193])
        (489700 'end of statement' chunkSize[267198] nElems[267182] nChunks[267194])
        unknown call_tmp[735198] "expr temp" "maybe param" "maybe type" "temp"
        (735201 'move' call_tmp[735198](267223 call * chunkSize[267198] nChunks[267194]))
        unknown call_tmp[735203] "expr temp" "maybe param" "maybe type" "temp"
        (735206 'move' call_tmp[735203](267226 call != call_tmp[735198] nElems[267182]))
        unknown call_tmp[735208] "expr temp" "maybe param" "maybe type" "temp"
        (735211 'move' call_tmp[735208](267243 call _cond_test call_tmp[735203]))
        if call_tmp[735208]
        {
          (267230 call += chunkSize[267198] 1)
          (489704 'end of statement' chunkSize[267198])
          unknown call_tmp[735213] "expr temp" "maybe param" "maybe type" "temp"
          (735216 'move' call_tmp[735213](267239 call divceil nElems[267182] chunkSize[267198]))
          (267240 call = nChunks[267194] call_tmp[735213])
          (489706 'end of statement' nChunks[267194] nElems[267182] chunkSize[267198])
        }
      }
      {
        unknown call_tmp[735218] "expr temp" "maybe param" "maybe type" "temp"
        (735221 'move' call_tmp[735218](267284 call == tmp[267274] Mod[266483]))
        unknown call_tmp[735223] "expr temp" "maybe param" "maybe type" "temp"
        (735226 'move' call_tmp[735223](267287 call _cond_test call_tmp[735218]))
        if call_tmp[735223]
        {
          unknown call_tmp[735228] "expr temp" "maybe param" "maybe type" "temp"
          (735231 'move' call_tmp[735228](267254 call / nElems[267182] nChunks[267194]))
          (267256 call = chunkSize[267198] call_tmp[735228])
          (489710 'end of statement' chunkSize[267198] nElems[267182] nChunks[267194])
          unknown call_tmp[735233] "expr temp" "maybe param" "maybe type" "temp"
          (735236 'move' call_tmp[735233](267264 call * chunkSize[267198] nChunks[267194]))
          unknown call_tmp[735238] "expr temp" "maybe param" "maybe type" "temp"
          (735241 'move' call_tmp[735238](267266 call - nElems[267182] call_tmp[735233]))
          (267268 call = rem[267202] call_tmp[735238])
          (489714 'end of statement' rem[267202] nElems[267182] chunkSize[267198] nChunks[267194])
        }
      }
    }
    {
      unknown _indexOfInterest[267410] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[267411] "expr temp" "temp"
      unknown call_tmp[735243] "expr temp" "maybe param" "maybe type" "temp"
      (735246 'move' call_tmp[735243](267427 call chpl_direct_counted_range_iter 0 nChunks[267194]))
      (267420 'move' _iterator[267411](267418 call _getIterator call_tmp[735243]))
      Defer
      {
        {
          (267443 call _freeIterator _iterator[267411])
        }
      }
      { scopeless type
        (267432 'move' _indexOfInterest[267410](267429 call iteratorIndex _iterator[267411]))
      }
      ForLoop[267412]
      {
        unknown i[267436] "index var" "insert auto destroy"
        (489720 'end of statement')
        (267438 'move' i[267436] _indexOfInterest[267410])
        (489721 'end of statement' i[267436])
        {
          unknown chunk[267303] "dead at end of block" "insert auto destroy"
          unknown call_tmp[735248] "expr temp" "maybe param" "maybe type" "temp"
          (735251 'move' call_tmp[735248](466554 'query' r[267138] 1))
          unknown call_tmp[735253] "expr temp" "maybe param" "maybe type" "temp"
          (735256 'move' call_tmp[735253](267301 call * 2 call_tmp[735248]))
          (548639 'default init var' chunk[267303] call_tmp[735253])
          (267306 'end of statement')
          {
            unknown tmp[267382] "expr temp" "maybe param" "maybe type" "temp"
            (267384 'move' tmp[267382] remPol[267149])
            unknown call_tmp[735258] "expr temp" "maybe param" "maybe type" "temp"
            (735261 'move' call_tmp[735258](267386 call == tmp[267382] Thru[266479]))
            unknown call_tmp[735263] "expr temp" "maybe param" "maybe type" "temp"
            (735266 'move' call_tmp[735263](267389 call _cond_test call_tmp[735258]))
            if call_tmp[735263]
            {
              unknown call_tmp[735268] "expr temp" "maybe param" "maybe type" "temp"
              (735271 'move' call_tmp[735268](267318 call chunkOrderThru nElems[267182] nChunks[267194] i[267436]))
              (267319 call = chunk[267303] call_tmp[735268])
              (489723 'end of statement' chunk[267303] nElems[267182] nChunks[267194] i[267436])
            }
            {
              unknown call_tmp[735273] "expr temp" "maybe param" "maybe type" "temp"
              (735276 'move' call_tmp[735273](267392 call == tmp[267382] Pack[266481]))
              unknown call_tmp[735278] "expr temp" "maybe param" "maybe type" "temp"
              (735281 'move' call_tmp[735278](267395 call _cond_test call_tmp[735273]))
              if call_tmp[735278]
              {
                unknown call_tmp[735283] "expr temp" "maybe param" "maybe type" "temp"
                (735286 'move' call_tmp[735283](267333 call chunkOrderPack chunkSize[267198] nElems[267182] i[267436]))
                (267334 call = chunk[267303] call_tmp[735283])
                (489728 'end of statement' chunk[267303] chunkSize[267198] nElems[267182] i[267436])
              }
              {
                unknown call_tmp[735288] "expr temp" "maybe param" "maybe type" "temp"
                (735291 'move' call_tmp[735288](267399 call == tmp[267382] Mod[266483]))
                unknown call_tmp[735293] "expr temp" "maybe param" "maybe type" "temp"
                (735296 'move' call_tmp[735293](267402 call _cond_test call_tmp[735288]))
                if call_tmp[735293]
                {
                  unknown call_tmp[735298] "expr temp" "maybe param" "maybe type" "temp"
                  (735301 'move' call_tmp[735298](267350 call chunkOrderMod chunkSize[267198] rem[267202] nElems[267182] nChunks[267194] i[267436]))
                  (267351 call = chunk[267303] call_tmp[735298])
                  (489733 'end of statement' chunk[267303] chunkSize[267198] rem[267202] nElems[267182] nChunks[267194] i[267436])
                }
                {
                  (267376 call halt "RangeChunk: unknown RemElems in chunksOrder")
                }
              }
            }
          }
          unknown yret[537377] "YVV" "temp"
          unknown call_tmp[735303] "expr temp" "maybe param" "maybe type" "temp"
          (735306 'move' call_tmp[735303](537382 'query' r[267138] 1))
          unknown call_tmp[735308] "expr temp" "maybe param" "maybe type" "temp"
          (735311 'move' call_tmp[735308](537380 call * 2 call_tmp[735303]))
          (537386 'move' yret[537377](537385 'coerce' chunk[267303] call_tmp[735308]))
          (537388 yield yret[537377])
          (489741 'end of statement' chunk[267303])
        }
        label _continueLabel[267415]
        _indexOfInterest[267410]
        _iterator[267411]
      }
      label _breakLabel[267416]
    }
    label _end_chunksOrder[537369]
    (537373 return ret[537371])
  }
  where {
    unknown call_tmp[735313] "expr temp" "maybe param" "maybe type" "temp"
    (735316 'move' call_tmp[735313](466560 'query' r[267138] 2))
    unknown call_tmp[735318] "expr temp" "maybe param" "maybe type" "temp"
    (735321 'move' call_tmp[735318](466564 call == bounded[64208] call_tmp[735313]))
    (466568 call & 1 call_tmp[735318])
  }
  { scopeless type
    unknown call_tmp[735323] "expr temp" "maybe param" "maybe type" "temp"
    (735326 'move' call_tmp[735323](466557 'query' r[267138] 1))
    (267155 call * 2 call_tmp[735323])
  }
  function chunkOrder[267465](arg r[267462]:range[64319](?), arg numChunks[267468]:integral[199](?), arg idx[267472]:integral[199](?), arg remPol[267477]:RemElems[266485] =
  Thru[266479]) : _unknown[51] "compiler added where"
  {
    unknown ret[537392] "RVV" "temp"
    unknown tmp[434078] "maybe param" "temp"
    unknown tmp[434099] "maybe param" "temp"
    unknown tmp[434120] "maybe param" "temp"
    unknown call_tmp[735330] "expr temp" "maybe param" "maybe type" "temp"
    (735333 'move' call_tmp[735330](267486 call size _mt[243] r[267462]))
    (434131 'move' tmp[434120](267490 call == call_tmp[735330] 0))
    unknown call_tmp[735335] "expr temp" "maybe param" "maybe type" "temp"
    (735338 'move' call_tmp[735335](434133 call _cond_invalid tmp[434120]))
    if call_tmp[735335]
    {
      (434136 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[579291] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[579292] "maybe param" "temp"
    unknown call_tmp[735340] "expr temp" "maybe param" "maybe type" "temp"
    (735343 'move' call_tmp[735340](434121 call isTrue tmp[434120]))
    (579297 'move' tmp[579292](579295 call _cond_test call_tmp[735340]))
    if tmp[579292]
    {
      (579302 'move' tmp[579291](579299 '_paramFoldLogical' tmp[579292] 1))
    }
    {
      unknown tmp[579304] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735345] "expr temp" "maybe param" "maybe type" "temp"
      (735348 'move' call_tmp[735345](267494 call <= numChunks[267468] 0))
      (579306 'move' tmp[579304](434125 call isTrue call_tmp[735345]))
      (579311 'move' tmp[579291](579308 '_paramFoldLogical' tmp[579292] tmp[579304]))
    }
    (434110 'move' tmp[434099] tmp[579291])
    unknown call_tmp[735350] "expr temp" "maybe param" "maybe type" "temp"
    (735353 'move' call_tmp[735350](434112 call _cond_invalid tmp[434099]))
    if call_tmp[735350]
    {
      (434115 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[579318] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[579319] "maybe param" "temp"
    unknown call_tmp[735355] "expr temp" "maybe param" "maybe type" "temp"
    (735358 'move' call_tmp[735355](434100 call isTrue tmp[434099]))
    (579324 'move' tmp[579319](579322 call _cond_test call_tmp[735355]))
    if tmp[579319]
    {
      (579329 'move' tmp[579318](579326 '_paramFoldLogical' tmp[579319] 1))
    }
    {
      unknown tmp[579331] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735360] "expr temp" "maybe param" "maybe type" "temp"
      (735363 'move' call_tmp[735360](267500 call < idx[267472] 0))
      (579333 'move' tmp[579331](434104 call isTrue call_tmp[735360]))
      (579338 'move' tmp[579318](579335 '_paramFoldLogical' tmp[579319] tmp[579331]))
    }
    (434089 'move' tmp[434078] tmp[579318])
    unknown call_tmp[735365] "expr temp" "maybe param" "maybe type" "temp"
    (735368 'move' call_tmp[735365](434091 call _cond_invalid tmp[434078]))
    if call_tmp[735365]
    {
      (434094 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[579345] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[579346] "maybe param" "temp"
    unknown call_tmp[735370] "expr temp" "maybe param" "maybe type" "temp"
    (735373 'move' call_tmp[735370](434079 call isTrue tmp[434078]))
    (579351 'move' tmp[579346](579349 call _cond_test call_tmp[735370]))
    if tmp[579346]
    {
      (579356 'move' tmp[579345](579353 '_paramFoldLogical' tmp[579346] 1))
    }
    {
      unknown tmp[579358] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735375] "expr temp" "maybe param" "maybe type" "temp"
      (735378 'move' call_tmp[735375](267506 call >= idx[267472] numChunks[267468]))
      (579360 'move' tmp[579358](434083 call isTrue call_tmp[735375]))
      (579365 'move' tmp[579345](579362 '_paramFoldLogical' tmp[579346] tmp[579358]))
    }
    unknown call_tmp[735380] "expr temp" "maybe param" "maybe type" "temp"
    (735383 'move' call_tmp[735380](267523 call _cond_test tmp[579345]))
    if call_tmp[735380]
    {
      unknown call_tmp[735385] "expr temp" "maybe param" "maybe type" "temp"
      (735388 'move' call_tmp[735385](466580 'query' r[267462] 1))
      unknown call_tmp[735390] "expr temp" "maybe param" "maybe type" "temp"
      (735393 'move' call_tmp[735390](267512 call _cast call_tmp[735385] 1))
      unknown call_tmp[735395] "expr temp" "maybe param" "maybe type" "temp"
      (735398 'move' call_tmp[735395](466583 'query' r[267462] 1))
      unknown call_tmp[735400] "expr temp" "maybe param" "maybe type" "temp"
      (735403 'move' call_tmp[735400](267516 call _cast call_tmp[735395] 0))
      unknown call_tmp[735405] "expr temp" "maybe param" "maybe type" "temp"
      (735408 'move' call_tmp[735405](267519 call _build_tuple call_tmp[735390] call_tmp[735400]))
      unknown call_tmp[735410] "expr temp" "maybe param" "maybe type" "temp"
      (735413 'move' call_tmp[735410](537399 'query' r[267462] 1))
      unknown call_tmp[735415] "expr temp" "maybe param" "maybe type" "temp"
      (735418 'move' call_tmp[735415](537397 call * 2 call_tmp[735410]))
      (537403 'move' ret[537392](537402 'coerce' call_tmp[735405] call_tmp[735415]))
      gotoReturn _end_chunkOrder[537390] _end_chunkOrder[537390]
    }
    unknown call_tmp[735422] "maybe param" "maybe type" "temp"
    (735425 'move' call_tmp[735422](267530 call size _mt[243] r[267462]))
    const nElems[267533] "dead at end of block" "const" "insert auto destroy"
    (548641 'init var' nElems[267533] call_tmp[735422])
    (267536 'end of statement')
    unknown call_tmp[735427] "expr temp" "maybe param" "maybe type" "temp"
    (735430 'move' call_tmp[735427](466586 'query' r[267462] 1))
    unknown call_tmp[735432] "expr temp" "maybe param" "maybe type" "temp"
    (735435 'move' call_tmp[735432](267541 call min numChunks[267468] nElems[267533]))
    unknown call_tmp[735437] "maybe param" "maybe type" "temp"
    (735440 'move' call_tmp[735437](267543 call _cast call_tmp[735427] call_tmp[735432]))
    const nChunks[267545] "dead at end of block" "const" "insert auto destroy"
    (548643 'init var' nChunks[267545] call_tmp[735437])
    (267548 'end of statement')
    unknown call_tmp[735442] "expr temp" "maybe param" "maybe type" "temp"
    (735445 'move' call_tmp[735442](466589 'query' r[267462] 1))
    unknown call_tmp[735447] "maybe param" "maybe type" "temp"
    (735450 'move' call_tmp[735447](267551 call _cast call_tmp[735442] idx[267472]))
    const i[267553] "dead at end of block" "const" "insert auto destroy"
    (548645 'init var' i[267553] call_tmp[735447])
    (267556 'end of statement' nElems[267533])
    {
      unknown tmp[267669] "expr temp" "maybe param" "maybe type" "temp"
      (267671 'move' tmp[267669] remPol[267477])
      unknown call_tmp[735452] "expr temp" "maybe param" "maybe type" "temp"
      (735455 'move' call_tmp[735452](267673 call == tmp[267669] Thru[266479]))
      unknown call_tmp[735457] "expr temp" "maybe param" "maybe type" "temp"
      (735460 'move' call_tmp[735457](267676 call _cond_test call_tmp[735452]))
      if call_tmp[735457]
      {
        unknown call_tmp[735462] "expr temp" "maybe param" "maybe type" "temp"
        (735465 'move' call_tmp[735462](267566 call chunkOrderThru nElems[267533] nChunks[267545] i[267553]))
        unknown call_tmp[735467] "expr temp" "maybe param" "maybe type" "temp"
        (735470 'move' call_tmp[735467](537410 'query' r[267462] 1))
        unknown call_tmp[735472] "expr temp" "maybe param" "maybe type" "temp"
        (735475 'move' call_tmp[735472](537408 call * 2 call_tmp[735467]))
        (537414 'move' ret[537392](537413 'coerce' call_tmp[735462] call_tmp[735472]))
        gotoReturn _end_chunkOrder[537390] _end_chunkOrder[537390]
        (489748 'end of statement' nElems[267533] nChunks[267545] i[267553])
      }
      {
        unknown call_tmp[735477] "expr temp" "maybe param" "maybe type" "temp"
        (735480 'move' call_tmp[735477](267679 call == tmp[267669] Pack[266481]))
        unknown call_tmp[735482] "expr temp" "maybe param" "maybe type" "temp"
        (735485 'move' call_tmp[735482](267682 call _cond_test call_tmp[735477]))
        if call_tmp[735482]
        {
          unknown call_tmp[735487] "maybe param" "maybe type" "temp"
          (735490 'move' call_tmp[735487](267576 call / nElems[267533] nChunks[267545]))
          unknown chunkSize[267578] "dead at end of block" "insert auto destroy"
          (548647 'init var' chunkSize[267578] call_tmp[735487])
          (267581 'end of statement' nElems[267533] nChunks[267545])
          unknown call_tmp[735492] "expr temp" "maybe param" "maybe type" "temp"
          (735495 'move' call_tmp[735492](267585 call * chunkSize[267578] nChunks[267545]))
          unknown call_tmp[735497] "expr temp" "maybe param" "maybe type" "temp"
          (735500 'move' call_tmp[735497](267588 call != call_tmp[735492] nElems[267533]))
          unknown call_tmp[735502] "expr temp" "maybe param" "maybe type" "temp"
          (735505 'move' call_tmp[735502](267595 call _cond_test call_tmp[735497]))
          if call_tmp[735502]
          {
            (267592 call += chunkSize[267578] 1)
            (489754 'end of statement' chunkSize[267578])
          }
          unknown call_tmp[735507] "expr temp" "maybe param" "maybe type" "temp"
          (735510 'move' call_tmp[735507](267605 call chunkOrderPack chunkSize[267578] nElems[267533] i[267553]))
          unknown call_tmp[735512] "expr temp" "maybe param" "maybe type" "temp"
          (735515 'move' call_tmp[735512](537421 'query' r[267462] 1))
          unknown call_tmp[735517] "expr temp" "maybe param" "maybe type" "temp"
          (735520 'move' call_tmp[735517](537419 call * 2 call_tmp[735512]))
          (537425 'move' ret[537392](537424 'coerce' call_tmp[735507] call_tmp[735517]))
          gotoReturn _end_chunkOrder[537390] _end_chunkOrder[537390]
          (489756 'end of statement' chunkSize[267578] nElems[267533] i[267553])
        }
        {
          unknown call_tmp[735522] "expr temp" "maybe param" "maybe type" "temp"
          (735525 'move' call_tmp[735522](267686 call == tmp[267669] Mod[266483]))
          unknown call_tmp[735527] "expr temp" "maybe param" "maybe type" "temp"
          (735530 'move' call_tmp[735527](267689 call _cond_test call_tmp[735522]))
          if call_tmp[735527]
          {
            unknown call_tmp[735532] "maybe param" "maybe type" "temp"
            (735535 'move' call_tmp[735532](267614 call / nElems[267533] nChunks[267545]))
            const chunkSize[267616] "dead at end of block" "const" "insert auto destroy"
            (548649 'init var' chunkSize[267616] call_tmp[735532])
            (267619 'end of statement')
            unknown call_tmp[735537] "expr temp" "maybe param" "maybe type" "temp"
            (735540 'move' call_tmp[735537](267624 call * chunkSize[267616] nChunks[267545]))
            unknown call_tmp[735542] "maybe param" "maybe type" "temp"
            (735545 'move' call_tmp[735542](267626 call - nElems[267533] call_tmp[735537]))
            const rem[267628] "dead at end of block" "const" "insert auto destroy"
            (548651 'init var' rem[267628] call_tmp[735542])
            (267631 'end of statement' nElems[267533] nChunks[267545] nElems[267533] chunkSize[267616] nChunks[267545])
            unknown call_tmp[735547] "expr temp" "maybe param" "maybe type" "temp"
            (735550 'move' call_tmp[735547](267639 call chunkOrderMod chunkSize[267616] rem[267628] nElems[267533] nChunks[267545] i[267553]))
            unknown call_tmp[735552] "expr temp" "maybe param" "maybe type" "temp"
            (735555 'move' call_tmp[735552](537432 'query' r[267462] 1))
            unknown call_tmp[735557] "expr temp" "maybe param" "maybe type" "temp"
            (735560 'move' call_tmp[735557](537430 call * 2 call_tmp[735552]))
            (537436 'move' ret[537392](537435 'coerce' call_tmp[735547] call_tmp[735557]))
            gotoReturn _end_chunkOrder[537390] _end_chunkOrder[537390]
            (489765 'end of statement' chunkSize[267616] rem[267628] nElems[267533] nChunks[267545] i[267553])
          }
          {
            (267663 call halt "RangeChunk: unknown RemElems in chunkOrder")
          }
        }
      }
    }
    label _end_chunkOrder[537390]
    (537394 return ret[537392])
  }
  where {
    unknown call_tmp[735562] "expr temp" "maybe param" "maybe type" "temp"
    (735565 'move' call_tmp[735562](466595 'query' r[267462] 2))
    unknown call_tmp[735567] "expr temp" "maybe param" "maybe type" "temp"
    (735570 'move' call_tmp[735567](466599 call == bounded[64208] call_tmp[735562]))
    (466603 call & 1 call_tmp[735567])
  }
  { scopeless type
    unknown call_tmp[735572] "expr temp" "maybe param" "maybe type" "temp"
    (735575 'move' call_tmp[735572](466592 'query' r[267462] 1))
    (267483 call * 2 call_tmp[735572])
  }
  function chunkOrderThru[267704](arg nElems[267701]:_any[178](?), arg nChunks[267707] :
  (466609 'typeof' nElems[267701]), arg i[267711] :
  (466611 'typeof' nElems[267701])) : _unknown[51] "no doc" "private"
  {
    unknown ret[537442] "RVV" "temp"
    unknown call_tmp[735577] "maybe param" "maybe type" "temp"
    (735580 'move' call_tmp[735577](267721 call * nElems[267701] i[267711]))
    const m[267723] "dead at end of block" "const" "insert auto destroy"
    (548653 'init var' m[267723] call_tmp[735577])
    (267726 'end of statement')
    const start[267744] "dead at end of block" "const" "insert auto destroy"
    unknown tmp[579372] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[579373] "maybe param" "temp"
    unknown call_tmp[735582] "expr temp" "maybe param" "maybe type" "temp"
    (735585 'move' call_tmp[735582](267730 call == i[267711] 0))
    (579378 'move' tmp[579373](579376 call _cond_test call_tmp[735582]))
    if tmp[579373]
    {
      unknown tmp[579380] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735587] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (735590 'move' call_tmp[735587](466613 'typeof' nElems[267701]))
      (579382 'move' tmp[579380](267734 call _cast call_tmp[735587] 0))
      (579387 'move' tmp[579372](579384 '_paramFoldLogical' tmp[579373] tmp[579380]))
    }
    {
      unknown tmp[579389] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (579391 'move' tmp[579389](267740 call divceil m[267723] nChunks[267707]))
      (579396 'move' tmp[579372](579393 '_paramFoldLogical' tmp[579373] tmp[579389]))
    }
    (548655 'init var' start[267744] tmp[579372])
    (267747 'end of statement')
    const end[267773] "dead at end of block" "const" "insert auto destroy"
    unknown tmp[579403] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[579404] "maybe param" "temp"
    unknown call_tmp[735592] "expr temp" "maybe param" "maybe type" "temp"
    (735595 'move' call_tmp[735592](267751 call - nChunks[267707] 1))
    unknown call_tmp[735597] "expr temp" "maybe param" "maybe type" "temp"
    (735600 'move' call_tmp[735597](267753 call == i[267711] call_tmp[735592]))
    (579409 'move' tmp[579404](579407 call _cond_test call_tmp[735597]))
    if tmp[579404]
    {
      unknown tmp[579411] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (579413 'move' tmp[579411](267757 call - nElems[267701] 1))
      (579418 'move' tmp[579403](579415 '_paramFoldLogical' tmp[579404] tmp[579411]))
    }
    {
      unknown tmp[579420] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735602] "expr temp" "maybe param" "maybe type" "temp"
      (735605 'move' call_tmp[735602](267762 call + m[267723] nElems[267701]))
      unknown call_tmp[735607] "expr temp" "maybe param" "maybe type" "temp"
      (735610 'move' call_tmp[735607](267766 call divceil call_tmp[735602] nChunks[267707]))
      (579422 'move' tmp[579420](267768 call - call_tmp[735607] 1))
      (579427 'move' tmp[579403](579424 '_paramFoldLogical' tmp[579404] tmp[579420]))
    }
    (548657 'init var' end[267773] tmp[579403])
    (267776 'end of statement' m[267723] m[267723])
    unknown call_tmp[735612] "expr temp" "maybe param" "maybe type" "temp"
    (735615 'move' call_tmp[735612](267780 call _build_tuple start[267744] end[267773]))
    unknown call_tmp[735617] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735620 'move' call_tmp[735617](537448 'typeof' nElems[267701]))
    unknown call_tmp[735622] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735625 'move' call_tmp[735622](537450 'typeof' nElems[267701]))
    unknown call_tmp[735627] "expr temp" "maybe param" "maybe type" "temp"
    (735630 'move' call_tmp[735627](537447 call _build_tuple call_tmp[735617] call_tmp[735622]))
    (537453 'move' ret[537442](537452 'coerce' call_tmp[735612] call_tmp[735627]))
    gotoReturn _end_chunkOrderThru[537440] _end_chunkOrderThru[537440]
    (489774 'end of statement' start[267744] end[267773])
    label _end_chunkOrderThru[537440]
    (537444 return ret[537442])
  }
  { scopeless type
    unknown call_tmp[735632] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735635 'move' call_tmp[735632](466615 'typeof' nElems[267701]))
    unknown call_tmp[735637] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735640 'move' call_tmp[735637](466617 'typeof' nElems[267701]))
    (267717 call _build_tuple call_tmp[735632] call_tmp[735637])
  }
  function chunkOrderPack[267794](arg chunkSize[267791]:_any[178](?), arg nElems[267797] :
  (466619 'typeof' chunkSize[267791]), arg i[267801] :
  (466621 'typeof' chunkSize[267791])) : _unknown[51] "no doc" "private"
  {
    unknown ret[537459] "RVV" "temp"
    unknown call_tmp[735642] "maybe param" "maybe type" "temp"
    (735645 'move' call_tmp[735642](267811 call * chunkSize[267791] i[267801]))
    const start[267813] "dead at end of block" "const" "insert auto destroy"
    (548659 'init var' start[267813] call_tmp[735642])
    (267816 'end of statement')
    unknown call_tmp[735647] "expr temp" "maybe param" "maybe type" "temp"
    (735650 'move' call_tmp[735647](267820 call >= start[267813] nElems[267797]))
    unknown call_tmp[735652] "expr temp" "maybe param" "maybe type" "temp"
    (735655 'move' call_tmp[735652](267835 call _cond_test call_tmp[735647]))
    if call_tmp[735652]
    {
      unknown call_tmp[735657] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (735660 'move' call_tmp[735657](466623 'typeof' chunkSize[267791]))
      unknown call_tmp[735662] "expr temp" "maybe param" "maybe type" "temp"
      (735665 'move' call_tmp[735662](267824 call _cast call_tmp[735657] 1))
      unknown call_tmp[735667] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (735670 'move' call_tmp[735667](466625 'typeof' chunkSize[267791]))
      unknown call_tmp[735672] "expr temp" "maybe param" "maybe type" "temp"
      (735675 'move' call_tmp[735672](267828 call _cast call_tmp[735667] 0))
      unknown call_tmp[735677] "expr temp" "maybe param" "maybe type" "temp"
      (735680 'move' call_tmp[735677](267831 call _build_tuple call_tmp[735662] call_tmp[735672]))
      unknown call_tmp[735682] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (735685 'move' call_tmp[735682](537465 'typeof' chunkSize[267791]))
      unknown call_tmp[735687] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (735690 'move' call_tmp[735687](537467 'typeof' chunkSize[267791]))
      unknown call_tmp[735692] "expr temp" "maybe param" "maybe type" "temp"
      (735695 'move' call_tmp[735692](537464 call _build_tuple call_tmp[735682] call_tmp[735687]))
      (537470 'move' ret[537459](537469 'coerce' call_tmp[735677] call_tmp[735692]))
      gotoReturn _end_chunkOrderPack[537457] _end_chunkOrderPack[537457]
    }
    unknown call_tmp[735697] "expr temp" "maybe param" "maybe type" "temp"
    (735700 'move' call_tmp[735697](267842 call + start[267813] chunkSize[267791]))
    unknown call_tmp[735702] "maybe param" "maybe type" "temp"
    (735705 'move' call_tmp[735702](267845 call - call_tmp[735697] 1))
    unknown end[267847] "dead at end of block" "insert auto destroy"
    (548661 'init var' end[267847] call_tmp[735702])
    (267850 'end of statement' start[267813])
    unknown call_tmp[735707] "expr temp" "maybe param" "maybe type" "temp"
    (735710 'move' call_tmp[735707](267853 call >= end[267847] nElems[267797]))
    unknown call_tmp[735712] "expr temp" "maybe param" "maybe type" "temp"
    (735715 'move' call_tmp[735712](267863 call _cond_test call_tmp[735707]))
    if call_tmp[735712]
    {
      unknown call_tmp[735717] "expr temp" "maybe param" "maybe type" "temp"
      (735720 'move' call_tmp[735717](267858 call - nElems[267797] 1))
      (267860 call = end[267847] call_tmp[735717])
      (489779 'end of statement' end[267847])
    }
    unknown call_tmp[735722] "expr temp" "maybe param" "maybe type" "temp"
    (735725 'move' call_tmp[735722](267871 call _build_tuple start[267813] end[267847]))
    unknown call_tmp[735727] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735730 'move' call_tmp[735727](537476 'typeof' chunkSize[267791]))
    unknown call_tmp[735732] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735735 'move' call_tmp[735732](537478 'typeof' chunkSize[267791]))
    unknown call_tmp[735737] "expr temp" "maybe param" "maybe type" "temp"
    (735740 'move' call_tmp[735737](537475 call _build_tuple call_tmp[735727] call_tmp[735732]))
    (537481 'move' ret[537459](537480 'coerce' call_tmp[735722] call_tmp[735737]))
    gotoReturn _end_chunkOrderPack[537457] _end_chunkOrderPack[537457]
    (489781 'end of statement' start[267813] end[267847])
    label _end_chunkOrderPack[537457]
    (537461 return ret[537459])
  }
  { scopeless type
    unknown call_tmp[735742] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735745 'move' call_tmp[735742](466627 'typeof' chunkSize[267791]))
    unknown call_tmp[735747] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735750 'move' call_tmp[735747](466629 'typeof' chunkSize[267791]))
    (267807 call _build_tuple call_tmp[735742] call_tmp[735747])
  }
  function chunkOrderMod[267885](arg chunkSize[267882]:_any[178](?), arg rem[267888] :
  (466631 'typeof' chunkSize[267882]), arg nElems[267892] :
  (466633 'typeof' chunkSize[267882]), arg nChunks[267896] :
  (466635 'typeof' chunkSize[267882]), arg i[267900] :
  (466637 'typeof' chunkSize[267882])) : _unknown[51] "no doc" "private"
  {
    unknown ret[537487] "RVV" "temp"
    unknown start[267908] "dead at end of block" "insert auto destroy"
    unknown call_tmp[735752] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735755 'move' call_tmp[735752](466639 'typeof' chunkSize[267882]))
    (548663 'default init var' start[267908] call_tmp[735752])
    unknown end[267912] "dead at end of block" "insert auto destroy" "split inited"
    unknown type_tmp[548665] "maybe param" "maybe type" "temp"
    (548672 'move' type_tmp[548665](548670 'typeof' start[267908]))
    (548667 'init var split decl' end[267912] type_tmp[548665])
    (267917 'end of statement' start[267908])
    unknown call_tmp[735757] "expr temp" "maybe param" "maybe type" "temp"
    (735760 'move' call_tmp[735757](267921 call < i[267900] rem[267888]))
    unknown call_tmp[735762] "expr temp" "maybe param" "maybe type" "temp"
    (735765 'move' call_tmp[735762](267969 call _cond_test call_tmp[735757]))
    if call_tmp[735762]
    {
      unknown call_tmp[735767] "expr temp" "maybe param" "maybe type" "temp"
      (735770 'move' call_tmp[735767](267927 call + chunkSize[267882] 1))
      unknown call_tmp[735772] "expr temp" "maybe param" "maybe type" "temp"
      (735775 'move' call_tmp[735772](267929 call * i[267900] call_tmp[735767]))
      (267931 call = start[267908] call_tmp[735772])
      (489785 'end of statement' start[267908])
      unknown call_tmp[735777] "maybe param" "maybe type" "temp"
      (735780 'move' call_tmp[735777](267938 call + start[267908] chunkSize[267882]))
      (548674 'init var split init' end[267912] call_tmp[735777] type_tmp[548665])
      (489787 'end of statement' end[267912] start[267908])
    }
    {
      unknown call_tmp[735782] "expr temp" "maybe param" "maybe type" "temp"
      (735785 'move' call_tmp[735782](267947 call - nChunks[267896] i[267900]))
      unknown call_tmp[735787] "expr temp" "maybe param" "maybe type" "temp"
      (735790 'move' call_tmp[735787](267950 call * call_tmp[735782] chunkSize[267882]))
      unknown call_tmp[735792] "expr temp" "maybe param" "maybe type" "temp"
      (735795 'move' call_tmp[735792](267952 call - nElems[267892] call_tmp[735787]))
      (267954 call = start[267908] call_tmp[735792])
      (489790 'end of statement' start[267908])
      unknown call_tmp[735797] "expr temp" "maybe param" "maybe type" "temp"
      (735800 'move' call_tmp[735797](267961 call + start[267908] chunkSize[267882]))
      unknown call_tmp[735802] "maybe param" "maybe type" "temp"
      (735805 'move' call_tmp[735802](267964 call - call_tmp[735797] 1))
      (548677 'init var split init' end[267912] call_tmp[735802] type_tmp[548665])
      (489792 'end of statement' end[267912] start[267908])
    }
    unknown call_tmp[735807] "expr temp" "maybe param" "maybe type" "temp"
    (735810 'move' call_tmp[735807](267976 call _build_tuple start[267908] end[267912]))
    unknown call_tmp[735812] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735815 'move' call_tmp[735812](537493 'typeof' chunkSize[267882]))
    unknown call_tmp[735817] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735820 'move' call_tmp[735817](537495 'typeof' chunkSize[267882]))
    unknown call_tmp[735822] "expr temp" "maybe param" "maybe type" "temp"
    (735825 'move' call_tmp[735822](537492 call _build_tuple call_tmp[735812] call_tmp[735817]))
    (537498 'move' ret[537487](537497 'coerce' call_tmp[735807] call_tmp[735822]))
    gotoReturn _end_chunkOrderMod[537485] _end_chunkOrderMod[537485]
    (489795 'end of statement' start[267908] end[267912])
    label _end_chunkOrderMod[537485]
    (537489 return ret[537487])
  }
  { scopeless type
    unknown call_tmp[735827] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735830 'move' call_tmp[735827](466641 'typeof' chunkSize[267882]))
    unknown call_tmp[735832] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735835 'move' call_tmp[735832](466643 'typeof' chunkSize[267882]))
    (267906 call _build_tuple call_tmp[735827] call_tmp[735832])
  }
  (355364 'used modules list'(353056 'use' ChapelStandard[20267])(266490 'use' RemElems[266485])(266493 'use' BoundedRangeType[64216]))
}