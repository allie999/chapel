AST dump for ExportWrappers after pass readExternC.
Module use list: 

{
  (172142 'use' ChapelStandard)
  (172146 'use' CPtr)
  (172149 'use' SysCTypes)
  type chpl_byte_buffer[172177] unknown isOwned[172156](172155 call int[13] 8) unknown data[172164](172163 call c_ptr c_char) unknown size[172172](172171 call uint[115] 64)
  function chpl_byte_buffer_free[172186](arg cb[172183] :
  chpl_byte_buffer) : void[4] "extern" "local args" "no fn body"
  {
  }
  unknown chpl__exportTypeChplByteBuffer[172191] "type variable" chpl_byte_buffer
  function chpl__exportRetStringOrBytes[172198](ref arg val[172196]:_any[178](?)) : _unknown[51]
  {
    { scopeless
      unknown result[172202] chpl_byte_buffer
      (172205 'end of statement')
    }
    (172221 call =(172208 call . result c"isOwned")(172219 call _cast(172218 call int[13] 8)(172212 call . val c"isOwned")))
    (172238 call =(172225 call . result c"data")(172236 call _cast(172235 call c_ptr c_char)(172229 call . val c"buff")))
    (172255 call =(172242 call . result c"size")(172253 call _cast(172252 call uint[115] 64)(172246 call . val c"numBytes")))
    (172263 call =(172259 call . val c"isOwned") 0)
    (172267 return result)
  }
  { scopeless type
    chpl_byte_buffer
  }
  function chpl__exportRet[172278](ref arg val[172275] :
  string[26], arg rt[172281] :
  chpl_byte_buffer) : _unknown[51]
  {
    (172289 return(172288 call chpl__exportRetStringOrBytes val))
  }
  { scopeless type
    rt
  }
  function chpl__exportRet[172301](ref arg val[172298] :
  bytes[24], arg rt[172304] :
  chpl_byte_buffer) : _unknown[51]
  {
    (172312 return(172311 call chpl__exportRetStringOrBytes val))
  }
  { scopeless type
    rt
  }
  function chpl__exportArg[172324](arg cp[172321] :
  bool[10], arg val[172327] :
  chpl_byte_buffer, arg rt[172331] :
  string[26]) : _unknown[51]
  {
    { scopeless
      unknown data[172342](172340 call _cast c_string(172336 call . val c"data"))
      (172345 'end of statement')
    }
    { scopeless
      unknown size[172357](172356 call(172351 call .(172348 call . val c"size") c"safeCast") int[13])
      (172360 'end of statement')
    }
    Try!
    {
      {
        if(172369 call _cond_test cp)
        {
          { scopeless
            (172367 return(172366 call createStringWithNewBuffer data size))
          }
        }
        (172380 return(172379 call createStringWithBorrowedBuffer data size))
      }
    }
  }
  { scopeless type
    rt
  }
  function chpl__exportArg[172394](arg cp[172391] :
  bool[10], arg val[172397] :
  chpl_byte_buffer, arg rt[172401] :
  bytes[24]) : _unknown[51]
  {
    { scopeless
      unknown data[172412](172410 call _cast c_string(172406 call . val c"data"))
      (172415 'end of statement')
    }
    { scopeless
      unknown size[172427](172426 call(172421 call .(172418 call . val c"size") c"safeCast") int[13])
      (172430 'end of statement')
    }
    Try!
    {
      {
        if(172439 call _cond_test cp)
        {
          { scopeless
            (172437 return(172436 call createBytesWithNewBuffer data size))
          }
        }
        (172450 return(172449 call createBytesWithBorrowedBuffer data size))
      }
    }
  }
  { scopeless type
    rt
  }
}