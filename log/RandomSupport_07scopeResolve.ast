AST dump for RandomSupport after pass scopeResolve.
Module use list: ChapelStandard Time 

{ function SeedGenerator[307532].currentTime[307440](arg _mt[307536]:_MT[238], arg this[307534]:SeedGenerator[307532]) : _unknown[51] "method" "primary method" "no parens"
  { const seed[307466] "const"(307464 call _cast(307463 call int(64)[13] 64)(307459 call getCurrentTime(unit = microseconds[335082])))(307469 'end of statement')(307471 return seed[307466])(355528 'used modules list'(307447 'use' Time[334970]))
  }
  { scopeless type(307445 call int(64)[13] 64)
  } function SeedGenerator[307532].oddCurrentTime[307478](arg _mt[307540]:_MT[238], arg this[307538]:SeedGenerator[307532]) : _unknown[51] "method" "primary method" "no parens"
  { const seed[307502] "const"(307500 call _cast(307499 call int(64)[13] 64)(307495 call getCurrentTime(unit = microseconds[335082])))(307505 'end of statement') const oddseed[307521] "const"(307518 IfExpr (307511 call ==(307508 call % seed[307502] 2) 0) then
    { scopeless(307515 call + seed[307502] 1)
    } else
    { scopeless seed[307502]
    } )(307524 'end of statement')(307526 return oddseed[307521])(355530 'used modules list'(307485 'use' Time[334970]))
  }
  { scopeless type(307483 call int(64)[13] 64)
  } type SeedGenerator[307532](355526 'used modules list'(353064 'use' ChapelStandard[20264]))
}