AST dump for RandomSupport after pass scopeResolve.
Module use list: ChapelStandard Time 

{ function SeedGenerator[307559].currentTime[307467](arg _mt[307563]:_MT[238], arg this[307561]:SeedGenerator[307559]) : _unknown[51] "method" "primary method" "no parens"
  { const seed[307493] "const"(307491 call _cast(307490 call int(64)[13] 64)(307486 call getCurrentTime(unit = microseconds[335120])))(307496 'end of statement')(307498 return seed[307493])(355568 'used modules list'(307474 'use' Time[335008]))
  }
  { scopeless type(307472 call int(64)[13] 64)
  } function SeedGenerator[307559].oddCurrentTime[307505](arg _mt[307567]:_MT[238], arg this[307565]:SeedGenerator[307559]) : _unknown[51] "method" "primary method" "no parens"
  { const seed[307529] "const"(307527 call _cast(307526 call int(64)[13] 64)(307522 call getCurrentTime(unit = microseconds[335120])))(307532 'end of statement') const oddseed[307548] "const"(307545 IfExpr (307538 call ==(307535 call % seed[307529] 2) 0) then
    { scopeless(307542 call + seed[307529] 1)
    } else
    { scopeless seed[307529]
    } )(307551 'end of statement')(307553 return oddseed[307548])(355570 'used modules list'(307512 'use' Time[335008]))
  }
  { scopeless type(307510 call int(64)[13] 64)
  } type SeedGenerator[307559](355566 'used modules list'(353104 'use' ChapelStandard[20267]))
}