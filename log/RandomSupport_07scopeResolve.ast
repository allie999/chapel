AST dump for RandomSupport after pass scopeResolve.
Module use list: ChapelStandard Time 

{ function SeedGenerator[307444].currentTime[307352](arg _mt[307448]:_MT[238], arg this[307446]:SeedGenerator[307444]) : _unknown[51] "method" "primary method" "no parens"
  { const seed[307378] "const"(307376 call _cast(307375 call int(64)[13] 64)(307371 call getCurrentTime(unit = microseconds[334994])))(307381 'end of statement')(307383 return seed[307378])(355440 'used modules list'(307359 'use' Time[334882]))
  }
  { scopeless type(307357 call int(64)[13] 64)
  } function SeedGenerator[307444].oddCurrentTime[307390](arg _mt[307452]:_MT[238], arg this[307450]:SeedGenerator[307444]) : _unknown[51] "method" "primary method" "no parens"
  { const seed[307414] "const"(307412 call _cast(307411 call int(64)[13] 64)(307407 call getCurrentTime(unit = microseconds[334994])))(307417 'end of statement') const oddseed[307433] "const"(307430 IfExpr (307423 call ==(307420 call % seed[307414] 2) 0) then
    { scopeless(307427 call + seed[307414] 1)
    } else
    { scopeless seed[307414]
    } )(307436 'end of statement')(307438 return oddseed[307433])(355442 'used modules list'(307397 'use' Time[334882]))
  }
  { scopeless type(307395 call int(64)[13] 64)
  } type SeedGenerator[307444](355438 'used modules list'(352976 'use' ChapelStandard[20264]))
}