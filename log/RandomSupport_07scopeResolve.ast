AST dump for RandomSupport after pass scopeResolve.
Module use list: ChapelStandard Time 

{ function SeedGenerator[307561].currentTime[307469](arg _mt[307565]:_MT[238], arg this[307563]:SeedGenerator[307561]) : _unknown[51] "method" "primary method" "no parens"
  { const seed[307495] "const"(307493 call _cast(307492 call int(64)[13] 64)(307488 call getCurrentTime(unit = microseconds[335122])))(307498 'end of statement')(307500 return seed[307495])(355571 'used modules list'(307476 'use' Time[335010]))
  }
  { scopeless type(307474 call int(64)[13] 64)
  } function SeedGenerator[307561].oddCurrentTime[307507](arg _mt[307569]:_MT[238], arg this[307567]:SeedGenerator[307561]) : _unknown[51] "method" "primary method" "no parens"
  { const seed[307531] "const"(307529 call _cast(307528 call int(64)[13] 64)(307524 call getCurrentTime(unit = microseconds[335122])))(307534 'end of statement') const oddseed[307550] "const"(307547 IfExpr (307540 call ==(307537 call % seed[307531] 2) 0) then
    { scopeless(307544 call + seed[307531] 1)
    } else
    { scopeless seed[307531]
    } )(307553 'end of statement')(307555 return oddseed[307550])(355573 'used modules list'(307514 'use' Time[335010]))
  }
  { scopeless type(307512 call int(64)[13] 64)
  } type SeedGenerator[307561](355569 'used modules list'(353106 'use' ChapelStandard[20267]))
}