AST dump for RandomSupport after pass scopeResolve.
Module use list: ChapelStandard Time 

{ function SeedGenerator[307461].currentTime[307369](arg _mt[307465]:_MT[238], arg this[307463]:SeedGenerator[307461]) : _unknown[51] "method" "primary method" "no parens"
  { const seed[307395] "const"(307393 call _cast(307392 call int(64)[13] 64)(307388 call getCurrentTime(unit = microseconds[335081])))(307398 'end of statement')(307400 return seed[307395])(355585 'used modules list'(307376 'use' Time[334969]))
  }
  { scopeless type(307374 call int(64)[13] 64)
  } function SeedGenerator[307461].oddCurrentTime[307407](arg _mt[307469]:_MT[238], arg this[307467]:SeedGenerator[307461]) : _unknown[51] "method" "primary method" "no parens"
  { const seed[307431] "const"(307429 call _cast(307428 call int(64)[13] 64)(307424 call getCurrentTime(unit = microseconds[335081])))(307434 'end of statement') const oddseed[307450] "const"(307447 IfExpr (307440 call ==(307437 call % seed[307431] 2) 0) then
    { scopeless(307444 call + seed[307431] 1)
    } else
    { scopeless seed[307431]
    } )(307453 'end of statement')(307455 return oddseed[307450])(355587 'used modules list'(307414 'use' Time[334969]))
  }
  { scopeless type(307412 call int(64)[13] 64)
  } type SeedGenerator[307461](355583 'used modules list'(353121 'use' ChapelStandard[20264]))
}