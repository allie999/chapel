AST dump for RandomSupport after pass scopeResolve.
Module use list: ChapelStandard Time 

{ function SeedGenerator[307628].currentTime[307536](arg _mt[307632]:_MT[238], arg this[307630]:SeedGenerator[307628]) : _unknown[51] "method" "primary method" "no parens"
  { const seed[307562] "const"(307560 call _cast(307559 call int(64)[13] 64)(307555 call getCurrentTime(unit = microseconds[335189])))(307565 'end of statement')(307567 return seed[307562])(355639 'used modules list'(307543 'use' Time[335077]))
  }
  { scopeless type(307541 call int(64)[13] 64)
  } function SeedGenerator[307628].oddCurrentTime[307574](arg _mt[307636]:_MT[238], arg this[307634]:SeedGenerator[307628]) : _unknown[51] "method" "primary method" "no parens"
  { const seed[307598] "const"(307596 call _cast(307595 call int(64)[13] 64)(307591 call getCurrentTime(unit = microseconds[335189])))(307601 'end of statement') const oddseed[307617] "const"(307614 IfExpr (307607 call ==(307604 call % seed[307598] 2) 0) then
    { scopeless(307611 call + seed[307598] 1)
    } else
    { scopeless seed[307598]
    } )(307620 'end of statement')(307622 return oddseed[307617])(355641 'used modules list'(307581 'use' Time[335077]))
  }
  { scopeless type(307579 call int(64)[13] 64)
  } type SeedGenerator[307628](355637 'used modules list'(353173 'use' ChapelStandard[20267]))
}