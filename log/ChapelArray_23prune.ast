AST dump for ChapelArray after pass prune.
Module use list: ChapelBase ChapelTuple ChapelLocale ArrayViewSlice ArrayViewRankChange ArrayViewReindex Reflection ChapelDebugPrint SysCTypes HaltWrappers Sort IO 

{
  type _class_localscoforall_fn[2217780] val _runtime_hdr[2217781]:chpl_task_bundle_t[209366] val _0_parDim[2217783]:int(64)[13] val _1_numChunks[2217785]:int(64)[13] val _2_coerce_tmp[2217787]:domain(1,int(64),false)[1251123] val _3_chunk[2217789]:int(64)[13] val _4__coforallCount[2217791]:_EndCount(AtomicT(int(64)),int(64))[945532] val _6_coerce_tmp[2217795]:[domain(1,int(64),false)] real(64)[1358944] ref _7_default_arg_offset[2217797]:1*int(64)[1256714] val _8_rhs[2217799]:real(64)[16]
  type _class_localscoforall_fn[2217594] val _runtime_hdr[2217595]:chpl_task_bundle_t[209366] val _0_locBlock[2217597]:1*range(int(64),bounded,false)[1244885] val _1_parDim[2217599]:int(64)[13] val _2_numChunks[2217601]:int(64)[13] val _3_chunk[2217603]:int(64)[13] val _4__coforallCount[2217605]:_EndCount(AtomicT(int(64)),int(64))[945532] ref _6_default_arg_offset[2217609]:1*int(64)[1256714] ref _7_chpl__iterLF[2217611]:2*[domain(1,int(64),false)] real(64)[1537560]
  type _class_localscoforall_fn[2217408] val _runtime_hdr[2217409]:chpl_task_bundle_t[209366] val _0_locBlock[2217411]:1*range(int(64),bounded,false)[1244885] val _1_parDim[2217413]:int(64)[13] val _2_numChunks[2217415]:int(64)[13] val _3_chunk[2217417]:int(64)[13] val _4__coforallCount[2217419]:_EndCount(AtomicT(int(64)),int(64))[945532] ref _6_default_arg_offset[2217423]:1*int(64)[1256714] ref _7_chpl__iterLF[2217425]:2*[domain(1,int(64),false)] real(64)[1537560]
  type _class_localscoforall_fn[2217222] val _runtime_hdr[2217223]:chpl_task_bundle_t[209366] val _0_locBlock[2217225]:1*range(int(64),bounded,false)[1244885] val _1_parDim[2217227]:int(64)[13] val _2_numChunks[2217229]:int(64)[13] val _3_chunk[2217231]:int(64)[13] val _4__coforallCount[2217233]:_EndCount(AtomicT(int(64)),int(64))[945532] ref _6_default_arg_offset[2217237]:1*int(64)[1256714] ref _7_chpl__iterLF[2217239]:2*[domain(1,int(64),false)] range(int(64),bounded,false)[1480149]
  type _class_localson_fn[2214693] val _runtime_hdr[2214694]:chpl_comm_on_bundle_t[209359] val _0_tmp[2214696]:chpl_localeID_t[209352] val _1__instance[2214698]:[domain(1,int(64),false)] uint(64)[1450261] val _2_deinitElts[2214700]:bool[10]
  type _class_localson_fn[2214348] val _runtime_hdr[2214349]:chpl_comm_on_bundle_t[209359] val _0_tmp[2214351]:chpl_localeID_t[209352] val _1__instance[2214353]:[domain(1,int(64),false)] int(64)[1368867] val _2_deinitElts[2214355]:bool[10]
  type _class_localson_fn[2214003] val _runtime_hdr[2214004]:chpl_comm_on_bundle_t[209359] val _0_tmp[2214006]:chpl_localeID_t[209352] val _1__instance[2214008]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401] val _2_deinitElts[2214010]:bool[10]
  type _class_localson_fn[2213658] val _runtime_hdr[2213659]:chpl_comm_on_bundle_t[209359] val _0_tmp[2213661]:chpl_localeID_t[209352] val _1__instance[2213663]:[domain(1,int(64),false)] locale[1256675] val _2_deinitElts[2213665]:bool[10]
  type _class_localson_fn[2213242] val _runtime_hdr[2213243]:chpl_comm_on_bundle_t[209359] val _0_tmp[2213245]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2213247]:domain(1,int(64),false)[1252786]
  type _class_localson_fn[2213157] val _runtime_hdr[2213158]:chpl_comm_on_bundle_t[209359] val _0_tmp[2213160]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2213162]:DefaultDist[1244085]
  type _class_localson_fn[2210041] val _runtime_hdr[2210042]:chpl_comm_on_bundle_t[209359] val _0_tmp[2210044]:chpl_localeID_t[209352] val _1__instance[2210046]:BaseArr[149584] val _2_deinitElts[2210048]:bool[10]
  type _class_localson_fn[2208286] val _runtime_hdr[2208287]:chpl_comm_on_bundle_t[209359] val _0_tmp[2208289]:chpl_localeID_t[209352] val _1__instance[2208291]:[domain(1,int(64),false)] real(64)[1358944] val _2_deinitElts[2208293]:bool[10]
  type _class_localson_fn[2207601] val _runtime_hdr[2207602]:chpl_comm_on_bundle_t[209359] val _0_tmp[2207604]:chpl_localeID_t[209352] val _1_pid[2207606]:int(64)[13] val _2_original[2207608]:object[22]
  type _class_localscobegin_fn[2207472] val _runtime_hdr[2207473]:chpl_task_bundle_t[209366] val _0_pid[2207475]:int(64)[13] val _1_original[2207477]:object[22] val _2__cobeginCount[2207479]:_EndCount(AtomicT(int(64)),int(64))[945532]
  type _class_localson_fn[2207388] val _runtime_hdr[2207389]:chpl_comm_on_bundle_t[209359] val _0_tmp[2207391]:chpl_localeID_t[209352] val _1_pid[2207393]:int(64)[13] val _2_original[2207395]:object[22]
  type _class_localscobegin_fn[2207259] val _runtime_hdr[2207260]:chpl_task_bundle_t[209366] val _0_pid[2207262]:int(64)[13] val _1_original[2207264]:object[22] val _2__cobeginCount[2207266]:_EndCount(AtomicT(int(64)),int(64))[945532]
  type _class_localson_fn[2207175] val _runtime_hdr[2207176]:chpl_comm_on_bundle_t[209359] val _0_tmp[2207178]:chpl_localeID_t[209352] val _1_pid[2207180]:int(64)[13] val _2_original[2207182]:object[22]
  type _class_localson_fn[2206869] val _runtime_hdr[2206870]:chpl_comm_on_bundle_t[209359] val _0_tmp[2206872]:chpl_localeID_t[209352] val _1__instance[2206874]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] val _2_deinitElts[2206876]:bool[10]
  function chpl__init_ChapelArray[416097]() : void[4] "insert line file info" "module init" "resolved"
  {
    val call_tmp[648289]:AtomicT(int(64))[940323] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref tmp[2197610]:AtomicT(int(64))[940323] "temp"
    (2197615 'move' tmp[2197610](2197612 '.' numPrivateObjects[113711] value[2197608]))
    (1024454 call init[945564] tmp[2197610])
    (519797 return _void[55])
  }
  val numPrivateObjects[113711]:heap_AtomicT_int64_t[2197606] "dead at end of block" "insert auto destroy" "no doc"
  function _freePrivatizedClass[1502772](const in arg pid[1502774]:int(64)[13], const in arg original[1502776]:object[22]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    const-val call_tmp[1502784]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1502786 'move' call_tmp[1502784](1502789 call ==[435744] pid[1502774] -1))
    const-val call_tmp[1502792]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1502794 'move' call_tmp[1502792] call_tmp[1502784])
    if call_tmp[1502792]
    {
      gotoReturn _end__freePrivatizedClass[1503101] _end__freePrivatizedClass[1503101]
    }
    const-val tmp[1502804]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1502806]:_ref(locale)[949033] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1502808 'move' call_tmp[1502806](1503124 call this[1347571] Locales[113662] 0))
    const-val call_tmp[1502813]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1503131]:BaseLocale[91204] "dead after last mention" "temp"
    (1503136 'move' _locale_tmp_[1503131](1503133 call _value[89984] call_tmp[1502806]))
    (1502815 'move' call_tmp[1502813](1502817 '_wide_get_locale' _locale_tmp_[1503131]))
    (1502819 'move' tmp[1502804] call_tmp[1502813])
    val isdirect[2207158]:bool[10] "temp"
    (2207163 'move' isdirect[2207158](2207160 call chpl_doDirectExecuteOn[187469] tmp[1502804]))
    if isdirect[2207158]
    {
      (2207167 call on_fn[1502826] pid[1502774] original[1502776])
    }
    {
      val _args_foron_fn[2207185]:_class_localson_fn[2207175] "temp"
      (2207189 'move' _args_foron_fn[2207185](2207187 'stack allocate class' _class_localson_fn[2207175]))
      (2207191 '.=' _args_foron_fn[2207185] _0_tmp[2207178] tmp[1502804])
      (2207195 '.=' _args_foron_fn[2207185] _1_pid[2207180] pid[1502774])
      (2207199 '.=' _args_foron_fn[2207185] _2_original[2207182] original[1502776])
      val _args_vforon_fn[2207203]:c_void_ptr[149] "temp"
      (2207207 'move' _args_vforon_fn[2207203](2207205 'cast_to_void_star' _args_foron_fn[2207185]))
      val _args_sizeon_fn[2207209]:int(64)[13] "temp"
      (2207213 'move' _args_sizeon_fn[2207209](2207211 'sizeof_bundle' _class_localson_fn[2207175]))
      on(2207253 call wrapon_fn[2207215] tmp[1502804] _args_vforon_fn[2207203] _args_sizeon_fn[2207209] _args_foron_fn[2207185])
    }
    {
    }
    label _end__freePrivatizedClass[1503101]
    (1503103 return _void[55])
  }
  function _makeIndexTuple[1846896](const  ref arg t[1846900]:1*int(64)[1256714], ref arg _retArg[1918870]:_ref(1*int(64))[1256784]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val ret[1846919]:1*int(64)[1256714] "dead after last mention" "RVV" "temp"
    (1846965 'move' ret[1846919](1918874 call chpl__autoCopy[1697176] t[1846900]))
    (1918872 '=' _retArg[1918870] ret[1846919])
    (1918876 return _void[55])
  }
  function _newArray[1286727](const in arg value[1286729]:[domain(1,int(64),false)] locale[1256675], ref arg _retArg[1913202]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287226]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no copy return" "resolved"
  {
    const-val ret[1286731]:[domain(1,int(64),false)] locale[1287200] "dead after last mention" "RVV" "temp"
    {
      const-val call_tmp[1286777]:[domain(1,int(64),false)] locale[1287200] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[1287144]:[domain(1,int(64),false)] locale[1287200] "dead after last mention" "delay instantiation" "temp"
      (1287147 call init[1287153] initTemp[1287144] -1 value[1286729] 0)
      (1286779 'move' call_tmp[1286777] initTemp[1287144])
      (1286785 'move' ret[1286731] call_tmp[1286777])
      gotoReturn _end__newArray[1286792] _end__newArray[1286792]
    }
    label _end__newArray[1286792]
    (1913204 '=' _retArg[1913202] ret[1286731])
    (1913206 return _void[55])
  }
  function _newArray[1324824](const in arg value[1324826]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401], ref arg _retArg[1913712]:_ref(_array(unmanaged [domain(1,int(64),false)] unmanaged localesSignal?))[1325321]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no copy return" "resolved"
  {
    const-val ret[1324828]:[domain(1,int(64),false)] unmanaged localesSignal?[1325295] "dead after last mention" "RVV" "temp"
    {
      const-val call_tmp[1324874]:[domain(1,int(64),false)] unmanaged localesSignal?[1325295] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[1325239]:[domain(1,int(64),false)] unmanaged localesSignal?[1325295] "dead after last mention" "delay instantiation" "temp"
      (1325242 call init[1325248] initTemp[1325239] -1 value[1324826] 0)
      (1324876 'move' call_tmp[1324874] initTemp[1325239])
      (1324882 'move' ret[1324828] call_tmp[1324874])
      gotoReturn _end__newArray[1324889] _end__newArray[1324889]
    }
    label _end__newArray[1324889]
    (1913714 '=' _retArg[1913712] ret[1324828])
    (1913716 return _void[55])
  }
  function _newArray[1365558](const in arg value[1365560]:[domain(1,int(64),false)] real(64)[1358944], ref arg _retArg[1914397]:_ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no copy return" "resolved"
  {
    const-val ret[1365562]:[domain(1,int(64),false)] real(64)[1366029] "dead after last mention" "RVV" "temp"
    {
      const-val call_tmp[1365608]:[domain(1,int(64),false)] real(64)[1366029] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[1365973]:[domain(1,int(64),false)] real(64)[1366029] "dead after last mention" "delay instantiation" "temp"
      (1365976 call init[1365982] initTemp[1365973] -1 value[1365560] 0)
      (1365610 'move' call_tmp[1365608] initTemp[1365973])
      (1365616 'move' ret[1365562] call_tmp[1365608])
      gotoReturn _end__newArray[1365623] _end__newArray[1365623]
    }
    label _end__newArray[1365623]
    (1914399 '=' _retArg[1914397] ret[1365562])
    (1914401 return _void[55])
  }
  function _newArray[1374033](const in arg value[1374035]:[domain(1,int(64),false)] int(64)[1368867], ref arg _retArg[1914439]:_ref(_array(unmanaged [domain(1,int(64),false)] int(64)))[1374530]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no copy return" "resolved"
  {
    const-val ret[1374037]:[domain(1,int(64),false)] int(64)[1374504] "dead after last mention" "RVV" "temp"
    {
      const-val call_tmp[1374083]:[domain(1,int(64),false)] int(64)[1374504] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[1374448]:[domain(1,int(64),false)] int(64)[1374504] "dead after last mention" "delay instantiation" "temp"
      (1374451 call init[1374457] initTemp[1374448] -1 value[1374035] 0)
      (1374085 'move' call_tmp[1374083] initTemp[1374448])
      (1374091 'move' ret[1374037] call_tmp[1374083])
      gotoReturn _end__newArray[1374098] _end__newArray[1374098]
    }
    label _end__newArray[1374098]
    (1914441 '=' _retArg[1914439] ret[1374037])
    (1914443 return _void[55])
  }
  function _newArray[1415479](const in arg value[1415481]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224], ref arg _retArg[1914921]:_ref(_array(unmanaged [domain(1,int(64),false)] range(int(64),bounded,false)))[1415976]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no copy return" "resolved"
  {
    const-val ret[1415483]:[domain(1,int(64),false)] range(int(64),bounded,false)[1415950] "dead after last mention" "RVV" "temp"
    {
      const-val call_tmp[1415529]:[domain(1,int(64),false)] range(int(64),bounded,false)[1415950] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[1415894]:[domain(1,int(64),false)] range(int(64),bounded,false)[1415950] "dead after last mention" "delay instantiation" "temp"
      (1415897 call init[1415903] initTemp[1415894] -1 value[1415481] 0)
      (1415531 'move' call_tmp[1415529] initTemp[1415894])
      (1415537 'move' ret[1415483] call_tmp[1415529])
      gotoReturn _end__newArray[1415544] _end__newArray[1415544]
    }
    label _end__newArray[1415544]
    (1914923 '=' _retArg[1914921] ret[1415483])
    (1914925 return _void[55])
  }
  function _newArray[1455676](const in arg value[1455678]:[domain(1,int(64),false)] uint(64)[1450261], ref arg _retArg[1915257]:_ref(_array(unmanaged [domain(1,int(64),false)] uint(64)))[1456173]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no copy return" "resolved"
  {
    const-val ret[1455680]:[domain(1,int(64),false)] uint(64)[1456147] "dead after last mention" "RVV" "temp"
    {
      const-val call_tmp[1455726]:[domain(1,int(64),false)] uint(64)[1456147] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[1456091]:[domain(1,int(64),false)] uint(64)[1456147] "dead after last mention" "delay instantiation" "temp"
      (1456094 call init[1456100] initTemp[1456091] -1 value[1455678] 0)
      (1455728 'move' call_tmp[1455726] initTemp[1456091])
      (1455734 'move' ret[1455680] call_tmp[1455726])
      gotoReturn _end__newArray[1455741] _end__newArray[1455741]
    }
    label _end__newArray[1455741]
    (1915259 '=' _retArg[1915257] ret[1455680])
    (1915261 return _void[55])
  }
  function _getDomain[1332626](const in arg value[1332628]:domain(1,int(64),false)[1251123], ref arg _retArg[1913891]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[1332630]:domain(1,int(64),false)[1252786] "dead after last mention" "RVV" "temp"
    val call_tmp[1332638]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1332644]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1332651]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      const-val call_tmp[1332719]:domain(1,int(64),false)[1252786] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[1332757]:domain(1,int(64),false)[1252786] "dead after last mention" "delay instantiation" "temp"
      (1332760 call init[1332768] initTemp[1332757] -1 value[1332628] 1)
      (1332721 'move' call_tmp[1332719] initTemp[1332757])
      (1332729 'move' ret[1332630] call_tmp[1332719])
      gotoReturn _end__getDomain[1332736] _end__getDomain[1332736]
    }
    label _end__getDomain[1332736]
    (1913893 '=' _retArg[1913891] ret[1332630])
    (1913895 return _void[55])
  }
  function _getDistribution[1287724](const in arg value[1287726]:DefaultDist[93992], ref arg _retArg[1913268]:_ref(DefaultDist)[1244102]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[1287728]:DefaultDist[1244085] "dead after last mention" "RVV" "temp"
    {
      const-val call_tmp[1287777]:DefaultDist[1244085] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[1287810]:DefaultDist[1244085] "dead after last mention" "delay instantiation" "temp"
      (1287813 call init[1287821] initTemp[1287810] -1 value[1287726] 1)
      (1287779 'move' call_tmp[1287777] initTemp[1287810])
      (1287787 'move' ret[1287728] call_tmp[1287777])
      gotoReturn _end__getDistribution[1287794] _end__getDistribution[1287794]
    }
    label _end__getDistribution[1287794]
    (1913270 '=' _retArg[1913268] ret[1287728])
    (1913272 return _void[55])
  }
  function chpl__buildDomainRuntimeType[1246471](const  ref arg dist[1246473]:DefaultDist[1244085]) type : _RuntimeTypeInfo[1253862] "instantiated generic" "invisible fn" "resolved" "runtime type init fn"
  {
    val _formal_type_tmp_[1879867]:int(64)[13] "temp"
    val _return_tmp_[1875886]:_RuntimeTypeInfo[1253862] "temp"
    (1875888 '.=' _return_tmp_[1875886] dist[1253863] dist[1246473])
    (1875892 return _return_tmp_[1875886])
  }
  function chpl__convertRuntimeTypeToValue[1254017](const  ref arg dist[1254019]:DefaultDist[1244085], ref arg _retArg[1911696]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    val _formal_type_tmp_[1879908]:int(64)[13] "temp"
    const-val ret[1254031]:domain(1,int(64),false)[1252786] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1254046]:domain(1,int(64),false)[1252786] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1254064]:domain(1,int(64),false)[1252786] "dead after last mention" "delay instantiation" "temp"
    (1254067 call init[1246525] initTemp[1254064] dist[1254019])
    (1254048 'move' call_tmp[1254046] initTemp[1254064])
    (1254056 'move' ret[1254031] call_tmp[1254046])
    (1911698 '=' _retArg[1911696] ret[1254031])
    (1911700 return _void[55])
  }
  function chpl__buildArrayRuntimeType[1254182](const  ref arg dom[1254184]:domain(1,int(64),false)[1252786]) type : _RuntimeTypeInfo[1287433] "instantiated generic" "invisible fn" "resolved" "runtime type init fn"
  {
    val _formal_type_tmp_[1879910]:locale[28] "temp"
    val _return_tmp_[1875895]:_RuntimeTypeInfo[1287433] "temp"
    (1875897 '.=' _return_tmp_[1875895] dom[1287434] dom[1254184])
    (1875901 return _return_tmp_[1875895])
  }
  function chpl__buildArrayRuntimeType[1316708](const  ref arg dom[1316710]:domain(1,int(64),false)[1252786]) type : _RuntimeTypeInfo[1325528] "instantiated generic" "invisible fn" "resolved" "runtime type init fn"
  {
    val _formal_type_tmp_[1879971]:localesSignal[92278] "temp"
    val _return_tmp_[1875904]:_RuntimeTypeInfo[1325528] "temp"
    (1875906 '.=' _return_tmp_[1875904] dom[1325529] dom[1316710])
    (1875910 return _return_tmp_[1875904])
  }
  function chpl__buildArrayRuntimeType[1357251](const  ref arg dom[1357253]:domain(1,int(64),false)[1252786]) type : _RuntimeTypeInfo[1366262] "instantiated generic" "invisible fn" "resolved" "runtime type init fn"
  {
    val _formal_type_tmp_[1880058]:real(64)[16] "temp"
    val _return_tmp_[1875913]:_RuntimeTypeInfo[1366262] "temp"
    (1875915 '.=' _return_tmp_[1875913] dom[1366263] dom[1357253])
    (1875919 return _return_tmp_[1875913])
  }
  function chpl__buildArrayRuntimeType[1367174](const  ref arg dom[1367176]:domain(1,int(64),false)[1252786]) type : _RuntimeTypeInfo[1374737] "instantiated generic" "invisible fn" "resolved" "runtime type init fn"
  {
    val _formal_type_tmp_[1880094]:int(64)[13] "temp"
    val _return_tmp_[1875922]:_RuntimeTypeInfo[1374737] "temp"
    (1875924 '.=' _return_tmp_[1875922] dom[1374738] dom[1367176])
    (1875928 return _return_tmp_[1875922])
  }
  function chpl__buildArrayRuntimeType[1416383](const  ref arg dom[1416385]:domain(1,int(64),false)[1252786]) type : _RuntimeTypeInfo[1417328] "instantiated generic" "invisible fn" "resolved" "runtime type init fn"
  {
    val _formal_type_tmp_[1880185]:range(int(64),bounded,false)[1027003] "temp"
    val _return_tmp_[1875931]:_RuntimeTypeInfo[1417328] "temp"
    (1875933 '.=' _return_tmp_[1875931] dom[1417329] dom[1416385])
    (1875937 return _return_tmp_[1875931])
  }
  function chpl__buildArrayRuntimeType[1448568](const  ref arg dom[1448570]:domain(1,int(64),false)[1252786]) type : _RuntimeTypeInfo[1456380] "instantiated generic" "invisible fn" "resolved" "runtime type init fn"
  {
    val _formal_type_tmp_[1880207]:uint(64)[115] "temp"
    val _return_tmp_[1875940]:_RuntimeTypeInfo[1456380] "temp"
    (1875942 '.=' _return_tmp_[1875940] dom[1456381] dom[1448570])
    (1875946 return _return_tmp_[1875940])
  }
  function chpl__convertRuntimeTypeToValue[1297880](const  ref arg dom[1297882]:domain(1,int(64),false)[1252786], ref arg _retArg[1913376]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287226]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    val _formal_type_tmp_[1879963]:locale[28] "temp"
    const-val ret[1297888]:[domain(1,int(64),false)] locale[1287200] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1297907]:[domain(1,int(64),false)] locale[1287200] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1911702]:[domain(1,int(64),false)] locale[1287200] "temp"
    (1297915 call buildArray[1254230] dom[1297882] ret_tmp[1911702])
    (1911705 'move' call_tmp[1297907] ret_tmp[1911702])
    (1297918 'move' ret[1297888] call_tmp[1297907])
    (1913378 '=' _retArg[1913376] ret[1297888])
    (1913380 return _void[55])
  }
  function chpl__convertRuntimeTypeToValue[1350760](const  ref arg dom[1350762]:domain(1,int(64),false)[1252786], ref arg _retArg[1913975]:_ref(_array(unmanaged [domain(1,int(64),false)] unmanaged localesSignal?))[1325321]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    val _formal_type_tmp_[1880019]:localesSignal[92278] "temp"
    const-val ret[1350768]:[domain(1,int(64),false)] unmanaged localesSignal?[1325295] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1350787]:[domain(1,int(64),false)] unmanaged localesSignal?[1325295] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1913688]:[domain(1,int(64),false)] unmanaged localesSignal?[1325295] "temp"
    (1350795 call buildArray[1316756] dom[1350762] ret_tmp[1913688])
    (1913691 'move' call_tmp[1350787] ret_tmp[1913688])
    (1350798 'move' ret[1350768] call_tmp[1350787])
    (1913977 '=' _retArg[1913975] ret[1350768])
    (1913979 return _void[55])
  }
  function chpl__convertRuntimeTypeToValue[1380051](const  ref arg dom[1380053]:domain(1,int(64),false)[1252786], ref arg _retArg[1914517]:_ref(_array(unmanaged [domain(1,int(64),false)] int(64)))[1374530]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    val _formal_type_tmp_[1880130]:int(64)[13] "temp"
    const-val ret[1380059]:[domain(1,int(64),false)] int(64)[1374504] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1380078]:[domain(1,int(64),false)] int(64)[1374504] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1914415]:[domain(1,int(64),false)] int(64)[1374504] "temp"
    (1380086 call buildArray[1367222] dom[1380053] ret_tmp[1914415])
    (1914418 'move' call_tmp[1380078] ret_tmp[1914415])
    (1380089 'move' ret[1380059] call_tmp[1380078])
    (1914519 '=' _retArg[1914517] ret[1380059])
    (1914521 return _void[55])
  }
  function chpl__convertRuntimeTypeToValue[1474905](const  ref arg dom[1474907]:domain(1,int(64),false)[1252786], ref arg _retArg[1915496]:_ref(_array(unmanaged [domain(1,int(64),false)] uint(64)))[1456173]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    val _formal_type_tmp_[1880243]:uint(64)[115] "temp"
    const-val ret[1474913]:[domain(1,int(64),false)] uint(64)[1456147] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1474932]:[domain(1,int(64),false)] uint(64)[1456147] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1915233]:[domain(1,int(64),false)] uint(64)[1456147] "temp"
    (1474940 call buildArray[1448616] dom[1474907] ret_tmp[1915233])
    (1915236 'move' call_tmp[1474932] ret_tmp[1915233])
    (1474943 'move' ret[1474913] call_tmp[1474932])
    (1915498 '=' _retArg[1915496] ret[1474913])
    (1915500 return _void[55])
  }
  function chpl__convertRuntimeTypeToValue[1547084](const  ref arg dom[1547086]:domain(1,int(64),false)[1252786], ref arg _retArg[1916799]:_ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    val _formal_type_tmp_[1880267]:real(64)[16] "temp"
    const-val ret[1547092]:[domain(1,int(64),false)] real(64)[1366029] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1547111]:[domain(1,int(64),false)] real(64)[1366029] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1914373]:[domain(1,int(64),false)] real(64)[1366029] "temp"
    (1547119 call buildArray[1357299] dom[1547086] ret_tmp[1914373])
    (1914376 'move' call_tmp[1547111] ret_tmp[1914373])
    (1547122 'move' ret[1547092] call_tmp[1547111])
    (1916801 '=' _retArg[1916799] ret[1547092])
    (1916803 return _void[55])
  }
  function chpl__convertValueToRuntimeType[1416231](const  ref arg arr[1416233]:[domain(1,int(64),false)] range(int(64),bounded,false)[1415950]) : _RuntimeTypeInfo[1417328] "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1416235]:_RuntimeTypeInfo[1417328] "dead after last mention" "RVV" "temp" "type variable"
    const-val call_tmp[1416243]:domain(1,int(64),false)[1252786] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1914927]:domain(1,int(64),false)[1252786] "temp"
    (1416248 call _dom[1416274] arr[1416233] ret_tmp[1914927])
    (1914930 'move' call_tmp[1416243] ret_tmp[1914927])
    val call_tmp[1416251]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1416259]:_RuntimeTypeInfo[1417328] "dead after last mention" "expr temp" "maybe param" "temp"
    (1416261 'move' call_tmp[1416259](1416264 call chpl__buildArrayRuntimeType[1416383] call_tmp[1416243]))
    (1416267 'move' ret[1416235] call_tmp[1416259])
    (1925973 call chpl__autoDestroy[1697012] call_tmp[1416243])
    (1416271 return ret[1416235])
  }
  function chpl__convertValueToRuntimeType[1461748](const  ref arg arr[1461750]:[domain(1,int(64),false)] uint(64)[1456147]) : _RuntimeTypeInfo[1456380] "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1461752]:_RuntimeTypeInfo[1456380] "dead after last mention" "RVV" "temp" "type variable"
    const-val call_tmp[1461760]:domain(1,int(64),false)[1252786] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1915310]:domain(1,int(64),false)[1252786] "temp"
    (1461765 call _dom[1461791] arr[1461750] ret_tmp[1915310])
    (1915313 'move' call_tmp[1461760] ret_tmp[1915310])
    val call_tmp[1461768]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1461776]:_RuntimeTypeInfo[1456380] "dead after last mention" "expr temp" "maybe param" "temp"
    (1461778 'move' call_tmp[1461776](1461781 call chpl__buildArrayRuntimeType[1448568] call_tmp[1461760]))
    (1461784 'move' ret[1461752] call_tmp[1461776])
    (1926377 call chpl__autoDestroy[1697012] call_tmp[1461760])
    (1461788 return ret[1461752])
  }
  function chpl__convertValueToRuntimeType[1517719](const  ref arg arr[1517721]:[domain(1,int(64),false)] real(64)[1366029]) : _RuntimeTypeInfo[1366262] "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1517723]:_RuntimeTypeInfo[1366262] "dead after last mention" "RVV" "temp" "type variable"
    const-val call_tmp[1517731]:domain(1,int(64),false)[1252786] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1914719]:domain(1,int(64),false)[1252786] "temp"
    (1517736 call _dom[1397434] arr[1517721] ret_tmp[1914719])
    (1914722 'move' call_tmp[1517731] ret_tmp[1914719])
    val call_tmp[1517739]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1517747]:_RuntimeTypeInfo[1366262] "dead after last mention" "expr temp" "maybe param" "temp"
    (1517749 'move' call_tmp[1517747](1517752 call chpl__buildArrayRuntimeType[1357251] call_tmp[1517731]))
    (1517755 'move' ret[1517723] call_tmp[1517747])
    (1926793 call chpl__autoDestroy[1697012] call_tmp[1517731])
    (1517759 return ret[1517723])
  }
  function chpl__buildArrayExpr[1366682](const in arg _e0_elems[1366684]:int(64)[13], ref arg _retArg[1914409]:_ref(_array(unmanaged [domain(1,int(64),false)] int(64)))[1374530]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "ignore transfer errors"
  {
    const-val elems[1366692]:1*int(64)[1256714] "insert auto destroy"
    const-val ret_tmp[1911756]:1*int(64)[1256714] "temp"
    (1366697 call chpl__init_tuple[1256732] _e0_elems[1366684] ret_tmp[1911756])
    (1911759 'move' elems[1366692] ret_tmp[1911756])
    const-val ret[1366686]:[domain(1,int(64),false)] int(64)[1374504] "dead after last mention" "RVV" "temp"
    val elemType[1366803]:int(64)[13] "dead at end of block" "insert auto destroy" "type variable"
    const-val A[1366813]:[domain(1,int(64),false)] int(64)[1374504] "dead at end of block" "insert auto destroy" "unsafe"
    const-val call_tmp[1366815]:range(int(64),boundedLow,false)[1087754] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1909552]:range(int(64),boundedLow,false)[1087754] "temp"
    (1366820 call chpl_build_low_bounded_range[1087147] 0 ret_tmp[1909552])
    (1909555 'move' call_tmp[1366815] ret_tmp[1909552])
    const-val call_tmp[1366822]:range(int(64),bounded,false)[1027003] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1909654]:range(int(64),bounded,false)[1027003] "temp"
    (1366827 call #[1088114] call_tmp[1366815] 1 ret_tmp[1909654])
    (1909657 'move' call_tmp[1366822] ret_tmp[1909654])
    const-val call_tmp[1366830]:domain(1,int(64),false)[1252786] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1913640]:domain(1,int(64),false)[1252786] "temp"
    (1366835 call chpl__ensureDomainExpr[1316567] call_tmp[1366822] ret_tmp[1913640])
    (1913643 'move' call_tmp[1366830] ret_tmp[1913640])
    const-val call_tmp[1366837]:_RuntimeTypeInfo[1374737] "dead at end of block" "expr temp" "maybe param" "temp"
    (1366839 'move' call_tmp[1366837](1366842 call chpl__buildArrayRuntimeType[1367174] call_tmp[1366830]))
    const-val _runtime_type_tmp_[1380039]:domain(1,int(64),false)[1252786] "dead at end of block" "temp"
    (1380044 'move' _runtime_type_tmp_[1380039](1878539 '.v' call_tmp[1366837] dom[1374738]))
    const-val ret_tmp[1914475]:[domain(1,int(64),false)] int(64)[1374504] "temp"
    (1380037 call chpl__convertRuntimeTypeToValue[1380051] _runtime_type_tmp_[1380039] ret_tmp[1914475])
    (1914478 'move' A[1366813] ret_tmp[1914475])
    {
      const-val i[1366851]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1366853 'move' i[1366851] 0)
      {
        {
          val currType[1374785]:int(64)[13] "dead at end of block" "insert auto destroy" "type variable"
          ref call_tmp[1374894]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
          (1374896 'move' call_tmp[1374894](1374899 call this[1375310] A[1366813] 0))
          ref call_tmp[1374901]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
          (1374903 'move' call_tmp[1374901](1379674 '.' elems[1366692] x0[1256712]))
          const-val coerce_tmp[1379677]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1379681 'move' coerce_tmp[1379677](1379679 'deref' call_tmp[1374901]))
          (1374909 call =[435443] call_tmp[1374894] coerce_tmp[1379677])
        }
      }
      label _continueLabel0[1374767]
      label _unused_continueLabel[1367046]
      label _breakLabel[1367048]
    }
    (1367050 'move' ret[1366686] A[1366813])
    (1925611 call chpl__autoDestroy[1697012] call_tmp[1366830])
    (1925614 call chpl__autoDestroy[1407763] call_tmp[1366822])
    (1925617 call chpl__autoDestroy[1680875] call_tmp[1366815])
    (1925620 call chpl__autoDestroy[1697253] elems[1366692])
    gotoReturn _end_chpl__buildArrayExpr[1367058] _end_chpl__buildArrayExpr[1367058]
    label _end_chpl__buildArrayExpr[1367058]
    (1914411 '=' _retArg[1914409] ret[1366686])
    (1914413 return _void[55])
  }
  function chpl_incRefCountsForDomainsInArrayEltTypes[1286592](const in arg arr[1286594]:BaseArr[149584]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[1879953]:locale[28] "temp"
    (1286685 return _void[55])
  }
  function chpl_incRefCountsForDomainsInArrayEltTypes[1324689](const in arg arr[1324691]:BaseArr[149584]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[1880008]:localesSignal[92278] "temp"
    (1324782 return _void[55])
  }
  function chpl_incRefCountsForDomainsInArrayEltTypes[1365423](const in arg arr[1365425]:BaseArr[149584]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[1880092]:real(64)[16] "temp"
    (1365516 return _void[55])
  }
  function chpl_incRefCountsForDomainsInArrayEltTypes[1373898](const in arg arr[1373900]:BaseArr[149584]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[1880128]:int(64)[13] "temp"
    (1373991 return _void[55])
  }
  function chpl_incRefCountsForDomainsInArrayEltTypes[1415344](const in arg arr[1415346]:BaseArr[149584]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[1880183]:range(int(64),bounded,false)[1027003] "temp"
    (1415437 return _void[55])
  }
  function chpl_incRefCountsForDomainsInArrayEltTypes[1455541](const in arg arr[1455543]:BaseArr[149584]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[1880241]:uint(64)[115] "temp"
    (1455634 return _void[55])
  }
  function chpl_decRefCountsForDomainsInArrayEltTypes[1509986](const in arg arr[1509988]:BaseArr[149584]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[1880249]:range(int(64),bounded,false)[1027003] "temp"
    (1510326 return _void[55])
  }
  function chpl_decRefCountsForDomainsInArrayEltTypes[1838081](const in arg arr[1838083]:BaseArr[149584]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[1880362]:locale[28] "temp"
    (1838421 return _void[55])
  }
  function chpl_decRefCountsForDomainsInArrayEltTypes[1838563](const in arg arr[1838565]:BaseArr[149584]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[1880364]:localesSignal[92278] "temp"
    (1838903 return _void[55])
  }
  function chpl_decRefCountsForDomainsInArrayEltTypes[1839045](const in arg arr[1839047]:BaseArr[149584]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[1880366]:real(64)[16] "temp"
    (1839385 return _void[55])
  }
  function chpl_decRefCountsForDomainsInArrayEltTypes[1839527](const in arg arr[1839529]:BaseArr[149584]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[1880368]:int(64)[13] "temp"
    (1839867 return _void[55])
  }
  function chpl_decRefCountsForDomainsInArrayEltTypes[1840145](const in arg arr[1840147]:BaseArr[149584]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[1880370]:uint(64)[115] "temp"
    (1840485 return _void[55])
  }
  function chpl__buildDomainExpr[1244857](const in arg _e0_ranges[1244859]:range(int(64),bounded,false)[1027003], ref arg _retArg[1911586]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ranges[1245573]:1*range(int(64),bounded,false)[1244885] "insert auto destroy"
    const-val ret_tmp[1911594]:1*range(int(64),bounded,false)[1244885] "temp"
    (1245578 call chpl__init_tuple[1244903] _e0_ranges[1244859] ret_tmp[1911594])
    (1911597 'move' ranges[1245573] ret_tmp[1911594])
    const-val ret[1244873]:domain(1,int(64),false)[1252786] "dead after last mention" "RVV" "temp"
    {
      const-val i[1245598]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1245600 'move' i[1245598] 0)
      label _unused_continueLabel[1245698]
      label _breakLabel[1245700]
    }
    {
      const-val i[1245703]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1245705 'move' i[1245703] 0)
      {
        ref call_tmp[1246228]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
        (1246230 'move' call_tmp[1246228](1246264 '.' ranges[1245573] x0[1244883]))
      }
      label _continueLabel0[1246225]
      label _unused_continueLabel[1245786]
      label _breakLabel[1245788]
    }
    const-val d[1245790]:domain(1,int(64),false)[1252786] "dead at end of block" "insert auto destroy"
    ref call_tmp[1245792]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
    (1245794 'move' call_tmp[1245792](1246275 '.' ranges[1245573] x0[1244883]))
    val call_tmp[1245799]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
    const-val coerce_tmp[1246278]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1246282 'move' coerce_tmp[1246278](1911590 call chpl__initCopy[1085195] call_tmp[1245792]))
    const-val call_tmp[1245814]:_RuntimeTypeInfo[1253862] "dead at end of block" "expr temp" "maybe param" "temp"
    (1245816 'move' call_tmp[1245814](1245819 call chpl__buildDomainRuntimeType[1246471] defaultDist[94053]))
    const-val _runtime_type_tmp_[1254003]:DefaultDist[1244085] "dead at end of block" "temp"
    (1254008 'move' _runtime_type_tmp_[1254003](1878349 '.v' call_tmp[1245814] dist[1253863]))
    const-val ret_tmp[1911684]:domain(1,int(64),false)[1252786] "temp"
    (1254001 call chpl__convertRuntimeTypeToValue[1254017] _runtime_type_tmp_[1254003] ret_tmp[1911684])
    (1911687 'move' d[1245790] ret_tmp[1911684])
    (1924692 call chpl__autoDestroy[1407763] coerce_tmp[1246278])
    (1245832 call setIndices[1253919] d[1245790] ranges[1245573])
    (1245836 'move' ret[1244873] d[1245790])
    (1924695 call chpl__autoDestroy[1695146] ranges[1245573])
    gotoReturn _end_chpl__buildDomainExpr[1245844] _end_chpl__buildDomainExpr[1245844]
    label _end_chpl__buildDomainExpr[1245844]
    (1911588 '=' _retArg[1911586] ret[1244873])
    (1911592 return _void[55])
  }
  function chpl__ensureDomainExpr[1254163](const  ref arg x[1254165]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812]) const ref : _ref(_domain(unmanaged domain(1,int(64),false)))[1252812] "instantiated generic" "invisible fn" "resolved"
  {
    ref ret[1254167]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812] "dead after last mention" "RVV" "temp"
    (1254175 'move' ret[1254167] x[1254165])
    (1254179 return ret[1254167])
  }
  function chpl__ensureDomainExpr[1316567](const in arg _e0_x[1316569]:range(int(64),bounded,false)[1027003], ref arg _retArg[1913682]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812]) : void[4] "compiler generated" "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "last resort" "resolved"
  {
    const-val ret[1316571]:domain(1,int(64),false)[1252786] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1316579]:domain(1,int(64),false)[1252786] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1911242]:domain(1,int(64),false)[1252786] "temp"
    (1316584 call chpl__buildDomainExpr[1244857] _e0_x[1316569] ret_tmp[1911242])
    (1911245 'move' call_tmp[1316579] ret_tmp[1911242])
    (1316586 'move' ret[1316571] call_tmp[1316579])
    (1913684 '=' _retArg[1913682] ret[1316571])
    (1913686 return _void[55])
  }
  function chpl__domainFromArrayRuntimeType[1418401](const  ref arg rtt[1418403]:_RuntimeTypeInfo[1417328], ref arg _retArg[1914993]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "return not owned"
  {
    const-val ret[1418405]:domain(1,int(64),false)[1252786] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1418413]:domain(1,int(64),false)[1252786] "dead at end of block" "maybe param" "temp"
    (1418415 'move' call_tmp[1418413](1878585 '.v' rtt[1418403] dom[1417329]))
    const-val dom[1418420]:domain(1,int(64),false)[1252786] "dead at end of block" "no auto destroy" "no copy"
    (1418422 'move' dom[1418420] call_tmp[1418413])
    val call_tmp[1418426]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp"
    (1418428 'move' call_tmp[1418426](1418431 call _value[1253027] dom[1418420]))
    const-val call_tmp[1418434]:domain(1,int(64),false)[1252786] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1913849]:domain(1,int(64),false)[1252786] "temp"
    (1418439 call _getDomain[1332626] call_tmp[1418426] ret_tmp[1913849])
    (1913852 'move' call_tmp[1418434] ret_tmp[1913849])
    (1418441 'move' ret[1418405] call_tmp[1418434])
    gotoReturn _end_chpl__domainFromArrayRuntimeType[1418449] _end_chpl__domainFromArrayRuntimeType[1418449]
    label _end_chpl__domainFromArrayRuntimeType[1418449]
    (1914995 '=' _retArg[1914993] ret[1418405])
    (1914997 return _void[55])
  }
  function chpl__domainFromArrayRuntimeType[1518797](const  ref arg rtt[1518799]:_RuntimeTypeInfo[1366262], ref arg _retArg[1916361]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "return not owned"
  {
    const-val ret[1518801]:domain(1,int(64),false)[1252786] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1518809]:domain(1,int(64),false)[1252786] "dead at end of block" "maybe param" "temp"
    (1518811 'move' call_tmp[1518809](1878753 '.v' rtt[1518799] dom[1366263]))
    const-val dom[1518816]:domain(1,int(64),false)[1252786] "dead at end of block" "no auto destroy" "no copy"
    (1518818 'move' dom[1518816] call_tmp[1518809])
    val call_tmp[1518822]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp"
    (1518824 'move' call_tmp[1518822](1518827 call _value[1253027] dom[1518816]))
    const-val call_tmp[1518830]:domain(1,int(64),false)[1252786] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1913861]:domain(1,int(64),false)[1252786] "temp"
    (1518835 call _getDomain[1332626] call_tmp[1518822] ret_tmp[1913861])
    (1913864 'move' call_tmp[1518830] ret_tmp[1913861])
    (1518837 'move' ret[1518801] call_tmp[1518830])
    gotoReturn _end_chpl__domainFromArrayRuntimeType[1518845] _end_chpl__domainFromArrayRuntimeType[1518845]
    label _end_chpl__domainFromArrayRuntimeType[1518845]
    (1916363 '=' _retArg[1916361] ret[1518801])
    (1916365 return _void[55])
  }
  function chpl__buildDistValue[1243510](const in arg x[1243512]:DefaultDist[93992], ref arg _retArg[1911224]:_ref(DefaultDist)[1244102]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[1243534]:DefaultDist[1244085] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1243552]:DefaultDist[1244085] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1243567]:DefaultDist[1244085] "dead after last mention" "delay instantiation" "temp"
    (1243570 call init[1243575] initTemp[1243567] x[1243512])
    (1243554 'move' call_tmp[1243552] initTemp[1243567])
    (1243559 'move' ret[1243534] call_tmp[1243552])
    (1911226 '=' _retArg[1911224] ret[1243534])
    (1911228 return _void[55])
  }
  function DefaultDist[1244085].init[1287821](ref arg this[1287825]:DefaultDist[1244085], const in arg _pid[1287827]:int(64)[13], const in arg _instance[1287829]:DefaultDist[93992], const in arg _unowned[1287831]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val tmp[1287837]:int(64)[13] "dead after last mention" "temp"
    (1287839 'move' tmp[1287837] _pid[1287827])
    (1287843 '.=' this[1287825] _pid[1244076] tmp[1287837])
    val tmp[1287848]:DefaultDist[93992] "dead after last mention" "temp"
    (1287850 'move' tmp[1287848](1287873 call chpl__initCopy[1243995] _instance[1287829]))
    (1287853 '.=' this[1287825] _instance[1244079] tmp[1287848])
    val tmp[1287858]:bool[10] "dead after last mention" "temp"
    (1287860 'move' tmp[1287858] _unowned[1287831])
    (1287864 '.=' this[1287825] _unowned[1244081] tmp[1287858])
    (1287869 return _void[55])
  }
  function DefaultDist[1244085].init[1243575](ref arg this[1243579]:DefaultDist[1244085], const in arg value[1243581]:DefaultDist[93992]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val tmp[1243587]:int(64)[13] "dead after last mention" "temp"
    (1243626 'move' tmp[1243587] -1)
    (1243630 '.=' this[1243579] _pid[1244076] tmp[1243587])
    val call_tmp[1243635]:DefaultDist[93992] "dead after last mention" "maybe param" "temp"
    (1243637 'move' call_tmp[1243635](1243640 call _to_unmanaged[1244029] value[1243581]))
    val tmp[1243642]:DefaultDist[93992] "dead after last mention" "temp"
    (1243644 'move' tmp[1243642](1244072 call chpl__initCopy[1243995] call_tmp[1243635]))
    (1243647 '.=' this[1243579] _instance[1244079] tmp[1243642])
    val tmp[1243652]:bool[10] "dead after last mention" "temp"
    (1244107 'move' tmp[1243652] 0)
    (1243657 '.=' this[1243579] _unowned[1244081] tmp[1243652])
    (1243662 return _void[55])
  }
  function _ref(DefaultDist)[1244102]._value[1246607](const  ref arg this[1246611]:_ref(DefaultDist)[1244102]) : DefaultDist[93992] "inline" "instantiated generic" "invisible fn" "method" "primary method" "no parens" "resolved"
  {
    val ret[1246613]:DefaultDist[93992] "dead after last mention" "RVV" "temp"
    ref call_tmp[1246621]:_ref(DefaultDist)[1209063] "dead after last mention" "maybe param" "temp"
    (1246623 'move' call_tmp[1246621](1246626 call _instance[1246703] this[1246611]))
    {
      ref call_tmp[1246683]:_ref(DefaultDist)[1209063] "dead after last mention" "maybe param" "temp"
      (1246685 'move' call_tmp[1246683](1246688 call _instance[1246703] this[1246611]))
      (1246691 'move' ret[1246613](1246693 'deref' call_tmp[1246683]))
      gotoReturn _end__value[1246698] _end__value[1246698]
    }
    label _end__value[1246698]
    (1246700 return ret[1246613])
  }
  function _ref(DefaultDist)[1244102]._do_destroy[1694722](const  ref arg this[1694726]:_ref(DefaultDist)[1244102]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    const-val tmp[1694732]:bool[10] "dead after last mention" "maybe param" "temp"
    ref call_tmp[1694734]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (1694736 'move' call_tmp[1694734](1694739 call _unowned[1694936] this[1694726]))
    const-val coerce_tmp[1694964]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1694968 'move' coerce_tmp[1694964](1694966 'deref' call_tmp[1694734]))
    (1694742 'move' tmp[1694732](1694745 call ![7494] coerce_tmp[1694964]))
    val tmp[1694760]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1694762]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1694764]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1694766 'move' call_tmp[1694764] tmp[1694732])
    (1694771 'move' tmp[1694762] call_tmp[1694764])
    if tmp[1694762]
    {
      ref call_tmp[1694780]:_ref(DefaultDist)[1209063] "dead after last mention" "maybe param" "temp"
      (1694782 'move' call_tmp[1694780](1694785 call _instance[1246703] this[1694726]))
      (1694809 'move' tmp[1694760] 0)
    }
    {
      (1694815 'move' tmp[1694760] 0)
    }
    const-val call_tmp[1694821]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1694823 'move' call_tmp[1694821] tmp[1694760])
    if call_tmp[1694821]
    {
      const-val tmp[1694830]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
      ref call_tmp[1694832]:_ref(DefaultDist)[1209063] "dead after last mention" "maybe param" "temp"
      (1694834 'move' call_tmp[1694832](1694837 call _instance[1246703] this[1694726]))
      const-val call_tmp[1694840]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
      (1694842 'move' call_tmp[1694840](1694844 '_wide_get_locale' call_tmp[1694832]))
      (1694846 'move' tmp[1694830] call_tmp[1694840])
      val rvfDerefTmp[2196943]:DefaultDist[1244085] "temp"
      (2196947 'move' rvfDerefTmp[2196943](2196945 'deref' this[1694726]))
      val isdirect[2213141]:bool[10] "temp"
      (2213146 'move' isdirect[2213141](2213143 call chpl_doDirectExecuteOn[187469] tmp[1694830]))
      if isdirect[2213141]
      {
        (2213150 call on_fn[1694853] rvfDerefTmp[2196943])
      }
      {
        val _args_foron_fn[2213165]:_class_localson_fn[2213157] "temp"
        (2213169 'move' _args_foron_fn[2213165](2213167 'stack allocate class' _class_localson_fn[2213157]))
        (2213171 '.=' _args_foron_fn[2213165] _0_tmp[2213160] tmp[1694830])
        (2213175 '.=' _args_foron_fn[2213165] _1_rvfDerefTmp[2213162] rvfDerefTmp[2196943])
        val _args_vforon_fn[2213179]:c_void_ptr[149] "temp"
        (2213183 'move' _args_vforon_fn[2213179](2213181 'cast_to_void_star' _args_foron_fn[2213165]))
        val _args_sizeon_fn[2213185]:int(64)[13] "temp"
        (2213189 'move' _args_sizeon_fn[2213185](2213187 'sizeof_bundle' _class_localson_fn[2213157]))
        on(2213221 call wrapon_fn[2213191] tmp[1694830] _args_vforon_fn[2213179] _args_sizeon_fn[2213185] _args_foron_fn[2213165])
      }
      {
      }
    }
    (1694933 return _void[55])
  }
  function _ref(DefaultDist)[1244102].deinit[1694690](const  ref arg this[1694694]:_ref(DefaultDist)[1244102]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    (1694704 call _do_destroy[1694722] this[1694694])
    (1694705 return _void[55])
  }
  function _ref(DefaultDist)[1244102].clone[1325798](const  ref arg this[1325802]:_ref(DefaultDist)[1244102], ref arg _retArg[1913724]:_ref(DefaultDist)[1244102]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    const-val ret[1325804]:DefaultDist[1244085] "dead after last mention" "RVV" "temp"
    val call_tmp[1325812]:DefaultDist[93992] "dead after last mention" "expr temp" "maybe param" "temp"
    (1325814 'move' call_tmp[1325812](1325817 call _value[1246607] this[1325802]))
    val call_tmp[1325820]:DefaultDist[93992] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1325844]:DefaultDist[93992] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1325849 'move' coerce_tmp[1325844] call_tmp[1325812])
    (1325822 'move' call_tmp[1325820](1325828 call dsiClone[93900] coerce_tmp[1325844]))
    const-val call_tmp[1325829]:DefaultDist[1244085] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1325854]:DefaultDist[1244085] "dead after last mention" "delay instantiation" "temp"
    (1325857 call init[1243575] initTemp[1325854] call_tmp[1325820])
    (1325831 'move' call_tmp[1325829] initTemp[1325854])
    (1325836 'move' ret[1325804] call_tmp[1325829])
    (1913726 '=' _retArg[1913724] ret[1325804])
    (1913728 return _void[55])
  }
  function _ref(DefaultDist)[1244102].newRectangularDom[1247097](const  ref arg this[1247101]:_ref(DefaultDist)[1244102], const  ref arg ranges[1247123]:1*range(int(64),bounded,false)[1244885]) : domain(1,int(64),false)[1251123] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val _formal_type_tmp_[1879873]:int(64)[13] "temp"
    val ret[1247125]:domain(1,int(64),false)[1251123] "dead after last mention" "RVV" "temp"
    val call_tmp[1247145]:DefaultDist[93992] "dead at end of block" "expr temp" "maybe param" "temp"
    (1247147 'move' call_tmp[1247145](1247150 call _value[1246607] this[1247101]))
    val call_tmp[1247153]:domain(1,int(64),false)[1251123] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1247317]:DefaultDist[93992] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1247322 'move' coerce_tmp[1247317] call_tmp[1247145])
    (1247155 'move' call_tmp[1247153](1247161 call dsiNewRectangularDom[1247221] coerce_tmp[1247317] ranges[1247123]))
    val x[1247166]:domain(1,int(64),false)[1251123] "dead at end of block" "insert auto destroy"
    (1247168 'move' x[1247166](1252183 call chpl__initCopy[1251478] call_tmp[1247153]))
    (1247207 'move' ret[1247125] x[1247166])
    gotoReturn _end_newRectangularDom[1247215] _end_newRectangularDom[1247215]
    label _end_newRectangularDom[1247215]
    (1247217 return ret[1247125])
  }
  function _ref(DefaultDist)[1244102].newRectangularDom[1246736](const  ref arg this[1246740]:_ref(DefaultDist)[1244102]) : domain(1,int(64),false)[1251123] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val _formal_type_tmp_[1879871]:int(64)[13] "temp"
    val ret[1246748]:domain(1,int(64),false)[1251123] "dead after last mention" "RVV" "temp"
    const-val ranges[1246762]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "insert auto destroy"
    val call_tmp[1246764]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1246773]:1*range(int(64),bounded,false)[1244885] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val ret_tmp[1911648]:1*range(int(64),bounded,false)[1244885] "temp"
    (1252213 call _defaultOf[1251254] ret_tmp[1911648])
    (1911651 'move' ranges[1246762] ret_tmp[1911648])
    val call_tmp[1246785]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp"
    (1246787 'move' call_tmp[1246785](1246793 call newRectangularDom[1247097] this[1246740] ranges[1246762]))
    (1246798 'move' ret[1246748] call_tmp[1246785])
    (1924698 call chpl__autoDestroy[1695146] ranges[1246762])
    gotoReturn _end_newRectangularDom[1246806] _end_newRectangularDom[1246806]
    label _end_newRectangularDom[1246806]
    (1246808 return ret[1246748])
  }
  function _ref(DefaultDist)[1244102]._instance[1246703](ref arg this[1246707]:_ref(DefaultDist)[1244102]) ref : _ref(DefaultDist)[1209063] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[1246709]:_ref(DefaultDist)[1209063] "dead after last mention" "RVV" "temp"
    ref call_tmp[1246717]:_ref(DefaultDist)[1209063] "dead after last mention" "maybe param" "temp"
    (1246719 'move' call_tmp[1246717](1246721 '.' this[1246707] _instance[1244079]))
    (1246724 'move' ret[1246709] call_tmp[1246717])
    (1246728 return ret[1246709])
  }
  function _ref(DefaultDist)[1244102]._unowned[1694936](ref arg this[1694940]:_ref(DefaultDist)[1244102]) ref : _ref(bool)[937388] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[1694942]:_ref(bool)[937388] "dead after last mention" "RVV" "temp"
    ref call_tmp[1694950]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (1694952 'move' call_tmp[1694950](1694954 '.' this[1694940] _unowned[1244081]))
    (1694957 'move' ret[1694942] call_tmp[1694950])
    (1694961 return ret[1694942])
  }
  type DefaultDist[1244085] val _pid[1244076]:int(64)[13] val _instance[1244079]:DefaultDist[93992] "owned" val _unowned[1244081]:bool[10] forwarding ( )
  function domain(1,int(64),false)[1252786].init[1332768](ref arg this[1332772]:domain(1,int(64),false)[1252786], const in arg _pid[1332774]:int(64)[13], const in arg _instance[1332776]:domain(1,int(64),false)[1251123], const in arg _unowned[1332778]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val tmp[1332784]:int(64)[13] "dead after last mention" "temp"
    (1332786 'move' tmp[1332784] _pid[1332774])
    (1332790 '.=' this[1332772] _pid[1252777] tmp[1332784])
    val tmp[1332795]:domain(1,int(64),false)[1251123] "dead after last mention" "temp"
    (1332797 'move' tmp[1332795](1332820 call chpl__initCopy[1251478] _instance[1332776]))
    (1332800 '.=' this[1332772] _instance[1252780] tmp[1332795])
    val tmp[1332805]:bool[10] "dead after last mention" "temp"
    (1332807 'move' tmp[1332805] _unowned[1332778])
    (1332811 '.=' this[1332772] _unowned[1252782] tmp[1332805])
    (1332816 return _void[55])
  }
  function domain(1,int(64),false)[1252786].init[1252219](ref arg this[1252223]:domain(1,int(64),false)[1252786], const in arg value[1252225]:domain(1,int(64),false)[1251123]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val call_tmp[1252231]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1252237]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1252244]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val tmp[1252352]:int(64)[13] "dead after last mention" "temp"
      (1252354 'move' tmp[1252352] -1)
      (1252358 '.=' this[1252223] _pid[1252777] tmp[1252352])
    }
    val tmp[1252364]:domain(1,int(64),false)[1251123] "dead after last mention" "temp"
    (1252366 'move' tmp[1252364](1252773 call chpl__initCopy[1251478] value[1252225]))
    (1252369 '.=' this[1252223] _instance[1252780] tmp[1252364])
    val tmp[1252374]:bool[10] "dead after last mention" "temp"
    (1253856 'move' tmp[1252374] 0)
    (1252379 '.=' this[1252223] _unowned[1252782] tmp[1252374])
    (1252384 return _void[55])
  }
  function _ref(_domain(unmanaged domain(1,int(64),false)))[1252812].init[1353521](ref arg this[1353525]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812], const in arg value[1353527]:domain(1,int(64),false)[1251123]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val call_tmp[1353535]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1353541]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1353548]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val tmp[1353656]:int(64)[13] "dead after last mention" "temp"
      (1353658 'move' tmp[1353656] -1)
      (1353662 '.=' this[1353525] _pid[1252777] tmp[1353656])
    }
    val tmp[1353668]:domain(1,int(64),false)[1251123] "dead after last mention" "temp"
    (1353670 'move' tmp[1353668](1353701 call chpl__initCopy[1251478] value[1353527]))
    (1353673 '.=' this[1353525] _instance[1252780] tmp[1353668])
    val tmp[1353678]:bool[10] "dead after last mention" "temp"
    (1353708 'move' tmp[1353678] 0)
    (1353683 '.=' this[1353525] _unowned[1252782] tmp[1353678])
    (1353688 return _void[55])
  }
  function domain(1,int(64),false)[1252786].init[1246525](ref arg this[1246529]:domain(1,int(64),false)[1252786], const  ref arg d[1246531]:DefaultDist[1244085]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[1879869]:int(64)[13] "temp"
    val call_tmp[1246550]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp"
    (1246552 'move' call_tmp[1246550](1246558 call newRectangularDom[1246736] d[1246531]))
    (1246566 call init[1252219] this[1246529] call_tmp[1246550])
    (1246568 return _void[55])
  }
  function _ref(_domain(unmanaged domain(1,int(64),false)))[1252812].init[1353435](ref arg this[1353439]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812], const  ref arg d[1353441]:DefaultDist[1244085], const  ref arg ranges[1353467]:1*range(int(64),bounded,false)[1244885]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[1880023]:int(64)[13] "temp"
    val call_tmp[1353484]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp"
    (1353486 'move' call_tmp[1353484](1353492 call newRectangularDom[1247097] d[1353441] ranges[1353467]))
    (1353501 call init[1353521] this[1353439] call_tmp[1353484])
    (1353503 return _void[55])
  }
  function domain(1,int(64),false)[1252786].init[1845880](ref arg this[1845884]:domain(1,int(64),false)[1252786], const  ref arg d[1845886]:DefaultDist[1244085], const  ref arg ranges[1845912]:1*range(int(64),bounded,false)[1244885]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[1880374]:int(64)[13] "temp"
    val call_tmp[1845927]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp"
    (1845929 'move' call_tmp[1845927](1845935 call newRectangularDom[1247097] d[1845886] ranges[1845912]))
    (1845944 call init[1252219] this[1845884] call_tmp[1845927])
    (1845946 return _void[55])
  }
  function _ref(_domain(unmanaged domain(1,int(64),false)))[1252812].init=[1353251](ref arg this[1353255]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812], const  ref arg other[1353257]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    const-val call_tmp[1353284]:DefaultDist[1244085] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1913238]:DefaultDist[1244085] "temp"
    (1353289 call dist[1287644] other[1353257] ret_tmp[1913238])
    (1913241 'move' call_tmp[1353284] ret_tmp[1913238])
    val call_tmp[1353300]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1353316]:1*range(int(64),bounded,false)[1244885] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1914041]:1*range(int(64),bounded,false)[1244885] "temp"
    (1353324 call dims[1353359] other[1353257] ret_tmp[1914041])
    (1914044 'move' call_tmp[1353316] ret_tmp[1914041])
    (1353329 call init[1353435] this[1353255] call_tmp[1353284] call_tmp[1353316])
    (1925462 call chpl__autoDestroy[1695146] call_tmp[1353316])
    (1925465 call chpl__autoDestroy[1695019] call_tmp[1353284])
    (1353335 return _void[55])
  }
  function _ref(_domain(unmanaged domain(1,int(64),false)))[1252812]._value[1253027](const  ref arg this[1253031]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812]) : domain(1,int(64),false)[1251123] "inline" "instantiated generic" "invisible fn" "method" "primary method" "no parens" "resolved" "fn synchronization free"
  {
    val ret[1253033]:domain(1,int(64),false)[1251123] "dead after last mention" "RVV" "temp"
    ref call_tmp[1253041]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
    (1253043 'move' call_tmp[1253041](1253046 call _instance[1253123] this[1253031]))
    {
      ref call_tmp[1253103]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
      (1253105 'move' call_tmp[1253103](1253108 call _instance[1253123] this[1253031]))
      (1253111 'move' ret[1253033](1253113 'deref' call_tmp[1253103]))
      gotoReturn _end__value[1253118] _end__value[1253118]
    }
    label _end__value[1253118]
    (1253120 return ret[1253033])
  }
  function _ref(_domain(unmanaged domain(1,int(64),false)))[1252812].chpl_forwarding_expr5__value[1253895](const  ref arg this[1253899]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812]) : domain(1,int(64),false)[1251123] "compiler generated" "inline" "instantiated generic" "invisible fn" "maybe ref" "method" "primary method" "reference to const when const this" "resolved"
  {
    val ret[1253901]:domain(1,int(64),false)[1251123] "dead after last mention" "RVV" "temp"
    (1253909 'move' ret[1253901](1253912 call _value[1253027] this[1253899]))
    (1253915 return ret[1253901])
  }
  function _ref(_domain(unmanaged domain(1,int(64),false)))[1252812].chpl__serialize[1871042](const  ref arg this[1871046]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812], ref arg _retArg[1918896]:_ref(_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true))[1871368]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "resolved"
  {
    const-val ret[1871062]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1871345] "dead after last mention" "RVV" "temp"
    val call_tmp[1871094]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp"
    (1871096 'move' call_tmp[1871094](1871099 call _value[1253027] this[1871046]))
    const-val call_tmp[1871102]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1871345] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val coerce_tmp[1871183]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1871188 'move' coerce_tmp[1871183] call_tmp[1871094])
    const-val ret_tmp[1918902]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1871345] "temp"
    (1871110 call chpl__serialize[1871119] coerce_tmp[1871183] ret_tmp[1918902])
    (1918905 'move' call_tmp[1871102] ret_tmp[1918902])
    (1871111 'move' ret[1871062] call_tmp[1871102])
    (1918898 '=' _retArg[1918896] ret[1871062])
    (1918900 return _void[55])
  }
  function _RuntimeTypeInfo[1253862].chpl__deserialize[1871880](const  ref arg this[1871884]:_RuntimeTypeInfo[1253862], const  ref arg data[1871886]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1871345], ref arg _retArg[1918920]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "resolved"
  {
    const-val ret[1871888]:domain(1,int(64),false)[1252786] "dead after last mention" "RVV" "temp"
    val valueType[1871898]:domain(1,int(64),false)[1251123] "dead at end of block" "insert auto destroy" "type variable"
    val call_tmp[1871909]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1871916]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp"
    (1871918 'move' call_tmp[1871916](1871924 call chpl__deserialize[1871949] data[1871886]))
    const-val call_tmp[1871926]:domain(1,int(64),false)[1252786] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1872042]:domain(1,int(64),false)[1252786] "dead after last mention" "delay instantiation" "temp"
    (1872045 call init[1252219] initTemp[1872042] call_tmp[1871916])
    (1871928 'move' call_tmp[1871926] initTemp[1872042])
    (1871933 'move' ret[1871888] call_tmp[1871926])
    gotoReturn _end_chpl__deserialize[1871941] _end_chpl__deserialize[1871941]
    label _end_chpl__deserialize[1871941]
    (1918922 '=' _retArg[1918920] ret[1871888])
    (1918924 return _void[55])
  }
  function _ref(_domain(unmanaged domain(1,int(64),false)))[1252812]._do_destroy[1695230](const  ref arg this[1695234]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "no doc" "resolved" "no return value for void"
  {
    ref call_tmp[1695240]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (1695242 'move' call_tmp[1695240](1695245 call _unowned[1695487] this[1695234]))
    const-val call_tmp[1695248]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1695515]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1695519 'move' coerce_tmp[1695515](1695517 'deref' call_tmp[1695240]))
    (1695250 'move' call_tmp[1695248](1695253 call ![7494] coerce_tmp[1695515]))
    const-val call_tmp[1695255]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1695257 'move' call_tmp[1695255] call_tmp[1695248])
    if call_tmp[1695255]
    {
      const-val tmp[1695264]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
      ref call_tmp[1695266]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
      (1695268 'move' call_tmp[1695266](1695271 call _instance[1253123] this[1695234]))
      const-val call_tmp[1695274]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
      (1695276 'move' call_tmp[1695274](1695278 '_wide_get_locale' call_tmp[1695266]))
      (1695280 'move' tmp[1695264] call_tmp[1695274])
      val rvfDerefTmp[2196964]:domain(1,int(64),false)[1252786] "temp"
      (2196968 'move' rvfDerefTmp[2196964](2196966 'deref' this[1695234]))
      val isdirect[2213226]:bool[10] "temp"
      (2213231 'move' isdirect[2213226](2213228 call chpl_doDirectExecuteOn[187469] tmp[1695264]))
      if isdirect[2213226]
      {
        (2213235 call on_fn[1695287] rvfDerefTmp[2196964])
      }
      {
        val _args_foron_fn[2213250]:_class_localson_fn[2213242] "temp"
        (2213254 'move' _args_foron_fn[2213250](2213252 'stack allocate class' _class_localson_fn[2213242]))
        (2213256 '.=' _args_foron_fn[2213250] _0_tmp[2213245] tmp[1695264])
        (2213260 '.=' _args_foron_fn[2213250] _1_rvfDerefTmp[2213247] rvfDerefTmp[2196964])
        val _args_vforon_fn[2213264]:c_void_ptr[149] "temp"
        (2213268 'move' _args_vforon_fn[2213264](2213266 'cast_to_void_star' _args_foron_fn[2213250]))
        val _args_sizeon_fn[2213270]:int(64)[13] "temp"
        (2213274 'move' _args_sizeon_fn[2213270](2213272 'sizeof_bundle' _class_localson_fn[2213242]))
        on(2213306 call wrapon_fn[2213276] tmp[1695264] _args_vforon_fn[2213264] _args_sizeon_fn[2213270] _args_foron_fn[2213250])
      }
      {
      }
    }
    {
    }
    (1695484 return _void[55])
  }
  function _ref(_domain(unmanaged domain(1,int(64),false)))[1252812].deinit[1695198](const  ref arg this[1695202]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "resolved" "no return value for void"
  {
    (1695212 call _do_destroy[1695230] this[1695202])
    (1695213 return _void[55])
  }
  function _ref(_domain(unmanaged domain(1,int(64),false)))[1252812].dist[1287644](const  ref arg this[1287648]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812], ref arg _retArg[1913256]:_ref(DefaultDist)[1244102]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "no parens" "resolved" "return not owned"
  {
    const-val ret[1287650]:DefaultDist[1244085] "dead after last mention" "RVV" "temp"
    val call_tmp[1287658]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp"
    (1287660 'move' call_tmp[1287658](1287663 call _value[1253027] this[1287648]))
    ref call_tmp[1287666]:_ref(DefaultDist)[1209063] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[1287716]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1287721 'move' coerce_tmp[1287716] call_tmp[1287658])
    (1287668 'move' call_tmp[1287666](1287671 call dist[1287689] coerce_tmp[1287716]))
    const-val call_tmp[1287674]:DefaultDist[1244085] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val coerce_tmp[1287798]:DefaultDist[93992] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1287802 'move' coerce_tmp[1287798](1287800 'deref' call_tmp[1287666]))
    const-val ret_tmp[1913262]:DefaultDist[1244085] "temp"
    (1287679 call _getDistribution[1287724] coerce_tmp[1287798] ret_tmp[1913262])
    (1913265 'move' call_tmp[1287674] ret_tmp[1913262])
    (1287681 'move' ret[1287650] call_tmp[1287674])
    (1913258 '=' _retArg[1913256] ret[1287650])
    (1913260 return _void[55])
  }
  function _ref(_domain(unmanaged domain(1,int(64),false)))[1252812].these[1306198](const  ref arg this[1306202]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812], ref arg _retArg[1913485]:_ref(_ir_these__ref__domain_DefaultRectangularDom_1_int64_t_F)[1315089]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "iterator fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _ir[2128033]:_ir_these__ref__domain_DefaultRectangularDom_1_int64_t_F[1314978] "temp"
    (2128035 '.=' _ir[2128033] F0_this[2126841] this[1306202])
    (2128039 '=' _retArg[1913485] _ir[2128033])
    (2128042 return _void[55])
  }
  type _ic_these__ref__domain_DefaultRectangularDom_1_int64_t_F[1314972] val super[1314973]:object[22] "super class" val more[1314975]:int(64)[13] val F0_this[2126839]:domain(1,int(64),false)[1252786] val F1__iterator[2126843]:_ic_these_DefaultRectangularDom_1_int64_t_F[1306903] val F2_default_arg_offset[2126845]:1*int(64)[1256714] val F3__iterator[2126847]:_ic_these_range_int64_t_bounded_F[1096892] val F4_i[2126849]:int(64)[13] const F5_end[2126851]:int(64)[13] val F6_coerce_tmp[2126853]:int(64)[13] val value[2126855]:int(64)[13]
  type _ir_these__ref__domain_DefaultRectangularDom_1_int64_t_F[1314978] val F0_this[2126841]:domain(1,int(64),false)[1252786]
  function _getIterator[1314987](const  ref arg ir[1314989]:_ir_these__ref__domain_DefaultRectangularDom_1_int64_t_F[1314978]) : _ic_these__ref__domain_DefaultRectangularDom_1_int64_t_F[1314972] "auto ii" "inline" "resolved" "unsafe"
  {
    val ret[1315096]:_ic_these__ref__domain_DefaultRectangularDom_1_int64_t_F[1314972] "dead after last mention" "RVV" "temp"
    val _ic_[1314979]:_ic_these__ref__domain_DefaultRectangularDom_1_int64_t_F[1314972] "dead after last mention" "temp"
    const-val call_tmp[1315103]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1315106 'move' call_tmp[1315103](1315118 'sizeof_bundle' _ic_these__ref__domain_DefaultRectangularDom_1_int64_t_F[1314972]))
    const-val cast_tmp[1315121]:c_void_ptr[149] "dead after last mention" "temp"
    (1315123 'move' cast_tmp[1315121](1314984 call chpl_here_alloc[187788] call_tmp[1315103] 56))
    (1314992 'move' _ic_[1314979](1315125 'cast' _ic_these__ref__domain_DefaultRectangularDom_1_int64_t_F[1314972] cast_tmp[1315121]))
    (1314994 'setcid' _ic_[1314979])
    (1315101 'move' ret[1315096] _ic_[1314979])
    (2128045 '.=' ret[1315096] more[1314975] 1)
    val tmp[2128049]:domain(1,int(64),false)[1252786] "temp"
    (2128054 'move' tmp[2128049](2128050 '.v' ir[1314989] F0_this[2126841]))
    (2128056 '.=' ret[1315096] F0_this[2126839] tmp[2128049])
    (1315098 return ret[1315096])
  }
  function _ref(_domain(unmanaged domain(1,int(64),false)))[1252812].this[1844078](const  ref arg this[1844084]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812], const in arg _e0_ranges[1844086]:range(int(64),bounded,false)[1027003], ref arg _retArg[1918856]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "resolved"
  {
    const-val ranges[1845406]:1*range(int(64),bounded,false)[1244885] "insert auto destroy"
    const-val ret_tmp[1911606]:1*range(int(64),bounded,false)[1244885] "temp"
    (1845411 call chpl__init_tuple[1244903] _e0_ranges[1844086] ret_tmp[1911606])
    (1911609 'move' ranges[1845406] ret_tmp[1911606])
    const-val ret[1844100]:domain(1,int(64),false)[1252786] "dead after last mention" "RVV" "temp"
    val call_tmp[1845418]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp"
    (1845420 'move' call_tmp[1845418](1845423 call _value[1253027] this[1844084]))
    const-val r[1845495]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "insert auto destroy"
    val call_tmp[1845505]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp"
    (1845507 'move' call_tmp[1845505](1845510 call _value[1253027] this[1844084]))
    val call_tmp[1845513]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val coerce_tmp[1845737]:BaseRectangularDom(1,int(64),false)[1251088] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1845743 'move' coerce_tmp[1845737](1845739 'cast' BaseRectangularDom(1,int(64),false)[1251088] call_tmp[1845505]))
    val call_tmp[1845521]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1845530]:1*range(int(64),bounded,false)[1244885] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val ret_tmp[1911672]:1*range(int(64),bounded,false)[1244885] "temp"
    (1845968 call _defaultOf[1251254] ret_tmp[1911672])
    (1911675 'move' r[1845495] ret_tmp[1911672])
    {
      const-val i[1845543]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1845545 'move' i[1845543] 0)
      {
        {
          ref call_tmp[1845776]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
          (1845778 'move' call_tmp[1845776](1845826 '.' r[1845495] x0[1244883]))
          val call_tmp[1845783]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp"
          (1845785 'move' call_tmp[1845783](1845788 call _value[1253027] this[1844084]))
          const-val call_tmp[1845791]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val coerce_tmp[1845830]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1845835 'move' coerce_tmp[1845830] call_tmp[1845783])
          const-val ret_tmp[1912418]:range(int(64),bounded,false)[1027003] "temp"
          (1845799 call dsiDim[1258249] coerce_tmp[1845830] ret_tmp[1912418])
          (1912421 'move' call_tmp[1845791] ret_tmp[1912418])
          ref call_tmp[1845801]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
          (1845803 'move' call_tmp[1845801](1845840 '.' ranges[1845406] x0[1244883]))
          const-val call_tmp[1845808]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val coerce_tmp[1845845]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1845849 'move' coerce_tmp[1845845](1918860 call chpl__initCopy[1085195] call_tmp[1845801]))
          const-val ret_tmp[1908714]:range(int(64),bounded,false)[1027003] "temp"
          (1845813 call this[1037637] call_tmp[1845791] coerce_tmp[1845845] ret_tmp[1908714])
          (1908717 'move' call_tmp[1845808] ret_tmp[1908714])
          (1845816 call =[1251739] call_tmp[1845776] call_tmp[1845808])
          (1929834 call chpl__autoDestroy[1407763] call_tmp[1845808])
          (1929837 call chpl__autoDestroy[1407763] coerce_tmp[1845845])
          (1929840 call chpl__autoDestroy[1407763] call_tmp[1845791])
        }
      }
      label _continueLabel0[1845772]
      label _unused_continueLabel[1845657]
      label _breakLabel[1845659]
    }
    const-val call_tmp[1845661]:DefaultDist[1244085] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1913250]:DefaultDist[1244085] "temp"
    (1845666 call dist[1287644] this[1844084] ret_tmp[1913250])
    (1913253 'move' call_tmp[1845661] ret_tmp[1913250])
    val call_tmp[1845677]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp"
    (1845679 'move' call_tmp[1845677](1845682 call _value[1253027] this[1844084]))
    val call_tmp[1845685]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val coerce_tmp[1845857]:BaseRectangularDom(1,int(64),false)[1251088] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1845863 'move' coerce_tmp[1845857](1845859 'cast' BaseRectangularDom(1,int(64),false)[1251088] call_tmp[1845677]))
    const-val call_tmp[1845693]:domain(1,int(64),false)[1252786] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1845868]:domain(1,int(64),false)[1252786] "dead after last mention" "delay instantiation" "temp"
    (1845871 call init[1845880] initTemp[1845868] call_tmp[1845661] r[1845495])
    (1845695 'move' call_tmp[1845693] initTemp[1845868])
    (1845704 'move' ret[1844100] call_tmp[1845693])
    (1929843 call chpl__autoDestroy[1695019] call_tmp[1845661])
    (1929846 call chpl__autoDestroy[1695146] r[1845495])
    (1929849 call chpl__autoDestroy[1695146] ranges[1845406])
    gotoReturn _end_this[1845712] _end_this[1845712]
    label _end_this[1845712]
    (1918858 '=' _retArg[1918856] ret[1844100])
    (1918862 return _void[55])
  }
  function _ref(_domain(unmanaged domain(1,int(64),false)))[1252812].dims[1353359](const  ref arg this[1353363]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812], ref arg _retArg[1914191]:_ref(1*range(int(64),bounded,false))[1244943]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    const-val ret[1353365]:1*range(int(64),bounded,false)[1244885] "dead after last mention" "RVV" "temp"
    val call_tmp[1353373]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp"
    (1353375 'move' call_tmp[1353373](1353378 call _value[1253027] this[1353363]))
    const-val call_tmp[1353381]:1*range(int(64),bounded,false)[1244885] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val coerce_tmp[1353426]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1353431 'move' coerce_tmp[1353426] call_tmp[1353373])
    const-val ret_tmp[1914197]:1*range(int(64),bounded,false)[1244885] "temp"
    (1353389 call dsiDims[1353398] coerce_tmp[1353426] ret_tmp[1914197])
    (1914200 'move' call_tmp[1353381] ret_tmp[1914197])
    (1353390 'move' ret[1353365] call_tmp[1353381])
    (1914193 '=' _retArg[1914191] ret[1353365])
    (1914195 return _void[55])
  }
  function _ref(_domain(unmanaged domain(1,int(64),false)))[1252812].dim[1399245](const  ref arg this[1399249]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812], ref arg _retArg[1914785]:_ref(range(int(64),bounded,false))[1027047]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "resolved"
  {
    const-val ret[1399253]:range(int(64),bounded,false)[1027003] "dead after last mention" "RVV" "temp"
    val call_tmp[1399375]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp"
    (1399377 'move' call_tmp[1399375](1399380 call _value[1253027] this[1399249]))
    const-val call_tmp[1399383]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val coerce_tmp[1399918]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1399923 'move' coerce_tmp[1399918] call_tmp[1399375])
    const-val ret_tmp[1912232]:range(int(64),bounded,false)[1027003] "temp"
    (1399391 call dsiDim[1258249] coerce_tmp[1399918] ret_tmp[1912232])
    (1912235 'move' call_tmp[1399383] ret_tmp[1912232])
    (1399393 'move' ret[1399253] call_tmp[1399383])
    (1914787 '=' _retArg[1914785] ret[1399253])
    (1914789 return _void[55])
  }
  function _ref(_domain(unmanaged domain(1,int(64),false)))[1252812].buildArray[1254230](const  ref arg this[1254234]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812], ref arg _retArg[1911708]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287226]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "no copy return" "no doc" "resolved"
  {
    val _formal_type_tmp_[1879912]:locale[28] "temp"
    const-val ret[1254240]:[domain(1,int(64),false)] locale[1287200] "dead after last mention" "RVV" "temp"
    {
    }
    val call_tmp[1254715]:domain(1,int(64),false)[1251123] "dead at end of block" "expr temp" "maybe param" "temp"
    (1254717 'move' call_tmp[1254715](1254720 call _value[1253027] this[1254234]))
    val call_tmp[1254723]:[domain(1,int(64),false)] locale[1256675] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1255006]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1255011 'move' coerce_tmp[1255006] call_tmp[1254715])
    (1254725 'move' call_tmp[1254723](1254731 call dsiBuildArray[1254927] coerce_tmp[1255006]))
    val x[1254734]:[domain(1,int(64),false)] locale[1256675] "dead at end of block" "insert auto destroy"
    (1254736 'move' x[1254734](1264908 call chpl__initCopy[1264910] call_tmp[1254723]))
    (1254761 call help[1254740] this[1254234] x[1254734])
    val call_tmp[1254763]:locale[28] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val coerce_tmp[1286359]:BaseRectangularArr(1,int(64),false,locale)[1256461] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1286365 'move' coerce_tmp[1286359](1286361 'cast' BaseRectangularArr(1,int(64),false,locale)[1256461] x[1254734]))
    val coerce_tmp[1286687]:BaseArr[149584] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1286693 'move' coerce_tmp[1286687](1286689 'cast' BaseArr[149584] x[1254734]))
    (1254772 call chpl_incRefCountsForDomainsInArrayEltTypes[1286592] coerce_tmp[1286687])
    const-val call_tmp[1254778]:[domain(1,int(64),false)] locale[1287200] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1913190]:[domain(1,int(64),false)] locale[1287200] "temp"
    (1254783 call _newArray[1286727] x[1254734] ret_tmp[1913190])
    (1913193 'move' call_tmp[1254778] ret_tmp[1913190])
    (1254785 'move' ret[1254240] call_tmp[1254778])
    gotoReturn _end_buildArray[1254793] _end_buildArray[1254793]
    label _end_buildArray[1254793]
    (1911710 '=' _retArg[1911708] ret[1254240])
    (1911712 return _void[55])
  }
  function _ref(_domain(unmanaged domain(1,int(64),false)))[1252812].buildArray[1316756](const  ref arg this[1316760]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812], ref arg _retArg[1913694]:_ref(_array(unmanaged [domain(1,int(64),false)] unmanaged localesSignal?))[1325321]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "no copy return" "no doc" "resolved"
  {
    val _formal_type_tmp_[1879973]:localesSignal[92278] "temp"
    const-val ret[1316766]:[domain(1,int(64),false)] unmanaged localesSignal?[1325295] "dead after last mention" "RVV" "temp"
    {
    }
    val call_tmp[1317241]:domain(1,int(64),false)[1251123] "dead at end of block" "expr temp" "maybe param" "temp"
    (1317243 'move' call_tmp[1317241](1317246 call _value[1253027] this[1316760]))
    val call_tmp[1317249]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1317448]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1317453 'move' coerce_tmp[1317448] call_tmp[1317241])
    (1317251 'move' call_tmp[1317249](1317257 call dsiBuildArray[1317369] coerce_tmp[1317448]))
    val x[1317260]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401] "dead at end of block" "insert auto destroy"
    (1317262 'move' x[1317260](1324317 call chpl__initCopy[1324319] call_tmp[1317249]))
    (1317287 call help[1317266] this[1316760] x[1317260])
    val call_tmp[1317289]:localesSignal[92278] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val coerce_tmp[1324456]:BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1318187] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1324462 'move' coerce_tmp[1324456](1324458 'cast' BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1318187] x[1317260]))
    val coerce_tmp[1324784]:BaseArr[149584] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1324790 'move' coerce_tmp[1324784](1324786 'cast' BaseArr[149584] x[1317260]))
    (1317298 call chpl_incRefCountsForDomainsInArrayEltTypes[1324689] coerce_tmp[1324784])
    const-val call_tmp[1317304]:[domain(1,int(64),false)] unmanaged localesSignal?[1325295] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1913700]:[domain(1,int(64),false)] unmanaged localesSignal?[1325295] "temp"
    (1317309 call _newArray[1324824] x[1317260] ret_tmp[1913700])
    (1913703 'move' call_tmp[1317304] ret_tmp[1913700])
    (1317311 'move' ret[1316766] call_tmp[1317304])
    gotoReturn _end_buildArray[1317319] _end_buildArray[1317319]
    label _end_buildArray[1317319]
    (1913696 '=' _retArg[1913694] ret[1316766])
    (1913698 return _void[55])
  }
  function _ref(_domain(unmanaged domain(1,int(64),false)))[1252812].buildArray[1357299](const  ref arg this[1357303]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812], ref arg _retArg[1914379]:_ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "no copy return" "no doc" "resolved"
  {
    val _formal_type_tmp_[1880060]:real(64)[16] "temp"
    const-val ret[1357309]:[domain(1,int(64),false)] real(64)[1366029] "dead after last mention" "RVV" "temp"
    {
    }
    val call_tmp[1357784]:domain(1,int(64),false)[1251123] "dead at end of block" "expr temp" "maybe param" "temp"
    (1357786 'move' call_tmp[1357784](1357789 call _value[1253027] this[1357303]))
    val call_tmp[1357792]:[domain(1,int(64),false)] real(64)[1358944] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1357991]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1357996 'move' coerce_tmp[1357991] call_tmp[1357784])
    (1357794 'move' call_tmp[1357792](1357800 call dsiBuildArray[1357912] coerce_tmp[1357991]))
    val x[1357803]:[domain(1,int(64),false)] real(64)[1358944] "dead at end of block" "insert auto destroy"
    (1357805 'move' x[1357803](1365051 call chpl__initCopy[1365053] call_tmp[1357792]))
    (1357830 call help[1357809] this[1357303] x[1357803])
    val call_tmp[1357832]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val coerce_tmp[1365190]:BaseRectangularArr(1,int(64),false,real(64))[1358730] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1365196 'move' coerce_tmp[1365190](1365192 'cast' BaseRectangularArr(1,int(64),false,real(64))[1358730] x[1357803]))
    val coerce_tmp[1365518]:BaseArr[149584] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1365524 'move' coerce_tmp[1365518](1365520 'cast' BaseArr[149584] x[1357803]))
    (1357841 call chpl_incRefCountsForDomainsInArrayEltTypes[1365423] coerce_tmp[1365518])
    const-val call_tmp[1357847]:[domain(1,int(64),false)] real(64)[1366029] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1914385]:[domain(1,int(64),false)] real(64)[1366029] "temp"
    (1357852 call _newArray[1365558] x[1357803] ret_tmp[1914385])
    (1914388 'move' call_tmp[1357847] ret_tmp[1914385])
    (1357854 'move' ret[1357309] call_tmp[1357847])
    gotoReturn _end_buildArray[1357862] _end_buildArray[1357862]
    label _end_buildArray[1357862]
    (1914381 '=' _retArg[1914379] ret[1357309])
    (1914383 return _void[55])
  }
  function _ref(_domain(unmanaged domain(1,int(64),false)))[1252812].buildArray[1367222](const  ref arg this[1367226]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812], ref arg _retArg[1914421]:_ref(_array(unmanaged [domain(1,int(64),false)] int(64)))[1374530]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "no copy return" "no doc" "resolved"
  {
    val _formal_type_tmp_[1880096]:int(64)[13] "temp"
    const-val ret[1367232]:[domain(1,int(64),false)] int(64)[1374504] "dead after last mention" "RVV" "temp"
    {
    }
    val call_tmp[1367707]:domain(1,int(64),false)[1251123] "dead at end of block" "expr temp" "maybe param" "temp"
    (1367709 'move' call_tmp[1367707](1367712 call _value[1253027] this[1367226]))
    val call_tmp[1367715]:[domain(1,int(64),false)] int(64)[1368867] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1367914]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1367919 'move' coerce_tmp[1367914] call_tmp[1367707])
    (1367717 'move' call_tmp[1367715](1367723 call dsiBuildArray[1367835] coerce_tmp[1367914]))
    val x[1367726]:[domain(1,int(64),false)] int(64)[1368867] "dead at end of block" "insert auto destroy"
    (1367728 'move' x[1367726](1373526 call chpl__initCopy[1373528] call_tmp[1367715]))
    (1367753 call help[1367732] this[1367226] x[1367726])
    val call_tmp[1367755]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val coerce_tmp[1373665]:BaseRectangularArr(1,int(64),false,int(64))[1368653] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1373671 'move' coerce_tmp[1373665](1373667 'cast' BaseRectangularArr(1,int(64),false,int(64))[1368653] x[1367726]))
    val coerce_tmp[1373993]:BaseArr[149584] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1373999 'move' coerce_tmp[1373993](1373995 'cast' BaseArr[149584] x[1367726]))
    (1367764 call chpl_incRefCountsForDomainsInArrayEltTypes[1373898] coerce_tmp[1373993])
    const-val call_tmp[1367770]:[domain(1,int(64),false)] int(64)[1374504] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1914427]:[domain(1,int(64),false)] int(64)[1374504] "temp"
    (1367775 call _newArray[1374033] x[1367726] ret_tmp[1914427])
    (1914430 'move' call_tmp[1367770] ret_tmp[1914427])
    (1367777 'move' ret[1367232] call_tmp[1367770])
    gotoReturn _end_buildArray[1367785] _end_buildArray[1367785]
    label _end_buildArray[1367785]
    (1914423 '=' _retArg[1914421] ret[1367232])
    (1914425 return _void[55])
  }
  function _ref(_domain(unmanaged domain(1,int(64),false)))[1252812].buildArray[1418540](const  ref arg this[1418544]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812], ref arg _retArg[1915011]:_ref(_array(unmanaged [domain(1,int(64),false)] range(int(64),bounded,false)))[1415976]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "no copy return" "no doc" "resolved"
  {
    val _formal_type_tmp_[1880191]:range(int(64),bounded,false)[1027003] "temp"
    const-val ret[1418550]:[domain(1,int(64),false)] range(int(64),bounded,false)[1415950] "dead after last mention" "RVV" "temp"
    {
    }
    val call_tmp[1419025]:domain(1,int(64),false)[1251123] "dead at end of block" "expr temp" "maybe param" "temp"
    (1419027 'move' call_tmp[1419025](1419030 call _value[1253027] this[1418544]))
    val call_tmp[1419033]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1419206]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1419211 'move' coerce_tmp[1419206] call_tmp[1419025])
    (1419035 'move' call_tmp[1419033](1419041 call dsiBuildArray[1419127] coerce_tmp[1419206]))
    val x[1419044]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead at end of block" "insert auto destroy"
    (1419046 'move' x[1419044](1421585 call chpl__initCopy[1414974] call_tmp[1419033]))
    (1419071 call help[1419050] this[1418544] x[1419044])
    val call_tmp[1419073]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val coerce_tmp[1421633]:BaseRectangularArr(1,int(64),false,range(int(64),bounded,false))[1409010] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1421639 'move' coerce_tmp[1421633](1421635 'cast' BaseRectangularArr(1,int(64),false,range(int(64),bounded,false))[1409010] x[1419044]))
    val coerce_tmp[1421643]:BaseArr[149584] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1421649 'move' coerce_tmp[1421643](1421645 'cast' BaseArr[149584] x[1419044]))
    (1419082 call chpl_incRefCountsForDomainsInArrayEltTypes[1415344] coerce_tmp[1421643])
    const-val call_tmp[1419088]:[domain(1,int(64),false)] range(int(64),bounded,false)[1415950] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1914915]:[domain(1,int(64),false)] range(int(64),bounded,false)[1415950] "temp"
    (1419093 call _newArray[1415479] x[1419044] ret_tmp[1914915])
    (1914918 'move' call_tmp[1419088] ret_tmp[1914915])
    (1419095 'move' ret[1418550] call_tmp[1419088])
    gotoReturn _end_buildArray[1419103] _end_buildArray[1419103]
    label _end_buildArray[1419103]
    (1915013 '=' _retArg[1915011] ret[1418550])
    (1915015 return _void[55])
  }
  function _ref(_domain(unmanaged domain(1,int(64),false)))[1252812].buildArray[1448616](const  ref arg this[1448620]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812], ref arg _retArg[1915239]:_ref(_array(unmanaged [domain(1,int(64),false)] uint(64)))[1456173]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "no copy return" "no doc" "resolved"
  {
    val _formal_type_tmp_[1880209]:uint(64)[115] "temp"
    const-val ret[1448626]:[domain(1,int(64),false)] uint(64)[1456147] "dead after last mention" "RVV" "temp"
    {
    }
    val call_tmp[1449101]:domain(1,int(64),false)[1251123] "dead at end of block" "expr temp" "maybe param" "temp"
    (1449103 'move' call_tmp[1449101](1449106 call _value[1253027] this[1448620]))
    val call_tmp[1449109]:[domain(1,int(64),false)] uint(64)[1450261] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1449308]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1449313 'move' coerce_tmp[1449308] call_tmp[1449101])
    (1449111 'move' call_tmp[1449109](1449117 call dsiBuildArray[1449229] coerce_tmp[1449308]))
    val x[1449120]:[domain(1,int(64),false)] uint(64)[1450261] "dead at end of block" "insert auto destroy"
    (1449122 'move' x[1449120](1455169 call chpl__initCopy[1455171] call_tmp[1449109]))
    (1449147 call help[1449126] this[1448620] x[1449120])
    val call_tmp[1449149]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val coerce_tmp[1455308]:BaseRectangularArr(1,int(64),false,uint(64))[1450047] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1455314 'move' coerce_tmp[1455308](1455310 'cast' BaseRectangularArr(1,int(64),false,uint(64))[1450047] x[1449120]))
    val coerce_tmp[1455636]:BaseArr[149584] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1455642 'move' coerce_tmp[1455636](1455638 'cast' BaseArr[149584] x[1449120]))
    (1449158 call chpl_incRefCountsForDomainsInArrayEltTypes[1455541] coerce_tmp[1455636])
    const-val call_tmp[1449164]:[domain(1,int(64),false)] uint(64)[1456147] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1915245]:[domain(1,int(64),false)] uint(64)[1456147] "temp"
    (1449169 call _newArray[1455676] x[1449120] ret_tmp[1915245])
    (1915248 'move' call_tmp[1449164] ret_tmp[1915245])
    (1449171 'move' ret[1448626] call_tmp[1449164])
    gotoReturn _end_buildArray[1449179] _end_buildArray[1449179]
    label _end_buildArray[1449179]
    (1915241 '=' _retArg[1915239] ret[1448626])
    (1915243 return _void[55])
  }
  function _ref(_domain(unmanaged domain(1,int(64),false)))[1252812].buildArray[1518936](const  ref arg this[1518940]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812], ref arg _retArg[1916391]:_ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "no copy return" "no doc" "resolved"
  {
    val _formal_type_tmp_[1880251]:real(64)[16] "temp"
    const-val ret[1518946]:[domain(1,int(64),false)] real(64)[1366029] "dead after last mention" "RVV" "temp"
    {
    }
    val call_tmp[1519421]:domain(1,int(64),false)[1251123] "dead at end of block" "expr temp" "maybe param" "temp"
    (1519423 'move' call_tmp[1519421](1519426 call _value[1253027] this[1518940]))
    val call_tmp[1519429]:[domain(1,int(64),false)] real(64)[1358944] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1519602]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1519607 'move' coerce_tmp[1519602] call_tmp[1519421])
    (1519431 'move' call_tmp[1519429](1519437 call dsiBuildArray[1519523] coerce_tmp[1519602]))
    val x[1519440]:[domain(1,int(64),false)] real(64)[1358944] "dead at end of block" "insert auto destroy"
    (1519442 'move' x[1519440](1521981 call chpl__initCopy[1365053] call_tmp[1519429]))
    (1519467 call help[1519446] this[1518940] x[1519440])
    val call_tmp[1519469]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val coerce_tmp[1522029]:BaseRectangularArr(1,int(64),false,real(64))[1358730] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1522035 'move' coerce_tmp[1522029](1522031 'cast' BaseRectangularArr(1,int(64),false,real(64))[1358730] x[1519440]))
    val coerce_tmp[1522039]:BaseArr[149584] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1522045 'move' coerce_tmp[1522039](1522041 'cast' BaseArr[149584] x[1519440]))
    (1519478 call chpl_incRefCountsForDomainsInArrayEltTypes[1365423] coerce_tmp[1522039])
    const-val call_tmp[1519484]:[domain(1,int(64),false)] real(64)[1366029] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1914391]:[domain(1,int(64),false)] real(64)[1366029] "temp"
    (1519489 call _newArray[1365558] x[1519440] ret_tmp[1914391])
    (1914394 'move' call_tmp[1519484] ret_tmp[1914391])
    (1519491 'move' ret[1518946] call_tmp[1519484])
    gotoReturn _end_buildArray[1519499] _end_buildArray[1519499]
    label _end_buildArray[1519499]
    (1916393 '=' _retArg[1916391] ret[1518946])
    (1916395 return _void[55])
  }
  function _ref(_domain(unmanaged domain(1,int(64),false)))[1252812].buildArrayWith[1407957](const  ref arg this[1407961]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812], const in arg data[1407969]:_ddata(range(int(64),bounded,false))[1406042], const in arg allocSize[1407971]:int(64)[13], ref arg _retArg[1914897]:_ref(_array(unmanaged [domain(1,int(64),false)] range(int(64),bounded,false)))[1415976]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "no copy return" "no doc" "resolved"
  {
    val _formal_type_tmp_[1880154]:range(int(64),bounded,false)[1027003] "temp"
    const-val ret[1407973]:[domain(1,int(64),false)] range(int(64),bounded,false)[1415950] "dead after last mention" "RVV" "temp"
    val call_tmp[1408012]:domain(1,int(64),false)[1251123] "dead at end of block" "expr temp" "maybe param" "temp"
    (1408014 'move' call_tmp[1408012](1408017 call _value[1253027] this[1407961]))
    val call_tmp[1408020]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1408248]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1408253 'move' coerce_tmp[1408248] call_tmp[1408012])
    (1408022 'move' call_tmp[1408020](1408028 call dsiBuildArrayWith[1408100] coerce_tmp[1408248] data[1407969] allocSize[1407971]))
    val x[1408032]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead at end of block" "insert auto destroy"
    (1408034 'move' x[1408032](1414972 call chpl__initCopy[1414974] call_tmp[1408020]))
    (1408059 call help[1408038] this[1407961] x[1408032])
    val call_tmp[1408061]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val coerce_tmp[1415111]:BaseRectangularArr(1,int(64),false,range(int(64),bounded,false))[1409010] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1415117 'move' coerce_tmp[1415111](1415113 'cast' BaseRectangularArr(1,int(64),false,range(int(64),bounded,false))[1409010] x[1408032]))
    val coerce_tmp[1415439]:BaseArr[149584] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1415445 'move' coerce_tmp[1415439](1415441 'cast' BaseArr[149584] x[1408032]))
    (1408070 call chpl_incRefCountsForDomainsInArrayEltTypes[1415344] coerce_tmp[1415439])
    const-val call_tmp[1408076]:[domain(1,int(64),false)] range(int(64),bounded,false)[1415950] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1914903]:[domain(1,int(64),false)] range(int(64),bounded,false)[1415950] "temp"
    (1408081 call _newArray[1415479] x[1408032] ret_tmp[1914903])
    (1914906 'move' call_tmp[1408076] ret_tmp[1914903])
    (1408083 'move' ret[1407973] call_tmp[1408076])
    gotoReturn _end_buildArrayWith[1408091] _end_buildArrayWith[1408091]
    label _end_buildArrayWith[1408091]
    (1914899 '=' _retArg[1914897] ret[1407973])
    (1914901 return _void[55])
  }
  function _ref(_domain(unmanaged domain(1,int(64),false)))[1252812].size[1435624](const  ref arg this[1435628]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812]) : int(64)[13] "instantiated generic" "invisible fn" "method" "primary method" "no parens" "resolved"
  {
    val ret[1435630]:int(64)[13] "dead after last mention" "RVV" "temp"
    val call_tmp[1435638]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp"
    (1435640 'move' call_tmp[1435638](1435643 call _value[1253027] this[1435628]))
    const-val call_tmp[1435646]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1435662]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1435667 'move' coerce_tmp[1435662] call_tmp[1435638])
    (1435648 'move' call_tmp[1435646](1435651 call dsiNumIndices[1263823] coerce_tmp[1435662]))
    (1435654 'move' ret[1435630] call_tmp[1435646])
    (1435658 return ret[1435630])
  }
  function _ref(_domain(unmanaged domain(1,int(64),false)))[1252812].low[1510489](const  ref arg this[1510493]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812]) : int(64)[13] "instantiated generic" "invisible fn" "method" "primary method" "no parens" "resolved"
  {
    val ret[1510495]:int(64)[13] "dead after last mention" "RVV" "temp"
    val call_tmp[1510503]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp"
    (1510505 'move' call_tmp[1510503](1510508 call _value[1253027] this[1510493]))
    const-val call_tmp[1510511]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1510527]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1510532 'move' coerce_tmp[1510527] call_tmp[1510503])
    (1510513 'move' call_tmp[1510511](1510516 call dsiLow[1300625] coerce_tmp[1510527]))
    (1510519 'move' ret[1510495] call_tmp[1510511])
    (1510523 return ret[1510495])
  }
  function _ref(_domain(unmanaged domain(1,int(64),false)))[1252812].stride[1842934](const  ref arg this[1842938]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812]) : int(64)[13] "instantiated generic" "invisible fn" "method" "primary method" "no parens" "resolved"
  {
    val ret[1842940]:int(64)[13] "dead after last mention" "RVV" "temp"
    val call_tmp[1842948]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp"
    (1842950 'move' call_tmp[1842948](1842953 call _value[1253027] this[1842938]))
    const-val call_tmp[1842956]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1843189]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1843194 'move' coerce_tmp[1843189] call_tmp[1842948])
    (1842958 'move' call_tmp[1842956](1842961 call dsiStride[1842972] coerce_tmp[1843189]))
    (1842964 'move' ret[1842940] call_tmp[1842956])
    (1842968 return ret[1842940])
  }
  function _ref(_domain(unmanaged domain(1,int(64),false)))[1252812].contains[1846565](const  ref arg this[1846569]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812], const  ref arg i[1846600]:1*int(64)[1256714]) : bool[10] "instantiated generic" "invisible fn" "method" "primary method" "no doc" "resolved" "fn synchronization free"
  {
    val ret[1846602]:bool[10] "dead after last mention" "RVV" "temp"
    {
      val call_tmp[1846806]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp"
      (1846808 'move' call_tmp[1846806](1846811 call _value[1253027] this[1846569]))
      const-val call_tmp[1846822]:1*int(64)[1256714] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1918864]:1*int(64)[1256714] "temp"
      (1846827 call _makeIndexTuple[1846896] i[1846600] ret_tmp[1918864])
      (1918867 'move' call_tmp[1846822] ret_tmp[1918864])
      const-val call_tmp[1846830]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1847002]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1847007 'move' coerce_tmp[1847002] call_tmp[1846806])
      (1846832 'move' call_tmp[1846830](1846838 call dsiMember[1337295] coerce_tmp[1847002] call_tmp[1846822]))
      (1846840 'move' ret[1846602] call_tmp[1846830])
      (1929855 call chpl__autoDestroy[1697253] call_tmp[1846822])
      gotoReturn _end_contains[1846879] _end_contains[1846879]
    }
    label _end_contains[1846879]
    (1846881 return ret[1846602])
  }
  function _ref(_domain(unmanaged domain(1,int(64),false)))[1252812].contains[1846622](const  ref arg this[1846626]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812], const in arg _e0_i[1846685]:int(64)[13]) : bool[10] "expanded varargs" "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    const-val i[1846687]:1*int(64)[1256714] "insert auto destroy"
    const-val ret_tmp[1911960]:1*int(64)[1256714] "temp"
    (1846688 call chpl__init_tuple[1256732] _e0_i[1846685] ret_tmp[1911960])
    (1911963 'move' i[1846687] ret_tmp[1911960])
    val ret[1846648]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1846698]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1846700 'move' call_tmp[1846698](1846706 call contains[1846565] this[1846626] i[1846687]))
    (1846708 'move' ret[1846648] call_tmp[1846698])
    (1929858 call chpl__autoDestroy[1697253] i[1846687])
    (1846712 return ret[1846648])
  }
  function _ref(_domain(unmanaged domain(1,int(64),false)))[1252812].setIndices[1253919](const  ref arg this[1253923]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812], const  ref arg x[1253925]:1*range(int(64),bounded,false)[1244885]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "no doc" "resolved" "no return value for void"
  {
    val call_tmp[1253933]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp"
    (1253935 'move' call_tmp[1253933](1253938 call _value[1253027] this[1253923]))
    val coerce_tmp[1253988]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1253993 'move' coerce_tmp[1253988] call_tmp[1253933])
    (1253945 call dsiSetIndices[1251497] coerce_tmp[1253988] x[1253925])
    ref call_tmp[1253948]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
    (1253950 'move' call_tmp[1253948](1253953 call _instance[1253123] this[1253923]))
    (1253984 return _void[55])
  }
  function _ref(_domain(unmanaged domain(1,int(64),false)))[1252812].getIndices[1296962](const  ref arg this[1296966]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812], ref arg _retArg[1913332]:_ref(1*range(int(64),bounded,false))[1244943]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1296968]:1*range(int(64),bounded,false)[1244885] "dead after last mention" "RVV" "temp"
    val call_tmp[1296976]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp"
    (1296978 'move' call_tmp[1296976](1296981 call _value[1253027] this[1296966]))
    const-val call_tmp[1296984]:1*range(int(64),bounded,false)[1244885] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val coerce_tmp[1297029]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1297034 'move' coerce_tmp[1297029] call_tmp[1296976])
    const-val ret_tmp[1913338]:1*range(int(64),bounded,false)[1244885] "temp"
    (1296992 call dsiGetIndices[1297001] coerce_tmp[1297029] ret_tmp[1913338])
    (1913341 'move' call_tmp[1296984] ret_tmp[1913338])
    (1296993 'move' ret[1296968] call_tmp[1296984])
    (1913334 '=' _retArg[1913332] ret[1296968])
    (1913336 return _void[55])
  }
  function _ref(_domain(unmanaged domain(1,int(64),false)))[1252812]._instance[1253123](ref arg this[1253127]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812]) ref : _ref(domain(1,int(64),false))[1251138] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[1253129]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "RVV" "temp"
    ref call_tmp[1253137]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
    (1253139 'move' call_tmp[1253137](1253141 '.' this[1253127] _instance[1252780]))
    (1253144 'move' ret[1253129] call_tmp[1253137])
    (1253148 return ret[1253129])
  }
  function _ref(_domain(unmanaged domain(1,int(64),false)))[1252812]._unowned[1695487](ref arg this[1695491]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812]) ref : _ref(bool)[937388] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[1695493]:_ref(bool)[937388] "dead after last mention" "RVV" "temp"
    ref call_tmp[1695501]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (1695503 'move' call_tmp[1695501](1695505 '.' this[1695491] _unowned[1252782]))
    (1695508 'move' ret[1695493] call_tmp[1695501])
    (1695512 return ret[1695493])
  }
  type domain(1,int(64),false)[1252786] val _pid[1252777]:int(64)[13] val _instance[1252780]:domain(1,int(64),false)[1251123] "owned" val _unowned[1252782]:bool[10] forwarding ( )
  function _ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287226]._value[1287255](const  ref arg this[1287259]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287226]) : [domain(1,int(64),false)] locale[1256675] "alias scope from this" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no parens" "resolved" "fn synchronization free"
  {
    val ret[1287261]:[domain(1,int(64),false)] locale[1256675] "dead after last mention" "RVV" "temp"
    ref call_tmp[1287269]:_ref(DefaultRectangularArr(1,int(64),false,locale,int(64)))[1256691] "dead after last mention" "maybe param" "temp"
    (1287271 'move' call_tmp[1287269](1287274 call _instance[1287351] this[1287259]))
    {
      ref call_tmp[1287331]:_ref(DefaultRectangularArr(1,int(64),false,locale,int(64)))[1256691] "dead after last mention" "maybe param" "temp"
      (1287333 'move' call_tmp[1287331](1287336 call _instance[1287351] this[1287259]))
      (1287339 'move' ret[1287261](1287341 'deref' call_tmp[1287331]))
      gotoReturn _end__value[1287346] _end__value[1287346]
    }
    label _end__value[1287346]
    (1287348 return ret[1287261])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] unmanaged localesSignal?))[1325321]._value[1325350](const  ref arg this[1325354]:_ref(_array(unmanaged [domain(1,int(64),false)] unmanaged localesSignal?))[1325321]) : [domain(1,int(64),false)] unmanaged localesSignal?[1318401] "alias scope from this" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no parens" "resolved" "fn synchronization free"
  {
    val ret[1325356]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401] "dead after last mention" "RVV" "temp"
    ref call_tmp[1325364]:_ref(DefaultRectangularArr(1,int(64),false,unmanaged localesSignal?,int(64)))[1318417] "dead after last mention" "maybe param" "temp"
    (1325366 'move' call_tmp[1325364](1325369 call _instance[1325446] this[1325354]))
    {
      ref call_tmp[1325426]:_ref(DefaultRectangularArr(1,int(64),false,unmanaged localesSignal?,int(64)))[1318417] "dead after last mention" "maybe param" "temp"
      (1325428 'move' call_tmp[1325426](1325431 call _instance[1325446] this[1325354]))
      (1325434 'move' ret[1325356](1325436 'deref' call_tmp[1325426]))
      gotoReturn _end__value[1325441] _end__value[1325441]
    }
    label _end__value[1325441]
    (1325443 return ret[1325356])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055]._value[1366084](const  ref arg this[1366088]:_ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055]) : [domain(1,int(64),false)] real(64)[1358944] "alias scope from this" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no parens" "resolved" "fn synchronization free"
  {
    val ret[1366090]:[domain(1,int(64),false)] real(64)[1358944] "dead after last mention" "RVV" "temp"
    ref call_tmp[1366098]:_ref(DefaultRectangularArr(1,int(64),false,real(64),int(64)))[1358960] "dead after last mention" "maybe param" "temp"
    (1366100 'move' call_tmp[1366098](1366103 call _instance[1366180] this[1366088]))
    {
      ref call_tmp[1366160]:_ref(DefaultRectangularArr(1,int(64),false,real(64),int(64)))[1358960] "dead after last mention" "maybe param" "temp"
      (1366162 'move' call_tmp[1366160](1366165 call _instance[1366180] this[1366088]))
      (1366168 'move' ret[1366090](1366170 'deref' call_tmp[1366160]))
      gotoReturn _end__value[1366175] _end__value[1366175]
    }
    label _end__value[1366175]
    (1366177 return ret[1366090])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] int(64)))[1374530]._value[1374559](const  ref arg this[1374563]:_ref(_array(unmanaged [domain(1,int(64),false)] int(64)))[1374530]) : [domain(1,int(64),false)] int(64)[1368867] "alias scope from this" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no parens" "resolved" "fn synchronization free"
  {
    val ret[1374565]:[domain(1,int(64),false)] int(64)[1368867] "dead after last mention" "RVV" "temp"
    ref call_tmp[1374573]:_ref(DefaultRectangularArr(1,int(64),false,int(64),int(64)))[1368883] "dead after last mention" "maybe param" "temp"
    (1374575 'move' call_tmp[1374573](1374578 call _instance[1374655] this[1374563]))
    {
      ref call_tmp[1374635]:_ref(DefaultRectangularArr(1,int(64),false,int(64),int(64)))[1368883] "dead after last mention" "maybe param" "temp"
      (1374637 'move' call_tmp[1374635](1374640 call _instance[1374655] this[1374563]))
      (1374643 'move' ret[1374565](1374645 'deref' call_tmp[1374635]))
      gotoReturn _end__value[1374650] _end__value[1374650]
    }
    label _end__value[1374650]
    (1374652 return ret[1374565])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] range(int(64),bounded,false)))[1415976]._value[1416005](const  ref arg this[1416009]:_ref(_array(unmanaged [domain(1,int(64),false)] range(int(64),bounded,false)))[1415976]) : [domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "alias scope from this" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no parens" "resolved" "fn synchronization free"
  {
    val ret[1416011]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead after last mention" "RVV" "temp"
    ref call_tmp[1416019]:_ref(DefaultRectangularArr(1,int(64),false,range(int(64),bounded,false),int(64)))[1409240] "dead after last mention" "maybe param" "temp"
    (1416021 'move' call_tmp[1416019](1416024 call _instance[1416101] this[1416009]))
    {
      ref call_tmp[1416081]:_ref(DefaultRectangularArr(1,int(64),false,range(int(64),bounded,false),int(64)))[1409240] "dead after last mention" "maybe param" "temp"
      (1416083 'move' call_tmp[1416081](1416086 call _instance[1416101] this[1416009]))
      (1416089 'move' ret[1416011](1416091 'deref' call_tmp[1416081]))
      gotoReturn _end__value[1416096] _end__value[1416096]
    }
    label _end__value[1416096]
    (1416098 return ret[1416011])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] uint(64)))[1456173]._value[1456202](const  ref arg this[1456206]:_ref(_array(unmanaged [domain(1,int(64),false)] uint(64)))[1456173]) : [domain(1,int(64),false)] uint(64)[1450261] "alias scope from this" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no parens" "resolved" "fn synchronization free"
  {
    val ret[1456208]:[domain(1,int(64),false)] uint(64)[1450261] "dead after last mention" "RVV" "temp"
    ref call_tmp[1456216]:_ref(DefaultRectangularArr(1,int(64),false,uint(64),int(64)))[1450277] "dead after last mention" "maybe param" "temp"
    (1456218 'move' call_tmp[1456216](1456221 call _instance[1456298] this[1456206]))
    {
      ref call_tmp[1456278]:_ref(DefaultRectangularArr(1,int(64),false,uint(64),int(64)))[1450277] "dead after last mention" "maybe param" "temp"
      (1456280 'move' call_tmp[1456278](1456283 call _instance[1456298] this[1456206]))
      (1456286 'move' ret[1456208](1456288 'deref' call_tmp[1456278]))
      gotoReturn _end__value[1456293] _end__value[1456293]
    }
    label _end__value[1456293]
    (1456295 return ret[1456208])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287226].deinit[1726985](const  ref arg this[1726989]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287226]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "resolved" "no return value for void"
  {
    (1726996 call _do_destroy_array[1727001] this[1726989] 1)
    (1726998 return _void[55])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] unmanaged localesSignal?))[1325321].deinit[1755191](const  ref arg this[1755195]:_ref(_array(unmanaged [domain(1,int(64),false)] unmanaged localesSignal?))[1325321]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "resolved" "no return value for void"
  {
    (1755202 call _do_destroy_array[1755207] this[1755195] 1)
    (1755204 return _void[55])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055].deinit[1756252](const  ref arg this[1756256]:_ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "resolved" "no return value for void"
  {
    (1756263 call _do_destroy_array[1756268] this[1756256] 1)
    (1756265 return _void[55])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] int(64)))[1374530].deinit[1788601](const  ref arg this[1788605]:_ref(_array(unmanaged [domain(1,int(64),false)] int(64)))[1374530]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "resolved" "no return value for void"
  {
    (1788612 call _do_destroy_array[1788617] this[1788605] 1)
    (1788614 return _void[55])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] range(int(64),bounded,false)))[1415976].deinit[1789604](const  ref arg this[1789608]:_ref(_array(unmanaged [domain(1,int(64),false)] range(int(64),bounded,false)))[1415976]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "resolved" "no return value for void"
  {
    (1789615 call _do_destroy_array[1789620] this[1789608] 1)
    (1789617 return _void[55])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] uint(64)))[1456173].deinit[1819708](const  ref arg this[1819712]:_ref(_array(unmanaged [domain(1,int(64),false)] uint(64)))[1456173]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "resolved" "no return value for void"
  {
    (1819719 call _do_destroy_array[1819724] this[1819712] 1)
    (1819721 return _void[55])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287226]._dom[1346916](const  ref arg this[1346920]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287226], ref arg _retArg[1913963]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "no parens" "resolved" "return not owned"
  {
    const-val ret[1346922]:domain(1,int(64),false)[1252786] "dead after last mention" "RVV" "temp"
    val call_tmp[1346930]:[domain(1,int(64),false)] locale[1256675] "dead after last mention" "expr temp" "maybe param" "temp"
    (1346932 'move' call_tmp[1346930](1346935 call _value[1287255] this[1346920]))
    ref call_tmp[1346938]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[1346961]:[domain(1,int(64),false)] locale[1256675] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1346966 'move' coerce_tmp[1346961] call_tmp[1346930])
    (1346940 'move' call_tmp[1346938](1346943 call dom[1258208] coerce_tmp[1346961]))
    const-val call_tmp[1346946]:domain(1,int(64),false)[1252786] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val coerce_tmp[1346969]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1346973 'move' coerce_tmp[1346969](1346971 'deref' call_tmp[1346938]))
    const-val ret_tmp[1913825]:domain(1,int(64),false)[1252786] "temp"
    (1346951 call _getDomain[1332626] coerce_tmp[1346969] ret_tmp[1913825])
    (1913828 'move' call_tmp[1346946] ret_tmp[1913825])
    (1346953 'move' ret[1346922] call_tmp[1346946])
    (1913965 '=' _retArg[1913963] ret[1346922])
    (1913967 return _void[55])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055]._dom[1397434](const  ref arg this[1397438]:_ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055], ref arg _retArg[1914749]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "no parens" "resolved" "return not owned"
  {
    const-val ret[1397440]:domain(1,int(64),false)[1252786] "dead after last mention" "RVV" "temp"
    val call_tmp[1397448]:[domain(1,int(64),false)] real(64)[1358944] "dead after last mention" "expr temp" "maybe param" "temp"
    (1397450 'move' call_tmp[1397448](1397453 call _value[1366084] this[1397438]))
    ref call_tmp[1397456]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[1397479]:[domain(1,int(64),false)] real(64)[1358944] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1397484 'move' coerce_tmp[1397479] call_tmp[1397448])
    (1397458 'move' call_tmp[1397456](1397461 call dom[1360329] coerce_tmp[1397479]))
    const-val call_tmp[1397464]:domain(1,int(64),false)[1252786] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val coerce_tmp[1397487]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1397491 'move' coerce_tmp[1397487](1397489 'deref' call_tmp[1397456]))
    const-val ret_tmp[1913837]:domain(1,int(64),false)[1252786] "temp"
    (1397469 call _getDomain[1332626] coerce_tmp[1397487] ret_tmp[1913837])
    (1913840 'move' call_tmp[1397464] ret_tmp[1913837])
    (1397471 'move' ret[1397440] call_tmp[1397464])
    (1914751 '=' _retArg[1914749] ret[1397440])
    (1914753 return _void[55])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] range(int(64),bounded,false)))[1415976]._dom[1416274](const  ref arg this[1416278]:_ref(_array(unmanaged [domain(1,int(64),false)] range(int(64),bounded,false)))[1415976], ref arg _retArg[1914957]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "no parens" "resolved" "return not owned"
  {
    const-val ret[1416280]:domain(1,int(64),false)[1252786] "dead after last mention" "RVV" "temp"
    val call_tmp[1416288]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead after last mention" "expr temp" "maybe param" "temp"
    (1416290 'move' call_tmp[1416288](1416293 call _value[1416005] this[1416278]))
    ref call_tmp[1416296]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[1416319]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1416324 'move' coerce_tmp[1416319] call_tmp[1416288])
    (1416298 'move' call_tmp[1416296](1416301 call dom[1410591] coerce_tmp[1416319]))
    const-val call_tmp[1416304]:domain(1,int(64),false)[1252786] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val coerce_tmp[1416327]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1416331 'move' coerce_tmp[1416327](1416329 'deref' call_tmp[1416296]))
    const-val ret_tmp[1913843]:domain(1,int(64),false)[1252786] "temp"
    (1416309 call _getDomain[1332626] coerce_tmp[1416327] ret_tmp[1913843])
    (1913846 'move' call_tmp[1416304] ret_tmp[1913843])
    (1416311 'move' ret[1416280] call_tmp[1416304])
    (1914959 '=' _retArg[1914957] ret[1416280])
    (1914961 return _void[55])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] uint(64)))[1456173]._dom[1461791](const  ref arg this[1461795]:_ref(_array(unmanaged [domain(1,int(64),false)] uint(64)))[1456173], ref arg _retArg[1915334]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "no parens" "resolved" "return not owned"
  {
    const-val ret[1461797]:domain(1,int(64),false)[1252786] "dead after last mention" "RVV" "temp"
    val call_tmp[1461805]:[domain(1,int(64),false)] uint(64)[1450261] "dead after last mention" "expr temp" "maybe param" "temp"
    (1461807 'move' call_tmp[1461805](1461810 call _value[1456202] this[1461795]))
    ref call_tmp[1461813]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[1461836]:[domain(1,int(64),false)] uint(64)[1450261] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1461841 'move' coerce_tmp[1461836] call_tmp[1461805])
    (1461815 'move' call_tmp[1461813](1461818 call dom[1451646] coerce_tmp[1461836]))
    const-val call_tmp[1461821]:domain(1,int(64),false)[1252786] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val coerce_tmp[1461844]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1461848 'move' coerce_tmp[1461844](1461846 'deref' call_tmp[1461813]))
    const-val ret_tmp[1913855]:domain(1,int(64),false)[1252786] "temp"
    (1461826 call _getDomain[1332626] coerce_tmp[1461844] ret_tmp[1913855])
    (1913858 'move' call_tmp[1461821] ret_tmp[1913855])
    (1461828 'move' ret[1461797] call_tmp[1461821])
    (1915336 '=' _retArg[1915334] ret[1461797])
    (1915338 return _void[55])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] range(int(64),bounded,false)))[1415976].indices[1510406](const  ref arg this[1510410]:_ref(_array(unmanaged [domain(1,int(64),false)] range(int(64),bounded,false)))[1415976], ref arg _retArg[1916231]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "no parens" "resolved" "return not owned"
  {
    const-val ret[1510412]:domain(1,int(64),false)[1252786] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1510420]:domain(1,int(64),false)[1252786] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1914951]:domain(1,int(64),false)[1252786] "temp"
    (1510425 call _dom[1416274] this[1510410] ret_tmp[1914951])
    (1914954 'move' call_tmp[1510420] ret_tmp[1914951])
    (1510428 'move' ret[1510412] call_tmp[1510420])
    (1916233 '=' _retArg[1916231] ret[1510412])
    (1916235 return _void[55])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] unmanaged localesSignal?))[1325321].checkAccess[1336651](const  ref arg this[1336655]:_ref(_array(unmanaged [domain(1,int(64),false)] unmanaged localesSignal?))[1325321], const  ref arg indices[1336657]:1*int(64)[1256714], const in arg value[1336659]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401]) : void[4] "always propagate line file info" "insert line file info" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "resolved" "no return value for void"
  {
    {
      const-val call_tmp[1336685]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1337286]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1337291 'move' coerce_tmp[1337286] value[1336659])
      (1336687 'move' call_tmp[1336685](1336693 call dsiBoundsCheck[1337244] coerce_tmp[1337286] indices[1336657]))
      const-val call_tmp[1336695]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1336697 'move' call_tmp[1336695](1336700 call ![7494] call_tmp[1336685]))
      const-val call_tmp[1336702]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1336704 'move' call_tmp[1336702] call_tmp[1336695])
      if call_tmp[1336702]
      {
        {
          ref call_tmp[1336736]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
          (1336738 'move' call_tmp[1336736](1337881 '.' indices[1336657] x0[1256712]))
          ref call_tmp[1336743]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
          val coerce_tmp[1337884]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1337889 'move' coerce_tmp[1337884] value[1336659])
          (1336745 'move' call_tmp[1336743](1336748 call dom[1319786] coerce_tmp[1337884]))
          const-val call_tmp[1336751]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val coerce_tmp[1337892]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1337896 'move' coerce_tmp[1337892](1337894 'deref' call_tmp[1336743]))
          val coerce_tmp[1337898]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1337903 'move' coerce_tmp[1337898] coerce_tmp[1337892])
          const-val ret_tmp[1912166]:range(int(64),bounded,false)[1027003] "temp"
          (1336759 call dsiDim[1258249] coerce_tmp[1337898] ret_tmp[1912166])
          (1912169 'move' call_tmp[1336751] ret_tmp[1912166])
          const-val coerce_tmp[1337970]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1337974 'move' coerce_tmp[1337970](1337972 'deref' call_tmp[1336736]))
          (1336762 call halt[1337906] "array index out of bounds\n" "note: index was " coerce_tmp[1337970] " but array bounds are " call_tmp[1336751])
          (1925400 call chpl__autoDestroy[1407763] call_tmp[1336751])
        }
      }
    }
    (1337200 return _void[55])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287226].checkAccess[1348482](const  ref arg this[1348486]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287226], const  ref arg indices[1348488]:1*int(64)[1256714], const in arg value[1348490]:[domain(1,int(64),false)] locale[1256675]) : void[4] "always propagate line file info" "insert line file info" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    {
      const-val call_tmp[1348516]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1349117]:[domain(1,int(64),false)] locale[1256675] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1349122 'move' coerce_tmp[1349117] value[1348490])
      (1348518 'move' call_tmp[1348516](1348524 call dsiBoundsCheck[1349075] coerce_tmp[1349117] indices[1348488]))
      const-val call_tmp[1348526]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1348528 'move' call_tmp[1348526](1348531 call ![7494] call_tmp[1348516]))
      const-val call_tmp[1348533]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1348535 'move' call_tmp[1348533] call_tmp[1348526])
      if call_tmp[1348533]
      {
        {
          ref call_tmp[1348567]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
          (1348569 'move' call_tmp[1348567](1349149 '.' indices[1348488] x0[1256712]))
          ref call_tmp[1348574]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
          val coerce_tmp[1349152]:[domain(1,int(64),false)] locale[1256675] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1349157 'move' coerce_tmp[1349152] value[1348490])
          (1348576 'move' call_tmp[1348574](1348579 call dom[1258208] coerce_tmp[1349152]))
          const-val call_tmp[1348582]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val coerce_tmp[1349160]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1349164 'move' coerce_tmp[1349160](1349162 'deref' call_tmp[1348574]))
          val coerce_tmp[1349166]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1349171 'move' coerce_tmp[1349166] coerce_tmp[1349160])
          const-val ret_tmp[1912172]:range(int(64),bounded,false)[1027003] "temp"
          (1348590 call dsiDim[1258249] coerce_tmp[1349166] ret_tmp[1912172])
          (1912175 'move' call_tmp[1348582] ret_tmp[1912172])
          const-val coerce_tmp[1349174]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1349178 'move' coerce_tmp[1349174](1349176 'deref' call_tmp[1348567]))
          (1348593 call halt[1337906] "array index out of bounds\n" "note: index was " coerce_tmp[1349174] " but array bounds are " call_tmp[1348582])
          (1925449 call chpl__autoDestroy[1407763] call_tmp[1348582])
        }
      }
    }
    (1349031 return _void[55])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] int(64)))[1374530].checkAccess[1376797](const  ref arg this[1376801]:_ref(_array(unmanaged [domain(1,int(64),false)] int(64)))[1374530], const  ref arg indices[1376803]:1*int(64)[1256714], const in arg value[1376805]:[domain(1,int(64),false)] int(64)[1368867]) : void[4] "always propagate line file info" "insert line file info" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    {
      const-val call_tmp[1376831]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1377432]:[domain(1,int(64),false)] int(64)[1368867] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1377437 'move' coerce_tmp[1377432] value[1376805])
      (1376833 'move' call_tmp[1376831](1376839 call dsiBoundsCheck[1377390] coerce_tmp[1377432] indices[1376803]))
      const-val call_tmp[1376841]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1376843 'move' call_tmp[1376841](1376846 call ![7494] call_tmp[1376831]))
      const-val call_tmp[1376848]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1376850 'move' call_tmp[1376848] call_tmp[1376841])
      if call_tmp[1376848]
      {
        {
          ref call_tmp[1376882]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
          (1376884 'move' call_tmp[1376882](1377464 '.' indices[1376803] x0[1256712]))
          ref call_tmp[1376889]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
          val coerce_tmp[1377467]:[domain(1,int(64),false)] int(64)[1368867] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1377472 'move' coerce_tmp[1377467] value[1376805])
          (1376891 'move' call_tmp[1376889](1376894 call dom[1370252] coerce_tmp[1377467]))
          const-val call_tmp[1376897]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val coerce_tmp[1377475]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1377479 'move' coerce_tmp[1377475](1377477 'deref' call_tmp[1376889]))
          val coerce_tmp[1377481]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1377486 'move' coerce_tmp[1377481] coerce_tmp[1377475])
          const-val ret_tmp[1912226]:range(int(64),bounded,false)[1027003] "temp"
          (1376905 call dsiDim[1258249] coerce_tmp[1377481] ret_tmp[1912226])
          (1912229 'move' call_tmp[1376897] ret_tmp[1912226])
          const-val coerce_tmp[1377489]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1377493 'move' coerce_tmp[1377489](1377491 'deref' call_tmp[1376882]))
          (1376908 call halt[1337906] "array index out of bounds\n" "note: index was " coerce_tmp[1377489] " but array bounds are " call_tmp[1376897])
          (1925658 call chpl__autoDestroy[1407763] call_tmp[1376897])
        }
      }
    }
    (1377346 return _void[55])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] uint(64)))[1456173].checkAccess[1463710](const  ref arg this[1463714]:_ref(_array(unmanaged [domain(1,int(64),false)] uint(64)))[1456173], const  ref arg indices[1463716]:1*int(64)[1256714], const in arg value[1463718]:[domain(1,int(64),false)] uint(64)[1450261]) : void[4] "always propagate line file info" "insert line file info" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    {
      const-val call_tmp[1463744]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1464345]:[domain(1,int(64),false)] uint(64)[1450261] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1464350 'move' coerce_tmp[1464345] value[1463718])
      (1463746 'move' call_tmp[1463744](1463752 call dsiBoundsCheck[1464303] coerce_tmp[1464345] indices[1463716]))
      const-val call_tmp[1463754]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1463756 'move' call_tmp[1463754](1463759 call ![7494] call_tmp[1463744]))
      const-val call_tmp[1463761]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1463763 'move' call_tmp[1463761] call_tmp[1463754])
      if call_tmp[1463761]
      {
        {
          ref call_tmp[1463795]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
          (1463797 'move' call_tmp[1463795](1464377 '.' indices[1463716] x0[1256712]))
          ref call_tmp[1463802]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
          val coerce_tmp[1464380]:[domain(1,int(64),false)] uint(64)[1450261] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1464385 'move' coerce_tmp[1464380] value[1463718])
          (1463804 'move' call_tmp[1463802](1463807 call dom[1451646] coerce_tmp[1464380]))
          const-val call_tmp[1463810]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val coerce_tmp[1464388]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1464392 'move' coerce_tmp[1464388](1464390 'deref' call_tmp[1463802]))
          val coerce_tmp[1464394]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1464399 'move' coerce_tmp[1464394] coerce_tmp[1464388])
          const-val ret_tmp[1912304]:range(int(64),bounded,false)[1027003] "temp"
          (1463818 call dsiDim[1258249] coerce_tmp[1464394] ret_tmp[1912304])
          (1912307 'move' call_tmp[1463810] ret_tmp[1912304])
          const-val coerce_tmp[1464402]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1464406 'move' coerce_tmp[1464402](1464404 'deref' call_tmp[1463795]))
          (1463821 call halt[1337906] "array index out of bounds\n" "note: index was " coerce_tmp[1464402] " but array bounds are " call_tmp[1463810])
          (1926390 call chpl__autoDestroy[1407763] call_tmp[1463810])
        }
      }
    }
    (1464259 return _void[55])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] range(int(64),bounded,false)))[1415976].checkAccess[1512448](const  ref arg this[1512452]:_ref(_array(unmanaged [domain(1,int(64),false)] range(int(64),bounded,false)))[1415976], const  ref arg indices[1512454]:1*int(64)[1256714], const in arg value[1512456]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224]) : void[4] "always propagate line file info" "insert line file info" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "resolved" "no return value for void"
  {
    {
      const-val call_tmp[1512482]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1513046]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1513051 'move' coerce_tmp[1513046] value[1512456])
      (1512484 'move' call_tmp[1512482](1512490 call dsiBoundsCheck[1513004] coerce_tmp[1513046] indices[1512454]))
      const-val call_tmp[1512492]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1512494 'move' call_tmp[1512492](1512497 call ![7494] call_tmp[1512482]))
      const-val call_tmp[1512499]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1512501 'move' call_tmp[1512499] call_tmp[1512492])
      if call_tmp[1512499]
      {
        {
          ref call_tmp[1512533]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
          (1512535 'move' call_tmp[1512533](1513078 '.' indices[1512454] x0[1256712]))
          ref call_tmp[1512540]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
          val coerce_tmp[1513081]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1513086 'move' coerce_tmp[1513081] value[1512456])
          (1512542 'move' call_tmp[1512540](1512545 call dom[1410591] coerce_tmp[1513081]))
          const-val call_tmp[1512548]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val coerce_tmp[1513089]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1513093 'move' coerce_tmp[1513089](1513091 'deref' call_tmp[1512540]))
          val coerce_tmp[1513095]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1513100 'move' coerce_tmp[1513095] coerce_tmp[1513089])
          const-val ret_tmp[1912310]:range(int(64),bounded,false)[1027003] "temp"
          (1512556 call dsiDim[1258249] coerce_tmp[1513095] ret_tmp[1912310])
          (1912313 'move' call_tmp[1512548] ret_tmp[1912310])
          const-val coerce_tmp[1513103]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1513107 'move' coerce_tmp[1513103](1513105 'deref' call_tmp[1512533]))
          (1512559 call halt[1337906] "array index out of bounds\n" "note: index was " coerce_tmp[1513103] " but array bounds are " call_tmp[1512548])
          (1926774 call chpl__autoDestroy[1407763] call_tmp[1512548])
        }
      }
    }
    (1512997 return _void[55])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055].checkAccess[1515058](const  ref arg this[1515062]:_ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055], const  ref arg indices[1515064]:1*int(64)[1256714], const in arg value[1515066]:[domain(1,int(64),false)] real(64)[1358944]) : void[4] "always propagate line file info" "insert line file info" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    {
      const-val call_tmp[1515092]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1515693]:[domain(1,int(64),false)] real(64)[1358944] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1515698 'move' coerce_tmp[1515693] value[1515066])
      (1515094 'move' call_tmp[1515092](1515100 call dsiBoundsCheck[1515651] coerce_tmp[1515693] indices[1515064]))
      const-val call_tmp[1515102]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1515104 'move' call_tmp[1515102](1515107 call ![7494] call_tmp[1515092]))
      const-val call_tmp[1515109]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1515111 'move' call_tmp[1515109] call_tmp[1515102])
      if call_tmp[1515109]
      {
        {
          ref call_tmp[1515143]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
          (1515145 'move' call_tmp[1515143](1515725 '.' indices[1515064] x0[1256712]))
          ref call_tmp[1515150]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
          val coerce_tmp[1515728]:[domain(1,int(64),false)] real(64)[1358944] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1515733 'move' coerce_tmp[1515728] value[1515066])
          (1515152 'move' call_tmp[1515150](1515155 call dom[1360329] coerce_tmp[1515728]))
          const-val call_tmp[1515158]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val coerce_tmp[1515736]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1515740 'move' coerce_tmp[1515736](1515738 'deref' call_tmp[1515150]))
          val coerce_tmp[1515742]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1515747 'move' coerce_tmp[1515742] coerce_tmp[1515736])
          const-val ret_tmp[1912316]:range(int(64),bounded,false)[1027003] "temp"
          (1515166 call dsiDim[1258249] coerce_tmp[1515742] ret_tmp[1912316])
          (1912319 'move' call_tmp[1515158] ret_tmp[1912316])
          const-val coerce_tmp[1515750]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1515754 'move' coerce_tmp[1515750](1515752 'deref' call_tmp[1515143]))
          (1515169 call halt[1337906] "array index out of bounds\n" "note: index was " coerce_tmp[1515750] " but array bounds are " call_tmp[1515158])
          (1926787 call chpl__autoDestroy[1407763] call_tmp[1515158])
        }
      }
    }
    (1515607 return _void[55])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] unmanaged localesSignal?))[1325321].this[1332486](const  ref arg this[1332490]:_ref(_array(unmanaged [domain(1,int(64),false)] unmanaged localesSignal?))[1325321], const  ref arg i[1332529]:1*int(64)[1256714]) ref : _ref(localesSignal)[1316692] "alias scope from this" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "reference to const when const this" "removable array access" "resolved"
  {
    ref ret[1332531]:_ref(localesSignal)[1316692] "dead after last mention" "RVV" "temp"
    val call_tmp[1336141]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401] "dead at end of block" "maybe param" "temp"
    (1336143 'move' call_tmp[1336141](1336146 call _value[1325350] this[1332490]))
    const value[1336149]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401] "dead at end of block" "const" "insert auto destroy"
    (1336151 'move' value[1336149](1344810 call chpl__initCopy[1324319] call_tmp[1336141]))
    {
      (1336168 call checkAccess[1336651] this[1332490] i[1332529] value[1336149])
    }
    {
      ref call_tmp[1336248]:_ref(localesSignal)[1316692] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[1344855]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1344860 'move' coerce_tmp[1344855] value[1336149])
      val coerce_tmp[1344862]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1344867 'move' coerce_tmp[1344862] value[1336149])
      val coerce_tmp[1344869]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1344874 'move' coerce_tmp[1344869] value[1336149])
      (1336250 'move' call_tmp[1336248](1336256 call dsiAccess[1344273] coerce_tmp[1344855] i[1332529]))
      (1336258 'move' ret[1332531] call_tmp[1336248])
      gotoReturn _end_this[1336293] _end_this[1336293]
    }
    label _end_this[1336293]
    (1336295 return ret[1332531])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287226].this[1346829](const  ref arg this[1346833]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287226], const  ref arg i[1346872]:1*int(64)[1256714]) ref : _ref(locale)[949033] "alias scope from this" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "reference to const when const this" "removable array access" "resolved" "fn synchronization free"
  {
    ref ret[1346874]:_ref(locale)[949033] "dead after last mention" "RVV" "temp"
    val call_tmp[1348137]:[domain(1,int(64),false)] locale[1256675] "dead at end of block" "maybe param" "temp"
    (1348139 'move' call_tmp[1348137](1348142 call _value[1287255] this[1346833]))
    const value[1348145]:[domain(1,int(64),false)] locale[1256675] "dead at end of block" "const" "insert auto destroy"
    (1348147 'move' value[1348145](1349842 call chpl__initCopy[1264910] call_tmp[1348137]))
    {
      (1348164 call checkAccess[1348482] this[1346833] i[1346872] value[1348145])
    }
    {
      ref call_tmp[1348244]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[1349882]:[domain(1,int(64),false)] locale[1256675] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1349887 'move' coerce_tmp[1349882] value[1348145])
      val coerce_tmp[1349889]:[domain(1,int(64),false)] locale[1256675] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1349894 'move' coerce_tmp[1349889] value[1348145])
      (1348246 'move' call_tmp[1348244](1348252 call dsiAccess[1349461] coerce_tmp[1349882] i[1346872]))
      (1348254 'move' ret[1346874] call_tmp[1348244])
      gotoReturn _end_this[1348289] _end_this[1348289]
    }
    label _end_this[1348289]
    (1348291 return ret[1346874])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] int(64)))[1374530].this[1374934](const  ref arg this[1374938]:_ref(_array(unmanaged [domain(1,int(64),false)] int(64)))[1374530], const  ref arg i[1374977]:1*int(64)[1256714]) ref : _ref(int(64))[936761] "alias scope from this" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "reference to const when const this" "removable array access" "resolved" "fn synchronization free"
  {
    ref ret[1374979]:_ref(int(64))[936761] "dead after last mention" "RVV" "temp"
    val call_tmp[1376264]:[domain(1,int(64),false)] int(64)[1368867] "dead at end of block" "maybe param" "temp"
    (1376266 'move' call_tmp[1376264](1376269 call _value[1374559] this[1374938]))
    const value[1376272]:[domain(1,int(64),false)] int(64)[1368867] "dead at end of block" "const" "insert auto destroy"
    (1376274 'move' value[1376272](1379568 call chpl__initCopy[1373528] call_tmp[1376264]))
    {
      (1376291 call checkAccess[1376797] this[1374938] i[1374977] value[1376272])
    }
    {
      ref call_tmp[1376371]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[1379613]:[domain(1,int(64),false)] int(64)[1368867] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1379618 'move' coerce_tmp[1379613] value[1376272])
      val coerce_tmp[1379620]:[domain(1,int(64),false)] int(64)[1368867] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1379625 'move' coerce_tmp[1379620] value[1376272])
      val coerce_tmp[1379627]:[domain(1,int(64),false)] int(64)[1368867] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1379632 'move' coerce_tmp[1379627] value[1376272])
      (1376373 'move' call_tmp[1376371](1376379 call dsiAccess[1377776] coerce_tmp[1379613] i[1374977]))
      (1376381 'move' ret[1374979] call_tmp[1376371])
      gotoReturn _end_this[1376416] _end_this[1376416]
    }
    label _end_this[1376416]
    (1376418 return ret[1374979])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] uint(64)))[1456173].this[1461929](const  ref arg this[1461933]:_ref(_array(unmanaged [domain(1,int(64),false)] uint(64)))[1456173], const  ref arg i[1461972]:1*int(64)[1256714]) ref : _ref(uint(64))[936790] "alias scope from this" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "reference to const when const this" "removable array access" "resolved" "fn synchronization free"
  {
    ref ret[1461974]:_ref(uint(64))[936790] "dead after last mention" "RVV" "temp"
    val call_tmp[1463200]:[domain(1,int(64),false)] uint(64)[1450261] "dead at end of block" "maybe param" "temp"
    (1463202 'move' call_tmp[1463200](1463205 call _value[1456202] this[1461933]))
    const value[1463208]:[domain(1,int(64),false)] uint(64)[1450261] "dead at end of block" "const" "insert auto destroy"
    (1463210 'move' value[1463208](1465226 call chpl__initCopy[1455171] call_tmp[1463200]))
    {
      (1463227 call checkAccess[1463710] this[1461933] i[1461972] value[1463208])
    }
    {
      ref call_tmp[1463307]:_ref(uint(64))[936790] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[1465271]:[domain(1,int(64),false)] uint(64)[1450261] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1465276 'move' coerce_tmp[1465271] value[1463208])
      val coerce_tmp[1465278]:[domain(1,int(64),false)] uint(64)[1450261] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1465283 'move' coerce_tmp[1465278] value[1463208])
      val coerce_tmp[1465285]:[domain(1,int(64),false)] uint(64)[1450261] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1465290 'move' coerce_tmp[1465285] value[1463208])
      (1463309 'move' call_tmp[1463307](1463315 call dsiAccess[1464689] coerce_tmp[1465271] i[1461972]))
      (1463317 'move' ret[1461974] call_tmp[1463307])
      gotoReturn _end_this[1463352] _end_this[1463352]
    }
    label _end_this[1463352]
    (1463354 return ret[1461974])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055].this[1513397](const  ref arg this[1513401]:_ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055], const  ref arg i[1513440]:1*int(64)[1256714]) ref : _ref(real(64))[936906] "alias scope from this" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "reference to const when const this" "removable array access" "resolved" "fn synchronization free"
  {
    ref ret[1513442]:_ref(real(64))[936906] "dead after last mention" "RVV" "temp"
    val call_tmp[1514548]:[domain(1,int(64),false)] real(64)[1358944] "dead at end of block" "maybe param" "temp"
    (1514550 'move' call_tmp[1514548](1514553 call _value[1366084] this[1513401]))
    const value[1514556]:[domain(1,int(64),false)] real(64)[1358944] "dead at end of block" "const" "insert auto destroy"
    (1514558 'move' value[1514556](1515877 call chpl__initCopy[1365053] call_tmp[1514548]))
    {
      (1514575 call checkAccess[1515058] this[1513401] i[1513440] value[1514556])
    }
    {
      ref call_tmp[1514655]:_ref(real(64))[936906] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[1515922]:[domain(1,int(64),false)] real(64)[1358944] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1515927 'move' coerce_tmp[1515922] value[1514556])
      val coerce_tmp[1515929]:[domain(1,int(64),false)] real(64)[1358944] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1515934 'move' coerce_tmp[1515929] value[1514556])
      val coerce_tmp[1515936]:[domain(1,int(64),false)] real(64)[1358944] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1515941 'move' coerce_tmp[1515936] value[1514556])
      (1514657 'move' call_tmp[1514655](1514663 call dsiAccess[1389828] coerce_tmp[1515922] i[1513440]))
      (1514665 'move' ret[1513442] call_tmp[1514655])
      gotoReturn _end_this[1514700] _end_this[1514700]
    }
    label _end_this[1514700]
    (1514702 return ret[1513442])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] int(64)))[1374530].this[1375112](const  ref arg this[1375116]:_ref(_array(unmanaged [domain(1,int(64),false)] int(64)))[1374530], const  ref arg i[1375155]:1*int(64)[1256714]) : int(64)[13] "alias scope from this" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "resolved" "fn synchronization free"
  {
    val ret[1375177]:int(64)[13] "dead after last mention" "RVV" "temp"
    val call_tmp[1376428]:[domain(1,int(64),false)] int(64)[1368867] "dead at end of block" "maybe param" "temp"
    (1376430 'move' call_tmp[1376428](1376433 call _value[1374559] this[1375116]))
    const value[1376436]:[domain(1,int(64),false)] int(64)[1368867] "dead at end of block" "const" "insert auto destroy"
    (1376438 'move' value[1376436](1376753 call chpl__initCopy[1373528] call_tmp[1376428]))
    {
      (1376455 call checkAccess[1376797] this[1375116] i[1375155] value[1376436])
    }
    {
      ref call_tmp[1376535]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[1378101]:[domain(1,int(64),false)] int(64)[1368867] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1378106 'move' coerce_tmp[1378101] value[1376436])
      val coerce_tmp[1378108]:[domain(1,int(64),false)] int(64)[1368867] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1378113 'move' coerce_tmp[1378108] value[1376436])
      val coerce_tmp[1378115]:[domain(1,int(64),false)] int(64)[1368867] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1378120 'move' coerce_tmp[1378115] value[1376436])
      val tmp[1883206]:int(64)[13] "temp"
      (1376537 'move' tmp[1883206](1378010 call dsiAccess[1377824] coerce_tmp[1378108] i[1375155]))
      (1883210 'move' call_tmp[1376535](1883208 'addr of' tmp[1883206]))
      (1376545 'move' ret[1375177](1376547 'deref' call_tmp[1376535]))
      gotoReturn _end_this[1376580] _end_this[1376580]
    }
    label _end_this[1376580]
    (1376582 return ret[1375177])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] uint(64)))[1456173].this[1462048](const  ref arg this[1462052]:_ref(_array(unmanaged [domain(1,int(64),false)] uint(64)))[1456173], const  ref arg i[1462091]:1*int(64)[1256714]) : uint(64)[115] "alias scope from this" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "resolved" "fn synchronization free"
  {
    val ret[1462113]:uint(64)[115] "dead after last mention" "RVV" "temp"
    val call_tmp[1463364]:[domain(1,int(64),false)] uint(64)[1450261] "dead at end of block" "maybe param" "temp"
    (1463366 'move' call_tmp[1463364](1463369 call _value[1456202] this[1462052]))
    const value[1463372]:[domain(1,int(64),false)] uint(64)[1450261] "dead at end of block" "const" "insert auto destroy"
    (1463374 'move' value[1463372](1463689 call chpl__initCopy[1455171] call_tmp[1463364]))
    {
      (1463391 call checkAccess[1463710] this[1462052] i[1462091] value[1463372])
    }
    {
      ref call_tmp[1463471]:_ref(uint(64))[936790] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[1465014]:[domain(1,int(64),false)] uint(64)[1450261] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1465019 'move' coerce_tmp[1465014] value[1463372])
      val coerce_tmp[1465021]:[domain(1,int(64),false)] uint(64)[1450261] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1465026 'move' coerce_tmp[1465021] value[1463372])
      val coerce_tmp[1465028]:[domain(1,int(64),false)] uint(64)[1450261] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1465033 'move' coerce_tmp[1465028] value[1463372])
      val tmp[1883230]:uint(64)[115] "temp"
      (1463473 'move' tmp[1883230](1464923 call dsiAccess[1464737] coerce_tmp[1465021] i[1462091]))
      (1883234 'move' call_tmp[1463471](1883232 'addr of' tmp[1883230]))
      (1463481 'move' ret[1462113](1463483 'deref' call_tmp[1463471]))
      gotoReturn _end_this[1463516] _end_this[1463516]
    }
    label _end_this[1463516]
    (1463518 return ret[1462113])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] range(int(64),bounded,false)))[1415976].this[1510906](const  ref arg this[1510910]:_ref(_array(unmanaged [domain(1,int(64),false)] range(int(64),bounded,false)))[1415976], const  ref arg i[1510949]:1*int(64)[1256714], ref arg _retArg[1916243]:_ref(range(int(64),bounded,false))[1027047]) : void[4] "alias scope from this" "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "resolved"
  {
    const-val ret[1510971]:range(int(64),bounded,false)[1027003] "dead after last mention" "RVV" "temp"
    val call_tmp[1512102]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead at end of block" "maybe param" "temp"
    (1512104 'move' call_tmp[1512102](1512107 call _value[1416005] this[1510910]))
    const value[1512110]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead at end of block" "const" "insert auto destroy"
    (1512112 'move' value[1512110](1512427 call chpl__initCopy[1414974] call_tmp[1512102]))
    {
      (1512129 call checkAccess[1512448] this[1510910] i[1510949] value[1512110])
    }
    {
      ref call_tmp[1512209]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "ref to immutable" "temp"
      val coerce_tmp[1513133]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1513138 'move' coerce_tmp[1513133] value[1512110])
      val coerce_tmp[1513140]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1513145 'move' coerce_tmp[1513140] value[1512110])
      val coerce_tmp[1513147]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1513152 'move' coerce_tmp[1513147] value[1512110])
      const-val tmp[1883284]:range(int(64),bounded,false)[1027003] "insert auto destroy" "temp"
      const-val ret_tmp[1915811]:range(int(64),bounded,false)[1027003] "temp"
      (1513124 call dsiAccess[1489149] coerce_tmp[1513140] i[1510949] ret_tmp[1915811])
      (1915814 'move' tmp[1883284] ret_tmp[1915811])
      (1883288 'move' call_tmp[1512209](1883286 'addr of' tmp[1883284]))
      (1512219 'move' ret[1510971](1916247 call chpl__initCopy[1085195] call_tmp[1512209]))
      (1926758 call chpl__autoDestroy[1407763] tmp[1883284])
      gotoReturn _end_this[1512254] _end_this[1512254]
    }
    label _end_this[1512254]
    (1916245 '=' _retArg[1916243] ret[1510971])
    (1916249 return _void[55])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055].this[1513516](const  ref arg this[1513520]:_ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055], const  ref arg i[1513559]:1*int(64)[1256714]) : real(64)[16] "alias scope from this" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "resolved" "fn synchronization free"
  {
    val ret[1513581]:real(64)[16] "dead after last mention" "RVV" "temp"
    val call_tmp[1514712]:[domain(1,int(64),false)] real(64)[1358944] "dead at end of block" "maybe param" "temp"
    (1514714 'move' call_tmp[1514712](1514717 call _value[1366084] this[1513520]))
    const value[1514720]:[domain(1,int(64),false)] real(64)[1358944] "dead at end of block" "const" "insert auto destroy"
    (1514722 'move' value[1514720](1515037 call chpl__initCopy[1365053] call_tmp[1514712]))
    {
      (1514739 call checkAccess[1515058] this[1513520] i[1513559] value[1514720])
    }
    {
      ref call_tmp[1514819]:_ref(real(64))[936906] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[1515780]:[domain(1,int(64),false)] real(64)[1358944] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1515785 'move' coerce_tmp[1515780] value[1514720])
      val coerce_tmp[1515787]:[domain(1,int(64),false)] real(64)[1358944] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1515792 'move' coerce_tmp[1515787] value[1514720])
      val coerce_tmp[1515794]:[domain(1,int(64),false)] real(64)[1358944] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1515799 'move' coerce_tmp[1515794] value[1514720])
      val tmp[1883296]:real(64)[16] "temp"
      (1514821 'move' tmp[1883296](1515771 call dsiAccess[1389876] coerce_tmp[1515787] i[1513559]))
      (1883300 'move' call_tmp[1514819](1883298 'addr of' tmp[1883296]))
      (1514829 'move' ret[1513581](1514831 'deref' call_tmp[1514819]))
      gotoReturn _end_this[1514864] _end_this[1514864]
    }
    label _end_this[1514864]
    (1514866 return ret[1513581])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287226].this[1347106](const  ref arg this[1347110]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287226], const  ref arg i[1347149]:1*int(64)[1256714]) const ref : _ref(locale)[949033] "alias scope from this" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "resolved"
  {
    ref ret[1347171]:_ref(locale)[949033] "dead after last mention" "RVV" "temp"
    val call_tmp[1348301]:[domain(1,int(64),false)] locale[1256675] "dead at end of block" "maybe param" "temp"
    (1348303 'move' call_tmp[1348301](1348306 call _value[1287255] this[1347110]))
    const value[1348309]:[domain(1,int(64),false)] locale[1256675] "dead at end of block" "const" "insert auto destroy"
    (1348311 'move' value[1348309](1348461 call chpl__initCopy[1264910] call_tmp[1348301]))
    {
      (1348328 call checkAccess[1348482] this[1347110] i[1347149] value[1348309])
    }
    {
      ref call_tmp[1348408]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[1349740]:[domain(1,int(64),false)] locale[1256675] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1349745 'move' coerce_tmp[1349740] value[1348309])
      val coerce_tmp[1349747]:[domain(1,int(64),false)] locale[1256675] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1349752 'move' coerce_tmp[1349747] value[1348309])
      (1348410 'move' call_tmp[1348408](1349695 call dsiAccess[1349581] coerce_tmp[1349747] i[1347149]))
      (1348418 'move' ret[1347171] call_tmp[1348408])
      gotoReturn _end_this[1348453] _end_this[1348453]
    }
    label _end_this[1348453]
    (1348455 return ret[1347171])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] range(int(64),bounded,false)))[1415976].this[1511005](const  ref arg this[1511009]:_ref(_array(unmanaged [domain(1,int(64),false)] range(int(64),bounded,false)))[1415976], const  ref arg i[1511048]:1*int(64)[1256714]) const ref : _ref(range(int(64),bounded,false))[1027047] "alias scope from this" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "resolved"
  {
    ref ret[1511070]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "RVV" "temp"
    val call_tmp[1512266]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead at end of block" "maybe param" "temp"
    (1512268 'move' call_tmp[1512266](1512271 call _value[1416005] this[1511009]))
    const value[1512274]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead at end of block" "const" "insert auto destroy"
    (1512276 'move' value[1512274](1513159 call chpl__initCopy[1414974] call_tmp[1512266]))
    {
      (1512293 call checkAccess[1512448] this[1511009] i[1511048] value[1512274])
    }
    {
      ref call_tmp[1512373]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[1513204]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1513209 'move' coerce_tmp[1513204] value[1512274])
      val coerce_tmp[1513211]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1513216 'move' coerce_tmp[1513211] value[1512274])
      val coerce_tmp[1513218]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1513223 'move' coerce_tmp[1513218] value[1512274])
      (1512375 'move' call_tmp[1512373](1513200 call dsiAccess[1489209] coerce_tmp[1513218] i[1511048]))
      (1512383 'move' ret[1511070] call_tmp[1512373])
      gotoReturn _end_this[1512418] _end_this[1512418]
    }
    label _end_this[1512418]
    (1512420 return ret[1511070])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] unmanaged localesSignal?))[1325321].this[1333056](const  ref arg this[1333060]:_ref(_array(unmanaged [domain(1,int(64),false)] unmanaged localesSignal?))[1325321], const in arg _e0_i[1333162]:int(64)[13]) ref : _ref(localesSignal)[1316692] "alias scope from this" "expanded varargs" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "reference to const when const this" "removable array access" "resolved"
  {
    const-val i[1333164]:1*int(64)[1256714] "insert auto destroy"
    const-val ret_tmp[1911726]:1*int(64)[1256714] "temp"
    (1333165 call chpl__init_tuple[1256732] _e0_i[1333162] ret_tmp[1911726])
    (1911729 'move' i[1333164] ret_tmp[1911726])
    ref ret[1333090]:_ref(localesSignal)[1316692] "dead after last mention" "RVV" "temp"
    ref call_tmp[1334862]:_ref(localesSignal)[1316692] "dead after last mention" "maybe param" "temp"
    (1334864 'move' call_tmp[1334862](1334867 call this[1332486] this[1333060] i[1333164]))
    (1334869 'move' ret[1333090] call_tmp[1334862])
    (1925390 call chpl__autoDestroy[1697253] i[1333164])
    (1334873 return ret[1333090])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287226].this[1347205](const  ref arg this[1347209]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287226], const in arg _e0_i[1347311]:int(64)[13]) ref : _ref(locale)[949033] "alias scope from this" "expanded varargs" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "reference to const when const this" "removable array access" "resolved" "fn synchronization free"
  {
    const-val i[1347313]:1*int(64)[1256714] "insert auto destroy"
    const-val ret_tmp[1911744]:1*int(64)[1256714] "temp"
    (1347314 call chpl__init_tuple[1256732] _e0_i[1347311] ret_tmp[1911744])
    (1911747 'move' i[1347313] ret_tmp[1911744])
    ref ret[1347239]:_ref(locale)[949033] "dead after last mention" "RVV" "temp"
    ref call_tmp[1347958]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
    (1347960 'move' call_tmp[1347958](1347963 call this[1346829] this[1347209] i[1347313]))
    (1347965 'move' ret[1347239] call_tmp[1347958])
    (1925442 call chpl__autoDestroy[1697253] i[1347313])
    (1347969 return ret[1347239])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] int(64)))[1374530].this[1375310](const  ref arg this[1375314]:_ref(_array(unmanaged [domain(1,int(64),false)] int(64)))[1374530], const in arg _e0_i[1375416]:int(64)[13]) ref : _ref(int(64))[936761] "alias scope from this" "expanded varargs" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "reference to const when const this" "removable array access" "resolved" "fn synchronization free"
  {
    const-val i[1375418]:1*int(64)[1256714] "insert auto destroy"
    const-val ret_tmp[1911762]:1*int(64)[1256714] "temp"
    (1375419 call chpl__init_tuple[1256732] _e0_i[1375416] ret_tmp[1911762])
    (1911765 'move' i[1375418] ret_tmp[1911762])
    ref ret[1375344]:_ref(int(64))[936761] "dead after last mention" "RVV" "temp"
    ref call_tmp[1376063]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (1376065 'move' call_tmp[1376063](1376068 call this[1374934] this[1375314] i[1375418]))
    (1376070 'move' ret[1375344] call_tmp[1376063])
    (1925648 call chpl__autoDestroy[1697253] i[1375418])
    (1376074 return ret[1375344])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] uint(64)))[1456173].this[1462246](const  ref arg this[1462250]:_ref(_array(unmanaged [domain(1,int(64),false)] uint(64)))[1456173], const in arg _e0_i[1462352]:int(64)[13]) ref : _ref(uint(64))[936790] "alias scope from this" "expanded varargs" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "reference to const when const this" "removable array access" "resolved" "fn synchronization free"
  {
    const-val i[1462354]:1*int(64)[1256714] "insert auto destroy"
    const-val ret_tmp[1911828]:1*int(64)[1256714] "temp"
    (1462355 call chpl__init_tuple[1256732] _e0_i[1462352] ret_tmp[1911828])
    (1911831 'move' i[1462354] ret_tmp[1911828])
    ref ret[1462280]:_ref(uint(64))[936790] "dead after last mention" "RVV" "temp"
    ref call_tmp[1462999]:_ref(uint(64))[936790] "dead after last mention" "maybe param" "temp"
    (1463001 'move' call_tmp[1462999](1463004 call this[1461929] this[1462250] i[1462354]))
    (1463006 'move' ret[1462280] call_tmp[1462999])
    (1926380 call chpl__autoDestroy[1697253] i[1462354])
    (1463010 return ret[1462280])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055].this[1513714](const  ref arg this[1513718]:_ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055], const in arg _e0_i[1513820]:int(64)[13]) ref : _ref(real(64))[936906] "alias scope from this" "expanded varargs" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "reference to const when const this" "removable array access" "resolved" "fn synchronization free"
  {
    const-val i[1513822]:1*int(64)[1256714] "insert auto destroy"
    const-val ret_tmp[1911888]:1*int(64)[1256714] "temp"
    (1513823 call chpl__init_tuple[1256732] _e0_i[1513820] ret_tmp[1911888])
    (1911891 'move' i[1513822] ret_tmp[1911888])
    ref ret[1513748]:_ref(real(64))[936906] "dead after last mention" "RVV" "temp"
    ref call_tmp[1514347]:_ref(real(64))[936906] "dead after last mention" "maybe param" "temp"
    (1514349 'move' call_tmp[1514347](1514352 call this[1513397] this[1513718] i[1513822]))
    (1514354 'move' ret[1513748] call_tmp[1514347])
    (1926777 call chpl__autoDestroy[1697253] i[1513822])
    (1514358 return ret[1513748])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] int(64)))[1374530].this[1375426](const  ref arg this[1375430]:_ref(_array(unmanaged [domain(1,int(64),false)] int(64)))[1374530], const in arg _e0_i[1375552]:int(64)[13]) : int(64)[13] "alias scope from this" "expanded varargs" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "resolved" "fn synchronization free"
  {
    const-val i[1375554]:1*int(64)[1256714] "insert auto destroy"
    const-val ret_tmp[1911768]:1*int(64)[1256714] "temp"
    (1375555 call chpl__init_tuple[1256732] _e0_i[1375552] ret_tmp[1911768])
    (1911771 'move' i[1375554] ret_tmp[1911768])
    val ret[1375480]:int(64)[13] "dead after last mention" "RVV" "temp"
    ref call_tmp[1376084]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    val tmp[1883200]:int(64)[13] "temp"
    (1376086 'move' tmp[1883200](1376421 call this[1375112] this[1375430] i[1375554]))
    (1883204 'move' call_tmp[1376084](1883202 'addr of' tmp[1883200]))
    (1376091 'move' ret[1375480](1376093 'deref' call_tmp[1376084]))
    (1925651 call chpl__autoDestroy[1697253] i[1375554])
    (1376095 return ret[1375480])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] uint(64)))[1456173].this[1462362](const  ref arg this[1462366]:_ref(_array(unmanaged [domain(1,int(64),false)] uint(64)))[1456173], const in arg _e0_i[1462488]:int(64)[13]) : uint(64)[115] "alias scope from this" "expanded varargs" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "resolved" "fn synchronization free"
  {
    const-val i[1462490]:1*int(64)[1256714] "insert auto destroy"
    const-val ret_tmp[1911834]:1*int(64)[1256714] "temp"
    (1462491 call chpl__init_tuple[1256732] _e0_i[1462488] ret_tmp[1911834])
    (1911837 'move' i[1462490] ret_tmp[1911834])
    val ret[1462416]:uint(64)[115] "dead after last mention" "RVV" "temp"
    ref call_tmp[1463020]:_ref(uint(64))[936790] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    val tmp[1883224]:uint(64)[115] "temp"
    (1463022 'move' tmp[1883224](1463357 call this[1462048] this[1462366] i[1462490]))
    (1883228 'move' call_tmp[1463020](1883226 'addr of' tmp[1883224]))
    (1463027 'move' ret[1462416](1463029 'deref' call_tmp[1463020]))
    (1926383 call chpl__autoDestroy[1697253] i[1462490])
    (1463031 return ret[1462416])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] range(int(64),bounded,false)))[1415976].this[1511220](const  ref arg this[1511224]:_ref(_array(unmanaged [domain(1,int(64),false)] range(int(64),bounded,false)))[1415976], const in arg _e0_i[1511346]:int(64)[13], ref arg _retArg[1916257]:_ref(range(int(64),bounded,false))[1027047]) : void[4] "alias scope from this" "expanded varargs" "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "resolved"
  {
    const-val i[1511348]:1*int(64)[1256714] "insert auto destroy"
    const-val ret_tmp[1911876]:1*int(64)[1256714] "temp"
    (1511349 call chpl__init_tuple[1256732] _e0_i[1511346] ret_tmp[1911876])
    (1911879 'move' i[1511348] ret_tmp[1911876])
    const-val ret[1511274]:range(int(64),bounded,false)[1027003] "dead after last mention" "RVV" "temp"
    ref call_tmp[1511758]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "ref to immutable" "temp"
    const-val tmp[1883278]:range(int(64),bounded,false)[1027003] "insert auto destroy" "temp"
    const-val ret_tmp[1916237]:range(int(64),bounded,false)[1027003] "temp"
    (1512095 call this[1510906] this[1511224] i[1511348] ret_tmp[1916237])
    (1916240 'move' tmp[1883278] ret_tmp[1916237])
    (1883282 'move' call_tmp[1511758](1883280 'addr of' tmp[1883278]))
    (1511765 'move' ret[1511274](1916261 call chpl__initCopy[1085195] call_tmp[1511758]))
    (1916259 '=' _retArg[1916257] ret[1511274])
    (1926764 call chpl__autoDestroy[1407763] tmp[1883278])
    (1926767 call chpl__autoDestroy[1697253] i[1511348])
    (1916263 return _void[55])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055].this[1513830](const  ref arg this[1513834]:_ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055], const in arg _e0_i[1513956]:int(64)[13]) : real(64)[16] "alias scope from this" "expanded varargs" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "resolved" "fn synchronization free"
  {
    const-val i[1513958]:1*int(64)[1256714] "insert auto destroy"
    const-val ret_tmp[1911894]:1*int(64)[1256714] "temp"
    (1513959 call chpl__init_tuple[1256732] _e0_i[1513956] ret_tmp[1911894])
    (1911897 'move' i[1513958] ret_tmp[1911894])
    val ret[1513884]:real(64)[16] "dead after last mention" "RVV" "temp"
    ref call_tmp[1514368]:_ref(real(64))[936906] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    val tmp[1883290]:real(64)[16] "temp"
    (1514370 'move' tmp[1883290](1514705 call this[1513516] this[1513834] i[1513958]))
    (1883294 'move' call_tmp[1514368](1883292 'addr of' tmp[1883290]))
    (1514375 'move' ret[1513884](1514377 'deref' call_tmp[1514368]))
    (1926780 call chpl__autoDestroy[1697253] i[1513958])
    (1514379 return ret[1513884])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287226].this[1347571](const  ref arg this[1347575]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287226], const in arg _e0_i[1347697]:int(64)[13]) const ref : _ref(locale)[949033] "alias scope from this" "expanded varargs" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "resolved"
  {
    const-val i[1347699]:1*int(64)[1256714] "insert auto destroy"
    const-val ret_tmp[1911750]:1*int(64)[1256714] "temp"
    (1347700 call chpl__init_tuple[1256732] _e0_i[1347697] ret_tmp[1911750])
    (1911753 'move' i[1347699] ret_tmp[1911750])
    ref ret[1347625]:_ref(locale)[949033] "dead after last mention" "RVV" "temp"
    ref call_tmp[1347979]:_ref(locale)[949033] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    (1347981 'move' call_tmp[1347979](1348294 call this[1347106] this[1347575] i[1347699]))
    (1347986 'move' ret[1347625] call_tmp[1347979])
    (1925445 call chpl__autoDestroy[1697253] i[1347699])
    (1347990 return ret[1347625])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] range(int(64),bounded,false)))[1415976].this[1511369](const  ref arg this[1511373]:_ref(_array(unmanaged [domain(1,int(64),false)] range(int(64),bounded,false)))[1415976], const in arg _e0_i[1511495]:int(64)[13]) const ref : _ref(range(int(64),bounded,false))[1027047] "alias scope from this" "expanded varargs" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "resolved"
  {
    const-val i[1511497]:1*int(64)[1256714] "insert auto destroy"
    const-val ret_tmp[1911882]:1*int(64)[1256714] "temp"
    (1511498 call chpl__init_tuple[1256732] _e0_i[1511495] ret_tmp[1911882])
    (1911885 'move' i[1511497] ret_tmp[1911882])
    ref ret[1511423]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "RVV" "temp"
    ref call_tmp[1511779]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    (1511781 'move' call_tmp[1511779](1513309 call this[1511005] this[1511373] i[1511497]))
    (1511786 'move' ret[1511423] call_tmp[1511779])
    (1926770 call chpl__autoDestroy[1697253] i[1511497])
    (1511790 return ret[1511423])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287226].these[1298370](const  ref arg this[1298374]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287226], ref arg _retArg[1913394]:_ref(_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t)[1304597]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "iterator fn" "method" "primary method" "reference to const when const this" "resolved" "fn synchronization free" "no return value for void"
  {
    val _ir[2122752]:_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304486] "temp"
    (2122754 '.=' _ir[2122752] F0_this[2120673] this[1298374])
    (2122758 '=' _retArg[1913394] _ir[2122752])
    (2122761 return _void[55])
  }
  type _ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304480] val super[1304481]:object[22] "super class" val more[1304483]:int(64)[13] val F0_this[2120671]:[domain(1,int(64),false)] locale[1287200] val F1__iterator[2120675]:_ic_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303875] val F2__iterator[2120677]:_ic_chpl__serialViewIter[1303625] val F3_info[2120679]:[domain(1,int(64),false)] locale[1256675] val F4__iterator[2120681]:_ic_chpl_direct_pos_stride_range_iter[1303186] val F5_i[2120683]:int(64)[13] const-val F6_low[2120685]:int(64)[13] ref value[2120687]:_ref(locale)[949033]
  type _ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304486] val F0_this[2120673]:[domain(1,int(64),false)] locale[1287200]
  function _getIterator[1304495](const  ref arg ir[1304497]:_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304486]) : _ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304480] "auto ii" "inline" "resolved" "fn synchronization free" "unsafe"
  {
    val ret[1304604]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304480] "dead after last mention" "RVV" "temp"
    val _ic_[1304487]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304480] "dead after last mention" "temp"
    const-val call_tmp[1304611]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1304614 'move' call_tmp[1304611](1304626 'sizeof_bundle' _ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304480]))
    const-val cast_tmp[1304629]:c_void_ptr[149] "dead after last mention" "temp"
    (1304631 'move' cast_tmp[1304629](1304492 call chpl_here_alloc[187788] call_tmp[1304611] 53))
    (1304500 'move' _ic_[1304487](1304633 'cast' _ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304480] cast_tmp[1304629]))
    (1304502 'setcid' _ic_[1304487])
    (1304609 'move' ret[1304604] _ic_[1304487])
    (2122764 '.=' ret[1304604] more[1304483] 1)
    val tmp[2122768]:[domain(1,int(64),false)] locale[1287200] "temp"
    (2122773 'move' tmp[2122768](2122769 '.v' ir[1304497] F0_this[2120673]))
    (2122775 '.=' ret[1304604] F0_this[2120671] tmp[2122768])
    (1304606 return ret[1304604])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] unmanaged localesSignal?))[1325321].these[1326489](const  ref arg this[1326493]:_ref(_array(unmanaged [domain(1,int(64),false)] unmanaged localesSignal?))[1325321], ref arg _retArg[1913742]:_ref(_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_localesSignal_int64_t)[1331118]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "iterator fn" "method" "primary method" "reference to const when const this" "resolved" "fn synchronization free" "no return value for void"
  {
    val _ir[2131086]:_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_localesSignal_int64_t[1331007] "temp"
    (2131088 '.=' _ir[2131086] F0_this[2129007] this[1326493])
    (2131092 '=' _retArg[1913742] _ir[2131086])
    (2131095 return _void[55])
  }
  type _ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_localesSignal_int64_t[1331001] val super[1331002]:object[22] "super class" val more[1331004]:int(64)[13] val F0_this[2129005]:[domain(1,int(64),false)] unmanaged localesSignal?[1325295] val F1__iterator[2129009]:_ic_these_DefaultRectangularArr_1_int64_t_F_localesSignal_int64_t[1330396] val F2__iterator[2129011]:_ic_chpl__serialViewIter[1330146] val F3_info[2129013]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401] val F4__iterator[2129015]:_ic_chpl_direct_pos_stride_range_iter[1303186] val F5_i[2129017]:int(64)[13] const-val F6_low[2129019]:int(64)[13] ref value[2129021]:_ref(localesSignal)[1316692]
  type _ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_localesSignal_int64_t[1331007] val F0_this[2129007]:[domain(1,int(64),false)] unmanaged localesSignal?[1325295]
  function _getIterator[1331016](const  ref arg ir[1331018]:_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_localesSignal_int64_t[1331007]) : _ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_localesSignal_int64_t[1331001] "auto ii" "inline" "resolved" "fn synchronization free" "unsafe"
  {
    val ret[1331125]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_localesSignal_int64_t[1331001] "dead after last mention" "RVV" "temp"
    val _ic_[1331008]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_localesSignal_int64_t[1331001] "dead after last mention" "temp"
    const-val call_tmp[1331132]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1331135 'move' call_tmp[1331132](1331147 'sizeof_bundle' _ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_localesSignal_int64_t[1331001]))
    const-val cast_tmp[1331150]:c_void_ptr[149] "dead after last mention" "temp"
    (1331152 'move' cast_tmp[1331150](1331013 call chpl_here_alloc[187788] call_tmp[1331132] 61))
    (1331021 'move' _ic_[1331008](1331154 'cast' _ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_localesSignal_int64_t[1331001] cast_tmp[1331150]))
    (1331023 'setcid' _ic_[1331008])
    (1331130 'move' ret[1331125] _ic_[1331008])
    (2131098 '.=' ret[1331125] more[1331004] 1)
    val tmp[2131102]:[domain(1,int(64),false)] unmanaged localesSignal?[1325295] "temp"
    (2131107 'move' tmp[2131102](2131103 '.v' ir[1331018] F0_this[2129007]))
    (2131109 '.=' ret[1331125] F0_this[2129005] tmp[2131102])
    (1331127 return ret[1331125])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055].these[1392322](const  ref arg this[1392326]:_ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055], ref arg _retArg[1914629]:_ref(_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t)[1395520]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "iterator fn" "method" "primary method" "reference to const when const this" "resolved" "fn synchronization free" "no return value for void"
  {
    val _ir[2138379]:_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1395409] "temp"
    (2138381 '.=' _ir[2138379] F0_this[2136300] this[1392326])
    (2138385 '=' _retArg[1914629] _ir[2138379])
    (2138388 return _void[55])
  }
  type _ic_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1395403] val super[1395404]:object[22] "super class" val more[1395406]:int(64)[13] val F0_this[2136298]:[domain(1,int(64),false)] real(64)[1366029] val F1__iterator[2136302]:_ic_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1394974] val F2__iterator[2136304]:_ic_chpl__serialViewIter[1394724] val F3_info[2136306]:[domain(1,int(64),false)] real(64)[1358944] val F4__iterator[2136308]:_ic_chpl_direct_pos_stride_range_iter[1303186] val F5_i[2136310]:int(64)[13] const-val F6_low[2136312]:int(64)[13] ref value[2136314]:_ref(real(64))[936906]
  type _ir_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1395409] val F0_this[2136300]:[domain(1,int(64),false)] real(64)[1366029]
  function _getIterator[1395418](const  ref arg ir[1395420]:_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1395409]) : _ic_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1395403] "auto ii" "inline" "resolved" "fn synchronization free" "unsafe"
  {
    val ret[1395527]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1395403] "dead after last mention" "RVV" "temp"
    val _ic_[1395410]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1395403] "dead after last mention" "temp"
    const-val call_tmp[1395534]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1395537 'move' call_tmp[1395534](1395549 'sizeof_bundle' _ic_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1395403]))
    const-val cast_tmp[1395552]:c_void_ptr[149] "dead after last mention" "temp"
    (1395554 'move' cast_tmp[1395552](1395415 call chpl_here_alloc[187788] call_tmp[1395534] 77))
    (1395423 'move' _ic_[1395410](1395556 'cast' _ic_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1395403] cast_tmp[1395552]))
    (1395425 'setcid' _ic_[1395410])
    (1395532 'move' ret[1395527] _ic_[1395410])
    (2138391 '.=' ret[1395527] more[1395406] 1)
    val tmp[2138395]:[domain(1,int(64),false)] real(64)[1366029] "temp"
    (2138400 'move' tmp[2138395](2138396 '.v' ir[1395420] F0_this[2136300]))
    (2138402 '.=' ret[1395527] F0_this[2136298] tmp[2138395])
    (1395529 return ret[1395527])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] uint(64)))[1456173].these[1456468](const  ref arg this[1456472]:_ref(_array(unmanaged [domain(1,int(64),false)] uint(64)))[1456173], ref arg _retArg[1915275]:_ref(_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_uint64_t_int64_t)[1461097]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "iterator fn" "method" "primary method" "reference to const when const this" "resolved" "fn synchronization free" "no return value for void"
  {
    val _ir[2148282]:_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_uint64_t_int64_t[1460986] "temp"
    (2148284 '.=' _ir[2148282] F0_this[2146203] this[1456472])
    (2148288 '=' _retArg[1915275] _ir[2148282])
    (2148291 return _void[55])
  }
  type _ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_uint64_t_int64_t[1460980] val super[1460981]:object[22] "super class" val more[1460983]:int(64)[13] val F0_this[2146201]:[domain(1,int(64),false)] uint(64)[1456147] val F1__iterator[2146205]:_ic_these_DefaultRectangularArr_1_int64_t_F_uint64_t_int64_t[1460375] val F2__iterator[2146207]:_ic_chpl__serialViewIter[1460125] val F3_info[2146209]:[domain(1,int(64),false)] uint(64)[1450261] val F4__iterator[2146211]:_ic_chpl_direct_pos_stride_range_iter[1303186] val F5_i[2146213]:int(64)[13] const-val F6_low[2146215]:int(64)[13] ref value[2146217]:_ref(uint(64))[936790]
  type _ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_uint64_t_int64_t[1460986] val F0_this[2146203]:[domain(1,int(64),false)] uint(64)[1456147]
  function _getIterator[1460995](const  ref arg ir[1460997]:_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_uint64_t_int64_t[1460986]) : _ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_uint64_t_int64_t[1460980] "auto ii" "inline" "resolved" "fn synchronization free" "unsafe"
  {
    val ret[1461104]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_uint64_t_int64_t[1460980] "dead after last mention" "RVV" "temp"
    val _ic_[1460987]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_uint64_t_int64_t[1460980] "dead after last mention" "temp"
    const-val call_tmp[1461111]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1461114 'move' call_tmp[1461111](1461126 'sizeof_bundle' _ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_uint64_t_int64_t[1460980]))
    const-val cast_tmp[1461129]:c_void_ptr[149] "dead after last mention" "temp"
    (1461131 'move' cast_tmp[1461129](1460992 call chpl_here_alloc[187788] call_tmp[1461111] 89))
    (1461000 'move' _ic_[1460987](1461133 'cast' _ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_uint64_t_int64_t[1460980] cast_tmp[1461129]))
    (1461002 'setcid' _ic_[1460987])
    (1461109 'move' ret[1461104] _ic_[1460987])
    (2148294 '.=' ret[1461104] more[1460983] 1)
    val tmp[2148298]:[domain(1,int(64),false)] uint(64)[1456147] "temp"
    (2148303 'move' tmp[2148298](2148299 '.v' ir[1460997] F0_this[2146203]))
    (2148305 '.=' ret[1461104] F0_this[2146201] tmp[2148298])
    (1461106 return ret[1461104])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] range(int(64),bounded,false)))[1415976].these[1481411](const  ref arg this[1481415]:_ref(_array(unmanaged [domain(1,int(64),false)] range(int(64),bounded,false)))[1415976], ref arg _retArg[1915661]:_ref(_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t)[1484620]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "iterator fn" "method" "primary method" "reference to const when const this" "resolved" "fn synchronization free" "no return value for void"
  {
    val _ir[2156056]:_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1484509] "temp"
    (2156058 '.=' _ir[2156056] F0_this[2153977] this[1481415])
    (2156062 '=' _retArg[1915661] _ir[2156056])
    (2156065 return _void[55])
  }
  type _ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1484503] val super[1484504]:object[22] "super class" val more[1484506]:int(64)[13] val F0_this[2153975]:[domain(1,int(64),false)] range(int(64),bounded,false)[1415950] val F1__iterator[2153979]:_ic_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1484063] val F2__iterator[2153981]:_ic_chpl__serialViewIter[1483813] val F3_info[2153983]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] val F4__iterator[2153985]:_ic_chpl_direct_pos_stride_range_iter[1303186] val F5_i[2153987]:int(64)[13] const-val F6_low[2153989]:int(64)[13] ref value[2153991]:_ref(range(int(64),bounded,false))[1027047]
  type _ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1484509] val F0_this[2153977]:[domain(1,int(64),false)] range(int(64),bounded,false)[1415950]
  function _getIterator[1484518](const  ref arg ir[1484520]:_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1484509]) : _ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1484503] "auto ii" "inline" "resolved" "fn synchronization free" "unsafe"
  {
    val ret[1484627]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1484503] "dead after last mention" "RVV" "temp"
    val _ic_[1484510]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1484503] "dead after last mention" "temp"
    const-val call_tmp[1484634]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1484637 'move' call_tmp[1484634](1484649 'sizeof_bundle' _ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1484503]))
    const-val cast_tmp[1484652]:c_void_ptr[149] "dead after last mention" "temp"
    (1484654 'move' cast_tmp[1484652](1484515 call chpl_here_alloc[187788] call_tmp[1484634] 95))
    (1484523 'move' _ic_[1484510](1484656 'cast' _ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1484503] cast_tmp[1484652]))
    (1484525 'setcid' _ic_[1484510])
    (1484632 'move' ret[1484627] _ic_[1484510])
    (2156068 '.=' ret[1484627] more[1484506] 1)
    val tmp[2156072]:[domain(1,int(64),false)] range(int(64),bounded,false)[1415950] "temp"
    (2156077 'move' tmp[2156072](2156073 '.v' ir[1484520] F0_this[2153977]))
    (2156079 '.=' ret[1484627] F0_this[2153975] tmp[2156072])
    (1484629 return ret[1484627])
  }
  function _ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1490004].zip1[1490039](const in arg this[1490041]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1490004]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    val ret[2152100]:_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1490010] "dead after last mention" "RVV" "temp"
    val call_tmp[2152102]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead after last mention" "expr temp" "maybe param" "temp"
    ref _indexOfInterest[2152104]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[2152106]:_ic_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1489650] "dead at end of block" "expr temp" "temp"
    val call_tmp[2152108]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val call_tmp[2152110]:_ir_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1489656] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[2152112]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    const-val default_arg_tasksPerLocale[2152114]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val default_arg_ignoreRunning[2152116]:bool[10] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val default_arg_minIndicesPerTask[2152118]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val ret_tmp[2152120]:_ir_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1489656] "temp"
    val ret[2152122]:_ir_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1489656] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[2152124]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[2152126]:_ic_these_DefaultRectangularDom_1_int64_t_F[1488045] "dead at end of block" "expr temp" "temp"
    ref call_tmp[2152128]:_ref(domain(1,int(64),false))[1251138] "dead at end of block" "maybe param" "temp"
    const-val this[2152130]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "temp"
    const-val call_tmp[2152132]:_ir_these_DefaultRectangularDom_1_int64_t_F[1488051] "dead at end of block" "expr temp" "maybe param" "temp"
    val coerce_tmp[2152134]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val coerce_tmp[2152136]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val default_arg_offset[2152138]:1*int(64)[1256714] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val ret_tmp[2152140]:1*int(64)[1256714] "temp"
    const-val ret_tmp[2152142]:_ir_these_DefaultRectangularDom_1_int64_t_F[1488051] "temp"
    ref followThis[2152144]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    const-val tasksPerLocale[2152146]:int(64)[13] "temp"
    const-val ignoreRunning[2152148]:bool[10] "temp"
    const-val minIndicesPerTask[2152150]:int(64)[13] "temp"
    val ret[2152152]:_ir_these_DefaultRectangularDom_1_int64_t_F[1488051] "dead after last mention" "RVV" "temp"
    val block[2152154]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "insert auto destroy"
    val call_tmp[2152156]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[2152158]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[2152160]:1*range(int(64),bounded,false)[1244885] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val ret_tmp[2152162]:1*range(int(64),bounded,false)[1244885] "temp"
    const-val i[2152164]:int(64)[13] "dead at end of block" "insert auto destroy"
    ref call_tmp[2152166]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2152168]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[2152170]:_ref(1*range(int(64),bounded,false))[1244943] "dead after last mention" "temp"
    const-val this[2152172]:domain(1,int(64),false)[1251123] "temp"
    ref call_tmp[2152174]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    val call_tmp[2152176]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[2152178]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
    ref followThis[2152180]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    const-val call_tmp[2152182]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[2152184]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    const-val call_tmp[2152186]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2152188]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[2152190]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    ref call_tmp[2152192]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[2152194]:_ref(1*range(int(64),bounded,false))[1244943] "dead after last mention" "temp"
    const-val this[2152196]:domain(1,int(64),false)[1251123] "temp"
    ref call_tmp[2152198]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    val call_tmp[2152200]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[2152202]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
    ref followThis[2152204]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    const-val call_tmp[2152206]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[2152208]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    const-val call_tmp[2152210]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2152212]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[2152214]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    const-val call_tmp[2152216]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2152218]:range(int(64),bounded,false)[1027003] "temp"
    val _indexOfInterest[2152220]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[2152222]:_ic_these_range_int64_t_bounded_F[1096892] "dead at end of block" "expr temp" "temp"
    val ret[2152224]:_ir_these_range_int64_t_bounded_F[1096898] "dead after last mention" "RVV" "temp"
    const-val _return_tmp_[2152226]:bool[10] "dead after last mention" "temp"
    const-val this[2152228]:range(int(64),bounded,false)[1027003] "temp"
    val i[2152230]:int(64)[13] "dead at end of block" "insert auto destroy"
    val call_tmp[2152232]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[2152234]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    const-val this[2152236]:range(int(64),bounded,false)[1027003] "temp"
    const-val start[2152238]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[2152240]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    ref call_tmp[2152242]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    const-val this[2152244]:range(int(64),bounded,false)[1027003] "temp"
    const end[2152246]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[2152248]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    val yret[2152250]:int(64)[13] "dead after last mention" "YVV" "temp"
    val call_tmp[2152252]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val this[2152254]:range(int(64),bounded,false)[1027003] "temp"
    val _yieldedIndex[2152256]:int(64)[13] "temp"
    const i[2152258]:int(64)[13] "const" "index var" "insert auto destroy"
    val yret[2152260]:int(64)[13] "dead after last mention" "YVV" "temp"
    val call_tmp[2152262]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val this[2152264]:domain(1,int(64),false)[1251123] "temp"
    val _yieldedIndex[2152266]:int(64)[13] "temp"
    const i[2152268]:int(64)[13] "const" "index var" "insert auto destroy"
    ref yret[2152270]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "YVV" "temp"
    ref call_tmp[2152272]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
    const-val this[2152274]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "temp"
    ref _yieldedIndex[2152276]:_ref(range(int(64),bounded,false))[1027047] "temp"
    ref i[2152278]:_ref(range(int(64),bounded,false))[1027047] "index var" "insert auto destroy"
    ref yret[2152280]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "YVV" "temp"
    val call_tmp[2152282]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    label _endthese[2152284]
    label _endthese[2152286]
    label _endthese[2152288]
    label _endthese[2152290]
    const-val tmp[2152292]:[domain(1,int(64),false)] range(int(64),bounded,false)[1415950] "temp"
    const-val tmp[2152294]:[domain(1,int(64),false)] range(int(64),bounded,false)[1415950] "temp"
    ref tmp[2152296]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    val tmp[2152298]:_ic_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1489650] "temp"
    ref tmp[2152300]:_ref(_ic_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t)[1489793] "temp"
    val tmp[2152302]:1*int(64)[1256714] "temp"
    ref tmp[2152304]:_ref(_ic_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t)[1489793] "temp"
    ref tmp[2152306]:_ref(_ic_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t)[1489793] "temp"
    ref tmp[2152308]:_ref(_ic_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t)[1489793] "temp"
    ref tmp[2152310]:_ref(_ic_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t)[1489793] "temp"
    ref tmp[2152312]:_ref(1*int(64))[1256784] "temp"
    val tmp[2152314]:_ic_these_DefaultRectangularDom_1_int64_t_F[1488045] "temp"
    val tmp[2152316]:1*range(int(64),bounded,false)[1244885] "temp"
    ref tmp[2152318]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    ref tmp[2152320]:_ref(_ic_these_DefaultRectangularDom_1_int64_t_F)[1488188] "temp"
    ref tmp[2152322]:_ref(_ic_these_DefaultRectangularDom_1_int64_t_F)[1488188] "temp"
    ref tmp[2152324]:_ref(_ic_these_DefaultRectangularDom_1_int64_t_F)[1488188] "temp"
    ref tmp[2152326]:_ref(_ic_these_DefaultRectangularDom_1_int64_t_F)[1488188] "temp"
    val tmp[2152328]:_ic_these_range_int64_t_bounded_F[1096892] "temp"
    ref tmp[2152330]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    ref tmp[2152332]:_ref(_ic_these_range_int64_t_bounded_F)[1097035] "temp"
    val tmp[2152334]:int(64)[13] "temp"
    ref tmp[2152336]:_ref(_ic_these_range_int64_t_bounded_F)[1097035] "temp"
    val tmp[2152338]:int(64)[13] "temp"
    const-val tmp[2152340]:int(64)[13] "temp"
    ref tmp[2152342]:_ref(_ic_these_range_int64_t_bounded_F)[1097035] "temp"
    const tmp[2152344]:int(64)[13] "temp"
    ref tmp[2152346]:_ref(_ic_these_range_int64_t_bounded_F)[1097035] "temp"
    val tmp[2152348]:int(64)[13] "temp"
    ref tmp[2152350]:_ref(_ic_these_DefaultRectangularDom_1_int64_t_F)[1488188] "temp"
    ref tmp[2152352]:_ref(_ic_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t)[1489793] "temp"
    ref tmp[2152354]:_ref(range(int(64),bounded,false))[1027047] "temp"
    val tmp[2152356]:_ic_these_range_int64_t_bounded_F[1096892] "temp"
    ref tmp[2152358]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    val tmp[2152360]:_ic_these_DefaultRectangularDom_1_int64_t_F[1488045] "temp"
    ref tmp[2152362]:_ref(1*int(64))[1256784] "temp"
    val tmp[2152364]:_ic_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1489650] "temp"
    val tmp[2152366]:int(64)[13] "temp"
    val tmp[2152368]:int(64)[13] "temp"
    val tmp[2152370]:int(64)[13] "temp"
    const tmp[2152372]:int(64)[13] "temp"
    val tmp[2152374]:int(64)[13] "temp"
    val tmp[2152376]:_ic_these_range_int64_t_bounded_F[1096892] "temp"
    ref tmp[2152378]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    val tmp[2152380]:_ic_these_DefaultRectangularDom_1_int64_t_F[1488045] "temp"
    ref tmp[2152382]:_ref(1*int(64))[1256784] "temp"
    val tmp[2152384]:_ic_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1489650] "temp"
    (2152386 'move' tmp[2152292](2152388 '.v' this[1490041] F0_this[2151750]))
    (2152391 'move' call_tmp[2152102](2152394 call _value[1416005] tmp[2152292]))
    (2152396 'move' tmp[2152294](2152398 '.v' this[1490041] F0_this[2151750]))
    (2152401 'move' call_tmp[2152108](2152404 call _value[1416005] tmp[2152294]))
    (2152406 'move' coerce_tmp[2152112] call_tmp[2152108])
    (2152409 'move' default_arg_tasksPerLocale[2152114](2152412 call these_default_tasksPerLocale[1485396] call_tmp[2152108]))
    (2152414 'move' default_arg_ignoreRunning[2152116](2152417 call these_default_ignoreRunning[1485427] coerce_tmp[2152112]))
    (2152419 'move' default_arg_minIndicesPerTask[2152118](2152422 call these_default_minIndicesPerTask[1485458] coerce_tmp[2152112]))
    (2152424 'move' tmp[2152296](2152426 '.v' this[1490041] F1_followThis[2151754]))
    (2152430 call these[1485239] coerce_tmp[2152112] tmp[2152296] default_arg_tasksPerLocale[2152114] default_arg_ignoreRunning[2152116] default_arg_minIndicesPerTask[2152118] ret_tmp[2152120])
    (2152437 'move' call_tmp[2152110] ret_tmp[2152120])
    (2152440 'move' tmp[2152298](2152443 call _getIterator[1489665] call_tmp[2152110]))
    (2152445 '.=' this[1490041] F2__iterator[2151758] tmp[2152298])
    (2152449 'move' tmp[2152300](2152451 '.' this[1490041] F2__iterator[2151758]))
    (2152454 'move' this[2152130](2152456 '.v' tmp[2152300] F0_this[2159524]))
    (2152459 'move' call_tmp[2152128](2152462 call dom[1410591] this[2152130]))
    (2152464 'move' coerce_tmp[2152134](2152466 'deref' call_tmp[2152128]))
    (2152468 'move' coerce_tmp[2152136] coerce_tmp[2152134])
    (2152472 call these_default_offset[1487155] coerce_tmp[2152134] ret_tmp[2152140])
    (2152475 'move' tmp[2152302] ret_tmp[2152140])
    (2152478 '.=' this[1490041] F4_default_arg_offset[2151762] tmp[2152302])
    (2152482 'move' tmp[2152304](2152484 '.' this[1490041] F2__iterator[2151758]))
    (2152487 'move' followThis[2152144](2152489 '.v' tmp[2152304] F1_followThis[2159528]))
    (2152492 'move' tmp[2152306](2152494 '.' this[1490041] F2__iterator[2151758]))
    (2152497 'move' tasksPerLocale[2152146](2152499 '.v' tmp[2152306] F2_tasksPerLocale[2159532]))
    (2152502 'move' tmp[2152308](2152504 '.' this[1490041] F2__iterator[2151758]))
    (2152507 'move' ignoreRunning[2152148](2152509 '.v' tmp[2152308] F3_ignoreRunning[2159536]))
    (2152512 'move' tmp[2152310](2152514 '.' this[1490041] F2__iterator[2151758]))
    (2152517 'move' minIndicesPerTask[2152150](2152519 '.v' tmp[2152310] F4_minIndicesPerTask[2159540]))
    (2152522 'move' tmp[2152312](2152524 '.' this[1490041] F4_default_arg_offset[2151762]))
    (2152528 call these[1485740] coerce_tmp[2152136] followThis[2152144] tasksPerLocale[2152146] ignoreRunning[2152148] minIndicesPerTask[2152150] tmp[2152312] ret_tmp[2152142])
    (2152536 'move' call_tmp[2152132] ret_tmp[2152142])
    (2152539 'move' tmp[2152314](2152542 call _getIterator[1488060] call_tmp[2152132]))
    (2152544 '.=' this[1490041] F3__iterator[2151760] tmp[2152314])
    (2152549 call _defaultOf[1251254] ret_tmp[2152162])
    (2152551 'move' tmp[2152316] ret_tmp[2152162])
    (2152554 '.=' this[1490041] F5_block[2151764] tmp[2152316])
    (2152558 'move' i[2152164] 0)
    (2152561 'move' tmp[2152318](2152563 '.' this[1490041] F5_block[2151764]))
    (2152566 'move' call_tmp[2152166](2152568 '.' tmp[2152318] x0[1244883]))
    (2152571 'move' tmp[2152320](2152573 '.' this[1490041] F3__iterator[2151760]))
    (2152576 'move' this[2152172](2152578 '.v' tmp[2152320] F0_this[2161440]))
    (2152581 'move' _this_tmp_[2152170](2152584 call ranges[1251533] this[2152172]))
    (2152586 'move' call_tmp[2152168](2152588 '.' _this_tmp_[2152170] x0[1244883]))
    (2152591 'move' call_tmp[2152174](2152594 call _low[1028641] call_tmp[2152168]))
    (2152596 'move' tmp[2152322](2152598 '.' this[1490041] F3__iterator[2151760]))
    (2152601 'move' followThis[2152180](2152603 '.v' tmp[2152322] F1_followThis[2161444]))
    (2152606 'move' call_tmp[2152178](2152608 '.' followThis[2152180] x0[1244883]))
    (2152611 'move' coerce_tmp[2152184](2152614 call chpl__initCopy[1085195] call_tmp[2152178]))
    (2152616 'move' call_tmp[2152182](2152619 call low[1028600] coerce_tmp[2152184]))
    (2152621 'move' call_tmp[2152186] call_tmp[2152182])
    (2152624 'move' coerce_tmp[2152190](2152626 'deref' call_tmp[2152174]))
    (2152628 'move' call_tmp[2152188](2152631 call +[439752] coerce_tmp[2152190] call_tmp[2152182]))
    (2152634 'move' tmp[2152324](2152636 '.' this[1490041] F3__iterator[2151760]))
    (2152639 'move' this[2152196](2152641 '.v' tmp[2152324] F0_this[2161440]))
    (2152644 'move' _this_tmp_[2152194](2152647 call ranges[1251533] this[2152196]))
    (2152649 'move' call_tmp[2152192](2152651 '.' _this_tmp_[2152194] x0[1244883]))
    (2152654 'move' call_tmp[2152198](2152657 call _low[1028641] call_tmp[2152192]))
    (2152659 'move' tmp[2152326](2152661 '.' this[1490041] F3__iterator[2151760]))
    (2152664 'move' followThis[2152204](2152666 '.v' tmp[2152326] F1_followThis[2161444]))
    (2152669 'move' call_tmp[2152202](2152671 '.' followThis[2152204] x0[1244883]))
    (2152674 'move' coerce_tmp[2152208](2152677 call chpl__initCopy[1085195] call_tmp[2152202]))
    (2152679 'move' call_tmp[2152206](2152682 call high[1028808] coerce_tmp[2152208]))
    (2152684 'move' call_tmp[2152210] call_tmp[2152206])
    (2152687 'move' coerce_tmp[2152214](2152689 'deref' call_tmp[2152198]))
    (2152691 'move' call_tmp[2152212](2152694 call +[439752] coerce_tmp[2152214] call_tmp[2152206]))
    (2152698 call chpl_build_bounded_range[455253] call_tmp[2152188] call_tmp[2152212] ret_tmp[2152218])
    (2152702 'move' call_tmp[2152216] ret_tmp[2152218])
    (2152706 call =[1251739] call_tmp[2152166] call_tmp[2152216])
    (2152710 call chpl__autoDestroy[1407763] call_tmp[2152216])
    (2152713 call chpl__autoDestroy[1407763] coerce_tmp[2152208])
    (2152716 call chpl__autoDestroy[1407763] coerce_tmp[2152184])
    (2152718 'move' tmp[2152330](2152720 '.' this[1490041] F5_block[2151764]))
    (2152723 'move' tmp[2152328](2152726 call _getIteratorZip[1487726] tmp[2152330]))
    (2152728 '.=' this[1490041] F6__iterator[2151766] tmp[2152328])
    (2152732 'move' tmp[2152332](2152734 '.' this[1490041] F6__iterator[2151766]))
    (2152737 'move' this[2152228](2152739 '.v' tmp[2152332] F0_this[2113071]))
    (2152742 'move' _return_tmp_[2152226](2152745 call checkIfIterWillOverflow[1096003] this[2152228] 1))
    (2152748 'move' tmp[2152334] 0)
    (2152751 '.=' this[1490041] F7_i[2151768] tmp[2152334])
    (2152755 'move' tmp[2152336](2152757 '.' this[1490041] F6__iterator[2151766]))
    (2152760 'move' this[2152236](2152762 '.v' tmp[2152336] F0_this[2113071]))
    (2152765 'move' call_tmp[2152234](2152768 call _low[1028641] this[2152236]))
    (2152770 'move' tmp[2152338](2152772 'deref' call_tmp[2152234]))
    (2152774 '.=' this[1490041] F9_coerce_tmp[2151772] tmp[2152338])
    (2152778 'move' tmp[2152340](2152780 '.v' this[1490041] F9_coerce_tmp[2151772]))
    (2152783 '=' start[2152238] tmp[2152340])
    (2152786 'noop')
    (2152787 'move' tmp[2152342](2152789 '.' this[1490041] F6__iterator[2151766]))
    (2152792 'move' this[2152244](2152794 '.v' tmp[2152342] F0_this[2113071]))
    (2152797 'move' call_tmp[2152242](2152800 call _high[1028849] this[2152244]))
    (2152802 'move' coerce_tmp[2152248](2152804 'deref' call_tmp[2152242]))
    (2152806 '=' tmp[2152344] coerce_tmp[2152248])
    (2152809 '.=' this[1490041] F8_end[2151770] tmp[2152344])
    (2152813 'noop')
    (2152814 return _void[55])
  }
  function _ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1490004].zip2[1490048](const in arg this[1490050]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1490004]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    val ret[2152817]:_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1490010] "dead after last mention" "RVV" "temp"
    val call_tmp[2152819]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead after last mention" "expr temp" "maybe param" "temp"
    ref _indexOfInterest[2152821]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[2152823]:_ic_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1489650] "dead at end of block" "expr temp" "temp"
    val call_tmp[2152825]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead at end of block" "expr temp" "maybe param" "temp"
    val call_tmp[2152827]:_ir_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1489656] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[2152829]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val default_arg_tasksPerLocale[2152831]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    val default_arg_ignoreRunning[2152833]:bool[10] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    val default_arg_minIndicesPerTask[2152835]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    val ret_tmp[2152837]:_ir_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1489656] "temp"
    val ret[2152839]:_ir_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1489656] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[2152841]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[2152843]:_ic_these_DefaultRectangularDom_1_int64_t_F[1488045] "dead at end of block" "expr temp" "temp"
    ref call_tmp[2152845]:_ref(domain(1,int(64),false))[1251138] "dead at end of block" "maybe param" "temp"
    const-val this[2152847]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "temp"
    val call_tmp[2152849]:_ir_these_DefaultRectangularDom_1_int64_t_F[1488051] "dead at end of block" "expr temp" "maybe param" "temp"
    val coerce_tmp[2152851]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val coerce_tmp[2152853]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val default_arg_offset[2152855]:1*int(64)[1256714] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    val ret_tmp[2152857]:1*int(64)[1256714] "temp"
    val ret_tmp[2152859]:_ir_these_DefaultRectangularDom_1_int64_t_F[1488051] "temp"
    ref followThis[2152861]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    const-val tasksPerLocale[2152863]:int(64)[13] "temp"
    const-val ignoreRunning[2152865]:bool[10] "temp"
    const-val minIndicesPerTask[2152867]:int(64)[13] "temp"
    val ret[2152869]:_ir_these_DefaultRectangularDom_1_int64_t_F[1488051] "dead after last mention" "RVV" "temp"
    val block[2152871]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "insert auto destroy"
    val call_tmp[2152873]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[2152875]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[2152877]:1*range(int(64),bounded,false)[1244885] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val ret_tmp[2152879]:1*range(int(64),bounded,false)[1244885] "temp"
    val i[2152881]:int(64)[13] "dead at end of block" "insert auto destroy"
    ref call_tmp[2152883]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2152885]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[2152887]:_ref(1*range(int(64),bounded,false))[1244943] "dead after last mention" "temp"
    const-val this[2152889]:domain(1,int(64),false)[1251123] "temp"
    ref call_tmp[2152891]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    val call_tmp[2152893]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[2152895]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
    ref followThis[2152897]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    val call_tmp[2152899]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2152901]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val call_tmp[2152903]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val call_tmp[2152905]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2152907]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    ref call_tmp[2152909]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[2152911]:_ref(1*range(int(64),bounded,false))[1244943] "dead after last mention" "temp"
    const-val this[2152913]:domain(1,int(64),false)[1251123] "temp"
    ref call_tmp[2152915]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    val call_tmp[2152917]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[2152919]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
    ref followThis[2152921]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    val call_tmp[2152923]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2152925]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val call_tmp[2152927]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val call_tmp[2152929]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2152931]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val call_tmp[2152933]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val ret_tmp[2152935]:range(int(64),bounded,false)[1027003] "temp"
    val _indexOfInterest[2152937]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[2152939]:_ic_these_range_int64_t_bounded_F[1096892] "dead at end of block" "expr temp" "temp"
    val ret[2152941]:_ir_these_range_int64_t_bounded_F[1096898] "dead after last mention" "RVV" "temp"
    val _return_tmp_[2152943]:bool[10] "dead after last mention" "temp"
    const-val this[2152945]:range(int(64),bounded,false)[1027003] "temp"
    val i[2152947]:int(64)[13] "dead at end of block" "insert auto destroy"
    val call_tmp[2152949]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[2152951]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    const-val this[2152953]:range(int(64),bounded,false)[1027003] "temp"
    const start[2152955]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[2152957]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    ref call_tmp[2152959]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    const-val this[2152961]:range(int(64),bounded,false)[1027003] "temp"
    const end[2152963]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[2152965]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    const-val yret[2152967]:int(64)[13] "dead after last mention" "YVV" "temp"
    const-val call_tmp[2152969]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val this[2152971]:range(int(64),bounded,false)[1027003] "temp"
    const-val _yieldedIndex[2152973]:int(64)[13] "temp"
    const-val i[2152975]:int(64)[13] "const" "index var" "insert auto destroy"
    const-val yret[2152977]:int(64)[13] "dead after last mention" "YVV" "temp"
    const-val call_tmp[2152979]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val this[2152981]:domain(1,int(64),false)[1251123] "temp"
    const-val _yieldedIndex[2152983]:int(64)[13] "temp"
    const-val i[2152985]:int(64)[13] "const" "index var" "insert auto destroy"
    ref yret[2152987]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "YVV" "temp"
    ref call_tmp[2152989]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
    const-val this[2152991]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "temp"
    ref _yieldedIndex[2152993]:_ref(range(int(64),bounded,false))[1027047] "temp"
    ref i[2152995]:_ref(range(int(64),bounded,false))[1027047] "index var" "insert auto destroy"
    ref yret[2152997]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "YVV" "temp"
    val call_tmp[2152999]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    label _endthese[2153001]
    label _endthese[2153003]
    label _endthese[2153005]
    label _endthese[2153007]
    ref tmp[2153009]:_ref(_array(unmanaged [domain(1,int(64),false)] range(int(64),bounded,false)))[1415976] "temp"
    ref tmp[2153011]:_ref(_array(unmanaged [domain(1,int(64),false)] range(int(64),bounded,false)))[1415976] "temp"
    ref tmp[2153013]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    val tmp[2153015]:_ic_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1489650] "temp"
    ref tmp[2153017]:_ref(_ic_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t)[1489793] "temp"
    val tmp[2153019]:1*int(64)[1256714] "temp"
    ref tmp[2153021]:_ref(_ic_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t)[1489793] "temp"
    ref tmp[2153023]:_ref(_ic_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t)[1489793] "temp"
    ref tmp[2153025]:_ref(_ic_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t)[1489793] "temp"
    ref tmp[2153027]:_ref(_ic_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t)[1489793] "temp"
    ref tmp[2153029]:_ref(1*int(64))[1256784] "temp"
    val tmp[2153031]:_ic_these_DefaultRectangularDom_1_int64_t_F[1488045] "temp"
    val tmp[2153033]:1*range(int(64),bounded,false)[1244885] "temp"
    ref tmp[2153035]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    ref tmp[2153037]:_ref(_ic_these_DefaultRectangularDom_1_int64_t_F)[1488188] "temp"
    ref tmp[2153039]:_ref(_ic_these_DefaultRectangularDom_1_int64_t_F)[1488188] "temp"
    ref tmp[2153041]:_ref(_ic_these_DefaultRectangularDom_1_int64_t_F)[1488188] "temp"
    ref tmp[2153043]:_ref(_ic_these_DefaultRectangularDom_1_int64_t_F)[1488188] "temp"
    val tmp[2153045]:_ic_these_range_int64_t_bounded_F[1096892] "temp"
    ref tmp[2153047]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    ref tmp[2153049]:_ref(_ic_these_range_int64_t_bounded_F)[1097035] "temp"
    val tmp[2153051]:int(64)[13] "temp"
    ref tmp[2153053]:_ref(_ic_these_range_int64_t_bounded_F)[1097035] "temp"
    val tmp[2153055]:int(64)[13] "temp"
    val tmp[2153057]:int(64)[13] "temp"
    ref tmp[2153059]:_ref(_ic_these_range_int64_t_bounded_F)[1097035] "temp"
    const tmp[2153061]:int(64)[13] "temp"
    ref tmp[2153063]:_ref(_ic_these_range_int64_t_bounded_F)[1097035] "temp"
    const-val tmp[2153065]:int(64)[13] "temp"
    ref tmp[2153067]:_ref(_ic_these_DefaultRectangularDom_1_int64_t_F)[1488188] "temp"
    ref tmp[2153069]:_ref(_ic_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t)[1489793] "temp"
    ref tmp[2153071]:_ref(range(int(64),bounded,false))[1027047] "temp"
    val tmp[2153073]:_ic_these_range_int64_t_bounded_F[1096892] "temp"
    ref tmp[2153075]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    val tmp[2153077]:_ic_these_DefaultRectangularDom_1_int64_t_F[1488045] "temp"
    ref tmp[2153079]:_ref(1*int(64))[1256784] "temp"
    val tmp[2153081]:_ic_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1489650] "temp"
    val tmp[2153083]:int(64)[13] "temp"
    val tmp[2153085]:int(64)[13] "temp"
    val tmp[2153087]:int(64)[13] "temp"
    const tmp[2153089]:int(64)[13] "temp"
    val tmp[2153091]:int(64)[13] "temp"
    val tmp[2153093]:_ic_these_range_int64_t_bounded_F[1096892] "temp"
    ref tmp[2153095]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    val tmp[2153097]:_ic_these_DefaultRectangularDom_1_int64_t_F[1488045] "temp"
    ref tmp[2153099]:_ref(1*int(64))[1256784] "temp"
    val tmp[2153101]:_ic_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1489650] "temp"
    (2153103 'move' tmp[2153063](2153105 '.' this[1490050] F6__iterator[2151766]))
    (2153108 'move' this[2152971](2153110 '.v' tmp[2153063] F0_this[2113071]))
    (2153113 'move' tmp[2153065](2153115 '.v' this[1490050] F7_i[2151768]))
    (2153118 'move' call_tmp[2152969](2153121 call chpl_intToIdx[1028669] this[2152971] tmp[2153065]))
    (2153124 'move' yret[2152967] call_tmp[2152969])
    (2153127 'move' _yieldedIndex[2152973] call_tmp[2152969])
    (2153130 'move' i[2152975] _yieldedIndex[2152973])
    (2153133 'move' tmp[2153067](2153135 '.' this[1490050] F3__iterator[2151760]))
    (2153138 'move' this[2152981](2153140 '.v' tmp[2153067] F0_this[2161440]))
    (2153143 'move' call_tmp[2152979](2153146 call chpl_intToIdx[1302054] this[2152981] _yieldedIndex[2152973]))
    (2153149 'move' yret[2152977] call_tmp[2152979])
    (2153152 'move' _yieldedIndex[2152983] call_tmp[2152979])
    (2153155 'move' i[2152985] _yieldedIndex[2152983])
    (2153158 'move' tmp[2153069](2153160 '.' this[1490050] F2__iterator[2151758]))
    (2153163 'move' this[2152991](2153165 '.v' tmp[2153069] F0_this[2159524]))
    (2153168 'move' call_tmp[2152989](2153171 call dsiAccess[1488672] this[2152991] _yieldedIndex[2152983]))
    (2153174 'move' _yieldedIndex[2152993] call_tmp[2152989])
    (2153177 'move' i[2152995] _yieldedIndex[2152993])
    (2153180 'move' tmp[2153071] i[2152995])
    (2153183 '.=' this[1490050] value[2151774] tmp[2153071])
    (2153187 '.=' this[1490050] more[1490007] 2)
    (2153191 return _void[55])
  }
  function _ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1490004].zip3[1490057](const in arg this[1490059]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1490004]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    val ret[2153194]:_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1490010] "dead after last mention" "RVV" "temp"
    val call_tmp[2153196]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead after last mention" "expr temp" "maybe param" "temp"
    ref _indexOfInterest[2153198]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[2153200]:_ic_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1489650] "dead at end of block" "expr temp" "temp"
    val call_tmp[2153202]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead at end of block" "expr temp" "maybe param" "temp"
    val call_tmp[2153204]:_ir_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1489656] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[2153206]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val default_arg_tasksPerLocale[2153208]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    val default_arg_ignoreRunning[2153210]:bool[10] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    val default_arg_minIndicesPerTask[2153212]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    val ret_tmp[2153214]:_ir_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1489656] "temp"
    val ret[2153216]:_ir_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1489656] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[2153218]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[2153220]:_ic_these_DefaultRectangularDom_1_int64_t_F[1488045] "dead at end of block" "expr temp" "temp"
    ref call_tmp[2153222]:_ref(domain(1,int(64),false))[1251138] "dead at end of block" "maybe param" "temp"
    const-val this[2153224]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "temp"
    val call_tmp[2153226]:_ir_these_DefaultRectangularDom_1_int64_t_F[1488051] "dead at end of block" "expr temp" "maybe param" "temp"
    val coerce_tmp[2153228]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val coerce_tmp[2153230]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val default_arg_offset[2153232]:1*int(64)[1256714] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    val ret_tmp[2153234]:1*int(64)[1256714] "temp"
    val ret_tmp[2153236]:_ir_these_DefaultRectangularDom_1_int64_t_F[1488051] "temp"
    ref followThis[2153238]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    const-val tasksPerLocale[2153240]:int(64)[13] "temp"
    const-val ignoreRunning[2153242]:bool[10] "temp"
    const-val minIndicesPerTask[2153244]:int(64)[13] "temp"
    val ret[2153246]:_ir_these_DefaultRectangularDom_1_int64_t_F[1488051] "dead after last mention" "RVV" "temp"
    val block[2153248]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "insert auto destroy"
    val call_tmp[2153250]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[2153252]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[2153254]:1*range(int(64),bounded,false)[1244885] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val ret_tmp[2153256]:1*range(int(64),bounded,false)[1244885] "temp"
    val i[2153258]:int(64)[13] "dead at end of block" "insert auto destroy"
    ref call_tmp[2153260]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2153262]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[2153264]:_ref(1*range(int(64),bounded,false))[1244943] "dead after last mention" "temp"
    const-val this[2153266]:domain(1,int(64),false)[1251123] "temp"
    ref call_tmp[2153268]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    val call_tmp[2153270]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[2153272]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
    ref followThis[2153274]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    val call_tmp[2153276]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2153278]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val call_tmp[2153280]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val call_tmp[2153282]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2153284]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    ref call_tmp[2153286]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[2153288]:_ref(1*range(int(64),bounded,false))[1244943] "dead after last mention" "temp"
    const-val this[2153290]:domain(1,int(64),false)[1251123] "temp"
    ref call_tmp[2153292]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    val call_tmp[2153294]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[2153296]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
    ref followThis[2153298]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    val call_tmp[2153300]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2153302]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val call_tmp[2153304]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val call_tmp[2153306]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2153308]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val call_tmp[2153310]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val ret_tmp[2153312]:range(int(64),bounded,false)[1027003] "temp"
    val _indexOfInterest[2153314]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[2153316]:_ic_these_range_int64_t_bounded_F[1096892] "dead at end of block" "expr temp" "temp"
    val ret[2153318]:_ir_these_range_int64_t_bounded_F[1096898] "dead after last mention" "RVV" "temp"
    val _return_tmp_[2153320]:bool[10] "dead after last mention" "temp"
    const-val this[2153322]:range(int(64),bounded,false)[1027003] "temp"
    val i[2153324]:int(64)[13] "dead at end of block" "insert auto destroy"
    val call_tmp[2153326]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[2153328]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    const-val this[2153330]:range(int(64),bounded,false)[1027003] "temp"
    const start[2153332]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[2153334]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    ref call_tmp[2153336]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    const-val this[2153338]:range(int(64),bounded,false)[1027003] "temp"
    const end[2153340]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[2153342]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    val yret[2153344]:int(64)[13] "dead after last mention" "YVV" "temp"
    val call_tmp[2153346]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val this[2153348]:range(int(64),bounded,false)[1027003] "temp"
    val _yieldedIndex[2153350]:int(64)[13] "temp"
    const i[2153352]:int(64)[13] "const" "index var" "insert auto destroy"
    val yret[2153354]:int(64)[13] "dead after last mention" "YVV" "temp"
    val call_tmp[2153356]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val this[2153358]:domain(1,int(64),false)[1251123] "temp"
    val _yieldedIndex[2153360]:int(64)[13] "temp"
    const i[2153362]:int(64)[13] "const" "index var" "insert auto destroy"
    ref yret[2153364]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "YVV" "temp"
    ref call_tmp[2153366]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
    const-val this[2153368]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "temp"
    ref _yieldedIndex[2153370]:_ref(range(int(64),bounded,false))[1027047] "temp"
    ref i[2153372]:_ref(range(int(64),bounded,false))[1027047] "index var" "insert auto destroy"
    ref yret[2153374]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "YVV" "temp"
    val call_tmp[2153376]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    label _endthese[2153378]
    label _endthese[2153380]
    label _endthese[2153382]
    label _endthese[2153384]
    ref tmp[2153386]:_ref(_array(unmanaged [domain(1,int(64),false)] range(int(64),bounded,false)))[1415976] "temp"
    ref tmp[2153388]:_ref(_array(unmanaged [domain(1,int(64),false)] range(int(64),bounded,false)))[1415976] "temp"
    ref tmp[2153390]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    val tmp[2153392]:_ic_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1489650] "temp"
    ref tmp[2153394]:_ref(_ic_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t)[1489793] "temp"
    val tmp[2153396]:1*int(64)[1256714] "temp"
    ref tmp[2153398]:_ref(_ic_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t)[1489793] "temp"
    ref tmp[2153400]:_ref(_ic_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t)[1489793] "temp"
    ref tmp[2153402]:_ref(_ic_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t)[1489793] "temp"
    ref tmp[2153404]:_ref(_ic_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t)[1489793] "temp"
    ref tmp[2153406]:_ref(1*int(64))[1256784] "temp"
    val tmp[2153408]:_ic_these_DefaultRectangularDom_1_int64_t_F[1488045] "temp"
    val tmp[2153410]:1*range(int(64),bounded,false)[1244885] "temp"
    ref tmp[2153412]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    ref tmp[2153414]:_ref(_ic_these_DefaultRectangularDom_1_int64_t_F)[1488188] "temp"
    ref tmp[2153416]:_ref(_ic_these_DefaultRectangularDom_1_int64_t_F)[1488188] "temp"
    ref tmp[2153418]:_ref(_ic_these_DefaultRectangularDom_1_int64_t_F)[1488188] "temp"
    ref tmp[2153420]:_ref(_ic_these_DefaultRectangularDom_1_int64_t_F)[1488188] "temp"
    val tmp[2153422]:_ic_these_range_int64_t_bounded_F[1096892] "temp"
    ref tmp[2153424]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    ref tmp[2153426]:_ref(_ic_these_range_int64_t_bounded_F)[1097035] "temp"
    val tmp[2153428]:int(64)[13] "temp"
    ref tmp[2153430]:_ref(_ic_these_range_int64_t_bounded_F)[1097035] "temp"
    val tmp[2153432]:int(64)[13] "temp"
    val tmp[2153434]:int(64)[13] "temp"
    ref tmp[2153436]:_ref(_ic_these_range_int64_t_bounded_F)[1097035] "temp"
    const tmp[2153438]:int(64)[13] "temp"
    ref tmp[2153440]:_ref(_ic_these_range_int64_t_bounded_F)[1097035] "temp"
    val tmp[2153442]:int(64)[13] "temp"
    ref tmp[2153444]:_ref(_ic_these_DefaultRectangularDom_1_int64_t_F)[1488188] "temp"
    ref tmp[2153446]:_ref(_ic_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t)[1489793] "temp"
    ref tmp[2153448]:_ref(range(int(64),bounded,false))[1027047] "temp"
    val tmp[2153450]:_ic_these_range_int64_t_bounded_F[1096892] "temp"
    ref tmp[2153452]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    val tmp[2153454]:_ic_these_DefaultRectangularDom_1_int64_t_F[1488045] "temp"
    ref tmp[2153456]:_ref(1*int(64))[1256784] "temp"
    val tmp[2153458]:_ic_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1489650] "temp"
    val tmp[2153460]:int(64)[13] "temp"
    val tmp[2153462]:int(64)[13] "temp"
    val tmp[2153464]:int(64)[13] "temp"
    const tmp[2153466]:int(64)[13] "temp"
    val tmp[2153468]:int(64)[13] "temp"
    val tmp[2153470]:_ic_these_range_int64_t_bounded_F[1096892] "temp"
    ref tmp[2153472]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    val tmp[2153474]:_ic_these_DefaultRectangularDom_1_int64_t_F[1488045] "temp"
    ref tmp[2153476]:_ref(1*int(64))[1256784] "temp"
    val tmp[2153478]:_ic_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1489650] "temp"
    (2153480 return _void[55])
  }
  function _ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1490004].zip4[1490066](const in arg this[1490068]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1490004]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    val ret[2153483]:_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1490010] "dead after last mention" "RVV" "temp"
    val call_tmp[2153485]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead after last mention" "expr temp" "maybe param" "temp"
    ref _indexOfInterest[2153487]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[2153489]:_ic_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1489650] "dead at end of block" "expr temp" "temp"
    val call_tmp[2153491]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead at end of block" "expr temp" "maybe param" "temp"
    val call_tmp[2153493]:_ir_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1489656] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[2153495]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val default_arg_tasksPerLocale[2153497]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    val default_arg_ignoreRunning[2153499]:bool[10] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    val default_arg_minIndicesPerTask[2153501]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    val ret_tmp[2153503]:_ir_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1489656] "temp"
    val ret[2153505]:_ir_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1489656] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[2153507]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[2153509]:_ic_these_DefaultRectangularDom_1_int64_t_F[1488045] "dead at end of block" "expr temp" "temp"
    ref call_tmp[2153511]:_ref(domain(1,int(64),false))[1251138] "dead at end of block" "maybe param" "temp"
    const-val this[2153513]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "temp"
    val call_tmp[2153515]:_ir_these_DefaultRectangularDom_1_int64_t_F[1488051] "dead at end of block" "expr temp" "maybe param" "temp"
    val coerce_tmp[2153517]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val coerce_tmp[2153519]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val default_arg_offset[2153521]:1*int(64)[1256714] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    val ret_tmp[2153523]:1*int(64)[1256714] "temp"
    val ret_tmp[2153525]:_ir_these_DefaultRectangularDom_1_int64_t_F[1488051] "temp"
    ref followThis[2153527]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    const-val tasksPerLocale[2153529]:int(64)[13] "temp"
    const-val ignoreRunning[2153531]:bool[10] "temp"
    const-val minIndicesPerTask[2153533]:int(64)[13] "temp"
    val ret[2153535]:_ir_these_DefaultRectangularDom_1_int64_t_F[1488051] "dead after last mention" "RVV" "temp"
    val block[2153537]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "insert auto destroy"
    val call_tmp[2153539]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[2153541]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[2153543]:1*range(int(64),bounded,false)[1244885] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val ret_tmp[2153545]:1*range(int(64),bounded,false)[1244885] "temp"
    val i[2153547]:int(64)[13] "dead at end of block" "insert auto destroy"
    ref call_tmp[2153549]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2153551]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[2153553]:_ref(1*range(int(64),bounded,false))[1244943] "dead after last mention" "temp"
    const-val this[2153555]:domain(1,int(64),false)[1251123] "temp"
    ref call_tmp[2153557]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    val call_tmp[2153559]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[2153561]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
    ref followThis[2153563]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    val call_tmp[2153565]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2153567]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val call_tmp[2153569]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val call_tmp[2153571]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2153573]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    ref call_tmp[2153575]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[2153577]:_ref(1*range(int(64),bounded,false))[1244943] "dead after last mention" "temp"
    const-val this[2153579]:domain(1,int(64),false)[1251123] "temp"
    ref call_tmp[2153581]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    val call_tmp[2153583]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[2153585]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
    ref followThis[2153587]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    val call_tmp[2153589]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2153591]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val call_tmp[2153593]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val call_tmp[2153595]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2153597]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val call_tmp[2153599]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val ret_tmp[2153601]:range(int(64),bounded,false)[1027003] "temp"
    val _indexOfInterest[2153603]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[2153605]:_ic_these_range_int64_t_bounded_F[1096892] "dead at end of block" "expr temp" "temp"
    val ret[2153607]:_ir_these_range_int64_t_bounded_F[1096898] "dead after last mention" "RVV" "temp"
    val _return_tmp_[2153609]:bool[10] "dead after last mention" "temp"
    const-val this[2153611]:range(int(64),bounded,false)[1027003] "temp"
    val i[2153613]:int(64)[13] "dead at end of block" "insert auto destroy"
    val call_tmp[2153615]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[2153617]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    const-val this[2153619]:range(int(64),bounded,false)[1027003] "temp"
    const start[2153621]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[2153623]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    ref call_tmp[2153625]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    const-val this[2153627]:range(int(64),bounded,false)[1027003] "temp"
    const end[2153629]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[2153631]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    val yret[2153633]:int(64)[13] "dead after last mention" "YVV" "temp"
    val call_tmp[2153635]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val this[2153637]:range(int(64),bounded,false)[1027003] "temp"
    val _yieldedIndex[2153639]:int(64)[13] "temp"
    const i[2153641]:int(64)[13] "const" "index var" "insert auto destroy"
    val yret[2153643]:int(64)[13] "dead after last mention" "YVV" "temp"
    val call_tmp[2153645]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val this[2153647]:domain(1,int(64),false)[1251123] "temp"
    val _yieldedIndex[2153649]:int(64)[13] "temp"
    const i[2153651]:int(64)[13] "const" "index var" "insert auto destroy"
    ref yret[2153653]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "YVV" "temp"
    ref call_tmp[2153655]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
    const-val this[2153657]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "temp"
    ref _yieldedIndex[2153659]:_ref(range(int(64),bounded,false))[1027047] "temp"
    ref i[2153661]:_ref(range(int(64),bounded,false))[1027047] "index var" "insert auto destroy"
    ref yret[2153663]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "YVV" "temp"
    val call_tmp[2153665]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    label _endthese[2153667]
    label _endthese[2153669]
    label _endthese[2153671]
    label _endthese[2153673]
    ref tmp[2153675]:_ref(_array(unmanaged [domain(1,int(64),false)] range(int(64),bounded,false)))[1415976] "temp"
    ref tmp[2153677]:_ref(_array(unmanaged [domain(1,int(64),false)] range(int(64),bounded,false)))[1415976] "temp"
    ref tmp[2153679]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    val tmp[2153681]:_ic_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1489650] "temp"
    ref tmp[2153683]:_ref(_ic_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t)[1489793] "temp"
    val tmp[2153685]:1*int(64)[1256714] "temp"
    ref tmp[2153687]:_ref(_ic_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t)[1489793] "temp"
    ref tmp[2153689]:_ref(_ic_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t)[1489793] "temp"
    ref tmp[2153691]:_ref(_ic_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t)[1489793] "temp"
    ref tmp[2153693]:_ref(_ic_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t)[1489793] "temp"
    ref tmp[2153695]:_ref(1*int(64))[1256784] "temp"
    val tmp[2153697]:_ic_these_DefaultRectangularDom_1_int64_t_F[1488045] "temp"
    val tmp[2153699]:1*range(int(64),bounded,false)[1244885] "temp"
    ref tmp[2153701]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    ref tmp[2153703]:_ref(_ic_these_DefaultRectangularDom_1_int64_t_F)[1488188] "temp"
    ref tmp[2153705]:_ref(_ic_these_DefaultRectangularDom_1_int64_t_F)[1488188] "temp"
    ref tmp[2153707]:_ref(_ic_these_DefaultRectangularDom_1_int64_t_F)[1488188] "temp"
    ref tmp[2153709]:_ref(_ic_these_DefaultRectangularDom_1_int64_t_F)[1488188] "temp"
    val tmp[2153711]:_ic_these_range_int64_t_bounded_F[1096892] "temp"
    ref tmp[2153713]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    ref tmp[2153715]:_ref(_ic_these_range_int64_t_bounded_F)[1097035] "temp"
    val tmp[2153717]:int(64)[13] "temp"
    ref tmp[2153719]:_ref(_ic_these_range_int64_t_bounded_F)[1097035] "temp"
    val tmp[2153721]:int(64)[13] "temp"
    val tmp[2153723]:int(64)[13] "temp"
    ref tmp[2153725]:_ref(_ic_these_range_int64_t_bounded_F)[1097035] "temp"
    const tmp[2153727]:int(64)[13] "temp"
    ref tmp[2153729]:_ref(_ic_these_range_int64_t_bounded_F)[1097035] "temp"
    val tmp[2153731]:int(64)[13] "temp"
    ref tmp[2153733]:_ref(_ic_these_DefaultRectangularDom_1_int64_t_F)[1488188] "temp"
    ref tmp[2153735]:_ref(_ic_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t)[1489793] "temp"
    ref tmp[2153737]:_ref(range(int(64),bounded,false))[1027047] "temp"
    val tmp[2153739]:_ic_these_range_int64_t_bounded_F[1096892] "temp"
    ref tmp[2153741]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    val tmp[2153743]:_ic_these_DefaultRectangularDom_1_int64_t_F[1488045] "temp"
    ref tmp[2153745]:_ref(1*int(64))[1256784] "temp"
    val tmp[2153747]:_ic_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1489650] "temp"
    val tmp[2153749]:int(64)[13] "temp"
    val tmp[2153751]:int(64)[13] "temp"
    val tmp[2153753]:int(64)[13] "temp"
    const tmp[2153755]:int(64)[13] "temp"
    val tmp[2153757]:int(64)[13] "temp"
    val tmp[2153759]:_ic_these_range_int64_t_bounded_F[1096892] "temp"
    ref tmp[2153761]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    val tmp[2153763]:_ic_these_DefaultRectangularDom_1_int64_t_F[1488045] "temp"
    ref tmp[2153765]:_ref(1*int(64))[1256784] "temp"
    val tmp[2153767]:_ic_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1489650] "temp"
    (2153769 'move' tmp[2153759](2153771 '.v' this[1490068] F6__iterator[2151766]))
    (2153775 call _freeIterator[1102195] tmp[2153759])
    (2153777 'move' tmp[2153761](2153779 '.' this[1490068] F5_block[2151764]))
    (2153783 call chpl__autoDestroy[1695146] tmp[2153761])
    (2153785 'move' tmp[2153763](2153787 '.v' this[1490068] F3__iterator[2151760]))
    (2153791 call _freeIterator[1488607] tmp[2153763])
    (2153793 'move' tmp[2153765](2153795 '.' this[1490068] F4_default_arg_offset[2151762]))
    (2153799 call chpl__autoDestroy[1697253] tmp[2153765])
    (2153801 'move' tmp[2153767](2153803 '.v' this[1490068] F2__iterator[2151758]))
    (2153807 call _freeIterator[1489938] tmp[2153767])
    (2153809 return _void[55])
  }
  function _ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1490004].hasMore[1490075](const in arg this[1490077]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1490004]) : int(64)[13] "auto ii" "inline" "method" "resolved"
  {
    val tmp[2153862]:int(64)[13] "temp"
    const-val tmp[2153864]:int(64)[13] "temp"
    (2153866 'move' tmp[2153864](2153868 '.v' this[1490077] F7_i[2151768]))
    const-val tmp[2153871]:int(64)[13] "temp"
    (2153873 'move' tmp[2153871](2153875 '.v' this[1490077] F8_end[2151770]))
    (2153881 'move' tmp[2153862](2153878 '<=' tmp[2153864] tmp[2153871]))
    (2153883 return tmp[2153862])
  }
  function _ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1490004].getValue[1490084](const in arg this[1490086]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1490004]) : _ref(range(int(64),bounded,false))[1027047] "auto ii" "inline" "method" "resolved"
  {
    ref tmp[2153886]:_ref(range(int(64),bounded,false))[1027047] "temp"
    (2153891 'move' tmp[2153886](2153888 '.v' this[1490086] value[2151774]))
    (2153893 return tmp[2153886])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] range(int(64),bounded,false)))[1415976].these[1479646](const  ref arg this[1479650]:_ref(_array(unmanaged [domain(1,int(64),false)] range(int(64),bounded,false)))[1415976], const  ref arg followThis[1479654]:1*range(int(64),bounded,false)[1244885], ref arg _retArg[1915573]:_ref(_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t)[1490121]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "iterator fn" "method" "primary method" "no doc" "reference to const when const this" "resolved" "fn synchronization free" "no return value for void"
  {
    val _ir[2153933]:_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1490010] "temp"
    (2153935 '.=' _ir[2153933] F0_this[2151752] this[1479650])
    (2153939 '.=' _ir[2153933] F1_followThis[2151756] followThis[1479654])
    (2153943 '=' _retArg[1915573] _ir[2153933])
    (2153946 return _void[55])
  }
  function _ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1490004].init[1490093](const in arg this[1490095]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1490004]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    val tmp[2153896]:int(64)[13] "temp"
    const-val tmp[2153898]:int(64)[13] "temp"
    (2153900 'move' tmp[2153898](2153902 '.v' this[1490095] F9_coerce_tmp[2151772]))
    (2153905 '=' tmp[2153896] tmp[2153898])
    (2153908 '.=' this[1490095] F7_i[2151768] tmp[2153896])
    (2153912 return _void[55])
  }
  function _ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1490004].incr[1490102](const in arg this[1490104]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1490004]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    val call_tmp[2153915]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[2153917]:int(64)[13] "temp"
    (2153919 'move' tmp[2153917](2153921 '.v' this[1490104] F7_i[2151768]))
    (2153924 '+=' tmp[2153917] 1)
    (2153927 '.=' this[1490104] F7_i[2151768] tmp[2153917])
    (2153931 return _void[55])
  }
  type _ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1490004] val super[1490005]:object[22] "super class" val more[1490007]:int(64)[13] val F0_this[2151750]:[domain(1,int(64),false)] range(int(64),bounded,false)[1415950] ref F1_followThis[2151754]:_ref(1*range(int(64),bounded,false))[1244943] val F2__iterator[2151758]:_ic_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1489650] val F3__iterator[2151760]:_ic_these_DefaultRectangularDom_1_int64_t_F[1488045] val F4_default_arg_offset[2151762]:1*int(64)[1256714] val F5_block[2151764]:1*range(int(64),bounded,false)[1244885] val F6__iterator[2151766]:_ic_these_range_int64_t_bounded_F[1096892] val F7_i[2151768]:int(64)[13] const F8_end[2151770]:int(64)[13] val F9_coerce_tmp[2151772]:int(64)[13] ref value[2151774]:_ref(range(int(64),bounded,false))[1027047]
  type _ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1490010] val F0_this[2151752]:[domain(1,int(64),false)] range(int(64),bounded,false)[1415950] ref F1_followThis[2151756]:_ref(1*range(int(64),bounded,false))[1244943]
  function _getIterator[1490019](const  ref arg ir[1490021]:_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1490010]) : _ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1490004] "auto ii" "inline" "resolved" "fn synchronization free" "unsafe"
  {
    val ret[1490128]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1490004] "dead after last mention" "RVV" "temp"
    val _ic_[1490011]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1490004] "dead after last mention" "temp"
    const-val call_tmp[1490135]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1490138 'move' call_tmp[1490135](1490150 'sizeof_bundle' _ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1490004]))
    const-val cast_tmp[1490153]:c_void_ptr[149] "dead after last mention" "temp"
    (1490155 'move' cast_tmp[1490153](1490016 call chpl_here_alloc[187788] call_tmp[1490135] 98))
    (1490024 'move' _ic_[1490011](1490157 'cast' _ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1490004] cast_tmp[1490153]))
    (1490026 'setcid' _ic_[1490011])
    (1490133 'move' ret[1490128] _ic_[1490011])
    (2153949 '.=' ret[1490128] more[1490007] 1)
    val tmp[2153953]:[domain(1,int(64),false)] range(int(64),bounded,false)[1415950] "temp"
    (2153958 'move' tmp[2153953](2153954 '.v' ir[1490021] F0_this[2151752]))
    (2153960 '.=' ret[1490128] F0_this[2151750] tmp[2153953])
    ref tmp[2153964]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    (2153969 'move' tmp[2153964](2153965 '.v' ir[1490021] F1_followThis[2151756]))
    (2153971 '.=' ret[1490128] F1_followThis[2151754] tmp[2153964])
    (1490130 return ret[1490128])
  }
  function _ic_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539699].zip1[1539734](const in arg this[1539736]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539699]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    val ret[2163608]:_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539705] "dead after last mention" "RVV" "temp"
    val call_tmp[2163610]:[domain(1,int(64),false)] real(64)[1358944] "dead after last mention" "expr temp" "maybe param" "temp"
    ref _indexOfInterest[2163612]:_ref(real(64))[936906] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[2163614]:_ic_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539345] "dead at end of block" "expr temp" "temp"
    val call_tmp[2163616]:[domain(1,int(64),false)] real(64)[1358944] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val call_tmp[2163618]:_ir_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539351] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[2163620]:[domain(1,int(64),false)] real(64)[1358944] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    const-val default_arg_tasksPerLocale[2163622]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val default_arg_ignoreRunning[2163624]:bool[10] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val default_arg_minIndicesPerTask[2163626]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val ret_tmp[2163628]:_ir_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539351] "temp"
    val ret[2163630]:_ir_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539351] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[2163632]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[2163634]:_ic_these_DefaultRectangularDom_1_int64_t_F[1488045] "dead at end of block" "expr temp" "temp"
    ref call_tmp[2163636]:_ref(domain(1,int(64),false))[1251138] "dead at end of block" "maybe param" "temp"
    const-val this[2163638]:[domain(1,int(64),false)] real(64)[1358944] "temp"
    const-val call_tmp[2163640]:_ir_these_DefaultRectangularDom_1_int64_t_F[1488051] "dead at end of block" "expr temp" "maybe param" "temp"
    val coerce_tmp[2163642]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val coerce_tmp[2163644]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val default_arg_offset[2163646]:1*int(64)[1256714] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val ret_tmp[2163648]:1*int(64)[1256714] "temp"
    const-val ret_tmp[2163650]:_ir_these_DefaultRectangularDom_1_int64_t_F[1488051] "temp"
    ref followThis[2163652]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    const-val tasksPerLocale[2163654]:int(64)[13] "temp"
    const-val ignoreRunning[2163656]:bool[10] "temp"
    const-val minIndicesPerTask[2163658]:int(64)[13] "temp"
    val ret[2163660]:_ir_these_DefaultRectangularDom_1_int64_t_F[1488051] "dead after last mention" "RVV" "temp"
    val block[2163662]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "insert auto destroy"
    val call_tmp[2163664]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[2163666]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[2163668]:1*range(int(64),bounded,false)[1244885] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val ret_tmp[2163670]:1*range(int(64),bounded,false)[1244885] "temp"
    const-val i[2163672]:int(64)[13] "dead at end of block" "insert auto destroy"
    ref call_tmp[2163674]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2163676]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[2163678]:_ref(1*range(int(64),bounded,false))[1244943] "dead after last mention" "temp"
    const-val this[2163680]:domain(1,int(64),false)[1251123] "temp"
    ref call_tmp[2163682]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    val call_tmp[2163684]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[2163686]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
    ref followThis[2163688]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    const-val call_tmp[2163690]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[2163692]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    const-val call_tmp[2163694]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2163696]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[2163698]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    ref call_tmp[2163700]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[2163702]:_ref(1*range(int(64),bounded,false))[1244943] "dead after last mention" "temp"
    const-val this[2163704]:domain(1,int(64),false)[1251123] "temp"
    ref call_tmp[2163706]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    val call_tmp[2163708]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[2163710]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
    ref followThis[2163712]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    const-val call_tmp[2163714]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[2163716]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    const-val call_tmp[2163718]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2163720]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[2163722]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    const-val call_tmp[2163724]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2163726]:range(int(64),bounded,false)[1027003] "temp"
    val _indexOfInterest[2163728]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[2163730]:_ic_these_range_int64_t_bounded_F[1096892] "dead at end of block" "expr temp" "temp"
    val ret[2163732]:_ir_these_range_int64_t_bounded_F[1096898] "dead after last mention" "RVV" "temp"
    const-val _return_tmp_[2163734]:bool[10] "dead after last mention" "temp"
    const-val this[2163736]:range(int(64),bounded,false)[1027003] "temp"
    val i[2163738]:int(64)[13] "dead at end of block" "insert auto destroy"
    val call_tmp[2163740]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[2163742]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    const-val this[2163744]:range(int(64),bounded,false)[1027003] "temp"
    const-val start[2163746]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[2163748]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    ref call_tmp[2163750]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    const-val this[2163752]:range(int(64),bounded,false)[1027003] "temp"
    const end[2163754]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[2163756]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    val yret[2163758]:int(64)[13] "dead after last mention" "YVV" "temp"
    val call_tmp[2163760]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val this[2163762]:range(int(64),bounded,false)[1027003] "temp"
    val _yieldedIndex[2163764]:int(64)[13] "temp"
    const i[2163766]:int(64)[13] "const" "index var" "insert auto destroy"
    val yret[2163768]:int(64)[13] "dead after last mention" "YVV" "temp"
    val call_tmp[2163770]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val this[2163772]:domain(1,int(64),false)[1251123] "temp"
    val _yieldedIndex[2163774]:int(64)[13] "temp"
    const i[2163776]:int(64)[13] "const" "index var" "insert auto destroy"
    ref yret[2163778]:_ref(real(64))[936906] "dead after last mention" "YVV" "temp"
    ref call_tmp[2163780]:_ref(real(64))[936906] "dead after last mention" "maybe param" "temp"
    const-val this[2163782]:[domain(1,int(64),false)] real(64)[1358944] "temp"
    ref _yieldedIndex[2163784]:_ref(real(64))[936906] "temp"
    ref i[2163786]:_ref(real(64))[936906] "index var" "insert auto destroy"
    ref yret[2163788]:_ref(real(64))[936906] "dead after last mention" "YVV" "temp"
    val call_tmp[2163790]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    label _endthese[2163792]
    label _endthese[2163794]
    label _endthese[2163796]
    label _endthese[2163798]
    const-val tmp[2163800]:[domain(1,int(64),false)] real(64)[1366029] "temp"
    const-val tmp[2163802]:[domain(1,int(64),false)] real(64)[1366029] "temp"
    ref tmp[2163804]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    val tmp[2163806]:_ic_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539345] "temp"
    ref tmp[2163808]:_ref(_ic_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t)[1539488] "temp"
    val tmp[2163810]:1*int(64)[1256714] "temp"
    ref tmp[2163812]:_ref(_ic_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t)[1539488] "temp"
    ref tmp[2163814]:_ref(_ic_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t)[1539488] "temp"
    ref tmp[2163816]:_ref(_ic_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t)[1539488] "temp"
    ref tmp[2163818]:_ref(_ic_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t)[1539488] "temp"
    ref tmp[2163820]:_ref(1*int(64))[1256784] "temp"
    val tmp[2163822]:_ic_these_DefaultRectangularDom_1_int64_t_F[1488045] "temp"
    val tmp[2163824]:1*range(int(64),bounded,false)[1244885] "temp"
    ref tmp[2163826]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    ref tmp[2163828]:_ref(_ic_these_DefaultRectangularDom_1_int64_t_F)[1488188] "temp"
    ref tmp[2163830]:_ref(_ic_these_DefaultRectangularDom_1_int64_t_F)[1488188] "temp"
    ref tmp[2163832]:_ref(_ic_these_DefaultRectangularDom_1_int64_t_F)[1488188] "temp"
    ref tmp[2163834]:_ref(_ic_these_DefaultRectangularDom_1_int64_t_F)[1488188] "temp"
    val tmp[2163836]:_ic_these_range_int64_t_bounded_F[1096892] "temp"
    ref tmp[2163838]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    ref tmp[2163840]:_ref(_ic_these_range_int64_t_bounded_F)[1097035] "temp"
    val tmp[2163842]:int(64)[13] "temp"
    ref tmp[2163844]:_ref(_ic_these_range_int64_t_bounded_F)[1097035] "temp"
    val tmp[2163846]:int(64)[13] "temp"
    const-val tmp[2163848]:int(64)[13] "temp"
    ref tmp[2163850]:_ref(_ic_these_range_int64_t_bounded_F)[1097035] "temp"
    const tmp[2163852]:int(64)[13] "temp"
    ref tmp[2163854]:_ref(_ic_these_range_int64_t_bounded_F)[1097035] "temp"
    val tmp[2163856]:int(64)[13] "temp"
    ref tmp[2163858]:_ref(_ic_these_DefaultRectangularDom_1_int64_t_F)[1488188] "temp"
    ref tmp[2163860]:_ref(_ic_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t)[1539488] "temp"
    ref tmp[2163862]:_ref(real(64))[936906] "temp"
    val tmp[2163864]:_ic_these_range_int64_t_bounded_F[1096892] "temp"
    ref tmp[2163866]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    val tmp[2163868]:_ic_these_DefaultRectangularDom_1_int64_t_F[1488045] "temp"
    ref tmp[2163870]:_ref(1*int(64))[1256784] "temp"
    val tmp[2163872]:_ic_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539345] "temp"
    val tmp[2163874]:int(64)[13] "temp"
    val tmp[2163876]:int(64)[13] "temp"
    val tmp[2163878]:int(64)[13] "temp"
    const tmp[2163880]:int(64)[13] "temp"
    val tmp[2163882]:int(64)[13] "temp"
    val tmp[2163884]:_ic_these_range_int64_t_bounded_F[1096892] "temp"
    ref tmp[2163886]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    val tmp[2163888]:_ic_these_DefaultRectangularDom_1_int64_t_F[1488045] "temp"
    ref tmp[2163890]:_ref(1*int(64))[1256784] "temp"
    val tmp[2163892]:_ic_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539345] "temp"
    (2163894 'move' tmp[2163800](2163896 '.v' this[1539736] F0_this[2163258]))
    (2163899 'move' call_tmp[2163610](2163902 call _value[1366084] tmp[2163800]))
    (2163904 'move' tmp[2163802](2163906 '.v' this[1539736] F0_this[2163258]))
    (2163909 'move' call_tmp[2163616](2163912 call _value[1366084] tmp[2163802]))
    (2163914 'move' coerce_tmp[2163620] call_tmp[2163616])
    (2163917 'move' default_arg_tasksPerLocale[2163622](2163920 call these_default_tasksPerLocale[1539199] call_tmp[2163616]))
    (2163922 'move' default_arg_ignoreRunning[2163624](2163925 call these_default_ignoreRunning[1539230] coerce_tmp[2163620]))
    (2163927 'move' default_arg_minIndicesPerTask[2163626](2163930 call these_default_minIndicesPerTask[1539261] coerce_tmp[2163620]))
    (2163932 'move' tmp[2163804](2163934 '.v' this[1539736] F1_followThis[2163262]))
    (2163938 call these[1539042] coerce_tmp[2163620] tmp[2163804] default_arg_tasksPerLocale[2163622] default_arg_ignoreRunning[2163624] default_arg_minIndicesPerTask[2163626] ret_tmp[2163628])
    (2163945 'move' call_tmp[2163618] ret_tmp[2163628])
    (2163948 'move' tmp[2163806](2163951 call _getIterator[1539360] call_tmp[2163618]))
    (2163953 '.=' this[1539736] F2__iterator[2163266] tmp[2163806])
    (2163957 'move' tmp[2163808](2163959 '.' this[1539736] F2__iterator[2163266]))
    (2163962 'move' this[2163638](2163964 '.v' tmp[2163808] F0_this[2165483]))
    (2163967 'move' call_tmp[2163636](2163970 call dom[1360329] this[2163638]))
    (2163972 'move' coerce_tmp[2163642](2163974 'deref' call_tmp[2163636]))
    (2163976 'move' coerce_tmp[2163644] coerce_tmp[2163642])
    (2163980 call these_default_offset[1487155] coerce_tmp[2163642] ret_tmp[2163648])
    (2163983 'move' tmp[2163810] ret_tmp[2163648])
    (2163986 '.=' this[1539736] F4_default_arg_offset[2163270] tmp[2163810])
    (2163990 'move' tmp[2163812](2163992 '.' this[1539736] F2__iterator[2163266]))
    (2163995 'move' followThis[2163652](2163997 '.v' tmp[2163812] F1_followThis[2165487]))
    (2164000 'move' tmp[2163814](2164002 '.' this[1539736] F2__iterator[2163266]))
    (2164005 'move' tasksPerLocale[2163654](2164007 '.v' tmp[2163814] F2_tasksPerLocale[2165491]))
    (2164010 'move' tmp[2163816](2164012 '.' this[1539736] F2__iterator[2163266]))
    (2164015 'move' ignoreRunning[2163656](2164017 '.v' tmp[2163816] F3_ignoreRunning[2165495]))
    (2164020 'move' tmp[2163818](2164022 '.' this[1539736] F2__iterator[2163266]))
    (2164025 'move' minIndicesPerTask[2163658](2164027 '.v' tmp[2163818] F4_minIndicesPerTask[2165499]))
    (2164030 'move' tmp[2163820](2164032 '.' this[1539736] F4_default_arg_offset[2163270]))
    (2164036 call these[1485740] coerce_tmp[2163644] followThis[2163652] tasksPerLocale[2163654] ignoreRunning[2163656] minIndicesPerTask[2163658] tmp[2163820] ret_tmp[2163650])
    (2164044 'move' call_tmp[2163640] ret_tmp[2163650])
    (2164047 'move' tmp[2163822](2164050 call _getIterator[1488060] call_tmp[2163640]))
    (2164052 '.=' this[1539736] F3__iterator[2163268] tmp[2163822])
    (2164057 call _defaultOf[1251254] ret_tmp[2163670])
    (2164059 'move' tmp[2163824] ret_tmp[2163670])
    (2164062 '.=' this[1539736] F5_block[2163272] tmp[2163824])
    (2164066 'move' i[2163672] 0)
    (2164069 'move' tmp[2163826](2164071 '.' this[1539736] F5_block[2163272]))
    (2164074 'move' call_tmp[2163674](2164076 '.' tmp[2163826] x0[1244883]))
    (2164079 'move' tmp[2163828](2164081 '.' this[1539736] F3__iterator[2163268]))
    (2164084 'move' this[2163680](2164086 '.v' tmp[2163828] F0_this[2161440]))
    (2164089 'move' _this_tmp_[2163678](2164092 call ranges[1251533] this[2163680]))
    (2164094 'move' call_tmp[2163676](2164096 '.' _this_tmp_[2163678] x0[1244883]))
    (2164099 'move' call_tmp[2163682](2164102 call _low[1028641] call_tmp[2163676]))
    (2164104 'move' tmp[2163830](2164106 '.' this[1539736] F3__iterator[2163268]))
    (2164109 'move' followThis[2163688](2164111 '.v' tmp[2163830] F1_followThis[2161444]))
    (2164114 'move' call_tmp[2163686](2164116 '.' followThis[2163688] x0[1244883]))
    (2164119 'move' coerce_tmp[2163692](2164122 call chpl__initCopy[1085195] call_tmp[2163686]))
    (2164124 'move' call_tmp[2163690](2164127 call low[1028600] coerce_tmp[2163692]))
    (2164129 'move' call_tmp[2163694] call_tmp[2163690])
    (2164132 'move' coerce_tmp[2163698](2164134 'deref' call_tmp[2163682]))
    (2164136 'move' call_tmp[2163696](2164139 call +[439752] coerce_tmp[2163698] call_tmp[2163690]))
    (2164142 'move' tmp[2163832](2164144 '.' this[1539736] F3__iterator[2163268]))
    (2164147 'move' this[2163704](2164149 '.v' tmp[2163832] F0_this[2161440]))
    (2164152 'move' _this_tmp_[2163702](2164155 call ranges[1251533] this[2163704]))
    (2164157 'move' call_tmp[2163700](2164159 '.' _this_tmp_[2163702] x0[1244883]))
    (2164162 'move' call_tmp[2163706](2164165 call _low[1028641] call_tmp[2163700]))
    (2164167 'move' tmp[2163834](2164169 '.' this[1539736] F3__iterator[2163268]))
    (2164172 'move' followThis[2163712](2164174 '.v' tmp[2163834] F1_followThis[2161444]))
    (2164177 'move' call_tmp[2163710](2164179 '.' followThis[2163712] x0[1244883]))
    (2164182 'move' coerce_tmp[2163716](2164185 call chpl__initCopy[1085195] call_tmp[2163710]))
    (2164187 'move' call_tmp[2163714](2164190 call high[1028808] coerce_tmp[2163716]))
    (2164192 'move' call_tmp[2163718] call_tmp[2163714])
    (2164195 'move' coerce_tmp[2163722](2164197 'deref' call_tmp[2163706]))
    (2164199 'move' call_tmp[2163720](2164202 call +[439752] coerce_tmp[2163722] call_tmp[2163714]))
    (2164206 call chpl_build_bounded_range[455253] call_tmp[2163696] call_tmp[2163720] ret_tmp[2163726])
    (2164210 'move' call_tmp[2163724] ret_tmp[2163726])
    (2164214 call =[1251739] call_tmp[2163674] call_tmp[2163724])
    (2164218 call chpl__autoDestroy[1407763] call_tmp[2163724])
    (2164221 call chpl__autoDestroy[1407763] coerce_tmp[2163716])
    (2164224 call chpl__autoDestroy[1407763] coerce_tmp[2163692])
    (2164226 'move' tmp[2163838](2164228 '.' this[1539736] F5_block[2163272]))
    (2164231 'move' tmp[2163836](2164234 call _getIteratorZip[1487726] tmp[2163838]))
    (2164236 '.=' this[1539736] F6__iterator[2163274] tmp[2163836])
    (2164240 'move' tmp[2163840](2164242 '.' this[1539736] F6__iterator[2163274]))
    (2164245 'move' this[2163736](2164247 '.v' tmp[2163840] F0_this[2113071]))
    (2164250 'move' _return_tmp_[2163734](2164253 call checkIfIterWillOverflow[1096003] this[2163736] 1))
    (2164256 'move' tmp[2163842] 0)
    (2164259 '.=' this[1539736] F7_i[2163276] tmp[2163842])
    (2164263 'move' tmp[2163844](2164265 '.' this[1539736] F6__iterator[2163274]))
    (2164268 'move' this[2163744](2164270 '.v' tmp[2163844] F0_this[2113071]))
    (2164273 'move' call_tmp[2163742](2164276 call _low[1028641] this[2163744]))
    (2164278 'move' tmp[2163846](2164280 'deref' call_tmp[2163742]))
    (2164282 '.=' this[1539736] F9_coerce_tmp[2163280] tmp[2163846])
    (2164286 'move' tmp[2163848](2164288 '.v' this[1539736] F9_coerce_tmp[2163280]))
    (2164291 '=' start[2163746] tmp[2163848])
    (2164294 'noop')
    (2164295 'move' tmp[2163850](2164297 '.' this[1539736] F6__iterator[2163274]))
    (2164300 'move' this[2163752](2164302 '.v' tmp[2163850] F0_this[2113071]))
    (2164305 'move' call_tmp[2163750](2164308 call _high[1028849] this[2163752]))
    (2164310 'move' coerce_tmp[2163756](2164312 'deref' call_tmp[2163750]))
    (2164314 '=' tmp[2163852] coerce_tmp[2163756])
    (2164317 '.=' this[1539736] F8_end[2163278] tmp[2163852])
    (2164321 'noop')
    (2164322 return _void[55])
  }
  function _ic_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539699].zip2[1539743](const in arg this[1539745]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539699]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    val ret[2164325]:_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539705] "dead after last mention" "RVV" "temp"
    val call_tmp[2164327]:[domain(1,int(64),false)] real(64)[1358944] "dead after last mention" "expr temp" "maybe param" "temp"
    ref _indexOfInterest[2164329]:_ref(real(64))[936906] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[2164331]:_ic_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539345] "dead at end of block" "expr temp" "temp"
    val call_tmp[2164333]:[domain(1,int(64),false)] real(64)[1358944] "dead at end of block" "expr temp" "maybe param" "temp"
    val call_tmp[2164335]:_ir_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539351] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[2164337]:[domain(1,int(64),false)] real(64)[1358944] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val default_arg_tasksPerLocale[2164339]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    val default_arg_ignoreRunning[2164341]:bool[10] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    val default_arg_minIndicesPerTask[2164343]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    val ret_tmp[2164345]:_ir_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539351] "temp"
    val ret[2164347]:_ir_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539351] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[2164349]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[2164351]:_ic_these_DefaultRectangularDom_1_int64_t_F[1488045] "dead at end of block" "expr temp" "temp"
    ref call_tmp[2164353]:_ref(domain(1,int(64),false))[1251138] "dead at end of block" "maybe param" "temp"
    const-val this[2164355]:[domain(1,int(64),false)] real(64)[1358944] "temp"
    val call_tmp[2164357]:_ir_these_DefaultRectangularDom_1_int64_t_F[1488051] "dead at end of block" "expr temp" "maybe param" "temp"
    val coerce_tmp[2164359]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val coerce_tmp[2164361]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val default_arg_offset[2164363]:1*int(64)[1256714] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    val ret_tmp[2164365]:1*int(64)[1256714] "temp"
    val ret_tmp[2164367]:_ir_these_DefaultRectangularDom_1_int64_t_F[1488051] "temp"
    ref followThis[2164369]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    const-val tasksPerLocale[2164371]:int(64)[13] "temp"
    const-val ignoreRunning[2164373]:bool[10] "temp"
    const-val minIndicesPerTask[2164375]:int(64)[13] "temp"
    val ret[2164377]:_ir_these_DefaultRectangularDom_1_int64_t_F[1488051] "dead after last mention" "RVV" "temp"
    val block[2164379]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "insert auto destroy"
    val call_tmp[2164381]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[2164383]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[2164385]:1*range(int(64),bounded,false)[1244885] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val ret_tmp[2164387]:1*range(int(64),bounded,false)[1244885] "temp"
    val i[2164389]:int(64)[13] "dead at end of block" "insert auto destroy"
    ref call_tmp[2164391]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2164393]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[2164395]:_ref(1*range(int(64),bounded,false))[1244943] "dead after last mention" "temp"
    const-val this[2164397]:domain(1,int(64),false)[1251123] "temp"
    ref call_tmp[2164399]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    val call_tmp[2164401]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[2164403]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
    ref followThis[2164405]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    val call_tmp[2164407]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2164409]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val call_tmp[2164411]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val call_tmp[2164413]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2164415]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    ref call_tmp[2164417]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[2164419]:_ref(1*range(int(64),bounded,false))[1244943] "dead after last mention" "temp"
    const-val this[2164421]:domain(1,int(64),false)[1251123] "temp"
    ref call_tmp[2164423]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    val call_tmp[2164425]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[2164427]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
    ref followThis[2164429]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    val call_tmp[2164431]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2164433]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val call_tmp[2164435]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val call_tmp[2164437]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2164439]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val call_tmp[2164441]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val ret_tmp[2164443]:range(int(64),bounded,false)[1027003] "temp"
    val _indexOfInterest[2164445]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[2164447]:_ic_these_range_int64_t_bounded_F[1096892] "dead at end of block" "expr temp" "temp"
    val ret[2164449]:_ir_these_range_int64_t_bounded_F[1096898] "dead after last mention" "RVV" "temp"
    val _return_tmp_[2164451]:bool[10] "dead after last mention" "temp"
    const-val this[2164453]:range(int(64),bounded,false)[1027003] "temp"
    val i[2164455]:int(64)[13] "dead at end of block" "insert auto destroy"
    val call_tmp[2164457]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[2164459]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    const-val this[2164461]:range(int(64),bounded,false)[1027003] "temp"
    const start[2164463]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[2164465]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    ref call_tmp[2164467]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    const-val this[2164469]:range(int(64),bounded,false)[1027003] "temp"
    const end[2164471]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[2164473]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    const-val yret[2164475]:int(64)[13] "dead after last mention" "YVV" "temp"
    const-val call_tmp[2164477]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val this[2164479]:range(int(64),bounded,false)[1027003] "temp"
    const-val _yieldedIndex[2164481]:int(64)[13] "temp"
    const-val i[2164483]:int(64)[13] "const" "index var" "insert auto destroy"
    const-val yret[2164485]:int(64)[13] "dead after last mention" "YVV" "temp"
    const-val call_tmp[2164487]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val this[2164489]:domain(1,int(64),false)[1251123] "temp"
    const-val _yieldedIndex[2164491]:int(64)[13] "temp"
    const-val i[2164493]:int(64)[13] "const" "index var" "insert auto destroy"
    ref yret[2164495]:_ref(real(64))[936906] "dead after last mention" "YVV" "temp"
    ref call_tmp[2164497]:_ref(real(64))[936906] "dead after last mention" "maybe param" "temp"
    const-val this[2164499]:[domain(1,int(64),false)] real(64)[1358944] "temp"
    ref _yieldedIndex[2164501]:_ref(real(64))[936906] "temp"
    ref i[2164503]:_ref(real(64))[936906] "index var" "insert auto destroy"
    ref yret[2164505]:_ref(real(64))[936906] "dead after last mention" "YVV" "temp"
    val call_tmp[2164507]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    label _endthese[2164509]
    label _endthese[2164511]
    label _endthese[2164513]
    label _endthese[2164515]
    ref tmp[2164517]:_ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055] "temp"
    ref tmp[2164519]:_ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055] "temp"
    ref tmp[2164521]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    val tmp[2164523]:_ic_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539345] "temp"
    ref tmp[2164525]:_ref(_ic_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t)[1539488] "temp"
    val tmp[2164527]:1*int(64)[1256714] "temp"
    ref tmp[2164529]:_ref(_ic_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t)[1539488] "temp"
    ref tmp[2164531]:_ref(_ic_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t)[1539488] "temp"
    ref tmp[2164533]:_ref(_ic_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t)[1539488] "temp"
    ref tmp[2164535]:_ref(_ic_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t)[1539488] "temp"
    ref tmp[2164537]:_ref(1*int(64))[1256784] "temp"
    val tmp[2164539]:_ic_these_DefaultRectangularDom_1_int64_t_F[1488045] "temp"
    val tmp[2164541]:1*range(int(64),bounded,false)[1244885] "temp"
    ref tmp[2164543]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    ref tmp[2164545]:_ref(_ic_these_DefaultRectangularDom_1_int64_t_F)[1488188] "temp"
    ref tmp[2164547]:_ref(_ic_these_DefaultRectangularDom_1_int64_t_F)[1488188] "temp"
    ref tmp[2164549]:_ref(_ic_these_DefaultRectangularDom_1_int64_t_F)[1488188] "temp"
    ref tmp[2164551]:_ref(_ic_these_DefaultRectangularDom_1_int64_t_F)[1488188] "temp"
    val tmp[2164553]:_ic_these_range_int64_t_bounded_F[1096892] "temp"
    ref tmp[2164555]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    ref tmp[2164557]:_ref(_ic_these_range_int64_t_bounded_F)[1097035] "temp"
    val tmp[2164559]:int(64)[13] "temp"
    ref tmp[2164561]:_ref(_ic_these_range_int64_t_bounded_F)[1097035] "temp"
    val tmp[2164563]:int(64)[13] "temp"
    val tmp[2164565]:int(64)[13] "temp"
    ref tmp[2164567]:_ref(_ic_these_range_int64_t_bounded_F)[1097035] "temp"
    const tmp[2164569]:int(64)[13] "temp"
    ref tmp[2164571]:_ref(_ic_these_range_int64_t_bounded_F)[1097035] "temp"
    const-val tmp[2164573]:int(64)[13] "temp"
    ref tmp[2164575]:_ref(_ic_these_DefaultRectangularDom_1_int64_t_F)[1488188] "temp"
    ref tmp[2164577]:_ref(_ic_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t)[1539488] "temp"
    ref tmp[2164579]:_ref(real(64))[936906] "temp"
    val tmp[2164581]:_ic_these_range_int64_t_bounded_F[1096892] "temp"
    ref tmp[2164583]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    val tmp[2164585]:_ic_these_DefaultRectangularDom_1_int64_t_F[1488045] "temp"
    ref tmp[2164587]:_ref(1*int(64))[1256784] "temp"
    val tmp[2164589]:_ic_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539345] "temp"
    val tmp[2164591]:int(64)[13] "temp"
    val tmp[2164593]:int(64)[13] "temp"
    val tmp[2164595]:int(64)[13] "temp"
    const tmp[2164597]:int(64)[13] "temp"
    val tmp[2164599]:int(64)[13] "temp"
    val tmp[2164601]:_ic_these_range_int64_t_bounded_F[1096892] "temp"
    ref tmp[2164603]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    val tmp[2164605]:_ic_these_DefaultRectangularDom_1_int64_t_F[1488045] "temp"
    ref tmp[2164607]:_ref(1*int(64))[1256784] "temp"
    val tmp[2164609]:_ic_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539345] "temp"
    (2164611 'move' tmp[2164571](2164613 '.' this[1539745] F6__iterator[2163274]))
    (2164616 'move' this[2164479](2164618 '.v' tmp[2164571] F0_this[2113071]))
    (2164621 'move' tmp[2164573](2164623 '.v' this[1539745] F7_i[2163276]))
    (2164626 'move' call_tmp[2164477](2164629 call chpl_intToIdx[1028669] this[2164479] tmp[2164573]))
    (2164632 'move' yret[2164475] call_tmp[2164477])
    (2164635 'move' _yieldedIndex[2164481] call_tmp[2164477])
    (2164638 'move' i[2164483] _yieldedIndex[2164481])
    (2164641 'move' tmp[2164575](2164643 '.' this[1539745] F3__iterator[2163268]))
    (2164646 'move' this[2164489](2164648 '.v' tmp[2164575] F0_this[2161440]))
    (2164651 'move' call_tmp[2164487](2164654 call chpl_intToIdx[1302054] this[2164489] _yieldedIndex[2164481]))
    (2164657 'move' yret[2164485] call_tmp[2164487])
    (2164660 'move' _yieldedIndex[2164491] call_tmp[2164487])
    (2164663 'move' i[2164493] _yieldedIndex[2164491])
    (2164666 'move' tmp[2164577](2164668 '.' this[1539745] F2__iterator[2163266]))
    (2164671 'move' this[2164499](2164673 '.v' tmp[2164577] F0_this[2165483]))
    (2164676 'move' call_tmp[2164497](2164679 call dsiAccess[1389399] this[2164499] _yieldedIndex[2164491]))
    (2164682 'move' _yieldedIndex[2164501] call_tmp[2164497])
    (2164685 'move' i[2164503] _yieldedIndex[2164501])
    (2164688 'move' tmp[2164579] i[2164503])
    (2164691 '.=' this[1539745] value[2163282] tmp[2164579])
    (2164695 '.=' this[1539745] more[1539702] 2)
    (2164699 return _void[55])
  }
  function _ic_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539699].zip3[1539752](const in arg this[1539754]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539699]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    val ret[2164702]:_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539705] "dead after last mention" "RVV" "temp"
    val call_tmp[2164704]:[domain(1,int(64),false)] real(64)[1358944] "dead after last mention" "expr temp" "maybe param" "temp"
    ref _indexOfInterest[2164706]:_ref(real(64))[936906] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[2164708]:_ic_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539345] "dead at end of block" "expr temp" "temp"
    val call_tmp[2164710]:[domain(1,int(64),false)] real(64)[1358944] "dead at end of block" "expr temp" "maybe param" "temp"
    val call_tmp[2164712]:_ir_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539351] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[2164714]:[domain(1,int(64),false)] real(64)[1358944] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val default_arg_tasksPerLocale[2164716]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    val default_arg_ignoreRunning[2164718]:bool[10] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    val default_arg_minIndicesPerTask[2164720]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    val ret_tmp[2164722]:_ir_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539351] "temp"
    val ret[2164724]:_ir_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539351] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[2164726]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[2164728]:_ic_these_DefaultRectangularDom_1_int64_t_F[1488045] "dead at end of block" "expr temp" "temp"
    ref call_tmp[2164730]:_ref(domain(1,int(64),false))[1251138] "dead at end of block" "maybe param" "temp"
    const-val this[2164732]:[domain(1,int(64),false)] real(64)[1358944] "temp"
    val call_tmp[2164734]:_ir_these_DefaultRectangularDom_1_int64_t_F[1488051] "dead at end of block" "expr temp" "maybe param" "temp"
    val coerce_tmp[2164736]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val coerce_tmp[2164738]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val default_arg_offset[2164740]:1*int(64)[1256714] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    val ret_tmp[2164742]:1*int(64)[1256714] "temp"
    val ret_tmp[2164744]:_ir_these_DefaultRectangularDom_1_int64_t_F[1488051] "temp"
    ref followThis[2164746]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    const-val tasksPerLocale[2164748]:int(64)[13] "temp"
    const-val ignoreRunning[2164750]:bool[10] "temp"
    const-val minIndicesPerTask[2164752]:int(64)[13] "temp"
    val ret[2164754]:_ir_these_DefaultRectangularDom_1_int64_t_F[1488051] "dead after last mention" "RVV" "temp"
    val block[2164756]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "insert auto destroy"
    val call_tmp[2164758]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[2164760]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[2164762]:1*range(int(64),bounded,false)[1244885] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val ret_tmp[2164764]:1*range(int(64),bounded,false)[1244885] "temp"
    val i[2164766]:int(64)[13] "dead at end of block" "insert auto destroy"
    ref call_tmp[2164768]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2164770]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[2164772]:_ref(1*range(int(64),bounded,false))[1244943] "dead after last mention" "temp"
    const-val this[2164774]:domain(1,int(64),false)[1251123] "temp"
    ref call_tmp[2164776]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    val call_tmp[2164778]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[2164780]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
    ref followThis[2164782]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    val call_tmp[2164784]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2164786]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val call_tmp[2164788]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val call_tmp[2164790]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2164792]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    ref call_tmp[2164794]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[2164796]:_ref(1*range(int(64),bounded,false))[1244943] "dead after last mention" "temp"
    const-val this[2164798]:domain(1,int(64),false)[1251123] "temp"
    ref call_tmp[2164800]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    val call_tmp[2164802]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[2164804]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
    ref followThis[2164806]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    val call_tmp[2164808]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2164810]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val call_tmp[2164812]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val call_tmp[2164814]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2164816]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val call_tmp[2164818]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val ret_tmp[2164820]:range(int(64),bounded,false)[1027003] "temp"
    val _indexOfInterest[2164822]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[2164824]:_ic_these_range_int64_t_bounded_F[1096892] "dead at end of block" "expr temp" "temp"
    val ret[2164826]:_ir_these_range_int64_t_bounded_F[1096898] "dead after last mention" "RVV" "temp"
    val _return_tmp_[2164828]:bool[10] "dead after last mention" "temp"
    const-val this[2164830]:range(int(64),bounded,false)[1027003] "temp"
    val i[2164832]:int(64)[13] "dead at end of block" "insert auto destroy"
    val call_tmp[2164834]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[2164836]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    const-val this[2164838]:range(int(64),bounded,false)[1027003] "temp"
    const start[2164840]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[2164842]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    ref call_tmp[2164844]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    const-val this[2164846]:range(int(64),bounded,false)[1027003] "temp"
    const end[2164848]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[2164850]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    val yret[2164852]:int(64)[13] "dead after last mention" "YVV" "temp"
    val call_tmp[2164854]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val this[2164856]:range(int(64),bounded,false)[1027003] "temp"
    val _yieldedIndex[2164858]:int(64)[13] "temp"
    const i[2164860]:int(64)[13] "const" "index var" "insert auto destroy"
    val yret[2164862]:int(64)[13] "dead after last mention" "YVV" "temp"
    val call_tmp[2164864]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val this[2164866]:domain(1,int(64),false)[1251123] "temp"
    val _yieldedIndex[2164868]:int(64)[13] "temp"
    const i[2164870]:int(64)[13] "const" "index var" "insert auto destroy"
    ref yret[2164872]:_ref(real(64))[936906] "dead after last mention" "YVV" "temp"
    ref call_tmp[2164874]:_ref(real(64))[936906] "dead after last mention" "maybe param" "temp"
    const-val this[2164876]:[domain(1,int(64),false)] real(64)[1358944] "temp"
    ref _yieldedIndex[2164878]:_ref(real(64))[936906] "temp"
    ref i[2164880]:_ref(real(64))[936906] "index var" "insert auto destroy"
    ref yret[2164882]:_ref(real(64))[936906] "dead after last mention" "YVV" "temp"
    val call_tmp[2164884]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    label _endthese[2164886]
    label _endthese[2164888]
    label _endthese[2164890]
    label _endthese[2164892]
    ref tmp[2164894]:_ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055] "temp"
    ref tmp[2164896]:_ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055] "temp"
    ref tmp[2164898]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    val tmp[2164900]:_ic_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539345] "temp"
    ref tmp[2164902]:_ref(_ic_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t)[1539488] "temp"
    val tmp[2164904]:1*int(64)[1256714] "temp"
    ref tmp[2164906]:_ref(_ic_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t)[1539488] "temp"
    ref tmp[2164908]:_ref(_ic_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t)[1539488] "temp"
    ref tmp[2164910]:_ref(_ic_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t)[1539488] "temp"
    ref tmp[2164912]:_ref(_ic_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t)[1539488] "temp"
    ref tmp[2164914]:_ref(1*int(64))[1256784] "temp"
    val tmp[2164916]:_ic_these_DefaultRectangularDom_1_int64_t_F[1488045] "temp"
    val tmp[2164918]:1*range(int(64),bounded,false)[1244885] "temp"
    ref tmp[2164920]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    ref tmp[2164922]:_ref(_ic_these_DefaultRectangularDom_1_int64_t_F)[1488188] "temp"
    ref tmp[2164924]:_ref(_ic_these_DefaultRectangularDom_1_int64_t_F)[1488188] "temp"
    ref tmp[2164926]:_ref(_ic_these_DefaultRectangularDom_1_int64_t_F)[1488188] "temp"
    ref tmp[2164928]:_ref(_ic_these_DefaultRectangularDom_1_int64_t_F)[1488188] "temp"
    val tmp[2164930]:_ic_these_range_int64_t_bounded_F[1096892] "temp"
    ref tmp[2164932]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    ref tmp[2164934]:_ref(_ic_these_range_int64_t_bounded_F)[1097035] "temp"
    val tmp[2164936]:int(64)[13] "temp"
    ref tmp[2164938]:_ref(_ic_these_range_int64_t_bounded_F)[1097035] "temp"
    val tmp[2164940]:int(64)[13] "temp"
    val tmp[2164942]:int(64)[13] "temp"
    ref tmp[2164944]:_ref(_ic_these_range_int64_t_bounded_F)[1097035] "temp"
    const tmp[2164946]:int(64)[13] "temp"
    ref tmp[2164948]:_ref(_ic_these_range_int64_t_bounded_F)[1097035] "temp"
    val tmp[2164950]:int(64)[13] "temp"
    ref tmp[2164952]:_ref(_ic_these_DefaultRectangularDom_1_int64_t_F)[1488188] "temp"
    ref tmp[2164954]:_ref(_ic_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t)[1539488] "temp"
    ref tmp[2164956]:_ref(real(64))[936906] "temp"
    val tmp[2164958]:_ic_these_range_int64_t_bounded_F[1096892] "temp"
    ref tmp[2164960]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    val tmp[2164962]:_ic_these_DefaultRectangularDom_1_int64_t_F[1488045] "temp"
    ref tmp[2164964]:_ref(1*int(64))[1256784] "temp"
    val tmp[2164966]:_ic_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539345] "temp"
    val tmp[2164968]:int(64)[13] "temp"
    val tmp[2164970]:int(64)[13] "temp"
    val tmp[2164972]:int(64)[13] "temp"
    const tmp[2164974]:int(64)[13] "temp"
    val tmp[2164976]:int(64)[13] "temp"
    val tmp[2164978]:_ic_these_range_int64_t_bounded_F[1096892] "temp"
    ref tmp[2164980]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    val tmp[2164982]:_ic_these_DefaultRectangularDom_1_int64_t_F[1488045] "temp"
    ref tmp[2164984]:_ref(1*int(64))[1256784] "temp"
    val tmp[2164986]:_ic_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539345] "temp"
    (2164988 return _void[55])
  }
  function _ic_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539699].zip4[1539761](const in arg this[1539763]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539699]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    val ret[2164991]:_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539705] "dead after last mention" "RVV" "temp"
    val call_tmp[2164993]:[domain(1,int(64),false)] real(64)[1358944] "dead after last mention" "expr temp" "maybe param" "temp"
    ref _indexOfInterest[2164995]:_ref(real(64))[936906] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[2164997]:_ic_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539345] "dead at end of block" "expr temp" "temp"
    val call_tmp[2164999]:[domain(1,int(64),false)] real(64)[1358944] "dead at end of block" "expr temp" "maybe param" "temp"
    val call_tmp[2165001]:_ir_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539351] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[2165003]:[domain(1,int(64),false)] real(64)[1358944] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val default_arg_tasksPerLocale[2165005]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    val default_arg_ignoreRunning[2165007]:bool[10] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    val default_arg_minIndicesPerTask[2165009]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    val ret_tmp[2165011]:_ir_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539351] "temp"
    val ret[2165013]:_ir_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539351] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[2165015]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[2165017]:_ic_these_DefaultRectangularDom_1_int64_t_F[1488045] "dead at end of block" "expr temp" "temp"
    ref call_tmp[2165019]:_ref(domain(1,int(64),false))[1251138] "dead at end of block" "maybe param" "temp"
    const-val this[2165021]:[domain(1,int(64),false)] real(64)[1358944] "temp"
    val call_tmp[2165023]:_ir_these_DefaultRectangularDom_1_int64_t_F[1488051] "dead at end of block" "expr temp" "maybe param" "temp"
    val coerce_tmp[2165025]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val coerce_tmp[2165027]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val default_arg_offset[2165029]:1*int(64)[1256714] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    val ret_tmp[2165031]:1*int(64)[1256714] "temp"
    val ret_tmp[2165033]:_ir_these_DefaultRectangularDom_1_int64_t_F[1488051] "temp"
    ref followThis[2165035]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    const-val tasksPerLocale[2165037]:int(64)[13] "temp"
    const-val ignoreRunning[2165039]:bool[10] "temp"
    const-val minIndicesPerTask[2165041]:int(64)[13] "temp"
    val ret[2165043]:_ir_these_DefaultRectangularDom_1_int64_t_F[1488051] "dead after last mention" "RVV" "temp"
    val block[2165045]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "insert auto destroy"
    val call_tmp[2165047]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[2165049]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[2165051]:1*range(int(64),bounded,false)[1244885] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val ret_tmp[2165053]:1*range(int(64),bounded,false)[1244885] "temp"
    val i[2165055]:int(64)[13] "dead at end of block" "insert auto destroy"
    ref call_tmp[2165057]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2165059]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[2165061]:_ref(1*range(int(64),bounded,false))[1244943] "dead after last mention" "temp"
    const-val this[2165063]:domain(1,int(64),false)[1251123] "temp"
    ref call_tmp[2165065]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    val call_tmp[2165067]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[2165069]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
    ref followThis[2165071]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    val call_tmp[2165073]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2165075]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val call_tmp[2165077]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val call_tmp[2165079]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2165081]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    ref call_tmp[2165083]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[2165085]:_ref(1*range(int(64),bounded,false))[1244943] "dead after last mention" "temp"
    const-val this[2165087]:domain(1,int(64),false)[1251123] "temp"
    ref call_tmp[2165089]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    val call_tmp[2165091]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[2165093]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
    ref followThis[2165095]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    val call_tmp[2165097]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2165099]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val call_tmp[2165101]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val call_tmp[2165103]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2165105]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val call_tmp[2165107]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val ret_tmp[2165109]:range(int(64),bounded,false)[1027003] "temp"
    val _indexOfInterest[2165111]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[2165113]:_ic_these_range_int64_t_bounded_F[1096892] "dead at end of block" "expr temp" "temp"
    val ret[2165115]:_ir_these_range_int64_t_bounded_F[1096898] "dead after last mention" "RVV" "temp"
    val _return_tmp_[2165117]:bool[10] "dead after last mention" "temp"
    const-val this[2165119]:range(int(64),bounded,false)[1027003] "temp"
    val i[2165121]:int(64)[13] "dead at end of block" "insert auto destroy"
    val call_tmp[2165123]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[2165125]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    const-val this[2165127]:range(int(64),bounded,false)[1027003] "temp"
    const start[2165129]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[2165131]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    ref call_tmp[2165133]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    const-val this[2165135]:range(int(64),bounded,false)[1027003] "temp"
    const end[2165137]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[2165139]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    val yret[2165141]:int(64)[13] "dead after last mention" "YVV" "temp"
    val call_tmp[2165143]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val this[2165145]:range(int(64),bounded,false)[1027003] "temp"
    val _yieldedIndex[2165147]:int(64)[13] "temp"
    const i[2165149]:int(64)[13] "const" "index var" "insert auto destroy"
    val yret[2165151]:int(64)[13] "dead after last mention" "YVV" "temp"
    val call_tmp[2165153]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val this[2165155]:domain(1,int(64),false)[1251123] "temp"
    val _yieldedIndex[2165157]:int(64)[13] "temp"
    const i[2165159]:int(64)[13] "const" "index var" "insert auto destroy"
    ref yret[2165161]:_ref(real(64))[936906] "dead after last mention" "YVV" "temp"
    ref call_tmp[2165163]:_ref(real(64))[936906] "dead after last mention" "maybe param" "temp"
    const-val this[2165165]:[domain(1,int(64),false)] real(64)[1358944] "temp"
    ref _yieldedIndex[2165167]:_ref(real(64))[936906] "temp"
    ref i[2165169]:_ref(real(64))[936906] "index var" "insert auto destroy"
    ref yret[2165171]:_ref(real(64))[936906] "dead after last mention" "YVV" "temp"
    val call_tmp[2165173]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    label _endthese[2165175]
    label _endthese[2165177]
    label _endthese[2165179]
    label _endthese[2165181]
    ref tmp[2165183]:_ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055] "temp"
    ref tmp[2165185]:_ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055] "temp"
    ref tmp[2165187]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    val tmp[2165189]:_ic_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539345] "temp"
    ref tmp[2165191]:_ref(_ic_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t)[1539488] "temp"
    val tmp[2165193]:1*int(64)[1256714] "temp"
    ref tmp[2165195]:_ref(_ic_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t)[1539488] "temp"
    ref tmp[2165197]:_ref(_ic_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t)[1539488] "temp"
    ref tmp[2165199]:_ref(_ic_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t)[1539488] "temp"
    ref tmp[2165201]:_ref(_ic_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t)[1539488] "temp"
    ref tmp[2165203]:_ref(1*int(64))[1256784] "temp"
    val tmp[2165205]:_ic_these_DefaultRectangularDom_1_int64_t_F[1488045] "temp"
    val tmp[2165207]:1*range(int(64),bounded,false)[1244885] "temp"
    ref tmp[2165209]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    ref tmp[2165211]:_ref(_ic_these_DefaultRectangularDom_1_int64_t_F)[1488188] "temp"
    ref tmp[2165213]:_ref(_ic_these_DefaultRectangularDom_1_int64_t_F)[1488188] "temp"
    ref tmp[2165215]:_ref(_ic_these_DefaultRectangularDom_1_int64_t_F)[1488188] "temp"
    ref tmp[2165217]:_ref(_ic_these_DefaultRectangularDom_1_int64_t_F)[1488188] "temp"
    val tmp[2165219]:_ic_these_range_int64_t_bounded_F[1096892] "temp"
    ref tmp[2165221]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    ref tmp[2165223]:_ref(_ic_these_range_int64_t_bounded_F)[1097035] "temp"
    val tmp[2165225]:int(64)[13] "temp"
    ref tmp[2165227]:_ref(_ic_these_range_int64_t_bounded_F)[1097035] "temp"
    val tmp[2165229]:int(64)[13] "temp"
    val tmp[2165231]:int(64)[13] "temp"
    ref tmp[2165233]:_ref(_ic_these_range_int64_t_bounded_F)[1097035] "temp"
    const tmp[2165235]:int(64)[13] "temp"
    ref tmp[2165237]:_ref(_ic_these_range_int64_t_bounded_F)[1097035] "temp"
    val tmp[2165239]:int(64)[13] "temp"
    ref tmp[2165241]:_ref(_ic_these_DefaultRectangularDom_1_int64_t_F)[1488188] "temp"
    ref tmp[2165243]:_ref(_ic_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t)[1539488] "temp"
    ref tmp[2165245]:_ref(real(64))[936906] "temp"
    val tmp[2165247]:_ic_these_range_int64_t_bounded_F[1096892] "temp"
    ref tmp[2165249]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    val tmp[2165251]:_ic_these_DefaultRectangularDom_1_int64_t_F[1488045] "temp"
    ref tmp[2165253]:_ref(1*int(64))[1256784] "temp"
    val tmp[2165255]:_ic_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539345] "temp"
    val tmp[2165257]:int(64)[13] "temp"
    val tmp[2165259]:int(64)[13] "temp"
    val tmp[2165261]:int(64)[13] "temp"
    const tmp[2165263]:int(64)[13] "temp"
    val tmp[2165265]:int(64)[13] "temp"
    val tmp[2165267]:_ic_these_range_int64_t_bounded_F[1096892] "temp"
    ref tmp[2165269]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    val tmp[2165271]:_ic_these_DefaultRectangularDom_1_int64_t_F[1488045] "temp"
    ref tmp[2165273]:_ref(1*int(64))[1256784] "temp"
    val tmp[2165275]:_ic_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539345] "temp"
    (2165277 'move' tmp[2165267](2165279 '.v' this[1539763] F6__iterator[2163274]))
    (2165283 call _freeIterator[1102195] tmp[2165267])
    (2165285 'move' tmp[2165269](2165287 '.' this[1539763] F5_block[2163272]))
    (2165291 call chpl__autoDestroy[1695146] tmp[2165269])
    (2165293 'move' tmp[2165271](2165295 '.v' this[1539763] F3__iterator[2163268]))
    (2165299 call _freeIterator[1488607] tmp[2165271])
    (2165301 'move' tmp[2165273](2165303 '.' this[1539763] F4_default_arg_offset[2163270]))
    (2165307 call chpl__autoDestroy[1697253] tmp[2165273])
    (2165309 'move' tmp[2165275](2165311 '.v' this[1539763] F2__iterator[2163266]))
    (2165315 call _freeIterator[1539633] tmp[2165275])
    (2165317 return _void[55])
  }
  function _ic_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539699].hasMore[1539770](const in arg this[1539772]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539699]) : int(64)[13] "auto ii" "inline" "method" "resolved"
  {
    val tmp[2165370]:int(64)[13] "temp"
    const-val tmp[2165372]:int(64)[13] "temp"
    (2165374 'move' tmp[2165372](2165376 '.v' this[1539772] F7_i[2163276]))
    const-val tmp[2165379]:int(64)[13] "temp"
    (2165381 'move' tmp[2165379](2165383 '.v' this[1539772] F8_end[2163278]))
    (2165389 'move' tmp[2165370](2165386 '<=' tmp[2165372] tmp[2165379]))
    (2165391 return tmp[2165370])
  }
  function _ic_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539699].getValue[1539779](const in arg this[1539781]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539699]) : _ref(real(64))[936906] "auto ii" "inline" "method" "resolved"
  {
    ref tmp[2165394]:_ref(real(64))[936906] "temp"
    (2165399 'move' tmp[2165394](2165396 '.v' this[1539781] value[2163282]))
    (2165401 return tmp[2165394])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055].these[1537132](const  ref arg this[1537136]:_ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055], const  ref arg followThis[1537140]:1*range(int(64),bounded,false)[1244885], ref arg _retArg[1916425]:_ref(_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t)[1539816]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "iterator fn" "method" "primary method" "no doc" "reference to const when const this" "resolved" "fn synchronization free" "no return value for void"
  {
    val _ir[2165441]:_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539705] "temp"
    (2165443 '.=' _ir[2165441] F0_this[2163260] this[1537136])
    (2165447 '.=' _ir[2165441] F1_followThis[2163264] followThis[1537140])
    (2165451 '=' _retArg[1916425] _ir[2165441])
    (2165454 return _void[55])
  }
  function _ic_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539699].init[1539788](const in arg this[1539790]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539699]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    val tmp[2165404]:int(64)[13] "temp"
    const-val tmp[2165406]:int(64)[13] "temp"
    (2165408 'move' tmp[2165406](2165410 '.v' this[1539790] F9_coerce_tmp[2163280]))
    (2165413 '=' tmp[2165404] tmp[2165406])
    (2165416 '.=' this[1539790] F7_i[2163276] tmp[2165404])
    (2165420 return _void[55])
  }
  function _ic_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539699].incr[1539797](const in arg this[1539799]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539699]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    val call_tmp[2165423]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[2165425]:int(64)[13] "temp"
    (2165427 'move' tmp[2165425](2165429 '.v' this[1539799] F7_i[2163276]))
    (2165432 '+=' tmp[2165425] 1)
    (2165435 '.=' this[1539799] F7_i[2163276] tmp[2165425])
    (2165439 return _void[55])
  }
  type _ic_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539699] val super[1539700]:object[22] "super class" val more[1539702]:int(64)[13] val F0_this[2163258]:[domain(1,int(64),false)] real(64)[1366029] ref F1_followThis[2163262]:_ref(1*range(int(64),bounded,false))[1244943] val F2__iterator[2163266]:_ic_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539345] val F3__iterator[2163268]:_ic_these_DefaultRectangularDom_1_int64_t_F[1488045] val F4_default_arg_offset[2163270]:1*int(64)[1256714] val F5_block[2163272]:1*range(int(64),bounded,false)[1244885] val F6__iterator[2163274]:_ic_these_range_int64_t_bounded_F[1096892] val F7_i[2163276]:int(64)[13] const F8_end[2163278]:int(64)[13] val F9_coerce_tmp[2163280]:int(64)[13] ref value[2163282]:_ref(real(64))[936906]
  type _ir_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539705] val F0_this[2163260]:[domain(1,int(64),false)] real(64)[1366029] ref F1_followThis[2163264]:_ref(1*range(int(64),bounded,false))[1244943]
  function _getIterator[1539714](const  ref arg ir[1539716]:_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539705]) : _ic_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539699] "auto ii" "inline" "resolved" "fn synchronization free" "unsafe"
  {
    val ret[1539823]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539699] "dead after last mention" "RVV" "temp"
    val _ic_[1539706]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539699] "dead after last mention" "temp"
    const-val call_tmp[1539830]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1539833 'move' call_tmp[1539830](1539845 'sizeof_bundle' _ic_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539699]))
    const-val cast_tmp[1539848]:c_void_ptr[149] "dead after last mention" "temp"
    (1539850 'move' cast_tmp[1539848](1539711 call chpl_here_alloc[187788] call_tmp[1539830] 103))
    (1539719 'move' _ic_[1539706](1539852 'cast' _ic_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539699] cast_tmp[1539848]))
    (1539721 'setcid' _ic_[1539706])
    (1539828 'move' ret[1539823] _ic_[1539706])
    (2165457 '.=' ret[1539823] more[1539702] 1)
    val tmp[2165461]:[domain(1,int(64),false)] real(64)[1366029] "temp"
    (2165466 'move' tmp[2165461](2165462 '.v' ir[1539716] F0_this[2163260]))
    (2165468 '.=' ret[1539823] F0_this[2163258] tmp[2165461])
    ref tmp[2165472]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    (2165477 'move' tmp[2165472](2165473 '.v' ir[1539716] F1_followThis[2163264]))
    (2165479 '.=' ret[1539823] F1_followThis[2163262] tmp[2165472])
    (1539825 return ret[1539823])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] range(int(64),bounded,false)))[1415976].size[1421727](const  ref arg this[1421731]:_ref(_array(unmanaged [domain(1,int(64),false)] range(int(64),bounded,false)))[1415976]) : int(64)[13] "instantiated generic" "invisible fn" "method" "primary method" "no parens" "resolved"
  {
    val ret[1421733]:int(64)[13] "dead after last mention" "RVV" "temp"
    val call_tmp[1421741]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead after last mention" "expr temp" "maybe param" "temp"
    (1421743 'move' call_tmp[1421741](1421746 call _value[1416005] this[1421731]))
    ref call_tmp[1421749]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[1421773]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1421778 'move' coerce_tmp[1421773] call_tmp[1421741])
    (1421751 'move' call_tmp[1421749](1421754 call dom[1410591] coerce_tmp[1421773]))
    const-val call_tmp[1421757]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1421781]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1421785 'move' coerce_tmp[1421781](1421783 'deref' call_tmp[1421749]))
    val coerce_tmp[1421787]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1421792 'move' coerce_tmp[1421787] coerce_tmp[1421781])
    (1421759 'move' call_tmp[1421757](1421762 call dsiNumIndices[1263823] coerce_tmp[1421787]))
    (1421765 'move' ret[1421733] call_tmp[1421757])
    (1421769 return ret[1421733])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055].size[1522083](const  ref arg this[1522087]:_ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055]) : int(64)[13] "instantiated generic" "invisible fn" "method" "primary method" "no parens" "resolved"
  {
    val ret[1522089]:int(64)[13] "dead after last mention" "RVV" "temp"
    val call_tmp[1522097]:[domain(1,int(64),false)] real(64)[1358944] "dead after last mention" "expr temp" "maybe param" "temp"
    (1522099 'move' call_tmp[1522097](1522102 call _value[1366084] this[1522087]))
    ref call_tmp[1522105]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[1522129]:[domain(1,int(64),false)] real(64)[1358944] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1522134 'move' coerce_tmp[1522129] call_tmp[1522097])
    (1522107 'move' call_tmp[1522105](1522110 call dom[1360329] coerce_tmp[1522129]))
    const-val call_tmp[1522113]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1522137]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1522141 'move' coerce_tmp[1522137](1522139 'deref' call_tmp[1522105]))
    val coerce_tmp[1522143]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1522148 'move' coerce_tmp[1522143] coerce_tmp[1522137])
    (1522115 'move' call_tmp[1522113](1522118 call dsiNumIndices[1263823] coerce_tmp[1522143]))
    (1522121 'move' ret[1522089] call_tmp[1522113])
    (1522125 return ret[1522089])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055].writeThis[1555402](const  ref arg this[1555406]:_ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055], const  ref arg f[1555408]:channel(true,dynamic,false)[1061136], ref arg error_out[1888212]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "primary method" "no doc" "resolved" "no return value for void"
  {
    val call_tmp[1555416]:[domain(1,int(64),false)] real(64)[1358944] "dead after last mention" "expr temp" "maybe param" "temp"
    (1555418 'move' call_tmp[1555416](1555421 call _value[1366084] this[1555406]))
    val coerce_tmp[1555458]:[domain(1,int(64),false)] real(64)[1358944] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1555463 'move' coerce_tmp[1555458] call_tmp[1555416])
    val error[1888217]:Error[167984] "error variable" "temp"
    (1888219 'move' error[1888217] nil[44])
    (1555428 call dsiSerialWrite[1555434] coerce_tmp[1555458] f[1555408] error[1888217])
    val errorExists[2224096]:bool[10] "temp"
    (2224101 'move' errorExists[2224096](2224098 '!=' error[1888217] nil[44]))
    if errorExists[2224096]
    {
      (1888223 '=' error_out[1888212] error[1888217])
      gotoErrorHandlingReturn _endwriteThis[1888214] _endwriteThis[1888214]
    }
    label _endwriteThis[1888214]
    (1555430 return _void[55])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055]._scan[1397391](const  ref arg this[1397395]:_ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055], const in arg op[1397397]:SumReduceScanOp(real(64))[1396784], ref arg _retArg[1914713]:_ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "resolved"
  {
    const-val ret[1397426]:[domain(1,int(64),false)] real(64)[1366029] "dead after last mention" "RVV" "temp"
    val call_tmp[1548559]:[domain(1,int(64),false)] real(64)[1358944] "dead after last mention" "expr temp" "maybe param" "temp"
    (1548561 'move' call_tmp[1548559](1548564 call _value[1366084] this[1397395]))
    const-val call_tmp[1548567]:domain(1,int(64),false)[1252786] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1914743]:domain(1,int(64),false)[1252786] "temp"
    (1548572 call _dom[1397434] this[1397395] ret_tmp[1914743])
    (1914746 'move' call_tmp[1548567] ret_tmp[1914743])
    const-val call_tmp[1548575]:[domain(1,int(64),false)] real(64)[1366029] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val coerce_tmp[1548595]:[domain(1,int(64),false)] real(64)[1358944] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1548600 'move' coerce_tmp[1548595] call_tmp[1548559])
    const-val ret_tmp[1914755]:[domain(1,int(64),false)] real(64)[1366029] "temp"
    (1548583 call doiScan[1397586] coerce_tmp[1548595] op[1397397] call_tmp[1548567] ret_tmp[1914755])
    (1914758 'move' call_tmp[1548575] ret_tmp[1914755])
    (1548586 'move' ret[1397426] call_tmp[1548575])
    (1914715 '=' _retArg[1914713] ret[1397426])
    (1925782 call chpl__autoDestroy[1697012] call_tmp[1548567])
    (1914717 return _void[55])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287226]._instance[1287351](ref arg this[1287355]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287226]) ref : _ref(DefaultRectangularArr(1,int(64),false,locale,int(64)))[1256691] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[1287357]:_ref(DefaultRectangularArr(1,int(64),false,locale,int(64)))[1256691] "dead after last mention" "RVV" "temp"
    ref call_tmp[1287365]:_ref(DefaultRectangularArr(1,int(64),false,locale,int(64)))[1256691] "dead after last mention" "maybe param" "temp"
    (1287367 'move' call_tmp[1287365](1287369 '.' this[1287355] _instance[1287194]))
    (1287372 'move' ret[1287357] call_tmp[1287365])
    (1287376 return ret[1287357])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] unmanaged localesSignal?))[1325321]._instance[1325446](ref arg this[1325450]:_ref(_array(unmanaged [domain(1,int(64),false)] unmanaged localesSignal?))[1325321]) ref : _ref(DefaultRectangularArr(1,int(64),false,unmanaged localesSignal?,int(64)))[1318417] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[1325452]:_ref(DefaultRectangularArr(1,int(64),false,unmanaged localesSignal?,int(64)))[1318417] "dead after last mention" "RVV" "temp"
    ref call_tmp[1325460]:_ref(DefaultRectangularArr(1,int(64),false,unmanaged localesSignal?,int(64)))[1318417] "dead after last mention" "maybe param" "temp"
    (1325462 'move' call_tmp[1325460](1325464 '.' this[1325450] _instance[1325289]))
    (1325467 'move' ret[1325452] call_tmp[1325460])
    (1325471 return ret[1325452])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055]._instance[1366180](ref arg this[1366184]:_ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055]) ref : _ref(DefaultRectangularArr(1,int(64),false,real(64),int(64)))[1358960] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[1366186]:_ref(DefaultRectangularArr(1,int(64),false,real(64),int(64)))[1358960] "dead after last mention" "RVV" "temp"
    ref call_tmp[1366194]:_ref(DefaultRectangularArr(1,int(64),false,real(64),int(64)))[1358960] "dead after last mention" "maybe param" "temp"
    (1366196 'move' call_tmp[1366194](1366198 '.' this[1366184] _instance[1366023]))
    (1366201 'move' ret[1366186] call_tmp[1366194])
    (1366205 return ret[1366186])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] int(64)))[1374530]._instance[1374655](ref arg this[1374659]:_ref(_array(unmanaged [domain(1,int(64),false)] int(64)))[1374530]) ref : _ref(DefaultRectangularArr(1,int(64),false,int(64),int(64)))[1368883] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[1374661]:_ref(DefaultRectangularArr(1,int(64),false,int(64),int(64)))[1368883] "dead after last mention" "RVV" "temp"
    ref call_tmp[1374669]:_ref(DefaultRectangularArr(1,int(64),false,int(64),int(64)))[1368883] "dead after last mention" "maybe param" "temp"
    (1374671 'move' call_tmp[1374669](1374673 '.' this[1374659] _instance[1374498]))
    (1374676 'move' ret[1374661] call_tmp[1374669])
    (1374680 return ret[1374661])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] range(int(64),bounded,false)))[1415976]._instance[1416101](ref arg this[1416105]:_ref(_array(unmanaged [domain(1,int(64),false)] range(int(64),bounded,false)))[1415976]) ref : _ref(DefaultRectangularArr(1,int(64),false,range(int(64),bounded,false),int(64)))[1409240] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[1416107]:_ref(DefaultRectangularArr(1,int(64),false,range(int(64),bounded,false),int(64)))[1409240] "dead after last mention" "RVV" "temp"
    ref call_tmp[1416115]:_ref(DefaultRectangularArr(1,int(64),false,range(int(64),bounded,false),int(64)))[1409240] "dead after last mention" "maybe param" "temp"
    (1416117 'move' call_tmp[1416115](1416119 '.' this[1416105] _instance[1415944]))
    (1416122 'move' ret[1416107] call_tmp[1416115])
    (1416126 return ret[1416107])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] uint(64)))[1456173]._instance[1456298](ref arg this[1456302]:_ref(_array(unmanaged [domain(1,int(64),false)] uint(64)))[1456173]) ref : _ref(DefaultRectangularArr(1,int(64),false,uint(64),int(64)))[1450277] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[1456304]:_ref(DefaultRectangularArr(1,int(64),false,uint(64),int(64)))[1450277] "dead after last mention" "RVV" "temp"
    ref call_tmp[1456312]:_ref(DefaultRectangularArr(1,int(64),false,uint(64),int(64)))[1450277] "dead after last mention" "maybe param" "temp"
    (1456314 'move' call_tmp[1456312](1456316 '.' this[1456302] _instance[1456141]))
    (1456319 'move' ret[1456304] call_tmp[1456312])
    (1456323 return ret[1456304])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] range(int(64),bounded,false)))[1415976]._unowned[1493260](ref arg this[1493264]:_ref(_array(unmanaged [domain(1,int(64),false)] range(int(64),bounded,false)))[1415976]) ref : _ref(bool)[937388] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[1493266]:_ref(bool)[937388] "dead after last mention" "RVV" "temp"
    ref call_tmp[1493274]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (1493276 'move' call_tmp[1493274](1493278 '.' this[1493264] _unowned[1415946]))
    (1493281 'move' ret[1493266] call_tmp[1493274])
    (1493285 return ret[1493266])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055]._unowned[1542955](ref arg this[1542959]:_ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055]) ref : _ref(bool)[937388] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[1542961]:_ref(bool)[937388] "dead after last mention" "RVV" "temp"
    ref call_tmp[1542969]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (1542971 'move' call_tmp[1542969](1542973 '.' this[1542959] _unowned[1366025]))
    (1542976 'move' ret[1542961] call_tmp[1542969])
    (1542980 return ret[1542961])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287226]._unowned[1722575](ref arg this[1722579]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287226]) ref : _ref(bool)[937388] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[1722581]:_ref(bool)[937388] "dead after last mention" "RVV" "temp"
    ref call_tmp[1722589]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (1722591 'move' call_tmp[1722589](1722593 '.' this[1722579] _unowned[1287196]))
    (1722596 'move' ret[1722581] call_tmp[1722589])
    (1722600 return ret[1722581])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] unmanaged localesSignal?))[1325321]._unowned[1751562](ref arg this[1751566]:_ref(_array(unmanaged [domain(1,int(64),false)] unmanaged localesSignal?))[1325321]) ref : _ref(bool)[937388] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[1751568]:_ref(bool)[937388] "dead after last mention" "RVV" "temp"
    ref call_tmp[1751576]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (1751578 'move' call_tmp[1751576](1751580 '.' this[1751566] _unowned[1325291]))
    (1751583 'move' ret[1751568] call_tmp[1751576])
    (1751587 return ret[1751568])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] int(64)))[1374530]._unowned[1784993](ref arg this[1784997]:_ref(_array(unmanaged [domain(1,int(64),false)] int(64)))[1374530]) ref : _ref(bool)[937388] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[1784999]:_ref(bool)[937388] "dead after last mention" "RVV" "temp"
    ref call_tmp[1785007]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (1785009 'move' call_tmp[1785007](1785011 '.' this[1784997] _unowned[1374500]))
    (1785014 'move' ret[1784999] call_tmp[1785007])
    (1785018 return ret[1784999])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] uint(64)))[1456173]._unowned[1816100](ref arg this[1816104]:_ref(_array(unmanaged [domain(1,int(64),false)] uint(64)))[1456173]) ref : _ref(bool)[937388] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[1816106]:_ref(bool)[937388] "dead after last mention" "RVV" "temp"
    ref call_tmp[1816114]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (1816116 'move' call_tmp[1816114](1816118 '.' this[1816104] _unowned[1456143]))
    (1816121 'move' ret[1816106] call_tmp[1816114])
    (1816125 return ret[1816106])
  }
  function [domain(1,int(64),false)] locale[1287200].init[1287153](ref arg this[1287157]:[domain(1,int(64),false)] locale[1287200], in arg _pid[1287161]:int(64)[13], in arg _instance[1287163]:[domain(1,int(64),false)] locale[1256675], in arg _unowned[1287167]:bool[10]) : void[4] "compiler generated" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    (1287173 '.=' this[1287157] _pid[1287191] _pid[1287161])
    (1287177 '.=' this[1287157] _instance[1287194] _instance[1287163])
    (1287182 '.=' this[1287157] _unowned[1287196] _unowned[1287167])
    (1287186 return _void[55])
  }
  function [domain(1,int(64),false)] unmanaged localesSignal?[1325295].init[1325248](ref arg this[1325252]:[domain(1,int(64),false)] unmanaged localesSignal?[1325295], in arg _pid[1325256]:int(64)[13], in arg _instance[1325258]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401], in arg _unowned[1325262]:bool[10]) : void[4] "compiler generated" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    (1325268 '.=' this[1325252] _pid[1325286] _pid[1325256])
    (1325272 '.=' this[1325252] _instance[1325289] _instance[1325258])
    (1325277 '.=' this[1325252] _unowned[1325291] _unowned[1325262])
    (1325281 return _void[55])
  }
  function [domain(1,int(64),false)] real(64)[1366029].init[1365982](ref arg this[1365986]:[domain(1,int(64),false)] real(64)[1366029], in arg _pid[1365990]:int(64)[13], in arg _instance[1365992]:[domain(1,int(64),false)] real(64)[1358944], in arg _unowned[1365996]:bool[10]) : void[4] "compiler generated" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    (1366002 '.=' this[1365986] _pid[1366020] _pid[1365990])
    (1366006 '.=' this[1365986] _instance[1366023] _instance[1365992])
    (1366011 '.=' this[1365986] _unowned[1366025] _unowned[1365996])
    (1366015 return _void[55])
  }
  function [domain(1,int(64),false)] int(64)[1374504].init[1374457](ref arg this[1374461]:[domain(1,int(64),false)] int(64)[1374504], in arg _pid[1374465]:int(64)[13], in arg _instance[1374467]:[domain(1,int(64),false)] int(64)[1368867], in arg _unowned[1374471]:bool[10]) : void[4] "compiler generated" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    (1374477 '.=' this[1374461] _pid[1374495] _pid[1374465])
    (1374481 '.=' this[1374461] _instance[1374498] _instance[1374467])
    (1374486 '.=' this[1374461] _unowned[1374500] _unowned[1374471])
    (1374490 return _void[55])
  }
  function [domain(1,int(64),false)] range(int(64),bounded,false)[1415950].init[1415903](ref arg this[1415907]:[domain(1,int(64),false)] range(int(64),bounded,false)[1415950], in arg _pid[1415911]:int(64)[13], in arg _instance[1415913]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224], in arg _unowned[1415917]:bool[10]) : void[4] "compiler generated" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    (1415923 '.=' this[1415907] _pid[1415941] _pid[1415911])
    (1415927 '.=' this[1415907] _instance[1415944] _instance[1415913])
    (1415932 '.=' this[1415907] _unowned[1415946] _unowned[1415917])
    (1415936 return _void[55])
  }
  function [domain(1,int(64),false)] uint(64)[1456147].init[1456100](ref arg this[1456104]:[domain(1,int(64),false)] uint(64)[1456147], in arg _pid[1456108]:int(64)[13], in arg _instance[1456110]:[domain(1,int(64),false)] uint(64)[1450261], in arg _unowned[1456114]:bool[10]) : void[4] "compiler generated" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    (1456120 '.=' this[1456104] _pid[1456138] _pid[1456108])
    (1456124 '.=' this[1456104] _instance[1456141] _instance[1456110])
    (1456129 '.=' this[1456104] _unowned[1456143] _unowned[1456114])
    (1456133 return _void[55])
  }
  type [domain(1,int(64),false)] locale[1287200] val _pid[1287191]:int(64)[13] val _instance[1287194]:[domain(1,int(64),false)] locale[1256675] "alias scope from this" "owned" val _unowned[1287196]:bool[10] forwarding ( )
  type [domain(1,int(64),false)] unmanaged localesSignal?[1325295] val _pid[1325286]:int(64)[13] val _instance[1325289]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401] "alias scope from this" "owned" val _unowned[1325291]:bool[10] forwarding ( )
  type [domain(1,int(64),false)] real(64)[1366029] val _pid[1366020]:int(64)[13] val _instance[1366023]:[domain(1,int(64),false)] real(64)[1358944] "alias scope from this" "owned" val _unowned[1366025]:bool[10] forwarding ( )
  type [domain(1,int(64),false)] int(64)[1374504] val _pid[1374495]:int(64)[13] val _instance[1374498]:[domain(1,int(64),false)] int(64)[1368867] "alias scope from this" "owned" val _unowned[1374500]:bool[10] forwarding ( )
  type [domain(1,int(64),false)] range(int(64),bounded,false)[1415950] val _pid[1415941]:int(64)[13] val _instance[1415944]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "alias scope from this" "owned" val _unowned[1415946]:bool[10] forwarding ( )
  type [domain(1,int(64),false)] uint(64)[1456147] val _pid[1456138]:int(64)[13] val _instance[1456141]:[domain(1,int(64),false)] uint(64)[1450261] "alias scope from this" "owned" val _unowned[1456143]:bool[10] forwarding ( )
  function _do_destroy_arr[1493291](const in arg _unowned[1493293]:bool[10], const in arg _instance[1493295]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224], const in arg deinitElts[1493301]:bool[10]) : void[4] "inline" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    const-val call_tmp[1493307]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1493309 'move' call_tmp[1493307](1493312 call ![7494] _unowned[1493293]))
    const-val call_tmp[1493314]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1493316 'move' call_tmp[1493314] call_tmp[1493307])
    if call_tmp[1493314]
    {
      const-val tmp[1493323]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
      const-val call_tmp[1493325]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
      (1493327 'move' call_tmp[1493325](1493329 '_wide_get_locale' _instance[1493295]))
      (1493331 'move' tmp[1493323] call_tmp[1493325])
      val isdirect[2206852]:bool[10] "temp"
      (2206857 'move' isdirect[2206852](2206854 call chpl_doDirectExecuteOn[187469] tmp[1493323]))
      if isdirect[2206852]
      {
        (2206861 call on_fn[1493338] _instance[1493295] deinitElts[1493301])
      }
      {
        val _args_foron_fn[2206879]:_class_localson_fn[2206869] "temp"
        (2206883 'move' _args_foron_fn[2206879](2206881 'stack allocate class' _class_localson_fn[2206869]))
        (2206885 '.=' _args_foron_fn[2206879] _0_tmp[2206872] tmp[1493323])
        (2206889 '.=' _args_foron_fn[2206879] _1__instance[2206874] _instance[1493295])
        (2206893 '.=' _args_foron_fn[2206879] _2_deinitElts[2206876] deinitElts[1493301])
        val _args_vforon_fn[2206897]:c_void_ptr[149] "temp"
        (2206901 'move' _args_vforon_fn[2206897](2206899 'cast_to_void_star' _args_foron_fn[2206879]))
        val _args_sizeon_fn[2206903]:int(64)[13] "temp"
        (2206907 'move' _args_sizeon_fn[2206903](2206905 'sizeof_bundle' _class_localson_fn[2206869]))
        on(2206947 call wrapon_fn[2206909] tmp[1493323] _args_vforon_fn[2206897] _args_sizeon_fn[2206903] _args_foron_fn[2206879])
      }
      {
      }
    }
    {
    }
    (1493886 return _void[55])
  }
  function _do_destroy_arr[1542986](const in arg _unowned[1542988]:bool[10], const in arg _instance[1542990]:[domain(1,int(64),false)] real(64)[1358944], const in arg deinitElts[1542996]:bool[10]) : void[4] "inline" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    const-val call_tmp[1543002]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1543004 'move' call_tmp[1543002](1543007 call ![7494] _unowned[1542988]))
    const-val call_tmp[1543009]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1543011 'move' call_tmp[1543009] call_tmp[1543002])
    if call_tmp[1543009]
    {
      const-val tmp[1543018]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
      const-val call_tmp[1543020]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
      (1543022 'move' call_tmp[1543020](1543024 '_wide_get_locale' _instance[1542990]))
      (1543026 'move' tmp[1543018] call_tmp[1543020])
      val isdirect[2208269]:bool[10] "temp"
      (2208274 'move' isdirect[2208269](2208271 call chpl_doDirectExecuteOn[187469] tmp[1543018]))
      if isdirect[2208269]
      {
        (2208278 call on_fn[1543033] _instance[1542990] deinitElts[1542996])
      }
      {
        val _args_foron_fn[2208296]:_class_localson_fn[2208286] "temp"
        (2208300 'move' _args_foron_fn[2208296](2208298 'stack allocate class' _class_localson_fn[2208286]))
        (2208302 '.=' _args_foron_fn[2208296] _0_tmp[2208289] tmp[1543018])
        (2208306 '.=' _args_foron_fn[2208296] _1__instance[2208291] _instance[1542990])
        (2208310 '.=' _args_foron_fn[2208296] _2_deinitElts[2208293] deinitElts[1542996])
        val _args_vforon_fn[2208314]:c_void_ptr[149] "temp"
        (2208318 'move' _args_vforon_fn[2208314](2208316 'cast_to_void_star' _args_foron_fn[2208296]))
        val _args_sizeon_fn[2208320]:int(64)[13] "temp"
        (2208324 'move' _args_sizeon_fn[2208320](2208322 'sizeof_bundle' _class_localson_fn[2208286]))
        on(2208364 call wrapon_fn[2208326] tmp[1543018] _args_vforon_fn[2208314] _args_sizeon_fn[2208320] _args_foron_fn[2208296])
      }
      {
      }
    }
    {
    }
    (1543581 return _void[55])
  }
  function _do_destroy_arr[1594761](const in arg _unowned[1594763]:bool[10], const in arg _instance[1594765]:BaseArr[149584], const in arg deinitElts[1594771]:bool[10]) : void[4] "inline" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    const-val call_tmp[1594777]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1594779 'move' call_tmp[1594777](1594782 call ![7494] _unowned[1594763]))
    const-val call_tmp[1594784]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1594786 'move' call_tmp[1594784] call_tmp[1594777])
    if call_tmp[1594784]
    {
      const-val tmp[1594793]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
      const-val call_tmp[1594795]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
      (1594797 'move' call_tmp[1594795](1594799 '_wide_get_locale' _instance[1594765]))
      (1594801 'move' tmp[1594793] call_tmp[1594795])
      val isdirect[2210024]:bool[10] "temp"
      (2210029 'move' isdirect[2210024](2210026 call chpl_doDirectExecuteOn[187469] tmp[1594793]))
      if isdirect[2210024]
      {
        (2210033 call on_fn[1594808] _instance[1594765] deinitElts[1594771])
      }
      {
        val _args_foron_fn[2210051]:_class_localson_fn[2210041] "temp"
        (2210055 'move' _args_foron_fn[2210051](2210053 'stack allocate class' _class_localson_fn[2210041]))
        (2210057 '.=' _args_foron_fn[2210051] _0_tmp[2210044] tmp[1594793])
        (2210061 '.=' _args_foron_fn[2210051] _1__instance[2210046] _instance[1594765])
        (2210065 '.=' _args_foron_fn[2210051] _2_deinitElts[2210048] deinitElts[1594771])
        val _args_vforon_fn[2210069]:c_void_ptr[149] "temp"
        (2210073 'move' _args_vforon_fn[2210069](2210071 'cast_to_void_star' _args_foron_fn[2210051]))
        val _args_sizeon_fn[2210075]:int(64)[13] "temp"
        (2210079 'move' _args_sizeon_fn[2210075](2210077 'sizeof_bundle' _class_localson_fn[2210041]))
        on(2210119 call wrapon_fn[2210081] tmp[1594793] _args_vforon_fn[2210069] _args_sizeon_fn[2210075] _args_foron_fn[2210051])
      }
      {
      }
    }
    {
    }
    (1595356 return _void[55])
  }
  function _do_destroy_arr[1722606](const in arg _unowned[1722608]:bool[10], const in arg _instance[1722610]:[domain(1,int(64),false)] locale[1256675], const in arg deinitElts[1722616]:bool[10]) : void[4] "inline" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    const-val call_tmp[1722622]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1722624 'move' call_tmp[1722622](1722627 call ![7494] _unowned[1722608]))
    const-val call_tmp[1722629]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1722631 'move' call_tmp[1722629] call_tmp[1722622])
    if call_tmp[1722629]
    {
      const-val tmp[1722638]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
      const-val call_tmp[1722640]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
      (1722642 'move' call_tmp[1722640](1722644 '_wide_get_locale' _instance[1722610]))
      (1722646 'move' tmp[1722638] call_tmp[1722640])
      val isdirect[2213641]:bool[10] "temp"
      (2213646 'move' isdirect[2213641](2213643 call chpl_doDirectExecuteOn[187469] tmp[1722638]))
      if isdirect[2213641]
      {
        (2213650 call on_fn[1722653] _instance[1722610] deinitElts[1722616])
      }
      {
        val _args_foron_fn[2213668]:_class_localson_fn[2213658] "temp"
        (2213672 'move' _args_foron_fn[2213668](2213670 'stack allocate class' _class_localson_fn[2213658]))
        (2213674 '.=' _args_foron_fn[2213668] _0_tmp[2213661] tmp[1722638])
        (2213678 '.=' _args_foron_fn[2213668] _1__instance[2213663] _instance[1722610])
        (2213682 '.=' _args_foron_fn[2213668] _2_deinitElts[2213665] deinitElts[1722616])
        val _args_vforon_fn[2213686]:c_void_ptr[149] "temp"
        (2213690 'move' _args_vforon_fn[2213686](2213688 'cast_to_void_star' _args_foron_fn[2213668]))
        val _args_sizeon_fn[2213692]:int(64)[13] "temp"
        (2213696 'move' _args_sizeon_fn[2213692](2213694 'sizeof_bundle' _class_localson_fn[2213658]))
        on(2213736 call wrapon_fn[2213698] tmp[1722638] _args_vforon_fn[2213686] _args_sizeon_fn[2213692] _args_foron_fn[2213668])
      }
      {
      }
    }
    {
    }
    (1723201 return _void[55])
  }
  function _do_destroy_arr[1751593](const in arg _unowned[1751595]:bool[10], const in arg _instance[1751597]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401], const in arg deinitElts[1751603]:bool[10]) : void[4] "inline" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    const-val call_tmp[1751609]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1751611 'move' call_tmp[1751609](1751614 call ![7494] _unowned[1751595]))
    const-val call_tmp[1751616]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1751618 'move' call_tmp[1751616] call_tmp[1751609])
    if call_tmp[1751616]
    {
      const-val tmp[1751625]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
      const-val call_tmp[1751627]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
      (1751629 'move' call_tmp[1751627](1751631 '_wide_get_locale' _instance[1751597]))
      (1751633 'move' tmp[1751625] call_tmp[1751627])
      val isdirect[2213986]:bool[10] "temp"
      (2213991 'move' isdirect[2213986](2213988 call chpl_doDirectExecuteOn[187469] tmp[1751625]))
      if isdirect[2213986]
      {
        (2213995 call on_fn[1751640] _instance[1751597] deinitElts[1751603])
      }
      {
        val _args_foron_fn[2214013]:_class_localson_fn[2214003] "temp"
        (2214017 'move' _args_foron_fn[2214013](2214015 'stack allocate class' _class_localson_fn[2214003]))
        (2214019 '.=' _args_foron_fn[2214013] _0_tmp[2214006] tmp[1751625])
        (2214023 '.=' _args_foron_fn[2214013] _1__instance[2214008] _instance[1751597])
        (2214027 '.=' _args_foron_fn[2214013] _2_deinitElts[2214010] deinitElts[1751603])
        val _args_vforon_fn[2214031]:c_void_ptr[149] "temp"
        (2214035 'move' _args_vforon_fn[2214031](2214033 'cast_to_void_star' _args_foron_fn[2214013]))
        val _args_sizeon_fn[2214037]:int(64)[13] "temp"
        (2214041 'move' _args_sizeon_fn[2214037](2214039 'sizeof_bundle' _class_localson_fn[2214003]))
        on(2214081 call wrapon_fn[2214043] tmp[1751625] _args_vforon_fn[2214031] _args_sizeon_fn[2214037] _args_foron_fn[2214013])
      }
      {
      }
    }
    {
    }
    (1752188 return _void[55])
  }
  function _do_destroy_arr[1785024](const in arg _unowned[1785026]:bool[10], const in arg _instance[1785028]:[domain(1,int(64),false)] int(64)[1368867], const in arg deinitElts[1785034]:bool[10]) : void[4] "inline" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    const-val call_tmp[1785040]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1785042 'move' call_tmp[1785040](1785045 call ![7494] _unowned[1785026]))
    const-val call_tmp[1785047]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1785049 'move' call_tmp[1785047] call_tmp[1785040])
    if call_tmp[1785047]
    {
      const-val tmp[1785056]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
      const-val call_tmp[1785058]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
      (1785060 'move' call_tmp[1785058](1785062 '_wide_get_locale' _instance[1785028]))
      (1785064 'move' tmp[1785056] call_tmp[1785058])
      val isdirect[2214331]:bool[10] "temp"
      (2214336 'move' isdirect[2214331](2214333 call chpl_doDirectExecuteOn[187469] tmp[1785056]))
      if isdirect[2214331]
      {
        (2214340 call on_fn[1785071] _instance[1785028] deinitElts[1785034])
      }
      {
        val _args_foron_fn[2214358]:_class_localson_fn[2214348] "temp"
        (2214362 'move' _args_foron_fn[2214358](2214360 'stack allocate class' _class_localson_fn[2214348]))
        (2214364 '.=' _args_foron_fn[2214358] _0_tmp[2214351] tmp[1785056])
        (2214368 '.=' _args_foron_fn[2214358] _1__instance[2214353] _instance[1785028])
        (2214372 '.=' _args_foron_fn[2214358] _2_deinitElts[2214355] deinitElts[1785034])
        val _args_vforon_fn[2214376]:c_void_ptr[149] "temp"
        (2214380 'move' _args_vforon_fn[2214376](2214378 'cast_to_void_star' _args_foron_fn[2214358]))
        val _args_sizeon_fn[2214382]:int(64)[13] "temp"
        (2214386 'move' _args_sizeon_fn[2214382](2214384 'sizeof_bundle' _class_localson_fn[2214348]))
        on(2214426 call wrapon_fn[2214388] tmp[1785056] _args_vforon_fn[2214376] _args_sizeon_fn[2214382] _args_foron_fn[2214358])
      }
      {
      }
    }
    {
    }
    (1785619 return _void[55])
  }
  function _do_destroy_arr[1816131](const in arg _unowned[1816133]:bool[10], const in arg _instance[1816135]:[domain(1,int(64),false)] uint(64)[1450261], const in arg deinitElts[1816141]:bool[10]) : void[4] "inline" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    const-val call_tmp[1816147]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1816149 'move' call_tmp[1816147](1816152 call ![7494] _unowned[1816133]))
    const-val call_tmp[1816154]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1816156 'move' call_tmp[1816154] call_tmp[1816147])
    if call_tmp[1816154]
    {
      const-val tmp[1816163]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
      const-val call_tmp[1816165]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
      (1816167 'move' call_tmp[1816165](1816169 '_wide_get_locale' _instance[1816135]))
      (1816171 'move' tmp[1816163] call_tmp[1816165])
      val isdirect[2214676]:bool[10] "temp"
      (2214681 'move' isdirect[2214676](2214678 call chpl_doDirectExecuteOn[187469] tmp[1816163]))
      if isdirect[2214676]
      {
        (2214685 call on_fn[1816178] _instance[1816135] deinitElts[1816141])
      }
      {
        val _args_foron_fn[2214703]:_class_localson_fn[2214693] "temp"
        (2214707 'move' _args_foron_fn[2214703](2214705 'stack allocate class' _class_localson_fn[2214693]))
        (2214709 '.=' _args_foron_fn[2214703] _0_tmp[2214696] tmp[1816163])
        (2214713 '.=' _args_foron_fn[2214703] _1__instance[2214698] _instance[1816135])
        (2214717 '.=' _args_foron_fn[2214703] _2_deinitElts[2214700] deinitElts[1816141])
        val _args_vforon_fn[2214721]:c_void_ptr[149] "temp"
        (2214725 'move' _args_vforon_fn[2214721](2214723 'cast_to_void_star' _args_foron_fn[2214703]))
        val _args_sizeon_fn[2214727]:int(64)[13] "temp"
        (2214731 'move' _args_sizeon_fn[2214727](2214729 'sizeof_bundle' _class_localson_fn[2214693]))
        on(2214771 call wrapon_fn[2214733] tmp[1816163] _args_vforon_fn[2214721] _args_sizeon_fn[2214727] _args_foron_fn[2214703])
      }
      {
      }
    }
    {
    }
    (1816726 return _void[55])
  }
  function _do_destroy_array[1727001](const  ref arg array[1727003]:[domain(1,int(64),false)] locale[1287200], const in arg deinitElts[1727009]:bool[10]) : void[4] "inline" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    ref call_tmp[1727015]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (1727017 'move' call_tmp[1727015](1727020 call _unowned[1722575] array[1727003]))
    ref call_tmp[1727023]:_ref(DefaultRectangularArr(1,int(64),false,locale,int(64)))[1256691] "dead after last mention" "maybe param" "temp"
    (1727025 'move' call_tmp[1727023](1727028 call _instance[1287351] array[1727003]))
    const-val coerce_tmp[1727070]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1727074 'move' coerce_tmp[1727070](1727072 'deref' call_tmp[1727015]))
    val coerce_tmp[1727076]:[domain(1,int(64),false)] locale[1256675] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1727080 'move' coerce_tmp[1727076](1727078 'deref' call_tmp[1727023]))
    (1727032 call _do_destroy_arr[1722606] coerce_tmp[1727070] coerce_tmp[1727076] deinitElts[1727009])
    (1727036 return _void[55])
  }
  function _do_destroy_array[1755207](const  ref arg array[1755209]:[domain(1,int(64),false)] unmanaged localesSignal?[1325295], const in arg deinitElts[1755215]:bool[10]) : void[4] "inline" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    ref call_tmp[1755221]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (1755223 'move' call_tmp[1755221](1755226 call _unowned[1751562] array[1755209]))
    ref call_tmp[1755229]:_ref(DefaultRectangularArr(1,int(64),false,unmanaged localesSignal?,int(64)))[1318417] "dead after last mention" "maybe param" "temp"
    (1755231 'move' call_tmp[1755229](1755234 call _instance[1325446] array[1755209]))
    const-val coerce_tmp[1755276]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1755280 'move' coerce_tmp[1755276](1755278 'deref' call_tmp[1755221]))
    val coerce_tmp[1755282]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1755286 'move' coerce_tmp[1755282](1755284 'deref' call_tmp[1755229]))
    (1755238 call _do_destroy_arr[1751593] coerce_tmp[1755276] coerce_tmp[1755282] deinitElts[1755215])
    (1755242 return _void[55])
  }
  function _do_destroy_array[1756268](const  ref arg array[1756270]:[domain(1,int(64),false)] real(64)[1366029], const in arg deinitElts[1756276]:bool[10]) : void[4] "inline" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    ref call_tmp[1756282]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (1756284 'move' call_tmp[1756282](1756287 call _unowned[1542955] array[1756270]))
    ref call_tmp[1756290]:_ref(DefaultRectangularArr(1,int(64),false,real(64),int(64)))[1358960] "dead after last mention" "maybe param" "temp"
    (1756292 'move' call_tmp[1756290](1756295 call _instance[1366180] array[1756270]))
    const-val coerce_tmp[1756337]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1756341 'move' coerce_tmp[1756337](1756339 'deref' call_tmp[1756282]))
    val coerce_tmp[1756343]:[domain(1,int(64),false)] real(64)[1358944] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1756347 'move' coerce_tmp[1756343](1756345 'deref' call_tmp[1756290]))
    (1756299 call _do_destroy_arr[1542986] coerce_tmp[1756337] coerce_tmp[1756343] deinitElts[1756276])
    (1756303 return _void[55])
  }
  function _do_destroy_array[1788617](const  ref arg array[1788619]:[domain(1,int(64),false)] int(64)[1374504], const in arg deinitElts[1788625]:bool[10]) : void[4] "inline" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    ref call_tmp[1788631]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (1788633 'move' call_tmp[1788631](1788636 call _unowned[1784993] array[1788619]))
    ref call_tmp[1788639]:_ref(DefaultRectangularArr(1,int(64),false,int(64),int(64)))[1368883] "dead after last mention" "maybe param" "temp"
    (1788641 'move' call_tmp[1788639](1788644 call _instance[1374655] array[1788619]))
    const-val coerce_tmp[1788686]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1788690 'move' coerce_tmp[1788686](1788688 'deref' call_tmp[1788631]))
    val coerce_tmp[1788692]:[domain(1,int(64),false)] int(64)[1368867] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1788696 'move' coerce_tmp[1788692](1788694 'deref' call_tmp[1788639]))
    (1788648 call _do_destroy_arr[1785024] coerce_tmp[1788686] coerce_tmp[1788692] deinitElts[1788625])
    (1788652 return _void[55])
  }
  function _do_destroy_array[1789620](const  ref arg array[1789622]:[domain(1,int(64),false)] range(int(64),bounded,false)[1415950], const in arg deinitElts[1789628]:bool[10]) : void[4] "inline" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    ref call_tmp[1789634]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (1789636 'move' call_tmp[1789634](1789639 call _unowned[1493260] array[1789622]))
    ref call_tmp[1789642]:_ref(DefaultRectangularArr(1,int(64),false,range(int(64),bounded,false),int(64)))[1409240] "dead after last mention" "maybe param" "temp"
    (1789644 'move' call_tmp[1789642](1789647 call _instance[1416101] array[1789622]))
    const-val coerce_tmp[1789689]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1789693 'move' coerce_tmp[1789689](1789691 'deref' call_tmp[1789634]))
    val coerce_tmp[1789695]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1789699 'move' coerce_tmp[1789695](1789697 'deref' call_tmp[1789642]))
    (1789651 call _do_destroy_arr[1493291] coerce_tmp[1789689] coerce_tmp[1789695] deinitElts[1789628])
    (1789655 return _void[55])
  }
  function _do_destroy_array[1819724](const  ref arg array[1819726]:[domain(1,int(64),false)] uint(64)[1456147], const in arg deinitElts[1819732]:bool[10]) : void[4] "inline" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    ref call_tmp[1819738]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (1819740 'move' call_tmp[1819738](1819743 call _unowned[1816100] array[1819726]))
    ref call_tmp[1819746]:_ref(DefaultRectangularArr(1,int(64),false,uint(64),int(64)))[1450277] "dead after last mention" "maybe param" "temp"
    (1819748 'move' call_tmp[1819746](1819751 call _instance[1456298] array[1819726]))
    const-val coerce_tmp[1819793]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1819797 'move' coerce_tmp[1819793](1819795 'deref' call_tmp[1819738]))
    val coerce_tmp[1819799]:[domain(1,int(64),false)] uint(64)[1450261] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1819803 'move' coerce_tmp[1819799](1819801 'deref' call_tmp[1819746]))
    (1819755 call _do_destroy_arr[1816131] coerce_tmp[1819793] coerce_tmp[1819799] deinitElts[1819732])
    (1819759 return _void[55])
  }
  function =[1287907](ref arg a[1287909]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812], const  ref arg b[1287911]:domain(1,int(64),false)[1252786]) : void[4] "assignop" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val call_tmp[1287967]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1287975]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
    }
    ref call_tmp[1288164]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
    (1288166 'move' call_tmp[1288164](1288169 call _instance[1253123] a[1287909]))
    val coerce_tmp[1288627]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1288631 'move' coerce_tmp[1288627](1288629 'deref' call_tmp[1288164]))
    val coerce_tmp[1288633]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1288638 'move' coerce_tmp[1288633] coerce_tmp[1288627])
    (1288176 call dsiAssignDomain[1288605] coerce_tmp[1288633] b[1287911] 0)
    ref call_tmp[1288181]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
    (1288183 'move' call_tmp[1288181](1288186 call _instance[1253123] a[1287909]))
    (1288217 return _void[55])
  }
  function checkArrayShapesUponAssignment[1421805](const  ref arg a[1421807]:[domain(1,int(64),false)] range(int(64),bounded,false)[1415950], const  ref arg b[1421809]:[domain(1,int(64),false)] range(int(64),bounded,false)[1415950]) : void[4] "instantiated generic" "invisible fn" "no doc" "resolved" "no return value for void"
  {
    {
      val call_tmp[1421890]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead at end of block" "expr temp" "maybe param" "temp"
      (1421892 'move' call_tmp[1421890](1421895 call _value[1416005] a[1421807]))
      ref call_tmp[1421898]:_ref(domain(1,int(64),false))[1251138] "dead at end of block" "maybe param" "temp"
      val coerce_tmp[1422198]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1422203 'move' coerce_tmp[1422198] call_tmp[1421890])
      (1421900 'move' call_tmp[1421898](1421903 call dom[1410591] coerce_tmp[1422198]))
      const-val call_tmp[1421906]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "maybe param" "temp"
      val coerce_tmp[1422206]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1422210 'move' coerce_tmp[1422206](1422208 'deref' call_tmp[1421898]))
      val coerce_tmp[1422212]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1422217 'move' coerce_tmp[1422212] coerce_tmp[1422206])
      const-val ret_tmp[1914203]:1*range(int(64),bounded,false)[1244885] "temp"
      (1421914 call dsiDims[1353398] coerce_tmp[1422212] ret_tmp[1914203])
      (1914206 'move' call_tmp[1421906] ret_tmp[1914203])
      const-val aDims[1421915]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "const" "insert auto destroy"
      (1421917 'move' aDims[1421915] call_tmp[1421906])
      val call_tmp[1421920]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead at end of block" "expr temp" "maybe param" "temp"
      (1421922 'move' call_tmp[1421920](1421925 call _value[1416005] b[1421809]))
      ref call_tmp[1421928]:_ref(domain(1,int(64),false))[1251138] "dead at end of block" "maybe param" "temp"
      val coerce_tmp[1422224]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1422229 'move' coerce_tmp[1422224] call_tmp[1421920])
      (1421930 'move' call_tmp[1421928](1421933 call dom[1410591] coerce_tmp[1422224]))
      const-val call_tmp[1421936]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "maybe param" "temp"
      val coerce_tmp[1422232]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1422236 'move' coerce_tmp[1422232](1422234 'deref' call_tmp[1421928]))
      val coerce_tmp[1422238]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1422243 'move' coerce_tmp[1422238] coerce_tmp[1422232])
      const-val ret_tmp[1914209]:1*range(int(64),bounded,false)[1244885] "temp"
      (1421944 call dsiDims[1353398] coerce_tmp[1422238] ret_tmp[1914209])
      (1914212 'move' call_tmp[1421936] ret_tmp[1914209])
      const-val bDims[1421945]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "const" "insert auto destroy"
      (1421947 'move' bDims[1421945] call_tmp[1421936])
      (1421976 call compilerAssert[974079])
      {
        const-val i[1421982]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1421984 'move' i[1421982] 0)
        {
          {
            ref call_tmp[1422278]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "reference to a const" "temp"
            (1422280 'move' call_tmp[1422278](1422372 '.' aDims[1421915] x0[1244883]))
            const-val call_tmp[1422285]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val coerce_tmp[1422375]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (1422379 'move' coerce_tmp[1422375](1422377 'deref' call_tmp[1422278]))
            (1422287 'move' call_tmp[1422285](1422290 call size[1035978] coerce_tmp[1422375]))
            ref call_tmp[1422293]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "reference to a const" "temp"
            (1422295 'move' call_tmp[1422293](1422384 '.' bDims[1421945] x0[1244883]))
            const-val call_tmp[1422300]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val coerce_tmp[1422387]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (1422391 'move' coerce_tmp[1422387](1422389 'deref' call_tmp[1422293]))
            (1422302 'move' call_tmp[1422300](1422305 call size[1035978] coerce_tmp[1422387]))
            const-val call_tmp[1422308]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1422310 'move' call_tmp[1422308](1422313 call !=[436128] call_tmp[1422285] call_tmp[1422300]))
            const-val call_tmp[1422316]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1422318 'move' call_tmp[1422316] call_tmp[1422308])
            if call_tmp[1422316]
            {
              ref call_tmp[1422325]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "reference to a const" "temp"
              (1422327 'move' call_tmp[1422325](1422397 '.' aDims[1421915] x0[1244883]))
              const-val call_tmp[1422332]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1422400]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1422404 'move' coerce_tmp[1422400](1422402 'deref' call_tmp[1422325]))
              (1422334 'move' call_tmp[1422332](1422337 call size[1035978] coerce_tmp[1422400]))
              ref call_tmp[1422340]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "reference to a const" "temp"
              (1422342 'move' call_tmp[1422340](1422409 '.' bDims[1421945] x0[1244883]))
              const-val call_tmp[1422347]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1422412]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1422416 'move' coerce_tmp[1422412](1422414 'deref' call_tmp[1422340]))
              (1422349 'move' call_tmp[1422347](1422352 call size[1035978] coerce_tmp[1422412]))
              (1422356 call halt[1422497] "assigning between arrays of different shapes in dimension " 0 ": " call_tmp[1422332] " vs. " call_tmp[1422347])
              (1926002 call chpl__autoDestroy[1407763] coerce_tmp[1422412])
              (1926005 call chpl__autoDestroy[1407763] coerce_tmp[1422400])
            }
            (1926009 call chpl__autoDestroy[1407763] coerce_tmp[1422387])
            (1926012 call chpl__autoDestroy[1407763] coerce_tmp[1422375])
          }
        }
        label _continueLabel0[1422274]
        label _unused_continueLabel[1422140]
        label _breakLabel[1422142]
      }
      (1926016 call chpl__autoDestroy[1695146] bDims[1421945])
      (1926019 call chpl__autoDestroy[1695146] aDims[1421915])
    }
    (1422146 return _void[55])
  }
  function checkArrayShapesUponAssignment[1522161](const  ref arg a[1522163]:[domain(1,int(64),false)] real(64)[1366029], const  ref arg b[1522165]:[domain(1,int(64),false)] real(64)[1366029]) : void[4] "instantiated generic" "invisible fn" "no doc" "resolved" "no return value for void"
  {
    {
      val call_tmp[1522246]:[domain(1,int(64),false)] real(64)[1358944] "dead at end of block" "expr temp" "maybe param" "temp"
      (1522248 'move' call_tmp[1522246](1522251 call _value[1366084] a[1522163]))
      ref call_tmp[1522254]:_ref(domain(1,int(64),false))[1251138] "dead at end of block" "maybe param" "temp"
      val coerce_tmp[1522517]:[domain(1,int(64),false)] real(64)[1358944] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1522522 'move' coerce_tmp[1522517] call_tmp[1522246])
      (1522256 'move' call_tmp[1522254](1522259 call dom[1360329] coerce_tmp[1522517]))
      const-val call_tmp[1522262]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "maybe param" "temp"
      val coerce_tmp[1522525]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1522529 'move' coerce_tmp[1522525](1522527 'deref' call_tmp[1522254]))
      val coerce_tmp[1522531]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1522536 'move' coerce_tmp[1522531] coerce_tmp[1522525])
      const-val ret_tmp[1914215]:1*range(int(64),bounded,false)[1244885] "temp"
      (1522270 call dsiDims[1353398] coerce_tmp[1522531] ret_tmp[1914215])
      (1914218 'move' call_tmp[1522262] ret_tmp[1914215])
      const-val aDims[1522271]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "const" "insert auto destroy"
      (1522273 'move' aDims[1522271] call_tmp[1522262])
      val call_tmp[1522276]:[domain(1,int(64),false)] real(64)[1358944] "dead at end of block" "expr temp" "maybe param" "temp"
      (1522278 'move' call_tmp[1522276](1522281 call _value[1366084] b[1522165]))
      ref call_tmp[1522284]:_ref(domain(1,int(64),false))[1251138] "dead at end of block" "maybe param" "temp"
      val coerce_tmp[1522543]:[domain(1,int(64),false)] real(64)[1358944] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1522548 'move' coerce_tmp[1522543] call_tmp[1522276])
      (1522286 'move' call_tmp[1522284](1522289 call dom[1360329] coerce_tmp[1522543]))
      const-val call_tmp[1522292]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "maybe param" "temp"
      val coerce_tmp[1522551]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1522555 'move' coerce_tmp[1522551](1522553 'deref' call_tmp[1522284]))
      val coerce_tmp[1522557]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1522562 'move' coerce_tmp[1522557] coerce_tmp[1522551])
      const-val ret_tmp[1914221]:1*range(int(64),bounded,false)[1244885] "temp"
      (1522300 call dsiDims[1353398] coerce_tmp[1522557] ret_tmp[1914221])
      (1914224 'move' call_tmp[1522292] ret_tmp[1914221])
      const-val bDims[1522301]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "const" "insert auto destroy"
      (1522303 'move' bDims[1522301] call_tmp[1522292])
      (1522332 call compilerAssert[974079])
      {
        const-val i[1522338]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1522340 'move' i[1522338] 0)
        {
          {
            ref call_tmp[1522597]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "reference to a const" "temp"
            (1522599 'move' call_tmp[1522597](1522691 '.' aDims[1522271] x0[1244883]))
            const-val call_tmp[1522604]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val coerce_tmp[1522694]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (1522698 'move' coerce_tmp[1522694](1522696 'deref' call_tmp[1522597]))
            (1522606 'move' call_tmp[1522604](1522609 call size[1035978] coerce_tmp[1522694]))
            ref call_tmp[1522612]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "reference to a const" "temp"
            (1522614 'move' call_tmp[1522612](1522703 '.' bDims[1522301] x0[1244883]))
            const-val call_tmp[1522619]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val coerce_tmp[1522706]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (1522710 'move' coerce_tmp[1522706](1522708 'deref' call_tmp[1522612]))
            (1522621 'move' call_tmp[1522619](1522624 call size[1035978] coerce_tmp[1522706]))
            const-val call_tmp[1522627]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1522629 'move' call_tmp[1522627](1522632 call !=[436128] call_tmp[1522604] call_tmp[1522619]))
            const-val call_tmp[1522635]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1522637 'move' call_tmp[1522635] call_tmp[1522627])
            if call_tmp[1522635]
            {
              ref call_tmp[1522644]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "reference to a const" "temp"
              (1522646 'move' call_tmp[1522644](1522716 '.' aDims[1522271] x0[1244883]))
              const-val call_tmp[1522651]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1522719]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1522723 'move' coerce_tmp[1522719](1522721 'deref' call_tmp[1522644]))
              (1522653 'move' call_tmp[1522651](1522656 call size[1035978] coerce_tmp[1522719]))
              ref call_tmp[1522659]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "reference to a const" "temp"
              (1522661 'move' call_tmp[1522659](1522728 '.' bDims[1522301] x0[1244883]))
              const-val call_tmp[1522666]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1522731]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1522735 'move' coerce_tmp[1522731](1522733 'deref' call_tmp[1522659]))
              (1522668 'move' call_tmp[1522666](1522671 call size[1035978] coerce_tmp[1522731]))
              (1522675 call halt[1422497] "assigning between arrays of different shapes in dimension " 0 ": " call_tmp[1522651] " vs. " call_tmp[1522666])
              (1926828 call chpl__autoDestroy[1407763] coerce_tmp[1522731])
              (1926831 call chpl__autoDestroy[1407763] coerce_tmp[1522719])
            }
            (1926835 call chpl__autoDestroy[1407763] coerce_tmp[1522706])
            (1926838 call chpl__autoDestroy[1407763] coerce_tmp[1522694])
          }
        }
        label _continueLabel0[1522593]
        label _unused_continueLabel[1522496]
        label _breakLabel[1522498]
      }
      (1926842 call chpl__autoDestroy[1695146] bDims[1522301])
      (1926845 call chpl__autoDestroy[1695146] aDims[1522271])
    }
    (1522502 return _void[55])
  }
  function =[1548657](ref arg a[1548659]:_ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055], const  ref arg b[1548661]:[domain(1,int(64),false)] real(64)[1366029]) : void[4] "assignop" "inline" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val call_tmp[1548742]:[domain(1,int(64),false)] real(64)[1358944] "dead after last mention" "expr temp" "maybe param" "temp"
    (1548744 'move' call_tmp[1548742](1548747 call _value[1366084] b[1548661]))
    const-val call_tmp[1548750]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1548934]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1548939 'move' coerce_tmp[1548934](1548936 'cast' object[22] call_tmp[1548742]))
    (1548752 'move' call_tmp[1548750](1548755 call ==[1146] coerce_tmp[1548934] nil[44]))
    const-val call_tmp[1548758]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1548760 'move' call_tmp[1548758] call_tmp[1548750])
    if call_tmp[1548758]
    {
      gotoReturn _end_=[1548920] _end_=[1548920]
    }
    val call_tmp[1548770]:[domain(1,int(64),false)] real(64)[1358944] "dead after last mention" "expr temp" "maybe param" "temp"
    (1548772 'move' call_tmp[1548770](1548775 call _value[1366084] a[1548659]))
    val call_tmp[1548778]:[domain(1,int(64),false)] real(64)[1358944] "dead after last mention" "expr temp" "maybe param" "temp"
    (1548780 'move' call_tmp[1548778](1548783 call _value[1366084] b[1548661]))
    const-val call_tmp[1548786]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1548944]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1548949 'move' coerce_tmp[1548944](1548946 'cast' object[22] call_tmp[1548770]))
    val coerce_tmp[1548951]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1548956 'move' coerce_tmp[1548951](1548953 'cast' object[22] call_tmp[1548778]))
    (1548788 'move' call_tmp[1548786](1548791 call ==[1146] coerce_tmp[1548944] coerce_tmp[1548951]))
    const-val call_tmp[1548794]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1548796 'move' call_tmp[1548794] call_tmp[1548786])
    if call_tmp[1548794]
    {
      gotoReturn _end_=[1548920] _end_=[1548920]
    }
    const-val tmp[1548806]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1548808]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1548810 'move' call_tmp[1548808](1548813 call size[1522083] a[1548659]))
    (1548816 'move' tmp[1548806](1548819 call ==[435744] call_tmp[1548808] 0))
    val tmp[1548835]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1548837]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1548839]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1548841 'move' call_tmp[1548839] tmp[1548806])
    (1548846 'move' tmp[1548837] call_tmp[1548839])
    if tmp[1548837]
    {
      const-val tmp[1548853]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[1548855]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1548857 'move' call_tmp[1548855](1548860 call size[1522083] b[1548661]))
      const-val call_tmp[1548863]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1548865 'move' call_tmp[1548863](1548868 call ==[435744] call_tmp[1548855] 0))
      (1548871 'move' tmp[1548853] call_tmp[1548863])
      (1548876 'move' tmp[1548835] tmp[1548853])
    }
    {
      (1548882 'move' tmp[1548835] 0)
    }
    const-val call_tmp[1548888]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1548890 'move' call_tmp[1548888] tmp[1548835])
    if call_tmp[1548888]
    {
      gotoReturn _end_=[1548920] _end_=[1548920]
    }
    {
      (1548910 call checkArrayShapesUponAssignment[1522161] a[1548659] b[1548661])
    }
    (1548915 call chpl__uncheckedArrayTransfer[1548969] a[1548659] b[1548661])
    label _end_=[1548920]
    (1548922 return _void[55])
  }
  type _tElt[137999] def move[137993]:_tElt[137999] def initCopy[137995]:_tElt[137999] def assign[137997]:_tElt[137999]
  function chpl__uncheckedArrayTransfer[1507268](ref arg a[1507270]:_ref(_array(unmanaged [domain(1,int(64),false)] range(int(64),bounded,false)))[1415976], const  ref arg b[1507272]:[domain(1,int(64),false)] range(int(64),bounded,false)[1415950]) : void[4] "inline" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val done[1507284]:bool[10] "dead at end of block" "insert auto destroy"
    (1507286 'move' done[1507284] 0)
    {
      {
        const-val call_tmp[1507332]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1507334 'move' call_tmp[1507332](1507337 call chpl__bulkTransferArray[1432843] a[1507270] b[1507272]))
        (1507341 call =[435290] done[1507284] call_tmp[1507332])
      }
      const-val call_tmp[1507381]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1507383 'move' call_tmp[1507381] done[1507284])
      if call_tmp[1507381]
      {
        val call_tmp[1507431]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        {
        }
      }
    }
    const-val call_tmp[1507637]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1507639 'move' call_tmp[1507637](1507642 call ![7494] done[1507284]))
    const-val call_tmp[1507644]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1507646 'move' call_tmp[1507644] call_tmp[1507637])
    if call_tmp[1507644]
    {
      (1507654 call chpl__transferArray[1508111] a[1507270] b[1507272])
    }
    (1507659 return _void[55])
  }
  function chpl__uncheckedArrayTransfer[1544226](ref arg a[1544228]:_ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055], const  ref arg b[1544230]:[domain(1,int(64),false)] real(64)[1366029]) : void[4] "inline" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val done[1544242]:bool[10] "dead at end of block" "insert auto destroy"
    (1544244 'move' done[1544242] 0)
    {
      {
        const-val call_tmp[1544290]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1544292 'move' call_tmp[1544290](1544295 call chpl__bulkTransferArray[1524925] a[1544228] b[1544230]))
        (1544299 call =[435290] done[1544242] call_tmp[1544290])
      }
      const-val call_tmp[1544339]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1544341 'move' call_tmp[1544339] done[1544242])
      if call_tmp[1544339]
      {
        val call_tmp[1544389]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        {
        }
      }
    }
    const-val call_tmp[1544595]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1544597 'move' call_tmp[1544595](1544600 call ![7494] done[1544242]))
    const-val call_tmp[1544602]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1544604 'move' call_tmp[1544602] call_tmp[1544595])
    if call_tmp[1544602]
    {
      (1544612 call chpl__transferArray[1544971] a[1544228] b[1544230])
    }
    (1544617 return _void[55])
  }
  function chpl__uncheckedArrayTransfer[1548969](ref arg a[1548971]:_ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055], const  ref arg b[1548973]:[domain(1,int(64),false)] real(64)[1366029]) : void[4] "inline" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val done[1548985]:bool[10] "dead at end of block" "insert auto destroy"
    (1548987 'move' done[1548985] 0)
    {
      {
        const-val call_tmp[1549033]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1549035 'move' call_tmp[1549033](1549038 call chpl__bulkTransferArray[1524925] a[1548971] b[1548973]))
        (1549042 call =[435290] done[1548985] call_tmp[1549033])
      }
      const-val call_tmp[1549082]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1549084 'move' call_tmp[1549082] done[1548985])
      if call_tmp[1549082]
      {
        {
        }
      }
    }
    const-val call_tmp[1549338]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1549340 'move' call_tmp[1549338](1549343 call ![7494] done[1548985]))
    const-val call_tmp[1549345]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1549347 'move' call_tmp[1549345] call_tmp[1549338])
    if call_tmp[1549345]
    {
      (1549355 call chpl__transferArray[1549776] a[1548971] b[1548973])
    }
    (1549360 return _void[55])
  }
  function chpl__bulkTransferArray[1432843](const  ref arg a[1432845]:_ref(_array(unmanaged [domain(1,int(64),false)] range(int(64),bounded,false)))[1415976], const  ref arg b[1432847]:[domain(1,int(64),false)] range(int(64),bounded,false)[1415950]) : bool[10] "inline" "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1432849]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1432859]:domain(1,int(64),false)[1252786] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1914939]:domain(1,int(64),false)[1252786] "temp"
    (1432864 call _dom[1416274] a[1432845] ret_tmp[1914939])
    (1914942 'move' call_tmp[1432859] ret_tmp[1914939])
    const-val call_tmp[1432867]:domain(1,int(64),false)[1252786] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1914945]:domain(1,int(64),false)[1252786] "temp"
    (1432872 call _dom[1416274] b[1432847] ret_tmp[1914945])
    (1914948 'move' call_tmp[1432867] ret_tmp[1914945])
    const-val call_tmp[1432875]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1432877 'move' call_tmp[1432875](1432880 call chpl__bulkTransferArray[1432894] a[1432845] call_tmp[1432859] b[1432847] call_tmp[1432867]))
    (1432885 'move' ret[1432849] call_tmp[1432875])
    (1926046 call chpl__autoDestroy[1697012] call_tmp[1432867])
    (1926049 call chpl__autoDestroy[1697012] call_tmp[1432859])
    (1432889 return ret[1432849])
  }
  function chpl__bulkTransferArray[1524925](const  ref arg a[1524927]:_ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055], const  ref arg b[1524929]:[domain(1,int(64),false)] real(64)[1366029]) : bool[10] "inline" "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1524931]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1524941]:domain(1,int(64),false)[1252786] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1914731]:domain(1,int(64),false)[1252786] "temp"
    (1524946 call _dom[1397434] a[1524927] ret_tmp[1914731])
    (1914734 'move' call_tmp[1524941] ret_tmp[1914731])
    const-val call_tmp[1524949]:domain(1,int(64),false)[1252786] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1914737]:domain(1,int(64),false)[1252786] "temp"
    (1524954 call _dom[1397434] b[1524929] ret_tmp[1914737])
    (1914740 'move' call_tmp[1524949] ret_tmp[1914737])
    const-val call_tmp[1524957]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1524959 'move' call_tmp[1524957](1524962 call chpl__bulkTransferArray[1524976] a[1524927] call_tmp[1524941] b[1524929] call_tmp[1524949]))
    (1524967 'move' ret[1524931] call_tmp[1524957])
    (1926848 call chpl__autoDestroy[1697012] call_tmp[1524949])
    (1926851 call chpl__autoDestroy[1697012] call_tmp[1524941])
    (1524971 return ret[1524931])
  }
  function chpl__bulkTransferArray[1432894](const  ref arg a[1432896]:_ref(_array(unmanaged [domain(1,int(64),false)] range(int(64),bounded,false)))[1415976], const  ref arg AD[1432898]:domain(1,int(64),false)[1252786], const  ref arg b[1432900]:_ref(_array(unmanaged [domain(1,int(64),false)] range(int(64),bounded,false)))[1415976], const  ref arg BD[1432902]:domain(1,int(64),false)[1252786]) : bool[10] "inline" "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1432904]:bool[10] "dead after last mention" "RVV" "temp"
    val call_tmp[1432939]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead after last mention" "expr temp" "maybe param" "temp"
    (1432941 'move' call_tmp[1432939](1432944 call _value[1416005] a[1432896]))
    val call_tmp[1432947]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead after last mention" "expr temp" "maybe param" "temp"
    (1432949 'move' call_tmp[1432947](1432952 call _value[1416005] b[1432900]))
    const-val call_tmp[1432955]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1432957 'move' call_tmp[1432955](1432960 call chpl__bulkTransferArray[1432974] call_tmp[1432939] AD[1432898] call_tmp[1432947] BD[1432902]))
    (1432965 'move' ret[1432904] call_tmp[1432955])
    (1432969 return ret[1432904])
  }
  function chpl__bulkTransferArray[1524976](const  ref arg a[1524978]:_ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055], const  ref arg AD[1524980]:domain(1,int(64),false)[1252786], const  ref arg b[1524982]:_ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055], const  ref arg BD[1524984]:domain(1,int(64),false)[1252786]) : bool[10] "inline" "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1524986]:bool[10] "dead after last mention" "RVV" "temp"
    val call_tmp[1525021]:[domain(1,int(64),false)] real(64)[1358944] "dead after last mention" "expr temp" "maybe param" "temp"
    (1525023 'move' call_tmp[1525021](1525026 call _value[1366084] a[1524978]))
    val call_tmp[1525029]:[domain(1,int(64),false)] real(64)[1358944] "dead after last mention" "expr temp" "maybe param" "temp"
    (1525031 'move' call_tmp[1525029](1525034 call _value[1366084] b[1524982]))
    const-val call_tmp[1525037]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1525039 'move' call_tmp[1525037](1525042 call chpl__bulkTransferArray[1525056] call_tmp[1525021] AD[1524980] call_tmp[1525029] BD[1524984]))
    (1525047 'move' ret[1524986] call_tmp[1525037])
    (1525051 return ret[1524986])
  }
  function chpl__bulkTransferArray[1432974](const in arg destClass[1432976]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224], const  ref arg destDom[1432978]:domain(1,int(64),false)[1252786], const in arg srcClass[1432980]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224], const  ref arg srcDom[1432982]:domain(1,int(64),false)[1252786]) : bool[10] "inline" "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1432984]:bool[10] "dead after last mention" "RVV" "temp"
    val success[1433000]:bool[10] "dead at end of block" "insert auto destroy"
    (1433002 'move' success[1433000] 0)
    (1433029 call bulkTransferDebug[1433006] "in chpl__bulkTransferArray")
    {
      (1433055 call bulkTransferDebug[1433006] "attempting doiBulkTransferFromKnown")
      const-val call_tmp[1433058]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1475375]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1475380 'move' coerce_tmp[1475375] destClass[1432976])
      (1433060 'move' call_tmp[1433058](1433066 call doiBulkTransferFromKnown[1433357] coerce_tmp[1475375] destDom[1432978] srcClass[1432980] srcDom[1432982]))
      (1433071 call =[435290] success[1433000] call_tmp[1433058])
    }
    const-val call_tmp[1433221]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1433223 'move' call_tmp[1433221] success[1433000])
    if call_tmp[1433221]
    {
      (1433231 call bulkTransferDebug[1433006] "successfully completed bulk transfer")
    }
    {
      (1433235 call bulkTransferDebug[1433006] "bulk transfer did not happen")
    }
    (1433238 'move' ret[1432984] success[1433000])
    gotoReturn _end_chpl__bulkTransferArray[1433246] _end_chpl__bulkTransferArray[1433246]
    label _end_chpl__bulkTransferArray[1433246]
    (1433248 return ret[1432984])
  }
  function chpl__bulkTransferArray[1525056](const in arg destClass[1525058]:[domain(1,int(64),false)] real(64)[1358944], const  ref arg destDom[1525060]:domain(1,int(64),false)[1252786], const in arg srcClass[1525062]:[domain(1,int(64),false)] real(64)[1358944], const  ref arg srcDom[1525064]:domain(1,int(64),false)[1252786]) : bool[10] "inline" "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1525066]:bool[10] "dead after last mention" "RVV" "temp"
    val success[1525082]:bool[10] "dead at end of block" "insert auto destroy"
    (1525084 'move' success[1525082] 0)
    (1525111 call bulkTransferDebug[1525088] "in chpl__bulkTransferArray")
    {
      (1525137 call bulkTransferDebug[1525088] "attempting doiBulkTransferFromKnown")
      const-val call_tmp[1525140]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1532841]:[domain(1,int(64),false)] real(64)[1358944] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1532846 'move' coerce_tmp[1532841] destClass[1525058])
      (1525142 'move' call_tmp[1525140](1525148 call doiBulkTransferFromKnown[1525391] coerce_tmp[1532841] destDom[1525060] srcClass[1525062] srcDom[1525064]))
      (1525153 call =[435290] success[1525082] call_tmp[1525140])
    }
    const-val call_tmp[1525303]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1525305 'move' call_tmp[1525303] success[1525082])
    if call_tmp[1525303]
    {
      (1525313 call bulkTransferDebug[1525088] "successfully completed bulk transfer")
    }
    {
      (1525317 call bulkTransferDebug[1525088] "bulk transfer did not happen")
    }
    (1525320 'move' ret[1525066] success[1525082])
    gotoReturn _end_chpl__bulkTransferArray[1525328] _end_chpl__bulkTransferArray[1525328]
    label _end_chpl__bulkTransferArray[1525328]
    (1525330 return ret[1525066])
  }
  function chpl__transferArray[1508111](ref arg a[1508113]:_ref(_array(unmanaged [domain(1,int(64),false)] range(int(64),bounded,false)))[1415976], const  ref arg b[1508115]:_ref(_array(unmanaged [domain(1,int(64),false)] range(int(64),bounded,false)))[1415976]) : void[4] "inline" "instantiated generic" "invisible fn" "resolved" "ignore transfer errors" "find user line" "no return value for void"
  {
    val call_tmp[1508138]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1508146]:_RuntimeTypeInfo[1417328] "dead after last mention" "expr temp" "maybe param" "temp"
    (1508148 'move' call_tmp[1508146](1509707 call chpl__convertValueToRuntimeType[1416231] b[1508115]))
    val call_tmp[1508197]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      {
        {
          {
            val call_tmp[1509470]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            {
              const-val chpl__iterLF[1509796]:2*[domain(1,int(64),false)] range(int(64),bounded,false)[1480149] "dead at end of block" "chpl__iter" "chpl__iter_newstyle" "expr temp" "insert auto destroy" "no copy" "temp"
              const-val ret_tmp[1915583]:2*[domain(1,int(64),false)] range(int(64),bounded,false)[1480149] "temp"
              (1509793 call _build_tuple[1480107] a[1508113] b[1508115] ret_tmp[1915583])
              (1915586 'move' chpl__iterLF[1509796] ret_tmp[1915583])
              {
                {
                  val ret[1939702]:nothing[7] "dead after last mention" "RVV" "temp"
                  {
                    val call_tmp[1939705]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1939707 'move' call_tmp[1939705](1939710 call _value[1416005] a[1508113]))
                    val coerce_tmp[1939712]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1939714 'move' coerce_tmp[1939712] call_tmp[1939705])
                    const-val default_arg_tasksPerLocale[1939717]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                    (1939719 'move' default_arg_tasksPerLocale[1939717](1939722 call these_default_tasksPerLocale[1478143] coerce_tmp[1939712]))
                    const-val default_arg_ignoreRunning[1939724]:bool[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                    (1939726 'move' default_arg_ignoreRunning[1939724](1939729 call these_default_ignoreRunning[1478174] coerce_tmp[1939712]))
                    const-val default_arg_minIndicesPerTask[1939731]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                    (1939733 'move' default_arg_minIndicesPerTask[1939731](1939736 call these_default_minIndicesPerTask[1478205] coerce_tmp[1939712]))
                    {
                      {
                        val ret[1939740]:nothing[7] "dead after last mention" "RVV" "temp"
                        {
                          ref call_tmp[1939743]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
                          (1939745 'move' call_tmp[1939743](1939748 call dom[1410591] coerce_tmp[1939712]))
                          val coerce_tmp[1939750]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (1939752 'move' coerce_tmp[1939750](1939754 'deref' call_tmp[1939743]))
                          val coerce_tmp[1939756]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (1939758 'move' coerce_tmp[1939756] coerce_tmp[1939750])
                          val default_arg_offset[1939761]:1*int(64)[1256714] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
                          const-val ret_tmp[1939763]:1*int(64)[1256714] "temp"
                          (1939766 call these_default_offset[1478388] coerce_tmp[1939756] ret_tmp[1939763])
                          (1939769 'move' default_arg_offset[1939761] ret_tmp[1939763])
                          {
                            const-ref i_offset[1939773]:1*int(64)[1256714] "temp"
                            (1939775 'move' i_offset[1939773](1939777 'set reference' default_arg_offset[1939761]))
                            {
                              val ret[1939780]:nothing[7] "dead after last mention" "RVV" "temp"
                              const-val call_tmp[1939782]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
                              const-val ret_tmp[1939784]:locale[28] "temp"
                              (1939787 call here[90438] ret_tmp[1939784])
                              (1939789 'move' call_tmp[1939782] ret_tmp[1939784])
                              const-val call_tmp[1939792]:int(64)[13] "dead at end of block" "maybe param" "temp"
                              (1939794 'move' call_tmp[1939792](1939797 call getChildCount[90353] call_tmp[1939782]))
                              const-val numSublocs[1939799]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                              (1939801 'move' numSublocs[1939799] call_tmp[1939792])
                              {
                                const-val numTasks[1939805]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                val tmp[1939807]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
                                const-val tmp[1939809]:bool[10] "dead after last mention" "maybe param" "temp"
                                const-val call_tmp[1939811]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1939813 'move' call_tmp[1939811](1939816 call ==[435744] default_arg_tasksPerLocale[1939717] 0))
                                (1939819 'move' tmp[1939809] call_tmp[1939811])
                                if tmp[1939809]
                                {
                                  const-val tmp[1939824]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
                                  const-val call_tmp[1939826]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
                                  const-val ret_tmp[1939828]:locale[28] "temp"
                                  (1939831 call here[90438] ret_tmp[1939828])
                                  (1939833 'move' call_tmp[1939826] ret_tmp[1939828])
                                  (1939836 'move' tmp[1939824](1939839 call maxTaskPar[90545] call_tmp[1939826]))
                                  (1939841 'move' tmp[1939807] tmp[1939824])
                                  (1939845 call chpl__autoDestroy[1601737] call_tmp[1939826])
                                }
                                {
                                  (1939848 'move' tmp[1939807] default_arg_tasksPerLocale[1939717])
                                }
                                (1939852 'move' numTasks[1939805] tmp[1939807])
                                const-val tmp[1939855]:2*int(64)[1040245] "dead at end of block" "const" "insert auto destroy" "temp"
                                val tmp[1939857]:2*int(64)[1040245] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                                const-val tmp[1939859]:bool[10] "dead after last mention" "maybe param" "temp"
                                const-val call_tmp[1939861]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1939863 'move' call_tmp[1939861](1939865 'task_get_serial'))
                                (1939866 'move' tmp[1939859] call_tmp[1939861])
                                if tmp[1939859]
                                {
                                  const-val tmp[1939871]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                                  const-val ret_tmp[1939873]:2*int(64)[1040245] "temp"
                                  (1939876 call _build_tuple[1040203] 1 -1 ret_tmp[1939873])
                                  (1939880 'move' tmp[1939871] ret_tmp[1939873])
                                  (1939883 'move' tmp[1939857] tmp[1939871])
                                }
                                {
                                  const-val tmp[1939887]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                                  ref call_tmp[1939889]:_ref(1*range(int(64),bounded,false))[1244943] "dead at end of block" "maybe param" "temp"
                                  (1939891 'move' call_tmp[1939889](1939894 call ranges[1251533] coerce_tmp[1939756]))
                                  const-val ret_tmp[1939896]:2*int(64)[1040245] "temp"
                                  (1939899 call _computeChunkStuff[1381155] numTasks[1939805] default_arg_ignoreRunning[1939724] default_arg_minIndicesPerTask[1939731] call_tmp[1939889] ret_tmp[1939896])
                                  (1939905 'move' tmp[1939887] ret_tmp[1939896])
                                  (1939908 'move' tmp[1939857] tmp[1939887])
                                }
                                (1939912 '=' tmp[1939855] tmp[1939857])
                                (1939915 'noop')
                                1
                                ref call_tmp[1939917]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
                                (1939919 'move' call_tmp[1939917](1939921 '.' tmp[1939855] x0[1040241]))
                                const-val numChunks[1939924]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                const-val coerce_tmp[1939926]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                (1939928 'move' coerce_tmp[1939926](1939930 'deref' call_tmp[1939917]))
                                (1939932 '=' numChunks[1939924] coerce_tmp[1939926])
                                (1939935 'noop')
                                ref call_tmp[1939936]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
                                (1939938 'move' call_tmp[1939936](1939940 '.' tmp[1939855] x1[1040243]))
                                const-val parDim[1939943]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                const-val coerce_tmp[1939945]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                (1939947 'move' coerce_tmp[1939945](1939949 'deref' call_tmp[1939936]))
                                (1939951 '=' parDim[1939943] coerce_tmp[1939945])
                                (1939954 'noop')
                                const-val call_tmp[1939955]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1939957 'move' call_tmp[1939955](1939960 call ==[435744] numChunks[1939924] 1))
                                const-val call_tmp[1939963]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1939965 'move' call_tmp[1939963] call_tmp[1939955])
                                if call_tmp[1939963]
                                {
                                  {
                                    const-val yret[1939971]:1*range(int(64),bounded,false)[1244885] "dead after last mention" "YVV" "temp"
                                    ref call_tmp[1939973]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
                                    (1939975 'move' call_tmp[1939973](1939977 '.' i_offset[1939773] x0[1256712]))
                                    const-val call_tmp[1939980]:range(int(64),boundedLow,false)[1087754] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                    const-val coerce_tmp[1939982]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1939984 'move' coerce_tmp[1939982](1939986 'deref' call_tmp[1939973]))
                                    const-val ret_tmp[1939988]:range(int(64),boundedLow,false)[1087754] "temp"
                                    (1939991 call chpl_build_low_bounded_range[1087147] coerce_tmp[1939982] ret_tmp[1939988])
                                    (1939994 'move' call_tmp[1939980] ret_tmp[1939988])
                                    ref call_tmp[1939997]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
                                    ref _this_tmp_[1939999]:_ref(1*range(int(64),bounded,false))[1244943] "dead after last mention" "temp"
                                    (1940001 'move' _this_tmp_[1939999](1940004 call ranges[1251533] coerce_tmp[1939756]))
                                    (1940006 'move' call_tmp[1939997](1940008 '.' _this_tmp_[1939999] x0[1244883]))
                                    const-val call_tmp[1940011]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                                    const-val coerce_tmp[1940013]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1940015 'move' coerce_tmp[1940013](1940018 call chpl__initCopy[1085195] call_tmp[1939997]))
                                    (1940020 'move' call_tmp[1940011](1940023 call size[1035978] coerce_tmp[1940013]))
                                    const-val call_tmp[1940025]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                    const-val ret_tmp[1940027]:range(int(64),bounded,false)[1027003] "temp"
                                    (1940030 call #[1088114] call_tmp[1939980] call_tmp[1940011] ret_tmp[1940027])
                                    (1940034 'move' call_tmp[1940025] ret_tmp[1940027])
                                    const-val call_tmp[1940037]:1*range(int(64),bounded,false)[1244885] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                    const-val ret_tmp[1940039]:1*range(int(64),bounded,false)[1244885] "temp"
                                    (1940042 call _build_tuple[1478664] call_tmp[1940025] ret_tmp[1940039])
                                    (1940045 'move' call_tmp[1940037] ret_tmp[1940039])
                                    (1940048 'move' yret[1939971] call_tmp[1940037])
                                    const-val _indexOfInterest[1940051]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
                                    (1940053 'move' _indexOfInterest[1940051] yret[1939971])
                                    {
                                      const-val followThis[1940057]:1*range(int(64),bounded,false)[1244885] "const" "index var" "insert auto destroy" "maybe copy elided"
                                      (1940059 'move' followThis[1940057] _indexOfInterest[1940051])
                                      const-val yret[1940062]:1*range(int(64),bounded,false)[1244885] "dead after last mention" "YVV" "temp"
                                      const-val _yield_expr_tmp_[1940064]:1*range(int(64),bounded,false)[1244885] "temp"
                                      (1940066 '=' _yield_expr_tmp_[1940064] followThis[1940057])
                                      (1940069 'noop')
                                      (1940070 'move' yret[1940062] _yield_expr_tmp_[1940064])
                                      const-val _indexOfInterest[1940073]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
                                      (1940075 'move' _indexOfInterest[1940073] yret[1940062])
                                      {
                                        const-val followThis[1940079]:1*range(int(64),bounded,false)[1244885] "const" "index var" "insert auto destroy" "maybe copy elided"
                                        (1940081 'move' followThis[1940079] _indexOfInterest[1940073])
                                        const-val yret[1940084]:1*range(int(64),bounded,false)[1244885] "dead after last mention" "YVV" "temp"
                                        const-val _yield_expr_tmp_[1940086]:1*range(int(64),bounded,false)[1244885] "temp"
                                        (1940088 '=' _yield_expr_tmp_[1940086] followThis[1940079])
                                        (1940091 'noop')
                                        (1940092 'move' yret[1940084] _yield_expr_tmp_[1940086])
                                        const-val chpl_followThis[1940383]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "index var" "an _indexOfInterest or chpl__followIdx variable" "insert auto destroy" "temp"
                                        (1940385 'move' chpl_followThis[1940383] yret[1940084])
                                        {
                                          {
                                          }
                                          {
                                            const-val chpl__followIter[1940390]:2*_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1491961] "dead at end of block" "temp"
                                            const-val call_tmp[1940392]:2*_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1490709] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
                                            const-val ret_tmp[1940394]:2*_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1490709] "temp"
                                            (1940397 call _toFollowerZip[1481154] chpl__iterLF[1509796] chpl_followThis[1940383] ret_tmp[1940394])
                                            (1940401 'move' call_tmp[1940392] ret_tmp[1940394])
                                            const-val ret_tmp[1940404]:2*_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1491961] "temp"
                                            (1940407 call _getIteratorZip[1490837] call_tmp[1940392] ret_tmp[1940404])
                                            (1940410 'move' chpl__followIter[1940390] ret_tmp[1940404])
                                            val _iterator[2035481]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1490004] "temp"
                                            (2035487 'move' _iterator[2035481](2035484 '.v' chpl__followIter[1940390] x0[1491957]))
                                            val _iterator[2035494]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1490004] "temp"
                                            (2035500 'move' _iterator[2035494](2035497 '.v' chpl__followIter[1940390] x1[1491959]))
                                            {
                                              (2035509 call zip1[1490039] _iterator[2035481])
                                            }
                                            {
                                              (2035544 call zip1[1490039] _iterator[2035494])
                                            }
                                            const-val isFinished[2035570]:bool[10] "temp"
                                            val hasMore[2035569]:bool[10] "temp"
                                            CForLoop[2035617] order-independent
                                            {
                                              val chpl__followIdx[2035618]:2*range(int(64),bounded,false)[1492864] "dead at end of block" "follower index" "index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
                                              {
                                                (2035622 call zip2[1490048] _iterator[2035494])
                                              }
                                              {
                                                const-val retTmp[2035625]:int(64)[13] "temp"
                                                (2035627 'move' retTmp[2035625](2035630 call hasMore[1490075] _iterator[2035494]))
                                                (2035632 'move' hasMore[2035569](2035634 'cast' bool[10] retTmp[2035625]))
                                              }
                                              (2035637 'move' isFinished[2035570](2035639 '!' hasMore[2035569]))
                                              if isFinished[2035570]
                                              {
                                                (2035643 'chpl_error' c"zippered iterations have non-equal lengths")
                                              }
                                              {
                                                (2035647 'move' _index[2035662](2035650 call getValue[1490084] _iterator[2035494]))
                                              }
                                              {
                                                (2035654 call zip2[1490048] _iterator[2035481])
                                              }
                                              {
                                                (2035657 'move' _index[2035668](2035660 call getValue[1490084] _iterator[2035481]))
                                              }
                                              ref _index[2035662]:_ref(range(int(64),bounded,false))[1027047] "temp"
                                              (2035664 '.=' chpl__followIdx[2035618] x1[1492862] _index[2035662])
                                              ref _index[2035668]:_ref(range(int(64),bounded,false))[1027047] "temp"
                                              (2035670 '.=' chpl__followIdx[2035618] x0[1492860] _index[2035668])
                                              {
                                                ref aa[2035675]:_ref(range(int(64),bounded,false))[1027047] "index var" "insert auto destroy"
                                                ref bb[2035677]:_ref(range(int(64),bounded,false))[1027047] "index var" "insert auto destroy"
                                                (2035679 'move' aa[2035675](2035681 '.v' chpl__followIdx[2035618] x0[1492860]))
                                                (2035684 'move' bb[2035677](2035686 '.v' chpl__followIdx[2035618] x1[1492862]))
                                                {
                                                  val call_tmp[2035690]:range(int(64),bounded,false)[1027003] "dead after last mention" "maybe param" "temp" "type variable"
                                                  const-val copy[2035692]:range(int(64),bounded,false)[1027003] "dead at end of block" "no auto destroy"
                                                  (2035694 'move' copy[2035692](2035696 'deref' bb[2035677]))
                                                  (2035698 '=' aa[2035675] copy[2035692])
                                                  val optinfo[2035701]:int(64)[13] "no codegen" "temp" "lhs outlives forall" "forall no task private"
                                                  (2035703 'optimization info' optinfo[2035701])
                                                }
                                              }
                                              {
                                                (2035707 call zip3[1490057] _iterator[2035481])
                                              }
                                              {
                                                (2035711 call zip3[1490057] _iterator[2035494])
                                              }
                                              {
                                                {
                                                  (2035519 call init[1490093] _iterator[2035481])
                                                }
                                                {
                                                  (2035554 call init[1490093] _iterator[2035494])
                                                }
                                              }
                                              {
                                                (2035535 call hasMore[1490075] _iterator[2035481])
                                              }
                                              {
                                                {
                                                  (2035523 call incr[1490102] _iterator[2035481])
                                                }
                                                {
                                                  (2035558 call incr[1490102] _iterator[2035494])
                                                }
                                              }
                                            }
                                            {
                                              const-val retTmp[2035604]:int(64)[13] "temp"
                                              (2035606 'move' retTmp[2035604](2035601 call hasMore[1490075] _iterator[2035494]))
                                              (2035611 'move' hasMore[2035569](2035608 'cast' bool[10] retTmp[2035604]))
                                            }
                                            if hasMore[2035569]
                                            {
                                              (2035596 'chpl_error' c"zippered iterations have non-equal lengths")
                                            }
                                            {
                                              (2035566 call zip4[1490066] _iterator[2035494])
                                            }
                                            {
                                              (2035531 call zip4[1490066] _iterator[2035481])
                                            }
                                            (1940450 call _freeIterator[1492040] chpl__followIter[1940390])
                                            (1940453 call chpl__autoDestroy[1821203] call_tmp[1940392])
                                          }
                                          (1940456 call chpl__autoDestroy[1695146] chpl_followThis[1940383])
                                        }
                                        label _continueLabel[1940120]
                                      }
                                      label _continueLabel[1940122]
                                    }
                                    (1940125 call chpl__autoDestroy[1407763] call_tmp[1940025])
                                    (1940128 call chpl__autoDestroy[1407763] coerce_tmp[1940013])
                                    (1940131 call chpl__autoDestroy[1680875] call_tmp[1939980])
                                  }
                                }
                                {
                                  const-val locBlock[1940134]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "insert auto destroy"
                                  val call_tmp[1940136]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  val call_tmp[1940138]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  val call_tmp[1940140]:1*range(int(64),bounded,false)[1244885] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  const-val ret_tmp[1940142]:1*range(int(64),bounded,false)[1244885] "temp"
                                  (1940145 call _defaultOf[1251254] ret_tmp[1940142])
                                  (1940147 'move' locBlock[1940134] ret_tmp[1940142])
                                  {
                                    const-val i[1940151]:int(64)[13] "dead at end of block" "insert auto destroy"
                                    (1940153 'move' i[1940151] 0)
                                    {
                                      ref call_tmp[1940157]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
                                      (1940159 'move' call_tmp[1940157](1940161 '.' locBlock[1940134] x0[1244883]))
                                      ref call_tmp[1940164]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
                                      (1940166 'move' call_tmp[1940164](1940168 '.' i_offset[1939773] x0[1256712]))
                                      const-val call_tmp[1940171]:range(int(64),boundedLow,false)[1087754] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                      const-val coerce_tmp[1940173]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                      (1940175 'move' coerce_tmp[1940173](1940177 'deref' call_tmp[1940164]))
                                      const-val ret_tmp[1940179]:range(int(64),boundedLow,false)[1087754] "temp"
                                      (1940182 call chpl_build_low_bounded_range[1087147] coerce_tmp[1940173] ret_tmp[1940179])
                                      (1940185 'move' call_tmp[1940171] ret_tmp[1940179])
                                      ref call_tmp[1940188]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
                                      ref _this_tmp_[1940190]:_ref(1*range(int(64),bounded,false))[1244943] "dead after last mention" "temp"
                                      (1940192 'move' _this_tmp_[1940190](1940195 call ranges[1251533] coerce_tmp[1939756]))
                                      (1940197 'move' call_tmp[1940188](1940199 '.' _this_tmp_[1940190] x0[1244883]))
                                      const-val call_tmp[1940202]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                                      const-val coerce_tmp[1940204]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                      (1940206 'move' coerce_tmp[1940204](1940209 call chpl__initCopy[1085195] call_tmp[1940188]))
                                      (1940211 'move' call_tmp[1940202](1940214 call size[1035978] coerce_tmp[1940204]))
                                      const-val call_tmp[1940216]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                      const-val ret_tmp[1940218]:range(int(64),bounded,false)[1027003] "temp"
                                      (1940221 call #[1088114] call_tmp[1940171] call_tmp[1940202] ret_tmp[1940218])
                                      (1940225 'move' call_tmp[1940216] ret_tmp[1940218])
                                      (1940229 call =[1251739] call_tmp[1940157] call_tmp[1940216])
                                      (1940233 call chpl__autoDestroy[1407763] call_tmp[1940216])
                                      (1940236 call chpl__autoDestroy[1407763] coerce_tmp[1940204])
                                      (1940239 call chpl__autoDestroy[1680875] call_tmp[1940171])
                                    }
                                    label _continueLabel0[1940241]
                                    label _unused_continueLabel[1940243]
                                    label _breakLabel[1940245]
                                  }
                                  {
                                    const-val tmpIter[1940248]:range(int(64),bounded,false)[1027003] "dead at end of block" "expr temp" "insert auto destroy" "maybe ref" "no copy" "temp"
                                    const-val call_tmp[1940250]:range(int(64),boundedLow,false)[1087754] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
                                    const-val ret_tmp[1940252]:range(int(64),boundedLow,false)[1087754] "temp"
                                    (1940255 call chpl_build_low_bounded_range[1087147] 0 ret_tmp[1940252])
                                    (1940258 'move' call_tmp[1940250] ret_tmp[1940252])
                                    const-val ret_tmp[1940261]:range(int(64),bounded,false)[1027003] "temp"
                                    (1940264 call #[1088114] call_tmp[1940250] numChunks[1939924] ret_tmp[1940261])
                                    (1940268 'move' tmpIter[1940248] ret_tmp[1940261])
                                    {
                                      const _coforallCount[1940272]:_EndCount(AtomicT(int(64)),int(64))[945532] "dead after last mention" "concurrently accessed" "const" "end count" "temp"
                                      (1940274 'move' _coforallCount[1940272](1940277 call _endCountAlloc[1228107]))
                                      const-val numTasks[1940278]:int(64)[13] "dead at end of block" "temp"
                                      (1940280 'move' numTasks[1940278](1940283 call size[1035978] tmpIter[1940248]))
                                      (1940286 call _upEndCount[1228350] _coforallCount[1940272] numTasks[1940278])
                                      (1940290 call chpl_resetTaskSpawn[1229432] numTasks[1940278])
                                      val _indexOfInterest[1940292]:int(64)[13] "dead at end of block" "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
                                      val _iterator[1940294]:_ic_these_range_int64_t_bounded_F[1096892] "dead at end of block" "expr temp" "temp"
                                      (1940296 'move' _iterator[1940294](1940299 call _getIterator[1095509] tmpIter[1940248]))
                                      {
                                        val ret[2035332]:_ir_these_range_int64_t_bounded_F[1096898] "dead after last mention" "RVV" "temp"
                                        const-val _return_tmp_[2035334]:bool[10] "dead after last mention" "temp"
                                        const-val this[2035451]:range(int(64),bounded,false)[1027003] "temp"
                                        (2035456 'move' this[2035451](2035453 '.v' _iterator[1940294] F0_this[2113071]))
                                        (2035336 'move' _return_tmp_[2035334](2035339 call checkIfIterWillOverflow[1096003] this[2035451] 1))
                                        val i[2035342]:int(64)[13] "dead at end of block" "insert auto destroy"
                                        val call_tmp[2035344]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                        (2035346 'move' i[2035342] 0)
                                        ref call_tmp[2035349]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
                                        const-val this[2035458]:range(int(64),bounded,false)[1027003] "temp"
                                        (2035463 'move' this[2035458](2035460 '.v' _iterator[1940294] F0_this[2113071]))
                                        (2035351 'move' call_tmp[2035349](2035354 call _low[1028641] this[2035458]))
                                        const-val start[2035356]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                        const-val coerce_tmp[2035358]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                        (2035360 'move' coerce_tmp[2035358](2035362 'deref' call_tmp[2035349]))
                                        (2035364 '=' start[2035356] coerce_tmp[2035358])
                                        (2035367 'noop')
                                        ref call_tmp[2035368]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
                                        const-val this[2035465]:range(int(64),bounded,false)[1027003] "temp"
                                        (2035470 'move' this[2035465](2035467 '.v' _iterator[1940294] F0_this[2113071]))
                                        (2035370 'move' call_tmp[2035368](2035373 call _high[1028849] this[2035465]))
                                        const end[2035375]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                        const-val coerce_tmp[2035377]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                        (2035379 'move' coerce_tmp[2035377](2035381 'deref' call_tmp[2035368]))
                                        (2035383 '=' end[2035375] coerce_tmp[2035377])
                                        (2035386 'noop')
                                        CForLoop[2035387]
                                        {
                                          const-val yret[2035402]:int(64)[13] "dead after last mention" "YVV" "temp"
                                          const-val call_tmp[2035404]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                                          const-val this[2035472]:range(int(64),bounded,false)[1027003] "temp"
                                          (2035477 'move' this[2035472](2035474 '.v' _iterator[1940294] F0_this[2113071]))
                                          (2035406 'move' call_tmp[2035404](2035409 call chpl_intToIdx[1028669] this[2035472] i[2035342]))
                                          (2035412 'move' yret[2035402] call_tmp[2035404])
                                          const-val _yieldedIndex[2035426]:int(64)[13] "coforall index var" "temp"
                                          (2035449 'move' _yieldedIndex[2035426] call_tmp[2035404])
                                          {
                                            const-val chunk[2035428]:int(64)[13] "coforall index var" "const" "index var" "insert auto destroy"
                                            (2035430 'move' chunk[2035428] _yieldedIndex[2035426])
                                            val dummy_error[2035433]:Error[167984] "concurrently accessed" "error variable" "temp"
                                            val _args_forcoforall_fn[2217242]:_class_localscoforall_fn[2217222] "temp"
                                            (2217246 'move' _args_forcoforall_fn[2217242](2217244 'stack allocate class' _class_localscoforall_fn[2217222]))
                                            (2217248 '.=' _args_forcoforall_fn[2217242] _0_locBlock[2217225] locBlock[1940134])
                                            (2217252 '.=' _args_forcoforall_fn[2217242] _1_parDim[2217227] parDim[1939943])
                                            (2217256 '.=' _args_forcoforall_fn[2217242] _2_numChunks[2217229] numChunks[1939924])
                                            (2217260 '.=' _args_forcoforall_fn[2217242] _3_chunk[2217231] chunk[2035428])
                                            (2217264 '.=' _args_forcoforall_fn[2217242] _4__coforallCount[2217233] _coforallCount[1940272])
                                            ref tmp[2217268]:1*int(64)[1256714] "temp"
                                            (2217272 'move' tmp[2217268](2217270 'set reference' default_arg_offset[1939761]))
                                            (2217274 '.=' _args_forcoforall_fn[2217242] _6_default_arg_offset[2217237] tmp[2217268])
                                            ref tmp[2217278]:2*[domain(1,int(64),false)] range(int(64),bounded,false)[1480149] "temp"
                                            (2217282 'move' tmp[2217278](2217280 'set reference' chpl__iterLF[1509796]))
                                            (2217284 '.=' _args_forcoforall_fn[2217242] _7_chpl__iterLF[2217239] tmp[2217278])
                                            val _args_vforcoforall_fn[2217288]:c_void_ptr[149] "temp"
                                            (2217292 'move' _args_vforcoforall_fn[2217288](2217290 'cast_to_void_star' _args_forcoforall_fn[2217242]))
                                            val _args_sizecoforall_fn[2217294]:int(64)[13] "temp"
                                            (2217298 'move' _args_sizecoforall_fn[2217294](2217296 'sizeof_bundle' _class_localscoforall_fn[2217222]))
                                            ref _taskListcoforall_fn[2217300]:c_void_ptr[149] "temp"
                                            (2217305 'move' _taskListcoforall_fn[2217300](2217302 '.' _coforallCount[1940272] taskList[12712]))
                                            val _taskListNodecoforall_fn[2217307]:int(64)[13] "temp"
                                            (2217311 'move' _taskListNodecoforall_fn[2217307](2217309 '_wide_get_node' _coforallCount[1940272]))
                                            (2217402 call wrapcoforall_fn[2217313] _taskListcoforall_fn[2217300] _taskListNodecoforall_fn[2217307] _args_vforcoforall_fn[2217288] _args_sizecoforall_fn[2217294] _args_forcoforall_fn[2217242])
                                            {
                                            }
                                            label _continueLabel[2035446]
                                          }
                                          {
                                            (2035389 '=' i[2035342] coerce_tmp[2035358])
                                          }
                                          {
                                            (2035393 '<=' i[2035342] end[2035375])
                                          }
                                          {
                                            val call_tmp[2035397]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                            (2035399 '+=' i[2035342] 1)
                                          }
                                        }
                                        label _endthese[2035422]
                                      }
                                      label _breakLabel[1940323]
                                      val error[1940325]:Error[167984] "error variable" "temp"
                                      (1940327 'move' error[1940325] nil[44])
                                      (1940331 call _waitEndCount[1235226] _coforallCount[1940272] numTasks[1940278] error[1940325])
                                      val errorExists[2225960]:bool[10] "temp"
                                      (2225965 'move' errorExists[2225960](2225962 '!=' error[1940325] nil[44]))
                                      if errorExists[2225960]
                                      {
                                        (1940339 call chpl_propagate_error[170518] error[1940325])
                                      }
                                      (1940343 call _endCountFree[1234049] _coforallCount[1940272])
                                      (1940346 call _freeIterator[1102195] _iterator[1940294])
                                    }
                                    (1940349 call chpl__autoDestroy[1407763] tmpIter[1940248])
                                    (1940352 call chpl__autoDestroy[1680875] call_tmp[1940250])
                                  }
                                  (1940355 call chpl__autoDestroy[1695146] locBlock[1940134])
                                }
                                (1940359 call chpl__autoDestroy[1674803] tmp[1939855])
                              }
                              (1940362 call chpl__autoDestroy[1601737] call_tmp[1939782])
                              label _endthese[1940364]
                            }
                          }
                          (1940367 call chpl_after_forall_fence[13071])
                          (1940369 call chpl__autoDestroy[1697253] default_arg_offset[1939761])
                          label _breakLabel[1940371]
                        }
                        label _endthese[1940373]
                      }
                    }
                    (1940376 call chpl_after_forall_fence[13071])
                    label _breakLabel[1940377]
                  }
                  label _endthese[1940379]
                }
              }
              (1930445 call chpl_after_forall_fence[13071])
              (1926744 call chpl__autoDestroy[1820760] chpl__iterLF[1509796])
            }
          }
        }
      }
    }
    (1509702 return _void[55])
  }
  function chpl__transferArray[1544971](ref arg a[1544973]:_ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055], const  ref arg b[1544975]:_ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055]) : void[4] "inline" "instantiated generic" "invisible fn" "resolved" "ignore transfer errors" "find user line" "no return value for void"
  {
    val call_tmp[1544998]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1545006]:_RuntimeTypeInfo[1366262] "dead after last mention" "expr temp" "maybe param" "temp"
    (1545008 'move' call_tmp[1545006](1546567 call chpl__convertValueToRuntimeType[1517719] b[1544975]))
    val call_tmp[1545057]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1545103]:_RuntimeTypeInfo[1366262] "dead after last mention" "expr temp" "maybe param" "temp"
    (1545105 'move' call_tmp[1545103](1546584 call chpl__convertValueToRuntimeType[1517719] b[1544975]))
    {
      {
        {
          {
            val call_tmp[1546330]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            {
              const-val chpl__iterLF[1546661]:2*[domain(1,int(64),false)] real(64)[1537560] "dead at end of block" "chpl__iter" "chpl__iter_newstyle" "expr temp" "insert auto destroy" "no copy" "temp"
              const-val ret_tmp[1916435]:2*[domain(1,int(64),false)] real(64)[1537560] "temp"
              (1546658 call _build_tuple[1537518] a[1544973] b[1544975] ret_tmp[1916435])
              (1916438 'move' chpl__iterLF[1546661] ret_tmp[1916435])
              {
                {
                  val ret[1942872]:nothing[7] "dead after last mention" "RVV" "temp"
                  {
                    val call_tmp[1942875]:[domain(1,int(64),false)] real(64)[1358944] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1942877 'move' call_tmp[1942875](1942880 call _value[1366084] a[1544973]))
                    val coerce_tmp[1942882]:[domain(1,int(64),false)] real(64)[1358944] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1942884 'move' coerce_tmp[1942882] call_tmp[1942875])
                    const-val default_arg_tasksPerLocale[1942887]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                    (1942889 'move' default_arg_tasksPerLocale[1942887](1942892 call these_default_tasksPerLocale[1536543] coerce_tmp[1942882]))
                    const-val default_arg_ignoreRunning[1942894]:bool[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                    (1942896 'move' default_arg_ignoreRunning[1942894](1942899 call these_default_ignoreRunning[1536574] coerce_tmp[1942882]))
                    const-val default_arg_minIndicesPerTask[1942901]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                    (1942903 'move' default_arg_minIndicesPerTask[1942901](1942906 call these_default_minIndicesPerTask[1536605] coerce_tmp[1942882]))
                    {
                      {
                        val ret[1942910]:nothing[7] "dead after last mention" "RVV" "temp"
                        {
                          ref call_tmp[1942913]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
                          (1942915 'move' call_tmp[1942913](1942918 call dom[1360329] coerce_tmp[1942882]))
                          val coerce_tmp[1942920]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (1942922 'move' coerce_tmp[1942920](1942924 'deref' call_tmp[1942913]))
                          val coerce_tmp[1942926]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (1942928 'move' coerce_tmp[1942926] coerce_tmp[1942920])
                          val default_arg_offset[1942931]:1*int(64)[1256714] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
                          const-val ret_tmp[1942933]:1*int(64)[1256714] "temp"
                          (1942936 call these_default_offset[1478388] coerce_tmp[1942926] ret_tmp[1942933])
                          (1942939 'move' default_arg_offset[1942931] ret_tmp[1942933])
                          {
                            const-ref i_offset[1942943]:1*int(64)[1256714] "temp"
                            (1942945 'move' i_offset[1942943](1942947 'set reference' default_arg_offset[1942931]))
                            {
                              val ret[1942950]:nothing[7] "dead after last mention" "RVV" "temp"
                              const-val call_tmp[1942952]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
                              const-val ret_tmp[1942954]:locale[28] "temp"
                              (1942957 call here[90438] ret_tmp[1942954])
                              (1942959 'move' call_tmp[1942952] ret_tmp[1942954])
                              const-val call_tmp[1942962]:int(64)[13] "dead at end of block" "maybe param" "temp"
                              (1942964 'move' call_tmp[1942962](1942967 call getChildCount[90353] call_tmp[1942952]))
                              const-val numSublocs[1942969]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                              (1942971 'move' numSublocs[1942969] call_tmp[1942962])
                              {
                                const-val numTasks[1942975]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                val tmp[1942977]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
                                const-val tmp[1942979]:bool[10] "dead after last mention" "maybe param" "temp"
                                const-val call_tmp[1942981]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1942983 'move' call_tmp[1942981](1942986 call ==[435744] default_arg_tasksPerLocale[1942887] 0))
                                (1942989 'move' tmp[1942979] call_tmp[1942981])
                                if tmp[1942979]
                                {
                                  const-val tmp[1942994]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
                                  const-val call_tmp[1942996]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
                                  const-val ret_tmp[1942998]:locale[28] "temp"
                                  (1943001 call here[90438] ret_tmp[1942998])
                                  (1943003 'move' call_tmp[1942996] ret_tmp[1942998])
                                  (1943006 'move' tmp[1942994](1943009 call maxTaskPar[90545] call_tmp[1942996]))
                                  (1943011 'move' tmp[1942977] tmp[1942994])
                                  (1943015 call chpl__autoDestroy[1601737] call_tmp[1942996])
                                }
                                {
                                  (1943018 'move' tmp[1942977] default_arg_tasksPerLocale[1942887])
                                }
                                (1943022 'move' numTasks[1942975] tmp[1942977])
                                const-val tmp[1943025]:2*int(64)[1040245] "dead at end of block" "const" "insert auto destroy" "temp"
                                val tmp[1943027]:2*int(64)[1040245] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                                const-val tmp[1943029]:bool[10] "dead after last mention" "maybe param" "temp"
                                const-val call_tmp[1943031]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1943033 'move' call_tmp[1943031](1943035 'task_get_serial'))
                                (1943036 'move' tmp[1943029] call_tmp[1943031])
                                if tmp[1943029]
                                {
                                  const-val tmp[1943041]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                                  const-val ret_tmp[1943043]:2*int(64)[1040245] "temp"
                                  (1943046 call _build_tuple[1040203] 1 -1 ret_tmp[1943043])
                                  (1943050 'move' tmp[1943041] ret_tmp[1943043])
                                  (1943053 'move' tmp[1943027] tmp[1943041])
                                }
                                {
                                  const-val tmp[1943057]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                                  ref call_tmp[1943059]:_ref(1*range(int(64),bounded,false))[1244943] "dead at end of block" "maybe param" "temp"
                                  (1943061 'move' call_tmp[1943059](1943064 call ranges[1251533] coerce_tmp[1942926]))
                                  const-val ret_tmp[1943066]:2*int(64)[1040245] "temp"
                                  (1943069 call _computeChunkStuff[1381155] numTasks[1942975] default_arg_ignoreRunning[1942894] default_arg_minIndicesPerTask[1942901] call_tmp[1943059] ret_tmp[1943066])
                                  (1943075 'move' tmp[1943057] ret_tmp[1943066])
                                  (1943078 'move' tmp[1943027] tmp[1943057])
                                }
                                (1943082 '=' tmp[1943025] tmp[1943027])
                                (1943085 'noop')
                                1
                                ref call_tmp[1943087]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
                                (1943089 'move' call_tmp[1943087](1943091 '.' tmp[1943025] x0[1040241]))
                                const-val numChunks[1943094]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                const-val coerce_tmp[1943096]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                (1943098 'move' coerce_tmp[1943096](1943100 'deref' call_tmp[1943087]))
                                (1943102 '=' numChunks[1943094] coerce_tmp[1943096])
                                (1943105 'noop')
                                ref call_tmp[1943106]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
                                (1943108 'move' call_tmp[1943106](1943110 '.' tmp[1943025] x1[1040243]))
                                const-val parDim[1943113]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                const-val coerce_tmp[1943115]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                (1943117 'move' coerce_tmp[1943115](1943119 'deref' call_tmp[1943106]))
                                (1943121 '=' parDim[1943113] coerce_tmp[1943115])
                                (1943124 'noop')
                                const-val call_tmp[1943125]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1943127 'move' call_tmp[1943125](1943130 call ==[435744] numChunks[1943094] 1))
                                const-val call_tmp[1943133]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1943135 'move' call_tmp[1943133] call_tmp[1943125])
                                if call_tmp[1943133]
                                {
                                  {
                                    const-val yret[1943141]:1*range(int(64),bounded,false)[1244885] "dead after last mention" "YVV" "temp"
                                    ref call_tmp[1943143]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
                                    (1943145 'move' call_tmp[1943143](1943147 '.' i_offset[1942943] x0[1256712]))
                                    const-val call_tmp[1943150]:range(int(64),boundedLow,false)[1087754] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                    const-val coerce_tmp[1943152]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1943154 'move' coerce_tmp[1943152](1943156 'deref' call_tmp[1943143]))
                                    const-val ret_tmp[1943158]:range(int(64),boundedLow,false)[1087754] "temp"
                                    (1943161 call chpl_build_low_bounded_range[1087147] coerce_tmp[1943152] ret_tmp[1943158])
                                    (1943164 'move' call_tmp[1943150] ret_tmp[1943158])
                                    ref call_tmp[1943167]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
                                    ref _this_tmp_[1943169]:_ref(1*range(int(64),bounded,false))[1244943] "dead after last mention" "temp"
                                    (1943171 'move' _this_tmp_[1943169](1943174 call ranges[1251533] coerce_tmp[1942926]))
                                    (1943176 'move' call_tmp[1943167](1943178 '.' _this_tmp_[1943169] x0[1244883]))
                                    const-val call_tmp[1943181]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                                    const-val coerce_tmp[1943183]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1943185 'move' coerce_tmp[1943183](1943188 call chpl__initCopy[1085195] call_tmp[1943167]))
                                    (1943190 'move' call_tmp[1943181](1943193 call size[1035978] coerce_tmp[1943183]))
                                    const-val call_tmp[1943195]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                    const-val ret_tmp[1943197]:range(int(64),bounded,false)[1027003] "temp"
                                    (1943200 call #[1088114] call_tmp[1943150] call_tmp[1943181] ret_tmp[1943197])
                                    (1943204 'move' call_tmp[1943195] ret_tmp[1943197])
                                    const-val call_tmp[1943207]:1*range(int(64),bounded,false)[1244885] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                    const-val ret_tmp[1943209]:1*range(int(64),bounded,false)[1244885] "temp"
                                    (1943212 call _build_tuple[1478664] call_tmp[1943195] ret_tmp[1943209])
                                    (1943215 'move' call_tmp[1943207] ret_tmp[1943209])
                                    (1943218 'move' yret[1943141] call_tmp[1943207])
                                    const-val _indexOfInterest[1943221]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
                                    (1943223 'move' _indexOfInterest[1943221] yret[1943141])
                                    {
                                      const-val followThis[1943227]:1*range(int(64),bounded,false)[1244885] "const" "index var" "insert auto destroy" "maybe copy elided"
                                      (1943229 'move' followThis[1943227] _indexOfInterest[1943221])
                                      const-val yret[1943232]:1*range(int(64),bounded,false)[1244885] "dead after last mention" "YVV" "temp"
                                      const-val _yield_expr_tmp_[1943234]:1*range(int(64),bounded,false)[1244885] "temp"
                                      (1943236 '=' _yield_expr_tmp_[1943234] followThis[1943227])
                                      (1943239 'noop')
                                      (1943240 'move' yret[1943232] _yield_expr_tmp_[1943234])
                                      const-val _indexOfInterest[1943243]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
                                      (1943245 'move' _indexOfInterest[1943243] yret[1943232])
                                      {
                                        const-val followThis[1943249]:1*range(int(64),bounded,false)[1244885] "const" "index var" "insert auto destroy" "maybe copy elided"
                                        (1943251 'move' followThis[1943249] _indexOfInterest[1943243])
                                        const-val yret[1943254]:1*range(int(64),bounded,false)[1244885] "dead after last mention" "YVV" "temp"
                                        const-val _yield_expr_tmp_[1943256]:1*range(int(64),bounded,false)[1244885] "temp"
                                        (1943258 '=' _yield_expr_tmp_[1943256] followThis[1943249])
                                        (1943261 'noop')
                                        (1943262 'move' yret[1943254] _yield_expr_tmp_[1943256])
                                        const-val chpl_followThis[1943553]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "index var" "an _indexOfInterest or chpl__followIdx variable" "insert auto destroy" "temp"
                                        (1943555 'move' chpl_followThis[1943553] yret[1943254])
                                        {
                                          {
                                          }
                                          {
                                            const-val chpl__followIter[1943560]:2*_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1541656] "dead at end of block" "temp"
                                            const-val call_tmp[1943562]:2*_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1540404] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
                                            const-val ret_tmp[1943564]:2*_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1540404] "temp"
                                            (1943567 call _toFollowerZip[1538565] chpl__iterLF[1546661] chpl_followThis[1943553] ret_tmp[1943564])
                                            (1943571 'move' call_tmp[1943562] ret_tmp[1943564])
                                            const-val ret_tmp[1943574]:2*_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1541656] "temp"
                                            (1943577 call _getIteratorZip[1540532] call_tmp[1943562] ret_tmp[1943574])
                                            (1943580 'move' chpl__followIter[1943560] ret_tmp[1943574])
                                            val _iterator[2036195]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539699] "temp"
                                            (2036201 'move' _iterator[2036195](2036198 '.v' chpl__followIter[1943560] x0[1541652]))
                                            val _iterator[2036208]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539699] "temp"
                                            (2036214 'move' _iterator[2036208](2036211 '.v' chpl__followIter[1943560] x1[1541654]))
                                            {
                                              (2036223 call zip1[1539734] _iterator[2036195])
                                            }
                                            {
                                              (2036258 call zip1[1539734] _iterator[2036208])
                                            }
                                            const-val isFinished[2036284]:bool[10] "temp"
                                            val hasMore[2036283]:bool[10] "temp"
                                            CForLoop[2036331] order-independent
                                            {
                                              val chpl__followIdx[2036332]:2*real(64)[1542559] "dead at end of block" "follower index" "index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
                                              {
                                                (2036336 call zip2[1539743] _iterator[2036208])
                                              }
                                              {
                                                const-val retTmp[2036339]:int(64)[13] "temp"
                                                (2036341 'move' retTmp[2036339](2036344 call hasMore[1539770] _iterator[2036208]))
                                                (2036346 'move' hasMore[2036283](2036348 'cast' bool[10] retTmp[2036339]))
                                              }
                                              (2036351 'move' isFinished[2036284](2036353 '!' hasMore[2036283]))
                                              if isFinished[2036284]
                                              {
                                                (2036357 'chpl_error' c"zippered iterations have non-equal lengths")
                                              }
                                              {
                                                (2036361 'move' _index[2036376](2036364 call getValue[1539779] _iterator[2036208]))
                                              }
                                              {
                                                (2036368 call zip2[1539743] _iterator[2036195])
                                              }
                                              {
                                                (2036371 'move' _index[2036382](2036374 call getValue[1539779] _iterator[2036195]))
                                              }
                                              ref _index[2036376]:_ref(real(64))[936906] "temp"
                                              (2036378 '.=' chpl__followIdx[2036332] x1[1542557] _index[2036376])
                                              ref _index[2036382]:_ref(real(64))[936906] "temp"
                                              (2036384 '.=' chpl__followIdx[2036332] x0[1542555] _index[2036382])
                                              {
                                                ref aa[2036389]:_ref(real(64))[936906] "index var" "insert auto destroy"
                                                ref bb[2036391]:_ref(real(64))[936906] "index var" "insert auto destroy"
                                                (2036393 'move' aa[2036389](2036395 '.v' chpl__followIdx[2036332] x0[1542555]))
                                                (2036398 'move' bb[2036391](2036400 '.v' chpl__followIdx[2036332] x1[1542557]))
                                                {
                                                  val call_tmp[2036404]:real(64)[16] "dead after last mention" "maybe param" "temp" "type variable"
                                                  const-val copy[2036406]:real(64)[16] "dead at end of block" "no auto destroy"
                                                  (2036408 'move' copy[2036406](2036410 'deref' bb[2036391]))
                                                  (2036412 '=' aa[2036389] copy[2036406])
                                                  val optinfo[2036415]:int(64)[13] "no codegen" "temp" "lhs outlives forall" "forall no task private"
                                                  (2036417 'optimization info' optinfo[2036415])
                                                }
                                              }
                                              {
                                                (2036421 call zip3[1539752] _iterator[2036195])
                                              }
                                              {
                                                (2036425 call zip3[1539752] _iterator[2036208])
                                              }
                                              {
                                                {
                                                  (2036233 call init[1539788] _iterator[2036195])
                                                }
                                                {
                                                  (2036268 call init[1539788] _iterator[2036208])
                                                }
                                              }
                                              {
                                                (2036249 call hasMore[1539770] _iterator[2036195])
                                              }
                                              {
                                                {
                                                  (2036237 call incr[1539797] _iterator[2036195])
                                                }
                                                {
                                                  (2036272 call incr[1539797] _iterator[2036208])
                                                }
                                              }
                                            }
                                            {
                                              const-val retTmp[2036318]:int(64)[13] "temp"
                                              (2036320 'move' retTmp[2036318](2036315 call hasMore[1539770] _iterator[2036208]))
                                              (2036325 'move' hasMore[2036283](2036322 'cast' bool[10] retTmp[2036318]))
                                            }
                                            if hasMore[2036283]
                                            {
                                              (2036310 'chpl_error' c"zippered iterations have non-equal lengths")
                                            }
                                            {
                                              (2036280 call zip4[1539761] _iterator[2036208])
                                            }
                                            {
                                              (2036245 call zip4[1539761] _iterator[2036195])
                                            }
                                            (1943620 call _freeIterator[1541735] chpl__followIter[1943560])
                                            (1943623 call chpl__autoDestroy[1822526] call_tmp[1943562])
                                          }
                                          (1943626 call chpl__autoDestroy[1695146] chpl_followThis[1943553])
                                        }
                                        label _continueLabel[1943290]
                                      }
                                      label _continueLabel[1943292]
                                    }
                                    (1943295 call chpl__autoDestroy[1407763] call_tmp[1943195])
                                    (1943298 call chpl__autoDestroy[1407763] coerce_tmp[1943183])
                                    (1943301 call chpl__autoDestroy[1680875] call_tmp[1943150])
                                  }
                                }
                                {
                                  const-val locBlock[1943304]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "insert auto destroy"
                                  val call_tmp[1943306]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  val call_tmp[1943308]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  val call_tmp[1943310]:1*range(int(64),bounded,false)[1244885] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  const-val ret_tmp[1943312]:1*range(int(64),bounded,false)[1244885] "temp"
                                  (1943315 call _defaultOf[1251254] ret_tmp[1943312])
                                  (1943317 'move' locBlock[1943304] ret_tmp[1943312])
                                  {
                                    const-val i[1943321]:int(64)[13] "dead at end of block" "insert auto destroy"
                                    (1943323 'move' i[1943321] 0)
                                    {
                                      ref call_tmp[1943327]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
                                      (1943329 'move' call_tmp[1943327](1943331 '.' locBlock[1943304] x0[1244883]))
                                      ref call_tmp[1943334]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
                                      (1943336 'move' call_tmp[1943334](1943338 '.' i_offset[1942943] x0[1256712]))
                                      const-val call_tmp[1943341]:range(int(64),boundedLow,false)[1087754] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                      const-val coerce_tmp[1943343]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                      (1943345 'move' coerce_tmp[1943343](1943347 'deref' call_tmp[1943334]))
                                      const-val ret_tmp[1943349]:range(int(64),boundedLow,false)[1087754] "temp"
                                      (1943352 call chpl_build_low_bounded_range[1087147] coerce_tmp[1943343] ret_tmp[1943349])
                                      (1943355 'move' call_tmp[1943341] ret_tmp[1943349])
                                      ref call_tmp[1943358]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
                                      ref _this_tmp_[1943360]:_ref(1*range(int(64),bounded,false))[1244943] "dead after last mention" "temp"
                                      (1943362 'move' _this_tmp_[1943360](1943365 call ranges[1251533] coerce_tmp[1942926]))
                                      (1943367 'move' call_tmp[1943358](1943369 '.' _this_tmp_[1943360] x0[1244883]))
                                      const-val call_tmp[1943372]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                                      const-val coerce_tmp[1943374]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                      (1943376 'move' coerce_tmp[1943374](1943379 call chpl__initCopy[1085195] call_tmp[1943358]))
                                      (1943381 'move' call_tmp[1943372](1943384 call size[1035978] coerce_tmp[1943374]))
                                      const-val call_tmp[1943386]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                      const-val ret_tmp[1943388]:range(int(64),bounded,false)[1027003] "temp"
                                      (1943391 call #[1088114] call_tmp[1943341] call_tmp[1943372] ret_tmp[1943388])
                                      (1943395 'move' call_tmp[1943386] ret_tmp[1943388])
                                      (1943399 call =[1251739] call_tmp[1943327] call_tmp[1943386])
                                      (1943403 call chpl__autoDestroy[1407763] call_tmp[1943386])
                                      (1943406 call chpl__autoDestroy[1407763] coerce_tmp[1943374])
                                      (1943409 call chpl__autoDestroy[1680875] call_tmp[1943341])
                                    }
                                    label _continueLabel0[1943411]
                                    label _unused_continueLabel[1943413]
                                    label _breakLabel[1943415]
                                  }
                                  {
                                    const-val tmpIter[1943418]:range(int(64),bounded,false)[1027003] "dead at end of block" "expr temp" "insert auto destroy" "maybe ref" "no copy" "temp"
                                    const-val call_tmp[1943420]:range(int(64),boundedLow,false)[1087754] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
                                    const-val ret_tmp[1943422]:range(int(64),boundedLow,false)[1087754] "temp"
                                    (1943425 call chpl_build_low_bounded_range[1087147] 0 ret_tmp[1943422])
                                    (1943428 'move' call_tmp[1943420] ret_tmp[1943422])
                                    const-val ret_tmp[1943431]:range(int(64),bounded,false)[1027003] "temp"
                                    (1943434 call #[1088114] call_tmp[1943420] numChunks[1943094] ret_tmp[1943431])
                                    (1943438 'move' tmpIter[1943418] ret_tmp[1943431])
                                    {
                                      const _coforallCount[1943442]:_EndCount(AtomicT(int(64)),int(64))[945532] "dead after last mention" "concurrently accessed" "const" "end count" "temp"
                                      (1943444 'move' _coforallCount[1943442](1943447 call _endCountAlloc[1228107]))
                                      const-val numTasks[1943448]:int(64)[13] "dead at end of block" "temp"
                                      (1943450 'move' numTasks[1943448](1943453 call size[1035978] tmpIter[1943418]))
                                      (1943456 call _upEndCount[1228350] _coforallCount[1943442] numTasks[1943448])
                                      (1943460 call chpl_resetTaskSpawn[1229432] numTasks[1943448])
                                      val _indexOfInterest[1943462]:int(64)[13] "dead at end of block" "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
                                      val _iterator[1943464]:_ic_these_range_int64_t_bounded_F[1096892] "dead at end of block" "expr temp" "temp"
                                      (1943466 'move' _iterator[1943464](1943469 call _getIterator[1095509] tmpIter[1943418]))
                                      {
                                        val ret[2036046]:_ir_these_range_int64_t_bounded_F[1096898] "dead after last mention" "RVV" "temp"
                                        const-val _return_tmp_[2036048]:bool[10] "dead after last mention" "temp"
                                        const-val this[2036165]:range(int(64),bounded,false)[1027003] "temp"
                                        (2036170 'move' this[2036165](2036167 '.v' _iterator[1943464] F0_this[2113071]))
                                        (2036050 'move' _return_tmp_[2036048](2036053 call checkIfIterWillOverflow[1096003] this[2036165] 1))
                                        val i[2036056]:int(64)[13] "dead at end of block" "insert auto destroy"
                                        val call_tmp[2036058]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                        (2036060 'move' i[2036056] 0)
                                        ref call_tmp[2036063]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
                                        const-val this[2036172]:range(int(64),bounded,false)[1027003] "temp"
                                        (2036177 'move' this[2036172](2036174 '.v' _iterator[1943464] F0_this[2113071]))
                                        (2036065 'move' call_tmp[2036063](2036068 call _low[1028641] this[2036172]))
                                        const-val start[2036070]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                        const-val coerce_tmp[2036072]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                        (2036074 'move' coerce_tmp[2036072](2036076 'deref' call_tmp[2036063]))
                                        (2036078 '=' start[2036070] coerce_tmp[2036072])
                                        (2036081 'noop')
                                        ref call_tmp[2036082]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
                                        const-val this[2036179]:range(int(64),bounded,false)[1027003] "temp"
                                        (2036184 'move' this[2036179](2036181 '.v' _iterator[1943464] F0_this[2113071]))
                                        (2036084 'move' call_tmp[2036082](2036087 call _high[1028849] this[2036179]))
                                        const end[2036089]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                        const-val coerce_tmp[2036091]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                        (2036093 'move' coerce_tmp[2036091](2036095 'deref' call_tmp[2036082]))
                                        (2036097 '=' end[2036089] coerce_tmp[2036091])
                                        (2036100 'noop')
                                        CForLoop[2036101]
                                        {
                                          const-val yret[2036116]:int(64)[13] "dead after last mention" "YVV" "temp"
                                          const-val call_tmp[2036118]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                                          const-val this[2036186]:range(int(64),bounded,false)[1027003] "temp"
                                          (2036191 'move' this[2036186](2036188 '.v' _iterator[1943464] F0_this[2113071]))
                                          (2036120 'move' call_tmp[2036118](2036123 call chpl_intToIdx[1028669] this[2036186] i[2036056]))
                                          (2036126 'move' yret[2036116] call_tmp[2036118])
                                          const-val _yieldedIndex[2036140]:int(64)[13] "coforall index var" "temp"
                                          (2036163 'move' _yieldedIndex[2036140] call_tmp[2036118])
                                          {
                                            const-val chunk[2036142]:int(64)[13] "coforall index var" "const" "index var" "insert auto destroy"
                                            (2036144 'move' chunk[2036142] _yieldedIndex[2036140])
                                            val dummy_error[2036147]:Error[167984] "concurrently accessed" "error variable" "temp"
                                            val _args_forcoforall_fn[2217428]:_class_localscoforall_fn[2217408] "temp"
                                            (2217432 'move' _args_forcoforall_fn[2217428](2217430 'stack allocate class' _class_localscoforall_fn[2217408]))
                                            (2217434 '.=' _args_forcoforall_fn[2217428] _0_locBlock[2217411] locBlock[1943304])
                                            (2217438 '.=' _args_forcoforall_fn[2217428] _1_parDim[2217413] parDim[1943113])
                                            (2217442 '.=' _args_forcoforall_fn[2217428] _2_numChunks[2217415] numChunks[1943094])
                                            (2217446 '.=' _args_forcoforall_fn[2217428] _3_chunk[2217417] chunk[2036142])
                                            (2217450 '.=' _args_forcoforall_fn[2217428] _4__coforallCount[2217419] _coforallCount[1943442])
                                            ref tmp[2217454]:1*int(64)[1256714] "temp"
                                            (2217458 'move' tmp[2217454](2217456 'set reference' default_arg_offset[1942931]))
                                            (2217460 '.=' _args_forcoforall_fn[2217428] _6_default_arg_offset[2217423] tmp[2217454])
                                            ref tmp[2217464]:2*[domain(1,int(64),false)] real(64)[1537560] "temp"
                                            (2217468 'move' tmp[2217464](2217466 'set reference' chpl__iterLF[1546661]))
                                            (2217470 '.=' _args_forcoforall_fn[2217428] _7_chpl__iterLF[2217425] tmp[2217464])
                                            val _args_vforcoforall_fn[2217474]:c_void_ptr[149] "temp"
                                            (2217478 'move' _args_vforcoforall_fn[2217474](2217476 'cast_to_void_star' _args_forcoforall_fn[2217428]))
                                            val _args_sizecoforall_fn[2217480]:int(64)[13] "temp"
                                            (2217484 'move' _args_sizecoforall_fn[2217480](2217482 'sizeof_bundle' _class_localscoforall_fn[2217408]))
                                            ref _taskListcoforall_fn[2217486]:c_void_ptr[149] "temp"
                                            (2217491 'move' _taskListcoforall_fn[2217486](2217488 '.' _coforallCount[1943442] taskList[12712]))
                                            val _taskListNodecoforall_fn[2217493]:int(64)[13] "temp"
                                            (2217497 'move' _taskListNodecoforall_fn[2217493](2217495 '_wide_get_node' _coforallCount[1943442]))
                                            (2217588 call wrapcoforall_fn[2217499] _taskListcoforall_fn[2217486] _taskListNodecoforall_fn[2217493] _args_vforcoforall_fn[2217474] _args_sizecoforall_fn[2217480] _args_forcoforall_fn[2217428])
                                            {
                                            }
                                            label _continueLabel[2036160]
                                          }
                                          {
                                            (2036103 '=' i[2036056] coerce_tmp[2036072])
                                          }
                                          {
                                            (2036107 '<=' i[2036056] end[2036089])
                                          }
                                          {
                                            val call_tmp[2036111]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                            (2036113 '+=' i[2036056] 1)
                                          }
                                        }
                                        label _endthese[2036136]
                                      }
                                      label _breakLabel[1943493]
                                      val error[1943495]:Error[167984] "error variable" "temp"
                                      (1943497 'move' error[1943495] nil[44])
                                      (1943501 call _waitEndCount[1235226] _coforallCount[1943442] numTasks[1943448] error[1943495])
                                      val errorExists[2225968]:bool[10] "temp"
                                      (2225973 'move' errorExists[2225968](2225970 '!=' error[1943495] nil[44]))
                                      if errorExists[2225968]
                                      {
                                        (1943509 call chpl_propagate_error[170518] error[1943495])
                                      }
                                      (1943513 call _endCountFree[1234049] _coforallCount[1943442])
                                      (1943516 call _freeIterator[1102195] _iterator[1943464])
                                    }
                                    (1943519 call chpl__autoDestroy[1407763] tmpIter[1943418])
                                    (1943522 call chpl__autoDestroy[1680875] call_tmp[1943420])
                                  }
                                  (1943525 call chpl__autoDestroy[1695146] locBlock[1943304])
                                }
                                (1943529 call chpl__autoDestroy[1674803] tmp[1943025])
                              }
                              (1943532 call chpl__autoDestroy[1601737] call_tmp[1942952])
                              label _endthese[1943534]
                            }
                          }
                          (1943537 call chpl_after_forall_fence[13071])
                          (1943539 call chpl__autoDestroy[1697253] default_arg_offset[1942931])
                          label _breakLabel[1943541]
                        }
                        label _endthese[1943543]
                      }
                    }
                    (1943546 call chpl_after_forall_fence[13071])
                    label _breakLabel[1943547]
                  }
                  label _endthese[1943549]
                }
              }
              (1930483 call chpl_after_forall_fence[13071])
              (1927136 call chpl__autoDestroy[1822251] chpl__iterLF[1546661])
            }
          }
        }
      }
    }
    (1546562 return _void[55])
  }
  function chpl__transferArray[1549776](ref arg a[1549778]:_ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055], const  ref arg b[1549780]:_ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055]) : void[4] "inline" "instantiated generic" "invisible fn" "resolved" "ignore transfer errors" "find user line" "no return value for void"
  {
    val call_tmp[1549803]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1549811]:_RuntimeTypeInfo[1366262] "dead after last mention" "expr temp" "maybe param" "temp"
    (1549813 'move' call_tmp[1549811](1551372 call chpl__convertValueToRuntimeType[1517719] b[1549780]))
    val call_tmp[1549862]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1549908]:_RuntimeTypeInfo[1366262] "dead after last mention" "expr temp" "maybe param" "temp"
    (1549910 'move' call_tmp[1549908](1551389 call chpl__convertValueToRuntimeType[1517719] b[1549780]))
    {
      {
        {
          {
            {
              const-val chpl__iterLF[1551513]:2*[domain(1,int(64),false)] real(64)[1537560] "dead at end of block" "chpl__iter" "chpl__iter_newstyle" "expr temp" "insert auto destroy" "no copy" "temp"
              const-val ret_tmp[1916441]:2*[domain(1,int(64),false)] real(64)[1537560] "temp"
              (1551510 call _build_tuple[1537518] a[1549778] b[1549780] ret_tmp[1916441])
              (1916444 'move' chpl__iterLF[1551513] ret_tmp[1916441])
              {
                {
                  val ret[1944008]:nothing[7] "dead after last mention" "RVV" "temp"
                  {
                    val call_tmp[1944011]:[domain(1,int(64),false)] real(64)[1358944] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1944013 'move' call_tmp[1944011](1944016 call _value[1366084] a[1549778]))
                    val coerce_tmp[1944018]:[domain(1,int(64),false)] real(64)[1358944] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1944020 'move' coerce_tmp[1944018] call_tmp[1944011])
                    const-val default_arg_tasksPerLocale[1944023]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                    (1944025 'move' default_arg_tasksPerLocale[1944023](1944028 call these_default_tasksPerLocale[1536543] coerce_tmp[1944018]))
                    const-val default_arg_ignoreRunning[1944030]:bool[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                    (1944032 'move' default_arg_ignoreRunning[1944030](1944035 call these_default_ignoreRunning[1536574] coerce_tmp[1944018]))
                    const-val default_arg_minIndicesPerTask[1944037]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                    (1944039 'move' default_arg_minIndicesPerTask[1944037](1944042 call these_default_minIndicesPerTask[1536605] coerce_tmp[1944018]))
                    {
                      {
                        val ret[1944046]:nothing[7] "dead after last mention" "RVV" "temp"
                        {
                          ref call_tmp[1944049]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
                          (1944051 'move' call_tmp[1944049](1944054 call dom[1360329] coerce_tmp[1944018]))
                          val coerce_tmp[1944056]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (1944058 'move' coerce_tmp[1944056](1944060 'deref' call_tmp[1944049]))
                          val coerce_tmp[1944062]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (1944064 'move' coerce_tmp[1944062] coerce_tmp[1944056])
                          val default_arg_offset[1944067]:1*int(64)[1256714] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
                          const-val ret_tmp[1944069]:1*int(64)[1256714] "temp"
                          (1944072 call these_default_offset[1478388] coerce_tmp[1944062] ret_tmp[1944069])
                          (1944075 'move' default_arg_offset[1944067] ret_tmp[1944069])
                          {
                            const-ref i_offset[1944079]:1*int(64)[1256714] "temp"
                            (1944081 'move' i_offset[1944079](1944083 'set reference' default_arg_offset[1944067]))
                            {
                              val ret[1944086]:nothing[7] "dead after last mention" "RVV" "temp"
                              const-val call_tmp[1944088]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
                              const-val ret_tmp[1944090]:locale[28] "temp"
                              (1944093 call here[90438] ret_tmp[1944090])
                              (1944095 'move' call_tmp[1944088] ret_tmp[1944090])
                              const-val call_tmp[1944098]:int(64)[13] "dead at end of block" "maybe param" "temp"
                              (1944100 'move' call_tmp[1944098](1944103 call getChildCount[90353] call_tmp[1944088]))
                              const-val numSublocs[1944105]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                              (1944107 'move' numSublocs[1944105] call_tmp[1944098])
                              {
                                const-val numTasks[1944111]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                val tmp[1944113]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
                                const-val tmp[1944115]:bool[10] "dead after last mention" "maybe param" "temp"
                                const-val call_tmp[1944117]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1944119 'move' call_tmp[1944117](1944122 call ==[435744] default_arg_tasksPerLocale[1944023] 0))
                                (1944125 'move' tmp[1944115] call_tmp[1944117])
                                if tmp[1944115]
                                {
                                  const-val tmp[1944130]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
                                  const-val call_tmp[1944132]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
                                  const-val ret_tmp[1944134]:locale[28] "temp"
                                  (1944137 call here[90438] ret_tmp[1944134])
                                  (1944139 'move' call_tmp[1944132] ret_tmp[1944134])
                                  (1944142 'move' tmp[1944130](1944145 call maxTaskPar[90545] call_tmp[1944132]))
                                  (1944147 'move' tmp[1944113] tmp[1944130])
                                  (1944151 call chpl__autoDestroy[1601737] call_tmp[1944132])
                                }
                                {
                                  (1944154 'move' tmp[1944113] default_arg_tasksPerLocale[1944023])
                                }
                                (1944158 'move' numTasks[1944111] tmp[1944113])
                                const-val tmp[1944161]:2*int(64)[1040245] "dead at end of block" "const" "insert auto destroy" "temp"
                                val tmp[1944163]:2*int(64)[1040245] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                                const-val tmp[1944165]:bool[10] "dead after last mention" "maybe param" "temp"
                                const-val call_tmp[1944167]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1944169 'move' call_tmp[1944167](1944171 'task_get_serial'))
                                (1944172 'move' tmp[1944165] call_tmp[1944167])
                                if tmp[1944165]
                                {
                                  const-val tmp[1944177]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                                  const-val ret_tmp[1944179]:2*int(64)[1040245] "temp"
                                  (1944182 call _build_tuple[1040203] 1 -1 ret_tmp[1944179])
                                  (1944186 'move' tmp[1944177] ret_tmp[1944179])
                                  (1944189 'move' tmp[1944163] tmp[1944177])
                                }
                                {
                                  const-val tmp[1944193]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                                  ref call_tmp[1944195]:_ref(1*range(int(64),bounded,false))[1244943] "dead at end of block" "maybe param" "temp"
                                  (1944197 'move' call_tmp[1944195](1944200 call ranges[1251533] coerce_tmp[1944062]))
                                  const-val ret_tmp[1944202]:2*int(64)[1040245] "temp"
                                  (1944205 call _computeChunkStuff[1381155] numTasks[1944111] default_arg_ignoreRunning[1944030] default_arg_minIndicesPerTask[1944037] call_tmp[1944195] ret_tmp[1944202])
                                  (1944211 'move' tmp[1944193] ret_tmp[1944202])
                                  (1944214 'move' tmp[1944163] tmp[1944193])
                                }
                                (1944218 '=' tmp[1944161] tmp[1944163])
                                (1944221 'noop')
                                1
                                ref call_tmp[1944223]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
                                (1944225 'move' call_tmp[1944223](1944227 '.' tmp[1944161] x0[1040241]))
                                const-val numChunks[1944230]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                const-val coerce_tmp[1944232]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                (1944234 'move' coerce_tmp[1944232](1944236 'deref' call_tmp[1944223]))
                                (1944238 '=' numChunks[1944230] coerce_tmp[1944232])
                                (1944241 'noop')
                                ref call_tmp[1944242]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
                                (1944244 'move' call_tmp[1944242](1944246 '.' tmp[1944161] x1[1040243]))
                                const-val parDim[1944249]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                const-val coerce_tmp[1944251]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                (1944253 'move' coerce_tmp[1944251](1944255 'deref' call_tmp[1944242]))
                                (1944257 '=' parDim[1944249] coerce_tmp[1944251])
                                (1944260 'noop')
                                const-val call_tmp[1944261]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1944263 'move' call_tmp[1944261](1944266 call ==[435744] numChunks[1944230] 1))
                                const-val call_tmp[1944269]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1944271 'move' call_tmp[1944269] call_tmp[1944261])
                                if call_tmp[1944269]
                                {
                                  {
                                    const-val yret[1944277]:1*range(int(64),bounded,false)[1244885] "dead after last mention" "YVV" "temp"
                                    ref call_tmp[1944279]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
                                    (1944281 'move' call_tmp[1944279](1944283 '.' i_offset[1944079] x0[1256712]))
                                    const-val call_tmp[1944286]:range(int(64),boundedLow,false)[1087754] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                    const-val coerce_tmp[1944288]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1944290 'move' coerce_tmp[1944288](1944292 'deref' call_tmp[1944279]))
                                    const-val ret_tmp[1944294]:range(int(64),boundedLow,false)[1087754] "temp"
                                    (1944297 call chpl_build_low_bounded_range[1087147] coerce_tmp[1944288] ret_tmp[1944294])
                                    (1944300 'move' call_tmp[1944286] ret_tmp[1944294])
                                    ref call_tmp[1944303]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
                                    ref _this_tmp_[1944305]:_ref(1*range(int(64),bounded,false))[1244943] "dead after last mention" "temp"
                                    (1944307 'move' _this_tmp_[1944305](1944310 call ranges[1251533] coerce_tmp[1944062]))
                                    (1944312 'move' call_tmp[1944303](1944314 '.' _this_tmp_[1944305] x0[1244883]))
                                    const-val call_tmp[1944317]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                                    const-val coerce_tmp[1944319]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1944321 'move' coerce_tmp[1944319](1944324 call chpl__initCopy[1085195] call_tmp[1944303]))
                                    (1944326 'move' call_tmp[1944317](1944329 call size[1035978] coerce_tmp[1944319]))
                                    const-val call_tmp[1944331]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                    const-val ret_tmp[1944333]:range(int(64),bounded,false)[1027003] "temp"
                                    (1944336 call #[1088114] call_tmp[1944286] call_tmp[1944317] ret_tmp[1944333])
                                    (1944340 'move' call_tmp[1944331] ret_tmp[1944333])
                                    const-val call_tmp[1944343]:1*range(int(64),bounded,false)[1244885] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                    const-val ret_tmp[1944345]:1*range(int(64),bounded,false)[1244885] "temp"
                                    (1944348 call _build_tuple[1478664] call_tmp[1944331] ret_tmp[1944345])
                                    (1944351 'move' call_tmp[1944343] ret_tmp[1944345])
                                    (1944354 'move' yret[1944277] call_tmp[1944343])
                                    const-val _indexOfInterest[1944357]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
                                    (1944359 'move' _indexOfInterest[1944357] yret[1944277])
                                    {
                                      const-val followThis[1944363]:1*range(int(64),bounded,false)[1244885] "const" "index var" "insert auto destroy" "maybe copy elided"
                                      (1944365 'move' followThis[1944363] _indexOfInterest[1944357])
                                      const-val yret[1944368]:1*range(int(64),bounded,false)[1244885] "dead after last mention" "YVV" "temp"
                                      const-val _yield_expr_tmp_[1944370]:1*range(int(64),bounded,false)[1244885] "temp"
                                      (1944372 '=' _yield_expr_tmp_[1944370] followThis[1944363])
                                      (1944375 'noop')
                                      (1944376 'move' yret[1944368] _yield_expr_tmp_[1944370])
                                      const-val _indexOfInterest[1944379]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
                                      (1944381 'move' _indexOfInterest[1944379] yret[1944368])
                                      {
                                        const-val followThis[1944385]:1*range(int(64),bounded,false)[1244885] "const" "index var" "insert auto destroy" "maybe copy elided"
                                        (1944387 'move' followThis[1944385] _indexOfInterest[1944379])
                                        const-val yret[1944390]:1*range(int(64),bounded,false)[1244885] "dead after last mention" "YVV" "temp"
                                        const-val _yield_expr_tmp_[1944392]:1*range(int(64),bounded,false)[1244885] "temp"
                                        (1944394 '=' _yield_expr_tmp_[1944392] followThis[1944385])
                                        (1944397 'noop')
                                        (1944398 'move' yret[1944390] _yield_expr_tmp_[1944392])
                                        const-val chpl_followThis[1944689]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "index var" "an _indexOfInterest or chpl__followIdx variable" "insert auto destroy" "temp"
                                        (1944691 'move' chpl_followThis[1944689] yret[1944390])
                                        {
                                          {
                                          }
                                          {
                                            const-val chpl__followIter[1944696]:2*_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1541656] "dead at end of block" "temp"
                                            const-val call_tmp[1944698]:2*_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1540404] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
                                            const-val ret_tmp[1944700]:2*_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1540404] "temp"
                                            (1944703 call _toFollowerZip[1538565] chpl__iterLF[1551513] chpl_followThis[1944689] ret_tmp[1944700])
                                            (1944707 'move' call_tmp[1944698] ret_tmp[1944700])
                                            const-val ret_tmp[1944710]:2*_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1541656] "temp"
                                            (1944713 call _getIteratorZip[1540532] call_tmp[1944698] ret_tmp[1944710])
                                            (1944716 'move' chpl__followIter[1944696] ret_tmp[1944710])
                                            val _iterator[2036909]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539699] "temp"
                                            (2036915 'move' _iterator[2036909](2036912 '.v' chpl__followIter[1944696] x0[1541652]))
                                            val _iterator[2036922]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539699] "temp"
                                            (2036928 'move' _iterator[2036922](2036925 '.v' chpl__followIter[1944696] x1[1541654]))
                                            {
                                              (2036937 call zip1[1539734] _iterator[2036909])
                                            }
                                            {
                                              (2036972 call zip1[1539734] _iterator[2036922])
                                            }
                                            const-val isFinished[2036998]:bool[10] "temp"
                                            val hasMore[2036997]:bool[10] "temp"
                                            CForLoop[2037045] order-independent
                                            {
                                              val chpl__followIdx[2037046]:2*real(64)[1542559] "dead at end of block" "follower index" "index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
                                              {
                                                (2037050 call zip2[1539743] _iterator[2036922])
                                              }
                                              {
                                                const-val retTmp[2037053]:int(64)[13] "temp"
                                                (2037055 'move' retTmp[2037053](2037058 call hasMore[1539770] _iterator[2036922]))
                                                (2037060 'move' hasMore[2036997](2037062 'cast' bool[10] retTmp[2037053]))
                                              }
                                              (2037065 'move' isFinished[2036998](2037067 '!' hasMore[2036997]))
                                              if isFinished[2036998]
                                              {
                                                (2037071 'chpl_error' c"zippered iterations have non-equal lengths")
                                              }
                                              {
                                                (2037075 'move' _index[2037090](2037078 call getValue[1539779] _iterator[2036922]))
                                              }
                                              {
                                                (2037082 call zip2[1539743] _iterator[2036909])
                                              }
                                              {
                                                (2037085 'move' _index[2037096](2037088 call getValue[1539779] _iterator[2036909]))
                                              }
                                              ref _index[2037090]:_ref(real(64))[936906] "temp"
                                              (2037092 '.=' chpl__followIdx[2037046] x1[1542557] _index[2037090])
                                              ref _index[2037096]:_ref(real(64))[936906] "temp"
                                              (2037098 '.=' chpl__followIdx[2037046] x0[1542555] _index[2037096])
                                              {
                                                ref aa[2037103]:_ref(real(64))[936906] "index var" "insert auto destroy"
                                                ref bb[2037105]:_ref(real(64))[936906] "index var" "insert auto destroy"
                                                (2037107 'move' aa[2037103](2037109 '.v' chpl__followIdx[2037046] x0[1542555]))
                                                (2037112 'move' bb[2037105](2037114 '.v' chpl__followIdx[2037046] x1[1542557]))
                                                {
                                                  const-val coerce_tmp[2037118]:real(64)[16] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                                  (2037120 'move' coerce_tmp[2037118](2037122 'deref' bb[2037105]))
                                                  (2037125 call =[435569] aa[2037103] coerce_tmp[2037118])
                                                  val optinfo[2037128]:int(64)[13] "no codegen" "temp" "lhs outlives forall" "forall no task private"
                                                  (2037130 'optimization info' optinfo[2037128])
                                                }
                                              }
                                              {
                                                (2037134 call zip3[1539752] _iterator[2036909])
                                              }
                                              {
                                                (2037138 call zip3[1539752] _iterator[2036922])
                                              }
                                              {
                                                {
                                                  (2036947 call init[1539788] _iterator[2036909])
                                                }
                                                {
                                                  (2036982 call init[1539788] _iterator[2036922])
                                                }
                                              }
                                              {
                                                (2036963 call hasMore[1539770] _iterator[2036909])
                                              }
                                              {
                                                {
                                                  (2036951 call incr[1539797] _iterator[2036909])
                                                }
                                                {
                                                  (2036986 call incr[1539797] _iterator[2036922])
                                                }
                                              }
                                            }
                                            {
                                              const-val retTmp[2037032]:int(64)[13] "temp"
                                              (2037034 'move' retTmp[2037032](2037029 call hasMore[1539770] _iterator[2036922]))
                                              (2037039 'move' hasMore[2036997](2037036 'cast' bool[10] retTmp[2037032]))
                                            }
                                            if hasMore[2036997]
                                            {
                                              (2037024 'chpl_error' c"zippered iterations have non-equal lengths")
                                            }
                                            {
                                              (2036994 call zip4[1539761] _iterator[2036922])
                                            }
                                            {
                                              (2036959 call zip4[1539761] _iterator[2036909])
                                            }
                                            (1944755 call _freeIterator[1541735] chpl__followIter[1944696])
                                            (1944758 call chpl__autoDestroy[1822526] call_tmp[1944698])
                                          }
                                          (1944761 call chpl__autoDestroy[1695146] chpl_followThis[1944689])
                                        }
                                        label _continueLabel[1944426]
                                      }
                                      label _continueLabel[1944428]
                                    }
                                    (1944431 call chpl__autoDestroy[1407763] call_tmp[1944331])
                                    (1944434 call chpl__autoDestroy[1407763] coerce_tmp[1944319])
                                    (1944437 call chpl__autoDestroy[1680875] call_tmp[1944286])
                                  }
                                }
                                {
                                  const-val locBlock[1944440]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "insert auto destroy"
                                  val call_tmp[1944442]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  val call_tmp[1944444]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  val call_tmp[1944446]:1*range(int(64),bounded,false)[1244885] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  const-val ret_tmp[1944448]:1*range(int(64),bounded,false)[1244885] "temp"
                                  (1944451 call _defaultOf[1251254] ret_tmp[1944448])
                                  (1944453 'move' locBlock[1944440] ret_tmp[1944448])
                                  {
                                    const-val i[1944457]:int(64)[13] "dead at end of block" "insert auto destroy"
                                    (1944459 'move' i[1944457] 0)
                                    {
                                      ref call_tmp[1944463]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
                                      (1944465 'move' call_tmp[1944463](1944467 '.' locBlock[1944440] x0[1244883]))
                                      ref call_tmp[1944470]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
                                      (1944472 'move' call_tmp[1944470](1944474 '.' i_offset[1944079] x0[1256712]))
                                      const-val call_tmp[1944477]:range(int(64),boundedLow,false)[1087754] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                      const-val coerce_tmp[1944479]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                      (1944481 'move' coerce_tmp[1944479](1944483 'deref' call_tmp[1944470]))
                                      const-val ret_tmp[1944485]:range(int(64),boundedLow,false)[1087754] "temp"
                                      (1944488 call chpl_build_low_bounded_range[1087147] coerce_tmp[1944479] ret_tmp[1944485])
                                      (1944491 'move' call_tmp[1944477] ret_tmp[1944485])
                                      ref call_tmp[1944494]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
                                      ref _this_tmp_[1944496]:_ref(1*range(int(64),bounded,false))[1244943] "dead after last mention" "temp"
                                      (1944498 'move' _this_tmp_[1944496](1944501 call ranges[1251533] coerce_tmp[1944062]))
                                      (1944503 'move' call_tmp[1944494](1944505 '.' _this_tmp_[1944496] x0[1244883]))
                                      const-val call_tmp[1944508]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                                      const-val coerce_tmp[1944510]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                      (1944512 'move' coerce_tmp[1944510](1944515 call chpl__initCopy[1085195] call_tmp[1944494]))
                                      (1944517 'move' call_tmp[1944508](1944520 call size[1035978] coerce_tmp[1944510]))
                                      const-val call_tmp[1944522]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                      const-val ret_tmp[1944524]:range(int(64),bounded,false)[1027003] "temp"
                                      (1944527 call #[1088114] call_tmp[1944477] call_tmp[1944508] ret_tmp[1944524])
                                      (1944531 'move' call_tmp[1944522] ret_tmp[1944524])
                                      (1944535 call =[1251739] call_tmp[1944463] call_tmp[1944522])
                                      (1944539 call chpl__autoDestroy[1407763] call_tmp[1944522])
                                      (1944542 call chpl__autoDestroy[1407763] coerce_tmp[1944510])
                                      (1944545 call chpl__autoDestroy[1680875] call_tmp[1944477])
                                    }
                                    label _continueLabel0[1944547]
                                    label _unused_continueLabel[1944549]
                                    label _breakLabel[1944551]
                                  }
                                  {
                                    const-val tmpIter[1944554]:range(int(64),bounded,false)[1027003] "dead at end of block" "expr temp" "insert auto destroy" "maybe ref" "no copy" "temp"
                                    const-val call_tmp[1944556]:range(int(64),boundedLow,false)[1087754] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
                                    const-val ret_tmp[1944558]:range(int(64),boundedLow,false)[1087754] "temp"
                                    (1944561 call chpl_build_low_bounded_range[1087147] 0 ret_tmp[1944558])
                                    (1944564 'move' call_tmp[1944556] ret_tmp[1944558])
                                    const-val ret_tmp[1944567]:range(int(64),bounded,false)[1027003] "temp"
                                    (1944570 call #[1088114] call_tmp[1944556] numChunks[1944230] ret_tmp[1944567])
                                    (1944574 'move' tmpIter[1944554] ret_tmp[1944567])
                                    {
                                      const _coforallCount[1944578]:_EndCount(AtomicT(int(64)),int(64))[945532] "dead after last mention" "concurrently accessed" "const" "end count" "temp"
                                      (1944580 'move' _coforallCount[1944578](1944583 call _endCountAlloc[1228107]))
                                      const-val numTasks[1944584]:int(64)[13] "dead at end of block" "temp"
                                      (1944586 'move' numTasks[1944584](1944589 call size[1035978] tmpIter[1944554]))
                                      (1944592 call _upEndCount[1228350] _coforallCount[1944578] numTasks[1944584])
                                      (1944596 call chpl_resetTaskSpawn[1229432] numTasks[1944584])
                                      val _indexOfInterest[1944598]:int(64)[13] "dead at end of block" "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
                                      val _iterator[1944600]:_ic_these_range_int64_t_bounded_F[1096892] "dead at end of block" "expr temp" "temp"
                                      (1944602 'move' _iterator[1944600](1944605 call _getIterator[1095509] tmpIter[1944554]))
                                      {
                                        val ret[2036760]:_ir_these_range_int64_t_bounded_F[1096898] "dead after last mention" "RVV" "temp"
                                        const-val _return_tmp_[2036762]:bool[10] "dead after last mention" "temp"
                                        const-val this[2036879]:range(int(64),bounded,false)[1027003] "temp"
                                        (2036884 'move' this[2036879](2036881 '.v' _iterator[1944600] F0_this[2113071]))
                                        (2036764 'move' _return_tmp_[2036762](2036767 call checkIfIterWillOverflow[1096003] this[2036879] 1))
                                        val i[2036770]:int(64)[13] "dead at end of block" "insert auto destroy"
                                        val call_tmp[2036772]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                        (2036774 'move' i[2036770] 0)
                                        ref call_tmp[2036777]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
                                        const-val this[2036886]:range(int(64),bounded,false)[1027003] "temp"
                                        (2036891 'move' this[2036886](2036888 '.v' _iterator[1944600] F0_this[2113071]))
                                        (2036779 'move' call_tmp[2036777](2036782 call _low[1028641] this[2036886]))
                                        const-val start[2036784]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                        const-val coerce_tmp[2036786]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                        (2036788 'move' coerce_tmp[2036786](2036790 'deref' call_tmp[2036777]))
                                        (2036792 '=' start[2036784] coerce_tmp[2036786])
                                        (2036795 'noop')
                                        ref call_tmp[2036796]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
                                        const-val this[2036893]:range(int(64),bounded,false)[1027003] "temp"
                                        (2036898 'move' this[2036893](2036895 '.v' _iterator[1944600] F0_this[2113071]))
                                        (2036798 'move' call_tmp[2036796](2036801 call _high[1028849] this[2036893]))
                                        const end[2036803]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                        const-val coerce_tmp[2036805]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                        (2036807 'move' coerce_tmp[2036805](2036809 'deref' call_tmp[2036796]))
                                        (2036811 '=' end[2036803] coerce_tmp[2036805])
                                        (2036814 'noop')
                                        CForLoop[2036815]
                                        {
                                          const-val yret[2036830]:int(64)[13] "dead after last mention" "YVV" "temp"
                                          const-val call_tmp[2036832]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                                          const-val this[2036900]:range(int(64),bounded,false)[1027003] "temp"
                                          (2036905 'move' this[2036900](2036902 '.v' _iterator[1944600] F0_this[2113071]))
                                          (2036834 'move' call_tmp[2036832](2036837 call chpl_intToIdx[1028669] this[2036900] i[2036770]))
                                          (2036840 'move' yret[2036830] call_tmp[2036832])
                                          const-val _yieldedIndex[2036854]:int(64)[13] "coforall index var" "temp"
                                          (2036877 'move' _yieldedIndex[2036854] call_tmp[2036832])
                                          {
                                            const-val chunk[2036856]:int(64)[13] "coforall index var" "const" "index var" "insert auto destroy"
                                            (2036858 'move' chunk[2036856] _yieldedIndex[2036854])
                                            val dummy_error[2036861]:Error[167984] "concurrently accessed" "error variable" "temp"
                                            val _args_forcoforall_fn[2217614]:_class_localscoforall_fn[2217594] "temp"
                                            (2217618 'move' _args_forcoforall_fn[2217614](2217616 'stack allocate class' _class_localscoforall_fn[2217594]))
                                            (2217620 '.=' _args_forcoforall_fn[2217614] _0_locBlock[2217597] locBlock[1944440])
                                            (2217624 '.=' _args_forcoforall_fn[2217614] _1_parDim[2217599] parDim[1944249])
                                            (2217628 '.=' _args_forcoforall_fn[2217614] _2_numChunks[2217601] numChunks[1944230])
                                            (2217632 '.=' _args_forcoforall_fn[2217614] _3_chunk[2217603] chunk[2036856])
                                            (2217636 '.=' _args_forcoforall_fn[2217614] _4__coforallCount[2217605] _coforallCount[1944578])
                                            ref tmp[2217640]:1*int(64)[1256714] "temp"
                                            (2217644 'move' tmp[2217640](2217642 'set reference' default_arg_offset[1944067]))
                                            (2217646 '.=' _args_forcoforall_fn[2217614] _6_default_arg_offset[2217609] tmp[2217640])
                                            ref tmp[2217650]:2*[domain(1,int(64),false)] real(64)[1537560] "temp"
                                            (2217654 'move' tmp[2217650](2217652 'set reference' chpl__iterLF[1551513]))
                                            (2217656 '.=' _args_forcoforall_fn[2217614] _7_chpl__iterLF[2217611] tmp[2217650])
                                            val _args_vforcoforall_fn[2217660]:c_void_ptr[149] "temp"
                                            (2217664 'move' _args_vforcoforall_fn[2217660](2217662 'cast_to_void_star' _args_forcoforall_fn[2217614]))
                                            val _args_sizecoforall_fn[2217666]:int(64)[13] "temp"
                                            (2217670 'move' _args_sizecoforall_fn[2217666](2217668 'sizeof_bundle' _class_localscoforall_fn[2217594]))
                                            ref _taskListcoforall_fn[2217672]:c_void_ptr[149] "temp"
                                            (2217677 'move' _taskListcoforall_fn[2217672](2217674 '.' _coforallCount[1944578] taskList[12712]))
                                            val _taskListNodecoforall_fn[2217679]:int(64)[13] "temp"
                                            (2217683 'move' _taskListNodecoforall_fn[2217679](2217681 '_wide_get_node' _coforallCount[1944578]))
                                            (2217774 call wrapcoforall_fn[2217685] _taskListcoforall_fn[2217672] _taskListNodecoforall_fn[2217679] _args_vforcoforall_fn[2217660] _args_sizecoforall_fn[2217666] _args_forcoforall_fn[2217614])
                                            {
                                            }
                                            label _continueLabel[2036874]
                                          }
                                          {
                                            (2036817 '=' i[2036770] coerce_tmp[2036786])
                                          }
                                          {
                                            (2036821 '<=' i[2036770] end[2036803])
                                          }
                                          {
                                            val call_tmp[2036825]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                            (2036827 '+=' i[2036770] 1)
                                          }
                                        }
                                        label _endthese[2036850]
                                      }
                                      label _breakLabel[1944629]
                                      val error[1944631]:Error[167984] "error variable" "temp"
                                      (1944633 'move' error[1944631] nil[44])
                                      (1944637 call _waitEndCount[1235226] _coforallCount[1944578] numTasks[1944584] error[1944631])
                                      val errorExists[2225976]:bool[10] "temp"
                                      (2225981 'move' errorExists[2225976](2225978 '!=' error[1944631] nil[44]))
                                      if errorExists[2225976]
                                      {
                                        (1944645 call chpl_propagate_error[170518] error[1944631])
                                      }
                                      (1944649 call _endCountFree[1234049] _coforallCount[1944578])
                                      (1944652 call _freeIterator[1102195] _iterator[1944600])
                                    }
                                    (1944655 call chpl__autoDestroy[1407763] tmpIter[1944554])
                                    (1944658 call chpl__autoDestroy[1680875] call_tmp[1944556])
                                  }
                                  (1944661 call chpl__autoDestroy[1695146] locBlock[1944440])
                                }
                                (1944665 call chpl__autoDestroy[1674803] tmp[1944161])
                              }
                              (1944668 call chpl__autoDestroy[1601737] call_tmp[1944088])
                              label _endthese[1944670]
                            }
                          }
                          (1944673 call chpl_after_forall_fence[13071])
                          (1944675 call chpl__autoDestroy[1697253] default_arg_offset[1944067])
                          label _breakLabel[1944677]
                        }
                        label _endthese[1944679]
                      }
                    }
                    (1944682 call chpl_after_forall_fence[13071])
                    label _breakLabel[1944683]
                  }
                  label _endthese[1944685]
                }
              }
              (1930489 call chpl_after_forall_fence[13071])
              (1927183 call chpl__autoDestroy[1822251] chpl__iterLF[1551513])
            }
          }
        }
      }
    }
    (1551367 return _void[55])
  }
  function chpl__unalias[1697031](const  ref arg x[1697033]:domain(1,int(64),false)[1252786]) : domain(1,int(64),false)[1252786] "inline" "instantiated generic" "invisible fn" "resolved" "unalias fn"
  {
    val ret[1697035]:domain(1,int(64),false)[1252786] "dead after last mention" "RVV" "temp"
    val call_tmp[1697073]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[1697101]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (1697103 'move' call_tmp[1697101](1697106 call _unowned[1695487] x[1697033]))
    const-val call_tmp[1697109]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[1697161]:bool[10] "dead after last mention" "const" "temp"
    (1697163 'move' tmp[1697161](1697165 'deref' call_tmp[1697101]))
    (1697111 'move' call_tmp[1697109] tmp[1697161])
    if call_tmp[1697109]
    {
      const-val ret[1697118]:domain(1,int(64),false)[1252786] "dead at end of block" "no auto destroy"
      (1697120 'move' ret[1697118](1697167 call chpl__initCopy[1353226] x[1697033]))
      (1697124 'move' ret[1697035] ret[1697118])
      gotoReturn _end_chpl__unalias[1697148] _end_chpl__unalias[1697148]
    }
    {
      const-val ret[1697133]:domain(1,int(64),false)[1252786] "dead at end of block" "insert auto destroy" "no copy"
      (1697135 'move' ret[1697133] x[1697033])
      (1697139 'move' ret[1697035] ret[1697133])
      gotoReturn _end_chpl__unalias[1697148] _end_chpl__unalias[1697148]
    }
    label _end_chpl__unalias[1697148]
    (1697150 return ret[1697035])
  }
  function chpl__initCopy[1416184](const  ref arg rhs[1416186]:_ref(_array(unmanaged [domain(1,int(64),false)] range(int(64),bounded,false)))[1415976]) : [domain(1,int(64),false)] range(int(64),bounded,false)[1415950] "init copy fn" "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1416188]:[domain(1,int(64),false)] range(int(64),bounded,false)[1415950] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1416196]:_RuntimeTypeInfo[1417328] "dead at end of block" "expr temp" "maybe param" "temp"
    (1416198 'move' call_tmp[1416196](1416229 call chpl__convertValueToRuntimeType[1416231] rhs[1416186]))
    const-val call_tmp[1416202]:[domain(1,int(64),false)] range(int(64),bounded,false)[1415950] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1914963]:[domain(1,int(64),false)] range(int(64),bounded,false)[1415950] "temp"
    (1416207 call chpl__coerceCopy[1417344] call_tmp[1416196] rhs[1416186] ret_tmp[1914963])
    (1914966 'move' call_tmp[1416202] ret_tmp[1914963])
    const-val lhs[1416210]:[domain(1,int(64),false)] range(int(64),bounded,false)[1415950] "dead at end of block" "no copy"
    (1416212 'move' lhs[1416210] call_tmp[1416202])
    (1416216 'move' ret[1416188] lhs[1416210])
    gotoReturn _end_chpl__initCopy[1416224] _end_chpl__initCopy[1416224]
    label _end_chpl__initCopy[1416224]
    (1416226 return ret[1416188])
  }
  function chpl__initCopy[1517672](const  ref arg rhs[1517674]:_ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055]) : [domain(1,int(64),false)] real(64)[1366029] "init copy fn" "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1517676]:[domain(1,int(64),false)] real(64)[1366029] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1517684]:_RuntimeTypeInfo[1366262] "dead at end of block" "expr temp" "maybe param" "temp"
    (1517686 'move' call_tmp[1517684](1517717 call chpl__convertValueToRuntimeType[1517719] rhs[1517674]))
    const-val call_tmp[1517690]:[domain(1,int(64),false)] real(64)[1366029] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1916301]:[domain(1,int(64),false)] real(64)[1366029] "temp"
    (1517695 call chpl__coerceCopy[1517766] call_tmp[1517684] rhs[1517674] ret_tmp[1916301])
    (1916304 'move' call_tmp[1517690] ret_tmp[1916301])
    const-val lhs[1517698]:[domain(1,int(64),false)] real(64)[1366029] "dead at end of block" "no copy"
    (1517700 'move' lhs[1517698] call_tmp[1517690])
    (1517704 'move' ret[1517676] lhs[1517698])
    gotoReturn _end_chpl__initCopy[1517712] _end_chpl__initCopy[1517712]
    label _end_chpl__initCopy[1517712]
    (1517714 return ret[1517676])
  }
  function chpl__coerceMove[1287455](const  ref arg dstType[1287457]:_RuntimeTypeInfo[1253862], const  ref arg rhs[1287459]:domain(1,int(64),false)[1252786], ref arg _retArg[1913220]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812]) : void[4] "coerce fn" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "find user line"
  {
    const-val _formal_tmp_rhs[1287638]:domain(1,int(64),false)[1252786] "dead at end of block" "insert auto destroy" "no copy" "temp"
    (1287641 'move' _formal_tmp_rhs[1287638] rhs[1287459])
    const-val ret[1287461]:domain(1,int(64),false)[1252786] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1287484]:DefaultDist[1244085] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1913226]:DefaultDist[1244085] "temp"
    (1287489 call dist[1287644] _formal_tmp_rhs[1287638] ret_tmp[1913226])
    (1913229 'move' call_tmp[1287484] ret_tmp[1913226])
    val call_tmp[1287492]:DefaultDist[93992] "dead after last mention" "expr temp" "maybe param" "temp"
    (1287494 'move' call_tmp[1287492](1287497 call _value[1246607] call_tmp[1287484]))
    (1924932 call chpl__autoDestroy[1695019] call_tmp[1287484])
    val lhs[1287515]:domain(1,int(64),false)[1252786] "dead at end of block" "insert auto destroy"
    const-val _runtime_type_tmp_[1297851]:DefaultDist[1244085] "dead at end of block" "temp"
    (1297856 'move' _runtime_type_tmp_[1297851](1878437 '.v' dstType[1287457] dist[1253863]))
    const-val ret_tmp[1911690]:domain(1,int(64),false)[1252786] "temp"
    (1297849 call chpl__convertRuntimeTypeToValue[1254017] _runtime_type_tmp_[1297851] ret_tmp[1911690])
    (1911693 'move' lhs[1287515] ret_tmp[1911690])
    (1287522 call chpl_statementLevelSymbol[1287896] lhs[1287515])
    (1287525 call =[1287907] lhs[1287515] _formal_tmp_rhs[1287638])
    const-val call_tmp[1287532]:DefaultDist[1244085] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1913232]:DefaultDist[1244085] "temp"
    (1287537 call dist[1287644] lhs[1287515] ret_tmp[1913232])
    (1913235 'move' call_tmp[1287532] ret_tmp[1913232])
    val call_tmp[1287540]:DefaultDist[93992] "dead after last mention" "expr temp" "maybe param" "temp"
    (1287542 'move' call_tmp[1287540](1287545 call _value[1246607] call_tmp[1287532]))
    (1924935 call chpl__autoDestroy[1695019] call_tmp[1287532])
    (1287625 'move' ret[1287461] lhs[1287515])
    (1924938 call chpl__autoDestroy[1697012] _formal_tmp_rhs[1287638])
    gotoReturn _end_chpl__coerceMove[1287633] _end_chpl__coerceMove[1287633]
    label _end_chpl__coerceMove[1287633]
    (1913222 '=' _retArg[1913220] ret[1287461])
    (1913224 return _void[55])
  }
  function chpl__coerceCopy[1417344](const  ref arg dstType[1417346]:_RuntimeTypeInfo[1417328], const  ref arg rhs[1417348]:[domain(1,int(64),false)] range(int(64),bounded,false)[1415950], ref arg _retArg[1914969]:_ref(_array(unmanaged [domain(1,int(64),false)] range(int(64),bounded,false)))[1415976]) : void[4] "coerce fn" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "find user line"
  {
    const-val ret[1417350]:[domain(1,int(64),false)] range(int(64),bounded,false)[1415950] "dead after last mention" "RVV" "temp"
    val eltType[1417502]:range(int(64),bounded,false)[1027003] "dead at end of block" "insert auto destroy" "type variable"
    ref dom[1417512]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812] "dead at end of block" "const" "ref to immutable" "ref var"
    const-val call_tmp[1417514]:domain(1,int(64),false)[1252786] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1914981]:domain(1,int(64),false)[1252786] "temp"
    (1417519 call chpl__domainFromArrayRuntimeType[1418401] dstType[1417346] ret_tmp[1914981])
    (1914984 'move' call_tmp[1417514] ret_tmp[1914981])
    (1417521 'move' dom[1417512](1417523 'addr of' call_tmp[1417514]))
    const-val call_tmp[1417526]:[domain(1,int(64),false)] range(int(64),bounded,false)[1415950] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1914999]:[domain(1,int(64),false)] range(int(64),bounded,false)[1415950] "temp"
    (1417534 call buildArray[1418540] dom[1417512] ret_tmp[1914999])
    (1915002 'move' call_tmp[1417526] ret_tmp[1914999])
    val lhs[1417538]:[domain(1,int(64),false)] range(int(64),bounded,false)[1415950] "dead at end of block" "insert auto destroy" "no copy" "unsafe"
    (1417540 'move' lhs[1417538] call_tmp[1417526])
    val call_tmp[1417622]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead after last mention" "expr temp" "maybe param" "temp"
    (1417624 'move' call_tmp[1417622](1417627 call _value[1416005] rhs[1417348]))
    const-val call_tmp[1417630]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1507231]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1507236 'move' coerce_tmp[1507231](1507233 'cast' object[22] call_tmp[1417622]))
    (1417632 'move' call_tmp[1417630](1417635 call ==[1146] coerce_tmp[1507231] nil[44]))
    const-val call_tmp[1417638]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1417640 'move' call_tmp[1417638] call_tmp[1417630])
    if call_tmp[1417638]
    {
    }
    {
      val call_tmp[1417648]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead after last mention" "expr temp" "maybe param" "temp"
      (1417650 'move' call_tmp[1417648](1417653 call _value[1416005] lhs[1417538]))
      val call_tmp[1417656]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead after last mention" "expr temp" "maybe param" "temp"
      (1417658 'move' call_tmp[1417656](1417661 call _value[1416005] rhs[1417348]))
      const-val call_tmp[1417664]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1507241]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1507246 'move' coerce_tmp[1507241](1507243 'cast' object[22] call_tmp[1417648]))
      val coerce_tmp[1507248]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1507253 'move' coerce_tmp[1507248](1507250 'cast' object[22] call_tmp[1417656]))
      (1417666 'move' call_tmp[1417664](1417669 call ==[1146] coerce_tmp[1507241] coerce_tmp[1507248]))
      const-val call_tmp[1417672]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1417674 'move' call_tmp[1417672] call_tmp[1417664])
      if call_tmp[1417672]
      {
      }
      {
        const-val tmp[1417682]:bool[10] "dead after last mention" "maybe param" "temp"
        const-val call_tmp[1417684]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1417686 'move' call_tmp[1417684](1417689 call size[1421727] lhs[1417538]))
        (1417692 'move' tmp[1417682](1417695 call ==[435744] call_tmp[1417684] 0))
        val tmp[1417711]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        const-val tmp[1417713]:bool[10] "dead after last mention" "maybe param" "temp"
        const-val call_tmp[1417715]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1417717 'move' call_tmp[1417715] tmp[1417682])
        (1417722 'move' tmp[1417713] call_tmp[1417715])
        if tmp[1417713]
        {
          const-val tmp[1417729]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
          const-val call_tmp[1417731]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (1417733 'move' call_tmp[1417731](1417736 call size[1421727] rhs[1417348]))
          const-val call_tmp[1417739]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1417741 'move' call_tmp[1417739](1417744 call ==[435744] call_tmp[1417731] 0))
          (1417747 'move' tmp[1417729] call_tmp[1417739])
          (1417752 'move' tmp[1417711] tmp[1417729])
        }
        {
          (1417758 'move' tmp[1417711] 0)
        }
        const-val call_tmp[1417764]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1417766 'move' call_tmp[1417764] tmp[1417711])
        if call_tmp[1417764]
        {
        }
        {
          {
            (1417784 call checkArrayShapesUponAssignment[1421805] lhs[1417538] rhs[1417348])
          }
          (1417791 call chpl__uncheckedArrayTransfer[1507268] lhs[1417538] rhs[1417348])
        }
      }
    }
    val call_tmp[1417801]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead after last mention" "expr temp" "maybe param" "temp"
    (1417803 'move' call_tmp[1417801](1417806 call _value[1416005] lhs[1417538]))
    val coerce_tmp[1509974]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1509979 'move' coerce_tmp[1509974] call_tmp[1417801])
    (1417813 call dsiElementInitializationComplete[1413826] coerce_tmp[1509974])
    (1417816 'move' ret[1417350] lhs[1417538])
    (1925976 call chpl__autoDestroy[1697012] call_tmp[1417514])
    gotoReturn _end_chpl__coerceCopy[1417824] _end_chpl__coerceCopy[1417824]
    label _end_chpl__coerceCopy[1417824]
    (1914971 '=' _retArg[1914969] ret[1417350])
    (1914973 return _void[55])
  }
  function chpl__coerceCopy[1517766](const  ref arg dstType[1517768]:_RuntimeTypeInfo[1366262], const  ref arg rhs[1517770]:[domain(1,int(64),false)] real(64)[1366029], ref arg _retArg[1916307]:_ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055]) : void[4] "coerce fn" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "find user line"
  {
    const-val ret[1517772]:[domain(1,int(64),false)] real(64)[1366029] "dead after last mention" "RVV" "temp"
    val eltType[1517911]:real(64)[16] "dead at end of block" "insert auto destroy" "type variable"
    ref dom[1517921]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812] "dead at end of block" "const" "ref to immutable" "ref var"
    const-val call_tmp[1517923]:domain(1,int(64),false)[1252786] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1916337]:domain(1,int(64),false)[1252786] "temp"
    (1517928 call chpl__domainFromArrayRuntimeType[1518797] dstType[1517768] ret_tmp[1916337])
    (1916340 'move' call_tmp[1517923] ret_tmp[1916337])
    (1517930 'move' dom[1517921](1517932 'addr of' call_tmp[1517923]))
    const-val call_tmp[1517935]:[domain(1,int(64),false)] real(64)[1366029] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1916367]:[domain(1,int(64),false)] real(64)[1366029] "temp"
    (1517943 call buildArray[1518936] dom[1517921] ret_tmp[1916367])
    (1916370 'move' call_tmp[1517935] ret_tmp[1916367])
    val lhs[1517947]:[domain(1,int(64),false)] real(64)[1366029] "dead at end of block" "insert auto destroy" "no copy" "unsafe"
    (1517949 'move' lhs[1517947] call_tmp[1517935])
    val call_tmp[1518031]:[domain(1,int(64),false)] real(64)[1358944] "dead after last mention" "expr temp" "maybe param" "temp"
    (1518033 'move' call_tmp[1518031](1518036 call _value[1366084] rhs[1517770]))
    const-val call_tmp[1518039]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1544189]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1544194 'move' coerce_tmp[1544189](1544191 'cast' object[22] call_tmp[1518031]))
    (1518041 'move' call_tmp[1518039](1518044 call ==[1146] coerce_tmp[1544189] nil[44]))
    const-val call_tmp[1518047]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1518049 'move' call_tmp[1518047] call_tmp[1518039])
    if call_tmp[1518047]
    {
    }
    {
      val call_tmp[1518057]:[domain(1,int(64),false)] real(64)[1358944] "dead after last mention" "expr temp" "maybe param" "temp"
      (1518059 'move' call_tmp[1518057](1518062 call _value[1366084] lhs[1517947]))
      val call_tmp[1518065]:[domain(1,int(64),false)] real(64)[1358944] "dead after last mention" "expr temp" "maybe param" "temp"
      (1518067 'move' call_tmp[1518065](1518070 call _value[1366084] rhs[1517770]))
      const-val call_tmp[1518073]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1544199]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1544204 'move' coerce_tmp[1544199](1544201 'cast' object[22] call_tmp[1518057]))
      val coerce_tmp[1544206]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1544211 'move' coerce_tmp[1544206](1544208 'cast' object[22] call_tmp[1518065]))
      (1518075 'move' call_tmp[1518073](1518078 call ==[1146] coerce_tmp[1544199] coerce_tmp[1544206]))
      const-val call_tmp[1518081]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1518083 'move' call_tmp[1518081] call_tmp[1518073])
      if call_tmp[1518081]
      {
      }
      {
        const-val tmp[1518091]:bool[10] "dead after last mention" "maybe param" "temp"
        const-val call_tmp[1518093]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1518095 'move' call_tmp[1518093](1518098 call size[1522083] lhs[1517947]))
        (1518101 'move' tmp[1518091](1518104 call ==[435744] call_tmp[1518093] 0))
        val tmp[1518120]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        const-val tmp[1518122]:bool[10] "dead after last mention" "maybe param" "temp"
        const-val call_tmp[1518124]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1518126 'move' call_tmp[1518124] tmp[1518091])
        (1518131 'move' tmp[1518122] call_tmp[1518124])
        if tmp[1518122]
        {
          const-val tmp[1518138]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
          const-val call_tmp[1518140]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (1518142 'move' call_tmp[1518140](1518145 call size[1522083] rhs[1517770]))
          const-val call_tmp[1518148]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1518150 'move' call_tmp[1518148](1518153 call ==[435744] call_tmp[1518140] 0))
          (1518156 'move' tmp[1518138] call_tmp[1518148])
          (1518161 'move' tmp[1518120] tmp[1518138])
        }
        {
          (1518167 'move' tmp[1518120] 0)
        }
        const-val call_tmp[1518173]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1518175 'move' call_tmp[1518173] tmp[1518120])
        if call_tmp[1518173]
        {
        }
        {
          {
            (1518193 call checkArrayShapesUponAssignment[1522161] lhs[1517947] rhs[1517770])
          }
          (1518200 call chpl__uncheckedArrayTransfer[1544226] lhs[1517947] rhs[1517770])
        }
      }
    }
    val call_tmp[1518210]:[domain(1,int(64),false)] real(64)[1358944] "dead after last mention" "expr temp" "maybe param" "temp"
    (1518212 'move' call_tmp[1518210](1518215 call _value[1366084] lhs[1517947]))
    val coerce_tmp[1546839]:[domain(1,int(64),false)] real(64)[1358944] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1546844 'move' coerce_tmp[1546839] call_tmp[1518210])
    (1518222 call dsiElementInitializationComplete[1363835] coerce_tmp[1546839])
    (1518225 'move' ret[1517772] lhs[1517947])
    (1926796 call chpl__autoDestroy[1697012] call_tmp[1517923])
    gotoReturn _end_chpl__coerceCopy[1518233] _end_chpl__coerceCopy[1518233]
    label _end_chpl__coerceCopy[1518233]
    (1916309 '=' _retArg[1916307] ret[1517772])
    (1916311 return _void[55])
  }
  function chpl__coerceCopy[1517779](const  ref arg dstType[1517781]:_RuntimeTypeInfo[1366262], const in arg rhs[1517787]:real(64)[16], ref arg _retArg[1916325]:_ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055]) : void[4] "coerce fn" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "find user line"
  {
    const-val ret[1517789]:[domain(1,int(64),false)] real(64)[1366029] "dead after last mention" "RVV" "temp"
    val eltType[1590403]:real(64)[16] "dead at end of block" "insert auto destroy" "type variable"
    ref dom[1590413]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812] "dead at end of block" "const" "ref to immutable" "ref var"
    const-val call_tmp[1590415]:domain(1,int(64),false)[1252786] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1916349]:domain(1,int(64),false)[1252786] "temp"
    (1590420 call chpl__domainFromArrayRuntimeType[1518797] dstType[1517781] ret_tmp[1916349])
    (1916352 'move' call_tmp[1590415] ret_tmp[1916349])
    (1590422 'move' dom[1590413](1590424 'addr of' call_tmp[1590415]))
    const-val call_tmp[1590427]:[domain(1,int(64),false)] real(64)[1366029] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1916379]:[domain(1,int(64),false)] real(64)[1366029] "temp"
    (1590435 call buildArray[1518936] dom[1590413] ret_tmp[1916379])
    (1916382 'move' call_tmp[1590427] ret_tmp[1916379])
    const-val lhs[1590439]:[domain(1,int(64),false)] real(64)[1366029] "dead at end of block" "insert auto destroy" "no copy" "unsafe"
    (1590441 'move' lhs[1590439] call_tmp[1590427])
    {
      ref i_this[1945141]:_ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055] "ref to immutable" "temp"
      (1945145 'move' i_this[1945141](1945143 'set reference' lhs[1590439]))
      const-val rhs[1945628]:real(64)[16]
      (1945631 'move' rhs[1945628] rhs[1517787])
      {
        val ret[1945148]:nothing[7] "dead after last mention" "RVV" "temp"
        {
          val call_tmp[1945151]:[domain(1,int(64),false)] real(64)[1358944] "dead after last mention" "expr temp" "maybe param" "temp"
          (1945153 'move' call_tmp[1945151](1945156 call _value[1366084] i_this[1945141]))
          val coerce_tmp[1945158]:[domain(1,int(64),false)] real(64)[1358944] "dead after last mention" "coerce temp" "concurrently accessed" "insert auto destroy" "temp"
          (1945160 'move' coerce_tmp[1945158] call_tmp[1945151])
          const-val default_arg_tasksPerLocale[1945163]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
          (1945165 'move' default_arg_tasksPerLocale[1945163](1945168 call these_default_tasksPerLocale[1389126] coerce_tmp[1945158]))
          const-val default_arg_ignoreRunning[1945170]:bool[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
          (1945172 'move' default_arg_ignoreRunning[1945170](1945175 call these_default_ignoreRunning[1389157] coerce_tmp[1945158]))
          const-val default_arg_minIndicesPerTask[1945177]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
          (1945179 'move' default_arg_minIndicesPerTask[1945177](1945182 call these_default_minIndicesPerTask[1389188] coerce_tmp[1945158]))
          {
            {
              val ret[1945186]:nothing[7] "dead after last mention" "RVV" "temp"
              {
                ref call_tmp[1945189]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
                (1945191 'move' call_tmp[1945189](1945194 call dom[1360329] coerce_tmp[1945158]))
                val coerce_tmp[1945196]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1945198 'move' coerce_tmp[1945196](1945200 'deref' call_tmp[1945189]))
                val coerce_tmp[1945202]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "concurrently accessed" "insert auto destroy" "temp"
                (1945204 'move' coerce_tmp[1945202] coerce_tmp[1945196])
                val default_arg_offset[1945207]:1*int(64)[1256714] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
                const-val ret_tmp[1945209]:1*int(64)[1256714] "temp"
                (1945212 call these_default_offset[1315351] coerce_tmp[1945202] ret_tmp[1945209])
                (1945215 'move' default_arg_offset[1945207] ret_tmp[1945209])
                {
                  const-ref i_offset[1945219]:1*int(64)[1256714] "temp"
                  (1945221 'move' i_offset[1945219](1945223 'set reference' default_arg_offset[1945207]))
                  {
                    val ret[1945226]:nothing[7] "dead after last mention" "RVV" "temp"
                    const-val numTasks[1945228]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                    val tmp[1945230]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
                    const-val tmp[1945232]:bool[10] "dead after last mention" "maybe param" "temp"
                    const-val call_tmp[1945234]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1945236 'move' call_tmp[1945234](1945239 call ==[435744] default_arg_tasksPerLocale[1945163] 0))
                    (1945242 'move' tmp[1945232] call_tmp[1945234])
                    if tmp[1945232]
                    {
                      const-val tmp[1945247]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
                      const-val call_tmp[1945249]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
                      const-val ret_tmp[1945251]:locale[28] "temp"
                      (1945254 call here[90438] ret_tmp[1945251])
                      (1945256 'move' call_tmp[1945249] ret_tmp[1945251])
                      (1945259 'move' tmp[1945247](1945262 call maxTaskPar[90545] call_tmp[1945249]))
                      (1945264 'move' tmp[1945230] tmp[1945247])
                      (1945268 call chpl__autoDestroy[1601737] call_tmp[1945249])
                    }
                    {
                      (1945271 'move' tmp[1945230] default_arg_tasksPerLocale[1945163])
                    }
                    (1945275 'move' numTasks[1945228] tmp[1945230])
                    const-val tmp[1945278]:2*int(64)[1040245] "dead at end of block" "const" "insert auto destroy" "temp"
                    val tmp[1945280]:2*int(64)[1040245] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                    const-val tmp[1945282]:bool[10] "dead after last mention" "maybe param" "temp"
                    const-val call_tmp[1945284]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1945286 'move' call_tmp[1945284](1945288 'task_get_serial'))
                    (1945289 'move' tmp[1945282] call_tmp[1945284])
                    if tmp[1945282]
                    {
                      const-val tmp[1945294]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                      const-val ret_tmp[1945296]:2*int(64)[1040245] "temp"
                      (1945299 call _build_tuple[1040203] 1 -1 ret_tmp[1945296])
                      (1945303 'move' tmp[1945294] ret_tmp[1945296])
                      (1945306 'move' tmp[1945280] tmp[1945294])
                    }
                    {
                      const-val tmp[1945310]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                      ref call_tmp[1945312]:_ref(1*range(int(64),bounded,false))[1244943] "dead at end of block" "maybe param" "temp"
                      (1945314 'move' call_tmp[1945312](1945317 call ranges[1251533] coerce_tmp[1945202]))
                      const-val ret_tmp[1945319]:2*int(64)[1040245] "temp"
                      (1945322 call _computeChunkStuff[1381155] numTasks[1945228] default_arg_ignoreRunning[1945170] default_arg_minIndicesPerTask[1945177] call_tmp[1945312] ret_tmp[1945319])
                      (1945328 'move' tmp[1945310] ret_tmp[1945319])
                      (1945331 'move' tmp[1945280] tmp[1945310])
                    }
                    (1945335 '=' tmp[1945278] tmp[1945280])
                    (1945338 'noop')
                    1
                    ref call_tmp[1945340]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
                    (1945342 'move' call_tmp[1945340](1945344 '.' tmp[1945278] x0[1040241]))
                    const-val numChunks[1945347]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                    const-val coerce_tmp[1945349]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                    (1945351 'move' coerce_tmp[1945349](1945353 'deref' call_tmp[1945340]))
                    (1945355 '=' numChunks[1945347] coerce_tmp[1945349])
                    (1945358 'noop')
                    ref call_tmp[1945359]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
                    (1945361 'move' call_tmp[1945359](1945363 '.' tmp[1945278] x1[1040243]))
                    const-val parDim[1945366]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                    const-val coerce_tmp[1945368]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                    (1945370 'move' coerce_tmp[1945368](1945372 'deref' call_tmp[1945359]))
                    (1945374 '=' parDim[1945366] coerce_tmp[1945368])
                    (1945377 'noop')
                    const-val call_tmp[1945378]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1945380 'move' call_tmp[1945378](1945383 call <=[437128] numChunks[1945347] 1))
                    const-val call_tmp[1945386]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1945388 'move' call_tmp[1945386] call_tmp[1945378])
                    if call_tmp[1945386]
                    {
                      {
                        val _indexOfInterest[1945394]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                        val _iterator[1945396]:_ic_these_help_DefaultRectangularDom_1_int64_t_F[1383595] "dead at end of block" "expr temp" "temp"
                        const-val call_tmp[1945398]:_ir_these_help_DefaultRectangularDom_1_int64_t_F[1383601] "dead at end of block" "expr temp" "maybe param" "temp"
                        const-val ret_tmp[1945400]:_ir_these_help_DefaultRectangularDom_1_int64_t_F[1383601] "temp"
                        (1945403 call these_help[1383178] coerce_tmp[1945202] ret_tmp[1945400])
                        (1945406 'move' call_tmp[1945398] ret_tmp[1945400])
                        (1945409 'move' _iterator[1945396](1945412 call _getIterator[1383610] call_tmp[1945398]))
                        {
                          val ret[2037472]:_ir_these_help_DefaultRectangularDom_1_int64_t_F[1383601] "dead after last mention" "RVV" "temp"
                          val _indexOfInterest[2037474]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                          val _iterator[2037476]:_ic_these_range_int64_t_bounded_F[1096892] "dead at end of block" "expr temp" "temp"
                          ref call_tmp[2037478]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "temp"
                          ref _this_tmp_[2037480]:_ref(1*range(int(64),bounded,false))[1244943] "dead at end of block" "temp"
                          const-val this[2037727]:domain(1,int(64),false)[1251123] "temp"
                          (2037732 'move' this[2037727](2037729 '.v' _iterator[1945396] F0_this[2134554]))
                          (2037482 'move' _this_tmp_[2037480](2037485 call ranges[1251533] this[2037727]))
                          (2037487 'move' call_tmp[2037478](2037489 '.' _this_tmp_[2037480] x0[1244883]))
                          (2037492 'move' _iterator[2037476](2037495 call _getIterator[1095509] call_tmp[2037478]))
                          {
                            val ret[2037498]:_ir_these_range_int64_t_bounded_F[1096898] "dead after last mention" "RVV" "temp"
                            const-val _return_tmp_[2037500]:bool[10] "dead after last mention" "temp"
                            const-val this[2037502]:range(int(64),bounded,false)[1027003] "temp"
                            (2037504 'move' this[2037502](2037506 '.v' _iterator[2037476] F0_this[2113071]))
                            (2037509 'move' _return_tmp_[2037500](2037512 call checkIfIterWillOverflow[1096003] this[2037502] 1))
                            val i[2037515]:int(64)[13] "dead at end of block" "insert auto destroy"
                            val call_tmp[2037517]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                            (2037519 'move' i[2037515] 0)
                            ref call_tmp[2037522]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
                            const-val this[2037524]:range(int(64),bounded,false)[1027003] "temp"
                            (2037526 'move' this[2037524](2037528 '.v' _iterator[2037476] F0_this[2113071]))
                            (2037531 'move' call_tmp[2037522](2037534 call _low[1028641] this[2037524]))
                            const-val start[2037536]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[2037538]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                            (2037540 'move' coerce_tmp[2037538](2037542 'deref' call_tmp[2037522]))
                            (2037544 '=' start[2037536] coerce_tmp[2037538])
                            (2037547 'noop')
                            ref call_tmp[2037548]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
                            const-val this[2037550]:range(int(64),bounded,false)[1027003] "temp"
                            (2037552 'move' this[2037550](2037554 '.v' _iterator[2037476] F0_this[2113071]))
                            (2037557 'move' call_tmp[2037548](2037560 call _high[1028849] this[2037550]))
                            const end[2037562]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[2037564]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                            (2037566 'move' coerce_tmp[2037564](2037568 'deref' call_tmp[2037548]))
                            (2037570 '=' end[2037562] coerce_tmp[2037564])
                            (2037573 'noop')
                            CForLoop[2037574] order-independent
                            {
                              const-val yret[2037589]:int(64)[13] "dead after last mention" "YVV" "temp"
                              const-val call_tmp[2037591]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                              const-val this[2037593]:range(int(64),bounded,false)[1027003] "temp"
                              (2037595 'move' this[2037593](2037597 '.v' _iterator[2037476] F0_this[2113071]))
                              (2037600 'move' call_tmp[2037591](2037603 call chpl_intToIdx[1028669] this[2037593] i[2037515]))
                              (2037606 'move' yret[2037589] call_tmp[2037591])
                              const-val _yieldedIndex[2037609]:int(64)[13] "temp"
                              (2037611 'move' _yieldedIndex[2037609] call_tmp[2037591])
                              {
                                const-val i[2037615]:int(64)[13] "const" "index var" "insert auto destroy"
                                (2037617 'move' i[2037615] _yieldedIndex[2037609])
                                const-val yret[2037620]:int(64)[13] "dead after last mention" "YVV" "temp"
                                (2037622 'move' yret[2037620] _yieldedIndex[2037609])
                                const-val _yieldedIndex[2037644]:int(64)[13] "temp"
                                (2037725 'move' _yieldedIndex[2037644] _yieldedIndex[2037609])
                                {
                                  const-val i[2037646]:int(64)[13] "const" "index var" "insert auto destroy"
                                  (2037648 'move' i[2037646] _yieldedIndex[2037644])
                                  {
                                    const-val yret[2037652]:int(64)[13] "dead after last mention" "YVV" "temp"
                                    (2037654 'move' yret[2037652] i[2037646])
                                    const-val _indexOfInterest[2037657]:int(64)[13] "dead at end of block" "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
                                    (2037659 'move' _indexOfInterest[2037657] yret[2037652])
                                    {
                                      const-val i[2037663]:int(64)[13] "const" "index var" "insert auto destroy"
                                      (2037665 'move' i[2037663] _indexOfInterest[2037657])
                                      {
                                        ref yret[2037669]:_ref(real(64))[936906] "dead after last mention" "YVV" "temp"
                                        ref call_tmp[2037671]:_ref(real(64))[936906] "dead after last mention" "maybe param" "temp"
                                        (2037673 'move' call_tmp[2037671](2037676 call dsiAccess[1389399] coerce_tmp[1945158] i[2037663]))
                                        (2037679 'move' yret[2037669] call_tmp[2037671])
                                        ref _indexOfInterest[2037682]:_ref(real(64))[936906] "dead at end of block" "index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
                                        (2037684 'move' _indexOfInterest[2037682] yret[2037669])
                                        {
                                          ref i[2037688]:_ref(real(64))[936906] "index var" "insert auto destroy"
                                          (2037690 'move' i[2037688] _indexOfInterest[2037682])
                                          ref yret[2037693]:_ref(real(64))[936906] "dead after last mention" "YVV" "temp"
                                          (2037695 'move' yret[2037693] i[2037688])
                                          ref e[2037698]:_ref(real(64))[936906] "index var" "an _indexOfInterest or chpl__followIdx variable" "insert auto destroy"
                                          (2037700 'move' e[2037698] yret[2037693])
                                          {
                                            val call_tmp[2037704]:real(64)[16] "dead after last mention" "maybe param" "temp" "type variable"
                                            const-val copy[2037706]:real(64)[16] "dead at end of block" "no auto destroy"
                                            (2037708 'move' copy[2037706] rhs[1945628])
                                            (2037711 '=' e[2037698] copy[2037706])
                                            val optinfo[2037714]:int(64)[13] "no codegen" "temp" "lhs outlives forall" "forall no task private"
                                            (2037716 'optimization info' optinfo[2037714])
                                          }
                                          label _continueLabel[2037718]
                                        }
                                      }
                                      label _continueLabel[2037720]
                                    }
                                  }
                                  label _continueLabel[2037722]
                                }
                              }
                              {
                                (2037576 '=' i[2037515] coerce_tmp[2037538])
                              }
                              {
                                (2037580 '<=' i[2037515] end[2037562])
                              }
                              {
                                val call_tmp[2037584]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                (2037586 '+=' i[2037515] 1)
                              }
                            }
                            label _endthese[2037635]
                          }
                          (2037638 call _freeIterator[1102195] _iterator[2037476])
                          label _endthese_help[2037640]
                        }
                        label _breakLabel[1945491]
                        (1945494 call _freeIterator[1383783] _iterator[1945396])
                      }
                    }
                    {
                      {
                        const-val tmpIter[1945498]:range(int(64),bounded,false)[1027003] "dead at end of block" "expr temp" "insert auto destroy" "maybe ref" "no copy" "temp"
                        const-val call_tmp[1945500]:range(int(64),boundedLow,false)[1087754] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
                        const-val ret_tmp[1945502]:range(int(64),boundedLow,false)[1087754] "temp"
                        (1945505 call chpl_build_low_bounded_range[1087147] 0 ret_tmp[1945502])
                        (1945508 'move' call_tmp[1945500] ret_tmp[1945502])
                        const-val ret_tmp[1945511]:range(int(64),bounded,false)[1027003] "temp"
                        (1945514 call #[1088114] call_tmp[1945500] numChunks[1945347] ret_tmp[1945511])
                        (1945518 'move' tmpIter[1945498] ret_tmp[1945511])
                        {
                          const _coforallCount[1945522]:_EndCount(AtomicT(int(64)),int(64))[945532] "dead after last mention" "concurrently accessed" "const" "end count" "temp"
                          (1945524 'move' _coforallCount[1945522](1945527 call _endCountAlloc[1228107]))
                          const-val numTasks[1945528]:int(64)[13] "dead at end of block" "temp"
                          (1945530 'move' numTasks[1945528](1945533 call size[1035978] tmpIter[1945498]))
                          (1945536 call _upEndCount[1228350] _coforallCount[1945522] numTasks[1945528])
                          (1945540 call chpl_resetTaskSpawn[1229432] numTasks[1945528])
                          val _indexOfInterest[1945542]:int(64)[13] "dead at end of block" "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
                          val _iterator[1945544]:_ic_these_range_int64_t_bounded_F[1096892] "dead at end of block" "expr temp" "temp"
                          (1945546 'move' _iterator[1945544](1945549 call _getIterator[1095509] tmpIter[1945498]))
                          {
                            val ret[2037735]:_ir_these_range_int64_t_bounded_F[1096898] "dead after last mention" "RVV" "temp"
                            const-val _return_tmp_[2037737]:bool[10] "dead after last mention" "temp"
                            const-val this[2037855]:range(int(64),bounded,false)[1027003] "temp"
                            (2037860 'move' this[2037855](2037857 '.v' _iterator[1945544] F0_this[2113071]))
                            (2037739 'move' _return_tmp_[2037737](2037742 call checkIfIterWillOverflow[1096003] this[2037855] 1))
                            val i[2037745]:int(64)[13] "dead at end of block" "insert auto destroy"
                            val call_tmp[2037747]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                            (2037749 'move' i[2037745] 0)
                            ref call_tmp[2037752]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
                            const-val this[2037862]:range(int(64),bounded,false)[1027003] "temp"
                            (2037867 'move' this[2037862](2037864 '.v' _iterator[1945544] F0_this[2113071]))
                            (2037754 'move' call_tmp[2037752](2037757 call _low[1028641] this[2037862]))
                            const-val start[2037759]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[2037761]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                            (2037763 'move' coerce_tmp[2037761](2037765 'deref' call_tmp[2037752]))
                            (2037767 '=' start[2037759] coerce_tmp[2037761])
                            (2037770 'noop')
                            ref call_tmp[2037771]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
                            const-val this[2037869]:range(int(64),bounded,false)[1027003] "temp"
                            (2037874 'move' this[2037869](2037871 '.v' _iterator[1945544] F0_this[2113071]))
                            (2037773 'move' call_tmp[2037771](2037776 call _high[1028849] this[2037869]))
                            const end[2037778]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[2037780]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                            (2037782 'move' coerce_tmp[2037780](2037784 'deref' call_tmp[2037771]))
                            (2037786 '=' end[2037778] coerce_tmp[2037780])
                            (2037789 'noop')
                            CForLoop[2037790]
                            {
                              const-val yret[2037805]:int(64)[13] "dead after last mention" "YVV" "temp"
                              const-val call_tmp[2037807]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                              const-val this[2037876]:range(int(64),bounded,false)[1027003] "temp"
                              (2037881 'move' this[2037876](2037878 '.v' _iterator[1945544] F0_this[2113071]))
                              (2037809 'move' call_tmp[2037807](2037812 call chpl_intToIdx[1028669] this[2037876] i[2037745]))
                              (2037815 'move' yret[2037805] call_tmp[2037807])
                              const-val _yieldedIndex[2037829]:int(64)[13] "coforall index var" "temp"
                              (2037853 'move' _yieldedIndex[2037829] call_tmp[2037807])
                              {
                                const-val chunk[2037831]:int(64)[13] "coforall index var" "const" "index var" "insert auto destroy"
                                (2037833 'move' chunk[2037831] _yieldedIndex[2037829])
                                val dummy_error[2037836]:Error[167984] "concurrently accessed" "error variable" "temp"
                                val _args_forcoforall_fn[2217802]:_class_localscoforall_fn[2217780] "temp"
                                (2217806 'move' _args_forcoforall_fn[2217802](2217804 'stack allocate class' _class_localscoforall_fn[2217780]))
                                (2217808 '.=' _args_forcoforall_fn[2217802] _0_parDim[2217783] parDim[1945366])
                                (2217812 '.=' _args_forcoforall_fn[2217802] _1_numChunks[2217785] numChunks[1945347])
                                (2217816 '.=' _args_forcoforall_fn[2217802] _2_coerce_tmp[2217787] coerce_tmp[1945202])
                                (2217820 '.=' _args_forcoforall_fn[2217802] _3_chunk[2217789] chunk[2037831])
                                (2217824 '.=' _args_forcoforall_fn[2217802] _4__coforallCount[2217791] _coforallCount[1945522])
                                (2217828 '.=' _args_forcoforall_fn[2217802] _6_coerce_tmp[2217795] coerce_tmp[1945158])
                                ref tmp[2217832]:1*int(64)[1256714] "temp"
                                (2217836 'move' tmp[2217832](2217834 'set reference' default_arg_offset[1945207]))
                                (2217838 '.=' _args_forcoforall_fn[2217802] _7_default_arg_offset[2217797] tmp[2217832])
                                (2217842 '.=' _args_forcoforall_fn[2217802] _8_rhs[2217799] rhs[1945628])
                                val _args_vforcoforall_fn[2217846]:c_void_ptr[149] "temp"
                                (2217850 'move' _args_vforcoforall_fn[2217846](2217848 'cast_to_void_star' _args_forcoforall_fn[2217802]))
                                val _args_sizecoforall_fn[2217852]:int(64)[13] "temp"
                                (2217856 'move' _args_sizecoforall_fn[2217852](2217854 'sizeof_bundle' _class_localscoforall_fn[2217780]))
                                ref _taskListcoforall_fn[2217858]:c_void_ptr[149] "temp"
                                (2217863 'move' _taskListcoforall_fn[2217858](2217860 '.' _coforallCount[1945522] taskList[12712]))
                                val _taskListNodecoforall_fn[2217865]:int(64)[13] "temp"
                                (2217869 'move' _taskListNodecoforall_fn[2217865](2217867 '_wide_get_node' _coforallCount[1945522]))
                                (2217968 call wrapcoforall_fn[2217871] _taskListcoforall_fn[2217858] _taskListNodecoforall_fn[2217865] _args_vforcoforall_fn[2217846] _args_sizecoforall_fn[2217852] _args_forcoforall_fn[2217802])
                                {
                                }
                                label _continueLabel[2037850]
                              }
                              {
                                (2037792 '=' i[2037745] coerce_tmp[2037761])
                              }
                              {
                                (2037796 '<=' i[2037745] end[2037778])
                              }
                              {
                                val call_tmp[2037800]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                (2037802 '+=' i[2037745] 1)
                              }
                            }
                            label _endthese[2037825]
                          }
                          label _breakLabel[1945574]
                          val error[1945576]:Error[167984] "error variable" "temp"
                          (1945578 'move' error[1945576] nil[44])
                          (1945582 call _waitEndCount[1235226] _coforallCount[1945522] numTasks[1945528] error[1945576])
                          val errorExists[2225984]:bool[10] "temp"
                          (2225989 'move' errorExists[2225984](2225986 '!=' error[1945576] nil[44]))
                          if errorExists[2225984]
                          {
                            (1945590 call chpl_propagate_error[170518] error[1945576])
                          }
                          (1945594 call _endCountFree[1234049] _coforallCount[1945522])
                          (1945597 call _freeIterator[1102195] _iterator[1945544])
                        }
                        (1945600 call chpl__autoDestroy[1407763] tmpIter[1945498])
                        (1945603 call chpl__autoDestroy[1680875] call_tmp[1945500])
                      }
                    }
                    (1945607 call chpl__autoDestroy[1674803] tmp[1945278])
                    label _endthese[1945609]
                  }
                }
                (1945612 call chpl_after_forall_fence[13071])
                (1945614 call chpl__autoDestroy[1697253] default_arg_offset[1945207])
                label _breakLabel[1945616]
              }
              label _endthese[1945618]
            }
          }
          (1945621 call chpl_after_forall_fence[13071])
          label _breakLabel[1945622]
        }
        label _endthese[1945624]
      }
      (1945636 call chpl__autoDestroy[1590671] rhs[1945628])
    }
    (1930454 call chpl_after_forall_fence[13071])
    val call_tmp[1590482]:[domain(1,int(64),false)] real(64)[1358944] "dead after last mention" "expr temp" "maybe param" "temp"
    (1590484 'move' call_tmp[1590482](1590487 call _value[1366084] lhs[1590439]))
    val coerce_tmp[1590789]:[domain(1,int(64),false)] real(64)[1358944] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1590794 'move' coerce_tmp[1590789] call_tmp[1590482])
    (1590494 call dsiElementInitializationComplete[1363835] coerce_tmp[1590789])
    (1590497 'move' ret[1517789] lhs[1590439])
    (1926799 call chpl__autoDestroy[1697012] call_tmp[1590415])
    gotoReturn _end_chpl__coerceCopy[1590505] _end_chpl__coerceCopy[1590505]
    label _end_chpl__coerceCopy[1590505]
    (1916327 '=' _retArg[1916325] ret[1517789])
    (1916329 return _void[55])
  }
  function chpl__unalias[1789727](const  ref arg x[1789729]:[domain(1,int(64),false)] range(int(64),bounded,false)[1415950]) : [domain(1,int(64),false)] range(int(64),bounded,false)[1415950] "inline" "instantiated generic" "invisible fn" "resolved" "unalias fn"
  {
    val ret[1789731]:[domain(1,int(64),false)] range(int(64),bounded,false)[1415950] "dead after last mention" "RVV" "temp"
    val call_tmp[1789743]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead after last mention" "expr temp" "maybe param" "temp"
    (1789745 'move' call_tmp[1789743](1789748 call _value[1416005] x[1789729]))
    val call_tmp[1789797]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead after last mention" "expr temp" "maybe param" "temp"
    (1789799 'move' call_tmp[1789797](1789802 call _value[1416005] x[1789729]))
    val call_tmp[1789869]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead after last mention" "expr temp" "maybe param" "temp"
    (1789871 'move' call_tmp[1789869](1789874 call _value[1416005] x[1789729]))
    {
      const-val ret[1789929]:[domain(1,int(64),false)] range(int(64),bounded,false)[1415950] "dead at end of block" "insert auto destroy" "no copy"
      (1789931 'move' ret[1789929] x[1789729])
      (1789935 'move' ret[1789731] ret[1789929])
      gotoReturn _end_chpl__unalias[1789944] _end_chpl__unalias[1789944]
    }
    label _end_chpl__unalias[1789944]
    (1789946 return ret[1789731])
  }
  function chpl__throwErrorUnchecked[144900](const  ref arg e[144897]:owned Error[966647], ref arg error_out[1883551]:Error[167984]) : void[4] throws "resolved" "unchecked throws" "no return value for void"
  {
    const-val _formal_tmp_e[1407800]:owned Error[966647] "dead at end of block" "insert auto destroy" "maybe copy elided" "no copy" "temp"
    (1407803 'move' _formal_tmp_e[1407800] e[144897])
    val call_tmp[667265]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val _formal_tmp_in_err[1407806]:owned Error[966647] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (1919485 '=' _formal_tmp_in_err[1407806] _formal_tmp_e[1407800])
    (1407810 'noop')
    (667268 'move' call_tmp[667265](468155 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[1407806]))
    {
      val castedError[1883556]:Error[167984] "temp"
      (1883562 'move' castedError[1883556] call_tmp[667265])
      (1883564 '=' error_out[1883551] castedError[1883556])
      gotoErrorHandlingReturn _endchpl__throwErrorUnchecked[1883553] _endchpl__throwErrorUnchecked[1883553]
    }
    label _endchpl__throwErrorUnchecked[1883553]
    (519779 return _void[55])
  }
  function chpl__initCopy[1404942](const  ref arg ir[1404944]:_ir_chunks[1400366], ref arg error_out[1887797]:Error[167984]) : [domain(1,int(64),false)] range(int(64),bounded,false)[1415950] throws "init copy fn" "instantiated generic" "invisible fn" "resolved" "unchecked throws"
  {
    val ret[1404946]:[domain(1,int(64),false)] range(int(64),bounded,false)[1415950] "dead after last mention" "RVV" "temp"
    val r[1404967]:range(int(64),bounded,false)[1027003] "dead at end of block"
    const-val tmp[1404969]:range(int(64),bounded,false)[1027003] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
    const-val tmp[1404994]:range(int(64),bounded,false)[1027003] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
    const-val ret_tmp[1907484]:range(int(64),bounded,false)[1027003] "temp"
    (1404999 call chpl_build_bounded_range[455253] 1 0 ret_tmp[1907484])
    (1907487 'move' tmp[1404994] ret_tmp[1907484])
    (1405002 'move' tmp[1404969] tmp[1404994])
    (1405008 'move' r[1404967] tmp[1404969])
    val i[1405012]:int(64)[13] "dead at end of block"
    (1405014 'move' i[1405012] 0)
    const-val call_tmp[1405018]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1405020 'move' call_tmp[1405018](1405023 call size[1035978] r[1404967]))
    const-val call_tmp[1405026]:uint(64)[115] "dead at end of block" "maybe param" "temp"
    (1405028 'move' call_tmp[1405026](1405031 call _cast[956223] call_tmp[1405018]))
    val size[1405034]:uint(64)[115] "dead at end of block"
    (1405036 'move' size[1405034] call_tmp[1405026])
    val call_tmp[1405040]:_ir_chunks[1400366] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
    val elemType[1405046]:range(int(64),bounded,false)[1027003] "dead at end of block" "type variable"
    val call_tmp[1405051]:_ir_chunks[1400366] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1405062]:_ddata(range(int(64),bounded,false))[1406042] "dead after last mention" "maybe param" "temp" "type variable"
    val data[1405069]:_ddata(range(int(64),bounded,false))[1406042] "dead at end of block"
    val init_coerce_tmp[1406062]:_ddata(range(int(64),bounded,false))[1406042] "dead at end of block" "temp"
    (1406065 'move' init_coerce_tmp[1406062](1510393 'cast' _ddata(range(int(64),bounded,false))[1406042] nil[44]))
    (1405071 'move' data[1405069] init_coerce_tmp[1406062])
    val callPostAlloc[1405076]:bool[10] "dead at end of block"
    (1510398 'move' callPostAlloc[1405076] 0)
    const-val subloc[1405082]:int(32)[95] "dead at end of block"
    (1405084 'move' subloc[1405082] c_sublocid_none[89873])
    const-val call_tmp[1405088]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1405090 'move' call_tmp[1405088](1405093 call >[18606] size[1405034] 0))
    const-val call_tmp[1405096]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1405098 'move' call_tmp[1405096] call_tmp[1405088])
    if call_tmp[1405096]
    {
      val call_tmp[1405105]:_ddata(range(int(64),bounded,false))[1406042] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val default_arg_subloc[1406219]:int(32)[95] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
      (1406223 'move' default_arg_subloc[1406219](1406221 call _ddata_allocate_noinit_default_subloc[1406202]))
      val _formal_tmp_out_callPostAlloc[1406226]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
      (1405107 'move' call_tmp[1405105](1405110 call _ddata_allocate_noinit[1406077] size[1405034] _formal_tmp_out_callPostAlloc[1406226] default_arg_subloc[1406219]))
      (1406228 call =[435290] callPostAlloc[1405076] _formal_tmp_out_callPostAlloc[1406226])
      (1405115 call =[1406365] data[1405069] call_tmp[1405105])
    }
    {
      val error[1887799]:Error[167984] "error variable" "temp"
      (1887801 'move' error[1887799] nil[44])
      {
        val _indexOfInterest[1405126]:range(int(64),bounded,false)[1027003] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[1405128]:_ic_chunks[1400360] "dead at end of block" "expr temp" "temp"
        (1405130 'move' _iterator[1405128](1405133 call _getIterator[1400375] ir[1404944]))
        {
          val ret[2010088]:_ir_chunks[1400366] "dead at end of block" "RVV" "temp"
          val _indexOfInterest[2010090]:2*int(64)[1040245] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[2010092]:_ic_chunksOrder[1400824] "dead at end of block" "expr temp" "temp"
          const-val call_tmp[2010094]:_ir_chunksOrder[1400830] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val ret_tmp[2010096]:_ir_chunksOrder[1400830] "temp"
          const-val r[2010875]:range(int(64),bounded,false)[1027003] "temp"
          (2010880 'move' r[2010875](2010877 '.v' _iterator[1405128] F0_r[2141847]))
          const-val numChunks[2010882]:int(64)[13] "temp"
          (2010887 'move' numChunks[2010882](2010884 '.v' _iterator[1405128] F1_numChunks[2141851]))
          const-val remPol[2010889]:RemElems[266554] "temp"
          (2010894 'move' remPol[2010889](2010891 '.v' _iterator[1405128] F2_remPol[2141855]))
          (2010099 call chunksOrder[1400758] r[2010875] numChunks[2010882] remPol[2010889] ret_tmp[2010096])
          (2010104 'move' call_tmp[2010094] ret_tmp[2010096])
          (2010107 'move' _iterator[2010092](2010110 call _getIterator[1400839] call_tmp[2010094]))
          {
            val ret[2010113]:_ir_chunksOrder[1400830] "dead at end of block" "RVV" "temp"
            const-val tmp[2010115]:bool[10] "dead after last mention" "maybe param" "temp"
            const-val call_tmp[2010117]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val r[2010119]:range(int(64),bounded,false)[1027003] "temp"
            (2010121 'move' r[2010119](2010123 '.v' _iterator[2010092] F0_r[2142687]))
            (2010126 'move' call_tmp[2010117](2010129 call size[1035978] r[2010119]))
            (2010131 'move' tmp[2010115](2010134 call ==[435744] call_tmp[2010117] 0))
            val tmp[2010137]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
            const-val tmp[2010139]:bool[10] "dead after last mention" "maybe param" "temp"
            const-val call_tmp[2010141]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2010143 'move' call_tmp[2010141] tmp[2010115])
            (2010146 'move' tmp[2010139] tmp[2010115])
            if tmp[2010115]
            {
              (2010151 'move' tmp[2010137] 1)
            }
            {
              const-val tmp[2010155]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
              const-val call_tmp[2010157]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val numChunks[2010159]:int(64)[13] "temp"
              (2010161 'move' numChunks[2010159](2010163 '.v' _iterator[2010092] F1_numChunks[2142691]))
              (2010166 'move' call_tmp[2010157](2010169 call <=[437128] numChunks[2010159] 0))
              (2010172 'move' tmp[2010155] call_tmp[2010157])
              (2010175 'move' tmp[2010137] call_tmp[2010157])
            }
            const-val call_tmp[2010179]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2010181 'move' call_tmp[2010179] tmp[2010137])
            if tmp[2010137]
            {
              gotoReturn _end_chunksOrder[2010667] _end_chunksOrder[2010667]
            }
            const-val call_tmp[2010189]:int(64)[13] "dead at end of block" "maybe param" "temp"
            const-val r[2010191]:range(int(64),bounded,false)[1027003] "temp"
            (2010193 'move' r[2010191](2010195 '.v' _iterator[2010092] F0_r[2142687]))
            (2010198 'move' call_tmp[2010189](2010201 call size[1035978] r[2010191]))
            const-val nElems[2010203]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            (2010205 'move' nElems[2010203] call_tmp[2010189])
            val call_tmp[2010208]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            const-val call_tmp[2010210]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val numChunks[2010212]:int(64)[13] "temp"
            (2010214 'move' numChunks[2010212](2010216 '.v' _iterator[2010092] F1_numChunks[2142691]))
            (2010219 'move' call_tmp[2010210](2010222 call min[450112] numChunks[2010212] call_tmp[2010189]))
            const-val call_tmp[2010225]:int(64)[13] "dead at end of block" "maybe param" "temp"
            (2010227 'move' call_tmp[2010225] call_tmp[2010210])
            val nChunks[2010230]:int(64)[13] "dead at end of block" "insert auto destroy"
            (2010232 'move' nChunks[2010230] call_tmp[2010210])
            val chunkSize[2010235]:int(64)[13] "dead at end of block" "insert auto destroy"
            val call_tmp[2010237]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (2010239 'move' chunkSize[2010235] 0)
            val rem[2010242]:int(64)[13] "dead at end of block" "insert auto destroy"
            val call_tmp[2010244]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (2010246 'move' rem[2010242] 0)
            const-val tmp[2010249]:RemElems[266554] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val remPol[2010251]:RemElems[266554] "temp"
            (2010253 'move' remPol[2010251](2010255 '.v' _iterator[2010092] F2_remPol[2142695]))
            (2010258 'move' tmp[2010249] remPol[2010251])
            const-val call_tmp[2010261]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val remPol[2010263]:RemElems[266554] "temp"
            (2010265 'move' remPol[2010263](2010267 '.v' _iterator[2010092] F2_remPol[2142695]))
            (2010270 'move' call_tmp[2010261](2010273 call ==[1401528] remPol[2010263] Pack[266550]))
            const-val call_tmp[2010276]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2010278 'move' call_tmp[2010276] call_tmp[2010261])
            if call_tmp[2010261]
            {
              const-val call_tmp[2010283]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (2010285 'move' call_tmp[2010283](2010288 call /[442796] nElems[2010203] nChunks[2010230]))
              (2010292 call =[435443] chunkSize[2010235] call_tmp[2010283])
              const-val call_tmp[2010295]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (2010297 'move' call_tmp[2010295](2010300 call *[441944] chunkSize[2010235] nChunks[2010230]))
              const-val call_tmp[2010303]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2010305 'move' call_tmp[2010303](2010308 call !=[436128] call_tmp[2010295] nElems[2010203]))
              const-val call_tmp[2010311]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2010313 'move' call_tmp[2010311] call_tmp[2010303])
              if call_tmp[2010303]
              {
                (2010319 call +=[451431] chunkSize[2010235] 1)
                const-val call_tmp[2010322]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                (2010324 'move' call_tmp[2010322](2010327 call divceil[1401581] nElems[2010203] chunkSize[2010235]))
                (2010331 call =[435443] nChunks[2010230] call_tmp[2010322])
              }
            }
            {
              const-val call_tmp[2010336]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2010338 'move' call_tmp[2010336](2010341 call ==[1401528] tmp[2010249] Mod[266552]))
              const-val call_tmp[2010344]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2010346 'move' call_tmp[2010344] call_tmp[2010336])
              if call_tmp[2010336]
              {
                const-val call_tmp[2010351]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                (2010353 'move' call_tmp[2010351](2010356 call /[442796] nElems[2010203] nChunks[2010230]))
                (2010360 call =[435443] chunkSize[2010235] call_tmp[2010351])
                const-val call_tmp[2010363]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                (2010365 'move' call_tmp[2010363](2010368 call *[441944] chunkSize[2010235] nChunks[2010230]))
                const-val call_tmp[2010371]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                (2010373 'move' call_tmp[2010371](2010376 call -[440532] nElems[2010203] call_tmp[2010363]))
                (2010380 call =[435443] rem[2010242] call_tmp[2010371])
              }
            }
            val _indexOfInterest[2010385]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[2010387]:_ic_chpl_direct_counted_range_iter[1103979] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[2010389]:_ir_chpl_direct_counted_range_iter[1103985] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[2010391]:_ir_chpl_direct_counted_range_iter[1103985] "temp"
            (2010394 call chpl_direct_counted_range_iter[458112] 0 nChunks[2010230] ret_tmp[2010391])
            (2010398 'move' call_tmp[2010389] ret_tmp[2010391])
            (2010401 'move' _iterator[2010387](2010404 call _getIterator[1103994] call_tmp[2010389]))
            {
              val ret[2077450]:_ir_chpl_direct_counted_range_iter[1103985] "dead after last mention" "RVV" "temp"
              val _indexOfInterest[2077452]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[2077454]:_ic_chpl_direct_counted_range_iter_helper[1103729] "dead at end of block" "expr temp" "temp"
              const-val call_tmp[2077456]:_ir_chpl_direct_counted_range_iter_helper[1103735] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[2077458]:_ir_chpl_direct_counted_range_iter_helper[1103735] "temp"
              const-val low[2078359]:int(64)[13] "temp"
              (2078364 'move' low[2078359](2078361 '.v' _iterator[2010387] F0_low[2107536]))
              const-val count[2078366]:int(64)[13] "temp"
              (2078371 'move' count[2078366](2078368 '.v' _iterator[2010387] F1_count[2107540]))
              (2077461 call chpl_direct_counted_range_iter_helper[1102287] low[2078359] count[2078366] ret_tmp[2077458])
              (2077465 'move' call_tmp[2077456] ret_tmp[2077458])
              (2077468 'move' _iterator[2077454](2077471 call _getIterator[1103744] call_tmp[2077456]))
              {
                val ret[2077474]:_ir_chpl_direct_counted_range_iter_helper[1103735] "dead after last mention" "RVV" "temp"
                val call_tmp[2077476]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val tmp[2077478]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val tmp[2077480]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                const-val call_tmp[2077482]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[2077484]:int(64)[13] "temp"
                (2077486 'move' count[2077484](2077488 '.v' _iterator[2077454] F1_count[2113698]))
                (2077491 'move' call_tmp[2077482](2077494 call <[948587] count[2077484]))
                (2077496 'move' tmp[2077480] call_tmp[2077482])
                (2077499 'move' tmp[2077478] call_tmp[2077482])
                const-val call_tmp[2077502]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2077504 'move' call_tmp[2077502] call_tmp[2077482])
                if call_tmp[2077482]
                {
                  (2077510 call boundsCheckHalt[210254] "With a negative count, the range must have a last index.")
                }
                const-val tmp[2077513]:2*int(64)[1040245] "dead at end of block" "const" "insert auto destroy" "temp"
                val tmp[2077515]:2*int(64)[1040245] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                const-val tmp[2077517]:bool[10] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[2077519]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[2077521]:int(64)[13] "temp"
                (2077523 'move' count[2077521](2077525 '.v' _iterator[2077454] F1_count[2113698]))
                (2077528 'move' call_tmp[2077519](2077531 call ==[435744] count[2077521] 0))
                (2077534 'move' tmp[2077517] call_tmp[2077519])
                if call_tmp[2077519]
                {
                  const-val tmp[2077539]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                  val call_tmp[2077541]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                  const-val call_tmp[2077543]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val low[2077545]:int(64)[13] "temp"
                  (2077547 'move' low[2077545](2077549 '.v' _iterator[2077454] F0_low[2113694]))
                  (2077552 'move' call_tmp[2077543](2077555 call _cast[956223] low[2077545]))
                  const-val call_tmp[2077557]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[2077559]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                  (2077561 'move' coerce_tmp[2077559](2077563 'cast' uint(64)[115] 1))
                  (2077566 'move' call_tmp[2077557](2077569 call -[962382] call_tmp[2077543]))
                  const-val call_tmp[2077571]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  (2077573 'move' call_tmp[2077571](2077576 call _cast[953732] call_tmp[2077557]))
                  const-val ret_tmp[2077578]:2*int(64)[1040245] "temp"
                  const-val low[2077580]:int(64)[13] "temp"
                  (2077582 'move' low[2077580](2077584 '.v' _iterator[2077454] F0_low[2113694]))
                  (2077588 call _build_tuple[1040203] low[2077580] call_tmp[2077571] ret_tmp[2077578])
                  (2077592 'move' tmp[2077539] ret_tmp[2077578])
                  (2077595 'move' tmp[2077515] tmp[2077539])
                }
                {
                  const-val tmp[2077599]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                  val call_tmp[2077601]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val call_tmp[2077603]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val count[2077605]:int(64)[13] "temp"
                  (2077607 'move' count[2077605](2077609 '.v' _iterator[2077454] F1_count[2113698]))
                  (2077612 'move' call_tmp[2077603] count[2077605])
                  const-val call_tmp[2077615]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val count[2077617]:int(64)[13] "temp"
                  (2077619 'move' count[2077617](2077621 '.v' _iterator[2077454] F1_count[2113698]))
                  (2077624 'move' call_tmp[2077615](2077627 call -[962415] count[2077617]))
                  const-val call_tmp[2077629]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val low[2077631]:int(64)[13] "temp"
                  (2077633 'move' low[2077631](2077635 '.v' _iterator[2077454] F0_low[2113694]))
                  (2077638 'move' call_tmp[2077629](2077641 call +[439752] low[2077631] call_tmp[2077615]))
                  const-val ret_tmp[2077644]:2*int(64)[1040245] "temp"
                  const-val low[2077646]:int(64)[13] "temp"
                  (2077648 'move' low[2077646](2077650 '.v' _iterator[2077454] F0_low[2113694]))
                  (2077654 call _build_tuple[1040203] low[2077646] call_tmp[2077629] ret_tmp[2077644])
                  (2077658 'move' tmp[2077599] ret_tmp[2077644])
                  (2077661 'move' tmp[2077515] tmp[2077599])
                }
                (2077665 '=' tmp[2077513] tmp[2077515])
                (2077668 'noop')
                1
                ref call_tmp[2077670]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
                (2077672 'move' call_tmp[2077670](2077674 '.' tmp[2077513] x0[1040241]))
                const-val start[2077677]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[2077679]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                (2077681 'move' coerce_tmp[2077679](2077683 'deref' call_tmp[2077670]))
                (2077685 '=' start[2077677] coerce_tmp[2077679])
                (2077688 'noop')
                ref call_tmp[2077689]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
                (2077691 'move' call_tmp[2077689](2077693 '.' tmp[2077513] x1[1040243]))
                const-val end[2077696]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[2077698]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                (2077700 'move' coerce_tmp[2077698](2077702 'deref' call_tmp[2077689]))
                (2077704 '=' end[2077696] coerce_tmp[2077698])
                (2077707 'noop')
                val _indexOfInterest[2077708]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[2077710]:_ic_chpl_direct_param_stride_range_iter[1103475] "dead at end of block" "expr temp" "temp"
                const-val call_tmp[2077712]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val ret_tmp[2077714]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
                (2077717 call chpl_direct_param_stride_range_iter[1102713] coerce_tmp[2077679] coerce_tmp[2077698] ret_tmp[2077714])
                (2077721 'move' call_tmp[2077712] ret_tmp[2077714])
                (2077724 'move' _iterator[2077710](2077727 call _getIterator[1103490] call_tmp[2077712]))
                {
                  val ret[2077730]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead after last mention" "RVV" "temp"
                  val call_tmp[2077732]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (2077735 call chpl_range_check_stride[1103033])
                  val i[2077736]:int(64)[13] "dead at end of block" "insert auto destroy"
                  val call_tmp[2077738]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (2077740 'move' i[2077736] 0)
                  val call_tmp[2077743]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val default_arg_first[2077745]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                  const-val low[2077747]:int(64)[13] "temp"
                  (2077749 'move' low[2077747](2077751 '.v' _iterator[2077710] F0_low[2115192]))
                  (2077754 'move' default_arg_first[2077745](2077757 call chpl_checkIfRangeIterWillOverflow_default_first[1103387] low[2077747]))
                  const-val default_arg_last[2077759]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                  const-val high[2077761]:int(64)[13] "temp"
                  (2077763 'move' high[2077761](2077765 '.v' _iterator[2077710] F1_high[2115196]))
                  (2077768 'move' default_arg_last[2077759](2077771 call chpl_checkIfRangeIterWillOverflow_default_last[1103415] high[2077761]))
                  const-val _return_tmp_[2077773]:bool[10] "dead after last mention" "temp"
                  const-val low[2077775]:int(64)[13] "temp"
                  (2077777 'move' low[2077775](2077779 '.v' _iterator[2077710] F0_low[2115192]))
                  const-val high[2077782]:int(64)[13] "temp"
                  (2077784 'move' high[2077782](2077786 '.v' _iterator[2077710] F1_high[2115196]))
                  (2077789 'move' _return_tmp_[2077773](2077792 call chpl_checkIfRangeIterWillOverflow[1096265] low[2077775] high[2077782] 1 default_arg_first[2077745] default_arg_last[2077759] 1))
                  CForLoop[2077799]
                  {
                    const-val yret[2077828]:int(64)[13] "dead after last mention" "YVV" "temp"
                    (2077830 'move' yret[2077828] i[2077736])
                    const-val _yieldedIndex[2077833]:int(64)[13] "temp"
                    (2077835 'move' _yieldedIndex[2077833] i[2077736])
                    {
                      const-val i[2077839]:int(64)[13] "const" "index var" "insert auto destroy"
                      (2077841 'move' i[2077839] _yieldedIndex[2077833])
                      const-val yret[2077844]:int(64)[13] "dead after last mention" "YVV" "temp"
                      (2077846 'move' yret[2077844] _yieldedIndex[2077833])
                      const-val _yieldedIndex[2077849]:int(64)[13] "temp"
                      (2077851 'move' _yieldedIndex[2077849] _yieldedIndex[2077833])
                      {
                        const-val i[2077855]:int(64)[13] "const" "index var" "insert auto destroy"
                        (2077857 'move' i[2077855] _yieldedIndex[2077849])
                        const-val yret[2077860]:int(64)[13] "dead after last mention" "YVV" "temp"
                        (2077862 'move' yret[2077860] _yieldedIndex[2077849])
                        const-val _yieldedIndex[2077898]:int(64)[13] "temp"
                        (2078357 'move' _yieldedIndex[2077898] _yieldedIndex[2077849])
                        {
                          const-val i[2077900]:int(64)[13] "const" "index var" "insert auto destroy"
                          (2077902 'move' i[2077900] _yieldedIndex[2077898])
                          val chunk[2077905]:2*int(64)[1040245] "dead at end of block" "insert auto destroy" "maybe copy elided"
                          val call_tmp[2077907]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          val call_tmp[2077909]:2*int(64)[1040245] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val ret_tmp[2077911]:2*int(64)[1040245] "temp"
                          (2077914 call _defaultOf[1402803] ret_tmp[2077911])
                          (2077916 'move' chunk[2077905] ret_tmp[2077911])
                          const-val tmp[2077919]:RemElems[266554] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val remPol[2077921]:RemElems[266554] "temp"
                          (2077923 'move' remPol[2077921](2077925 '.v' _iterator[2010092] F2_remPol[2142695]))
                          (2077928 'move' tmp[2077919] remPol[2077921])
                          const-val call_tmp[2077931]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val remPol[2077933]:RemElems[266554] "temp"
                          (2077935 'move' remPol[2077933](2077937 '.v' _iterator[2010092] F2_remPol[2142695]))
                          (2077940 'move' call_tmp[2077931](2077943 call ==[1401528] remPol[2077933] Thru[266548]))
                          const-val call_tmp[2077946]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          (2077948 'move' call_tmp[2077946] call_tmp[2077931])
                          if call_tmp[2077931]
                          {
                            const-val call_tmp[2077953]:2*int(64)[1040245] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                            const-val ret_tmp[2077955]:2*int(64)[1040245] "temp"
                            (2077958 call chunkOrderThru[1401798] nElems[2010203] nChunks[2010230] i[2077900] ret_tmp[2077955])
                            (2077963 'move' call_tmp[2077953] ret_tmp[2077955])
                            (2077967 call =[1402050] chunk[2077905] call_tmp[2077953])
                            (2077971 call chpl__autoDestroy[1674803] call_tmp[2077953])
                          }
                          {
                            const-val call_tmp[2077974]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            (2077976 'move' call_tmp[2077974](2077979 call ==[1401528] tmp[2077919] Pack[266550]))
                            const-val call_tmp[2077982]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            (2077984 'move' call_tmp[2077982] call_tmp[2077974])
                            if call_tmp[2077974]
                            {
                              const-val call_tmp[2077989]:2*int(64)[1040245] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              const-val ret_tmp[2077991]:2*int(64)[1040245] "temp"
                              (2077994 call chunkOrderPack[1402274] chunkSize[2010235] nElems[2010203] i[2077900] ret_tmp[2077991])
                              (2077999 'move' call_tmp[2077989] ret_tmp[2077991])
                              (2078003 call =[1402050] chunk[2077905] call_tmp[2077989])
                              (2078007 call chpl__autoDestroy[1674803] call_tmp[2077989])
                            }
                            {
                              const-val call_tmp[2078010]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (2078012 'move' call_tmp[2078010](2078015 call ==[1401528] tmp[2077919] Mod[266552]))
                              const-val call_tmp[2078018]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (2078020 'move' call_tmp[2078018] call_tmp[2078010])
                              if call_tmp[2078010]
                              {
                                const-val call_tmp[2078025]:2*int(64)[1040245] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val ret_tmp[2078027]:2*int(64)[1040245] "temp"
                                (2078030 call chunkOrderMod[1402531] chunkSize[2010235] rem[2010242] nElems[2010203] nChunks[2010230] i[2077900] ret_tmp[2078027])
                                (2078037 'move' call_tmp[2078025] ret_tmp[2078027])
                                (2078041 call =[1402050] chunk[2077905] call_tmp[2078025])
                                (2078045 call chpl__autoDestroy[1674803] call_tmp[2078025])
                              }
                              {
                                (2078049 call halt[154111] "RangeChunk: unknown RemElems in chunksOrder")
                              }
                            }
                          }
                          const-val yret[2078054]:2*int(64)[1040245] "dead after last mention" "YVV" "temp"
                          val call_tmp[2078056]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          val call_tmp[2078058]:2*int(64)[1040245] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val _yield_expr_tmp_[2078060]:2*int(64)[1040245] "temp"
                          (2078062 '=' _yield_expr_tmp_[2078060] chunk[2077905])
                          (2078065 'noop')
                          (2078066 'move' yret[2078054] _yield_expr_tmp_[2078060])
                          const-val _yieldedIndex[2078069]:2*int(64)[1040245] "temp"
                          (2078071 'move' _yieldedIndex[2078069] _yield_expr_tmp_[2078060])
                          {
                            1
                            const-val startOrder[2078076]:int(64)[13] "const" "index var" "insert auto destroy"
                            (2078078 'move' startOrder[2078076](2078080 '.v' _yieldedIndex[2078069] x0[1040241]))
                            const-val endOrder[2078083]:int(64)[13] "const" "index var" "insert auto destroy"
                            (2078085 'move' endOrder[2078083](2078087 '.v' _yieldedIndex[2078069] x1[1040243]))
                            const-val call_tmp[2078090]:int(64)[13] "dead at end of block" "maybe param" "temp"
                            const-val r[2078092]:range(int(64),bounded,false)[1027003] "temp"
                            (2078094 'move' r[2078092](2078096 '.v' _iterator[1405128] F0_r[2141847]))
                            (2078099 'move' call_tmp[2078090](2078102 call orderToIndex[1104229] r[2078092] startOrder[2078076]))
                            const-val start[2078105]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                            (2078107 'move' start[2078105] call_tmp[2078090])
                            const-val call_tmp[2078110]:int(64)[13] "dead at end of block" "maybe param" "temp"
                            const-val r[2078112]:range(int(64),bounded,false)[1027003] "temp"
                            (2078114 'move' r[2078112](2078116 '.v' _iterator[1405128] F0_r[2141847]))
                            (2078119 'move' call_tmp[2078110](2078122 call orderToIndex[1104229] r[2078112] endOrder[2078083]))
                            const-val end[2078125]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                            (2078127 'move' end[2078125] call_tmp[2078110])
                            const-val yret[2078130]:range(int(64),bounded,false)[1027003] "dead after last mention" "YVV" "temp"
                            const-val tmp[2078132]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                            const-val tmp[2078134]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                            const-val ret_tmp[2078136]:range(int(64),bounded,false)[1027003] "temp"
                            (2078139 call chpl_build_bounded_range[455253] call_tmp[2078090] call_tmp[2078110] ret_tmp[2078136])
                            (2078143 'move' tmp[2078134] ret_tmp[2078136])
                            (2078146 'move' tmp[2078132] tmp[2078134])
                            val call_tmp[2078149]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                            val call_tmp[2078151]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                            (2078153 'move' yret[2078130] tmp[2078134])
                            const-val _yieldedIndex[2078156]:range(int(64),bounded,false)[1027003] "temp"
                            (2078158 'move' _yieldedIndex[2078156] tmp[2078134])
                            {
                              const-val elt[2078162]:range(int(64),bounded,false)[1027003] "const" "index var" "insert auto destroy" "maybe copy elided"
                              (2078164 'move' elt[2078162] _yieldedIndex[2078156])
                              {
                                const-val call_tmp[2078168]:range(int(64),bounded,false)[1027003] "dead at end of block" "maybe param" "temp"
                                (2078170 '=' call_tmp[2078168] elt[2078162])
                                (2078173 'noop')
                                const-val eltCopy[2078174]:range(int(64),bounded,false)[1027003] "dead at end of block" "no auto destroy" "no copy"
                                (2078176 'move' eltCopy[2078174] call_tmp[2078168])
                                const-val call_tmp[2078179]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (2078181 'move' call_tmp[2078179](2078184 call >=[18975] i[1405012] size[1405034]))
                                const-val call_tmp[2078187]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (2078189 'move' call_tmp[2078187] call_tmp[2078179])
                                if call_tmp[2078187]
                                {
                                  const-val oldSize[2078194]:uint(64)[115] "dead at end of block"
                                  (2078196 'move' oldSize[2078194] size[1405034])
                                  val oldData[2078199]:_ddata(range(int(64),bounded,false))[1406042] "dead at end of block"
                                  (2078201 'move' oldData[2078199](2078204 call chpl__initCopy[1406560] data[1405069]))
                                  const-val call_tmp[2078206]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                  (2078208 'move' call_tmp[2078206](2078211 call ==[18446] size[1405034] 0))
                                  const-val call_tmp[2078214]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                  (2078216 'move' call_tmp[2078214] call_tmp[2078206])
                                  if call_tmp[2078214]
                                  {
                                    const-val coerce_tmp[2078221]:uint(64)[115] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (2078223 'move' coerce_tmp[2078221](2078225 'cast' uint(64)[115] 4))
                                    (2078229 call =[435527] size[1405034] coerce_tmp[2078221])
                                  }
                                  {
                                    const-val call_tmp[2078233]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
                                    const-val coerce_tmp[2078235]:uint(64)[115] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (2078237 'move' coerce_tmp[2078235](2078239 'cast' uint(64)[115] 2))
                                    (2078242 'move' call_tmp[2078233](2078245 call *[970701] size[1405034]))
                                    (2078248 call =[435527] size[1405034] call_tmp[2078233])
                                  }
                                  val call_tmp[2078252]:_ddata(range(int(64),bounded,false))[1406042] "dead after last mention" "expr temp" "maybe param" "temp"
                                  const-val default_arg_subloc[2078254]:int(32)[95] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                                  (2078256 'move' default_arg_subloc[2078254](2078259 call _ddata_allocate_noinit_default_subloc[1406202]))
                                  val _formal_tmp_out_callPostAlloc[2078260]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
                                  (2078262 'move' call_tmp[2078252](2078265 call _ddata_allocate_noinit[1406077] size[1405034] _formal_tmp_out_callPostAlloc[2078260] default_arg_subloc[2078254]))
                                  (2078270 call =[435290] callPostAlloc[1405076] _formal_tmp_out_callPostAlloc[2078260])
                                  (2078274 call =[1406365] data[1405069] call_tmp[2078252])
                                  {
                                    val _indexOfInterest[2078278]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                                    val _iterator[2078280]:_ic_chpl_direct_counted_range_iter[1407350] "dead at end of block" "expr temp" "temp"
                                    const-val call_tmp[2078282]:_ir_chpl_direct_counted_range_iter[1407356] "dead at end of block" "expr temp" "maybe param" "temp"
                                    const-val ret_tmp[2078284]:_ir_chpl_direct_counted_range_iter[1407356] "temp"
                                    (2078287 call chpl_direct_counted_range_iter[458336] 0 oldSize[2078194] ret_tmp[2078284])
                                    (2078291 'move' call_tmp[2078282] ret_tmp[2078284])
                                    (2078294 'move' _iterator[2078280](2078297 call _getIterator[1407365] call_tmp[2078282]))
                                    {
                                      val ret[2093520]:_ir_chpl_direct_counted_range_iter[1407356] "dead after last mention" "RVV" "temp"
                                      val _indexOfInterest[2093522]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                                      val _iterator[2093524]:_ic_chpl_direct_counted_range_iter_helper[1407100] "dead at end of block" "expr temp" "temp"
                                      const-val call_tmp[2093526]:_ir_chpl_direct_counted_range_iter_helper[1407106] "dead at end of block" "expr temp" "maybe param" "temp"
                                      const-val ret_tmp[2093528]:_ir_chpl_direct_counted_range_iter_helper[1407106] "temp"
                                      const-val low[2093960]:int(64)[13] "temp"
                                      (2093965 'move' low[2093960](2093962 '.v' _iterator[2078280] F0_low[2109342]))
                                      const-val count[2093967]:uint(64)[115] "temp"
                                      (2093972 'move' count[2093967](2093969 '.v' _iterator[2078280] F1_count[2109346]))
                                      (2093531 call chpl_direct_counted_range_iter_helper[1406669] low[2093960] count[2093967] ret_tmp[2093528])
                                      (2093535 'move' call_tmp[2093526] ret_tmp[2093528])
                                      (2093538 'move' _iterator[2093524](2093541 call _getIterator[1407115] call_tmp[2093526]))
                                      {
                                        val ret[2093544]:_ir_chpl_direct_counted_range_iter_helper[1407106] "dead after last mention" "RVV" "temp"
                                        val call_tmp[2093546]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                        const-val tmp[2093548]:2*int(64)[1040245] "dead at end of block" "const" "insert auto destroy" "temp"
                                        val tmp[2093550]:2*int(64)[1040245] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                                        const-val tmp[2093552]:bool[10] "dead after last mention" "maybe param" "temp"
                                        const-val call_tmp[2093554]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                        const-val count[2093556]:uint(64)[115] "temp"
                                        (2093558 'move' count[2093556](2093560 '.v' _iterator[2093524] F1_count[2143451]))
                                        (2093563 'move' call_tmp[2093554](2093566 call ==[18446] count[2093556] 0))
                                        (2093569 'move' tmp[2093552] call_tmp[2093554])
                                        if call_tmp[2093554]
                                        {
                                          const-val tmp[2093574]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                                          val call_tmp[2093576]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                                          const-val call_tmp[2093578]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                                          const-val low[2093580]:int(64)[13] "temp"
                                          (2093582 'move' low[2093580](2093584 '.v' _iterator[2093524] F0_low[2143447]))
                                          (2093587 'move' call_tmp[2093578](2093590 call _cast[956223] low[2093580]))
                                          const-val call_tmp[2093592]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                                          const-val coerce_tmp[2093594]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                                          (2093596 'move' coerce_tmp[2093594](2093598 'cast' uint(64)[115] 1))
                                          (2093601 'move' call_tmp[2093592](2093604 call -[962382] call_tmp[2093578]))
                                          const-val call_tmp[2093606]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                          (2093608 'move' call_tmp[2093606](2093611 call _cast[953732] call_tmp[2093592]))
                                          const-val ret_tmp[2093613]:2*int(64)[1040245] "temp"
                                          const-val low[2093615]:int(64)[13] "temp"
                                          (2093617 'move' low[2093615](2093619 '.v' _iterator[2093524] F0_low[2143447]))
                                          (2093623 call _build_tuple[1040203] low[2093615] call_tmp[2093606] ret_tmp[2093613])
                                          (2093627 'move' tmp[2093574] ret_tmp[2093613])
                                          (2093630 'move' tmp[2093550] tmp[2093574])
                                        }
                                        {
                                          const-val tmp[2093634]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                                          val call_tmp[2093636]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                                          const-val call_tmp[2093638]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                          const-val count[2093640]:uint(64)[115] "temp"
                                          (2093642 'move' count[2093640](2093644 '.v' _iterator[2093524] F1_count[2143451]))
                                          (2093647 'move' call_tmp[2093638](2093650 call _cast[953732] count[2093640]))
                                          const-val call_tmp[2093652]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                          (2093654 'move' call_tmp[2093652](2093657 call -[962415] call_tmp[2093638]))
                                          const-val call_tmp[2093659]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                          const-val low[2093661]:int(64)[13] "temp"
                                          (2093663 'move' low[2093661](2093665 '.v' _iterator[2093524] F0_low[2143447]))
                                          (2093668 'move' call_tmp[2093659](2093671 call +[439752] low[2093661] call_tmp[2093652]))
                                          const-val ret_tmp[2093674]:2*int(64)[1040245] "temp"
                                          const-val low[2093676]:int(64)[13] "temp"
                                          (2093678 'move' low[2093676](2093680 '.v' _iterator[2093524] F0_low[2143447]))
                                          (2093684 call _build_tuple[1040203] low[2093676] call_tmp[2093659] ret_tmp[2093674])
                                          (2093688 'move' tmp[2093634] ret_tmp[2093674])
                                          (2093691 'move' tmp[2093550] tmp[2093634])
                                        }
                                        (2093695 '=' tmp[2093548] tmp[2093550])
                                        (2093698 'noop')
                                        1
                                        ref call_tmp[2093700]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
                                        (2093702 'move' call_tmp[2093700](2093704 '.' tmp[2093548] x0[1040241]))
                                        const-val start[2093707]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                        const-val coerce_tmp[2093709]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                        (2093711 'move' coerce_tmp[2093709](2093713 'deref' call_tmp[2093700]))
                                        (2093715 '=' start[2093707] coerce_tmp[2093709])
                                        (2093718 'noop')
                                        ref call_tmp[2093719]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
                                        (2093721 'move' call_tmp[2093719](2093723 '.' tmp[2093548] x1[1040243]))
                                        const-val end[2093726]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                        const-val coerce_tmp[2093728]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                        (2093730 'move' coerce_tmp[2093728](2093732 'deref' call_tmp[2093719]))
                                        (2093734 '=' end[2093726] coerce_tmp[2093728])
                                        (2093737 'noop')
                                        val _indexOfInterest[2093738]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                                        val _iterator[2093740]:_ic_chpl_direct_param_stride_range_iter[1103475] "dead at end of block" "expr temp" "temp"
                                        const-val call_tmp[2093742]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead at end of block" "expr temp" "maybe param" "temp"
                                        const-val ret_tmp[2093744]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
                                        (2093747 call chpl_direct_param_stride_range_iter[1102713] coerce_tmp[2093709] coerce_tmp[2093728] ret_tmp[2093744])
                                        (2093751 'move' call_tmp[2093742] ret_tmp[2093744])
                                        (2093754 'move' _iterator[2093740](2093757 call _getIterator[1103490] call_tmp[2093742]))
                                        {
                                          val ret[2093760]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead after last mention" "RVV" "temp"
                                          val call_tmp[2093762]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                          (2093765 call chpl_range_check_stride[1103033])
                                          val i[2093766]:int(64)[13] "dead at end of block" "insert auto destroy"
                                          val call_tmp[2093768]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                          (2093770 'move' i[2093766] 0)
                                          val call_tmp[2093773]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                          const-val default_arg_first[2093775]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                                          const-val low[2093777]:int(64)[13] "temp"
                                          (2093779 'move' low[2093777](2093781 '.v' _iterator[2093740] F0_low[2115192]))
                                          (2093784 'move' default_arg_first[2093775](2093787 call chpl_checkIfRangeIterWillOverflow_default_first[1103387] low[2093777]))
                                          const-val default_arg_last[2093789]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                                          const-val high[2093791]:int(64)[13] "temp"
                                          (2093793 'move' high[2093791](2093795 '.v' _iterator[2093740] F1_high[2115196]))
                                          (2093798 'move' default_arg_last[2093789](2093801 call chpl_checkIfRangeIterWillOverflow_default_last[1103415] high[2093791]))
                                          const-val _return_tmp_[2093803]:bool[10] "dead after last mention" "temp"
                                          const-val low[2093805]:int(64)[13] "temp"
                                          (2093807 'move' low[2093805](2093809 '.v' _iterator[2093740] F0_low[2115192]))
                                          const-val high[2093812]:int(64)[13] "temp"
                                          (2093814 'move' high[2093812](2093816 '.v' _iterator[2093740] F1_high[2115196]))
                                          (2093819 'move' _return_tmp_[2093803](2093822 call chpl_checkIfRangeIterWillOverflow[1096265] low[2093805] high[2093812] 1 default_arg_first[2093775] default_arg_last[2093789] 1))
                                          CForLoop[2093829]
                                          {
                                            const-val yret[2093858]:int(64)[13] "dead after last mention" "YVV" "temp"
                                            (2093860 'move' yret[2093858] i[2093766])
                                            const-val _yieldedIndex[2093863]:int(64)[13] "temp"
                                            (2093865 'move' _yieldedIndex[2093863] i[2093766])
                                            {
                                              const-val i[2093869]:int(64)[13] "const" "index var" "insert auto destroy"
                                              (2093871 'move' i[2093869] _yieldedIndex[2093863])
                                              const-val yret[2093874]:int(64)[13] "dead after last mention" "YVV" "temp"
                                              (2093876 'move' yret[2093874] _yieldedIndex[2093863])
                                              const-val _yieldedIndex[2093879]:int(64)[13] "temp"
                                              (2093881 'move' _yieldedIndex[2093879] _yieldedIndex[2093863])
                                              {
                                                const-val i[2093885]:int(64)[13] "const" "index var" "insert auto destroy"
                                                (2093887 'move' i[2093885] _yieldedIndex[2093879])
                                                const-val yret[2093890]:int(64)[13] "dead after last mention" "YVV" "temp"
                                                (2093892 'move' yret[2093890] _yieldedIndex[2093879])
                                                const-val _yieldedIndex[2093928]:int(64)[13] "temp"
                                                (2093958 'move' _yieldedIndex[2093928] _yieldedIndex[2093879])
                                                {
                                                  const-val i[2093930]:int(64)[13] "const" "index var" "insert auto destroy"
                                                  (2093932 'move' i[2093930] _yieldedIndex[2093928])
                                                  {
                                                    ref call_tmp[2093936]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
                                                    (2093938 'move' call_tmp[2093936](2093941 call this[1407601] data[1405069] i[2093930]))
                                                    ref call_tmp[2093944]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
                                                    (2093946 'move' call_tmp[2093944](2093949 call this[1407601] oldData[2078199] i[2093930]))
                                                    (2093952 '=' call_tmp[2093936] call_tmp[2093944])
                                                  }
                                                  label _continueLabel[2093955]
                                                }
                                              }
                                            }
                                            {
                                              const-val low[2093831]:int(64)[13] "temp"
                                              (2093833 'move' low[2093831](2093835 '.v' _iterator[2093740] F0_low[2115192]))
                                              (2093838 '=' i[2093766] low[2093831])
                                            }
                                            {
                                              const-val high[2093842]:int(64)[13] "temp"
                                              (2093844 'move' high[2093842](2093846 '.v' _iterator[2093740] F1_high[2115196]))
                                              (2093849 '<=' i[2093766] high[2093842])
                                            }
                                            {
                                              val call_tmp[2093853]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                              (2093855 '+=' i[2093766] 1)
                                            }
                                          }
                                          label _endchpl_direct_param_stride_range_iter[2093911]
                                        }
                                        (2093914 call _freeIterator[1103663] _iterator[2093740])
                                        (2093917 call chpl__autoDestroy[1674803] tmp[2093548])
                                        label _endchpl_direct_counted_range_iter_helper[2093919]
                                      }
                                      (2093922 call _freeIterator[1407284] _iterator[2093524])
                                      label _endchpl_direct_counted_range_iter[2093924]
                                    }
                                    label _breakLabel[2078329]
                                    (2078332 call _freeIterator[1407534] _iterator[2078280])
                                  }
                                  (2078335 call _ddata_free[1407636] oldData[2078199] oldSize[2078194])
                                }
                                ref call_tmp[2078339]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
                                (2078341 'move' call_tmp[2078339](2078344 call this[1407601] data[1405069] i[1405012]))
                                (2078347 '=' call_tmp[2078339] eltCopy[2078174])
                                (2078351 call +=[451431] i[1405012] 1)
                              }
                              label _continueLabel[2078354]
                            }
                          }
                        }
                      }
                    }
                    {
                      const-val low[2077801]:int(64)[13] "temp"
                      (2077803 'move' low[2077801](2077805 '.v' _iterator[2077710] F0_low[2115192]))
                      (2077808 '=' i[2077736] low[2077801])
                    }
                    {
                      const-val high[2077812]:int(64)[13] "temp"
                      (2077814 'move' high[2077812](2077816 '.v' _iterator[2077710] F1_high[2115196]))
                      (2077819 '<=' i[2077736] high[2077812])
                    }
                    {
                      val call_tmp[2077823]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (2077825 '+=' i[2077736] 1)
                    }
                  }
                  label _endchpl_direct_param_stride_range_iter[2077881]
                }
                (2077884 call _freeIterator[1103663] _iterator[2077710])
                (2077887 call chpl__autoDestroy[1674803] tmp[2077513])
                label _endchpl_direct_counted_range_iter_helper[2077889]
              }
              (2077892 call _freeIterator[1103913] _iterator[2077454])
              label _endchpl_direct_counted_range_iter[2077894]
            }
            (2010665 call _freeIterator[1104163] _iterator[2010387])
            label _end_chunksOrder[2010667]
          }
          (2010670 call _freeIterator[1402902] _iterator[2010092])
          label _endchunks[2010672]
        }
        label _breakLabel[1405358]
        (1925884 call _freeIterator[1406483] _iterator[1405128])
      }
      label handler[1887800]
      const-val shouldHandleError[1887823]:bool[10] "temp"
      val errorExists[2223896]:bool[10] "temp"
      (2223901 'move' errorExists[2223896](2223898 '!=' error[1887799] nil[44]))
      (1887827 'move' shouldHandleError[1887823] errorExists[2223896])
      if shouldHandleError[1887823]
      {
        {
          val call_tmp[1405363]:Error[167984] "dead at end of block" "maybe param" "temp"
          (1405365 'move' call_tmp[1405363] error[1887799])
          val tmp[1405368]:Error[167984] "dead at end of block" "temp"
          (1405370 'move' tmp[1405368](1407731 call chpl__initCopy[968244] call_tmp[1405363]))
          val call_tmp[1405373]:Error[167984] "dead at end of block" "expr temp" "maybe param" "temp"
          (1405375 'move' call_tmp[1405373] tmp[1405368])
          const-val call_tmp[1405379]:owned Error[966647] "dead at end of block" "delay instantiation" "maybe param" "temp"
          const-val initTemp[1407738]:owned Error[966647] "dead at end of block" "delay instantiation" "temp"
          (1407741 call init[968283] initTemp[1407738] call_tmp[1405373])
          (1405381 'move' call_tmp[1405379] initTemp[1407738])
          val e[1405386]:owned Error[966647] "dead at end of block" "delay instantiation"
          (1405388 'move' e[1405386] call_tmp[1405379])
          {
            {
              val _indexOfInterest[1405394]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[1405396]:_ic_chpl_direct_range_iter[1230573] "dead at end of block" "expr temp" "temp"
              const-val call_tmp[1405398]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              (1405400 'move' call_tmp[1405398](1405403 call -[962415] i[1405012]))
              const-val call_tmp[1405406]:_ir_chpl_direct_range_iter[1230579] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[1911064]:_ir_chpl_direct_range_iter[1230579] "temp"
              (1405411 call chpl_direct_range_iter[1230419] 0 call_tmp[1405398] ret_tmp[1911064])
              (1911067 'move' call_tmp[1405406] ret_tmp[1911064])
              (1405415 'move' _iterator[1405396](1405418 call _getIterator[1230588] call_tmp[1405406]))
              {
                val ret[2010911]:_ir_chpl_direct_range_iter[1230579] "dead after last mention" "RVV" "temp"
                val _indexOfInterest[2010913]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[2010915]:_ic_chpl_direct_param_stride_range_iter[1103475] "dead at end of block" "expr temp" "temp"
                const-val call_tmp[2010917]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val ret_tmp[2010919]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
                const-val low[2011106]:int(64)[13] "temp"
                (2011111 'move' low[2011106](2011108 '.v' _iterator[1405396] F0_low[2116764]))
                const-val high[2011113]:int(64)[13] "temp"
                (2011118 'move' high[2011113](2011115 '.v' _iterator[1405396] F1_high[2116768]))
                (2010922 call chpl_direct_param_stride_range_iter[1102713] low[2011106] high[2011113] ret_tmp[2010919])
                (2010926 'move' call_tmp[2010917] ret_tmp[2010919])
                (2010929 'move' _iterator[2010915](2010932 call _getIterator[1103490] call_tmp[2010917]))
                {
                  val ret[2010935]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead after last mention" "RVV" "temp"
                  val call_tmp[2010937]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (2010940 call chpl_range_check_stride[1103033])
                  val i[2010941]:int(64)[13] "dead at end of block" "insert auto destroy"
                  val call_tmp[2010943]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (2010945 'move' i[2010941] 0)
                  val call_tmp[2010948]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val default_arg_first[2010950]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                  const-val low[2010952]:int(64)[13] "temp"
                  (2010954 'move' low[2010952](2010956 '.v' _iterator[2010915] F0_low[2115192]))
                  (2010959 'move' default_arg_first[2010950](2010962 call chpl_checkIfRangeIterWillOverflow_default_first[1103387] low[2010952]))
                  const-val default_arg_last[2010964]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                  const-val high[2010966]:int(64)[13] "temp"
                  (2010968 'move' high[2010966](2010970 '.v' _iterator[2010915] F1_high[2115196]))
                  (2010973 'move' default_arg_last[2010964](2010976 call chpl_checkIfRangeIterWillOverflow_default_last[1103415] high[2010966]))
                  const-val _return_tmp_[2010978]:bool[10] "dead after last mention" "temp"
                  const-val low[2010980]:int(64)[13] "temp"
                  (2010982 'move' low[2010980](2010984 '.v' _iterator[2010915] F0_low[2115192]))
                  const-val high[2010987]:int(64)[13] "temp"
                  (2010989 'move' high[2010987](2010991 '.v' _iterator[2010915] F1_high[2115196]))
                  (2010994 'move' _return_tmp_[2010978](2010997 call chpl_checkIfRangeIterWillOverflow[1096265] low[2010980] high[2010987] 1 default_arg_first[2010950] default_arg_last[2010964] 1))
                  CForLoop[2011004]
                  {
                    const-val yret[2011033]:int(64)[13] "dead after last mention" "YVV" "temp"
                    (2011035 'move' yret[2011033] i[2010941])
                    const-val _yieldedIndex[2011038]:int(64)[13] "temp"
                    (2011040 'move' _yieldedIndex[2011038] i[2010941])
                    {
                      const-val i[2011044]:int(64)[13] "const" "index var" "insert auto destroy"
                      (2011046 'move' i[2011044] _yieldedIndex[2011038])
                      const-val yret[2011049]:int(64)[13] "dead after last mention" "YVV" "temp"
                      (2011051 'move' yret[2011049] _yieldedIndex[2011038])
                      const-val _yieldedIndex[2011073]:int(64)[13] "temp"
                      (2011104 'move' _yieldedIndex[2011073] _yieldedIndex[2011038])
                      {
                        const-val j[2011075]:int(64)[13] "const" "index var" "insert auto destroy"
                        (2011077 'move' j[2011075] _yieldedIndex[2011073])
                        {
                          ref call_tmp[2011081]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
                          (2011083 'move' call_tmp[2011081](2011086 call this[1407601] data[1405069] j[2011075]))
                          const-val coerce_tmp[2011089]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (2011091 'move' coerce_tmp[2011089](2011093 'deref' call_tmp[2011081]))
                          (2011096 call chpl__autoDestroy[1407763] coerce_tmp[2011089])
                          (2011099 call chpl__autoDestroy[1407763] coerce_tmp[2011089])
                        }
                        label _continueLabel[2011101]
                      }
                    }
                    {
                      const-val low[2011006]:int(64)[13] "temp"
                      (2011008 'move' low[2011006](2011010 '.v' _iterator[2010915] F0_low[2115192]))
                      (2011013 '=' i[2010941] low[2011006])
                    }
                    {
                      const-val high[2011017]:int(64)[13] "temp"
                      (2011019 'move' high[2011017](2011021 '.v' _iterator[2010915] F1_high[2115196]))
                      (2011024 '<=' i[2010941] high[2011017])
                    }
                    {
                      val call_tmp[2011028]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (2011030 '+=' i[2010941] 1)
                    }
                  }
                  label _endchpl_direct_param_stride_range_iter[2011064]
                }
                (2011067 call _freeIterator[1103663] _iterator[2010915])
                label _endchpl_direct_range_iter[2011069]
              }
              label _breakLabel[1405458]
              (1925893 call _freeIterator[1230761] _iterator[1405396])
            }
            (1405461 call _ddata_free[1407636] data[1405069] size[1405034])
            const-val _formal_tmp_in_e[1407791]:owned Error[966647] "dead after last mention" "expr temp" "no auto destroy" "temp"
            (1407795 'move' _formal_tmp_in_e[1407791](1407792 call chpl__initCopy[968702] e[1405386]))
            val error[1887808]:Error[167984] "error variable" "temp"
            (1887810 'move' error[1887808] nil[44])
            (1405468 call chpl__throwErrorUnchecked[144900] _formal_tmp_in_e[1407791] error[1887808])
            val errorExists[2223888]:bool[10] "temp"
            (2223893 'move' errorExists[2223888](2223890 '!=' error[1887808] nil[44]))
            if errorExists[2223888]
            {
              (1887814 '=' error_out[1887797] error[1887808])
              gotoErrorHandlingReturn _end_chpl__initCopy[1405881] _end_chpl__initCopy[1405881]
            }
          }
        }
      }
    }
    {
      val tmp[1405586]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1405588]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1405590]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1405592 'move' call_tmp[1405590](1405595 call ==[435744] i[1405012] 0))
      (1405598 'move' tmp[1405588] call_tmp[1405590])
      if tmp[1405588]
      {
        const-val tmp[1405605]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        const-val ret_tmp[1907490]:range(int(64),bounded,false)[1027003] "temp"
        (1405610 call chpl_build_bounded_range[455253] 1 0 ret_tmp[1907490])
        (1907493 'move' tmp[1405605] ret_tmp[1907490])
        (1405613 'move' tmp[1405586] tmp[1405605])
      }
      {
        const-val tmp[1405619]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1405621]:range(int(64),boundedLow,false)[1087754] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1909558]:range(int(64),boundedLow,false)[1087754] "temp"
        (1405626 call chpl_build_low_bounded_range[1087147] 0 ret_tmp[1909558])
        (1909561 'move' call_tmp[1405621] ret_tmp[1909558])
        const-val ret_tmp[1909660]:range(int(64),bounded,false)[1027003] "temp"
        (1405631 call #[1088114] call_tmp[1405621] i[1405012] ret_tmp[1909660])
        (1909663 'move' tmp[1405619] ret_tmp[1909660])
        (1405634 'move' tmp[1405586] tmp[1405619])
        (1925896 call chpl__autoDestroy[1680875] call_tmp[1405621])
      }
      (1405641 call =[1251739] r[1404967] tmp[1405586])
      (1925900 call chpl__autoDestroy[1407763] tmp[1405586])
    }
    const-val call_tmp[1405649]:domain(1,int(64),false)[1252786] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1911248]:domain(1,int(64),false)[1252786] "temp"
    (1405654 call chpl__buildDomainExpr[1244857] r[1404967] ret_tmp[1911248])
    (1911251 'move' call_tmp[1405649] ret_tmp[1911248])
    const-val D[1405656]:domain(1,int(64),false)[1252786] "dead at end of block" "insert auto destroy"
    const-val unaliasTemp[1911254]:domain(1,int(64),false)[1252786] "temp"
    (1911259 'move' unaliasTemp[1911254](1911255 call chpl__unalias[1697031] ret_tmp[1911248]))
    (1405658 'move' D[1405656] unaliasTemp[1911254])
    const-val call_tmp[1405665]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1405667 'move' call_tmp[1405665](1405670 call !=[1407848] data[1405069] nil[44]))
    const-val call_tmp[1405673]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1405675 'move' call_tmp[1405673] call_tmp[1405665])
    if call_tmp[1405673]
    {
      const-val call_tmp[1405682]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1405684 'move' call_tmp[1405682] callPostAlloc[1405076])
      if call_tmp[1405682]
      {
        (1405692 call _ddata_allocate_postalloc[1407876] data[1405069] size[1405034])
      }
      const-val call_tmp[1405713]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (1405715 'move' call_tmp[1405713](1405718 call _cast[953732] size[1405034]))
      const-val call_tmp[1405721]:[domain(1,int(64),false)] range(int(64),bounded,false)[1415950] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1914869]:[domain(1,int(64),false)] range(int(64),bounded,false)[1415950] "temp"
      (1405729 call buildArrayWith[1407957] D[1405656] data[1405069] call_tmp[1405713] ret_tmp[1914869])
      (1914872 'move' call_tmp[1405721] ret_tmp[1914869])
      const-val A[1405733]:[domain(1,int(64),false)] range(int(64),bounded,false)[1415950] "dead at end of block"
      const-val unaliasTemp[1914875]:[domain(1,int(64),false)] range(int(64),bounded,false)[1415950] "temp"
      (1914880 'move' unaliasTemp[1914875](1914876 call chpl__unalias[1789727] ret_tmp[1914869]))
      (1405735 'move' A[1405733] unaliasTemp[1914875])
      val call_tmp[1405757]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead after last mention" "expr temp" "maybe param" "temp"
      (1405759 'move' call_tmp[1405757](1405762 call _value[1416005] A[1405733]))
      val coerce_tmp[1510328]:BaseArr[149584] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1510334 'move' coerce_tmp[1510328](1510330 'cast' BaseArr[149584] call_tmp[1405757]))
      (1405766 call chpl_decRefCountsForDomainsInArrayEltTypes[1509986] coerce_tmp[1510328])
      val call_tmp[1405772]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead after last mention" "expr temp" "maybe param" "temp"
      (1405774 'move' call_tmp[1405772](1405777 call _value[1416005] A[1405733]))
      ref call_tmp[1405780]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[1510342]:BaseArr[149584] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1510347 'move' coerce_tmp[1510342](1510344 'cast' BaseArr[149584] call_tmp[1405772]))
      (1405782 'move' call_tmp[1405780](1405785 call _decEltRefCounts[806869] coerce_tmp[1510342]))
      (1405789 call =[435290] call_tmp[1405780] 0)
      (1405798 'move' ret[1404946] A[1405733])
      (1925903 call chpl__autoDestroy[1697012] D[1405656])
      gotoReturn _end_chpl__initCopy[1405881] _end_chpl__initCopy[1405881]
    }
    {
      val call_tmp[1405807]:_ddata(range(int(64),bounded,false))[1406042] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val default_arg_subloc[1510356]:int(32)[95] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
      (1510360 'move' default_arg_subloc[1510356](1510358 call _ddata_allocate_noinit_default_subloc[1406202]))
      val _formal_tmp_out_callPostAlloc[1510363]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
      (1405809 'move' call_tmp[1405807](1405812 call _ddata_allocate_noinit[1406077] size[1405034] _formal_tmp_out_callPostAlloc[1510363] default_arg_subloc[1510356]))
      (1510365 call =[435290] callPostAlloc[1405076] _formal_tmp_out_callPostAlloc[1510363])
      (1405817 call =[1406365] data[1405069] call_tmp[1405807])
      const-val call_tmp[1405825]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1405827 'move' call_tmp[1405825] callPostAlloc[1405076])
      if call_tmp[1405825]
      {
        (1405835 call _ddata_allocate_postalloc[1407876] data[1405069] size[1405034])
      }
      const-val call_tmp[1405842]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (1405844 'move' call_tmp[1405842](1405847 call _cast[953732] size[1405034]))
      const-val call_tmp[1405850]:[domain(1,int(64),false)] range(int(64),bounded,false)[1415950] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1914883]:[domain(1,int(64),false)] range(int(64),bounded,false)[1415950] "temp"
      (1405858 call buildArrayWith[1407957] D[1405656] data[1405069] call_tmp[1405842] ret_tmp[1914883])
      (1914886 'move' call_tmp[1405850] ret_tmp[1914883])
      const-val A[1405862]:[domain(1,int(64),false)] range(int(64),bounded,false)[1415950] "dead at end of block"
      const-val unaliasTemp[1914889]:[domain(1,int(64),false)] range(int(64),bounded,false)[1415950] "temp"
      (1914894 'move' unaliasTemp[1914889](1914890 call chpl__unalias[1789727] ret_tmp[1914883]))
      (1405864 'move' A[1405862] unaliasTemp[1914889])
      (1405872 'move' ret[1404946] A[1405862])
      (1925906 call chpl__autoDestroy[1697012] D[1405656])
      gotoReturn _end_chpl__initCopy[1405881] _end_chpl__initCopy[1405881]
    }
    (1925909 call chpl__autoDestroy[1697012] D[1405656])
    label _end_chpl__initCopy[1405881]
    (1405883 return ret[1404946])
  }
  function help[1254740](const  ref arg this[1882492]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812], const  ref arg x[1882494]:_ref(DefaultRectangularArr(1,int(64),false,locale,int(64)))[1256691]) : void[4] "dont disable remote value forwarding" "resolved" "no return value for void"
  {
    val call_tmp[1254743]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp"
    (1254745 'move' call_tmp[1254743](1254748 call _value[1253027] this[1882492]))
    val coerce_tmp[1265068]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1265073 'move' coerce_tmp[1265068](1265070 'cast' BaseDom[146767] call_tmp[1254743]))
    val coerce_tmp[1265075]:BaseArr[149584] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[1883020]:[domain(1,int(64),false)] locale[1256675] "temp"
    (1883023 'move' tmp[1883020](1883021 'deref' x[1882494]))
    (1265081 'move' coerce_tmp[1265075](1265077 'cast' BaseArr[149584] tmp[1883020]))
    (1254755 call add_arr[1264931] coerce_tmp[1265068] coerce_tmp[1265075])
    (1254757 return _void[55])
  }
  function help[1317266](const  ref arg this[1882524]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812], const  ref arg x[1882526]:_ref(DefaultRectangularArr(1,int(64),false,unmanaged localesSignal?,int(64)))[1318417]) : void[4] "dont disable remote value forwarding" "resolved" "no return value for void"
  {
    val call_tmp[1317269]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp"
    (1317271 'move' call_tmp[1317269](1317274 call _value[1253027] this[1882524]))
    val coerce_tmp[1324345]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1324350 'move' coerce_tmp[1324345](1324347 'cast' BaseDom[146767] call_tmp[1317269]))
    val coerce_tmp[1324352]:BaseArr[149584] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[1883032]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401] "temp"
    (1883035 'move' tmp[1883032](1883033 'deref' x[1882526]))
    (1324358 'move' coerce_tmp[1324352](1324354 'cast' BaseArr[149584] tmp[1883032]))
    (1317281 call add_arr[1264931] coerce_tmp[1324345] coerce_tmp[1324352])
    (1317283 return _void[55])
  }
  function help[1357809](const  ref arg this[1882552]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812], const  ref arg x[1882554]:_ref(DefaultRectangularArr(1,int(64),false,real(64),int(64)))[1358960]) : void[4] "dont disable remote value forwarding" "resolved" "no return value for void"
  {
    val call_tmp[1357812]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp"
    (1357814 'move' call_tmp[1357812](1357817 call _value[1253027] this[1882552]))
    val coerce_tmp[1365079]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1365084 'move' coerce_tmp[1365079](1365081 'cast' BaseDom[146767] call_tmp[1357812]))
    val coerce_tmp[1365086]:BaseArr[149584] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[1883038]:[domain(1,int(64),false)] real(64)[1358944] "temp"
    (1883041 'move' tmp[1883038](1883039 'deref' x[1882554]))
    (1365092 'move' coerce_tmp[1365086](1365088 'cast' BaseArr[149584] tmp[1883038]))
    (1357824 call add_arr[1264931] coerce_tmp[1365079] coerce_tmp[1365086])
    (1357826 return _void[55])
  }
  function help[1367732](const  ref arg this[1882556]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812], const  ref arg x[1882558]:_ref(DefaultRectangularArr(1,int(64),false,int(64),int(64)))[1368883]) : void[4] "dont disable remote value forwarding" "resolved" "no return value for void"
  {
    val call_tmp[1367735]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp"
    (1367737 'move' call_tmp[1367735](1367740 call _value[1253027] this[1882556]))
    val coerce_tmp[1373554]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1373559 'move' coerce_tmp[1373554](1373556 'cast' BaseDom[146767] call_tmp[1367735]))
    val coerce_tmp[1373561]:BaseArr[149584] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[1883044]:[domain(1,int(64),false)] int(64)[1368867] "temp"
    (1883047 'move' tmp[1883044](1883045 'deref' x[1882558]))
    (1373567 'move' coerce_tmp[1373561](1373563 'cast' BaseArr[149584] tmp[1883044]))
    (1367747 call add_arr[1264931] coerce_tmp[1373554] coerce_tmp[1373561])
    (1367749 return _void[55])
  }
  function help[1408038](const  ref arg this[1882580]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812], const  ref arg x[1882582]:_ref(DefaultRectangularArr(1,int(64),false,range(int(64),bounded,false),int(64)))[1409240]) : void[4] "dont disable remote value forwarding" "resolved" "no return value for void"
  {
    val call_tmp[1408041]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp"
    (1408043 'move' call_tmp[1408041](1408046 call _value[1253027] this[1882580]))
    val coerce_tmp[1415000]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1415005 'move' coerce_tmp[1415000](1415002 'cast' BaseDom[146767] call_tmp[1408041]))
    val coerce_tmp[1415007]:BaseArr[149584] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[1883050]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "temp"
    (1883053 'move' tmp[1883050](1883051 'deref' x[1882582]))
    (1415013 'move' coerce_tmp[1415007](1415009 'cast' BaseArr[149584] tmp[1883050]))
    (1408053 call add_arr[1264931] coerce_tmp[1415000] coerce_tmp[1415007])
    (1408055 return _void[55])
  }
  function help[1419050](const  ref arg this[1882588]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812], const  ref arg x[1882590]:_ref(DefaultRectangularArr(1,int(64),false,range(int(64),bounded,false),int(64)))[1409240]) : void[4] "dont disable remote value forwarding" "resolved" "no return value for void"
  {
    val call_tmp[1419053]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp"
    (1419055 'move' call_tmp[1419053](1419058 call _value[1253027] this[1882588]))
    val coerce_tmp[1421595]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1421600 'move' coerce_tmp[1421595](1421597 'cast' BaseDom[146767] call_tmp[1419053]))
    val coerce_tmp[1421602]:BaseArr[149584] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[1883062]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "temp"
    (1883065 'move' tmp[1883062](1883063 'deref' x[1882590]))
    (1421608 'move' coerce_tmp[1421602](1421604 'cast' BaseArr[149584] tmp[1883062]))
    (1419065 call add_arr[1264931] coerce_tmp[1421595] coerce_tmp[1421602])
    (1419067 return _void[55])
  }
  function bulkTransferDebug[1433006](const  ref arg msg[1433008]:string[26]) : void[4] "inline" "resolved" "no return value for void"
  {
    (1433025 return _void[55])
  }
  function help[1449126](const  ref arg this[1882614]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812], const  ref arg x[1882616]:_ref(DefaultRectangularArr(1,int(64),false,uint(64),int(64)))[1450277]) : void[4] "dont disable remote value forwarding" "resolved" "no return value for void"
  {
    val call_tmp[1449129]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp"
    (1449131 'move' call_tmp[1449129](1449134 call _value[1253027] this[1882614]))
    val coerce_tmp[1455197]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1455202 'move' coerce_tmp[1455197](1455199 'cast' BaseDom[146767] call_tmp[1449129]))
    val coerce_tmp[1455204]:BaseArr[149584] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[1883152]:[domain(1,int(64),false)] uint(64)[1450261] "temp"
    (1883155 'move' tmp[1883152](1883153 'deref' x[1882616]))
    (1455210 'move' coerce_tmp[1455204](1455206 'cast' BaseArr[149584] tmp[1883152]))
    (1449141 call add_arr[1264931] coerce_tmp[1455197] coerce_tmp[1455204])
    (1449143 return _void[55])
  }
  function on_fn[1493338](const in arg _instance[1882618]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224], const in arg deinitElts[1882620]:bool[10]) : void[4] "on" "resolved"
  {
    {
      const-val call_tmp[1493366]:(BaseArr,unmanaged BaseDom?)[1495686] "dead at end of block" "maybe param" "temp"
      val coerce_tmp[1494020]:BaseArr[149584] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1494025 'move' coerce_tmp[1494020](1494022 'cast' BaseArr[149584] _instance[1882618]))
      const-val ret_tmp[1916047]:(BaseArr,unmanaged BaseDom?)[1495686] "temp"
      (1493374 call remove[1493907] coerce_tmp[1494020] ret_tmp[1916047])
      (1916050 'move' call_tmp[1493366] ret_tmp[1916047])
      const-val tmp[1493376]:(BaseArr,unmanaged BaseDom?)[1495686] "dead at end of block" "insert auto destroy" "temp"
      (1493378 'move' tmp[1493376] call_tmp[1493366])
      1
      ref call_tmp[1493386]:_ref(BaseArr)[1208506] "dead at end of block" "maybe param" "temp"
      (1493388 'move' call_tmp[1493386](1496134 '.' tmp[1493376] x0[1495682]))
      val arrToFree[1493393]:BaseArr[149584] "dead at end of block" "insert auto destroy"
      val coerce_tmp[1496139]:BaseArr[149584] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1496143 'move' coerce_tmp[1496139](1496141 'deref' call_tmp[1493386]))
      (1926601 '=' arrToFree[1493393] coerce_tmp[1496139])
      (1493395 'noop')
      ref call_tmp[1493398]:_ref(BaseDom)[1208806] "dead at end of block" "maybe param" "temp"
      (1493400 'move' call_tmp[1493398](1496148 '.' tmp[1493376] x1[1495684]))
      val domToRemove[1493405]:BaseDom[146767] "dead at end of block" "insert auto destroy"
      val coerce_tmp[1496153]:BaseDom[146767] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1496157 'move' coerce_tmp[1496153](1496155 'deref' call_tmp[1493398]))
      (1926604 '=' domToRemove[1493405] coerce_tmp[1496153])
      (1493407 'noop')
      val domToFree[1493411]:BaseDom[146767] "dead at end of block" "insert auto destroy"
      val init_coerce_tmp[1496160]:BaseDom[146767] "dead at end of block" "temp"
      (1496163 'move' init_coerce_tmp[1496160](1506847 'cast' BaseDom[146767] nil[44]))
      (1493413 'move' domToFree[1493411] init_coerce_tmp[1496160])
      val distToRemove[1493418]:BaseDist[145968] "dead at end of block" "insert auto destroy"
      val init_coerce_tmp[1496176]:BaseDist[145968] "dead at end of block" "temp"
      (1496179 'move' init_coerce_tmp[1496176](1506851 'cast' BaseDist[145968] nil[44]))
      (1493420 'move' distToRemove[1493418] init_coerce_tmp[1496176])
      val distToFree[1493425]:BaseDist[145968] "dead at end of block" "insert auto destroy"
      val init_coerce_tmp[1496182]:BaseDist[145968] "dead at end of block" "temp"
      (1496185 'move' init_coerce_tmp[1496182](1506855 'cast' BaseDist[145968] nil[44]))
      (1493427 'move' distToFree[1493425] init_coerce_tmp[1496182])
      val domIsPrivatized[1493432]:bool[10] "dead at end of block" "insert auto destroy"
      (1493434 'move' domIsPrivatized[1493432] 0)
      const instanceDom[1493438]:BaseDom[146767] "dead at end of block" "const" "insert auto destroy"
      (1493440 'move' instanceDom[1493438](1496188 call chpl__initCopy[1495806] domToRemove[1493405]))
      const-val call_tmp[1493444]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1496191]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1496196 'move' coerce_tmp[1496191](1496193 'cast' object[22] domToRemove[1493405]))
      (1493446 'move' call_tmp[1493444](1493449 call !=[1485] coerce_tmp[1496191] nil[44]))
      const-val call_tmp[1493452]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1493454 'move' call_tmp[1493452] call_tmp[1493444])
      if call_tmp[1493452]
      {
        const-val tmp[1493461]:(unmanaged BaseDom?,unmanaged BaseDist?)[1496480] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        ref tmp[1493463]:_ref(BaseDom)[1208806] "dead after last mention" "maybe param" "temp"
        (1493465 'move' tmp[1493463](1493467 'addr of' domToFree[1493411]))
        ref tmp[1493469]:_ref(BaseDist)[1209040] "dead after last mention" "maybe param" "temp"
        (1493471 'move' tmp[1493469](1493473 'addr of' distToRemove[1493418]))
        val call_tmp[1493475]:BaseDom[146767] "dead after last mention" "expr temp" "maybe param" "temp"
        (1493477 'move' call_tmp[1493475] domToRemove[1493405])
        val coerce_tmp[1496547]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1496552 'move' coerce_tmp[1496547] call_tmp[1493475])
        const-val ret_tmp[1906822]:(unmanaged BaseDom?,unmanaged BaseDist?)[1496480] "temp"
        (1493488 call remove[146118] coerce_tmp[1496547] ret_tmp[1906822])
        (1906825 'move' tmp[1493461] ret_tmp[1906822])
        { scopeless
        }
        ref call_tmp[1493520]:_ref(BaseDom)[1208806] "dead after last mention" "maybe param" "temp"
        (1493522 'move' call_tmp[1493520](1500989 '.' tmp[1493461] x0[1496476]))
        val coerce_tmp[1500992]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1500996 'move' coerce_tmp[1500992](1500994 'deref' call_tmp[1493520]))
        (1493528 call =[1495600] tmp[1493463] coerce_tmp[1500992])
        ref call_tmp[1493531]:_ref(BaseDist)[1209040] "dead after last mention" "maybe param" "temp"
        (1493533 'move' call_tmp[1493531](1501001 '.' tmp[1493461] x1[1496478]))
        val coerce_tmp[1501004]:BaseDist[145968] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1501008 'move' coerce_tmp[1501004](1501006 'deref' call_tmp[1493531]))
        (1493539 call =[1500790] tmp[1493469] coerce_tmp[1501004])
        (1926607 call chpl__autoDestroy[1821865] tmp[1493461])
        const-val tmp[1493564]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val tmp[1493582]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        val call_tmp[1493584]:BaseDom[146767] "dead after last mention" "expr temp" "maybe param" "temp"
        (1493586 'move' call_tmp[1493584] domToRemove[1493405])
        ref call_tmp[1493591]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
        val coerce_tmp[1501017]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1501022 'move' coerce_tmp[1501017] call_tmp[1493584])
        (1493593 'move' call_tmp[1493591](1493596 call pid[801682] coerce_tmp[1501017]))
        const-val call_tmp[1493599]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1501025]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1501029 'move' coerce_tmp[1501025](1501027 'deref' call_tmp[1493591]))
        (1493601 'move' call_tmp[1493599](1493604 call !=[436128] coerce_tmp[1501025] -1))
        (1493607 'move' tmp[1493582] call_tmp[1493599])
        (1493612 'move' tmp[1493564] tmp[1493582])
        (1493625 call =[435290] domIsPrivatized[1493432] tmp[1493564])
      }
      val distIsPrivatized[1493632]:bool[10] "dead at end of block" "insert auto destroy"
      (1493634 'move' distIsPrivatized[1493632] 0)
      const-val call_tmp[1493639]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1501033]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1501038 'move' coerce_tmp[1501033](1501035 'cast' object[22] distToRemove[1493418]))
      (1493641 'move' call_tmp[1493639](1493644 call !=[1485] coerce_tmp[1501033] nil[44]))
      const-val call_tmp[1493647]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1493649 'move' call_tmp[1493647] call_tmp[1493639])
      if call_tmp[1493647]
      {
        val call_tmp[1493656]:BaseDist[145968] "dead after last mention" "expr temp" "maybe param" "temp"
        (1493658 'move' call_tmp[1493656] distToRemove[1493418])
        val call_tmp[1493663]:BaseDist[145968] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[1501312]:BaseDist[145968] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1501317 'move' coerce_tmp[1501312] call_tmp[1493656])
        (1493665 'move' call_tmp[1493663](1493671 call remove[145505] coerce_tmp[1501312]))
        (1493673 call =[1500790] distToFree[1493425] call_tmp[1493663])
        const-val tmp[1493697]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val tmp[1493715]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        val call_tmp[1493717]:BaseDist[145968] "dead after last mention" "expr temp" "maybe param" "temp"
        (1493719 'move' call_tmp[1493717] distToRemove[1493418])
        ref call_tmp[1493724]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
        val coerce_tmp[1501394]:BaseDist[145968] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1501399 'move' coerce_tmp[1501394] call_tmp[1493717])
        (1493726 'move' call_tmp[1493724](1493729 call pid[801494] coerce_tmp[1501394]))
        const-val call_tmp[1493732]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1501402]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1501406 'move' coerce_tmp[1501402](1501404 'deref' call_tmp[1493724]))
        (1493734 'move' call_tmp[1493732](1493737 call !=[436128] coerce_tmp[1501402] -1))
        (1493740 'move' tmp[1493715] call_tmp[1493732])
        (1493745 'move' tmp[1493697] tmp[1493715])
        (1493758 call =[435290] distIsPrivatized[1493632] tmp[1493697])
      }
      const-val call_tmp[1493765]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1501410]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1501416 'move' coerce_tmp[1501410](1501412 'cast' object[22] arrToFree[1493393]))
      (1493767 'move' call_tmp[1493765](1493770 call !=[1485] coerce_tmp[1501410] nil[44]))
      const-val call_tmp[1493773]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1493775 'move' call_tmp[1493773] call_tmp[1493765])
      if call_tmp[1493773]
      {
        val coerce_tmp[1501533]:BaseArr[149584] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1501539 'move' coerce_tmp[1501533](1501535 'cast' BaseArr[149584] _instance[1882618]))
        (1493790 call _delete_arr[1501421] coerce_tmp[1501533] deinitElts[1882620])
      }
      const-val call_tmp[1493796]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1502643]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1502648 'move' coerce_tmp[1502643](1502645 'cast' object[22] domToFree[1493411]))
      (1493798 'move' call_tmp[1493796](1493801 call !=[1485] coerce_tmp[1502643] nil[44]))
      const-val call_tmp[1493804]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1493806 'move' call_tmp[1493804] call_tmp[1493796])
      if call_tmp[1493804]
      {
        val call_tmp[1493813]:BaseDom[146767] "dead after last mention" "expr temp" "maybe param" "temp"
        (1493815 'move' call_tmp[1493813](1493818 call postfix![1496199] instanceDom[1493438]))
        (1493821 call _delete_dom[1502652] call_tmp[1493813] domIsPrivatized[1493432])
      }
      const-val call_tmp[1493828]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1505742]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1505747 'move' coerce_tmp[1505742](1505744 'cast' object[22] distToFree[1493425]))
      (1493830 'move' call_tmp[1493828](1493833 call !=[1485] coerce_tmp[1505742] nil[44]))
      const-val call_tmp[1493836]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1493838 'move' call_tmp[1493836] call_tmp[1493828])
      if call_tmp[1493836]
      {
        val call_tmp[1493845]:BaseDist[145968] "dead after last mention" "expr temp" "maybe param" "temp"
        (1493847 'move' call_tmp[1493845] distToFree[1493425])
        (1493853 call _delete_dist[150617] call_tmp[1493845] distIsPrivatized[1493632])
      }
      (1926612 call chpl__autoDestroy[1821734] tmp[1493376])
    }
    (1493860 return _void[55])
  }
  function on_fn[1502826](const in arg pid[1882630]:int(64)[13], const in arg original[1882632]:object[22]) : void[4] "on" "resolved"
  {
    {
      (1502833 call _freePrivatizedClassHelp[1503151] pid[1882630] original[1882632])
    }
    (1502836 return _void[55])
  }
  function _freePrivatizedClassHelp[1503151](const in arg pid[1503153]:int(64)[13], const in arg original[1503155]:object[22]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val call_tmp[1503163]:object[22] "dead at end of block" "maybe param" "temp"
    (1503165 'move' call_tmp[1503163](1503168 call chpl_getPrivatizedCopy[1503417] pid[1503153]))
    val prv[1503171]:object[22] "dead at end of block" "insert auto destroy"
    (1503173 'move' prv[1503171](1503502 call chpl__initCopy[1503504] call_tmp[1503163]))
    const-val call_tmp[1503177]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1503523]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1503528 'move' coerce_tmp[1503523] prv[1503171])
    val coerce_tmp[1503530]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1503535 'move' coerce_tmp[1503530] original[1503155])
    (1503179 'move' call_tmp[1503177](1503182 call !=[1485] coerce_tmp[1503523] coerce_tmp[1503530]))
    const-val call_tmp[1503185]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1503187 'move' call_tmp[1503185] call_tmp[1503177])
    if call_tmp[1503185]
    {
      (1503195 call chpl__delete[1503538] prv[1503171])
    }
    (1503209 call chpl_clearPrivatizedClass[1503200] pid[1503153])
    {
      const _cobeginCount[1503213]:_EndCount(AtomicT(int(64)),int(64))[945532] "dead after last mention" "concurrently accessed" "const" "end count" "temp"
      (1503215 'move' _cobeginCount[1503213](1503218 call _endCountAlloc[1228107]))
      (1503221 call _upEndCount[1228350] _cobeginCount[1503213] 2)
      val _args_forcobegin_fn[2207269]:_class_localscobegin_fn[2207259] "temp"
      (2207273 'move' _args_forcobegin_fn[2207269](2207271 'stack allocate class' _class_localscobegin_fn[2207259]))
      (2207275 '.=' _args_forcobegin_fn[2207269] _0_pid[2207262] pid[1503153])
      (2207279 '.=' _args_forcobegin_fn[2207269] _1_original[2207264] original[1503155])
      (2207283 '.=' _args_forcobegin_fn[2207269] _2__cobeginCount[2207266] _cobeginCount[1503213])
      val _args_vforcobegin_fn[2207287]:c_void_ptr[149] "temp"
      (2207291 'move' _args_vforcobegin_fn[2207287](2207289 'cast_to_void_star' _args_forcobegin_fn[2207269]))
      val _args_sizecobegin_fn[2207293]:int(64)[13] "temp"
      (2207297 'move' _args_sizecobegin_fn[2207293](2207295 'sizeof_bundle' _class_localscobegin_fn[2207259]))
      ref _taskListcobegin_fn[2207299]:c_void_ptr[149] "temp"
      (2207304 'move' _taskListcobegin_fn[2207299](2207301 '.' _cobeginCount[1503213] taskList[12712]))
      val _taskListNodecobegin_fn[2207306]:int(64)[13] "temp"
      (2207310 'move' _taskListNodecobegin_fn[2207306](2207308 '_wide_get_node' _cobeginCount[1503213]))
      (2207366 call wrapcobegin_fn[2207312] _taskListcobegin_fn[2207299] _taskListNodecobegin_fn[2207306] _args_vforcobegin_fn[2207287] _args_sizecobegin_fn[2207293] _args_forcobegin_fn[2207269])
      {
      }
      val _args_forcobegin_fn[2207482]:_class_localscobegin_fn[2207472] "temp"
      (2207486 'move' _args_forcobegin_fn[2207482](2207484 'stack allocate class' _class_localscobegin_fn[2207472]))
      (2207488 '.=' _args_forcobegin_fn[2207482] _0_pid[2207475] pid[1503153])
      (2207492 '.=' _args_forcobegin_fn[2207482] _1_original[2207477] original[1503155])
      (2207496 '.=' _args_forcobegin_fn[2207482] _2__cobeginCount[2207479] _cobeginCount[1503213])
      val _args_vforcobegin_fn[2207500]:c_void_ptr[149] "temp"
      (2207504 'move' _args_vforcobegin_fn[2207500](2207502 'cast_to_void_star' _args_forcobegin_fn[2207482]))
      val _args_sizecobegin_fn[2207506]:int(64)[13] "temp"
      (2207510 'move' _args_sizecobegin_fn[2207506](2207508 'sizeof_bundle' _class_localscobegin_fn[2207472]))
      ref _taskListcobegin_fn[2207512]:c_void_ptr[149] "temp"
      (2207517 'move' _taskListcobegin_fn[2207512](2207514 '.' _cobeginCount[1503213] taskList[12712]))
      val _taskListNodecobegin_fn[2207519]:int(64)[13] "temp"
      (2207523 'move' _taskListNodecobegin_fn[2207519](2207521 '_wide_get_node' _cobeginCount[1503213]))
      (2207579 call wrapcobegin_fn[2207525] _taskListcobegin_fn[2207512] _taskListNodecobegin_fn[2207519] _args_vforcobegin_fn[2207500] _args_sizecobegin_fn[2207506] _args_forcobegin_fn[2207482])
      {
      }
      val error[1887832]:Error[167984] "error variable" "temp"
      (1887834 'move' error[1887832] nil[44])
      (1503410 call _waitEndCount[1235226] _cobeginCount[1503213] 2 error[1887832])
      val errorExists[2223904]:bool[10] "temp"
      (2223909 'move' errorExists[2223904](2223906 '!=' error[1887832] nil[44]))
      if errorExists[2223904]
      {
        (1887837 call chpl_propagate_error[170518] error[1887832])
      }
      (1926729 call _endCountFree[1234049] _cobeginCount[1503213])
    }
    (1503414 return _void[55])
  }
  function chpl_clearPrivatizedClass[1503200](const in arg pid[1503202]:int(64)[13]) : void[4] "extern" "local args" "no fn body" "resolved" "no return value for void"
  {
    (1503205 return _void[55])
  }
  function cobegin_fn[1503230](const in arg pid[1503232]:int(64)[13], const in arg original[1503234]:object[22], const in arg _cobeginCount[1882634]:_EndCount(AtomicT(int(64)),int(64))[945532]) : void[4] "cobegin or coforall" "resolved"
  {
    ref call_tmp[1503237]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
    (1503239 'move' call_tmp[1503237](1503242 call left[808583] chpl_localeTree[155232]))
    ref call_tmp[1503245]:_ref(BaseLocale)[982612] "dead after last mention" "maybe param" "temp"
    (1503247 'move' call_tmp[1503245](1503250 call _instance[782944] call_tmp[1503237]))
    const-val call_tmp[1503253]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1504624]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1504628 'move' coerce_tmp[1504624](1504626 'deref' call_tmp[1503245]))
    val coerce_tmp[1504630]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1504635 'move' coerce_tmp[1504630](1504632 'cast' object[22] coerce_tmp[1504624]))
    (1503255 'move' call_tmp[1503253](1503258 call !=[1485] coerce_tmp[1504630] nil[44]))
    const-val call_tmp[1503261]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1503263 'move' call_tmp[1503261] call_tmp[1503253])
    if call_tmp[1503261]
    {
      const-val tmp[1503270]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
      ref call_tmp[1503272]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
      (1503274 'move' call_tmp[1503272](1503277 call left[808583] chpl_localeTree[155232]))
      const-val call_tmp[1503280]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
      val _locale_tmp_[1504639]:BaseLocale[91204] "dead after last mention" "temp"
      (1504644 'move' _locale_tmp_[1504639](1504641 call _value[89984] call_tmp[1503272]))
      (1503282 'move' call_tmp[1503280](1503284 '_wide_get_locale' _locale_tmp_[1504639]))
      (1503286 'move' tmp[1503270] call_tmp[1503280])
      val isdirect[2207371]:bool[10] "temp"
      (2207376 'move' isdirect[2207371](2207373 call chpl_doDirectExecuteOn[187469] tmp[1503270]))
      if isdirect[2207371]
      {
        (2207380 call on_fn[1503293] pid[1503232] original[1503234])
      }
      {
        val _args_foron_fn[2207398]:_class_localson_fn[2207388] "temp"
        (2207402 'move' _args_foron_fn[2207398](2207400 'stack allocate class' _class_localson_fn[2207388]))
        (2207404 '.=' _args_foron_fn[2207398] _0_tmp[2207391] tmp[1503270])
        (2207408 '.=' _args_foron_fn[2207398] _1_pid[2207393] pid[1503232])
        (2207412 '.=' _args_foron_fn[2207398] _2_original[2207395] original[1503234])
        val _args_vforon_fn[2207416]:c_void_ptr[149] "temp"
        (2207420 'move' _args_vforon_fn[2207416](2207418 'cast_to_void_star' _args_foron_fn[2207398]))
        val _args_sizeon_fn[2207422]:int(64)[13] "temp"
        (2207426 'move' _args_sizeon_fn[2207422](2207424 'sizeof_bundle' _class_localson_fn[2207388]))
        on(2207466 call wrapon_fn[2207428] tmp[1503270] _args_vforon_fn[2207416] _args_sizeon_fn[2207422] _args_foron_fn[2207398])
      }
      {
      }
    }
    (1503311 return _void[55])
  }
  function on_fn[1503293](const in arg pid[1882636]:int(64)[13], const in arg original[1882638]:object[22]) : void[4] "on" "resolved"
  {
    (1503299 call _freePrivatizedClassHelp[1503151] pid[1882636] original[1882638])
    (1503302 return _void[55])
  }
  function cobegin_fn[1503319](const in arg pid[1503321]:int(64)[13], const in arg original[1503323]:object[22], const in arg _cobeginCount[1882640]:_EndCount(AtomicT(int(64)),int(64))[945532]) : void[4] "cobegin or coforall" "resolved"
  {
    ref call_tmp[1503326]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
    (1503328 'move' call_tmp[1503326](1503331 call right[808609] chpl_localeTree[155232]))
    ref call_tmp[1503334]:_ref(BaseLocale)[982612] "dead after last mention" "maybe param" "temp"
    (1503336 'move' call_tmp[1503334](1503339 call _instance[782944] call_tmp[1503326]))
    const-val call_tmp[1503342]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1504654]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1504658 'move' coerce_tmp[1504654](1504656 'deref' call_tmp[1503334]))
    val coerce_tmp[1504660]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1504665 'move' coerce_tmp[1504660](1504662 'cast' object[22] coerce_tmp[1504654]))
    (1503344 'move' call_tmp[1503342](1503347 call !=[1485] coerce_tmp[1504660] nil[44]))
    const-val call_tmp[1503350]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1503352 'move' call_tmp[1503350] call_tmp[1503342])
    if call_tmp[1503350]
    {
      const-val tmp[1503359]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
      ref call_tmp[1503361]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
      (1503363 'move' call_tmp[1503361](1503366 call right[808609] chpl_localeTree[155232]))
      const-val call_tmp[1503369]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
      val _locale_tmp_[1504669]:BaseLocale[91204] "dead after last mention" "temp"
      (1504674 'move' _locale_tmp_[1504669](1504671 call _value[89984] call_tmp[1503361]))
      (1503371 'move' call_tmp[1503369](1503373 '_wide_get_locale' _locale_tmp_[1504669]))
      (1503375 'move' tmp[1503359] call_tmp[1503369])
      val isdirect[2207584]:bool[10] "temp"
      (2207589 'move' isdirect[2207584](2207586 call chpl_doDirectExecuteOn[187469] tmp[1503359]))
      if isdirect[2207584]
      {
        (2207593 call on_fn[1503382] pid[1503321] original[1503323])
      }
      {
        val _args_foron_fn[2207611]:_class_localson_fn[2207601] "temp"
        (2207615 'move' _args_foron_fn[2207611](2207613 'stack allocate class' _class_localson_fn[2207601]))
        (2207617 '.=' _args_foron_fn[2207611] _0_tmp[2207604] tmp[1503359])
        (2207621 '.=' _args_foron_fn[2207611] _1_pid[2207606] pid[1503321])
        (2207625 '.=' _args_foron_fn[2207611] _2_original[2207608] original[1503323])
        val _args_vforon_fn[2207629]:c_void_ptr[149] "temp"
        (2207633 'move' _args_vforon_fn[2207629](2207631 'cast_to_void_star' _args_foron_fn[2207611]))
        val _args_sizeon_fn[2207635]:int(64)[13] "temp"
        (2207639 'move' _args_sizeon_fn[2207635](2207637 'sizeof_bundle' _class_localson_fn[2207601]))
        on(2207679 call wrapon_fn[2207641] tmp[1503359] _args_vforon_fn[2207629] _args_sizeon_fn[2207635] _args_foron_fn[2207611])
      }
      {
      }
    }
    (1503400 return _void[55])
  }
  function on_fn[1503382](const in arg pid[1882642]:int(64)[13], const in arg original[1882644]:object[22]) : void[4] "on" "resolved"
  {
    (1503388 call _freePrivatizedClassHelp[1503151] pid[1882642] original[1882644])
    (1503391 return _void[55])
  }
  function help[1519446](const  ref arg this[1882664]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812], const  ref arg x[1882666]:_ref(DefaultRectangularArr(1,int(64),false,real(64),int(64)))[1358960]) : void[4] "dont disable remote value forwarding" "resolved" "no return value for void"
  {
    val call_tmp[1519449]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp"
    (1519451 'move' call_tmp[1519449](1519454 call _value[1253027] this[1882664]))
    val coerce_tmp[1521991]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1521996 'move' coerce_tmp[1521991](1521993 'cast' BaseDom[146767] call_tmp[1519449]))
    val coerce_tmp[1521998]:BaseArr[149584] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[1883158]:[domain(1,int(64),false)] real(64)[1358944] "temp"
    (1883161 'move' tmp[1883158](1883159 'deref' x[1882666]))
    (1522004 'move' coerce_tmp[1521998](1522000 'cast' BaseArr[149584] tmp[1883158]))
    (1519461 call add_arr[1264931] coerce_tmp[1521991] coerce_tmp[1521998])
    (1519463 return _void[55])
  }
  function bulkTransferDebug[1525088](const  ref arg msg[1525090]:string[26]) : void[4] "inline" "resolved" "no return value for void"
  {
    (1525107 return _void[55])
  }
  function on_fn[1543033](const in arg _instance[1882682]:[domain(1,int(64),false)] real(64)[1358944], const in arg deinitElts[1882684]:bool[10]) : void[4] "on" "resolved"
  {
    {
      const-val call_tmp[1543061]:(BaseArr,unmanaged BaseDom?)[1495686] "dead at end of block" "maybe param" "temp"
      val coerce_tmp[1543602]:BaseArr[149584] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1543607 'move' coerce_tmp[1543602](1543604 'cast' BaseArr[149584] _instance[1882682]))
      const-val ret_tmp[1916053]:(BaseArr,unmanaged BaseDom?)[1495686] "temp"
      (1543069 call remove[1493907] coerce_tmp[1543602] ret_tmp[1916053])
      (1916056 'move' call_tmp[1543061] ret_tmp[1916053])
      const-val tmp[1543071]:(BaseArr,unmanaged BaseDom?)[1495686] "dead at end of block" "insert auto destroy" "temp"
      (1543073 'move' tmp[1543071] call_tmp[1543061])
      1
      ref call_tmp[1543081]:_ref(BaseArr)[1208506] "dead at end of block" "maybe param" "temp"
      (1543083 'move' call_tmp[1543081](1543617 '.' tmp[1543071] x0[1495682]))
      val arrToFree[1543088]:BaseArr[149584] "dead at end of block" "insert auto destroy"
      val coerce_tmp[1543622]:BaseArr[149584] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1543626 'move' coerce_tmp[1543622](1543624 'deref' call_tmp[1543081]))
      (1927109 '=' arrToFree[1543088] coerce_tmp[1543622])
      (1543090 'noop')
      ref call_tmp[1543093]:_ref(BaseDom)[1208806] "dead at end of block" "maybe param" "temp"
      (1543095 'move' call_tmp[1543093](1543631 '.' tmp[1543071] x1[1495684]))
      val domToRemove[1543100]:BaseDom[146767] "dead at end of block" "insert auto destroy"
      val coerce_tmp[1543636]:BaseDom[146767] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1543640 'move' coerce_tmp[1543636](1543638 'deref' call_tmp[1543093]))
      (1927112 '=' domToRemove[1543100] coerce_tmp[1543636])
      (1543102 'noop')
      val domToFree[1543106]:BaseDom[146767] "dead at end of block" "insert auto destroy"
      val init_coerce_tmp[1543643]:BaseDom[146767] "dead at end of block" "temp"
      (1543646 'move' init_coerce_tmp[1543643](1543813 'cast' BaseDom[146767] nil[44]))
      (1543108 'move' domToFree[1543106] init_coerce_tmp[1543643])
      val distToRemove[1543113]:BaseDist[145968] "dead at end of block" "insert auto destroy"
      val init_coerce_tmp[1543649]:BaseDist[145968] "dead at end of block" "temp"
      (1543652 'move' init_coerce_tmp[1543649](1543817 'cast' BaseDist[145968] nil[44]))
      (1543115 'move' distToRemove[1543113] init_coerce_tmp[1543649])
      val distToFree[1543120]:BaseDist[145968] "dead at end of block" "insert auto destroy"
      val init_coerce_tmp[1543655]:BaseDist[145968] "dead at end of block" "temp"
      (1543658 'move' init_coerce_tmp[1543655](1543821 'cast' BaseDist[145968] nil[44]))
      (1543122 'move' distToFree[1543120] init_coerce_tmp[1543655])
      val domIsPrivatized[1543127]:bool[10] "dead at end of block" "insert auto destroy"
      (1543129 'move' domIsPrivatized[1543127] 0)
      const instanceDom[1543133]:BaseDom[146767] "dead at end of block" "const" "insert auto destroy"
      (1543135 'move' instanceDom[1543133](1543661 call chpl__initCopy[1495806] domToRemove[1543100]))
      const-val call_tmp[1543139]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1543664]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1543669 'move' coerce_tmp[1543664](1543666 'cast' object[22] domToRemove[1543100]))
      (1543141 'move' call_tmp[1543139](1543144 call !=[1485] coerce_tmp[1543664] nil[44]))
      const-val call_tmp[1543147]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1543149 'move' call_tmp[1543147] call_tmp[1543139])
      if call_tmp[1543147]
      {
        const-val tmp[1543156]:(unmanaged BaseDom?,unmanaged BaseDist?)[1496480] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        ref tmp[1543158]:_ref(BaseDom)[1208806] "dead after last mention" "maybe param" "temp"
        (1543160 'move' tmp[1543158](1543162 'addr of' domToFree[1543106]))
        ref tmp[1543164]:_ref(BaseDist)[1209040] "dead after last mention" "maybe param" "temp"
        (1543166 'move' tmp[1543164](1543168 'addr of' distToRemove[1543113]))
        val call_tmp[1543170]:BaseDom[146767] "dead after last mention" "expr temp" "maybe param" "temp"
        (1543172 'move' call_tmp[1543170] domToRemove[1543100])
        val coerce_tmp[1543673]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1543678 'move' coerce_tmp[1543673] call_tmp[1543170])
        const-val ret_tmp[1906828]:(unmanaged BaseDom?,unmanaged BaseDist?)[1496480] "temp"
        (1543183 call remove[146118] coerce_tmp[1543673] ret_tmp[1906828])
        (1906831 'move' tmp[1543156] ret_tmp[1906828])
        { scopeless
        }
        ref call_tmp[1543215]:_ref(BaseDom)[1208806] "dead after last mention" "maybe param" "temp"
        (1543217 'move' call_tmp[1543215](1543689 '.' tmp[1543156] x0[1496476]))
        val coerce_tmp[1543692]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1543696 'move' coerce_tmp[1543692](1543694 'deref' call_tmp[1543215]))
        (1543223 call =[1495600] tmp[1543158] coerce_tmp[1543692])
        ref call_tmp[1543226]:_ref(BaseDist)[1209040] "dead after last mention" "maybe param" "temp"
        (1543228 'move' call_tmp[1543226](1543701 '.' tmp[1543156] x1[1496478]))
        val coerce_tmp[1543704]:BaseDist[145968] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1543708 'move' coerce_tmp[1543704](1543706 'deref' call_tmp[1543226]))
        (1543234 call =[1500790] tmp[1543164] coerce_tmp[1543704])
        (1927115 call chpl__autoDestroy[1821865] tmp[1543156])
        const-val tmp[1543259]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val tmp[1543277]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        val call_tmp[1543279]:BaseDom[146767] "dead after last mention" "expr temp" "maybe param" "temp"
        (1543281 'move' call_tmp[1543279] domToRemove[1543100])
        ref call_tmp[1543286]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
        val coerce_tmp[1543717]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1543722 'move' coerce_tmp[1543717] call_tmp[1543279])
        (1543288 'move' call_tmp[1543286](1543291 call pid[801682] coerce_tmp[1543717]))
        const-val call_tmp[1543294]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1543725]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1543729 'move' coerce_tmp[1543725](1543727 'deref' call_tmp[1543286]))
        (1543296 'move' call_tmp[1543294](1543299 call !=[436128] coerce_tmp[1543725] -1))
        (1543302 'move' tmp[1543277] call_tmp[1543294])
        (1543307 'move' tmp[1543259] tmp[1543277])
        (1543320 call =[435290] domIsPrivatized[1543127] tmp[1543259])
      }
      val distIsPrivatized[1543327]:bool[10] "dead at end of block" "insert auto destroy"
      (1543329 'move' distIsPrivatized[1543327] 0)
      const-val call_tmp[1543334]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1543733]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1543738 'move' coerce_tmp[1543733](1543735 'cast' object[22] distToRemove[1543113]))
      (1543336 'move' call_tmp[1543334](1543339 call !=[1485] coerce_tmp[1543733] nil[44]))
      const-val call_tmp[1543342]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1543344 'move' call_tmp[1543342] call_tmp[1543334])
      if call_tmp[1543342]
      {
        val call_tmp[1543351]:BaseDist[145968] "dead after last mention" "expr temp" "maybe param" "temp"
        (1543353 'move' call_tmp[1543351] distToRemove[1543113])
        val call_tmp[1543358]:BaseDist[145968] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[1543742]:BaseDist[145968] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1543747 'move' coerce_tmp[1543742] call_tmp[1543351])
        (1543360 'move' call_tmp[1543358](1543366 call remove[145505] coerce_tmp[1543742]))
        (1543368 call =[1500790] distToFree[1543120] call_tmp[1543358])
        const-val tmp[1543392]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val tmp[1543410]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        val call_tmp[1543412]:BaseDist[145968] "dead after last mention" "expr temp" "maybe param" "temp"
        (1543414 'move' call_tmp[1543412] distToRemove[1543113])
        ref call_tmp[1543419]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
        val coerce_tmp[1543757]:BaseDist[145968] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1543762 'move' coerce_tmp[1543757] call_tmp[1543412])
        (1543421 'move' call_tmp[1543419](1543424 call pid[801494] coerce_tmp[1543757]))
        const-val call_tmp[1543427]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1543765]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1543769 'move' coerce_tmp[1543765](1543767 'deref' call_tmp[1543419]))
        (1543429 'move' call_tmp[1543427](1543432 call !=[436128] coerce_tmp[1543765] -1))
        (1543435 'move' tmp[1543410] call_tmp[1543427])
        (1543440 'move' tmp[1543392] tmp[1543410])
        (1543453 call =[435290] distIsPrivatized[1543327] tmp[1543392])
      }
      const-val call_tmp[1543460]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1543773]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1543779 'move' coerce_tmp[1543773](1543775 'cast' object[22] arrToFree[1543088]))
      (1543462 'move' call_tmp[1543460](1543465 call !=[1485] coerce_tmp[1543773] nil[44]))
      const-val call_tmp[1543468]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1543470 'move' call_tmp[1543468] call_tmp[1543460])
      if call_tmp[1543468]
      {
        val coerce_tmp[1543784]:BaseArr[149584] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1543790 'move' coerce_tmp[1543784](1543786 'cast' BaseArr[149584] _instance[1882682]))
        (1543485 call _delete_arr[1501421] coerce_tmp[1543784] deinitElts[1882684])
      }
      const-val call_tmp[1543491]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1543793]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1543798 'move' coerce_tmp[1543793](1543795 'cast' object[22] domToFree[1543106]))
      (1543493 'move' call_tmp[1543491](1543496 call !=[1485] coerce_tmp[1543793] nil[44]))
      const-val call_tmp[1543499]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1543501 'move' call_tmp[1543499] call_tmp[1543491])
      if call_tmp[1543499]
      {
        val call_tmp[1543508]:BaseDom[146767] "dead after last mention" "expr temp" "maybe param" "temp"
        (1543510 'move' call_tmp[1543508](1543513 call postfix![1496199] instanceDom[1543133]))
        (1543516 call _delete_dom[1502652] call_tmp[1543508] domIsPrivatized[1543127])
      }
      const-val call_tmp[1543523]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1543803]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1543808 'move' coerce_tmp[1543803](1543805 'cast' object[22] distToFree[1543120]))
      (1543525 'move' call_tmp[1543523](1543528 call !=[1485] coerce_tmp[1543803] nil[44]))
      const-val call_tmp[1543531]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1543533 'move' call_tmp[1543531] call_tmp[1543523])
      if call_tmp[1543531]
      {
        val call_tmp[1543540]:BaseDist[145968] "dead after last mention" "expr temp" "maybe param" "temp"
        (1543542 'move' call_tmp[1543540] distToFree[1543120])
        (1543548 call _delete_dist[150617] call_tmp[1543540] distIsPrivatized[1543327])
      }
      (1927120 call chpl__autoDestroy[1821734] tmp[1543071])
    }
    (1543555 return _void[55])
  }
  function on_fn[1594808](const in arg _instance[1882774]:BaseArr[149584], const in arg deinitElts[1882776]:bool[10]) : void[4] "on" "resolved"
  {
    {
      const-val call_tmp[1594836]:(BaseArr,unmanaged BaseDom?)[1495686] "dead at end of block" "maybe param" "temp"
      val coerce_tmp[1595401]:BaseArr[149584] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1595406 'move' coerce_tmp[1595401] _instance[1882774])
      const-val ret_tmp[1916059]:(BaseArr,unmanaged BaseDom?)[1495686] "temp"
      (1594844 call remove[1493907] coerce_tmp[1595401] ret_tmp[1916059])
      (1916062 'move' call_tmp[1594836] ret_tmp[1916059])
      const-val tmp[1594846]:(BaseArr,unmanaged BaseDom?)[1495686] "dead at end of block" "insert auto destroy" "temp"
      (1594848 'move' tmp[1594846] call_tmp[1594836])
      1
      ref call_tmp[1594856]:_ref(BaseArr)[1208506] "dead at end of block" "maybe param" "temp"
      (1594858 'move' call_tmp[1594856](1595416 '.' tmp[1594846] x0[1495682]))
      val arrToFree[1594863]:BaseArr[149584] "dead at end of block" "insert auto destroy"
      val coerce_tmp[1595421]:BaseArr[149584] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1595425 'move' coerce_tmp[1595421](1595423 'deref' call_tmp[1594856]))
      (1927686 '=' arrToFree[1594863] coerce_tmp[1595421])
      (1594865 'noop')
      ref call_tmp[1594868]:_ref(BaseDom)[1208806] "dead at end of block" "maybe param" "temp"
      (1594870 'move' call_tmp[1594868](1595430 '.' tmp[1594846] x1[1495684]))
      val domToRemove[1594875]:BaseDom[146767] "dead at end of block" "insert auto destroy"
      val coerce_tmp[1595435]:BaseDom[146767] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1595439 'move' coerce_tmp[1595435](1595437 'deref' call_tmp[1594868]))
      (1927689 '=' domToRemove[1594875] coerce_tmp[1595435])
      (1594877 'noop')
      val domToFree[1594881]:BaseDom[146767] "dead at end of block" "insert auto destroy"
      val init_coerce_tmp[1595442]:BaseDom[146767] "dead at end of block" "temp"
      (1595445 'move' init_coerce_tmp[1595442](1595843 'cast' BaseDom[146767] nil[44]))
      (1594883 'move' domToFree[1594881] init_coerce_tmp[1595442])
      val distToRemove[1594888]:BaseDist[145968] "dead at end of block" "insert auto destroy"
      val init_coerce_tmp[1595448]:BaseDist[145968] "dead at end of block" "temp"
      (1595451 'move' init_coerce_tmp[1595448](1595847 'cast' BaseDist[145968] nil[44]))
      (1594890 'move' distToRemove[1594888] init_coerce_tmp[1595448])
      val distToFree[1594895]:BaseDist[145968] "dead at end of block" "insert auto destroy"
      val init_coerce_tmp[1595454]:BaseDist[145968] "dead at end of block" "temp"
      (1595457 'move' init_coerce_tmp[1595454](1595851 'cast' BaseDist[145968] nil[44]))
      (1594897 'move' distToFree[1594895] init_coerce_tmp[1595454])
      val domIsPrivatized[1594902]:bool[10] "dead at end of block" "insert auto destroy"
      (1594904 'move' domIsPrivatized[1594902] 0)
      const instanceDom[1594908]:BaseDom[146767] "dead at end of block" "const" "insert auto destroy"
      (1594910 'move' instanceDom[1594908](1595460 call chpl__initCopy[1495806] domToRemove[1594875]))
      const-val call_tmp[1594914]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1595463]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1595468 'move' coerce_tmp[1595463](1595465 'cast' object[22] domToRemove[1594875]))
      (1594916 'move' call_tmp[1594914](1594919 call !=[1485] coerce_tmp[1595463] nil[44]))
      const-val call_tmp[1594922]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1594924 'move' call_tmp[1594922] call_tmp[1594914])
      if call_tmp[1594922]
      {
        const-val tmp[1594931]:(unmanaged BaseDom?,unmanaged BaseDist?)[1496480] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        ref tmp[1594933]:_ref(BaseDom)[1208806] "dead after last mention" "maybe param" "temp"
        (1594935 'move' tmp[1594933](1594937 'addr of' domToFree[1594881]))
        ref tmp[1594939]:_ref(BaseDist)[1209040] "dead after last mention" "maybe param" "temp"
        (1594941 'move' tmp[1594939](1594943 'addr of' distToRemove[1594888]))
        val call_tmp[1594945]:BaseDom[146767] "dead after last mention" "expr temp" "maybe param" "temp"
        (1594947 'move' call_tmp[1594945] domToRemove[1594875])
        val coerce_tmp[1595472]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1595477 'move' coerce_tmp[1595472] call_tmp[1594945])
        const-val ret_tmp[1906834]:(unmanaged BaseDom?,unmanaged BaseDist?)[1496480] "temp"
        (1594958 call remove[146118] coerce_tmp[1595472] ret_tmp[1906834])
        (1906837 'move' tmp[1594931] ret_tmp[1906834])
        { scopeless
        }
        ref call_tmp[1594990]:_ref(BaseDom)[1208806] "dead after last mention" "maybe param" "temp"
        (1594992 'move' call_tmp[1594990](1595488 '.' tmp[1594931] x0[1496476]))
        val coerce_tmp[1595491]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1595495 'move' coerce_tmp[1595491](1595493 'deref' call_tmp[1594990]))
        (1594998 call =[1495600] tmp[1594933] coerce_tmp[1595491])
        ref call_tmp[1595001]:_ref(BaseDist)[1209040] "dead after last mention" "maybe param" "temp"
        (1595003 'move' call_tmp[1595001](1595500 '.' tmp[1594931] x1[1496478]))
        val coerce_tmp[1595503]:BaseDist[145968] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1595507 'move' coerce_tmp[1595503](1595505 'deref' call_tmp[1595001]))
        (1595009 call =[1500790] tmp[1594939] coerce_tmp[1595503])
        (1927692 call chpl__autoDestroy[1821865] tmp[1594931])
        const-val tmp[1595034]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val tmp[1595052]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        val call_tmp[1595054]:BaseDom[146767] "dead after last mention" "expr temp" "maybe param" "temp"
        (1595056 'move' call_tmp[1595054] domToRemove[1594875])
        ref call_tmp[1595061]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
        val coerce_tmp[1595516]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1595521 'move' coerce_tmp[1595516] call_tmp[1595054])
        (1595063 'move' call_tmp[1595061](1595066 call pid[801682] coerce_tmp[1595516]))
        const-val call_tmp[1595069]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1595524]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1595528 'move' coerce_tmp[1595524](1595526 'deref' call_tmp[1595061]))
        (1595071 'move' call_tmp[1595069](1595074 call !=[436128] coerce_tmp[1595524] -1))
        (1595077 'move' tmp[1595052] call_tmp[1595069])
        (1595082 'move' tmp[1595034] tmp[1595052])
        (1595095 call =[435290] domIsPrivatized[1594902] tmp[1595034])
      }
      val distIsPrivatized[1595102]:bool[10] "dead at end of block" "insert auto destroy"
      (1595104 'move' distIsPrivatized[1595102] 0)
      const-val call_tmp[1595109]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1595532]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1595537 'move' coerce_tmp[1595532](1595534 'cast' object[22] distToRemove[1594888]))
      (1595111 'move' call_tmp[1595109](1595114 call !=[1485] coerce_tmp[1595532] nil[44]))
      const-val call_tmp[1595117]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1595119 'move' call_tmp[1595117] call_tmp[1595109])
      if call_tmp[1595117]
      {
        val call_tmp[1595126]:BaseDist[145968] "dead after last mention" "expr temp" "maybe param" "temp"
        (1595128 'move' call_tmp[1595126] distToRemove[1594888])
        val call_tmp[1595133]:BaseDist[145968] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[1595541]:BaseDist[145968] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1595546 'move' coerce_tmp[1595541] call_tmp[1595126])
        (1595135 'move' call_tmp[1595133](1595141 call remove[145505] coerce_tmp[1595541]))
        (1595143 call =[1500790] distToFree[1594895] call_tmp[1595133])
        const-val tmp[1595167]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val tmp[1595185]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        val call_tmp[1595187]:BaseDist[145968] "dead after last mention" "expr temp" "maybe param" "temp"
        (1595189 'move' call_tmp[1595187] distToRemove[1594888])
        ref call_tmp[1595194]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
        val coerce_tmp[1595556]:BaseDist[145968] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1595561 'move' coerce_tmp[1595556] call_tmp[1595187])
        (1595196 'move' call_tmp[1595194](1595199 call pid[801494] coerce_tmp[1595556]))
        const-val call_tmp[1595202]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1595564]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1595568 'move' coerce_tmp[1595564](1595566 'deref' call_tmp[1595194]))
        (1595204 'move' call_tmp[1595202](1595207 call !=[436128] coerce_tmp[1595564] -1))
        (1595210 'move' tmp[1595185] call_tmp[1595202])
        (1595215 'move' tmp[1595167] tmp[1595185])
        (1595228 call =[435290] distIsPrivatized[1595102] tmp[1595167])
      }
      const-val call_tmp[1595235]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1595572]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1595578 'move' coerce_tmp[1595572](1595574 'cast' object[22] arrToFree[1594863]))
      (1595237 'move' call_tmp[1595235](1595240 call !=[1485] coerce_tmp[1595572] nil[44]))
      const-val call_tmp[1595243]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1595245 'move' call_tmp[1595243] call_tmp[1595235])
      if call_tmp[1595243]
      {
        (1595260 call _delete_arr[1501421] _instance[1882774] deinitElts[1882776])
      }
      const-val call_tmp[1595266]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1595823]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1595828 'move' coerce_tmp[1595823](1595825 'cast' object[22] domToFree[1594881]))
      (1595268 'move' call_tmp[1595266](1595271 call !=[1485] coerce_tmp[1595823] nil[44]))
      const-val call_tmp[1595274]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1595276 'move' call_tmp[1595274] call_tmp[1595266])
      if call_tmp[1595274]
      {
        val call_tmp[1595283]:BaseDom[146767] "dead after last mention" "expr temp" "maybe param" "temp"
        (1595285 'move' call_tmp[1595283](1595288 call postfix![1496199] instanceDom[1594908]))
        (1595291 call _delete_dom[1502652] call_tmp[1595283] domIsPrivatized[1594902])
      }
      const-val call_tmp[1595298]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1595833]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1595838 'move' coerce_tmp[1595833](1595835 'cast' object[22] distToFree[1594895]))
      (1595300 'move' call_tmp[1595298](1595303 call !=[1485] coerce_tmp[1595833] nil[44]))
      const-val call_tmp[1595306]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1595308 'move' call_tmp[1595306] call_tmp[1595298])
      if call_tmp[1595306]
      {
        val call_tmp[1595315]:BaseDist[145968] "dead after last mention" "expr temp" "maybe param" "temp"
        (1595317 'move' call_tmp[1595315] distToFree[1594895])
        (1595323 call _delete_dist[150617] call_tmp[1595315] distIsPrivatized[1595102])
      }
      (1927697 call chpl__autoDestroy[1821734] tmp[1594846])
    }
    (1595330 return _void[55])
  }
  function on_fn[1694853](const in arg this[1882848]:DefaultDist[1244085]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1694859]:_ref(DefaultDist)[1209063] "dead at end of block" "maybe param" "temp"
      ref rvfRerefTmp[2196950]:_ref(DefaultDist)[1244102] "temp"
      (2196954 'move' rvfRerefTmp[2196950](2196951 'set reference' this[1882848]))
      (1694861 'move' call_tmp[1694859](1694864 call _instance[1246703] rvfRerefTmp[2196950]))
      val call_tmp[1694867]:BaseDist[145968] "dead at end of block" "maybe param" "temp"
      val coerce_tmp[1694983]:DefaultDist[93992] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1694987 'move' coerce_tmp[1694983](1694985 'deref' call_tmp[1694859]))
      val coerce_tmp[1694989]:BaseDist[145968] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1694994 'move' coerce_tmp[1694989](1694991 'cast' BaseDist[145968] coerce_tmp[1694983]))
      (1694869 'move' call_tmp[1694867](1694875 call remove[145505] coerce_tmp[1694989]))
      val distToFree[1694876]:BaseDist[145968] "dead at end of block" "insert auto destroy"
      (1694878 'move' distToFree[1694876](1694997 call chpl__initCopy[1500895] call_tmp[1694867]))
      const-val call_tmp[1694882]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1695000]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1695005 'move' coerce_tmp[1695000](1695002 'cast' object[22] distToFree[1694876]))
      (1694884 'move' call_tmp[1694882](1694887 call !=[1485] coerce_tmp[1695000] nil[44]))
      const-val call_tmp[1694890]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1694892 'move' call_tmp[1694890] call_tmp[1694882])
      if call_tmp[1694890]
      {
        val call_tmp[1694899]:BaseDist[145968] "dead after last mention" "expr temp" "maybe param" "temp"
        (1694901 'move' call_tmp[1694899] distToFree[1694876])
        ref call_tmp[1694906]:_ref(DefaultDist)[1209063] "dead after last mention" "maybe param" "temp"
        ref rvfRerefTmp[2196957]:_ref(DefaultDist)[1244102] "temp"
        (2196961 'move' rvfRerefTmp[2196957](2196958 'set reference' this[1882848]))
        (1694908 'move' call_tmp[1694906](1694911 call _instance[1246703] rvfRerefTmp[2196957]))
        (1694922 call _delete_dist[150617] call_tmp[1694899] 0)
      }
    }
    (1694928 return _void[55])
  }
  function on_fn[1695287](const in arg this[1882850]:domain(1,int(64),false)[1252786]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1695293]:_ref(domain(1,int(64),false))[1251138] "dead at end of block" "maybe param" "temp"
      ref rvfRerefTmp[2196971]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812] "temp"
      (2196975 'move' rvfRerefTmp[2196971](2196972 'set reference' this[1882850]))
      (1695295 'move' call_tmp[1695293](1695298 call _instance[1253123] rvfRerefTmp[2196971]))
      const inst[1695301]:domain(1,int(64),false)[1251123] "dead at end of block" "const" "insert auto destroy"
      val coerce_tmp[1695527]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1695531 'move' coerce_tmp[1695527](1695529 'deref' call_tmp[1695293]))
      (1928205 '=' inst[1695301] coerce_tmp[1695527])
      (1695303 'noop')
      const-val call_tmp[1695307]:(unmanaged BaseDom?,unmanaged BaseDist?)[1496480] "dead at end of block" "maybe param" "temp"
      val coerce_tmp[1695534]:BaseDom[146767] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1695539 'move' coerce_tmp[1695534](1695536 'cast' BaseDom[146767] inst[1695301]))
      const-val ret_tmp[1906840]:(unmanaged BaseDom?,unmanaged BaseDist?)[1496480] "temp"
      (1695315 call remove[146118] coerce_tmp[1695534] ret_tmp[1906840])
      (1906843 'move' call_tmp[1695307] ret_tmp[1906840])
      const-val tmp[1695316]:(unmanaged BaseDom?,unmanaged BaseDist?)[1496480] "dead at end of block" "insert auto destroy" "temp"
      (1695318 'move' tmp[1695316] call_tmp[1695307])
      1
      ref call_tmp[1695326]:_ref(BaseDom)[1208806] "dead at end of block" "maybe param" "temp"
      (1695328 'move' call_tmp[1695326](1695793 '.' tmp[1695316] x0[1496476]))
      val domToFree[1695333]:BaseDom[146767] "dead at end of block" "insert auto destroy"
      val coerce_tmp[1695798]:BaseDom[146767] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1695802 'move' coerce_tmp[1695798](1695800 'deref' call_tmp[1695326]))
      (1928208 '=' domToFree[1695333] coerce_tmp[1695798])
      (1695335 'noop')
      ref call_tmp[1695338]:_ref(BaseDist)[1209040] "dead at end of block" "maybe param" "temp"
      (1695340 'move' call_tmp[1695338](1695807 '.' tmp[1695316] x1[1496478]))
      val distToRemove[1695345]:BaseDist[145968] "dead at end of block" "insert auto destroy"
      val coerce_tmp[1695812]:BaseDist[145968] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1695816 'move' coerce_tmp[1695812](1695814 'deref' call_tmp[1695338]))
      (1928211 '=' distToRemove[1695345] coerce_tmp[1695812])
      (1695347 'noop')
      val distToFree[1695351]:BaseDist[145968] "dead at end of block" "insert auto destroy"
      val init_coerce_tmp[1695819]:BaseDist[145968] "dead at end of block" "temp"
      (1695822 'move' init_coerce_tmp[1695819](1697002 'cast' BaseDist[145968] nil[44]))
      (1695353 'move' distToFree[1695351] init_coerce_tmp[1695819])
      const-val call_tmp[1695358]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1695825]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1695830 'move' coerce_tmp[1695825](1695827 'cast' object[22] distToRemove[1695345]))
      (1695360 'move' call_tmp[1695358](1695363 call !=[1485] coerce_tmp[1695825] nil[44]))
      const-val call_tmp[1695366]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1695368 'move' call_tmp[1695366] call_tmp[1695358])
      if call_tmp[1695366]
      {
        val call_tmp[1695375]:BaseDist[145968] "dead after last mention" "expr temp" "maybe param" "temp"
        (1695377 'move' call_tmp[1695375] distToRemove[1695345])
        val call_tmp[1695382]:BaseDist[145968] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[1695834]:BaseDist[145968] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1695839 'move' coerce_tmp[1695834] call_tmp[1695375])
        (1695384 'move' call_tmp[1695382](1695390 call remove[145505] coerce_tmp[1695834]))
        (1695392 call =[1500790] distToFree[1695351] call_tmp[1695382])
      }
      const-val call_tmp[1695399]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1695843]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1695848 'move' coerce_tmp[1695843](1695845 'cast' object[22] domToFree[1695333]))
      (1695401 'move' call_tmp[1695399](1695404 call !=[1485] coerce_tmp[1695843] nil[44]))
      const-val call_tmp[1695407]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1695409 'move' call_tmp[1695407] call_tmp[1695399])
      if call_tmp[1695407]
      {
        (1695424 call _delete_dom[1695853] inst[1695301] 0)
      }
      const-val call_tmp[1695431]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1696982]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1696987 'move' coerce_tmp[1696982](1696984 'cast' object[22] distToFree[1695351]))
      (1695433 'move' call_tmp[1695431](1695436 call !=[1485] coerce_tmp[1696982] nil[44]))
      const-val call_tmp[1695439]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1695441 'move' call_tmp[1695439] call_tmp[1695431])
      if call_tmp[1695439]
      {
        val call_tmp[1695448]:BaseDist[145968] "dead after last mention" "expr temp" "maybe param" "temp"
        (1695450 'move' call_tmp[1695448] distToFree[1695351])
        ref call_tmp[1695455]:_ref(DefaultDist)[1209063] "dead after last mention" "maybe param" "temp"
        val coerce_tmp[1696991]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1696996 'move' coerce_tmp[1696991] inst[1695301])
        (1695457 'move' call_tmp[1695455](1695460 call dist[1287689] coerce_tmp[1696991]))
        (1695471 call _delete_dist[150617] call_tmp[1695448] 0)
      }
      (1928215 call chpl__autoDestroy[1821865] tmp[1695316])
    }
    (1695478 return _void[55])
  }
  function on_fn[1722653](const in arg _instance[1882872]:[domain(1,int(64),false)] locale[1256675], const in arg deinitElts[1882874]:bool[10]) : void[4] "on" "resolved"
  {
    {
      const-val call_tmp[1722681]:(BaseArr,unmanaged BaseDom?)[1495686] "dead at end of block" "maybe param" "temp"
      val coerce_tmp[1723222]:BaseArr[149584] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1723227 'move' coerce_tmp[1723222](1723224 'cast' BaseArr[149584] _instance[1882872]))
      const-val ret_tmp[1916065]:(BaseArr,unmanaged BaseDom?)[1495686] "temp"
      (1722689 call remove[1493907] coerce_tmp[1723222] ret_tmp[1916065])
      (1916068 'move' call_tmp[1722681] ret_tmp[1916065])
      const-val tmp[1722691]:(BaseArr,unmanaged BaseDom?)[1495686] "dead at end of block" "insert auto destroy" "temp"
      (1722693 'move' tmp[1722691] call_tmp[1722681])
      1
      ref call_tmp[1722701]:_ref(BaseArr)[1208506] "dead at end of block" "maybe param" "temp"
      (1722703 'move' call_tmp[1722701](1723237 '.' tmp[1722691] x0[1495682]))
      val arrToFree[1722708]:BaseArr[149584] "dead at end of block" "insert auto destroy"
      val coerce_tmp[1723242]:BaseArr[149584] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1723246 'move' coerce_tmp[1723242](1723244 'deref' call_tmp[1722701]))
      (1928558 '=' arrToFree[1722708] coerce_tmp[1723242])
      (1722710 'noop')
      ref call_tmp[1722713]:_ref(BaseDom)[1208806] "dead at end of block" "maybe param" "temp"
      (1722715 'move' call_tmp[1722713](1723251 '.' tmp[1722691] x1[1495684]))
      val domToRemove[1722720]:BaseDom[146767] "dead at end of block" "insert auto destroy"
      val coerce_tmp[1723256]:BaseDom[146767] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1723260 'move' coerce_tmp[1723256](1723258 'deref' call_tmp[1722713]))
      (1928561 '=' domToRemove[1722720] coerce_tmp[1723256])
      (1722722 'noop')
      val domToFree[1722726]:BaseDom[146767] "dead at end of block" "insert auto destroy"
      val init_coerce_tmp[1723263]:BaseDom[146767] "dead at end of block" "temp"
      (1723266 'move' init_coerce_tmp[1723263](1723433 'cast' BaseDom[146767] nil[44]))
      (1722728 'move' domToFree[1722726] init_coerce_tmp[1723263])
      val distToRemove[1722733]:BaseDist[145968] "dead at end of block" "insert auto destroy"
      val init_coerce_tmp[1723269]:BaseDist[145968] "dead at end of block" "temp"
      (1723272 'move' init_coerce_tmp[1723269](1723437 'cast' BaseDist[145968] nil[44]))
      (1722735 'move' distToRemove[1722733] init_coerce_tmp[1723269])
      val distToFree[1722740]:BaseDist[145968] "dead at end of block" "insert auto destroy"
      val init_coerce_tmp[1723275]:BaseDist[145968] "dead at end of block" "temp"
      (1723278 'move' init_coerce_tmp[1723275](1723441 'cast' BaseDist[145968] nil[44]))
      (1722742 'move' distToFree[1722740] init_coerce_tmp[1723275])
      val domIsPrivatized[1722747]:bool[10] "dead at end of block" "insert auto destroy"
      (1722749 'move' domIsPrivatized[1722747] 0)
      const instanceDom[1722753]:BaseDom[146767] "dead at end of block" "const" "insert auto destroy"
      (1722755 'move' instanceDom[1722753](1723281 call chpl__initCopy[1495806] domToRemove[1722720]))
      const-val call_tmp[1722759]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1723284]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1723289 'move' coerce_tmp[1723284](1723286 'cast' object[22] domToRemove[1722720]))
      (1722761 'move' call_tmp[1722759](1722764 call !=[1485] coerce_tmp[1723284] nil[44]))
      const-val call_tmp[1722767]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1722769 'move' call_tmp[1722767] call_tmp[1722759])
      if call_tmp[1722767]
      {
        const-val tmp[1722776]:(unmanaged BaseDom?,unmanaged BaseDist?)[1496480] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        ref tmp[1722778]:_ref(BaseDom)[1208806] "dead after last mention" "maybe param" "temp"
        (1722780 'move' tmp[1722778](1722782 'addr of' domToFree[1722726]))
        ref tmp[1722784]:_ref(BaseDist)[1209040] "dead after last mention" "maybe param" "temp"
        (1722786 'move' tmp[1722784](1722788 'addr of' distToRemove[1722733]))
        val call_tmp[1722790]:BaseDom[146767] "dead after last mention" "expr temp" "maybe param" "temp"
        (1722792 'move' call_tmp[1722790] domToRemove[1722720])
        val coerce_tmp[1723293]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1723298 'move' coerce_tmp[1723293] call_tmp[1722790])
        const-val ret_tmp[1906846]:(unmanaged BaseDom?,unmanaged BaseDist?)[1496480] "temp"
        (1722803 call remove[146118] coerce_tmp[1723293] ret_tmp[1906846])
        (1906849 'move' tmp[1722776] ret_tmp[1906846])
        { scopeless
        }
        ref call_tmp[1722835]:_ref(BaseDom)[1208806] "dead after last mention" "maybe param" "temp"
        (1722837 'move' call_tmp[1722835](1723309 '.' tmp[1722776] x0[1496476]))
        val coerce_tmp[1723312]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1723316 'move' coerce_tmp[1723312](1723314 'deref' call_tmp[1722835]))
        (1722843 call =[1495600] tmp[1722778] coerce_tmp[1723312])
        ref call_tmp[1722846]:_ref(BaseDist)[1209040] "dead after last mention" "maybe param" "temp"
        (1722848 'move' call_tmp[1722846](1723321 '.' tmp[1722776] x1[1496478]))
        val coerce_tmp[1723324]:BaseDist[145968] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1723328 'move' coerce_tmp[1723324](1723326 'deref' call_tmp[1722846]))
        (1722854 call =[1500790] tmp[1722784] coerce_tmp[1723324])
        (1928564 call chpl__autoDestroy[1821865] tmp[1722776])
        const-val tmp[1722879]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val tmp[1722897]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        val call_tmp[1722899]:BaseDom[146767] "dead after last mention" "expr temp" "maybe param" "temp"
        (1722901 'move' call_tmp[1722899] domToRemove[1722720])
        ref call_tmp[1722906]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
        val coerce_tmp[1723337]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1723342 'move' coerce_tmp[1723337] call_tmp[1722899])
        (1722908 'move' call_tmp[1722906](1722911 call pid[801682] coerce_tmp[1723337]))
        const-val call_tmp[1722914]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1723345]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1723349 'move' coerce_tmp[1723345](1723347 'deref' call_tmp[1722906]))
        (1722916 'move' call_tmp[1722914](1722919 call !=[436128] coerce_tmp[1723345] -1))
        (1722922 'move' tmp[1722897] call_tmp[1722914])
        (1722927 'move' tmp[1722879] tmp[1722897])
        (1722940 call =[435290] domIsPrivatized[1722747] tmp[1722879])
      }
      val distIsPrivatized[1722947]:bool[10] "dead at end of block" "insert auto destroy"
      (1722949 'move' distIsPrivatized[1722947] 0)
      const-val call_tmp[1722954]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1723353]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1723358 'move' coerce_tmp[1723353](1723355 'cast' object[22] distToRemove[1722733]))
      (1722956 'move' call_tmp[1722954](1722959 call !=[1485] coerce_tmp[1723353] nil[44]))
      const-val call_tmp[1722962]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1722964 'move' call_tmp[1722962] call_tmp[1722954])
      if call_tmp[1722962]
      {
        val call_tmp[1722971]:BaseDist[145968] "dead after last mention" "expr temp" "maybe param" "temp"
        (1722973 'move' call_tmp[1722971] distToRemove[1722733])
        val call_tmp[1722978]:BaseDist[145968] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[1723362]:BaseDist[145968] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1723367 'move' coerce_tmp[1723362] call_tmp[1722971])
        (1722980 'move' call_tmp[1722978](1722986 call remove[145505] coerce_tmp[1723362]))
        (1722988 call =[1500790] distToFree[1722740] call_tmp[1722978])
        const-val tmp[1723012]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val tmp[1723030]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        val call_tmp[1723032]:BaseDist[145968] "dead after last mention" "expr temp" "maybe param" "temp"
        (1723034 'move' call_tmp[1723032] distToRemove[1722733])
        ref call_tmp[1723039]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
        val coerce_tmp[1723377]:BaseDist[145968] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1723382 'move' coerce_tmp[1723377] call_tmp[1723032])
        (1723041 'move' call_tmp[1723039](1723044 call pid[801494] coerce_tmp[1723377]))
        const-val call_tmp[1723047]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1723385]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1723389 'move' coerce_tmp[1723385](1723387 'deref' call_tmp[1723039]))
        (1723049 'move' call_tmp[1723047](1723052 call !=[436128] coerce_tmp[1723385] -1))
        (1723055 'move' tmp[1723030] call_tmp[1723047])
        (1723060 'move' tmp[1723012] tmp[1723030])
        (1723073 call =[435290] distIsPrivatized[1722947] tmp[1723012])
      }
      const-val call_tmp[1723080]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1723393]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1723399 'move' coerce_tmp[1723393](1723395 'cast' object[22] arrToFree[1722708]))
      (1723082 'move' call_tmp[1723080](1723085 call !=[1485] coerce_tmp[1723393] nil[44]))
      const-val call_tmp[1723088]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1723090 'move' call_tmp[1723088] call_tmp[1723080])
      if call_tmp[1723088]
      {
        val coerce_tmp[1723404]:BaseArr[149584] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1723410 'move' coerce_tmp[1723404](1723406 'cast' BaseArr[149584] _instance[1882872]))
        (1723105 call _delete_arr[1501421] coerce_tmp[1723404] deinitElts[1882874])
      }
      const-val call_tmp[1723111]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1723413]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1723418 'move' coerce_tmp[1723413](1723415 'cast' object[22] domToFree[1722726]))
      (1723113 'move' call_tmp[1723111](1723116 call !=[1485] coerce_tmp[1723413] nil[44]))
      const-val call_tmp[1723119]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1723121 'move' call_tmp[1723119] call_tmp[1723111])
      if call_tmp[1723119]
      {
        val call_tmp[1723128]:BaseDom[146767] "dead after last mention" "expr temp" "maybe param" "temp"
        (1723130 'move' call_tmp[1723128](1723133 call postfix![1496199] instanceDom[1722753]))
        (1723136 call _delete_dom[1502652] call_tmp[1723128] domIsPrivatized[1722747])
      }
      const-val call_tmp[1723143]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1723423]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1723428 'move' coerce_tmp[1723423](1723425 'cast' object[22] distToFree[1722740]))
      (1723145 'move' call_tmp[1723143](1723148 call !=[1485] coerce_tmp[1723423] nil[44]))
      const-val call_tmp[1723151]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1723153 'move' call_tmp[1723151] call_tmp[1723143])
      if call_tmp[1723151]
      {
        val call_tmp[1723160]:BaseDist[145968] "dead after last mention" "expr temp" "maybe param" "temp"
        (1723162 'move' call_tmp[1723160] distToFree[1722740])
        (1723168 call _delete_dist[150617] call_tmp[1723160] distIsPrivatized[1722947])
      }
      (1928569 call chpl__autoDestroy[1821734] tmp[1722691])
    }
    (1723175 return _void[55])
  }
  function on_fn[1751640](const in arg _instance[1882894]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401], const in arg deinitElts[1882896]:bool[10]) : void[4] "on" "resolved"
  {
    {
      const-val call_tmp[1751668]:(BaseArr,unmanaged BaseDom?)[1495686] "dead at end of block" "maybe param" "temp"
      val coerce_tmp[1752209]:BaseArr[149584] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1752214 'move' coerce_tmp[1752209](1752211 'cast' BaseArr[149584] _instance[1882894]))
      const-val ret_tmp[1916071]:(BaseArr,unmanaged BaseDom?)[1495686] "temp"
      (1751676 call remove[1493907] coerce_tmp[1752209] ret_tmp[1916071])
      (1916074 'move' call_tmp[1751668] ret_tmp[1916071])
      const-val tmp[1751678]:(BaseArr,unmanaged BaseDom?)[1495686] "dead at end of block" "insert auto destroy" "temp"
      (1751680 'move' tmp[1751678] call_tmp[1751668])
      1
      ref call_tmp[1751688]:_ref(BaseArr)[1208506] "dead at end of block" "maybe param" "temp"
      (1751690 'move' call_tmp[1751688](1752224 '.' tmp[1751678] x0[1495682]))
      val arrToFree[1751695]:BaseArr[149584] "dead at end of block" "insert auto destroy"
      val coerce_tmp[1752229]:BaseArr[149584] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1752233 'move' coerce_tmp[1752229](1752231 'deref' call_tmp[1751688]))
      (1928895 '=' arrToFree[1751695] coerce_tmp[1752229])
      (1751697 'noop')
      ref call_tmp[1751700]:_ref(BaseDom)[1208806] "dead at end of block" "maybe param" "temp"
      (1751702 'move' call_tmp[1751700](1752238 '.' tmp[1751678] x1[1495684]))
      val domToRemove[1751707]:BaseDom[146767] "dead at end of block" "insert auto destroy"
      val coerce_tmp[1752243]:BaseDom[146767] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1752247 'move' coerce_tmp[1752243](1752245 'deref' call_tmp[1751700]))
      (1928898 '=' domToRemove[1751707] coerce_tmp[1752243])
      (1751709 'noop')
      val domToFree[1751713]:BaseDom[146767] "dead at end of block" "insert auto destroy"
      val init_coerce_tmp[1752250]:BaseDom[146767] "dead at end of block" "temp"
      (1752253 'move' init_coerce_tmp[1752250](1752420 'cast' BaseDom[146767] nil[44]))
      (1751715 'move' domToFree[1751713] init_coerce_tmp[1752250])
      val distToRemove[1751720]:BaseDist[145968] "dead at end of block" "insert auto destroy"
      val init_coerce_tmp[1752256]:BaseDist[145968] "dead at end of block" "temp"
      (1752259 'move' init_coerce_tmp[1752256](1752424 'cast' BaseDist[145968] nil[44]))
      (1751722 'move' distToRemove[1751720] init_coerce_tmp[1752256])
      val distToFree[1751727]:BaseDist[145968] "dead at end of block" "insert auto destroy"
      val init_coerce_tmp[1752262]:BaseDist[145968] "dead at end of block" "temp"
      (1752265 'move' init_coerce_tmp[1752262](1752428 'cast' BaseDist[145968] nil[44]))
      (1751729 'move' distToFree[1751727] init_coerce_tmp[1752262])
      val domIsPrivatized[1751734]:bool[10] "dead at end of block" "insert auto destroy"
      (1751736 'move' domIsPrivatized[1751734] 0)
      const instanceDom[1751740]:BaseDom[146767] "dead at end of block" "const" "insert auto destroy"
      (1751742 'move' instanceDom[1751740](1752268 call chpl__initCopy[1495806] domToRemove[1751707]))
      const-val call_tmp[1751746]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1752271]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1752276 'move' coerce_tmp[1752271](1752273 'cast' object[22] domToRemove[1751707]))
      (1751748 'move' call_tmp[1751746](1751751 call !=[1485] coerce_tmp[1752271] nil[44]))
      const-val call_tmp[1751754]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1751756 'move' call_tmp[1751754] call_tmp[1751746])
      if call_tmp[1751754]
      {
        const-val tmp[1751763]:(unmanaged BaseDom?,unmanaged BaseDist?)[1496480] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        ref tmp[1751765]:_ref(BaseDom)[1208806] "dead after last mention" "maybe param" "temp"
        (1751767 'move' tmp[1751765](1751769 'addr of' domToFree[1751713]))
        ref tmp[1751771]:_ref(BaseDist)[1209040] "dead after last mention" "maybe param" "temp"
        (1751773 'move' tmp[1751771](1751775 'addr of' distToRemove[1751720]))
        val call_tmp[1751777]:BaseDom[146767] "dead after last mention" "expr temp" "maybe param" "temp"
        (1751779 'move' call_tmp[1751777] domToRemove[1751707])
        val coerce_tmp[1752280]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1752285 'move' coerce_tmp[1752280] call_tmp[1751777])
        const-val ret_tmp[1906852]:(unmanaged BaseDom?,unmanaged BaseDist?)[1496480] "temp"
        (1751790 call remove[146118] coerce_tmp[1752280] ret_tmp[1906852])
        (1906855 'move' tmp[1751763] ret_tmp[1906852])
        { scopeless
        }
        ref call_tmp[1751822]:_ref(BaseDom)[1208806] "dead after last mention" "maybe param" "temp"
        (1751824 'move' call_tmp[1751822](1752296 '.' tmp[1751763] x0[1496476]))
        val coerce_tmp[1752299]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1752303 'move' coerce_tmp[1752299](1752301 'deref' call_tmp[1751822]))
        (1751830 call =[1495600] tmp[1751765] coerce_tmp[1752299])
        ref call_tmp[1751833]:_ref(BaseDist)[1209040] "dead after last mention" "maybe param" "temp"
        (1751835 'move' call_tmp[1751833](1752308 '.' tmp[1751763] x1[1496478]))
        val coerce_tmp[1752311]:BaseDist[145968] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1752315 'move' coerce_tmp[1752311](1752313 'deref' call_tmp[1751833]))
        (1751841 call =[1500790] tmp[1751771] coerce_tmp[1752311])
        (1928901 call chpl__autoDestroy[1821865] tmp[1751763])
        const-val tmp[1751866]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val tmp[1751884]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        val call_tmp[1751886]:BaseDom[146767] "dead after last mention" "expr temp" "maybe param" "temp"
        (1751888 'move' call_tmp[1751886] domToRemove[1751707])
        ref call_tmp[1751893]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
        val coerce_tmp[1752324]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1752329 'move' coerce_tmp[1752324] call_tmp[1751886])
        (1751895 'move' call_tmp[1751893](1751898 call pid[801682] coerce_tmp[1752324]))
        const-val call_tmp[1751901]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1752332]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1752336 'move' coerce_tmp[1752332](1752334 'deref' call_tmp[1751893]))
        (1751903 'move' call_tmp[1751901](1751906 call !=[436128] coerce_tmp[1752332] -1))
        (1751909 'move' tmp[1751884] call_tmp[1751901])
        (1751914 'move' tmp[1751866] tmp[1751884])
        (1751927 call =[435290] domIsPrivatized[1751734] tmp[1751866])
      }
      val distIsPrivatized[1751934]:bool[10] "dead at end of block" "insert auto destroy"
      (1751936 'move' distIsPrivatized[1751934] 0)
      const-val call_tmp[1751941]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1752340]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1752345 'move' coerce_tmp[1752340](1752342 'cast' object[22] distToRemove[1751720]))
      (1751943 'move' call_tmp[1751941](1751946 call !=[1485] coerce_tmp[1752340] nil[44]))
      const-val call_tmp[1751949]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1751951 'move' call_tmp[1751949] call_tmp[1751941])
      if call_tmp[1751949]
      {
        val call_tmp[1751958]:BaseDist[145968] "dead after last mention" "expr temp" "maybe param" "temp"
        (1751960 'move' call_tmp[1751958] distToRemove[1751720])
        val call_tmp[1751965]:BaseDist[145968] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[1752349]:BaseDist[145968] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1752354 'move' coerce_tmp[1752349] call_tmp[1751958])
        (1751967 'move' call_tmp[1751965](1751973 call remove[145505] coerce_tmp[1752349]))
        (1751975 call =[1500790] distToFree[1751727] call_tmp[1751965])
        const-val tmp[1751999]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val tmp[1752017]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        val call_tmp[1752019]:BaseDist[145968] "dead after last mention" "expr temp" "maybe param" "temp"
        (1752021 'move' call_tmp[1752019] distToRemove[1751720])
        ref call_tmp[1752026]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
        val coerce_tmp[1752364]:BaseDist[145968] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1752369 'move' coerce_tmp[1752364] call_tmp[1752019])
        (1752028 'move' call_tmp[1752026](1752031 call pid[801494] coerce_tmp[1752364]))
        const-val call_tmp[1752034]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1752372]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1752376 'move' coerce_tmp[1752372](1752374 'deref' call_tmp[1752026]))
        (1752036 'move' call_tmp[1752034](1752039 call !=[436128] coerce_tmp[1752372] -1))
        (1752042 'move' tmp[1752017] call_tmp[1752034])
        (1752047 'move' tmp[1751999] tmp[1752017])
        (1752060 call =[435290] distIsPrivatized[1751934] tmp[1751999])
      }
      const-val call_tmp[1752067]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1752380]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1752386 'move' coerce_tmp[1752380](1752382 'cast' object[22] arrToFree[1751695]))
      (1752069 'move' call_tmp[1752067](1752072 call !=[1485] coerce_tmp[1752380] nil[44]))
      const-val call_tmp[1752075]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1752077 'move' call_tmp[1752075] call_tmp[1752067])
      if call_tmp[1752075]
      {
        val coerce_tmp[1752391]:BaseArr[149584] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1752397 'move' coerce_tmp[1752391](1752393 'cast' BaseArr[149584] _instance[1882894]))
        (1752092 call _delete_arr[1501421] coerce_tmp[1752391] deinitElts[1882896])
      }
      const-val call_tmp[1752098]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1752400]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1752405 'move' coerce_tmp[1752400](1752402 'cast' object[22] domToFree[1751713]))
      (1752100 'move' call_tmp[1752098](1752103 call !=[1485] coerce_tmp[1752400] nil[44]))
      const-val call_tmp[1752106]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1752108 'move' call_tmp[1752106] call_tmp[1752098])
      if call_tmp[1752106]
      {
        val call_tmp[1752115]:BaseDom[146767] "dead after last mention" "expr temp" "maybe param" "temp"
        (1752117 'move' call_tmp[1752115](1752120 call postfix![1496199] instanceDom[1751740]))
        (1752123 call _delete_dom[1502652] call_tmp[1752115] domIsPrivatized[1751734])
      }
      const-val call_tmp[1752130]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1752410]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1752415 'move' coerce_tmp[1752410](1752412 'cast' object[22] distToFree[1751727]))
      (1752132 'move' call_tmp[1752130](1752135 call !=[1485] coerce_tmp[1752410] nil[44]))
      const-val call_tmp[1752138]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1752140 'move' call_tmp[1752138] call_tmp[1752130])
      if call_tmp[1752138]
      {
        val call_tmp[1752147]:BaseDist[145968] "dead after last mention" "expr temp" "maybe param" "temp"
        (1752149 'move' call_tmp[1752147] distToFree[1751727])
        (1752155 call _delete_dist[150617] call_tmp[1752147] distIsPrivatized[1751934])
      }
      (1928906 call chpl__autoDestroy[1821734] tmp[1751678])
    }
    (1752162 return _void[55])
  }
  function on_fn[1785071](const in arg _instance[1882916]:[domain(1,int(64),false)] int(64)[1368867], const in arg deinitElts[1882918]:bool[10]) : void[4] "on" "resolved"
  {
    {
      const-val call_tmp[1785099]:(BaseArr,unmanaged BaseDom?)[1495686] "dead at end of block" "maybe param" "temp"
      val coerce_tmp[1785640]:BaseArr[149584] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1785645 'move' coerce_tmp[1785640](1785642 'cast' BaseArr[149584] _instance[1882916]))
      const-val ret_tmp[1916077]:(BaseArr,unmanaged BaseDom?)[1495686] "temp"
      (1785107 call remove[1493907] coerce_tmp[1785640] ret_tmp[1916077])
      (1916080 'move' call_tmp[1785099] ret_tmp[1916077])
      const-val tmp[1785109]:(BaseArr,unmanaged BaseDom?)[1495686] "dead at end of block" "insert auto destroy" "temp"
      (1785111 'move' tmp[1785109] call_tmp[1785099])
      1
      ref call_tmp[1785119]:_ref(BaseArr)[1208506] "dead at end of block" "maybe param" "temp"
      (1785121 'move' call_tmp[1785119](1785655 '.' tmp[1785109] x0[1495682]))
      val arrToFree[1785126]:BaseArr[149584] "dead at end of block" "insert auto destroy"
      val coerce_tmp[1785660]:BaseArr[149584] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1785664 'move' coerce_tmp[1785660](1785662 'deref' call_tmp[1785119]))
      (1929292 '=' arrToFree[1785126] coerce_tmp[1785660])
      (1785128 'noop')
      ref call_tmp[1785131]:_ref(BaseDom)[1208806] "dead at end of block" "maybe param" "temp"
      (1785133 'move' call_tmp[1785131](1785669 '.' tmp[1785109] x1[1495684]))
      val domToRemove[1785138]:BaseDom[146767] "dead at end of block" "insert auto destroy"
      val coerce_tmp[1785674]:BaseDom[146767] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1785678 'move' coerce_tmp[1785674](1785676 'deref' call_tmp[1785131]))
      (1929295 '=' domToRemove[1785138] coerce_tmp[1785674])
      (1785140 'noop')
      val domToFree[1785144]:BaseDom[146767] "dead at end of block" "insert auto destroy"
      val init_coerce_tmp[1785681]:BaseDom[146767] "dead at end of block" "temp"
      (1785684 'move' init_coerce_tmp[1785681](1785851 'cast' BaseDom[146767] nil[44]))
      (1785146 'move' domToFree[1785144] init_coerce_tmp[1785681])
      val distToRemove[1785151]:BaseDist[145968] "dead at end of block" "insert auto destroy"
      val init_coerce_tmp[1785687]:BaseDist[145968] "dead at end of block" "temp"
      (1785690 'move' init_coerce_tmp[1785687](1785855 'cast' BaseDist[145968] nil[44]))
      (1785153 'move' distToRemove[1785151] init_coerce_tmp[1785687])
      val distToFree[1785158]:BaseDist[145968] "dead at end of block" "insert auto destroy"
      val init_coerce_tmp[1785693]:BaseDist[145968] "dead at end of block" "temp"
      (1785696 'move' init_coerce_tmp[1785693](1785859 'cast' BaseDist[145968] nil[44]))
      (1785160 'move' distToFree[1785158] init_coerce_tmp[1785693])
      val domIsPrivatized[1785165]:bool[10] "dead at end of block" "insert auto destroy"
      (1785167 'move' domIsPrivatized[1785165] 0)
      const instanceDom[1785171]:BaseDom[146767] "dead at end of block" "const" "insert auto destroy"
      (1785173 'move' instanceDom[1785171](1785699 call chpl__initCopy[1495806] domToRemove[1785138]))
      const-val call_tmp[1785177]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1785702]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1785707 'move' coerce_tmp[1785702](1785704 'cast' object[22] domToRemove[1785138]))
      (1785179 'move' call_tmp[1785177](1785182 call !=[1485] coerce_tmp[1785702] nil[44]))
      const-val call_tmp[1785185]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1785187 'move' call_tmp[1785185] call_tmp[1785177])
      if call_tmp[1785185]
      {
        const-val tmp[1785194]:(unmanaged BaseDom?,unmanaged BaseDist?)[1496480] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        ref tmp[1785196]:_ref(BaseDom)[1208806] "dead after last mention" "maybe param" "temp"
        (1785198 'move' tmp[1785196](1785200 'addr of' domToFree[1785144]))
        ref tmp[1785202]:_ref(BaseDist)[1209040] "dead after last mention" "maybe param" "temp"
        (1785204 'move' tmp[1785202](1785206 'addr of' distToRemove[1785151]))
        val call_tmp[1785208]:BaseDom[146767] "dead after last mention" "expr temp" "maybe param" "temp"
        (1785210 'move' call_tmp[1785208] domToRemove[1785138])
        val coerce_tmp[1785711]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1785716 'move' coerce_tmp[1785711] call_tmp[1785208])
        const-val ret_tmp[1906858]:(unmanaged BaseDom?,unmanaged BaseDist?)[1496480] "temp"
        (1785221 call remove[146118] coerce_tmp[1785711] ret_tmp[1906858])
        (1906861 'move' tmp[1785194] ret_tmp[1906858])
        { scopeless
        }
        ref call_tmp[1785253]:_ref(BaseDom)[1208806] "dead after last mention" "maybe param" "temp"
        (1785255 'move' call_tmp[1785253](1785727 '.' tmp[1785194] x0[1496476]))
        val coerce_tmp[1785730]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1785734 'move' coerce_tmp[1785730](1785732 'deref' call_tmp[1785253]))
        (1785261 call =[1495600] tmp[1785196] coerce_tmp[1785730])
        ref call_tmp[1785264]:_ref(BaseDist)[1209040] "dead after last mention" "maybe param" "temp"
        (1785266 'move' call_tmp[1785264](1785739 '.' tmp[1785194] x1[1496478]))
        val coerce_tmp[1785742]:BaseDist[145968] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1785746 'move' coerce_tmp[1785742](1785744 'deref' call_tmp[1785264]))
        (1785272 call =[1500790] tmp[1785202] coerce_tmp[1785742])
        (1929298 call chpl__autoDestroy[1821865] tmp[1785194])
        const-val tmp[1785297]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val tmp[1785315]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        val call_tmp[1785317]:BaseDom[146767] "dead after last mention" "expr temp" "maybe param" "temp"
        (1785319 'move' call_tmp[1785317] domToRemove[1785138])
        ref call_tmp[1785324]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
        val coerce_tmp[1785755]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1785760 'move' coerce_tmp[1785755] call_tmp[1785317])
        (1785326 'move' call_tmp[1785324](1785329 call pid[801682] coerce_tmp[1785755]))
        const-val call_tmp[1785332]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1785763]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1785767 'move' coerce_tmp[1785763](1785765 'deref' call_tmp[1785324]))
        (1785334 'move' call_tmp[1785332](1785337 call !=[436128] coerce_tmp[1785763] -1))
        (1785340 'move' tmp[1785315] call_tmp[1785332])
        (1785345 'move' tmp[1785297] tmp[1785315])
        (1785358 call =[435290] domIsPrivatized[1785165] tmp[1785297])
      }
      val distIsPrivatized[1785365]:bool[10] "dead at end of block" "insert auto destroy"
      (1785367 'move' distIsPrivatized[1785365] 0)
      const-val call_tmp[1785372]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1785771]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1785776 'move' coerce_tmp[1785771](1785773 'cast' object[22] distToRemove[1785151]))
      (1785374 'move' call_tmp[1785372](1785377 call !=[1485] coerce_tmp[1785771] nil[44]))
      const-val call_tmp[1785380]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1785382 'move' call_tmp[1785380] call_tmp[1785372])
      if call_tmp[1785380]
      {
        val call_tmp[1785389]:BaseDist[145968] "dead after last mention" "expr temp" "maybe param" "temp"
        (1785391 'move' call_tmp[1785389] distToRemove[1785151])
        val call_tmp[1785396]:BaseDist[145968] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[1785780]:BaseDist[145968] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1785785 'move' coerce_tmp[1785780] call_tmp[1785389])
        (1785398 'move' call_tmp[1785396](1785404 call remove[145505] coerce_tmp[1785780]))
        (1785406 call =[1500790] distToFree[1785158] call_tmp[1785396])
        const-val tmp[1785430]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val tmp[1785448]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        val call_tmp[1785450]:BaseDist[145968] "dead after last mention" "expr temp" "maybe param" "temp"
        (1785452 'move' call_tmp[1785450] distToRemove[1785151])
        ref call_tmp[1785457]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
        val coerce_tmp[1785795]:BaseDist[145968] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1785800 'move' coerce_tmp[1785795] call_tmp[1785450])
        (1785459 'move' call_tmp[1785457](1785462 call pid[801494] coerce_tmp[1785795]))
        const-val call_tmp[1785465]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1785803]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1785807 'move' coerce_tmp[1785803](1785805 'deref' call_tmp[1785457]))
        (1785467 'move' call_tmp[1785465](1785470 call !=[436128] coerce_tmp[1785803] -1))
        (1785473 'move' tmp[1785448] call_tmp[1785465])
        (1785478 'move' tmp[1785430] tmp[1785448])
        (1785491 call =[435290] distIsPrivatized[1785365] tmp[1785430])
      }
      const-val call_tmp[1785498]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1785811]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1785817 'move' coerce_tmp[1785811](1785813 'cast' object[22] arrToFree[1785126]))
      (1785500 'move' call_tmp[1785498](1785503 call !=[1485] coerce_tmp[1785811] nil[44]))
      const-val call_tmp[1785506]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1785508 'move' call_tmp[1785506] call_tmp[1785498])
      if call_tmp[1785506]
      {
        val coerce_tmp[1785822]:BaseArr[149584] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1785828 'move' coerce_tmp[1785822](1785824 'cast' BaseArr[149584] _instance[1882916]))
        (1785523 call _delete_arr[1501421] coerce_tmp[1785822] deinitElts[1882918])
      }
      const-val call_tmp[1785529]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1785831]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1785836 'move' coerce_tmp[1785831](1785833 'cast' object[22] domToFree[1785144]))
      (1785531 'move' call_tmp[1785529](1785534 call !=[1485] coerce_tmp[1785831] nil[44]))
      const-val call_tmp[1785537]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1785539 'move' call_tmp[1785537] call_tmp[1785529])
      if call_tmp[1785537]
      {
        val call_tmp[1785546]:BaseDom[146767] "dead after last mention" "expr temp" "maybe param" "temp"
        (1785548 'move' call_tmp[1785546](1785551 call postfix![1496199] instanceDom[1785171]))
        (1785554 call _delete_dom[1502652] call_tmp[1785546] domIsPrivatized[1785165])
      }
      const-val call_tmp[1785561]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1785841]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1785846 'move' coerce_tmp[1785841](1785843 'cast' object[22] distToFree[1785158]))
      (1785563 'move' call_tmp[1785561](1785566 call !=[1485] coerce_tmp[1785841] nil[44]))
      const-val call_tmp[1785569]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1785571 'move' call_tmp[1785569] call_tmp[1785561])
      if call_tmp[1785569]
      {
        val call_tmp[1785578]:BaseDist[145968] "dead after last mention" "expr temp" "maybe param" "temp"
        (1785580 'move' call_tmp[1785578] distToFree[1785158])
        (1785586 call _delete_dist[150617] call_tmp[1785578] distIsPrivatized[1785365])
      }
      (1929303 call chpl__autoDestroy[1821734] tmp[1785109])
    }
    (1785593 return _void[55])
  }
  function on_fn[1816178](const in arg _instance[1882938]:[domain(1,int(64),false)] uint(64)[1450261], const in arg deinitElts[1882940]:bool[10]) : void[4] "on" "resolved"
  {
    {
      const-val call_tmp[1816206]:(BaseArr,unmanaged BaseDom?)[1495686] "dead at end of block" "maybe param" "temp"
      val coerce_tmp[1816747]:BaseArr[149584] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1816752 'move' coerce_tmp[1816747](1816749 'cast' BaseArr[149584] _instance[1882938]))
      const-val ret_tmp[1916083]:(BaseArr,unmanaged BaseDom?)[1495686] "temp"
      (1816214 call remove[1493907] coerce_tmp[1816747] ret_tmp[1916083])
      (1916086 'move' call_tmp[1816206] ret_tmp[1916083])
      const-val tmp[1816216]:(BaseArr,unmanaged BaseDom?)[1495686] "dead at end of block" "insert auto destroy" "temp"
      (1816218 'move' tmp[1816216] call_tmp[1816206])
      1
      ref call_tmp[1816226]:_ref(BaseArr)[1208506] "dead at end of block" "maybe param" "temp"
      (1816228 'move' call_tmp[1816226](1816762 '.' tmp[1816216] x0[1495682]))
      val arrToFree[1816233]:BaseArr[149584] "dead at end of block" "insert auto destroy"
      val coerce_tmp[1816767]:BaseArr[149584] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1816771 'move' coerce_tmp[1816767](1816769 'deref' call_tmp[1816226]))
      (1929653 '=' arrToFree[1816233] coerce_tmp[1816767])
      (1816235 'noop')
      ref call_tmp[1816238]:_ref(BaseDom)[1208806] "dead at end of block" "maybe param" "temp"
      (1816240 'move' call_tmp[1816238](1816776 '.' tmp[1816216] x1[1495684]))
      val domToRemove[1816245]:BaseDom[146767] "dead at end of block" "insert auto destroy"
      val coerce_tmp[1816781]:BaseDom[146767] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1816785 'move' coerce_tmp[1816781](1816783 'deref' call_tmp[1816238]))
      (1929656 '=' domToRemove[1816245] coerce_tmp[1816781])
      (1816247 'noop')
      val domToFree[1816251]:BaseDom[146767] "dead at end of block" "insert auto destroy"
      val init_coerce_tmp[1816788]:BaseDom[146767] "dead at end of block" "temp"
      (1816791 'move' init_coerce_tmp[1816788](1816958 'cast' BaseDom[146767] nil[44]))
      (1816253 'move' domToFree[1816251] init_coerce_tmp[1816788])
      val distToRemove[1816258]:BaseDist[145968] "dead at end of block" "insert auto destroy"
      val init_coerce_tmp[1816794]:BaseDist[145968] "dead at end of block" "temp"
      (1816797 'move' init_coerce_tmp[1816794](1816962 'cast' BaseDist[145968] nil[44]))
      (1816260 'move' distToRemove[1816258] init_coerce_tmp[1816794])
      val distToFree[1816265]:BaseDist[145968] "dead at end of block" "insert auto destroy"
      val init_coerce_tmp[1816800]:BaseDist[145968] "dead at end of block" "temp"
      (1816803 'move' init_coerce_tmp[1816800](1816966 'cast' BaseDist[145968] nil[44]))
      (1816267 'move' distToFree[1816265] init_coerce_tmp[1816800])
      val domIsPrivatized[1816272]:bool[10] "dead at end of block" "insert auto destroy"
      (1816274 'move' domIsPrivatized[1816272] 0)
      const instanceDom[1816278]:BaseDom[146767] "dead at end of block" "const" "insert auto destroy"
      (1816280 'move' instanceDom[1816278](1816806 call chpl__initCopy[1495806] domToRemove[1816245]))
      const-val call_tmp[1816284]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1816809]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1816814 'move' coerce_tmp[1816809](1816811 'cast' object[22] domToRemove[1816245]))
      (1816286 'move' call_tmp[1816284](1816289 call !=[1485] coerce_tmp[1816809] nil[44]))
      const-val call_tmp[1816292]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1816294 'move' call_tmp[1816292] call_tmp[1816284])
      if call_tmp[1816292]
      {
        const-val tmp[1816301]:(unmanaged BaseDom?,unmanaged BaseDist?)[1496480] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        ref tmp[1816303]:_ref(BaseDom)[1208806] "dead after last mention" "maybe param" "temp"
        (1816305 'move' tmp[1816303](1816307 'addr of' domToFree[1816251]))
        ref tmp[1816309]:_ref(BaseDist)[1209040] "dead after last mention" "maybe param" "temp"
        (1816311 'move' tmp[1816309](1816313 'addr of' distToRemove[1816258]))
        val call_tmp[1816315]:BaseDom[146767] "dead after last mention" "expr temp" "maybe param" "temp"
        (1816317 'move' call_tmp[1816315] domToRemove[1816245])
        val coerce_tmp[1816818]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1816823 'move' coerce_tmp[1816818] call_tmp[1816315])
        const-val ret_tmp[1906864]:(unmanaged BaseDom?,unmanaged BaseDist?)[1496480] "temp"
        (1816328 call remove[146118] coerce_tmp[1816818] ret_tmp[1906864])
        (1906867 'move' tmp[1816301] ret_tmp[1906864])
        { scopeless
        }
        ref call_tmp[1816360]:_ref(BaseDom)[1208806] "dead after last mention" "maybe param" "temp"
        (1816362 'move' call_tmp[1816360](1816834 '.' tmp[1816301] x0[1496476]))
        val coerce_tmp[1816837]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1816841 'move' coerce_tmp[1816837](1816839 'deref' call_tmp[1816360]))
        (1816368 call =[1495600] tmp[1816303] coerce_tmp[1816837])
        ref call_tmp[1816371]:_ref(BaseDist)[1209040] "dead after last mention" "maybe param" "temp"
        (1816373 'move' call_tmp[1816371](1816846 '.' tmp[1816301] x1[1496478]))
        val coerce_tmp[1816849]:BaseDist[145968] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1816853 'move' coerce_tmp[1816849](1816851 'deref' call_tmp[1816371]))
        (1816379 call =[1500790] tmp[1816309] coerce_tmp[1816849])
        (1929659 call chpl__autoDestroy[1821865] tmp[1816301])
        const-val tmp[1816404]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val tmp[1816422]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        val call_tmp[1816424]:BaseDom[146767] "dead after last mention" "expr temp" "maybe param" "temp"
        (1816426 'move' call_tmp[1816424] domToRemove[1816245])
        ref call_tmp[1816431]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
        val coerce_tmp[1816862]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1816867 'move' coerce_tmp[1816862] call_tmp[1816424])
        (1816433 'move' call_tmp[1816431](1816436 call pid[801682] coerce_tmp[1816862]))
        const-val call_tmp[1816439]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1816870]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1816874 'move' coerce_tmp[1816870](1816872 'deref' call_tmp[1816431]))
        (1816441 'move' call_tmp[1816439](1816444 call !=[436128] coerce_tmp[1816870] -1))
        (1816447 'move' tmp[1816422] call_tmp[1816439])
        (1816452 'move' tmp[1816404] tmp[1816422])
        (1816465 call =[435290] domIsPrivatized[1816272] tmp[1816404])
      }
      val distIsPrivatized[1816472]:bool[10] "dead at end of block" "insert auto destroy"
      (1816474 'move' distIsPrivatized[1816472] 0)
      const-val call_tmp[1816479]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1816878]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1816883 'move' coerce_tmp[1816878](1816880 'cast' object[22] distToRemove[1816258]))
      (1816481 'move' call_tmp[1816479](1816484 call !=[1485] coerce_tmp[1816878] nil[44]))
      const-val call_tmp[1816487]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1816489 'move' call_tmp[1816487] call_tmp[1816479])
      if call_tmp[1816487]
      {
        val call_tmp[1816496]:BaseDist[145968] "dead after last mention" "expr temp" "maybe param" "temp"
        (1816498 'move' call_tmp[1816496] distToRemove[1816258])
        val call_tmp[1816503]:BaseDist[145968] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[1816887]:BaseDist[145968] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1816892 'move' coerce_tmp[1816887] call_tmp[1816496])
        (1816505 'move' call_tmp[1816503](1816511 call remove[145505] coerce_tmp[1816887]))
        (1816513 call =[1500790] distToFree[1816265] call_tmp[1816503])
        const-val tmp[1816537]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val tmp[1816555]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        val call_tmp[1816557]:BaseDist[145968] "dead after last mention" "expr temp" "maybe param" "temp"
        (1816559 'move' call_tmp[1816557] distToRemove[1816258])
        ref call_tmp[1816564]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
        val coerce_tmp[1816902]:BaseDist[145968] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1816907 'move' coerce_tmp[1816902] call_tmp[1816557])
        (1816566 'move' call_tmp[1816564](1816569 call pid[801494] coerce_tmp[1816902]))
        const-val call_tmp[1816572]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1816910]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1816914 'move' coerce_tmp[1816910](1816912 'deref' call_tmp[1816564]))
        (1816574 'move' call_tmp[1816572](1816577 call !=[436128] coerce_tmp[1816910] -1))
        (1816580 'move' tmp[1816555] call_tmp[1816572])
        (1816585 'move' tmp[1816537] tmp[1816555])
        (1816598 call =[435290] distIsPrivatized[1816472] tmp[1816537])
      }
      const-val call_tmp[1816605]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1816918]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1816924 'move' coerce_tmp[1816918](1816920 'cast' object[22] arrToFree[1816233]))
      (1816607 'move' call_tmp[1816605](1816610 call !=[1485] coerce_tmp[1816918] nil[44]))
      const-val call_tmp[1816613]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1816615 'move' call_tmp[1816613] call_tmp[1816605])
      if call_tmp[1816613]
      {
        val coerce_tmp[1816929]:BaseArr[149584] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1816935 'move' coerce_tmp[1816929](1816931 'cast' BaseArr[149584] _instance[1882938]))
        (1816630 call _delete_arr[1501421] coerce_tmp[1816929] deinitElts[1882940])
      }
      const-val call_tmp[1816636]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1816938]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1816943 'move' coerce_tmp[1816938](1816940 'cast' object[22] domToFree[1816251]))
      (1816638 'move' call_tmp[1816636](1816641 call !=[1485] coerce_tmp[1816938] nil[44]))
      const-val call_tmp[1816644]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1816646 'move' call_tmp[1816644] call_tmp[1816636])
      if call_tmp[1816644]
      {
        val call_tmp[1816653]:BaseDom[146767] "dead after last mention" "expr temp" "maybe param" "temp"
        (1816655 'move' call_tmp[1816653](1816658 call postfix![1496199] instanceDom[1816278]))
        (1816661 call _delete_dom[1502652] call_tmp[1816653] domIsPrivatized[1816272])
      }
      const-val call_tmp[1816668]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1816948]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1816953 'move' coerce_tmp[1816948](1816950 'cast' object[22] distToFree[1816265]))
      (1816670 'move' call_tmp[1816668](1816673 call !=[1485] coerce_tmp[1816948] nil[44]))
      const-val call_tmp[1816676]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1816678 'move' call_tmp[1816676] call_tmp[1816668])
      if call_tmp[1816676]
      {
        val call_tmp[1816685]:BaseDist[145968] "dead after last mention" "expr temp" "maybe param" "temp"
        (1816687 'move' call_tmp[1816685] distToFree[1816265])
        (1816693 call _delete_dist[150617] call_tmp[1816685] distIsPrivatized[1816472])
      }
      (1929664 call chpl__autoDestroy[1821734] tmp[1816216])
    }
    (1816700 return _void[55])
  }
  function chpl__deinit_ChapelArray[1930217]() : void[4] "resolved"
  {
    label _endchpl__deinit_ChapelArray[1930223]
    ref tmp[2197618]:AtomicT(int(64))[940323] "temp"
    (2197623 'move' tmp[2197618](2197620 '.' numPrivateObjects[113711] value[2197608]))
    (1930225 call chpl__autoDestroy[1604401] tmp[2197618])
    (1930220 return _void[55])
  }
  function coforall_fn[1940458](const  ref arg locBlock[1940460]:1*range(int(64),bounded,false)[1244885], const in arg parDim[1940462]:int(64)[13], const in arg numChunks[1940464]:int(64)[13], const in arg chunk[1940466]:int(64)[13], const in arg _coforallCount[1940468]:_EndCount(AtomicT(int(64)),int(64))[945532], ref arg error_out[1940470]:Error[167984], const?  ref arg default_arg_offset[1940472]:_ref(1*int(64))[1256784], const  ref arg chpl__iterLF[1940832]:_ref(2*[domain(1,int(64),false)] range(int(64),bounded,false))[1480207]) : void[4] throws "cobegin or coforall" "inlined function" "resolved" "task fn from iterator fn"
  {
    {
      val call_tmp[1940476]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[1940478]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[1940480]:1*range(int(64),bounded,false)[1244885] "dead after last mention" "maybe param" "temp" "type variable"
      val followMe[1940482]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "insert auto destroy" "maybe copy elided"
      (1940484 'move' followMe[1940482](1940487 call chpl__initCopy[1297040] locBlock[1940460]))
      ref call_tmp[1940489]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1940491 'move' call_tmp[1940489](1940494 call this[1382848] locBlock[1940460] parDim[1940462]))
      const-val call_tmp[1940497]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1940499]:range(int(64),bounded,false)[1027003] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1940501 'move' coerce_tmp[1940499](1940504 call chpl__initCopy[1085195] call_tmp[1940489]))
      (1940506 'move' call_tmp[1940497](1940509 call size[1035978] coerce_tmp[1940499]))
      ref call_tmp[1940511]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1940513 'move' call_tmp[1940511](1940516 call this[1382848] locBlock[1940460] parDim[1940462]))
      ref call_tmp[1940519]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1940521 'move' call_tmp[1940519](1940524 call _high[1028849] call_tmp[1940511]))
      ref call_tmp[1940526]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1940528 'move' call_tmp[1940526](1940531 call this[1382848] locBlock[1940460] parDim[1940462]))
      ref call_tmp[1940534]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1940536 'move' call_tmp[1940534](1940539 call _low[1028641] call_tmp[1940526]))
      ref call_tmp[1940541]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1940543 'move' call_tmp[1940541](1940546 call this[1382848] locBlock[1940460] parDim[1940462]))
      ref call_tmp[1940549]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1940551 'move' call_tmp[1940549](1940554 call _low[1028641] call_tmp[1940541]))
      const-val call_tmp[1940556]:2*int(64)[1040245] "dead at end of block" "maybe param" "temp"
      const-val coerce_tmp[1940558]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1940560 'move' coerce_tmp[1940558](1940562 'deref' call_tmp[1940519]))
      const-val coerce_tmp[1940564]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1940566 'move' coerce_tmp[1940564](1940568 'deref' call_tmp[1940534]))
      const-val coerce_tmp[1940570]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1940572 'move' coerce_tmp[1940570](1940574 'deref' call_tmp[1940549]))
      const-val ret_tmp[1940576]:2*int(64)[1040245] "temp"
      (1940579 call _computeBlock[1229525] call_tmp[1940497] numChunks[1940464] chunk[1940466] coerce_tmp[1940558] coerce_tmp[1940564] coerce_tmp[1940570] ret_tmp[1940576])
      (1940587 'move' call_tmp[1940556] ret_tmp[1940576])
      const-val tmp[1940590]:2*int(64)[1040245] "dead at end of block" "const" "insert auto destroy" "temp"
      (1940592 'move' tmp[1940590] call_tmp[1940556])
      1
      ref call_tmp[1940596]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1940598 'move' call_tmp[1940596](1940600 '.' tmp[1940590] x0[1040241]))
      const-val lo[1940603]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[1940605]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1940607 'move' coerce_tmp[1940605](1940609 'deref' call_tmp[1940596]))
      (1940611 '=' lo[1940603] coerce_tmp[1940605])
      (1940614 'noop')
      ref call_tmp[1940615]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1940617 'move' call_tmp[1940615](1940619 '.' tmp[1940590] x1[1040243]))
      const-val hi[1940622]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[1940624]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1940626 'move' coerce_tmp[1940624](1940628 'deref' call_tmp[1940615]))
      (1940630 '=' hi[1940622] coerce_tmp[1940624])
      (1940633 'noop')
      ref call_tmp[1940634]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
      (1940636 'move' call_tmp[1940634](1940639 call this[1382848] followMe[1940482] parDim[1940462]))
      const-val call_tmp[1940642]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1940644]:range(int(64),bounded,false)[1027003] "temp"
      (1940647 call chpl_build_bounded_range[455253] lo[1940603] hi[1940622] ret_tmp[1940644])
      (1940651 'move' call_tmp[1940642] ret_tmp[1940644])
      (1940655 call =[1251739] call_tmp[1940634] call_tmp[1940642])
      (1940659 call chpl__autoDestroy[1407763] call_tmp[1940642])
      const-val yret[1940661]:1*range(int(64),bounded,false)[1244885] "dead after last mention" "YVV" "temp"
      const-val _yield_expr_tmp_[1940663]:1*range(int(64),bounded,false)[1244885] "temp"
      (1940665 '=' _yield_expr_tmp_[1940663] followMe[1940482])
      (1940668 'noop')
      (1940669 'move' yret[1940661] _yield_expr_tmp_[1940663])
      const-val _indexOfInterest[1940672]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
      (1940674 'move' _indexOfInterest[1940672] yret[1940661])
      {
        const-val followThis[1940678]:1*range(int(64),bounded,false)[1244885] "const" "index var" "insert auto destroy" "maybe copy elided"
        (1940680 'move' followThis[1940678] _indexOfInterest[1940672])
        const-val yret[1940683]:1*range(int(64),bounded,false)[1244885] "dead after last mention" "YVV" "temp"
        const-val _yield_expr_tmp_[1940685]:1*range(int(64),bounded,false)[1244885] "temp"
        (1940687 '=' _yield_expr_tmp_[1940685] followThis[1940678])
        (1940690 'noop')
        (1940691 'move' yret[1940683] _yield_expr_tmp_[1940685])
        const-val _indexOfInterest[1940694]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        (1940696 'move' _indexOfInterest[1940694] yret[1940683])
        {
          const-val followThis[1940700]:1*range(int(64),bounded,false)[1244885] "const" "index var" "insert auto destroy" "maybe copy elided"
          (1940702 'move' followThis[1940700] _indexOfInterest[1940694])
          const-val yret[1940705]:1*range(int(64),bounded,false)[1244885] "dead after last mention" "YVV" "temp"
          const-val _yield_expr_tmp_[1940707]:1*range(int(64),bounded,false)[1244885] "temp"
          (1940709 '=' _yield_expr_tmp_[1940707] followThis[1940700])
          (1940712 'noop')
          (1940713 'move' yret[1940705] _yield_expr_tmp_[1940707])
          const-val chpl_followThis[1940756]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "index var" "an _indexOfInterest or chpl__followIdx variable" "insert auto destroy" "temp"
          (1940758 'move' chpl_followThis[1940756] yret[1940705])
          {
            {
            }
            {
              const-val chpl__followIter[1940763]:2*_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1491961] "dead at end of block" "temp"
              const-val call_tmp[1940765]:2*_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1490709] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
              const-val ret_tmp[1940767]:2*_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1490709] "temp"
              (1940770 call _toFollowerZip[1481154] chpl__iterLF[1940832] chpl_followThis[1940756] ret_tmp[1940767])
              (1940774 'move' call_tmp[1940765] ret_tmp[1940767])
              const-val ret_tmp[1940777]:2*_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1491961] "temp"
              (1940780 call _getIteratorZip[1490837] call_tmp[1940765] ret_tmp[1940777])
              (1940783 'move' chpl__followIter[1940763] ret_tmp[1940777])
              val _iterator[2035764]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1490004] "temp"
              (2035770 'move' _iterator[2035764](2035767 '.v' chpl__followIter[1940763] x0[1491957]))
              val _iterator[2035777]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1490004] "temp"
              (2035783 'move' _iterator[2035777](2035780 '.v' chpl__followIter[1940763] x1[1491959]))
              {
                (2035792 call zip1[1490039] _iterator[2035764])
              }
              {
                (2035827 call zip1[1490039] _iterator[2035777])
              }
              const-val isFinished[2035853]:bool[10] "temp"
              val hasMore[2035852]:bool[10] "temp"
              CForLoop[2035900] order-independent
              {
                val chpl__followIdx[2035901]:2*range(int(64),bounded,false)[1492864] "dead at end of block" "follower index" "index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
                {
                  (2035905 call zip2[1490048] _iterator[2035777])
                }
                {
                  const-val retTmp[2035908]:int(64)[13] "temp"
                  (2035910 'move' retTmp[2035908](2035913 call hasMore[1490075] _iterator[2035777]))
                  (2035915 'move' hasMore[2035852](2035917 'cast' bool[10] retTmp[2035908]))
                }
                (2035920 'move' isFinished[2035853](2035922 '!' hasMore[2035852]))
                if isFinished[2035853]
                {
                  (2035926 'chpl_error' c"zippered iterations have non-equal lengths")
                }
                {
                  (2035930 'move' _index[2035945](2035933 call getValue[1490084] _iterator[2035777]))
                }
                {
                  (2035937 call zip2[1490048] _iterator[2035764])
                }
                {
                  (2035940 'move' _index[2035951](2035943 call getValue[1490084] _iterator[2035764]))
                }
                ref _index[2035945]:_ref(range(int(64),bounded,false))[1027047] "temp"
                (2035947 '.=' chpl__followIdx[2035901] x1[1492862] _index[2035945])
                ref _index[2035951]:_ref(range(int(64),bounded,false))[1027047] "temp"
                (2035953 '.=' chpl__followIdx[2035901] x0[1492860] _index[2035951])
                {
                  ref aa[2035958]:_ref(range(int(64),bounded,false))[1027047] "index var" "insert auto destroy"
                  ref bb[2035960]:_ref(range(int(64),bounded,false))[1027047] "index var" "insert auto destroy"
                  (2035962 'move' aa[2035958](2035964 '.v' chpl__followIdx[2035901] x0[1492860]))
                  (2035967 'move' bb[2035960](2035969 '.v' chpl__followIdx[2035901] x1[1492862]))
                  {
                    val call_tmp[2035973]:range(int(64),bounded,false)[1027003] "dead after last mention" "maybe param" "temp" "type variable"
                    const-val copy[2035975]:range(int(64),bounded,false)[1027003] "dead at end of block" "no auto destroy"
                    (2035977 'move' copy[2035975](2035979 'deref' bb[2035960]))
                    (2035981 '=' aa[2035958] copy[2035975])
                    val optinfo[2035984]:int(64)[13] "no codegen" "temp" "lhs outlives forall" "forall no task private"
                    (2035986 'optimization info' optinfo[2035984])
                  }
                }
                {
                  (2035990 call zip3[1490057] _iterator[2035764])
                }
                {
                  (2035994 call zip3[1490057] _iterator[2035777])
                }
                {
                  {
                    (2035802 call init[1490093] _iterator[2035764])
                  }
                  {
                    (2035837 call init[1490093] _iterator[2035777])
                  }
                }
                {
                  (2035818 call hasMore[1490075] _iterator[2035764])
                }
                {
                  {
                    (2035806 call incr[1490102] _iterator[2035764])
                  }
                  {
                    (2035841 call incr[1490102] _iterator[2035777])
                  }
                }
              }
              {
                const-val retTmp[2035887]:int(64)[13] "temp"
                (2035889 'move' retTmp[2035887](2035884 call hasMore[1490075] _iterator[2035777]))
                (2035894 'move' hasMore[2035852](2035891 'cast' bool[10] retTmp[2035887]))
              }
              if hasMore[2035852]
              {
                (2035879 'chpl_error' c"zippered iterations have non-equal lengths")
              }
              {
                (2035849 call zip4[1490066] _iterator[2035777])
              }
              {
                (2035814 call zip4[1490066] _iterator[2035764])
              }
              (1940823 call _freeIterator[1492040] chpl__followIter[1940763])
              (1940826 call chpl__autoDestroy[1821203] call_tmp[1940765])
            }
            (1940829 call chpl__autoDestroy[1695146] chpl_followThis[1940756])
          }
          label _continueLabel[1940732]
        }
        label _continueLabel[1940734]
      }
      (1940737 call chpl__autoDestroy[1674803] tmp[1940590])
      (1940740 call chpl__autoDestroy[1407763] coerce_tmp[1940499])
    }
    label _endcoforall_fn[1940746]
    (1940748 return _void[55])
  }
  function coforall_fn[1943628](const  ref arg locBlock[1943630]:1*range(int(64),bounded,false)[1244885], const in arg parDim[1943632]:int(64)[13], const in arg numChunks[1943634]:int(64)[13], const in arg chunk[1943636]:int(64)[13], const in arg _coforallCount[1943638]:_EndCount(AtomicT(int(64)),int(64))[945532], ref arg error_out[1943640]:Error[167984], const?  ref arg default_arg_offset[1943642]:_ref(1*int(64))[1256784], const  ref arg chpl__iterLF[1944002]:_ref(2*[domain(1,int(64),false)] real(64))[1537618]) : void[4] throws "cobegin or coforall" "inlined function" "resolved" "task fn from iterator fn"
  {
    {
      val call_tmp[1943646]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[1943648]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[1943650]:1*range(int(64),bounded,false)[1244885] "dead after last mention" "maybe param" "temp" "type variable"
      val followMe[1943652]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "insert auto destroy" "maybe copy elided"
      (1943654 'move' followMe[1943652](1943657 call chpl__initCopy[1297040] locBlock[1943630]))
      ref call_tmp[1943659]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1943661 'move' call_tmp[1943659](1943664 call this[1382848] locBlock[1943630] parDim[1943632]))
      const-val call_tmp[1943667]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1943669]:range(int(64),bounded,false)[1027003] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1943671 'move' coerce_tmp[1943669](1943674 call chpl__initCopy[1085195] call_tmp[1943659]))
      (1943676 'move' call_tmp[1943667](1943679 call size[1035978] coerce_tmp[1943669]))
      ref call_tmp[1943681]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1943683 'move' call_tmp[1943681](1943686 call this[1382848] locBlock[1943630] parDim[1943632]))
      ref call_tmp[1943689]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1943691 'move' call_tmp[1943689](1943694 call _high[1028849] call_tmp[1943681]))
      ref call_tmp[1943696]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1943698 'move' call_tmp[1943696](1943701 call this[1382848] locBlock[1943630] parDim[1943632]))
      ref call_tmp[1943704]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1943706 'move' call_tmp[1943704](1943709 call _low[1028641] call_tmp[1943696]))
      ref call_tmp[1943711]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1943713 'move' call_tmp[1943711](1943716 call this[1382848] locBlock[1943630] parDim[1943632]))
      ref call_tmp[1943719]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1943721 'move' call_tmp[1943719](1943724 call _low[1028641] call_tmp[1943711]))
      const-val call_tmp[1943726]:2*int(64)[1040245] "dead at end of block" "maybe param" "temp"
      const-val coerce_tmp[1943728]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1943730 'move' coerce_tmp[1943728](1943732 'deref' call_tmp[1943689]))
      const-val coerce_tmp[1943734]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1943736 'move' coerce_tmp[1943734](1943738 'deref' call_tmp[1943704]))
      const-val coerce_tmp[1943740]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1943742 'move' coerce_tmp[1943740](1943744 'deref' call_tmp[1943719]))
      const-val ret_tmp[1943746]:2*int(64)[1040245] "temp"
      (1943749 call _computeBlock[1229525] call_tmp[1943667] numChunks[1943634] chunk[1943636] coerce_tmp[1943728] coerce_tmp[1943734] coerce_tmp[1943740] ret_tmp[1943746])
      (1943757 'move' call_tmp[1943726] ret_tmp[1943746])
      const-val tmp[1943760]:2*int(64)[1040245] "dead at end of block" "const" "insert auto destroy" "temp"
      (1943762 'move' tmp[1943760] call_tmp[1943726])
      1
      ref call_tmp[1943766]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1943768 'move' call_tmp[1943766](1943770 '.' tmp[1943760] x0[1040241]))
      const-val lo[1943773]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[1943775]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1943777 'move' coerce_tmp[1943775](1943779 'deref' call_tmp[1943766]))
      (1943781 '=' lo[1943773] coerce_tmp[1943775])
      (1943784 'noop')
      ref call_tmp[1943785]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1943787 'move' call_tmp[1943785](1943789 '.' tmp[1943760] x1[1040243]))
      const-val hi[1943792]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[1943794]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1943796 'move' coerce_tmp[1943794](1943798 'deref' call_tmp[1943785]))
      (1943800 '=' hi[1943792] coerce_tmp[1943794])
      (1943803 'noop')
      ref call_tmp[1943804]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
      (1943806 'move' call_tmp[1943804](1943809 call this[1382848] followMe[1943652] parDim[1943632]))
      const-val call_tmp[1943812]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1943814]:range(int(64),bounded,false)[1027003] "temp"
      (1943817 call chpl_build_bounded_range[455253] lo[1943773] hi[1943792] ret_tmp[1943814])
      (1943821 'move' call_tmp[1943812] ret_tmp[1943814])
      (1943825 call =[1251739] call_tmp[1943804] call_tmp[1943812])
      (1943829 call chpl__autoDestroy[1407763] call_tmp[1943812])
      const-val yret[1943831]:1*range(int(64),bounded,false)[1244885] "dead after last mention" "YVV" "temp"
      const-val _yield_expr_tmp_[1943833]:1*range(int(64),bounded,false)[1244885] "temp"
      (1943835 '=' _yield_expr_tmp_[1943833] followMe[1943652])
      (1943838 'noop')
      (1943839 'move' yret[1943831] _yield_expr_tmp_[1943833])
      const-val _indexOfInterest[1943842]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
      (1943844 'move' _indexOfInterest[1943842] yret[1943831])
      {
        const-val followThis[1943848]:1*range(int(64),bounded,false)[1244885] "const" "index var" "insert auto destroy" "maybe copy elided"
        (1943850 'move' followThis[1943848] _indexOfInterest[1943842])
        const-val yret[1943853]:1*range(int(64),bounded,false)[1244885] "dead after last mention" "YVV" "temp"
        const-val _yield_expr_tmp_[1943855]:1*range(int(64),bounded,false)[1244885] "temp"
        (1943857 '=' _yield_expr_tmp_[1943855] followThis[1943848])
        (1943860 'noop')
        (1943861 'move' yret[1943853] _yield_expr_tmp_[1943855])
        const-val _indexOfInterest[1943864]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        (1943866 'move' _indexOfInterest[1943864] yret[1943853])
        {
          const-val followThis[1943870]:1*range(int(64),bounded,false)[1244885] "const" "index var" "insert auto destroy" "maybe copy elided"
          (1943872 'move' followThis[1943870] _indexOfInterest[1943864])
          const-val yret[1943875]:1*range(int(64),bounded,false)[1244885] "dead after last mention" "YVV" "temp"
          const-val _yield_expr_tmp_[1943877]:1*range(int(64),bounded,false)[1244885] "temp"
          (1943879 '=' _yield_expr_tmp_[1943877] followThis[1943870])
          (1943882 'noop')
          (1943883 'move' yret[1943875] _yield_expr_tmp_[1943877])
          const-val chpl_followThis[1943926]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "index var" "an _indexOfInterest or chpl__followIdx variable" "insert auto destroy" "temp"
          (1943928 'move' chpl_followThis[1943926] yret[1943875])
          {
            {
            }
            {
              const-val chpl__followIter[1943933]:2*_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1541656] "dead at end of block" "temp"
              const-val call_tmp[1943935]:2*_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1540404] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
              const-val ret_tmp[1943937]:2*_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1540404] "temp"
              (1943940 call _toFollowerZip[1538565] chpl__iterLF[1944002] chpl_followThis[1943926] ret_tmp[1943937])
              (1943944 'move' call_tmp[1943935] ret_tmp[1943937])
              const-val ret_tmp[1943947]:2*_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1541656] "temp"
              (1943950 call _getIteratorZip[1540532] call_tmp[1943935] ret_tmp[1943947])
              (1943953 'move' chpl__followIter[1943933] ret_tmp[1943947])
              val _iterator[2036478]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539699] "temp"
              (2036484 'move' _iterator[2036478](2036481 '.v' chpl__followIter[1943933] x0[1541652]))
              val _iterator[2036491]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539699] "temp"
              (2036497 'move' _iterator[2036491](2036494 '.v' chpl__followIter[1943933] x1[1541654]))
              {
                (2036506 call zip1[1539734] _iterator[2036478])
              }
              {
                (2036541 call zip1[1539734] _iterator[2036491])
              }
              const-val isFinished[2036567]:bool[10] "temp"
              val hasMore[2036566]:bool[10] "temp"
              CForLoop[2036614] order-independent
              {
                val chpl__followIdx[2036615]:2*real(64)[1542559] "dead at end of block" "follower index" "index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
                {
                  (2036619 call zip2[1539743] _iterator[2036491])
                }
                {
                  const-val retTmp[2036622]:int(64)[13] "temp"
                  (2036624 'move' retTmp[2036622](2036627 call hasMore[1539770] _iterator[2036491]))
                  (2036629 'move' hasMore[2036566](2036631 'cast' bool[10] retTmp[2036622]))
                }
                (2036634 'move' isFinished[2036567](2036636 '!' hasMore[2036566]))
                if isFinished[2036567]
                {
                  (2036640 'chpl_error' c"zippered iterations have non-equal lengths")
                }
                {
                  (2036644 'move' _index[2036659](2036647 call getValue[1539779] _iterator[2036491]))
                }
                {
                  (2036651 call zip2[1539743] _iterator[2036478])
                }
                {
                  (2036654 'move' _index[2036665](2036657 call getValue[1539779] _iterator[2036478]))
                }
                ref _index[2036659]:_ref(real(64))[936906] "temp"
                (2036661 '.=' chpl__followIdx[2036615] x1[1542557] _index[2036659])
                ref _index[2036665]:_ref(real(64))[936906] "temp"
                (2036667 '.=' chpl__followIdx[2036615] x0[1542555] _index[2036665])
                {
                  ref aa[2036672]:_ref(real(64))[936906] "index var" "insert auto destroy"
                  ref bb[2036674]:_ref(real(64))[936906] "index var" "insert auto destroy"
                  (2036676 'move' aa[2036672](2036678 '.v' chpl__followIdx[2036615] x0[1542555]))
                  (2036681 'move' bb[2036674](2036683 '.v' chpl__followIdx[2036615] x1[1542557]))
                  {
                    val call_tmp[2036687]:real(64)[16] "dead after last mention" "maybe param" "temp" "type variable"
                    const-val copy[2036689]:real(64)[16] "dead at end of block" "no auto destroy"
                    (2036691 'move' copy[2036689](2036693 'deref' bb[2036674]))
                    (2036695 '=' aa[2036672] copy[2036689])
                    val optinfo[2036698]:int(64)[13] "no codegen" "temp" "lhs outlives forall" "forall no task private"
                    (2036700 'optimization info' optinfo[2036698])
                  }
                }
                {
                  (2036704 call zip3[1539752] _iterator[2036478])
                }
                {
                  (2036708 call zip3[1539752] _iterator[2036491])
                }
                {
                  {
                    (2036516 call init[1539788] _iterator[2036478])
                  }
                  {
                    (2036551 call init[1539788] _iterator[2036491])
                  }
                }
                {
                  (2036532 call hasMore[1539770] _iterator[2036478])
                }
                {
                  {
                    (2036520 call incr[1539797] _iterator[2036478])
                  }
                  {
                    (2036555 call incr[1539797] _iterator[2036491])
                  }
                }
              }
              {
                const-val retTmp[2036601]:int(64)[13] "temp"
                (2036603 'move' retTmp[2036601](2036598 call hasMore[1539770] _iterator[2036491]))
                (2036608 'move' hasMore[2036566](2036605 'cast' bool[10] retTmp[2036601]))
              }
              if hasMore[2036566]
              {
                (2036593 'chpl_error' c"zippered iterations have non-equal lengths")
              }
              {
                (2036563 call zip4[1539761] _iterator[2036491])
              }
              {
                (2036528 call zip4[1539761] _iterator[2036478])
              }
              (1943993 call _freeIterator[1541735] chpl__followIter[1943933])
              (1943996 call chpl__autoDestroy[1822526] call_tmp[1943935])
            }
            (1943999 call chpl__autoDestroy[1695146] chpl_followThis[1943926])
          }
          label _continueLabel[1943902]
        }
        label _continueLabel[1943904]
      }
      (1943907 call chpl__autoDestroy[1674803] tmp[1943760])
      (1943910 call chpl__autoDestroy[1407763] coerce_tmp[1943669])
    }
    label _endcoforall_fn[1943916]
    (1943918 return _void[55])
  }
  function coforall_fn[1944763](const  ref arg locBlock[1944765]:1*range(int(64),bounded,false)[1244885], const in arg parDim[1944767]:int(64)[13], const in arg numChunks[1944769]:int(64)[13], const in arg chunk[1944771]:int(64)[13], const in arg _coforallCount[1944773]:_EndCount(AtomicT(int(64)),int(64))[945532], ref arg error_out[1944775]:Error[167984], const?  ref arg default_arg_offset[1944777]:_ref(1*int(64))[1256784], const  ref arg chpl__iterLF[1945136]:_ref(2*[domain(1,int(64),false)] real(64))[1537618]) : void[4] throws "cobegin or coforall" "inlined function" "resolved" "task fn from iterator fn"
  {
    {
      val call_tmp[1944781]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[1944783]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[1944785]:1*range(int(64),bounded,false)[1244885] "dead after last mention" "maybe param" "temp" "type variable"
      val followMe[1944787]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "insert auto destroy" "maybe copy elided"
      (1944789 'move' followMe[1944787](1944792 call chpl__initCopy[1297040] locBlock[1944765]))
      ref call_tmp[1944794]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1944796 'move' call_tmp[1944794](1944799 call this[1382848] locBlock[1944765] parDim[1944767]))
      const-val call_tmp[1944802]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1944804]:range(int(64),bounded,false)[1027003] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1944806 'move' coerce_tmp[1944804](1944809 call chpl__initCopy[1085195] call_tmp[1944794]))
      (1944811 'move' call_tmp[1944802](1944814 call size[1035978] coerce_tmp[1944804]))
      ref call_tmp[1944816]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1944818 'move' call_tmp[1944816](1944821 call this[1382848] locBlock[1944765] parDim[1944767]))
      ref call_tmp[1944824]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1944826 'move' call_tmp[1944824](1944829 call _high[1028849] call_tmp[1944816]))
      ref call_tmp[1944831]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1944833 'move' call_tmp[1944831](1944836 call this[1382848] locBlock[1944765] parDim[1944767]))
      ref call_tmp[1944839]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1944841 'move' call_tmp[1944839](1944844 call _low[1028641] call_tmp[1944831]))
      ref call_tmp[1944846]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1944848 'move' call_tmp[1944846](1944851 call this[1382848] locBlock[1944765] parDim[1944767]))
      ref call_tmp[1944854]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1944856 'move' call_tmp[1944854](1944859 call _low[1028641] call_tmp[1944846]))
      const-val call_tmp[1944861]:2*int(64)[1040245] "dead at end of block" "maybe param" "temp"
      const-val coerce_tmp[1944863]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1944865 'move' coerce_tmp[1944863](1944867 'deref' call_tmp[1944824]))
      const-val coerce_tmp[1944869]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1944871 'move' coerce_tmp[1944869](1944873 'deref' call_tmp[1944839]))
      const-val coerce_tmp[1944875]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1944877 'move' coerce_tmp[1944875](1944879 'deref' call_tmp[1944854]))
      const-val ret_tmp[1944881]:2*int(64)[1040245] "temp"
      (1944884 call _computeBlock[1229525] call_tmp[1944802] numChunks[1944769] chunk[1944771] coerce_tmp[1944863] coerce_tmp[1944869] coerce_tmp[1944875] ret_tmp[1944881])
      (1944892 'move' call_tmp[1944861] ret_tmp[1944881])
      const-val tmp[1944895]:2*int(64)[1040245] "dead at end of block" "const" "insert auto destroy" "temp"
      (1944897 'move' tmp[1944895] call_tmp[1944861])
      1
      ref call_tmp[1944901]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1944903 'move' call_tmp[1944901](1944905 '.' tmp[1944895] x0[1040241]))
      const-val lo[1944908]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[1944910]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1944912 'move' coerce_tmp[1944910](1944914 'deref' call_tmp[1944901]))
      (1944916 '=' lo[1944908] coerce_tmp[1944910])
      (1944919 'noop')
      ref call_tmp[1944920]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1944922 'move' call_tmp[1944920](1944924 '.' tmp[1944895] x1[1040243]))
      const-val hi[1944927]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[1944929]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1944931 'move' coerce_tmp[1944929](1944933 'deref' call_tmp[1944920]))
      (1944935 '=' hi[1944927] coerce_tmp[1944929])
      (1944938 'noop')
      ref call_tmp[1944939]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
      (1944941 'move' call_tmp[1944939](1944944 call this[1382848] followMe[1944787] parDim[1944767]))
      const-val call_tmp[1944947]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1944949]:range(int(64),bounded,false)[1027003] "temp"
      (1944952 call chpl_build_bounded_range[455253] lo[1944908] hi[1944927] ret_tmp[1944949])
      (1944956 'move' call_tmp[1944947] ret_tmp[1944949])
      (1944960 call =[1251739] call_tmp[1944939] call_tmp[1944947])
      (1944964 call chpl__autoDestroy[1407763] call_tmp[1944947])
      const-val yret[1944966]:1*range(int(64),bounded,false)[1244885] "dead after last mention" "YVV" "temp"
      const-val _yield_expr_tmp_[1944968]:1*range(int(64),bounded,false)[1244885] "temp"
      (1944970 '=' _yield_expr_tmp_[1944968] followMe[1944787])
      (1944973 'noop')
      (1944974 'move' yret[1944966] _yield_expr_tmp_[1944968])
      const-val _indexOfInterest[1944977]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
      (1944979 'move' _indexOfInterest[1944977] yret[1944966])
      {
        const-val followThis[1944983]:1*range(int(64),bounded,false)[1244885] "const" "index var" "insert auto destroy" "maybe copy elided"
        (1944985 'move' followThis[1944983] _indexOfInterest[1944977])
        const-val yret[1944988]:1*range(int(64),bounded,false)[1244885] "dead after last mention" "YVV" "temp"
        const-val _yield_expr_tmp_[1944990]:1*range(int(64),bounded,false)[1244885] "temp"
        (1944992 '=' _yield_expr_tmp_[1944990] followThis[1944983])
        (1944995 'noop')
        (1944996 'move' yret[1944988] _yield_expr_tmp_[1944990])
        const-val _indexOfInterest[1944999]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        (1945001 'move' _indexOfInterest[1944999] yret[1944988])
        {
          const-val followThis[1945005]:1*range(int(64),bounded,false)[1244885] "const" "index var" "insert auto destroy" "maybe copy elided"
          (1945007 'move' followThis[1945005] _indexOfInterest[1944999])
          const-val yret[1945010]:1*range(int(64),bounded,false)[1244885] "dead after last mention" "YVV" "temp"
          const-val _yield_expr_tmp_[1945012]:1*range(int(64),bounded,false)[1244885] "temp"
          (1945014 '=' _yield_expr_tmp_[1945012] followThis[1945005])
          (1945017 'noop')
          (1945018 'move' yret[1945010] _yield_expr_tmp_[1945012])
          const-val chpl_followThis[1945061]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "index var" "an _indexOfInterest or chpl__followIdx variable" "insert auto destroy" "temp"
          (1945063 'move' chpl_followThis[1945061] yret[1945010])
          {
            {
            }
            {
              const-val chpl__followIter[1945068]:2*_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1541656] "dead at end of block" "temp"
              const-val call_tmp[1945070]:2*_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1540404] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
              const-val ret_tmp[1945072]:2*_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1540404] "temp"
              (1945075 call _toFollowerZip[1538565] chpl__iterLF[1945136] chpl_followThis[1945061] ret_tmp[1945072])
              (1945079 'move' call_tmp[1945070] ret_tmp[1945072])
              const-val ret_tmp[1945082]:2*_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1541656] "temp"
              (1945085 call _getIteratorZip[1540532] call_tmp[1945070] ret_tmp[1945082])
              (1945088 'move' chpl__followIter[1945068] ret_tmp[1945082])
              val _iterator[2037191]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539699] "temp"
              (2037197 'move' _iterator[2037191](2037194 '.v' chpl__followIter[1945068] x0[1541652]))
              val _iterator[2037204]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539699] "temp"
              (2037210 'move' _iterator[2037204](2037207 '.v' chpl__followIter[1945068] x1[1541654]))
              {
                (2037219 call zip1[1539734] _iterator[2037191])
              }
              {
                (2037254 call zip1[1539734] _iterator[2037204])
              }
              const-val isFinished[2037280]:bool[10] "temp"
              val hasMore[2037279]:bool[10] "temp"
              CForLoop[2037327] order-independent
              {
                val chpl__followIdx[2037328]:2*real(64)[1542559] "dead at end of block" "follower index" "index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
                {
                  (2037332 call zip2[1539743] _iterator[2037204])
                }
                {
                  const-val retTmp[2037335]:int(64)[13] "temp"
                  (2037337 'move' retTmp[2037335](2037340 call hasMore[1539770] _iterator[2037204]))
                  (2037342 'move' hasMore[2037279](2037344 'cast' bool[10] retTmp[2037335]))
                }
                (2037347 'move' isFinished[2037280](2037349 '!' hasMore[2037279]))
                if isFinished[2037280]
                {
                  (2037353 'chpl_error' c"zippered iterations have non-equal lengths")
                }
                {
                  (2037357 'move' _index[2037372](2037360 call getValue[1539779] _iterator[2037204]))
                }
                {
                  (2037364 call zip2[1539743] _iterator[2037191])
                }
                {
                  (2037367 'move' _index[2037378](2037370 call getValue[1539779] _iterator[2037191]))
                }
                ref _index[2037372]:_ref(real(64))[936906] "temp"
                (2037374 '.=' chpl__followIdx[2037328] x1[1542557] _index[2037372])
                ref _index[2037378]:_ref(real(64))[936906] "temp"
                (2037380 '.=' chpl__followIdx[2037328] x0[1542555] _index[2037378])
                {
                  ref aa[2037385]:_ref(real(64))[936906] "index var" "insert auto destroy"
                  ref bb[2037387]:_ref(real(64))[936906] "index var" "insert auto destroy"
                  (2037389 'move' aa[2037385](2037391 '.v' chpl__followIdx[2037328] x0[1542555]))
                  (2037394 'move' bb[2037387](2037396 '.v' chpl__followIdx[2037328] x1[1542557]))
                  {
                    const-val coerce_tmp[2037400]:real(64)[16] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (2037402 'move' coerce_tmp[2037400](2037404 'deref' bb[2037387]))
                    (2037407 call =[435569] aa[2037385] coerce_tmp[2037400])
                    val optinfo[2037410]:int(64)[13] "no codegen" "temp" "lhs outlives forall" "forall no task private"
                    (2037412 'optimization info' optinfo[2037410])
                  }
                }
                {
                  (2037416 call zip3[1539752] _iterator[2037191])
                }
                {
                  (2037420 call zip3[1539752] _iterator[2037204])
                }
                {
                  {
                    (2037229 call init[1539788] _iterator[2037191])
                  }
                  {
                    (2037264 call init[1539788] _iterator[2037204])
                  }
                }
                {
                  (2037245 call hasMore[1539770] _iterator[2037191])
                }
                {
                  {
                    (2037233 call incr[1539797] _iterator[2037191])
                  }
                  {
                    (2037268 call incr[1539797] _iterator[2037204])
                  }
                }
              }
              {
                const-val retTmp[2037314]:int(64)[13] "temp"
                (2037316 'move' retTmp[2037314](2037311 call hasMore[1539770] _iterator[2037204]))
                (2037321 'move' hasMore[2037279](2037318 'cast' bool[10] retTmp[2037314]))
              }
              if hasMore[2037279]
              {
                (2037306 'chpl_error' c"zippered iterations have non-equal lengths")
              }
              {
                (2037276 call zip4[1539761] _iterator[2037204])
              }
              {
                (2037241 call zip4[1539761] _iterator[2037191])
              }
              (1945127 call _freeIterator[1541735] chpl__followIter[1945068])
              (1945130 call chpl__autoDestroy[1822526] call_tmp[1945070])
            }
            (1945133 call chpl__autoDestroy[1695146] chpl_followThis[1945061])
          }
          label _continueLabel[1945037]
        }
        label _continueLabel[1945039]
      }
      (1945042 call chpl__autoDestroy[1674803] tmp[1944895])
      (1945045 call chpl__autoDestroy[1407763] coerce_tmp[1944804])
    }
    label _endcoforall_fn[1945051]
    (1945053 return _void[55])
  }
  function coforall_fn[1945657](const in arg parDim[1945659]:int(64)[13], const in arg numChunks[1945661]:int(64)[13], const in arg this[1945663]:domain(1,int(64),false)[1251123], const in arg chunk[1945665]:int(64)[13], const in arg _coforallCount[1945667]:_EndCount(AtomicT(int(64)),int(64))[945532], ref arg error_out[1945669]:Error[167984], const in arg this[1945671]:[domain(1,int(64),false)] real(64)[1358944], const?  ref arg default_arg_offset[1945673]:_ref(1*int(64))[1256784], const in arg rhs[1946058]:real(64)[16]) : void[4] throws "cobegin or coforall" "inlined function" "resolved" "task fn from iterator fn"
  {
    {
      ref call_tmp[1945677]:_ref(1*range(int(64),bounded,false))[1244943] "dead at end of block" "maybe param" "temp"
      (1945679 'move' call_tmp[1945677](1945682 call ranges[1251533] this[1945663]))
      val block[1945684]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "insert auto destroy"
      (1945686 'move' block[1945684](1945689 call chpl__initCopy[1297040] call_tmp[1945677]))
      const-val len[1945691]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val tmp[1945693]:int(64)[13] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      ref call_tmp[1945695]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
      ref _this_tmp_[1945697]:_ref(1*range(int(64),bounded,false))[1244943] "dead after last mention" "temp"
      (1945699 'move' _this_tmp_[1945697](1945702 call ranges[1251533] this[1945663]))
      (1945704 'move' call_tmp[1945695](1945707 call this[1382848] _this_tmp_[1945697] parDim[1945659]))
      const-val tmp[1945710]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      ref call_tmp[1945712]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "temp"
      ref _this_tmp_[1945714]:_ref(1*range(int(64),bounded,false))[1244943] "dead at end of block" "temp"
      (1945716 'move' _this_tmp_[1945714](1945719 call ranges[1251533] this[1945663]))
      (1945721 'move' call_tmp[1945712](1945724 call this[1382848] _this_tmp_[1945714] parDim[1945659]))
      const-val coerce_tmp[1945727]:range(int(64),bounded,false)[1027003] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1945729 'move' coerce_tmp[1945727](1945731 'deref' call_tmp[1945712]))
      (1945733 'move' tmp[1945710](1945736 call size[1035978] coerce_tmp[1945727]))
      (1945738 'move' tmp[1945693] tmp[1945710])
      (1945741 'move' len[1945691] tmp[1945693])
      ref call_tmp[1945744]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "temp"
      ref _this_tmp_[1945746]:_ref(1*range(int(64),bounded,false))[1244943] "dead at end of block" "temp"
      (1945748 'move' _this_tmp_[1945746](1945751 call ranges[1251533] this[1945663]))
      (1945753 'move' call_tmp[1945744](1945756 call this[1382848] _this_tmp_[1945746] parDim[1945659]))
      ref call_tmp[1945759]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
      (1945761 'move' call_tmp[1945759](1945764 call _high[1028849] call_tmp[1945744]))
      ref call_tmp[1945766]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "temp"
      ref _this_tmp_[1945768]:_ref(1*range(int(64),bounded,false))[1244943] "dead at end of block" "temp"
      (1945770 'move' _this_tmp_[1945768](1945773 call ranges[1251533] this[1945663]))
      (1945775 'move' call_tmp[1945766](1945778 call this[1382848] _this_tmp_[1945768] parDim[1945659]))
      ref call_tmp[1945781]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
      (1945783 'move' call_tmp[1945781](1945786 call _low[1028641] call_tmp[1945766]))
      ref call_tmp[1945788]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "temp"
      ref _this_tmp_[1945790]:_ref(1*range(int(64),bounded,false))[1244943] "dead at end of block" "temp"
      (1945792 'move' _this_tmp_[1945790](1945795 call ranges[1251533] this[1945663]))
      (1945797 'move' call_tmp[1945788](1945800 call this[1382848] _this_tmp_[1945790] parDim[1945659]))
      ref call_tmp[1945803]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
      (1945805 'move' call_tmp[1945803](1945808 call _low[1028641] call_tmp[1945788]))
      const-val call_tmp[1945810]:2*int(64)[1040245] "dead at end of block" "maybe param" "temp"
      const-val coerce_tmp[1945812]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1945814 'move' coerce_tmp[1945812](1945816 'deref' call_tmp[1945759]))
      const-val coerce_tmp[1945818]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1945820 'move' coerce_tmp[1945818](1945822 'deref' call_tmp[1945781]))
      const-val coerce_tmp[1945824]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1945826 'move' coerce_tmp[1945824](1945828 'deref' call_tmp[1945803]))
      const-val ret_tmp[1945830]:2*int(64)[1040245] "temp"
      (1945833 call _computeBlock[1229525] len[1945691] numChunks[1945661] chunk[1945665] coerce_tmp[1945812] coerce_tmp[1945818] coerce_tmp[1945824] ret_tmp[1945830])
      (1945841 'move' call_tmp[1945810] ret_tmp[1945830])
      const-val tmp[1945844]:2*int(64)[1040245] "dead at end of block" "const" "insert auto destroy" "temp"
      (1945846 'move' tmp[1945844] call_tmp[1945810])
      1
      ref call_tmp[1945850]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1945852 'move' call_tmp[1945850](1945854 '.' tmp[1945844] x0[1040241]))
      const-val lo[1945857]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[1945859]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1945861 'move' coerce_tmp[1945859](1945863 'deref' call_tmp[1945850]))
      (1945865 '=' lo[1945857] coerce_tmp[1945859])
      (1945868 'noop')
      ref call_tmp[1945869]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1945871 'move' call_tmp[1945869](1945873 '.' tmp[1945844] x1[1040243]))
      const-val hi[1945876]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[1945878]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1945880 'move' coerce_tmp[1945878](1945882 'deref' call_tmp[1945869]))
      (1945884 '=' hi[1945876] coerce_tmp[1945878])
      (1945887 'noop')
      ref call_tmp[1945888]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
      (1945890 'move' call_tmp[1945888](1945893 call this[1382848] block[1945684] parDim[1945659]))
      {
        ref call_tmp[1945897]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
        (1945899 'move' call_tmp[1945897](1945902 call this[1382848] block[1945684] parDim[1945659]))
        const-val call_tmp[1945905]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1945907]:range(int(64),bounded,false)[1027003] "temp"
        (1945910 call chpl_build_bounded_range[455253] lo[1945857] hi[1945876] ret_tmp[1945907])
        (1945914 'move' call_tmp[1945905] ret_tmp[1945907])
        (1945918 call =[1251739] call_tmp[1945897] call_tmp[1945905])
        (1945922 call chpl__autoDestroy[1407763] call_tmp[1945905])
      }
      {
        val _indexOfInterest[1945925]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[1945927]:_ic_these_help_DefaultRectangularDom_1_int64_t_F[1384429] "dead at end of block" "expr temp" "temp"
        const-val call_tmp[1945929]:_ir_these_help_DefaultRectangularDom_1_int64_t_F[1384435] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val ret_tmp[1945931]:_ir_these_help_DefaultRectangularDom_1_int64_t_F[1384435] "temp"
        (1945934 call these_help[1384021] this[1945663] block[1945684] ret_tmp[1945931])
        (1945938 'move' call_tmp[1945929] ret_tmp[1945931])
        (1945941 'move' _iterator[1945927](1945944 call _getIterator[1384444] call_tmp[1945929]))
        {
          val ret[2037884]:_ir_these_help_DefaultRectangularDom_1_int64_t_F[1384435] "dead after last mention" "RVV" "temp"
          val _indexOfInterest[2037886]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[2037888]:_ic_these_range_int64_t_bounded_F[1096892] "dead at end of block" "expr temp" "temp"
          ref call_tmp[2037890]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "temp"
          ref block[2038132]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
          (2038137 'move' block[2038132](2038134 '.v' _iterator[1945927] F1_block[2135427]))
          (2037892 'move' call_tmp[2037890](2037894 '.' block[2038132] x0[1244883]))
          (2037897 'move' _iterator[2037888](2037900 call _getIterator[1095509] call_tmp[2037890]))
          {
            val ret[2037903]:_ir_these_range_int64_t_bounded_F[1096898] "dead after last mention" "RVV" "temp"
            const-val _return_tmp_[2037905]:bool[10] "dead after last mention" "temp"
            const-val this[2037907]:range(int(64),bounded,false)[1027003] "temp"
            (2037909 'move' this[2037907](2037911 '.v' _iterator[2037888] F0_this[2113071]))
            (2037914 'move' _return_tmp_[2037905](2037917 call checkIfIterWillOverflow[1096003] this[2037907] 1))
            val i[2037920]:int(64)[13] "dead at end of block" "insert auto destroy"
            val call_tmp[2037922]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (2037924 'move' i[2037920] 0)
            ref call_tmp[2037927]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[2037929]:range(int(64),bounded,false)[1027003] "temp"
            (2037931 'move' this[2037929](2037933 '.v' _iterator[2037888] F0_this[2113071]))
            (2037936 'move' call_tmp[2037927](2037939 call _low[1028641] this[2037929]))
            const-val start[2037941]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[2037943]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (2037945 'move' coerce_tmp[2037943](2037947 'deref' call_tmp[2037927]))
            (2037949 '=' start[2037941] coerce_tmp[2037943])
            (2037952 'noop')
            ref call_tmp[2037953]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[2037955]:range(int(64),bounded,false)[1027003] "temp"
            (2037957 'move' this[2037955](2037959 '.v' _iterator[2037888] F0_this[2113071]))
            (2037962 'move' call_tmp[2037953](2037965 call _high[1028849] this[2037955]))
            const end[2037967]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[2037969]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (2037971 'move' coerce_tmp[2037969](2037973 'deref' call_tmp[2037953]))
            (2037975 '=' end[2037967] coerce_tmp[2037969])
            (2037978 'noop')
            CForLoop[2037979] order-independent
            {
              const-val yret[2037994]:int(64)[13] "dead after last mention" "YVV" "temp"
              const-val call_tmp[2037996]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val this[2037998]:range(int(64),bounded,false)[1027003] "temp"
              (2038000 'move' this[2037998](2038002 '.v' _iterator[2037888] F0_this[2113071]))
              (2038005 'move' call_tmp[2037996](2038008 call chpl_intToIdx[1028669] this[2037998] i[2037920]))
              (2038011 'move' yret[2037994] call_tmp[2037996])
              const-val _yieldedIndex[2038014]:int(64)[13] "temp"
              (2038016 'move' _yieldedIndex[2038014] call_tmp[2037996])
              {
                const-val i[2038020]:int(64)[13] "const" "index var" "insert auto destroy"
                (2038022 'move' i[2038020] _yieldedIndex[2038014])
                const-val yret[2038025]:int(64)[13] "dead after last mention" "YVV" "temp"
                (2038027 'move' yret[2038025] _yieldedIndex[2038014])
                const-val _yieldedIndex[2038049]:int(64)[13] "temp"
                (2038130 'move' _yieldedIndex[2038049] _yieldedIndex[2038014])
                {
                  const-val i[2038051]:int(64)[13] "const" "index var" "insert auto destroy"
                  (2038053 'move' i[2038051] _yieldedIndex[2038049])
                  {
                    const-val yret[2038057]:int(64)[13] "dead after last mention" "YVV" "temp"
                    (2038059 'move' yret[2038057] i[2038051])
                    const-val _indexOfInterest[2038062]:int(64)[13] "dead at end of block" "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    (2038064 'move' _indexOfInterest[2038062] yret[2038057])
                    {
                      const-val i[2038068]:int(64)[13] "const" "index var" "insert auto destroy"
                      (2038070 'move' i[2038068] _indexOfInterest[2038062])
                      {
                        ref yret[2038074]:_ref(real(64))[936906] "dead after last mention" "YVV" "temp"
                        ref call_tmp[2038076]:_ref(real(64))[936906] "dead after last mention" "maybe param" "temp"
                        (2038078 'move' call_tmp[2038076](2038081 call dsiAccess[1389399] this[1945671] i[2038068]))
                        (2038084 'move' yret[2038074] call_tmp[2038076])
                        ref _indexOfInterest[2038087]:_ref(real(64))[936906] "dead at end of block" "index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
                        (2038089 'move' _indexOfInterest[2038087] yret[2038074])
                        {
                          ref i[2038093]:_ref(real(64))[936906] "index var" "insert auto destroy"
                          (2038095 'move' i[2038093] _indexOfInterest[2038087])
                          ref yret[2038098]:_ref(real(64))[936906] "dead after last mention" "YVV" "temp"
                          (2038100 'move' yret[2038098] i[2038093])
                          ref e[2038103]:_ref(real(64))[936906] "index var" "an _indexOfInterest or chpl__followIdx variable" "insert auto destroy"
                          (2038105 'move' e[2038103] yret[2038098])
                          {
                            val call_tmp[2038109]:real(64)[16] "dead after last mention" "maybe param" "temp" "type variable"
                            const-val copy[2038111]:real(64)[16] "dead at end of block" "no auto destroy"
                            (2038113 'move' copy[2038111] rhs[1946058])
                            (2038116 '=' e[2038103] copy[2038111])
                            val optinfo[2038119]:int(64)[13] "no codegen" "temp" "lhs outlives forall" "forall no task private"
                            (2038121 'optimization info' optinfo[2038119])
                          }
                          label _continueLabel[2038123]
                        }
                      }
                      label _continueLabel[2038125]
                    }
                  }
                  label _continueLabel[2038127]
                }
              }
              {
                (2037981 '=' i[2037920] coerce_tmp[2037943])
              }
              {
                (2037985 '<=' i[2037920] end[2037967])
              }
              {
                val call_tmp[2037989]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (2037991 '+=' i[2037920] 1)
              }
            }
            label _endthese[2038040]
          }
          (2038043 call _freeIterator[1102195] _iterator[2037888])
          label _endthese_help[2038045]
        }
        label _breakLabel[1946029]
        (1946032 call _freeIterator[1384621] _iterator[1945927])
      }
      (1946035 call chpl__autoDestroy[1674803] tmp[1945844])
      (1946038 call chpl__autoDestroy[1407763] coerce_tmp[1945727])
      (1946041 call chpl__autoDestroy[1695146] block[1945684])
    }
    label _endcoforall_fn[1946047]
    (1946062 call chpl__autoDestroy[1590671] rhs[1946058])
    (1946049 return _void[55])
  }
  function wrapon_fn[2206909](const in arg dummy_locale_arg[2206911]:chpl_localeID_t[209352], in arg buf[2206913]:c_void_ptr[149], in arg buf_size[2206915]:int(64)[13], in arg c[2206917]:_class_localson_fn[2206869]) : void[4] "on block"
  {
    val _0_tmp[2206922]:chpl_localeID_t[209352] "temp"
    (2206927 'move' _0_tmp[2206922](2206924 '.v' c[2206917] _0_tmp[2206872]))
    val _1__instance[2206929]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "temp"
    (2206934 'move' _1__instance[2206929](2206931 '.v' c[2206917] _1__instance[2206874]))
    val _2_deinitElts[2206937]:bool[10] "temp"
    (2206942 'move' _2_deinitElts[2206937](2206939 '.v' c[2206917] _2_deinitElts[2206876]))
    (2206920 call on_fn[1493338] _1__instance[2206929] _2_deinitElts[2206937])
    (2206945 return _void[55])
  }
  function wrapon_fn[2207215](const in arg dummy_locale_arg[2207217]:chpl_localeID_t[209352], in arg buf[2207219]:c_void_ptr[149], in arg buf_size[2207221]:int(64)[13], in arg c[2207223]:_class_localson_fn[2207175]) : void[4] "on block"
  {
    val _0_tmp[2207228]:chpl_localeID_t[209352] "temp"
    (2207233 'move' _0_tmp[2207228](2207230 '.v' c[2207223] _0_tmp[2207178]))
    val _1_pid[2207235]:int(64)[13] "temp"
    (2207240 'move' _1_pid[2207235](2207237 '.v' c[2207223] _1_pid[2207180]))
    val _2_original[2207243]:object[22] "temp"
    (2207248 'move' _2_original[2207243](2207245 '.v' c[2207223] _2_original[2207182]))
    (2207226 call on_fn[1502826] _1_pid[2207235] _2_original[2207243])
    (2207251 return _void[55])
  }
  function wrapcobegin_fn[2207312](in arg dummy_taskList[2207314]:_ref(c_void_ptr)[938311], in arg dummy_taskListNode[2207316]:int(64)[13], in arg buf[2207318]:c_void_ptr[149], in arg buf_size[2207320]:int(64)[13], in arg c[2207322]:_class_localscobegin_fn[2207259]) : void[4] "cobegin or coforall block"
  {
    val _0_pid[2207327]:int(64)[13] "temp"
    (2207332 'move' _0_pid[2207327](2207329 '.v' c[2207322] _0_pid[2207262]))
    val _1_original[2207335]:object[22] "temp"
    (2207340 'move' _1_original[2207335](2207337 '.v' c[2207322] _1_original[2207264]))
    val _2__cobeginCount[2207343]:_EndCount(AtomicT(int(64)),int(64))[945532] "temp"
    (2207348 'move' _2__cobeginCount[2207343](2207345 '.v' c[2207322] _2__cobeginCount[2207266]))
    (2207325 call cobegin_fn[1503230] _0_pid[2207327] _1_original[2207335] _2__cobeginCount[2207343])
    val endcount[2207351]:_EndCount(AtomicT(int(64)),int(64))[945532] "temp"
    (2207356 'move' endcount[2207351](2207353 '.v' c[2207322] _2__cobeginCount[2207266]))
    (2207358 call _downEndCount[1230826] endcount[2207351] nil[44])
    (2207362 return _void[55])
  }
  function wrapon_fn[2207428](const in arg dummy_locale_arg[2207430]:chpl_localeID_t[209352], in arg buf[2207432]:c_void_ptr[149], in arg buf_size[2207434]:int(64)[13], in arg c[2207436]:_class_localson_fn[2207388]) : void[4] "on block"
  {
    val _0_tmp[2207441]:chpl_localeID_t[209352] "temp"
    (2207446 'move' _0_tmp[2207441](2207443 '.v' c[2207436] _0_tmp[2207391]))
    val _1_pid[2207448]:int(64)[13] "temp"
    (2207453 'move' _1_pid[2207448](2207450 '.v' c[2207436] _1_pid[2207393]))
    val _2_original[2207456]:object[22] "temp"
    (2207461 'move' _2_original[2207456](2207458 '.v' c[2207436] _2_original[2207395]))
    (2207439 call on_fn[1503293] _1_pid[2207448] _2_original[2207456])
    (2207464 return _void[55])
  }
  function wrapcobegin_fn[2207525](in arg dummy_taskList[2207527]:_ref(c_void_ptr)[938311], in arg dummy_taskListNode[2207529]:int(64)[13], in arg buf[2207531]:c_void_ptr[149], in arg buf_size[2207533]:int(64)[13], in arg c[2207535]:_class_localscobegin_fn[2207472]) : void[4] "cobegin or coforall block"
  {
    val _0_pid[2207540]:int(64)[13] "temp"
    (2207545 'move' _0_pid[2207540](2207542 '.v' c[2207535] _0_pid[2207475]))
    val _1_original[2207548]:object[22] "temp"
    (2207553 'move' _1_original[2207548](2207550 '.v' c[2207535] _1_original[2207477]))
    val _2__cobeginCount[2207556]:_EndCount(AtomicT(int(64)),int(64))[945532] "temp"
    (2207561 'move' _2__cobeginCount[2207556](2207558 '.v' c[2207535] _2__cobeginCount[2207479]))
    (2207538 call cobegin_fn[1503319] _0_pid[2207540] _1_original[2207548] _2__cobeginCount[2207556])
    val endcount[2207564]:_EndCount(AtomicT(int(64)),int(64))[945532] "temp"
    (2207569 'move' endcount[2207564](2207566 '.v' c[2207535] _2__cobeginCount[2207479]))
    (2207571 call _downEndCount[1230826] endcount[2207564] nil[44])
    (2207575 return _void[55])
  }
  function wrapon_fn[2207641](const in arg dummy_locale_arg[2207643]:chpl_localeID_t[209352], in arg buf[2207645]:c_void_ptr[149], in arg buf_size[2207647]:int(64)[13], in arg c[2207649]:_class_localson_fn[2207601]) : void[4] "on block"
  {
    val _0_tmp[2207654]:chpl_localeID_t[209352] "temp"
    (2207659 'move' _0_tmp[2207654](2207656 '.v' c[2207649] _0_tmp[2207604]))
    val _1_pid[2207661]:int(64)[13] "temp"
    (2207666 'move' _1_pid[2207661](2207663 '.v' c[2207649] _1_pid[2207606]))
    val _2_original[2207669]:object[22] "temp"
    (2207674 'move' _2_original[2207669](2207671 '.v' c[2207649] _2_original[2207608]))
    (2207652 call on_fn[1503382] _1_pid[2207661] _2_original[2207669])
    (2207677 return _void[55])
  }
  function wrapon_fn[2208326](const in arg dummy_locale_arg[2208328]:chpl_localeID_t[209352], in arg buf[2208330]:c_void_ptr[149], in arg buf_size[2208332]:int(64)[13], in arg c[2208334]:_class_localson_fn[2208286]) : void[4] "on block"
  {
    val _0_tmp[2208339]:chpl_localeID_t[209352] "temp"
    (2208344 'move' _0_tmp[2208339](2208341 '.v' c[2208334] _0_tmp[2208289]))
    val _1__instance[2208346]:[domain(1,int(64),false)] real(64)[1358944] "temp"
    (2208351 'move' _1__instance[2208346](2208348 '.v' c[2208334] _1__instance[2208291]))
    val _2_deinitElts[2208354]:bool[10] "temp"
    (2208359 'move' _2_deinitElts[2208354](2208356 '.v' c[2208334] _2_deinitElts[2208293]))
    (2208337 call on_fn[1543033] _1__instance[2208346] _2_deinitElts[2208354])
    (2208362 return _void[55])
  }
  function wrapon_fn[2210081](const in arg dummy_locale_arg[2210083]:chpl_localeID_t[209352], in arg buf[2210085]:c_void_ptr[149], in arg buf_size[2210087]:int(64)[13], in arg c[2210089]:_class_localson_fn[2210041]) : void[4] "on block"
  {
    val _0_tmp[2210094]:chpl_localeID_t[209352] "temp"
    (2210099 'move' _0_tmp[2210094](2210096 '.v' c[2210089] _0_tmp[2210044]))
    val _1__instance[2210101]:BaseArr[149584] "temp"
    (2210106 'move' _1__instance[2210101](2210103 '.v' c[2210089] _1__instance[2210046]))
    val _2_deinitElts[2210109]:bool[10] "temp"
    (2210114 'move' _2_deinitElts[2210109](2210111 '.v' c[2210089] _2_deinitElts[2210048]))
    (2210092 call on_fn[1594808] _1__instance[2210101] _2_deinitElts[2210109])
    (2210117 return _void[55])
  }
  function wrapon_fn[2213191](const in arg dummy_locale_arg[2213193]:chpl_localeID_t[209352], in arg buf[2213195]:c_void_ptr[149], in arg buf_size[2213197]:int(64)[13], in arg c[2213199]:_class_localson_fn[2213157]) : void[4] "on block"
  {
    val _0_tmp[2213204]:chpl_localeID_t[209352] "temp"
    (2213209 'move' _0_tmp[2213204](2213206 '.v' c[2213199] _0_tmp[2213160]))
    val _1_rvfDerefTmp[2213211]:DefaultDist[1244085] "temp"
    (2213216 'move' _1_rvfDerefTmp[2213211](2213213 '.v' c[2213199] _1_rvfDerefTmp[2213162]))
    (2213202 call on_fn[1694853] _1_rvfDerefTmp[2213211])
    (2213219 return _void[55])
  }
  function wrapon_fn[2213276](const in arg dummy_locale_arg[2213278]:chpl_localeID_t[209352], in arg buf[2213280]:c_void_ptr[149], in arg buf_size[2213282]:int(64)[13], in arg c[2213284]:_class_localson_fn[2213242]) : void[4] "on block"
  {
    val _0_tmp[2213289]:chpl_localeID_t[209352] "temp"
    (2213294 'move' _0_tmp[2213289](2213291 '.v' c[2213284] _0_tmp[2213245]))
    val _1_rvfDerefTmp[2213296]:domain(1,int(64),false)[1252786] "temp"
    (2213301 'move' _1_rvfDerefTmp[2213296](2213298 '.v' c[2213284] _1_rvfDerefTmp[2213247]))
    (2213287 call on_fn[1695287] _1_rvfDerefTmp[2213296])
    (2213304 return _void[55])
  }
  function wrapon_fn[2213698](const in arg dummy_locale_arg[2213700]:chpl_localeID_t[209352], in arg buf[2213702]:c_void_ptr[149], in arg buf_size[2213704]:int(64)[13], in arg c[2213706]:_class_localson_fn[2213658]) : void[4] "on block"
  {
    val _0_tmp[2213711]:chpl_localeID_t[209352] "temp"
    (2213716 'move' _0_tmp[2213711](2213713 '.v' c[2213706] _0_tmp[2213661]))
    val _1__instance[2213718]:[domain(1,int(64),false)] locale[1256675] "temp"
    (2213723 'move' _1__instance[2213718](2213720 '.v' c[2213706] _1__instance[2213663]))
    val _2_deinitElts[2213726]:bool[10] "temp"
    (2213731 'move' _2_deinitElts[2213726](2213728 '.v' c[2213706] _2_deinitElts[2213665]))
    (2213709 call on_fn[1722653] _1__instance[2213718] _2_deinitElts[2213726])
    (2213734 return _void[55])
  }
  function wrapon_fn[2214043](const in arg dummy_locale_arg[2214045]:chpl_localeID_t[209352], in arg buf[2214047]:c_void_ptr[149], in arg buf_size[2214049]:int(64)[13], in arg c[2214051]:_class_localson_fn[2214003]) : void[4] "on block"
  {
    val _0_tmp[2214056]:chpl_localeID_t[209352] "temp"
    (2214061 'move' _0_tmp[2214056](2214058 '.v' c[2214051] _0_tmp[2214006]))
    val _1__instance[2214063]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401] "temp"
    (2214068 'move' _1__instance[2214063](2214065 '.v' c[2214051] _1__instance[2214008]))
    val _2_deinitElts[2214071]:bool[10] "temp"
    (2214076 'move' _2_deinitElts[2214071](2214073 '.v' c[2214051] _2_deinitElts[2214010]))
    (2214054 call on_fn[1751640] _1__instance[2214063] _2_deinitElts[2214071])
    (2214079 return _void[55])
  }
  function wrapon_fn[2214388](const in arg dummy_locale_arg[2214390]:chpl_localeID_t[209352], in arg buf[2214392]:c_void_ptr[149], in arg buf_size[2214394]:int(64)[13], in arg c[2214396]:_class_localson_fn[2214348]) : void[4] "on block"
  {
    val _0_tmp[2214401]:chpl_localeID_t[209352] "temp"
    (2214406 'move' _0_tmp[2214401](2214403 '.v' c[2214396] _0_tmp[2214351]))
    val _1__instance[2214408]:[domain(1,int(64),false)] int(64)[1368867] "temp"
    (2214413 'move' _1__instance[2214408](2214410 '.v' c[2214396] _1__instance[2214353]))
    val _2_deinitElts[2214416]:bool[10] "temp"
    (2214421 'move' _2_deinitElts[2214416](2214418 '.v' c[2214396] _2_deinitElts[2214355]))
    (2214399 call on_fn[1785071] _1__instance[2214408] _2_deinitElts[2214416])
    (2214424 return _void[55])
  }
  function wrapon_fn[2214733](const in arg dummy_locale_arg[2214735]:chpl_localeID_t[209352], in arg buf[2214737]:c_void_ptr[149], in arg buf_size[2214739]:int(64)[13], in arg c[2214741]:_class_localson_fn[2214693]) : void[4] "on block"
  {
    val _0_tmp[2214746]:chpl_localeID_t[209352] "temp"
    (2214751 'move' _0_tmp[2214746](2214748 '.v' c[2214741] _0_tmp[2214696]))
    val _1__instance[2214753]:[domain(1,int(64),false)] uint(64)[1450261] "temp"
    (2214758 'move' _1__instance[2214753](2214755 '.v' c[2214741] _1__instance[2214698]))
    val _2_deinitElts[2214761]:bool[10] "temp"
    (2214766 'move' _2_deinitElts[2214761](2214763 '.v' c[2214741] _2_deinitElts[2214700]))
    (2214744 call on_fn[1816178] _1__instance[2214753] _2_deinitElts[2214761])
    (2214769 return _void[55])
  }
  function wrapcoforall_fn[2217313](in arg dummy_taskList[2217317]:_ref(c_void_ptr)[938311], in arg dummy_taskListNode[2217319]:int(64)[13], in arg buf[2217321]:c_void_ptr[149], in arg buf_size[2217323]:int(64)[13], in arg c[2217325]:_class_localscoforall_fn[2217222]) : void[4] "cobegin or coforall block"
  {
    val error[2217315]:Error[167984] "temp"
    val _0_locBlock[2217330]:1*range(int(64),bounded,false)[1244885] "temp"
    (2217335 'move' _0_locBlock[2217330](2217332 '.v' c[2217325] _0_locBlock[2217225]))
    val _1_parDim[2217338]:int(64)[13] "temp"
    (2217343 'move' _1_parDim[2217338](2217340 '.v' c[2217325] _1_parDim[2217227]))
    val _2_numChunks[2217346]:int(64)[13] "temp"
    (2217351 'move' _2_numChunks[2217346](2217348 '.v' c[2217325] _2_numChunks[2217229]))
    val _3_chunk[2217354]:int(64)[13] "temp"
    (2217359 'move' _3_chunk[2217354](2217356 '.v' c[2217325] _3_chunk[2217231]))
    val _4__coforallCount[2217362]:_EndCount(AtomicT(int(64)),int(64))[945532] "temp"
    (2217367 'move' _4__coforallCount[2217362](2217364 '.v' c[2217325] _4__coforallCount[2217233]))
    ref _6_default_arg_offset[2217371]:1*int(64)[1256714] "temp"
    (2217376 'move' _6_default_arg_offset[2217371](2217373 '.v' c[2217325] _6_default_arg_offset[2217237]))
    ref _7_chpl__iterLF[2217379]:2*[domain(1,int(64),false)] range(int(64),bounded,false)[1480149] "temp"
    (2217384 'move' _7_chpl__iterLF[2217379](2217381 '.v' c[2217325] _7_chpl__iterLF[2217239]))
    (2217328 call coforall_fn[1940458] _0_locBlock[2217330] _1_parDim[2217338] _2_numChunks[2217346] _3_chunk[2217354] _4__coforallCount[2217362] error[2217315] _6_default_arg_offset[2217371] _7_chpl__iterLF[2217379])
    val endcount[2217387]:_EndCount(AtomicT(int(64)),int(64))[945532] "temp"
    (2217392 'move' endcount[2217387](2217389 '.v' c[2217325] _4__coforallCount[2217233]))
    (2217394 call _downEndCount[1230826] endcount[2217387] error[2217315])
    (2217398 return _void[55])
  }
  function wrapcoforall_fn[2217499](in arg dummy_taskList[2217503]:_ref(c_void_ptr)[938311], in arg dummy_taskListNode[2217505]:int(64)[13], in arg buf[2217507]:c_void_ptr[149], in arg buf_size[2217509]:int(64)[13], in arg c[2217511]:_class_localscoforall_fn[2217408]) : void[4] "cobegin or coforall block"
  {
    val error[2217501]:Error[167984] "temp"
    val _0_locBlock[2217516]:1*range(int(64),bounded,false)[1244885] "temp"
    (2217521 'move' _0_locBlock[2217516](2217518 '.v' c[2217511] _0_locBlock[2217411]))
    val _1_parDim[2217524]:int(64)[13] "temp"
    (2217529 'move' _1_parDim[2217524](2217526 '.v' c[2217511] _1_parDim[2217413]))
    val _2_numChunks[2217532]:int(64)[13] "temp"
    (2217537 'move' _2_numChunks[2217532](2217534 '.v' c[2217511] _2_numChunks[2217415]))
    val _3_chunk[2217540]:int(64)[13] "temp"
    (2217545 'move' _3_chunk[2217540](2217542 '.v' c[2217511] _3_chunk[2217417]))
    val _4__coforallCount[2217548]:_EndCount(AtomicT(int(64)),int(64))[945532] "temp"
    (2217553 'move' _4__coforallCount[2217548](2217550 '.v' c[2217511] _4__coforallCount[2217419]))
    ref _6_default_arg_offset[2217557]:1*int(64)[1256714] "temp"
    (2217562 'move' _6_default_arg_offset[2217557](2217559 '.v' c[2217511] _6_default_arg_offset[2217423]))
    ref _7_chpl__iterLF[2217565]:2*[domain(1,int(64),false)] real(64)[1537560] "temp"
    (2217570 'move' _7_chpl__iterLF[2217565](2217567 '.v' c[2217511] _7_chpl__iterLF[2217425]))
    (2217514 call coforall_fn[1943628] _0_locBlock[2217516] _1_parDim[2217524] _2_numChunks[2217532] _3_chunk[2217540] _4__coforallCount[2217548] error[2217501] _6_default_arg_offset[2217557] _7_chpl__iterLF[2217565])
    val endcount[2217573]:_EndCount(AtomicT(int(64)),int(64))[945532] "temp"
    (2217578 'move' endcount[2217573](2217575 '.v' c[2217511] _4__coforallCount[2217419]))
    (2217580 call _downEndCount[1230826] endcount[2217573] error[2217501])
    (2217584 return _void[55])
  }
  function wrapcoforall_fn[2217685](in arg dummy_taskList[2217689]:_ref(c_void_ptr)[938311], in arg dummy_taskListNode[2217691]:int(64)[13], in arg buf[2217693]:c_void_ptr[149], in arg buf_size[2217695]:int(64)[13], in arg c[2217697]:_class_localscoforall_fn[2217594]) : void[4] "cobegin or coforall block"
  {
    val error[2217687]:Error[167984] "temp"
    val _0_locBlock[2217702]:1*range(int(64),bounded,false)[1244885] "temp"
    (2217707 'move' _0_locBlock[2217702](2217704 '.v' c[2217697] _0_locBlock[2217597]))
    val _1_parDim[2217710]:int(64)[13] "temp"
    (2217715 'move' _1_parDim[2217710](2217712 '.v' c[2217697] _1_parDim[2217599]))
    val _2_numChunks[2217718]:int(64)[13] "temp"
    (2217723 'move' _2_numChunks[2217718](2217720 '.v' c[2217697] _2_numChunks[2217601]))
    val _3_chunk[2217726]:int(64)[13] "temp"
    (2217731 'move' _3_chunk[2217726](2217728 '.v' c[2217697] _3_chunk[2217603]))
    val _4__coforallCount[2217734]:_EndCount(AtomicT(int(64)),int(64))[945532] "temp"
    (2217739 'move' _4__coforallCount[2217734](2217736 '.v' c[2217697] _4__coforallCount[2217605]))
    ref _6_default_arg_offset[2217743]:1*int(64)[1256714] "temp"
    (2217748 'move' _6_default_arg_offset[2217743](2217745 '.v' c[2217697] _6_default_arg_offset[2217609]))
    ref _7_chpl__iterLF[2217751]:2*[domain(1,int(64),false)] real(64)[1537560] "temp"
    (2217756 'move' _7_chpl__iterLF[2217751](2217753 '.v' c[2217697] _7_chpl__iterLF[2217611]))
    (2217700 call coforall_fn[1944763] _0_locBlock[2217702] _1_parDim[2217710] _2_numChunks[2217718] _3_chunk[2217726] _4__coforallCount[2217734] error[2217687] _6_default_arg_offset[2217743] _7_chpl__iterLF[2217751])
    val endcount[2217759]:_EndCount(AtomicT(int(64)),int(64))[945532] "temp"
    (2217764 'move' endcount[2217759](2217761 '.v' c[2217697] _4__coforallCount[2217605]))
    (2217766 call _downEndCount[1230826] endcount[2217759] error[2217687])
    (2217770 return _void[55])
  }
  function wrapcoforall_fn[2217871](in arg dummy_taskList[2217875]:_ref(c_void_ptr)[938311], in arg dummy_taskListNode[2217877]:int(64)[13], in arg buf[2217879]:c_void_ptr[149], in arg buf_size[2217881]:int(64)[13], in arg c[2217883]:_class_localscoforall_fn[2217780]) : void[4] "cobegin or coforall block"
  {
    val error[2217873]:Error[167984] "temp"
    val _0_parDim[2217888]:int(64)[13] "temp"
    (2217893 'move' _0_parDim[2217888](2217890 '.v' c[2217883] _0_parDim[2217783]))
    val _1_numChunks[2217896]:int(64)[13] "temp"
    (2217901 'move' _1_numChunks[2217896](2217898 '.v' c[2217883] _1_numChunks[2217785]))
    val _2_coerce_tmp[2217904]:domain(1,int(64),false)[1251123] "temp"
    (2217909 'move' _2_coerce_tmp[2217904](2217906 '.v' c[2217883] _2_coerce_tmp[2217787]))
    val _3_chunk[2217912]:int(64)[13] "temp"
    (2217917 'move' _3_chunk[2217912](2217914 '.v' c[2217883] _3_chunk[2217789]))
    val _4__coforallCount[2217920]:_EndCount(AtomicT(int(64)),int(64))[945532] "temp"
    (2217925 'move' _4__coforallCount[2217920](2217922 '.v' c[2217883] _4__coforallCount[2217791]))
    val _6_coerce_tmp[2217929]:[domain(1,int(64),false)] real(64)[1358944] "temp"
    (2217934 'move' _6_coerce_tmp[2217929](2217931 '.v' c[2217883] _6_coerce_tmp[2217795]))
    ref _7_default_arg_offset[2217937]:1*int(64)[1256714] "temp"
    (2217942 'move' _7_default_arg_offset[2217937](2217939 '.v' c[2217883] _7_default_arg_offset[2217797]))
    val _8_rhs[2217945]:real(64)[16] "temp"
    (2217950 'move' _8_rhs[2217945](2217947 '.v' c[2217883] _8_rhs[2217799]))
    (2217886 call coforall_fn[1945657] _0_parDim[2217888] _1_numChunks[2217896] _2_coerce_tmp[2217904] _3_chunk[2217912] _4__coforallCount[2217920] error[2217873] _6_coerce_tmp[2217929] _7_default_arg_offset[2217937] _8_rhs[2217945])
    val endcount[2217953]:_EndCount(AtomicT(int(64)),int(64))[945532] "temp"
    (2217958 'move' endcount[2217953](2217955 '.v' c[2217883] _4__coforallCount[2217791]))
    (2217960 call _downEndCount[1230826] endcount[2217953] error[2217873])
    (2217964 return _void[55])
  }
}