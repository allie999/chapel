AST dump for CString after pass buildDefaultFunctions.
Module use list: ChapelStandard SysCTypes 

{
  function chpl__init_CString[416028]() : void[4] "insert line file info" "module init"
  {
    (501926 return _void[55])
  }
  function chpl__initCopy[21698](arg x[21695]:c_string[19]) : _unknown[51] "init copy fn" "inline"
  {
    unknown ret[501659] "RVV" "temp"
    (501665 'move' ret[501659](501664 'coerce' x[21695] c_string[19]))
    (501661 return ret[501659])
  }
  { scopeless type
    c_string[19]
  }
  function chpl__autoCopy[21714](arg x[21711]:c_string[19]) : _unknown[51] "auto copy fn" "inline"
  {
    unknown ret[501669] "RVV" "temp"
    (501675 'move' ret[501669](501674 'coerce' x[21711] c_string[19]))
    (501671 return ret[501669])
  }
  { scopeless type
    c_string[19]
  }
  function ==[21730](arg s0[21727]:c_string[19], arg s1[21733]:c_string[19]) : _unknown[51] "inline"
  {
    unknown ret[501679] "RVV" "temp"
    unknown call_tmp[595300] "expr temp" "maybe param" "maybe type" "temp"
    (595303 'move' call_tmp[595300](21756 'string_compare' s0[21727] s1[21733]))
    unknown call_tmp[595305] "expr temp" "maybe param" "maybe type" "temp"
    (595308 'move' call_tmp[595305](21758 call == call_tmp[595300] 0))
    (501684 'move' ret[501679](501683 'deref' call_tmp[595305]))
    (501681 return ret[501679])
  }
  function !=[21771](arg s0[21768]:c_string[19], arg s1[21774]:c_string[19]) : _unknown[51] "inline"
  {
    unknown ret[501688] "RVV" "temp"
    unknown call_tmp[595310] "expr temp" "maybe param" "maybe type" "temp"
    (595313 'move' call_tmp[595310](21781 'string_compare' s0[21768] s1[21774]))
    unknown call_tmp[595315] "expr temp" "maybe param" "maybe type" "temp"
    (595318 'move' call_tmp[595315](21783 call != call_tmp[595310] 0))
    (501693 'move' ret[501688](501692 'deref' call_tmp[595315]))
    (501690 return ret[501688])
  }
  function <=[21796](arg a[21793]:c_string[19], arg b[21799]:c_string[19]) : _unknown[51] "inline"
  {
    unknown ret[501697] "RVV" "temp"
    unknown call_tmp[595320] "expr temp" "maybe param" "maybe type" "temp"
    (595323 'move' call_tmp[595320](21806 'string_compare' a[21793] b[21799]))
    unknown call_tmp[595325] "expr temp" "maybe param" "maybe type" "temp"
    (595328 'move' call_tmp[595325](21808 call <= call_tmp[595320] 0))
    (501702 'move' ret[501697](501701 'deref' call_tmp[595325]))
    (501699 return ret[501697])
  }
  function >=[21821](arg a[21818]:c_string[19], arg b[21824]:c_string[19]) : _unknown[51] "inline"
  {
    unknown ret[501706] "RVV" "temp"
    unknown call_tmp[595330] "expr temp" "maybe param" "maybe type" "temp"
    (595333 'move' call_tmp[595330](21831 'string_compare' a[21818] b[21824]))
    unknown call_tmp[595335] "expr temp" "maybe param" "maybe type" "temp"
    (595338 'move' call_tmp[595335](21833 call >= call_tmp[595330] 0))
    (501711 'move' ret[501706](501710 'deref' call_tmp[595335]))
    (501708 return ret[501706])
  }
  function <[21846](arg a[21843]:c_string[19], arg b[21849]:c_string[19]) : _unknown[51] "inline"
  {
    unknown ret[501715] "RVV" "temp"
    unknown call_tmp[595340] "expr temp" "maybe param" "maybe type" "temp"
    (595343 'move' call_tmp[595340](21856 'string_compare' a[21843] b[21849]))
    unknown call_tmp[595345] "expr temp" "maybe param" "maybe type" "temp"
    (595348 'move' call_tmp[595345](21858 call < call_tmp[595340] 0))
    (501720 'move' ret[501715](501719 'deref' call_tmp[595345]))
    (501717 return ret[501715])
  }
  function >[21871](arg a[21868]:c_string[19], arg b[21874]:c_string[19]) : _unknown[51] "inline"
  {
    unknown ret[501724] "RVV" "temp"
    unknown call_tmp[595350] "expr temp" "maybe param" "maybe type" "temp"
    (595353 'move' call_tmp[595350](21881 'string_compare' a[21868] b[21874]))
    unknown call_tmp[595355] "expr temp" "maybe param" "maybe type" "temp"
    (595358 'move' call_tmp[595355](21883 call > call_tmp[595350] 0))
    (501729 'move' ret[501724](501728 'deref' call_tmp[595355]))
    (501726 return ret[501724])
  }
  function =[21896](ref arg a[21893]:c_string[19], arg b[21899]:c_string[19]) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (21906 '=' a[21893] b[21899])
    (501731 return _void[55])
  }
  function =[21917](ref arg a[21914]:c_string[19], arg b[21920]:_nilType[42]) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    unknown call_tmp[595360] "expr temp" "maybe param" "maybe type" "temp"
    (595363 'move' call_tmp[595360](368955 call c_nil[205006]))
    unknown call_tmp[595365] "expr temp" "maybe param" "maybe type" "temp"
    (595368 'move' call_tmp[595365](21926 call _cast c_string[19] call_tmp[595360]))
    (21928 call = a[21914] call_tmp[595365])
    (501733 return _void[55])
  }
  function =[21940](ref arg a[21937]:c_string[19], arg b[21943]:string[26]) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    unknown call_tmp[595372] "expr temp" "maybe param" "maybe type" "temp"
    (595375 'move' call_tmp[595372](21956 call(21952 call (partial) c_str _mt[243] b[21943])))
    (21957 '=' a[21937] call_tmp[595372])
    (501735 return _void[55])
  }
  function _cast[21968](arg t[21965]:c_string[19], arg x[21971]:_nilType[42]) : _unknown[51] "inline"
  {
    unknown ret[501739] "RVV" "temp"
    unknown call_tmp[595377] "expr temp" "maybe param" "maybe type" "temp"
    (595380 'move' call_tmp[595377](21978 'cast' t[21965] x[21971]))
    (501744 'move' ret[501739](501743 'deref' call_tmp[595377]))
    (501741 return ret[501739])
  }
  function _cast[21990](arg t[21987]:c_void_ptr[149], arg x[21993]:c_string[19]) : _unknown[51] "inline"
  {
    unknown ret[501748] "RVV" "temp"
    unknown call_tmp[595382] "expr temp" "maybe param" "maybe type" "temp"
    (595385 'move' call_tmp[595382](22000 'cast' t[21987] x[21993]))
    (501753 'move' ret[501748](501752 'deref' call_tmp[595382]))
    (501750 return ret[501748])
  }
  function _cast[22012](arg t[22009]:c_string[19], arg x[22015]:c_void_ptr[149]) : _unknown[51] "inline"
  {
    unknown ret[501757] "RVV" "temp"
    unknown call_tmp[595387] "expr temp" "maybe param" "maybe type" "temp"
    (595390 'move' call_tmp[595387](22022 'cast' t[22009] x[22015]))
    (501762 'move' ret[501757](501761 'deref' call_tmp[595387]))
    (501759 return ret[501757])
  }
  function _cast[22034](arg t[22031]:c_ptr[205100](?), arg x[22037]:c_string[19]) : _unknown[51] "inline"
  {
    unknown ret[501766] "RVV" "temp"
    unknown call_tmp[595392] "expr temp" "maybe param" "maybe type" "temp"
    (595395 'move' call_tmp[595392](22075 'cast' t[22031] x[22037]))
    (501771 'move' ret[501766](501770 'deref' call_tmp[595392]))
    (501768 return ret[501766])
  }
  where {
    unknown tmp[417062] "maybe param" "temp"
    unknown tmp[417083] "maybe param" "temp"
    unknown call_tmp[595399] "expr temp" "maybe param" "maybe type" "temp"
    (595402 'move' call_tmp[595399](22041 call eltType _mt[243] t[22031]))
    (417094 'move' tmp[417083](22045 call == call_tmp[595399] c_char[20594]))
    unknown call_tmp[595404] "expr temp" "maybe param" "maybe type" "temp"
    (595407 'move' call_tmp[595404](417096 call _cond_invalid tmp[417083]))
    if call_tmp[595404]
    {
      (417099 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[552472] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[552473] "maybe param" "temp"
    unknown call_tmp[595409] "expr temp" "maybe param" "maybe type" "temp"
    (595412 'move' call_tmp[595409](417084 call isTrue tmp[417083]))
    (552478 'move' tmp[552473](552476 call _cond_test call_tmp[595409]))
    if tmp[552473]
    {
      (552483 'move' tmp[552472](552480 '_paramFoldLogical' tmp[552473] 1))
    }
    {
      unknown tmp[552485] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[595416] "expr temp" "maybe param" "maybe type" "temp"
      (595419 'move' call_tmp[595416](22048 call eltType _mt[243] t[22031]))
      unknown call_tmp[595421] "expr temp" "maybe param" "maybe type" "temp"
      (595424 'move' call_tmp[595421](22054 call int(64)[13] 8))
      unknown call_tmp[595426] "expr temp" "maybe param" "maybe type" "temp"
      (595429 'move' call_tmp[595426](22055 call == call_tmp[595416] call_tmp[595421]))
      (552487 'move' tmp[552485](417088 call isTrue call_tmp[595426]))
      (552492 'move' tmp[552472](552489 '_paramFoldLogical' tmp[552473] tmp[552485]))
    }
    (417073 'move' tmp[417062] tmp[552472])
    unknown call_tmp[595431] "expr temp" "maybe param" "maybe type" "temp"
    (595434 'move' call_tmp[595431](417075 call _cond_invalid tmp[417062]))
    if call_tmp[595431]
    {
      (417078 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[552499] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[552500] "maybe param" "temp"
    unknown call_tmp[595436] "expr temp" "maybe param" "maybe type" "temp"
    (595439 'move' call_tmp[595436](417063 call isTrue tmp[417062]))
    (552505 'move' tmp[552500](552503 call _cond_test call_tmp[595436]))
    if tmp[552500]
    {
      (552510 'move' tmp[552499](552507 '_paramFoldLogical' tmp[552500] 1))
    }
    {
      unknown tmp[552512] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[595443] "expr temp" "maybe param" "maybe type" "temp"
      (595446 'move' call_tmp[595443](22060 call eltType _mt[243] t[22031]))
      unknown call_tmp[595448] "expr temp" "maybe param" "maybe type" "temp"
      (595451 'move' call_tmp[595448](22066 call uint(64)[115] 8))
      unknown call_tmp[595453] "expr temp" "maybe param" "maybe type" "temp"
      (595456 'move' call_tmp[595453](22067 call == call_tmp[595443] call_tmp[595448]))
      (552514 'move' tmp[552512](417067 call isTrue call_tmp[595453]))
      (552519 'move' tmp[552499](552516 '_paramFoldLogical' tmp[552500] tmp[552512]))
    }
    (748349 call chpl_statementLevelSymbol tmp[552499])
  }
  function _cast[22088](arg t[22085]:c_string[19], arg x[22091]:c_ptr[205100](?)) : _unknown[51] "inline"
  {
    unknown ret[501775] "RVV" "temp"
    unknown call_tmp[595458] "expr temp" "maybe param" "maybe type" "temp"
    (595461 'move' call_tmp[595458](22129 'cast' t[22085] x[22091]))
    (501780 'move' ret[501775](501779 'deref' call_tmp[595458]))
    (501777 return ret[501775])
  }
  where {
    unknown tmp[417104] "maybe param" "temp"
    unknown tmp[417125] "maybe param" "temp"
    unknown call_tmp[595465] "expr temp" "maybe param" "maybe type" "temp"
    (595468 'move' call_tmp[595465](22095 call eltType _mt[243] x[22091]))
    (417136 'move' tmp[417125](22099 call == call_tmp[595465] c_char[20594]))
    unknown call_tmp[595470] "expr temp" "maybe param" "maybe type" "temp"
    (595473 'move' call_tmp[595470](417138 call _cond_invalid tmp[417125]))
    if call_tmp[595470]
    {
      (417141 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[552526] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[552527] "maybe param" "temp"
    unknown call_tmp[595475] "expr temp" "maybe param" "maybe type" "temp"
    (595478 'move' call_tmp[595475](417126 call isTrue tmp[417125]))
    (552532 'move' tmp[552527](552530 call _cond_test call_tmp[595475]))
    if tmp[552527]
    {
      (552537 'move' tmp[552526](552534 '_paramFoldLogical' tmp[552527] 1))
    }
    {
      unknown tmp[552539] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[595482] "expr temp" "maybe param" "maybe type" "temp"
      (595485 'move' call_tmp[595482](22102 call eltType _mt[243] x[22091]))
      unknown call_tmp[595487] "expr temp" "maybe param" "maybe type" "temp"
      (595490 'move' call_tmp[595487](22108 call int(64)[13] 8))
      unknown call_tmp[595492] "expr temp" "maybe param" "maybe type" "temp"
      (595495 'move' call_tmp[595492](22109 call == call_tmp[595482] call_tmp[595487]))
      (552541 'move' tmp[552539](417130 call isTrue call_tmp[595492]))
      (552546 'move' tmp[552526](552543 '_paramFoldLogical' tmp[552527] tmp[552539]))
    }
    (417115 'move' tmp[417104] tmp[552526])
    unknown call_tmp[595497] "expr temp" "maybe param" "maybe type" "temp"
    (595500 'move' call_tmp[595497](417117 call _cond_invalid tmp[417104]))
    if call_tmp[595497]
    {
      (417120 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[552553] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[552554] "maybe param" "temp"
    unknown call_tmp[595502] "expr temp" "maybe param" "maybe type" "temp"
    (595505 'move' call_tmp[595502](417105 call isTrue tmp[417104]))
    (552559 'move' tmp[552554](552557 call _cond_test call_tmp[595502]))
    if tmp[552554]
    {
      (552564 'move' tmp[552553](552561 '_paramFoldLogical' tmp[552554] 1))
    }
    {
      unknown tmp[552566] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[595509] "expr temp" "maybe param" "maybe type" "temp"
      (595512 'move' call_tmp[595509](22114 call eltType _mt[243] x[22091]))
      unknown call_tmp[595514] "expr temp" "maybe param" "maybe type" "temp"
      (595517 'move' call_tmp[595514](22120 call uint(64)[115] 8))
      unknown call_tmp[595519] "expr temp" "maybe param" "maybe type" "temp"
      (595522 'move' call_tmp[595519](22121 call == call_tmp[595509] call_tmp[595514]))
      (552568 'move' tmp[552566](417109 call isTrue call_tmp[595519]))
      (552573 'move' tmp[552553](552570 '_paramFoldLogical' tmp[552554] tmp[552566]))
    }
    (748351 call chpl_statementLevelSymbol tmp[552553])
  }
  function _cast[22142](arg t[22139]:chpl_anybool[181](?), arg x[22145]:c_string[19]) : _unknown[51] throws "inline"
  {
    unknown ret[501784] "RVV" "temp"
    unknown chplString[22149] "dead at end of block" "insert auto destroy" "split inited"
    unknown type_tmp[540217] "maybe param" "maybe type" "temp"
    (540226 'move' type_tmp[540217](540225 call string[26]))
    (540219 'init var split decl' chplString[22149] type_tmp[540217])
    (22152 'end of statement')
    Try!
    {
      {
        unknown call_tmp[595524] "maybe param" "maybe type" "temp"
        (595527 'move' call_tmp[595524](22158 call createStringWithNewBuffer x[22145]))
        (540228 'init var split init' chplString[22149] call_tmp[595524] type_tmp[540217])
        (472911 'end of statement' chplString[22149])
      }
    }
    unknown call_tmp[595531] "expr temp" "maybe param" "maybe type" "temp"
    (595534 'move' call_tmp[595531](22173 call(22169 call (partial) strip _mt[243] chplString[22149])))
    unknown call_tmp[595536] "expr temp" "maybe param" "maybe type" "temp"
    (595539 'move' call_tmp[595536](22175 call _cast t[22139] call_tmp[595531]))
    (501789 'move' ret[501784](501788 'deref' call_tmp[595536]))
    gotoReturn _end__cast[501782] _end__cast[501782]
    (472913 'end of statement' chplString[22149])
    label _end__cast[501782]
    (501786 return ret[501784])
  }
  function _cast[22188](arg t[22185]:integral[199](?), arg x[22191]:c_string[19]) : _unknown[51] throws "inline"
  {
    unknown ret[501795] "RVV" "temp"
    unknown chplString[22195] "dead at end of block" "insert auto destroy" "split inited"
    unknown type_tmp[540231] "maybe param" "maybe type" "temp"
    (540240 'move' type_tmp[540231](540239 call string[26]))
    (540233 'init var split decl' chplString[22195] type_tmp[540231])
    (22198 'end of statement')
    Try!
    {
      {
        unknown call_tmp[595541] "maybe param" "maybe type" "temp"
        (595544 'move' call_tmp[595541](22204 call createStringWithNewBuffer x[22191]))
        (540242 'init var split init' chplString[22195] call_tmp[595541] type_tmp[540231])
        (472915 'end of statement' chplString[22195])
      }
    }
    unknown call_tmp[595548] "expr temp" "maybe param" "maybe type" "temp"
    (595551 'move' call_tmp[595548](22217 call(22213 call (partial) strip _mt[243] chplString[22195])))
    unknown call_tmp[595553] "expr temp" "maybe param" "maybe type" "temp"
    (595556 'move' call_tmp[595553](22219 call _cast t[22185] call_tmp[595548]))
    (501800 'move' ret[501795](501799 'deref' call_tmp[595553]))
    gotoReturn _end__cast[501793] _end__cast[501793]
    (472917 'end of statement' chplString[22195])
    label _end__cast[501793]
    (501797 return ret[501795])
  }
  function _cast[22232](arg t[22229]:chpl_anyreal[193](?), arg x[22235]:c_string[19]) : _unknown[51] throws "inline"
  {
    unknown ret[501806] "RVV" "temp"
    unknown chplString[22239] "dead at end of block" "insert auto destroy" "split inited"
    unknown type_tmp[540245] "maybe param" "maybe type" "temp"
    (540254 'move' type_tmp[540245](540253 call string[26]))
    (540247 'init var split decl' chplString[22239] type_tmp[540245])
    (22242 'end of statement')
    Try!
    {
      {
        unknown call_tmp[595558] "maybe param" "maybe type" "temp"
        (595561 'move' call_tmp[595558](22248 call createStringWithNewBuffer x[22235]))
        (540256 'init var split init' chplString[22239] call_tmp[595558] type_tmp[540245])
        (472919 'end of statement' chplString[22239])
      }
    }
    unknown call_tmp[595565] "expr temp" "maybe param" "maybe type" "temp"
    (595568 'move' call_tmp[595565](22261 call(22257 call (partial) strip _mt[243] chplString[22239])))
    unknown call_tmp[595570] "expr temp" "maybe param" "maybe type" "temp"
    (595573 'move' call_tmp[595570](22263 call _cast t[22229] call_tmp[595565]))
    (501811 'move' ret[501806](501810 'deref' call_tmp[595570]))
    gotoReturn _end__cast[501804] _end__cast[501804]
    (472921 'end of statement' chplString[22239])
    label _end__cast[501804]
    (501808 return ret[501806])
  }
  function _cast[22276](arg t[22273]:chpl_anyimag[190](?), arg x[22279]:c_string[19]) : _unknown[51] throws "inline"
  {
    unknown ret[501817] "RVV" "temp"
    unknown chplString[22283] "dead at end of block" "insert auto destroy" "split inited"
    unknown type_tmp[540259] "maybe param" "maybe type" "temp"
    (540268 'move' type_tmp[540259](540267 call string[26]))
    (540261 'init var split decl' chplString[22283] type_tmp[540259])
    (22286 'end of statement')
    Try!
    {
      {
        unknown call_tmp[595575] "maybe param" "maybe type" "temp"
        (595578 'move' call_tmp[595575](22292 call createStringWithNewBuffer x[22279]))
        (540270 'init var split init' chplString[22283] call_tmp[595575] type_tmp[540259])
        (472923 'end of statement' chplString[22283])
      }
    }
    unknown call_tmp[595582] "expr temp" "maybe param" "maybe type" "temp"
    (595585 'move' call_tmp[595582](22305 call(22301 call (partial) strip _mt[243] chplString[22283])))
    unknown call_tmp[595587] "expr temp" "maybe param" "maybe type" "temp"
    (595590 'move' call_tmp[595587](22307 call _cast t[22273] call_tmp[595582]))
    (501822 'move' ret[501817](501821 'deref' call_tmp[595587]))
    gotoReturn _end__cast[501815] _end__cast[501815]
    (472925 'end of statement' chplString[22283])
    label _end__cast[501815]
    (501819 return ret[501817])
  }
  function _cast[22320](arg t[22317]:chpl_anycomplex[184](?), arg x[22323]:c_string[19]) : _unknown[51] throws "inline"
  {
    unknown ret[501828] "RVV" "temp"
    unknown chplString[22327] "dead at end of block" "insert auto destroy" "split inited"
    unknown type_tmp[540273] "maybe param" "maybe type" "temp"
    (540282 'move' type_tmp[540273](540281 call string[26]))
    (540275 'init var split decl' chplString[22327] type_tmp[540273])
    (22330 'end of statement')
    Try!
    {
      {
        unknown call_tmp[595592] "maybe param" "maybe type" "temp"
        (595595 'move' call_tmp[595592](22336 call createStringWithNewBuffer x[22323]))
        (540284 'init var split init' chplString[22327] call_tmp[595592] type_tmp[540273])
        (472927 'end of statement' chplString[22327])
      }
    }
    unknown call_tmp[595599] "expr temp" "maybe param" "maybe type" "temp"
    (595602 'move' call_tmp[595599](22349 call(22345 call (partial) strip _mt[243] chplString[22327])))
    unknown call_tmp[595604] "expr temp" "maybe param" "maybe type" "temp"
    (595607 'move' call_tmp[595604](22351 call _cast t[22317] call_tmp[595599]))
    (501833 'move' ret[501828](501832 'deref' call_tmp[595604]))
    gotoReturn _end__cast[501826] _end__cast[501826]
    (472929 'end of statement' chplString[22327])
    label _end__cast[501826]
    (501830 return ret[501828])
  }
  function c_string[19].size[22361](arg _mt[22366]:_MT[238], arg this[22363]:c_string[19] :
  c_string[19]) : _unknown[51] "inline" "method" "no parens"
  {
    unknown ret[501839] "RVV" "temp"
    unknown call_tmp[595609] "expr temp" "maybe param" "maybe type" "temp"
    (595612 'move' call_tmp[595609](22387 'string_length_bytes' this[22363]))
    (501844 'move' ret[501839](501843 'deref' call_tmp[595609]))
    (501841 return ret[501839])
  }
  function c_string[19].length[22396](arg _mt[22401]:_MT[238], arg this[22398]:c_string[19] :
  c_string[19]) : _unknown[51] "inline" "method" "no parens"
  {
    unknown ret[501848] "RVV" "temp"
    unknown call_tmp[595614] "expr temp" "maybe param" "maybe type" "temp"
    (595617 'move' call_tmp[595614](22438 call + "'c_string.length' is deprecated - " "please use 'c_string.size' instead"))
    (22441 call compilerWarning call_tmp[595614])
    (472932 'end of statement')
    unknown call_tmp[595621] "expr temp" "maybe param" "maybe type" "temp"
    (595624 'move' call_tmp[595621](22445 call size _mt[243] this[22398]))
    (501853 'move' ret[501848](501852 'deref' call_tmp[595621]))
    (501850 return ret[501848])
  }
  function c_string[19].substring[22459](arg _mt[22464]:_MT[238], arg this[22461]:c_string[19] :
  c_string[19], arg i[22456]:int(64)[13]) : _unknown[51] "inline" "method"
  {
    unknown ret[501857] "RVV" "temp"
    unknown call_tmp[595626] "expr temp" "maybe param" "maybe type" "temp"
    (595629 'move' call_tmp[595626](22486 'string_index' this[22461] i[22456]))
    (501862 'move' ret[501857](501861 'deref' call_tmp[595626]))
    (501859 return ret[501857])
  }
  function c_string[19].substring[22502](arg _mt[22507]:_MT[238], arg this[22504]:c_string[19] :
  c_string[19], arg r[22499]:range[64319](?)) : _unknown[51] "inline" "method"
  {
    unknown ret[501866] "RVV" "temp"
    unknown call_tmp[595633] "expr temp" "maybe param" "maybe type" "temp"
    (595636 'move' call_tmp[595633](22512 call size _mt[243] this[22504]))
    unknown call_tmp[595638] "expr temp" "maybe param" "maybe type" "temp"
    (595641 'move' call_tmp[595638](22515 call chpl_build_bounded_range 1 call_tmp[595633]))
    unknown call_tmp[595643] "maybe param" "maybe type" "temp"
    (595646 'move' call_tmp[595643](22518 call r[22499] call_tmp[595638]))
    unknown r2[22519] "dead at end of block" "insert auto destroy"
    (540287 'init var' r2[22519] call_tmp[595643])
    (22522 'end of statement')
    unknown call_tmp[595650] "maybe param" "maybe type" "temp"
    (595653 'move' call_tmp[595650](22528 call alignedLow _mt[243] r2[22519]))
    unknown lo[22531] "dead at end of block" "insert auto destroy"
    (540289 'init var' lo[22531] call_tmp[595650] int(64)[13])
    unknown call_tmp[595657] "maybe param" "maybe type" "temp"
    (595660 'move' call_tmp[595657](22538 call alignedHigh _mt[243] r2[22519]))
    unknown hi[22541] "dead at end of block" "insert auto destroy"
    (540291 'init var' hi[22541] call_tmp[595657] int(64)[13])
    (22544 'end of statement' r2[22519] r2[22519])
    unknown call_tmp[595664] "expr temp" "maybe param" "maybe type" "temp"
    (595667 'move' call_tmp[595664](22569 call stride _mt[243] r2[22519]))
    unknown call_tmp[595669] "expr temp" "maybe param" "maybe type" "temp"
    (595672 'move' call_tmp[595669](22572 'string_select' this[22504] lo[22531] hi[22541] call_tmp[595664]))
    (501871 'move' ret[501866](501870 'deref' call_tmp[595669]))
    gotoReturn _end_substring[501864] _end_substring[501864]
    (472937 'end of statement' lo[22531] hi[22541] r2[22519])
    label _end_substring[501864]
    (501868 return ret[501866])
  }
  function c_string[19].length[22580](arg _mt[22585]:_MT[238], param arg this[22582]:c_string[19] :
  c_string[19]) param : _unknown[51] "inline" "last resort" "method" "no parens"
  {
    unknown ret[501877] "RVV" "param" "temp"
    unknown call_tmp[595674] "expr temp" "maybe param" "maybe type" "temp"
    (595677 'move' call_tmp[595674](22590 call + "'c_string.length' is deprecated - " "please use 'c_string.size' instead"))
    (22593 call compilerWarning call_tmp[595674])
    (472941 'end of statement')
    unknown call_tmp[595679] "expr temp" "maybe param" "maybe type" "temp"
    (595682 'move' call_tmp[595679](22599 'string_length_bytes' this[22582]))
    (501882 'move' ret[501877](501881 'deref' call_tmp[595679]))
    (501879 return ret[501877])
  }
  function c_string[19].size[22607](arg _mt[22612]:_MT[238], param arg this[22609]:c_string[19] :
  c_string[19]) param : _unknown[51] "inline" "last resort" "method" "no parens"
  {
    unknown ret[501886] "RVV" "param" "temp"
    unknown call_tmp[595684] "expr temp" "maybe param" "maybe type" "temp"
    (595687 'move' call_tmp[595684](22617 'string_length_bytes' this[22609]))
    (501891 'move' ret[501886](501890 'deref' call_tmp[595684]))
    (501888 return ret[501886])
  }
  function _string_contains[22629](param arg a[22626]:c_string[19], param arg b[22632]:c_string[19]) param : _unknown[51] "inline" "last resort"
  {
    unknown ret[501895] "RVV" "param" "temp"
    unknown call_tmp[595689] "expr temp" "maybe param" "maybe type" "temp"
    (595692 'move' call_tmp[595689](22655 'string_contains' a[22626] b[22632]))
    (501900 'move' ret[501895](501899 'deref' call_tmp[595689]))
    (501897 return ret[501895])
  }
  function c_string[19].indexOf[22668](arg _mt[22673]:_MT[238], arg this[22670]:c_string[19] :
  c_string[19], arg substring[22665]:c_string[19]) : _unknown[51] "inline" "method"
  {
    unknown ret[501904] "RVV" "temp"
    unknown call_tmp[595694] "expr temp" "maybe param" "maybe type" "temp"
    (595697 'move' call_tmp[595694](22680 call string_index_of this[22670] substring[22665]))
    (501910 'move' ret[501904](501909 'coerce' call_tmp[595694] int(64)[13]))
    (501906 return ret[501904])
  }
  { scopeless type
    int(64)[13]
  }
  function string_index_of[22693](arg haystack[22690]:c_string[19], arg needle[22696]:c_string[19]) : _unknown[51] "extern" "local args" "no fn body" "fn synchronization free" "no return value for void"
  {
    unknown ret[501914] "RVV" "temp"
    (501916 return ret[501914])
  }
  { scopeless type
    int(64)[13]
  }
  function chpl_free_c_string[22709](ref arg cs[22706]:c_string[19]) : _unknown[51] "inline" "no return value for void"
  {
    function chpl_rt_free_c_string[22717](ref arg cs[22714]:c_string[19]) : void[4] "extern" "insert line file info" "local args" "no fn body" "fn synchronization free" "no return value for void"
    {
      (501918 return _void[55])
    }
    unknown call_tmp[595699] "expr temp" "maybe param" "maybe type" "temp"
    (595702 'move' call_tmp[595699](369029 call c_nil[205006]))
    unknown call_tmp[595704] "expr temp" "maybe param" "maybe type" "temp"
    (595707 'move' call_tmp[595704](22725 call _cast c_string[19] call_tmp[595699]))
    unknown call_tmp[595709] "expr temp" "maybe param" "maybe type" "temp"
    (595712 'move' call_tmp[595709](22727 call != cs[22706] call_tmp[595704]))
    unknown call_tmp[595714] "expr temp" "maybe param" "maybe type" "temp"
    (595717 'move' call_tmp[595714](22734 call _cond_test call_tmp[595709]))
    if call_tmp[595714]
    {
      (22732 call chpl_rt_free_c_string cs[22706])
    }
    (501920 return _void[55])
  }
  function c_string[19].writeThis[22746](arg _mt[22751]:_MT[238], arg this[22748]:c_string[19] :
  c_string[19], arg x[22744]:_any[178](?)) : _unknown[51] throws "method" "no return value for void"
  {
    (22774 call compilerError "Cannot write a c_string, cast to a string first.")
    (501922 return _void[55])
  }
  function c_string[19].readThis[22784](arg _mt[22789]:_MT[238], arg this[22786]:c_string[19] :
  c_string[19], arg x[22782]:_any[178](?)) : _unknown[51] throws "method" "no return value for void"
  {
    (22810 call compilerError "Cannot read a c_string, use string.")
    (501924 return _void[55])
  }
  (355110 'used modules list'(21688 'use' ChapelStandard[20267])(21690 'use' SysCTypes[20943]))
}