AST dump for CString after pass buildDefaultFunctions.
Module use list: ChapelStandard SysCTypes 

{
  function chpl__init_CString[415970]() : void[4] "insert line file info" "module init"
  {
    (501866 return _void[55])
  }
  function chpl__initCopy[21695](arg x[21692]:c_string[19]) : _unknown[51] "init copy fn" "inline"
  {
    unknown ret[501599] "RVV" "temp"
    (501605 'move' ret[501599](501604 'coerce' x[21692] c_string[19]))
    (501601 return ret[501599])
  }
  { scopeless type
    c_string[19]
  }
  function chpl__autoCopy[21711](arg x[21708]:c_string[19]) : _unknown[51] "auto copy fn" "inline"
  {
    unknown ret[501609] "RVV" "temp"
    (501615 'move' ret[501609](501614 'coerce' x[21708] c_string[19]))
    (501611 return ret[501609])
  }
  { scopeless type
    c_string[19]
  }
  function ==[21727](arg s0[21724]:c_string[19], arg s1[21730]:c_string[19]) : _unknown[51] "inline"
  {
    unknown ret[501619] "RVV" "temp"
    unknown call_tmp[595222] "expr temp" "maybe param" "maybe type" "temp"
    (595225 'move' call_tmp[595222](21753 'string_compare' s0[21724] s1[21730]))
    unknown call_tmp[595227] "expr temp" "maybe param" "maybe type" "temp"
    (595230 'move' call_tmp[595227](21755 call == call_tmp[595222] 0))
    (501624 'move' ret[501619](501623 'deref' call_tmp[595227]))
    (501621 return ret[501619])
  }
  function !=[21768](arg s0[21765]:c_string[19], arg s1[21771]:c_string[19]) : _unknown[51] "inline"
  {
    unknown ret[501628] "RVV" "temp"
    unknown call_tmp[595232] "expr temp" "maybe param" "maybe type" "temp"
    (595235 'move' call_tmp[595232](21778 'string_compare' s0[21765] s1[21771]))
    unknown call_tmp[595237] "expr temp" "maybe param" "maybe type" "temp"
    (595240 'move' call_tmp[595237](21780 call != call_tmp[595232] 0))
    (501633 'move' ret[501628](501632 'deref' call_tmp[595237]))
    (501630 return ret[501628])
  }
  function <=[21793](arg a[21790]:c_string[19], arg b[21796]:c_string[19]) : _unknown[51] "inline"
  {
    unknown ret[501637] "RVV" "temp"
    unknown call_tmp[595242] "expr temp" "maybe param" "maybe type" "temp"
    (595245 'move' call_tmp[595242](21803 'string_compare' a[21790] b[21796]))
    unknown call_tmp[595247] "expr temp" "maybe param" "maybe type" "temp"
    (595250 'move' call_tmp[595247](21805 call <= call_tmp[595242] 0))
    (501642 'move' ret[501637](501641 'deref' call_tmp[595247]))
    (501639 return ret[501637])
  }
  function >=[21818](arg a[21815]:c_string[19], arg b[21821]:c_string[19]) : _unknown[51] "inline"
  {
    unknown ret[501646] "RVV" "temp"
    unknown call_tmp[595252] "expr temp" "maybe param" "maybe type" "temp"
    (595255 'move' call_tmp[595252](21828 'string_compare' a[21815] b[21821]))
    unknown call_tmp[595257] "expr temp" "maybe param" "maybe type" "temp"
    (595260 'move' call_tmp[595257](21830 call >= call_tmp[595252] 0))
    (501651 'move' ret[501646](501650 'deref' call_tmp[595257]))
    (501648 return ret[501646])
  }
  function <[21843](arg a[21840]:c_string[19], arg b[21846]:c_string[19]) : _unknown[51] "inline"
  {
    unknown ret[501655] "RVV" "temp"
    unknown call_tmp[595262] "expr temp" "maybe param" "maybe type" "temp"
    (595265 'move' call_tmp[595262](21853 'string_compare' a[21840] b[21846]))
    unknown call_tmp[595267] "expr temp" "maybe param" "maybe type" "temp"
    (595270 'move' call_tmp[595267](21855 call < call_tmp[595262] 0))
    (501660 'move' ret[501655](501659 'deref' call_tmp[595267]))
    (501657 return ret[501655])
  }
  function >[21868](arg a[21865]:c_string[19], arg b[21871]:c_string[19]) : _unknown[51] "inline"
  {
    unknown ret[501664] "RVV" "temp"
    unknown call_tmp[595272] "expr temp" "maybe param" "maybe type" "temp"
    (595275 'move' call_tmp[595272](21878 'string_compare' a[21865] b[21871]))
    unknown call_tmp[595277] "expr temp" "maybe param" "maybe type" "temp"
    (595280 'move' call_tmp[595277](21880 call > call_tmp[595272] 0))
    (501669 'move' ret[501664](501668 'deref' call_tmp[595277]))
    (501666 return ret[501664])
  }
  function =[21893](ref arg a[21890]:c_string[19], arg b[21896]:c_string[19]) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (21903 '=' a[21890] b[21896])
    (501671 return _void[55])
  }
  function =[21914](ref arg a[21911]:c_string[19], arg b[21917]:_nilType[42]) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    unknown call_tmp[595282] "expr temp" "maybe param" "maybe type" "temp"
    (595285 'move' call_tmp[595282](368901 call c_nil[204963]))
    unknown call_tmp[595287] "expr temp" "maybe param" "maybe type" "temp"
    (595290 'move' call_tmp[595287](21923 call _cast c_string[19] call_tmp[595282]))
    (21925 call = a[21911] call_tmp[595287])
    (501673 return _void[55])
  }
  function =[21937](ref arg a[21934]:c_string[19], arg b[21940]:string[26]) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    unknown call_tmp[595294] "expr temp" "maybe param" "maybe type" "temp"
    (595297 'move' call_tmp[595294](21953 call(21949 call (partial) c_str _mt[243] b[21940])))
    (21954 '=' a[21934] call_tmp[595294])
    (501675 return _void[55])
  }
  function _cast[21965](arg t[21962]:c_string[19], arg x[21968]:_nilType[42]) : _unknown[51] "inline"
  {
    unknown ret[501679] "RVV" "temp"
    unknown call_tmp[595299] "expr temp" "maybe param" "maybe type" "temp"
    (595302 'move' call_tmp[595299](21975 'cast' t[21962] x[21968]))
    (501684 'move' ret[501679](501683 'deref' call_tmp[595299]))
    (501681 return ret[501679])
  }
  function _cast[21987](arg t[21984]:c_void_ptr[149], arg x[21990]:c_string[19]) : _unknown[51] "inline"
  {
    unknown ret[501688] "RVV" "temp"
    unknown call_tmp[595304] "expr temp" "maybe param" "maybe type" "temp"
    (595307 'move' call_tmp[595304](21997 'cast' t[21984] x[21990]))
    (501693 'move' ret[501688](501692 'deref' call_tmp[595304]))
    (501690 return ret[501688])
  }
  function _cast[22009](arg t[22006]:c_string[19], arg x[22012]:c_void_ptr[149]) : _unknown[51] "inline"
  {
    unknown ret[501697] "RVV" "temp"
    unknown call_tmp[595309] "expr temp" "maybe param" "maybe type" "temp"
    (595312 'move' call_tmp[595309](22019 'cast' t[22006] x[22012]))
    (501702 'move' ret[501697](501701 'deref' call_tmp[595309]))
    (501699 return ret[501697])
  }
  function _cast[22031](arg t[22028]:c_ptr[205057](?), arg x[22034]:c_string[19]) : _unknown[51] "inline"
  {
    unknown ret[501706] "RVV" "temp"
    unknown call_tmp[595314] "expr temp" "maybe param" "maybe type" "temp"
    (595317 'move' call_tmp[595314](22072 'cast' t[22028] x[22034]))
    (501711 'move' ret[501706](501710 'deref' call_tmp[595314]))
    (501708 return ret[501706])
  }
  where {
    unknown tmp[417004] "maybe param" "temp"
    unknown tmp[417025] "maybe param" "temp"
    unknown call_tmp[595321] "expr temp" "maybe param" "maybe type" "temp"
    (595324 'move' call_tmp[595321](22038 call eltType _mt[243] t[22028]))
    (417036 'move' tmp[417025](22042 call == call_tmp[595321] c_char[20591]))
    unknown call_tmp[595326] "expr temp" "maybe param" "maybe type" "temp"
    (595329 'move' call_tmp[595326](417038 call _cond_invalid tmp[417025]))
    if call_tmp[595326]
    {
      (417041 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[552394] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[552395] "maybe param" "temp"
    unknown call_tmp[595331] "expr temp" "maybe param" "maybe type" "temp"
    (595334 'move' call_tmp[595331](417026 call isTrue tmp[417025]))
    (552400 'move' tmp[552395](552398 call _cond_test call_tmp[595331]))
    if tmp[552395]
    {
      (552405 'move' tmp[552394](552402 '_paramFoldLogical' tmp[552395] 1))
    }
    {
      unknown tmp[552407] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[595338] "expr temp" "maybe param" "maybe type" "temp"
      (595341 'move' call_tmp[595338](22045 call eltType _mt[243] t[22028]))
      unknown call_tmp[595343] "expr temp" "maybe param" "maybe type" "temp"
      (595346 'move' call_tmp[595343](22051 call int(64)[13] 8))
      unknown call_tmp[595348] "expr temp" "maybe param" "maybe type" "temp"
      (595351 'move' call_tmp[595348](22052 call == call_tmp[595338] call_tmp[595343]))
      (552409 'move' tmp[552407](417030 call isTrue call_tmp[595348]))
      (552414 'move' tmp[552394](552411 '_paramFoldLogical' tmp[552395] tmp[552407]))
    }
    (417015 'move' tmp[417004] tmp[552394])
    unknown call_tmp[595353] "expr temp" "maybe param" "maybe type" "temp"
    (595356 'move' call_tmp[595353](417017 call _cond_invalid tmp[417004]))
    if call_tmp[595353]
    {
      (417020 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[552421] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[552422] "maybe param" "temp"
    unknown call_tmp[595358] "expr temp" "maybe param" "maybe type" "temp"
    (595361 'move' call_tmp[595358](417005 call isTrue tmp[417004]))
    (552427 'move' tmp[552422](552425 call _cond_test call_tmp[595358]))
    if tmp[552422]
    {
      (552432 'move' tmp[552421](552429 '_paramFoldLogical' tmp[552422] 1))
    }
    {
      unknown tmp[552434] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[595365] "expr temp" "maybe param" "maybe type" "temp"
      (595368 'move' call_tmp[595365](22057 call eltType _mt[243] t[22028]))
      unknown call_tmp[595370] "expr temp" "maybe param" "maybe type" "temp"
      (595373 'move' call_tmp[595370](22063 call uint(64)[115] 8))
      unknown call_tmp[595375] "expr temp" "maybe param" "maybe type" "temp"
      (595378 'move' call_tmp[595375](22064 call == call_tmp[595365] call_tmp[595370]))
      (552436 'move' tmp[552434](417009 call isTrue call_tmp[595375]))
      (552441 'move' tmp[552421](552438 '_paramFoldLogical' tmp[552422] tmp[552434]))
    }
    (748199 call chpl_statementLevelSymbol tmp[552421])
  }
  function _cast[22085](arg t[22082]:c_string[19], arg x[22088]:c_ptr[205057](?)) : _unknown[51] "inline"
  {
    unknown ret[501715] "RVV" "temp"
    unknown call_tmp[595380] "expr temp" "maybe param" "maybe type" "temp"
    (595383 'move' call_tmp[595380](22126 'cast' t[22082] x[22088]))
    (501720 'move' ret[501715](501719 'deref' call_tmp[595380]))
    (501717 return ret[501715])
  }
  where {
    unknown tmp[417046] "maybe param" "temp"
    unknown tmp[417067] "maybe param" "temp"
    unknown call_tmp[595387] "expr temp" "maybe param" "maybe type" "temp"
    (595390 'move' call_tmp[595387](22092 call eltType _mt[243] x[22088]))
    (417078 'move' tmp[417067](22096 call == call_tmp[595387] c_char[20591]))
    unknown call_tmp[595392] "expr temp" "maybe param" "maybe type" "temp"
    (595395 'move' call_tmp[595392](417080 call _cond_invalid tmp[417067]))
    if call_tmp[595392]
    {
      (417083 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[552448] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[552449] "maybe param" "temp"
    unknown call_tmp[595397] "expr temp" "maybe param" "maybe type" "temp"
    (595400 'move' call_tmp[595397](417068 call isTrue tmp[417067]))
    (552454 'move' tmp[552449](552452 call _cond_test call_tmp[595397]))
    if tmp[552449]
    {
      (552459 'move' tmp[552448](552456 '_paramFoldLogical' tmp[552449] 1))
    }
    {
      unknown tmp[552461] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[595404] "expr temp" "maybe param" "maybe type" "temp"
      (595407 'move' call_tmp[595404](22099 call eltType _mt[243] x[22088]))
      unknown call_tmp[595409] "expr temp" "maybe param" "maybe type" "temp"
      (595412 'move' call_tmp[595409](22105 call int(64)[13] 8))
      unknown call_tmp[595414] "expr temp" "maybe param" "maybe type" "temp"
      (595417 'move' call_tmp[595414](22106 call == call_tmp[595404] call_tmp[595409]))
      (552463 'move' tmp[552461](417072 call isTrue call_tmp[595414]))
      (552468 'move' tmp[552448](552465 '_paramFoldLogical' tmp[552449] tmp[552461]))
    }
    (417057 'move' tmp[417046] tmp[552448])
    unknown call_tmp[595419] "expr temp" "maybe param" "maybe type" "temp"
    (595422 'move' call_tmp[595419](417059 call _cond_invalid tmp[417046]))
    if call_tmp[595419]
    {
      (417062 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[552475] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[552476] "maybe param" "temp"
    unknown call_tmp[595424] "expr temp" "maybe param" "maybe type" "temp"
    (595427 'move' call_tmp[595424](417047 call isTrue tmp[417046]))
    (552481 'move' tmp[552476](552479 call _cond_test call_tmp[595424]))
    if tmp[552476]
    {
      (552486 'move' tmp[552475](552483 '_paramFoldLogical' tmp[552476] 1))
    }
    {
      unknown tmp[552488] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[595431] "expr temp" "maybe param" "maybe type" "temp"
      (595434 'move' call_tmp[595431](22111 call eltType _mt[243] x[22088]))
      unknown call_tmp[595436] "expr temp" "maybe param" "maybe type" "temp"
      (595439 'move' call_tmp[595436](22117 call uint(64)[115] 8))
      unknown call_tmp[595441] "expr temp" "maybe param" "maybe type" "temp"
      (595444 'move' call_tmp[595441](22118 call == call_tmp[595431] call_tmp[595436]))
      (552490 'move' tmp[552488](417051 call isTrue call_tmp[595441]))
      (552495 'move' tmp[552475](552492 '_paramFoldLogical' tmp[552476] tmp[552488]))
    }
    (748201 call chpl_statementLevelSymbol tmp[552475])
  }
  function _cast[22139](arg t[22136]:chpl_anybool[181](?), arg x[22142]:c_string[19]) : _unknown[51] throws "inline"
  {
    unknown ret[501724] "RVV" "temp"
    unknown chplString[22146] "dead at end of block" "insert auto destroy" "split inited"
    unknown type_tmp[540139] "maybe param" "maybe type" "temp"
    (540148 'move' type_tmp[540139](540147 call string[26]))
    (540141 'init var split decl' chplString[22146] type_tmp[540139])
    (22149 'end of statement')
    Try!
    {
      {
        unknown call_tmp[595446] "maybe param" "maybe type" "temp"
        (595449 'move' call_tmp[595446](22155 call createStringWithNewBuffer x[22142]))
        (540150 'init var split init' chplString[22146] call_tmp[595446] type_tmp[540139])
        (472851 'end of statement' chplString[22146])
      }
    }
    unknown call_tmp[595453] "expr temp" "maybe param" "maybe type" "temp"
    (595456 'move' call_tmp[595453](22170 call(22166 call (partial) strip _mt[243] chplString[22146])))
    unknown call_tmp[595458] "expr temp" "maybe param" "maybe type" "temp"
    (595461 'move' call_tmp[595458](22172 call _cast t[22136] call_tmp[595453]))
    (501729 'move' ret[501724](501728 'deref' call_tmp[595458]))
    gotoReturn _end__cast[501722] _end__cast[501722]
    (472853 'end of statement' chplString[22146])
    label _end__cast[501722]
    (501726 return ret[501724])
  }
  function _cast[22185](arg t[22182]:integral[199](?), arg x[22188]:c_string[19]) : _unknown[51] throws "inline"
  {
    unknown ret[501735] "RVV" "temp"
    unknown chplString[22192] "dead at end of block" "insert auto destroy" "split inited"
    unknown type_tmp[540153] "maybe param" "maybe type" "temp"
    (540162 'move' type_tmp[540153](540161 call string[26]))
    (540155 'init var split decl' chplString[22192] type_tmp[540153])
    (22195 'end of statement')
    Try!
    {
      {
        unknown call_tmp[595463] "maybe param" "maybe type" "temp"
        (595466 'move' call_tmp[595463](22201 call createStringWithNewBuffer x[22188]))
        (540164 'init var split init' chplString[22192] call_tmp[595463] type_tmp[540153])
        (472855 'end of statement' chplString[22192])
      }
    }
    unknown call_tmp[595470] "expr temp" "maybe param" "maybe type" "temp"
    (595473 'move' call_tmp[595470](22214 call(22210 call (partial) strip _mt[243] chplString[22192])))
    unknown call_tmp[595475] "expr temp" "maybe param" "maybe type" "temp"
    (595478 'move' call_tmp[595475](22216 call _cast t[22182] call_tmp[595470]))
    (501740 'move' ret[501735](501739 'deref' call_tmp[595475]))
    gotoReturn _end__cast[501733] _end__cast[501733]
    (472857 'end of statement' chplString[22192])
    label _end__cast[501733]
    (501737 return ret[501735])
  }
  function _cast[22229](arg t[22226]:chpl_anyreal[193](?), arg x[22232]:c_string[19]) : _unknown[51] throws "inline"
  {
    unknown ret[501746] "RVV" "temp"
    unknown chplString[22236] "dead at end of block" "insert auto destroy" "split inited"
    unknown type_tmp[540167] "maybe param" "maybe type" "temp"
    (540176 'move' type_tmp[540167](540175 call string[26]))
    (540169 'init var split decl' chplString[22236] type_tmp[540167])
    (22239 'end of statement')
    Try!
    {
      {
        unknown call_tmp[595480] "maybe param" "maybe type" "temp"
        (595483 'move' call_tmp[595480](22245 call createStringWithNewBuffer x[22232]))
        (540178 'init var split init' chplString[22236] call_tmp[595480] type_tmp[540167])
        (472859 'end of statement' chplString[22236])
      }
    }
    unknown call_tmp[595487] "expr temp" "maybe param" "maybe type" "temp"
    (595490 'move' call_tmp[595487](22258 call(22254 call (partial) strip _mt[243] chplString[22236])))
    unknown call_tmp[595492] "expr temp" "maybe param" "maybe type" "temp"
    (595495 'move' call_tmp[595492](22260 call _cast t[22226] call_tmp[595487]))
    (501751 'move' ret[501746](501750 'deref' call_tmp[595492]))
    gotoReturn _end__cast[501744] _end__cast[501744]
    (472861 'end of statement' chplString[22236])
    label _end__cast[501744]
    (501748 return ret[501746])
  }
  function _cast[22273](arg t[22270]:chpl_anyimag[190](?), arg x[22276]:c_string[19]) : _unknown[51] throws "inline"
  {
    unknown ret[501757] "RVV" "temp"
    unknown chplString[22280] "dead at end of block" "insert auto destroy" "split inited"
    unknown type_tmp[540181] "maybe param" "maybe type" "temp"
    (540190 'move' type_tmp[540181](540189 call string[26]))
    (540183 'init var split decl' chplString[22280] type_tmp[540181])
    (22283 'end of statement')
    Try!
    {
      {
        unknown call_tmp[595497] "maybe param" "maybe type" "temp"
        (595500 'move' call_tmp[595497](22289 call createStringWithNewBuffer x[22276]))
        (540192 'init var split init' chplString[22280] call_tmp[595497] type_tmp[540181])
        (472863 'end of statement' chplString[22280])
      }
    }
    unknown call_tmp[595504] "expr temp" "maybe param" "maybe type" "temp"
    (595507 'move' call_tmp[595504](22302 call(22298 call (partial) strip _mt[243] chplString[22280])))
    unknown call_tmp[595509] "expr temp" "maybe param" "maybe type" "temp"
    (595512 'move' call_tmp[595509](22304 call _cast t[22270] call_tmp[595504]))
    (501762 'move' ret[501757](501761 'deref' call_tmp[595509]))
    gotoReturn _end__cast[501755] _end__cast[501755]
    (472865 'end of statement' chplString[22280])
    label _end__cast[501755]
    (501759 return ret[501757])
  }
  function _cast[22317](arg t[22314]:chpl_anycomplex[184](?), arg x[22320]:c_string[19]) : _unknown[51] throws "inline"
  {
    unknown ret[501768] "RVV" "temp"
    unknown chplString[22324] "dead at end of block" "insert auto destroy" "split inited"
    unknown type_tmp[540195] "maybe param" "maybe type" "temp"
    (540204 'move' type_tmp[540195](540203 call string[26]))
    (540197 'init var split decl' chplString[22324] type_tmp[540195])
    (22327 'end of statement')
    Try!
    {
      {
        unknown call_tmp[595514] "maybe param" "maybe type" "temp"
        (595517 'move' call_tmp[595514](22333 call createStringWithNewBuffer x[22320]))
        (540206 'init var split init' chplString[22324] call_tmp[595514] type_tmp[540195])
        (472867 'end of statement' chplString[22324])
      }
    }
    unknown call_tmp[595521] "expr temp" "maybe param" "maybe type" "temp"
    (595524 'move' call_tmp[595521](22346 call(22342 call (partial) strip _mt[243] chplString[22324])))
    unknown call_tmp[595526] "expr temp" "maybe param" "maybe type" "temp"
    (595529 'move' call_tmp[595526](22348 call _cast t[22314] call_tmp[595521]))
    (501773 'move' ret[501768](501772 'deref' call_tmp[595526]))
    gotoReturn _end__cast[501766] _end__cast[501766]
    (472869 'end of statement' chplString[22324])
    label _end__cast[501766]
    (501770 return ret[501768])
  }
  function c_string[19].size[22358](arg _mt[22363]:_MT[238], arg this[22360]:c_string[19] :
  c_string[19]) : _unknown[51] "inline" "method" "no parens"
  {
    unknown ret[501779] "RVV" "temp"
    unknown call_tmp[595531] "expr temp" "maybe param" "maybe type" "temp"
    (595534 'move' call_tmp[595531](22384 'string_length_bytes' this[22360]))
    (501784 'move' ret[501779](501783 'deref' call_tmp[595531]))
    (501781 return ret[501779])
  }
  function c_string[19].length[22393](arg _mt[22398]:_MT[238], arg this[22395]:c_string[19] :
  c_string[19]) : _unknown[51] "inline" "method" "no parens"
  {
    unknown ret[501788] "RVV" "temp"
    unknown call_tmp[595536] "expr temp" "maybe param" "maybe type" "temp"
    (595539 'move' call_tmp[595536](22435 call + "'c_string.length' is deprecated - " "please use 'c_string.size' instead"))
    (22438 call compilerWarning call_tmp[595536])
    (472872 'end of statement')
    unknown call_tmp[595543] "expr temp" "maybe param" "maybe type" "temp"
    (595546 'move' call_tmp[595543](22442 call size _mt[243] this[22395]))
    (501793 'move' ret[501788](501792 'deref' call_tmp[595543]))
    (501790 return ret[501788])
  }
  function c_string[19].substring[22456](arg _mt[22461]:_MT[238], arg this[22458]:c_string[19] :
  c_string[19], arg i[22453]:int(64)[13]) : _unknown[51] "inline" "method"
  {
    unknown ret[501797] "RVV" "temp"
    unknown call_tmp[595548] "expr temp" "maybe param" "maybe type" "temp"
    (595551 'move' call_tmp[595548](22483 'string_index' this[22458] i[22453]))
    (501802 'move' ret[501797](501801 'deref' call_tmp[595548]))
    (501799 return ret[501797])
  }
  function c_string[19].substring[22499](arg _mt[22504]:_MT[238], arg this[22501]:c_string[19] :
  c_string[19], arg r[22496]:range[64316](?)) : _unknown[51] "inline" "method"
  {
    unknown ret[501806] "RVV" "temp"
    unknown call_tmp[595555] "expr temp" "maybe param" "maybe type" "temp"
    (595558 'move' call_tmp[595555](22509 call size _mt[243] this[22501]))
    unknown call_tmp[595560] "expr temp" "maybe param" "maybe type" "temp"
    (595563 'move' call_tmp[595560](22512 call chpl_build_bounded_range 1 call_tmp[595555]))
    unknown call_tmp[595565] "maybe param" "maybe type" "temp"
    (595568 'move' call_tmp[595565](22515 call r[22496] call_tmp[595560]))
    unknown r2[22516] "dead at end of block" "insert auto destroy"
    (540209 'init var' r2[22516] call_tmp[595565])
    (22519 'end of statement')
    unknown call_tmp[595572] "maybe param" "maybe type" "temp"
    (595575 'move' call_tmp[595572](22525 call alignedLow _mt[243] r2[22516]))
    unknown lo[22528] "dead at end of block" "insert auto destroy"
    (540211 'init var' lo[22528] call_tmp[595572] int(64)[13])
    unknown call_tmp[595579] "maybe param" "maybe type" "temp"
    (595582 'move' call_tmp[595579](22535 call alignedHigh _mt[243] r2[22516]))
    unknown hi[22538] "dead at end of block" "insert auto destroy"
    (540213 'init var' hi[22538] call_tmp[595579] int(64)[13])
    (22541 'end of statement' r2[22516] r2[22516])
    unknown call_tmp[595586] "expr temp" "maybe param" "maybe type" "temp"
    (595589 'move' call_tmp[595586](22566 call stride _mt[243] r2[22516]))
    unknown call_tmp[595591] "expr temp" "maybe param" "maybe type" "temp"
    (595594 'move' call_tmp[595591](22569 'string_select' this[22501] lo[22528] hi[22538] call_tmp[595586]))
    (501811 'move' ret[501806](501810 'deref' call_tmp[595591]))
    gotoReturn _end_substring[501804] _end_substring[501804]
    (472877 'end of statement' lo[22528] hi[22538] r2[22516])
    label _end_substring[501804]
    (501808 return ret[501806])
  }
  function c_string[19].length[22577](arg _mt[22582]:_MT[238], param arg this[22579]:c_string[19] :
  c_string[19]) param : _unknown[51] "inline" "last resort" "method" "no parens"
  {
    unknown ret[501817] "RVV" "param" "temp"
    unknown call_tmp[595596] "expr temp" "maybe param" "maybe type" "temp"
    (595599 'move' call_tmp[595596](22587 call + "'c_string.length' is deprecated - " "please use 'c_string.size' instead"))
    (22590 call compilerWarning call_tmp[595596])
    (472881 'end of statement')
    unknown call_tmp[595601] "expr temp" "maybe param" "maybe type" "temp"
    (595604 'move' call_tmp[595601](22596 'string_length_bytes' this[22579]))
    (501822 'move' ret[501817](501821 'deref' call_tmp[595601]))
    (501819 return ret[501817])
  }
  function c_string[19].size[22604](arg _mt[22609]:_MT[238], param arg this[22606]:c_string[19] :
  c_string[19]) param : _unknown[51] "inline" "last resort" "method" "no parens"
  {
    unknown ret[501826] "RVV" "param" "temp"
    unknown call_tmp[595606] "expr temp" "maybe param" "maybe type" "temp"
    (595609 'move' call_tmp[595606](22614 'string_length_bytes' this[22606]))
    (501831 'move' ret[501826](501830 'deref' call_tmp[595606]))
    (501828 return ret[501826])
  }
  function _string_contains[22626](param arg a[22623]:c_string[19], param arg b[22629]:c_string[19]) param : _unknown[51] "inline" "last resort"
  {
    unknown ret[501835] "RVV" "param" "temp"
    unknown call_tmp[595611] "expr temp" "maybe param" "maybe type" "temp"
    (595614 'move' call_tmp[595611](22652 'string_contains' a[22623] b[22629]))
    (501840 'move' ret[501835](501839 'deref' call_tmp[595611]))
    (501837 return ret[501835])
  }
  function c_string[19].indexOf[22665](arg _mt[22670]:_MT[238], arg this[22667]:c_string[19] :
  c_string[19], arg substring[22662]:c_string[19]) : _unknown[51] "inline" "method"
  {
    unknown ret[501844] "RVV" "temp"
    unknown call_tmp[595616] "expr temp" "maybe param" "maybe type" "temp"
    (595619 'move' call_tmp[595616](22677 call string_index_of this[22667] substring[22662]))
    (501850 'move' ret[501844](501849 'coerce' call_tmp[595616] int(64)[13]))
    (501846 return ret[501844])
  }
  { scopeless type
    int(64)[13]
  }
  function string_index_of[22690](arg haystack[22687]:c_string[19], arg needle[22693]:c_string[19]) : _unknown[51] "extern" "local args" "no fn body" "fn synchronization free" "no return value for void"
  {
    unknown ret[501854] "RVV" "temp"
    (501856 return ret[501854])
  }
  { scopeless type
    int(64)[13]
  }
  function chpl_free_c_string[22706](ref arg cs[22703]:c_string[19]) : _unknown[51] "inline" "no return value for void"
  {
    function chpl_rt_free_c_string[22714](ref arg cs[22711]:c_string[19]) : void[4] "extern" "insert line file info" "local args" "no fn body" "fn synchronization free" "no return value for void"
    {
      (501858 return _void[55])
    }
    unknown call_tmp[595621] "expr temp" "maybe param" "maybe type" "temp"
    (595624 'move' call_tmp[595621](368975 call c_nil[204963]))
    unknown call_tmp[595626] "expr temp" "maybe param" "maybe type" "temp"
    (595629 'move' call_tmp[595626](22722 call _cast c_string[19] call_tmp[595621]))
    unknown call_tmp[595631] "expr temp" "maybe param" "maybe type" "temp"
    (595634 'move' call_tmp[595631](22724 call != cs[22703] call_tmp[595626]))
    unknown call_tmp[595636] "expr temp" "maybe param" "maybe type" "temp"
    (595639 'move' call_tmp[595636](22731 call _cond_test call_tmp[595631]))
    if call_tmp[595636]
    {
      (22729 call chpl_rt_free_c_string cs[22703])
    }
    (501860 return _void[55])
  }
  function c_string[19].writeThis[22743](arg _mt[22748]:_MT[238], arg this[22745]:c_string[19] :
  c_string[19], arg x[22741]:_any[178](?)) : _unknown[51] throws "method" "no return value for void"
  {
    (22771 call compilerError "Cannot write a c_string, cast to a string first.")
    (501862 return _void[55])
  }
  function c_string[19].readThis[22781](arg _mt[22786]:_MT[238], arg this[22783]:c_string[19] :
  c_string[19], arg x[22779]:_any[178](?)) : _unknown[51] throws "method" "no return value for void"
  {
    (22807 call compilerError "Cannot read a c_string, use string.")
    (501864 return _void[55])
  }
  (355056 'used modules list'(21685 'use' ChapelStandard[20264])(21687 'use' SysCTypes[20940]))
}