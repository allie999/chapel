AST dump for PCGRandomLib after pass readExternC.
Module use list: 

{
  (353068 'use' ChapelStandard)
  { scopeless
    unknown PCG_DEFAULT_MULTIPLIER_8[311773] "param" "private" 141
    (311776 'end of statement')
  }
  { scopeless
    unknown PCG_DEFAULT_MULTIPLIER_16[311781] "param" "private" 12829
    (311784 'end of statement')
  }
  { scopeless
    unknown PCG_DEFAULT_MULTIPLIER_32[311788] "param" "private" 747796405
    (311791 'end of statement')
  }
  { scopeless
    unknown PCG_DEFAULT_MULTIPLIER_64[311795] "param" "private" 6364136223846793005
    (311798 'end of statement')
  }
  function pcg_setseq_8_step_r[311808](ref arg state[311805] :
  (311804 call uint[115] 8), arg inc[311814] :
  (311813 call uint[115] 8)) : _unknown[51] "inline" "private"
  {
    (311825 call = state(311823 call +(311820 call * state PCG_DEFAULT_MULTIPLIER_8) inc))
  }
  function pcg_setseq_16_step_r[311840](ref arg state[311837] :
  (311836 call uint[115] 16), arg inc[311846] :
  (311845 call uint[115] 16)) : _unknown[51] "inline" "private"
  {
    (311857 call = state(311855 call +(311852 call * state PCG_DEFAULT_MULTIPLIER_16) inc))
  }
  function pcg_setseq_32_step_r[311872](ref arg state[311869] :
  (311868 call uint[115] 32), arg inc[311878] :
  (311877 call uint[115] 32)) : _unknown[51] "inline" "private"
  {
    (311889 call = state(311887 call +(311884 call * state PCG_DEFAULT_MULTIPLIER_32) inc))
  }
  function pcg_setseq_64_step_r[311904](ref arg state[311901] :
  (311900 call uint[115] 64), arg inc[311910] :
  (311909 call uint[115] 64)) : _unknown[51] "inline" "private"
  {
    (311921 call = state(311919 call +(311916 call * state PCG_DEFAULT_MULTIPLIER_64) inc))
  }
  function pcg_rotr_32[311936](arg value[311933] :
  (311932 call uint[115] 32), arg rot[311942] :
  (311941 call uint[115] 32)) : _unknown[51] "inline" "private"
  {
    function chpl_bitops_rotr_32[311958](arg x[311955] :
    (311954 call uint[115] 32), arg n[311964] :
    (311963 call uint[115] 32)) : _unknown[51] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      (311970 call uint[115] 32)
    }
    { scopeless
      unknown ret[311980](311979 call chpl_bitops_rotr_32 value rot)
      (311983 'end of statement')
    }
    (311985 return ret)
  }
  { scopeless type
    (311948 call uint[115] 32)
  }
  function pcg_output_xsh_rr_64_32[311999](arg state[311996] :
  (311995 call uint[115] 64)) : _unknown[51] "inline" "private"
  {
    { scopeless
      const xorshifted[312025] "const"(312023 call _cast(312022 call uint[115] 32)(312017 call >>(312014 call ^(312011 call >> state 18) state) 27))(312008 call uint[115] 32)
      (312028 'end of statement')
    }
    { scopeless
      const rot[312044] "const"(312042 call _cast(312041 call uint[115] 32)(312036 call >> state 59))(312033 call uint[115] 32)
      (312047 'end of statement')
    }
    { scopeless
      const ret[312053] "const"(312052 call pcg_rotr_32 xorshifted rot)
      (312056 'end of statement')
    }
    (312058 return ret)
  }
  { scopeless type
    (312004 call uint[115] 32)
  }
  function pcg_output_rxs_m_xs_8_8[312072](arg state[312069] :
  (312068 call uint[115] 8)) : _unknown[51] "inline" "private"
  {
    { scopeless
      const word[312100] "const"(312098 call *(312093 call ^(312090 call >> state(312088 call +(312085 call >> state 6) 2)) state) 217)(312081 call uint[115] 8)
      (312103 'end of statement')
    }
    (312112 return(312110 call ^(312107 call >> word 6) word))
  }
  { scopeless type
    (312077 call uint[115] 8)
  }
  function pcg_output_rxs_m_xs_16_16[312126](arg state[312123] :
  (312122 call uint[115] 16)) : _unknown[51] "inline" "private"
  {
    { scopeless
      const word[312154] "const"(312152 call *(312147 call ^(312144 call >> state(312142 call +(312139 call >> state 13) 3)) state) 62169)(312135 call uint[115] 16)
      (312157 'end of statement')
    }
    (312166 return(312164 call ^(312161 call >> word 11) word))
  }
  { scopeless type
    (312131 call uint[115] 16)
  }
  function pcg_output_rxs_m_xs_32_32[312180](arg state[312177] :
  (312176 call uint[115] 32)) : _unknown[51] "inline" "private"
  {
    { scopeless
      const word[312208] "const"(312206 call *(312201 call ^(312198 call >> state(312196 call +(312193 call >> state 28) 4)) state) 277803737)(312189 call uint[115] 32)
      (312211 'end of statement')
    }
    (312220 return(312218 call ^(312215 call >> word 22) word))
  }
  { scopeless type
    (312185 call uint[115] 32)
  }
  function pcg_output_rxs_m_xs_64_64[312234](arg state[312231] :
  (312230 call uint[115] 64)) : _unknown[51] "inline" "private"
  {
    { scopeless
      const word[312262] "const"(312260 call *(312255 call ^(312252 call >> state(312250 call +(312247 call >> state 59) 5)) state) 12605985483714917081)(312243 call uint[115] 64)
      (312265 'end of statement')
    }
    (312274 return(312272 call ^(312269 call >> word 43) word))
  }
  { scopeless type
    (312239 call uint[115] 64)
  }
  type pcg_setseq_64_xsh_rr_32_rng[312759] unknown state[312284](312283 call uint[115] 64) function pcg_setseq_64_xsh_rr_32_rng[312759].srandom[312297](arg _mt[312763]:_MT[238], arg this[312761]:pcg_setseq_64_xsh_rr_32_rng[312759], arg seed[312294] :
  (312293 call uint[115] 64), arg inc[312303] :
  (312302 call uint[115] 64)) : _unknown[51] "inline" "method" "primary method"
  {
    (312311 call = state(312309 call + inc seed))
    (312319 call pcg_setseq_64_step_r state inc)
  } function pcg_setseq_64_xsh_rr_32_rng[312759].random[312332](arg _mt[312767]:_MT[238], arg this[312765]:pcg_setseq_64_xsh_rr_32_rng[312759], arg inc[312329] :
  (312328 call uint[115] 64)) : _unknown[51] "inline" "method" "primary method"
  {
    { scopeless
      const oldstate[312343] "const" state(312341 call uint[115] 64)
      (312346 'end of statement')
    }
    (312352 call pcg_setseq_64_step_r state inc)
    (312358 return(312357 call pcg_output_xsh_rr_64_32 oldstate))
  }
  { scopeless type
    (312337 call uint[115] 32)
  } function pcg_setseq_64_xsh_rr_32_rng[312759].bounded_random[312372](arg _mt[312771]:_MT[238], arg this[312769]:pcg_setseq_64_xsh_rr_32_rng[312759], arg inc[312369] :
  (312368 call uint[115] 64), arg bound[312378] :
  (312377 call uint[115] 32)) : _unknown[51] "inline" "method" "primary method"
  {
    { scopeless
      const negbound[312400] "const"(312398 call _cast(312397 call uint[115] 32)(312392 call -(312390 call _cast(312389 call int[13] 32) bound)))(312384 call uint[115] 32)
      (312403 'end of statement')
    }
    { scopeless
      const threshold[312413] "const"(312411 call % negbound bound)(312408 call uint[115] 32)
      (312416 'end of statement')
    }
    { scopeless
      unknown tmprng[312418] pcg_setseq_64_xsh_rr_32_rng
      (312421 'end of statement')
    }
    { scopeless
      unknown tmpinc[312426](312425 call uint[115] 64)
      (312429 'end of statement')
    }
    { scopeless
      unknown r[312434](312433 call uint[115] 32)
      (312437 'end of statement')
    }
    {
      unknown tmp[312463] "temp"
      (312481 'move' tmp[312463](312479 call _cond_test 1))
      WhileDo[312468]
      {
        {
          (312444 call = r(312443 call random inc))
          if(312458 call _cond_test(312450 call >= r threshold))
          {
            { scopeless
              (312456 return(312454 call % r bound))
            }
          }
        }
        label _continueLabel[312466]
        (312474 'move' tmp[312463](312472 call _cond_test 1))
        tmp[312463]
      }
      label _breakLabel[312467]
    }
    (312485 return 0)
  } function pcg_setseq_64_xsh_rr_32_rng[312759].bounded_random_vary_inc[312498](arg _mt[312775]:_MT[238], arg this[312773]:pcg_setseq_64_xsh_rr_32_rng[312759], arg inc[312495] :
  (312494 call uint[115] 64), arg bound[312504] :
  (312503 call uint[115] 32), arg seed[312511] :
  (312510 call uint[115] 64), arg skip[312518] :
  (312517 call uint[115] 64), arg next_inc[312525] :
  (312524 call uint[115] 64), arg inc_increment[312532] :
  (312531 call uint[115] 64)) : _unknown[51] "inline" "method" "primary method"
  {
    { scopeless
      const negbound[312554] "const"(312552 call _cast(312551 call uint[115] 32)(312546 call -(312544 call _cast(312543 call int[13] 32) bound)))(312538 call uint[115] 32)
      (312557 'end of statement')
    }
    { scopeless
      const threshold[312567] "const"(312565 call % negbound bound)(312562 call uint[115] 32)
      (312570 'end of statement')
    }
    { scopeless
      unknown r[312575](312574 call uint[115] 32)
      (312578 'end of statement')
    }
    (312584 call = r(312583 call random inc))
    if(312597 call _cond_test(312589 call >= r threshold))
    {
      { scopeless
        (312595 return(312593 call % r bound))
      }
    }
    { scopeless
      unknown newinc[312606](312605 call uint[115] 64)
      (312609 'end of statement')
    }
    {
      unknown _indexOfInterest[312683] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[312684] "expr temp" "temp"
      (312693 'move' _iterator[312684](312691 call _getIterator(312615 call chpl_by(312612 call chpl_build_low_bounded_range next_inc) inc_increment)))
      Defer
      {
        {
          (312713 call _freeIterator _iterator[312684])
        }
      }
      { scopeless type
        (312702 'move' _indexOfInterest[312683](312699 call iteratorIndex _iterator[312684]))
      }
      ForLoop[312685]
      {
        unknown newinc[312706] "index var" "insert auto destroy"
        (312708 'move' newinc[312706] _indexOfInterest[312683])
        {
          { scopeless
            unknown tmprng[312618] pcg_setseq_64_xsh_rr_32_rng
            (312621 'end of statement')
          }
          { scopeless
            unknown tmpinc[312627](312626 call uint[115] 64)
            (312630 'end of statement')
          }
          (312636 call = tmpinc(312635 call pcg_getvalid_inc newinc))
          (312646 call(312640 call . tmprng c"srandom") seed tmpinc)
          (312655 call(312649 call . tmprng c"advance") tmpinc skip)
          (312665 call = r(312664 call(312659 call . tmprng c"random") tmpinc))
          if(312678 call _cond_test(312670 call >= r threshold))
          {
            { scopeless
              (312676 return(312674 call % r bound))
            }
          }
        }
        label _continueLabel[312688]
        _indexOfInterest[312683]
        _iterator[312684]
      }
      label _breakLabel[312689]
    }
    (312721 return 0)
  } function pcg_setseq_64_xsh_rr_32_rng[312759].advance[312734](arg _mt[312779]:_MT[238], arg this[312777]:pcg_setseq_64_xsh_rr_32_rng[312759], arg inc[312731] :
  (312730 call uint[115] 64), arg delta[312740] :
  (312739 call uint[115] 64)) : _unknown[51] "inline" "method" "primary method"
  {
    (312752 call = state(312751 call pcg_advance_lcg 64 state delta PCG_DEFAULT_MULTIPLIER_64 inc))
  }
  type pcg_setseq_64_rxs_m_xs_64_rng[312900] unknown state[312787](312786 call uint[115] 64) function pcg_setseq_64_rxs_m_xs_64_rng[312900].srandom[312800](arg _mt[312904]:_MT[238], arg this[312902]:pcg_setseq_64_rxs_m_xs_64_rng[312900], arg seed[312797] :
  (312796 call uint[115] 64), arg inc[312806] :
  (312805 call uint[115] 64)) : _unknown[51] "inline" "method" "primary method"
  {
    (312814 call = state(312812 call + inc seed))
    (312822 call pcg_setseq_64_step_r state inc)
  } function pcg_setseq_64_rxs_m_xs_64_rng[312900].random[312835](arg _mt[312908]:_MT[238], arg this[312906]:pcg_setseq_64_rxs_m_xs_64_rng[312900], arg inc[312832] :
  (312831 call uint[115] 64)) : _unknown[51] "inline" "method" "primary method"
  {
    { scopeless
      const oldstate[312846] "const" state(312844 call uint[115] 64)
      (312849 'end of statement')
    }
    (312855 call pcg_setseq_64_step_r state inc)
    (312861 return(312860 call pcg_output_rxs_m_xs_64_64 oldstate))
  }
  { scopeless type
    (312840 call uint[115] 64)
  } function pcg_setseq_64_rxs_m_xs_64_rng[312900].advance[312875](arg _mt[312912]:_MT[238], arg this[312910]:pcg_setseq_64_rxs_m_xs_64_rng[312900], arg inc[312872] :
  (312871 call uint[115] 64), arg delta[312881] :
  (312880 call uint[115] 64)) : _unknown[51] "inline" "method" "primary method"
  {
    (312893 call = state(312892 call pcg_advance_lcg 64 state delta PCG_DEFAULT_MULTIPLIER_64 inc))
  }
  type pcg_setseq_32_rxs_m_xs_32_rng[313033] unknown state[312920](312919 call uint[115] 32) function pcg_setseq_32_rxs_m_xs_32_rng[313033].srandom[312933](arg _mt[313037]:_MT[238], arg this[313035]:pcg_setseq_32_rxs_m_xs_32_rng[313033], arg seed[312930] :
  (312929 call uint[115] 32), arg inc[312939] :
  (312938 call uint[115] 32)) : _unknown[51] "inline" "method" "primary method"
  {
    (312947 call = state(312945 call + inc seed))
    (312955 call pcg_setseq_32_step_r state inc)
  } function pcg_setseq_32_rxs_m_xs_32_rng[313033].random[312968](arg _mt[313041]:_MT[238], arg this[313039]:pcg_setseq_32_rxs_m_xs_32_rng[313033], arg inc[312965] :
  (312964 call uint[115] 32)) : _unknown[51] "inline" "method" "primary method"
  {
    { scopeless
      const oldstate[312979] "const" state(312977 call uint[115] 32)
      (312982 'end of statement')
    }
    (312988 call pcg_setseq_32_step_r state inc)
    (312994 return(312993 call pcg_output_rxs_m_xs_32_32 oldstate))
  }
  { scopeless type
    (312973 call uint[115] 32)
  } function pcg_setseq_32_rxs_m_xs_32_rng[313033].advance[313008](arg _mt[313045]:_MT[238], arg this[313043]:pcg_setseq_32_rxs_m_xs_32_rng[313033], arg inc[313005] :
  (313004 call uint[115] 32), arg delta[313014] :
  (313013 call uint[115] 32)) : _unknown[51] "inline" "method" "primary method"
  {
    (313026 call = state(313025 call pcg_advance_lcg 32 state delta PCG_DEFAULT_MULTIPLIER_32 inc))
  }
  type pcg_setseq_16_rxs_m_xs_16_rng[313166] unknown state[313053](313052 call uint[115] 16) function pcg_setseq_16_rxs_m_xs_16_rng[313166].srandom[313066](arg _mt[313170]:_MT[238], arg this[313168]:pcg_setseq_16_rxs_m_xs_16_rng[313166], arg seed[313063] :
  (313062 call uint[115] 16), arg inc[313072] :
  (313071 call uint[115] 16)) : _unknown[51] "inline" "method" "primary method"
  {
    (313080 call = state(313078 call + inc seed))
    (313088 call pcg_setseq_16_step_r state inc)
  } function pcg_setseq_16_rxs_m_xs_16_rng[313166].random[313101](arg _mt[313174]:_MT[238], arg this[313172]:pcg_setseq_16_rxs_m_xs_16_rng[313166], arg inc[313098] :
  (313097 call uint[115] 16)) : _unknown[51] "inline" "method" "primary method"
  {
    { scopeless
      const oldstate[313112] "const" state(313110 call uint[115] 16)
      (313115 'end of statement')
    }
    (313121 call pcg_setseq_16_step_r state inc)
    (313127 return(313126 call pcg_output_rxs_m_xs_16_16 oldstate))
  }
  { scopeless type
    (313106 call uint[115] 16)
  } function pcg_setseq_16_rxs_m_xs_16_rng[313166].advance[313141](arg _mt[313178]:_MT[238], arg this[313176]:pcg_setseq_16_rxs_m_xs_16_rng[313166], arg inc[313138] :
  (313137 call uint[115] 16), arg delta[313147] :
  (313146 call uint[115] 16)) : _unknown[51] "inline" "method" "primary method"
  {
    (313159 call = state(313158 call pcg_advance_lcg 16 state delta PCG_DEFAULT_MULTIPLIER_16 inc))
  }
  type pcg_setseq_8_rxs_m_xs_8_rng[313299] unknown state[313186](313185 call uint[115] 8) function pcg_setseq_8_rxs_m_xs_8_rng[313299].srandom[313199](arg _mt[313303]:_MT[238], arg this[313301]:pcg_setseq_8_rxs_m_xs_8_rng[313299], arg seed[313196] :
  (313195 call uint[115] 8), arg inc[313205] :
  (313204 call uint[115] 8)) : _unknown[51] "inline" "method" "primary method"
  {
    (313213 call = state(313211 call + inc seed))
    (313221 call pcg_setseq_8_step_r state inc)
  } function pcg_setseq_8_rxs_m_xs_8_rng[313299].random[313234](arg _mt[313307]:_MT[238], arg this[313305]:pcg_setseq_8_rxs_m_xs_8_rng[313299], arg inc[313231] :
  (313230 call uint[115] 8)) : _unknown[51] "inline" "method" "primary method"
  {
    { scopeless
      const oldstate[313245] "const" state(313243 call uint[115] 8)
      (313248 'end of statement')
    }
    (313254 call pcg_setseq_8_step_r state inc)
    (313260 return(313259 call pcg_output_rxs_m_xs_8_8 oldstate))
  }
  { scopeless type
    (313239 call uint[115] 8)
  } function pcg_setseq_8_rxs_m_xs_8_rng[313299].advance[313274](arg _mt[313311]:_MT[238], arg this[313309]:pcg_setseq_8_rxs_m_xs_8_rng[313299], arg inc[313271] :
  (313270 call uint[115] 8), arg delta[313280] :
  (313279 call uint[115] 8)) : _unknown[51] "inline" "method" "primary method"
  {
    (313292 call = state(313291 call pcg_advance_lcg 8 state delta PCG_DEFAULT_MULTIPLIER_8 inc))
  }
  function uint_with_bits[313318](param arg nbits[313316]:_any[178](?)) type : _unknown[51] "private"
  {
    if(313368 call _cond_test(313322 call <= nbits 8))
    {
      { scopeless
        (313328 return(313327 call uint[115] 8))
      }
    }
    {
      { scopeless
        if(313362 call _cond_test(313332 call <= nbits 16))
        {
          { scopeless
            (313338 return(313337 call uint[115] 16))
          }
        }
        {
          { scopeless
            if(313356 call _cond_test(313342 call <= nbits 32))
            {
              { scopeless
                (313348 return(313347 call uint[115] 32))
              }
            }
            {
              { scopeless
                (313354 return(313353 call uint[115] 64))
              }
            }
          }
        }
      }
    }
  }
  function normalize[313383](arg nbits[313380] :
  int[13], arg x[313386] :
  uint[115]) : _unknown[51] "inline" "private"
  {
    { scopeless
      unknown oldx[313390] x
      (313393 'end of statement')
    }
    { scopeless
      unknown shiftamt[313399](313397 call - 64 nbits)
      (313402 'end of statement')
    }
    (313405 call <<= oldx shiftamt)
    (313412 return(313410 call >> oldx shiftamt))
  }
  function pcg_output_rxs_m_xs_N_mine[313422](arg nbits[313419] :
  int[13], arg state_in[313424]:_any[178](?)) : _unknown[51] "private"
  {
    if(313433 call _cond_test(313428 call < nbits 8))
    {
      { scopeless
        (313431 return state_in)
      }
    }
    if(313455 call _cond_test(313441 call == nbits 8))
    {
      { scopeless
        (313453 return(313452 call pcg_output_rxs_m_xs_8_8(313449 call _cast(313448 call uint[115] 8) state_in)))
      }
    }
    if(313476 call _cond_test(313462 call == nbits 16))
    {
      { scopeless
        (313474 return(313473 call pcg_output_rxs_m_xs_16_16(313470 call _cast(313469 call uint[115] 16) state_in)))
      }
    }
    if(313497 call _cond_test(313483 call == nbits 32))
    {
      { scopeless
        (313495 return(313494 call pcg_output_rxs_m_xs_32_32(313491 call _cast(313490 call uint[115] 32) state_in)))
      }
    }
    if(313518 call _cond_test(313504 call == nbits 64))
    {
      { scopeless
        (313516 return(313515 call pcg_output_rxs_m_xs_64_64(313512 call _cast(313511 call uint[115] 64) state_in)))
      }
    }
    {
      { scopeless
        unknown shiftamt[313527](313525 call - nbits 4)
        (313530 'end of statement')
      }
      { scopeless
        unknown state[313536](313534 call _cast uint[115] state_in)
        (313539 'end of statement')
      }
      { scopeless
        unknown word[313557](313555 call *(313552 call ^(313549 call >> state(313547 call +(313544 call >> state shiftamt) 2)) state) 217) uint[115]
        (313560 'end of statement')
      }
      (313567 call = word(313566 call normalize nbits word))
      (313577 return(313575 call ^(313572 call >> word shiftamt) word))
    }
  }
  type pcg_setseq_N_rxs_m_xs_N_rng[314161](?) const N[313582] "const" unknown state[313587] uint[115] function pcg_setseq_N_rxs_m_xs_N_rng[314161](?).mask_state[313593](arg _mt[314165]:_MT[238], arg this[314163]:pcg_setseq_N_rxs_m_xs_N_rng[314161](?)) : _unknown[51] "inline" "method" "primary method" "no doc"
  {
    (313601 call = state(313600 call normalize N state))
  } function pcg_setseq_N_rxs_m_xs_N_rng[314161](?).srandom[313613](arg _mt[314169]:_MT[238], arg this[314167]:pcg_setseq_N_rxs_m_xs_N_rng[314161](?), arg seed[313610] :
  uint[115], arg inc[313616] :
  uint[115]) : _unknown[51] "inline" "method" "primary method"
  {
    (313624 call = state(313622 call + inc seed))
    if(313752 call _cond_test(313630 call <= N 8))
    {
      { scopeless
        unknown tmpstate[313639](313637 call _cast(313636 call uint[115] 8) state)
        (313642 'end of statement')
      }
      (313654 call pcg_setseq_8_step_r tmpstate(313652 call _cast(313651 call uint[115] 8) inc))
      (313658 call = state tmpstate)
    }
    {
      { scopeless
        if(313747 call _cond_test(313663 call <= N 16))
        {
          { scopeless
            unknown tmpstate[313672](313670 call _cast(313669 call uint[115] 16) state)
            (313675 'end of statement')
          }
          (313687 call pcg_setseq_16_step_r tmpstate(313685 call _cast(313684 call uint[115] 16) inc))
          (313691 call = state tmpstate)
        }
        {
          { scopeless
            if(313742 call _cond_test(313696 call <= N 32))
            {
              { scopeless
                unknown tmpstate[313705](313703 call _cast(313702 call uint[115] 32) state)
                (313708 'end of statement')
              }
              (313720 call pcg_setseq_32_step_r tmpstate(313718 call _cast(313717 call uint[115] 32) inc))
              (313724 call = state tmpstate)
            }
            {
              { scopeless
                if(313738 call _cond_test(313729 call <= N 64))
                {
                  (313735 call pcg_setseq_64_step_r state inc)
                }
              }
            }
          }
        }
      }
    }
    (313759 call mask_state)
  } function pcg_setseq_N_rxs_m_xs_N_rng[314161](?).random[313769](arg _mt[314173]:_MT[238], arg this[314171]:pcg_setseq_N_rxs_m_xs_N_rng[314161](?), arg inc[313766] :
  uint[115]) : _unknown[51] "inline" "method" "primary method"
  {
    if(313976 call _cond_test(313774 call <= N 8))
    {
      { scopeless
        unknown tmpstate[313783](313781 call _cast(313780 call uint[115] 8) state)
        (313786 'end of statement')
      }
      { scopeless
        unknown oldstate[313789] tmpstate
        (313792 'end of statement')
      }
      (313803 call pcg_setseq_8_step_r tmpstate(313801 call _cast(313800 call uint[115] 8) inc))
      (313807 call = state tmpstate)
      (313812 call mask_state)
      (313823 return(313822 call normalize N(313821 call pcg_output_rxs_m_xs_N_mine N oldstate)))
    }
    {
      { scopeless
        if(313971 call _cond_test(313827 call <= N 16))
        {
          { scopeless
            unknown tmpstate[313836](313834 call _cast(313833 call uint[115] 16) state)
            (313839 'end of statement')
          }
          { scopeless
            unknown oldstate[313842] tmpstate
            (313845 'end of statement')
          }
          (313856 call pcg_setseq_16_step_r tmpstate(313854 call _cast(313853 call uint[115] 16) inc))
          (313860 call = state tmpstate)
          (313865 call mask_state)
          (313876 return(313875 call normalize N(313874 call pcg_output_rxs_m_xs_N_mine N oldstate)))
        }
        {
          { scopeless
            if(313966 call _cond_test(313880 call <= N 32))
            {
              { scopeless
                unknown tmpstate[313889](313887 call _cast(313886 call uint[115] 32) state)
                (313892 'end of statement')
              }
              { scopeless
                unknown oldstate[313895] tmpstate
                (313898 'end of statement')
              }
              (313909 call pcg_setseq_32_step_r tmpstate(313907 call _cast(313906 call uint[115] 32) inc))
              (313913 call = state tmpstate)
              (313918 call mask_state)
              (313929 return(313928 call normalize N(313927 call pcg_output_rxs_m_xs_N_mine N oldstate)))
            }
            {
              { scopeless
                if(313962 call _cond_test(313933 call <= N 64))
                {
                  { scopeless
                    unknown oldstate[313936] state
                    (313939 'end of statement')
                  }
                  (313945 call pcg_setseq_64_step_r state inc)
                  (313949 call mask_state)
                  (313960 return(313959 call normalize N(313958 call pcg_output_rxs_m_xs_N_mine N oldstate)))
                }
              }
            }
          }
        }
      }
    }
    (313983 return 0)
  }
  { scopeless type
    uint[115]
  } function pcg_setseq_N_rxs_m_xs_N_rng[314161](?).advance[313994](arg _mt[314177]:_MT[238], arg this[314175]:pcg_setseq_N_rxs_m_xs_N_rng[314161](?), arg inc[313991] :
  uint[115], arg delta[313997] :
  uint[115]) : _unknown[51] "inline" "method" "primary method"
  {
    if(314152 call _cond_test(314002 call <= N 8))
    {
      (314031 call = state(314030 call pcg_advance_lcg 8(314013 call _cast(314012 call uint[115] 8) state)(314020 call _cast(314019 call uint[115] 8) delta) PCG_DEFAULT_MULTIPLIER_8(314028 call _cast(314027 call uint[115] 8) inc)))
      (314037 call mask_state)
    }
    {
      { scopeless
        if(314147 call _cond_test(314041 call <= N 16))
        {
          (314070 call = state(314069 call pcg_advance_lcg 16(314052 call _cast(314051 call uint[115] 16) state)(314059 call _cast(314058 call uint[115] 16) delta) PCG_DEFAULT_MULTIPLIER_16(314067 call _cast(314066 call uint[115] 16) inc)))
          (314076 call mask_state)
        }
        {
          { scopeless
            if(314142 call _cond_test(314080 call <= N 32))
            {
              (314109 call = state(314108 call pcg_advance_lcg 32(314091 call _cast(314090 call uint[115] 32) state)(314098 call _cast(314097 call uint[115] 32) delta) PCG_DEFAULT_MULTIPLIER_32(314106 call _cast(314105 call uint[115] 32) inc)))
              (314115 call mask_state)
            }
            {
              { scopeless
                if(314138 call _cond_test(314119 call <= N 64))
                {
                  (314130 call = state(314129 call pcg_advance_lcg 64 state delta PCG_DEFAULT_MULTIPLIER_64 inc))
                  (314136 call mask_state)
                }
              }
            }
          }
        }
      }
    }
  }
  function pcg_getvalid_inc[314189](arg initseq[314186] :
  (314185 call uint[115] 64)) : _unknown[51] "inline"
  {
    { scopeless
      (314202 return(314200 call |(314197 call << initseq 1) 1))
    }
  }
  { scopeless type
    (314194 call uint[115] 64)
  }
  function pcg_getvalid_inc[314217](param arg initseq[314214] :
  (314213 call uint[115] 64)) param : _unknown[51] "inline" "no doc"
  {
    { scopeless
      (314226 return(314224 call |(314221 call << initseq 1) 1))
    }
  }
  function pcg_advance_lcg[314235](param arg bits[314233]:_any[178](?), arg state[314241] :
  (314240 call uint_with_bits bits), in arg delta[314248] :
  (314247 call uint_with_bits bits), in arg cur_mult[314255] :
  (314254 call uint_with_bits bits), in arg cur_plus[314262] :
  (314261 call uint_with_bits bits)) : _unknown[51] "private"
  {
    { scopeless
      unknown acc_mult[314274] 1(314272 call uint_with_bits bits)
      (314277 'end of statement')
    }
    { scopeless
      unknown acc_plus[314284] 0(314282 call uint_with_bits bits)
      (314287 'end of statement')
    }
    {
      unknown tmp[314342] "temp"
      (314366 'move' tmp[314342](314361 call _cond_test(314363 call > delta 0)))
      WhileDo[314347]
      {
        {
          if(314316 call _cond_test(314297 call !=(314294 call & delta 1) 0))
          {
            (314301 call *= acc_mult cur_mult)
            (314313 call = acc_plus(314311 call +(314308 call * acc_plus cur_mult) cur_plus))
          }
          (314329 call = cur_plus(314327 call *(314324 call + cur_mult 1) cur_plus))
          (314334 call *= cur_mult cur_mult)
          (314339 call /= delta 2)
        }
        label _continueLabel[314345]
        (314356 'move' tmp[314342](314351 call _cond_test(314353 call > delta 0)))
        tmp[314342]
      }
      label _breakLabel[314346]
    }
    (314376 return(314374 call +(314371 call * acc_mult state) acc_plus))
  }
  { scopeless type
    (314268 call uint_with_bits bits)
  }
}