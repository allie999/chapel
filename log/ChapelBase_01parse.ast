AST dump for ChapelBase after pass parse.
Module use list: 

{
  { scopeless
    unknown rootLocaleInitialized[310] "locale private" "no doc" 0 bool[10]
    (313 'end of statement')
  }
  (316 'use' ChapelStandard)
  { scopeless
    (320 'use' ChapelEnv)
    (322 'use' SysCTypes)
  }
  { scopeless
    unknown enablePostfixBangChecks[324] "config" "param" 0
    (327 'end of statement')
  }
  function chpl_config_has_value[334](arg name[331] :
  c_string, arg module_name[337] :
  c_string) : _unknown[51] "extern" "local args" "no fn body"
  {
  }
  { scopeless type
    bool[10]
  }
  function chpl_config_get_value[350](arg name[347] :
  c_string, arg module_name[353] :
  c_string) : _unknown[51] "extern" "local args" "no fn body"
  {
  }
  { scopeless type
    c_string
  }
  { scopeless
    unknown defaultLowBound[361] "config" "param" 0
    (364 'end of statement')
  }
  { scopeless
    unknown CHPL_CACHE_REMOTE[367] "config" "param" 0 bool[10]
    (370 'end of statement')
  }
  { scopeless
    unknown chpl_stringMinAllocSize[372] "config" "param" 0
    (375 'end of statement')
  }
  { scopeless
    unknown warnMaximalRange[377] "config" "param" 0
    (380 'end of statement')
  }
  function _throwOpError[387](param arg op[384] :
  string[26]) : _unknown[51]
  {
    (437 call compilerError "illegal use of '" op "' on operands of type uint(64) and signed integer")
  }
  type object[22]
  type iterKind[453] def leader[447]:iterKind[453] def follower[449]:iterKind[453] def standalone[451]:iterKind[453]
  {
  }
  function =[467](ref arg a[464] :
  (463 call bool[10] ?[260]), arg b[470] :
  bool[10]) : _unknown[51] "assignop" "inline"
  {
    (495 '=' a b)
  }
  function =[510](ref arg a[507] :
  (506 call int[13] unknown w[503]), arg b[516] :
  (515 call int[13] w)) : _unknown[51] "assignop" "inline"
  {
    (523 '=' a b)
  }
  function =[538](ref arg a[535] :
  (534 call uint[115] unknown w[531]), arg b[544] :
  (543 call uint[115] w)) : _unknown[51] "assignop" "inline"
  {
    (551 '=' a b)
  }
  function =[566](ref arg a[563] :
  (562 call real[16] unknown w[559]), arg b[572] :
  (571 call real[16] w)) : _unknown[51] "assignop" "inline"
  {
    (579 '=' a b)
  }
  function =[594](ref arg a[591] :
  (590 call imag[130] unknown w[587]), arg b[600] :
  (599 call imag[130] w)) : _unknown[51] "assignop" "inline"
  {
    (607 '=' a b)
  }
  function =[622](ref arg a[619] :
  (618 call complex[140] unknown w[615]), arg b[628] :
  (627 call complex[140] w)) : _unknown[51] "assignop" "inline"
  {
    (635 '=' a b)
  }
  function =[646](ref arg a[643] :
  opaque, arg b[649] :
  opaque) : _unknown[51] "assignop" "inline"
  {
    (656 '=' a b)
  }
  function =[667](ref arg a[664] :
  enum[187](?), arg b[670] :
  enum[187](?)) : _unknown[51] "assignop" "inline"
  {
    (683 '=' a b)
  }
  where {
    (677 call ==(674 'typeof' a)(676 'typeof' b))
  }
  function =[696](ref arg a[693] :
  (692 'to borrowed class from unknown' class[232](?)), arg b[700] :
  (699 'typeof' a)) : _unknown[51] "assignop" "inline" "last resort"
  {
    (713 '=' a b)
  }
  where {
    (707 call <=(704 'typeof' b)(706 'typeof' a))
  }
  function =[727](ref arg a[724] :
  (723 'to borrowed class from unknown'(722 'to nilable class from type' class[232](?))), arg b[731] :
  (730 'typeof' a)) : _unknown[51] "assignop" "inline" "last resort"
  {
    (744 '=' a b)
  }
  where {
    (738 call <=(735 'typeof' b)(737 'typeof' a))
  }
  function =[757](ref arg a[754] :
  (753 'to unmanaged class from unknown' class[232](?)), arg b[761] :
  (760 'typeof' a)) : _unknown[51] "assignop" "inline" "last resort"
  {
    (774 '=' a b)
  }
  where {
    (768 call <=(765 'typeof' b)(767 'typeof' a))
  }
  function =[788](ref arg a[785] :
  (784 'to unmanaged class from unknown'(783 'to nilable class from type' class[232](?))), arg b[792] :
  (791 'typeof' a)) : _unknown[51] "assignop" "inline" "last resort"
  {
    (805 '=' a b)
  }
  where {
    (799 call <=(796 'typeof' b)(798 'typeof' a))
  }
  function =[817](ref arg a[814] :
  nothing[7], arg b[821] :
  unknown t[819]) : _unknown[51] "assignop" "inline"
  {
    (849 call compilerError "a nothing variable cannot be assigned")
  }
  where {
    (826 call != t nothing[7])
  }
  function =[862](ref arg a[859] :
  unknown t[857], arg b[865] :
  nothing[7]) : _unknown[51] "assignop" "inline"
  {
    (893 call compilerError "cannot assign none to a variable of non-nothing type")
  }
  where {
    (870 call != t nothing[7])
  }
  function =[905](ref arg a[902] :
  nothing[7], arg b[908] :
  nothing[7]) param : _unknown[51] "assignop" "inline"
  {
  }
  function ==[920](arg a[917] :
  _nilType, arg b[923] :
  _nilType) param : _unknown[51] "inline"
  {
    { scopeless
      (927 return 1)
    }
  }
  function ==[938](arg a[935] :
  bool[10], arg b[941] :
  bool[10]) : _unknown[51] "inline"
  {
    { scopeless
      (967 return(966 '==' a b))
    }
  }
  function ==[982](arg a[979] :
  (978 call int[13] unknown w[975]), arg b[988] :
  (987 call int[13] w)) : _unknown[51] "inline"
  {
    { scopeless
      (996 return(995 '==' a b))
    }
  }
  function ==[1011](arg a[1008] :
  (1007 call uint[115] unknown w[1004]), arg b[1017] :
  (1016 call uint[115] w)) : _unknown[51] "inline"
  {
    { scopeless
      (1025 return(1024 '==' a b))
    }
  }
  function ==[1040](arg a[1037] :
  (1036 call real[16] unknown w[1033]), arg b[1046] :
  (1045 call real[16] w)) : _unknown[51] "inline"
  {
    { scopeless
      (1054 return(1053 '==' a b))
    }
  }
  function ==[1069](arg a[1066] :
  (1065 call imag[130] unknown w[1062]), arg b[1075] :
  (1074 call imag[130] w)) : _unknown[51] "inline"
  {
    { scopeless
      (1083 return(1082 '==' a b))
    }
  }
  function ==[1098](arg a[1095] :
  (1094 call complex[140] unknown w[1091]), arg b[1104] :
  (1103 call complex[140] w)) : _unknown[51] "inline"
  {
    { scopeless
      (1133 return(1131 call &&(1117 call ==(1110 call . a c"re")(1114 call . b c"re"))(1129 call ==(1122 call . a c"im")(1126 call . b c"im"))))
    }
  }
  function ==[1146](arg a[1143] :
  (1142 'to borrowed class from unknown'(1141 'to nilable class from type' object)), arg b[1151] :
  (1150 'to borrowed class from unknown'(1149 'to nilable class from type' object))) : _unknown[51] "inline"
  {
    { scopeless
      (1177 return(1176 'ptr_eq' a b))
    }
  }
  function ==[1188](arg a[1185] :
  enum[187](?), arg b[1191] :
  enum[187](?)) : _unknown[51] "inline"
  {
    (1205 return(1204 '==' a b))
  }
  where {
    (1198 call ==(1195 'typeof' a)(1197 'typeof' b))
  }
  function ==[1217](arg a[1214] :
  enum[187](?), arg b[1220] :
  enum[187](?)) : _unknown[51] "inline" "last resort"
  {
    (1250 call compilerError "Comparisons between mixed enumerated types not supported by default")
    (1254 return 0)
  }
  where {
    (1227 call !=(1224 'typeof' a)(1226 'typeof' b))
  }
  function !=[1265](arg a[1262] :
  _nilType, arg b[1268] :
  _nilType) param : _unknown[51] "inline"
  {
    { scopeless
      (1272 return 0)
    }
  }
  function !=[1283](arg a[1280] :
  bool[10], arg b[1286] :
  bool[10]) : _unknown[51] "inline"
  {
    { scopeless
      (1310 return(1309 '!=' a b))
    }
  }
  function !=[1325](arg a[1322] :
  (1321 call int[13] unknown w[1318]), arg b[1331] :
  (1330 call int[13] w)) : _unknown[51] "inline"
  {
    { scopeless
      (1339 return(1338 '!=' a b))
    }
  }
  function !=[1354](arg a[1351] :
  (1350 call uint[115] unknown w[1347]), arg b[1360] :
  (1359 call uint[115] w)) : _unknown[51] "inline"
  {
    { scopeless
      (1368 return(1367 '!=' a b))
    }
  }
  function !=[1383](arg a[1380] :
  (1379 call real[16] unknown w[1376]), arg b[1389] :
  (1388 call real[16] w)) : _unknown[51] "inline"
  {
    { scopeless
      (1397 return(1396 '!=' a b))
    }
  }
  function !=[1412](arg a[1409] :
  (1408 call imag[130] unknown w[1405]), arg b[1418] :
  (1417 call imag[130] w)) : _unknown[51] "inline"
  {
    { scopeless
      (1426 return(1425 '!=' a b))
    }
  }
  function !=[1441](arg a[1438] :
  (1437 call complex[140] unknown w[1434]), arg b[1447] :
  (1446 call complex[140] w)) : _unknown[51] "inline"
  {
    { scopeless
      (1472 return(1470 call ||(1458 call !=(1451 call . a c"re")(1455 call . b c"re"))(1468 call !=(1461 call . a c"im")(1465 call . b c"im"))))
    }
  }
  function !=[1485](arg a[1482] :
  (1481 'to borrowed class from unknown'(1480 'to nilable class from type' object)), arg b[1490] :
  (1489 'to borrowed class from unknown'(1488 'to nilable class from type' object))) : _unknown[51] "inline"
  {
    { scopeless
      (1516 return(1515 'ptr_neq' a b))
    }
  }
  function !=[1527](arg a[1524] :
  enum[187](?), arg b[1530] :
  enum[187](?)) : _unknown[51] "inline"
  {
    (1544 return(1543 '!=' a b))
  }
  where {
    (1537 call ==(1534 'typeof' a)(1536 'typeof' b))
  }
  function !=[1556](arg a[1553] :
  enum[187](?), arg b[1559] :
  enum[187](?)) : _unknown[51] "inline" "last resort"
  {
    (1571 call compilerError "Comparisons between mixed enumerated types not supported by default")
    (1575 return 1)
  }
  where {
    (1566 call !=(1563 'typeof' a)(1565 'typeof' b))
  }
  function ==[1586](param arg a[1583] :
  bool[10], param arg b[1589] :
  bool[10]) param : _unknown[51] "inline"
  {
    { scopeless
      (1597 return(1596 '==' a b))
    }
  }
  function ==[1612](param arg a[1609] :
  (1608 call int[13] unknown w[1605]), param arg b[1618] :
  (1617 call int[13] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (1626 return(1625 '==' a b))
    }
  }
  function ==[1641](param arg a[1638] :
  (1637 call uint[115] unknown w[1634]), param arg b[1647] :
  (1646 call uint[115] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (1655 return(1654 '==' a b))
    }
  }
  function ==[1666](param arg a[1663] :
  enum[187](?), param arg b[1669] :
  enum[187](?)) param : _unknown[51] "inline"
  {
    { scopeless
      (1683 return(1682 '==' a b))
    }
  }
  where {
    (1676 call ==(1673 'typeof' a)(1675 'typeof' b))
  }
  function ==[1699](param arg a[1696] :
  (1695 call real[16] unknown w[1692]), param arg b[1705] :
  (1704 call real[16] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (1713 return(1712 '==' a b))
    }
  }
  function ==[1728](param arg a[1725] :
  (1724 call imag[130] unknown w[1721]), param arg b[1734] :
  (1733 call imag[130] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (1742 return(1741 '==' a b))
    }
  }
  function ==[1757](param arg a[1754] :
  (1753 call complex[140] unknown w[1750]), param arg b[1763] :
  (1762 call complex[140] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (1771 return(1770 '==' a b))
    }
  }
  function ==[1782](arg a[1779] :
  nothing[7], arg b[1785] :
  nothing[7]) param : _unknown[51] "inline"
  {
    { scopeless
      (1789 return 1)
    }
  }
  function !=[1800](param arg a[1797] :
  bool[10], param arg b[1803] :
  bool[10]) param : _unknown[51] "inline"
  {
    { scopeless
      (1811 return(1810 '!=' a b))
    }
  }
  function !=[1826](param arg a[1823] :
  (1822 call int[13] unknown w[1819]), param arg b[1832] :
  (1831 call int[13] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (1840 return(1839 '!=' a b))
    }
  }
  function !=[1855](param arg a[1852] :
  (1851 call uint[115] unknown w[1848]), param arg b[1861] :
  (1860 call uint[115] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (1869 return(1868 '!=' a b))
    }
  }
  function !=[1880](param arg a[1877] :
  enum[187](?), param arg b[1883] :
  enum[187](?)) param : _unknown[51] "inline"
  {
    { scopeless
      (1903 return(1902 '!='(1897 call chpl__enumToOrder a)(1901 call chpl__enumToOrder b)))
    }
  }
  where {
    (1890 call ==(1887 'typeof' a)(1889 'typeof' b))
  }
  function !=[1919](param arg a[1916] :
  (1915 call real[16] unknown w[1912]), param arg b[1925] :
  (1924 call real[16] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (1933 return(1932 '!=' a b))
    }
  }
  function !=[1948](param arg a[1945] :
  (1944 call imag[130] unknown w[1941]), param arg b[1954] :
  (1953 call imag[130] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (1962 return(1961 '!=' a b))
    }
  }
  function !=[1977](param arg a[1974] :
  (1973 call complex[140] unknown w[1970]), param arg b[1983] :
  (1982 call complex[140] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (1991 return(1990 '!=' a b))
    }
  }
  function !=[2002](arg a[1999] :
  nothing[7], arg b[2005] :
  nothing[7]) param : _unknown[51] "inline"
  {
    { scopeless
      (2009 return 0)
    }
  }
  function <=[2024](arg a[2021] :
  (2020 call int[13] unknown w[2017]), arg b[2030] :
  (2029 call int[13] w)) : _unknown[51] "inline"
  {
    { scopeless
      (2054 return(2053 '<=' a b))
    }
  }
  function <=[2069](arg a[2066] :
  (2065 call uint[115] unknown w[2062]), arg b[2075] :
  (2074 call uint[115] w)) : _unknown[51] "inline"
  {
    { scopeless
      (2083 return(2082 '<=' a b))
    }
  }
  function <=[2098](arg a[2095] :
  (2094 call real[16] unknown w[2091]), arg b[2104] :
  (2103 call real[16] w)) : _unknown[51] "inline"
  {
    { scopeless
      (2112 return(2111 '<=' a b))
    }
  }
  function <=[2123](arg a[2120] :
  enum[187](?), arg b[2126] :
  enum[187](?)) : _unknown[51]
  {
    (2146 return(2145 '<='(2140 call chpl__enumToOrder a)(2144 call chpl__enumToOrder b)))
  }
  where {
    (2133 call ==(2130 'typeof' a)(2132 'typeof' b))
  }
  function <=[2158](arg a[2155] :
  enum[187](?), arg b[2161] :
  enum[187](?)) : _unknown[51] "inline" "last resort"
  {
    (2173 call compilerError "Comparisons between mixed enumerated types not supported by default")
    (2177 return 0)
  }
  where {
    (2168 call !=(2165 'typeof' a)(2167 'typeof' b))
  }
  function >=[2192](arg a[2189] :
  (2188 call int[13] unknown w[2185]), arg b[2198] :
  (2197 call int[13] w)) : _unknown[51] "inline"
  {
    { scopeless
      (2222 return(2221 '>=' a b))
    }
  }
  function >=[2237](arg a[2234] :
  (2233 call uint[115] unknown w[2230]), arg b[2243] :
  (2242 call uint[115] w)) : _unknown[51] "inline"
  {
    { scopeless
      (2251 return(2250 '>=' a b))
    }
  }
  function >=[2266](arg a[2263] :
  (2262 call real[16] unknown w[2259]), arg b[2272] :
  (2271 call real[16] w)) : _unknown[51] "inline"
  {
    { scopeless
      (2280 return(2279 '>=' a b))
    }
  }
  function >=[2291](arg a[2288] :
  enum[187](?), arg b[2294] :
  enum[187](?)) : _unknown[51]
  {
    (2314 return(2313 '>='(2308 call chpl__enumToOrder a)(2312 call chpl__enumToOrder b)))
  }
  where {
    (2301 call ==(2298 'typeof' a)(2300 'typeof' b))
  }
  function >=[2326](arg a[2323] :
  enum[187](?), arg b[2329] :
  enum[187](?)) : _unknown[51] "inline" "last resort"
  {
    (2341 call compilerError "Comparisons between mixed enumerated types not supported by default")
    (2345 return 0)
  }
  where {
    (2336 call !=(2333 'typeof' a)(2335 'typeof' b))
  }
  function <[2360](arg a[2357] :
  (2356 call int[13] unknown w[2353]), arg b[2366] :
  (2365 call int[13] w)) : _unknown[51] "inline"
  {
    { scopeless
      (2390 return(2389 '<' a b))
    }
  }
  function <[2405](arg a[2402] :
  (2401 call uint[115] unknown w[2398]), arg b[2411] :
  (2410 call uint[115] w)) : _unknown[51] "inline"
  {
    { scopeless
      (2419 return(2418 '<' a b))
    }
  }
  function <[2434](arg a[2431] :
  (2430 call real[16] unknown w[2427]), arg b[2440] :
  (2439 call real[16] w)) : _unknown[51] "inline"
  {
    { scopeless
      (2448 return(2447 '<' a b))
    }
  }
  function <[2459](arg a[2456] :
  enum[187](?), arg b[2462] :
  enum[187](?)) : _unknown[51]
  {
    (2482 return(2481 '<'(2476 call chpl__enumToOrder a)(2480 call chpl__enumToOrder b)))
  }
  where {
    (2469 call ==(2466 'typeof' a)(2468 'typeof' b))
  }
  function <[2494](arg a[2491] :
  enum[187](?), arg b[2497] :
  enum[187](?)) : _unknown[51] "inline" "last resort"
  {
    (2509 call compilerError "Comparisons between mixed enumerated types not supported by default")
    (2513 return 0)
  }
  where {
    (2504 call !=(2501 'typeof' a)(2503 'typeof' b))
  }
  function >[2528](arg a[2525] :
  (2524 call int[13] unknown w[2521]), arg b[2534] :
  (2533 call int[13] w)) : _unknown[51] "inline"
  {
    { scopeless
      (2558 return(2557 '>' a b))
    }
  }
  function >[2573](arg a[2570] :
  (2569 call uint[115] unknown w[2566]), arg b[2579] :
  (2578 call uint[115] w)) : _unknown[51] "inline"
  {
    { scopeless
      (2587 return(2586 '>' a b))
    }
  }
  function >[2602](arg a[2599] :
  (2598 call real[16] unknown w[2595]), arg b[2608] :
  (2607 call real[16] w)) : _unknown[51] "inline"
  {
    { scopeless
      (2616 return(2615 '>' a b))
    }
  }
  function >[2627](arg a[2624] :
  enum[187](?), arg b[2630] :
  enum[187](?)) : _unknown[51]
  {
    (2650 return(2649 '>'(2644 call chpl__enumToOrder a)(2648 call chpl__enumToOrder b)))
  }
  where {
    (2637 call ==(2634 'typeof' a)(2636 'typeof' b))
  }
  function >[2662](arg a[2659] :
  enum[187](?), arg b[2665] :
  enum[187](?)) : _unknown[51] "inline" "last resort"
  {
    (2677 call compilerError "Comparisons between mixed enumerated types not supported by default")
    (2681 return 0)
  }
  where {
    (2672 call !=(2669 'typeof' a)(2671 'typeof' b))
  }
  function <=[2696](param arg a[2693] :
  (2692 call int[13] unknown w[2689]), param arg b[2702] :
  (2701 call int[13] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (2710 return(2709 '<=' a b))
    }
  }
  function <=[2725](param arg a[2722] :
  (2721 call uint[115] unknown w[2718]), param arg b[2731] :
  (2730 call uint[115] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (2739 return(2738 '<=' a b))
    }
  }
  function <=[2750](param arg a[2747] :
  enum[187](?), param arg b[2753] :
  enum[187](?)) param : _unknown[51] "inline"
  {
    { scopeless
      (2773 return(2772 '<='(2767 call chpl__enumToOrder a)(2771 call chpl__enumToOrder b)))
    }
  }
  where {
    (2760 call ==(2757 'typeof' a)(2759 'typeof' b))
  }
  function <=[2789](param arg a[2786] :
  (2785 call real[16] unknown w[2782]), param arg b[2795] :
  (2794 call real[16] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (2803 return(2802 '<=' a b))
    }
  }
  function >=[2818](param arg a[2815] :
  (2814 call int[13] unknown w[2811]), param arg b[2824] :
  (2823 call int[13] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (2832 return(2831 '>=' a b))
    }
  }
  function >=[2847](param arg a[2844] :
  (2843 call uint[115] unknown w[2840]), param arg b[2853] :
  (2852 call uint[115] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (2861 return(2860 '>=' a b))
    }
  }
  function >=[2872](param arg a[2869] :
  enum[187](?), param arg b[2875] :
  enum[187](?)) param : _unknown[51] "inline"
  {
    { scopeless
      (2895 return(2894 '>='(2889 call chpl__enumToOrder a)(2893 call chpl__enumToOrder b)))
    }
  }
  where {
    (2882 call ==(2879 'typeof' a)(2881 'typeof' b))
  }
  function >=[2911](param arg a[2908] :
  (2907 call real[16] unknown w[2904]), param arg b[2917] :
  (2916 call real[16] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (2925 return(2924 '>=' a b))
    }
  }
  function <[2940](param arg a[2937] :
  (2936 call int[13] unknown w[2933]), param arg b[2946] :
  (2945 call int[13] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (2954 return(2953 '<' a b))
    }
  }
  function <[2969](param arg a[2966] :
  (2965 call uint[115] unknown w[2962]), param arg b[2975] :
  (2974 call uint[115] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (2983 return(2982 '<' a b))
    }
  }
  function <[2994](param arg a[2991] :
  enum[187](?), param arg b[2997] :
  enum[187](?)) param : _unknown[51] "inline"
  {
    { scopeless
      (3017 return(3016 '<'(3011 call chpl__enumToOrder a)(3015 call chpl__enumToOrder b)))
    }
  }
  where {
    (3004 call ==(3001 'typeof' a)(3003 'typeof' b))
  }
  function <[3033](param arg a[3030] :
  (3029 call real[16] unknown w[3026]), param arg b[3039] :
  (3038 call real[16] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (3047 return(3046 '<' a b))
    }
  }
  function >[3062](param arg a[3059] :
  (3058 call int[13] unknown w[3055]), param arg b[3068] :
  (3067 call int[13] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (3076 return(3075 '>' a b))
    }
  }
  function >[3091](param arg a[3088] :
  (3087 call uint[115] unknown w[3084]), param arg b[3097] :
  (3096 call uint[115] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (3105 return(3104 '>' a b))
    }
  }
  function >[3116](param arg a[3113] :
  enum[187](?), param arg b[3119] :
  enum[187](?)) param : _unknown[51] "inline"
  {
    { scopeless
      (3139 return(3138 '>'(3133 call chpl__enumToOrder a)(3137 call chpl__enumToOrder b)))
    }
  }
  where {
    (3126 call ==(3123 'typeof' a)(3125 'typeof' b))
  }
  function >[3155](param arg a[3152] :
  (3151 call real[16] unknown w[3148]), param arg b[3161] :
  (3160 call real[16] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (3169 return(3168 '>' a b))
    }
  }
  function +[3184](arg a[3181] :
  (3180 call int[13] unknown w[3177])) : _unknown[51] "inline"
  {
    { scopeless
      (3187 return a)
    }
  }
  function +[3202](arg a[3199] :
  (3198 call uint[115] unknown w[3195])) : _unknown[51] "inline"
  {
    { scopeless
      (3205 return a)
    }
  }
  function +[3220](arg a[3217] :
  (3216 call real[16] unknown w[3213])) : _unknown[51] "inline"
  {
    { scopeless
      (3223 return a)
    }
  }
  function +[3238](arg a[3235] :
  (3234 call imag[130] unknown w[3231])) : _unknown[51] "inline"
  {
    { scopeless
      (3241 return a)
    }
  }
  function +[3256](arg a[3253] :
  (3252 call complex[140] unknown w[3249])) : _unknown[51] "inline"
  {
    { scopeless
      (3259 return a)
    }
  }
  function -[3274](arg a[3271] :
  (3270 call int[13] unknown w[3267])) : _unknown[51] "inline"
  {
    { scopeless
      (3296 return(3295 'u-' a))
    }
  }
  function -[3312](arg a[3309] :
  (3308 call uint[115] 64)) : _unknown[51] "inline"
  {
    (3340 call compilerError "illegal use of '-' on operand of type "(3338 call _cast string[26](3336 'typeof' a)))
  }
  function -[3355](arg a[3352] :
  (3351 call real[16] unknown w[3348])) : _unknown[51] "inline"
  {
    { scopeless
      (3361 return(3360 'u-' a))
    }
  }
  function -[3376](arg a[3373] :
  (3372 call imag[130] unknown w[3369])) : _unknown[51] "inline"
  {
    { scopeless
      (3382 return(3381 'u-' a))
    }
  }
  function -[3397](arg a[3394] :
  (3393 call complex[140] unknown w[3390])) : _unknown[51] "inline"
  {
    { scopeless
      (3403 return(3402 'u-' a))
    }
  }
  function +[3418](param arg a[3415] :
  (3414 call int[13] unknown w[3411])) param : _unknown[51] "inline"
  {
    { scopeless
      (3421 return a)
    }
  }
  function +[3436](param arg a[3433] :
  (3432 call uint[115] unknown w[3429])) param : _unknown[51] "inline"
  {
    { scopeless
      (3439 return a)
    }
  }
  function +[3454](param arg a[3451] :
  (3450 call real[16] unknown w[3447])) param : _unknown[51] "inline"
  {
    { scopeless
      (3457 return a)
    }
  }
  function +[3472](param arg a[3469] :
  (3468 call imag[130] unknown w[3465])) param : _unknown[51] "inline"
  {
    { scopeless
      (3475 return a)
    }
  }
  function +[3490](param arg a[3487] :
  (3486 call complex[140] unknown w[3483])) param : _unknown[51] "inline"
  {
    { scopeless
      (3493 return a)
    }
  }
  function -[3508](param arg a[3505] :
  (3504 call int[13] unknown w[3501])) param : _unknown[51] "inline"
  {
    { scopeless
      (3514 return(3513 'u-' a))
    }
  }
  function -[3529](param arg a[3526] :
  (3525 call uint[115] unknown w[3522])) param : _unknown[51] "inline"
  {
    if(3562 call _cond_test(3539 call <(3536 call _cast(3535 call int[13] w) a) 0))
    {
      { scopeless
        (3549 call compilerError "illegal use of '-' on operand of type "(3547 call _cast string[26](3545 'typeof' a)))
      }
    }
    {
      { scopeless
        (3560 return(3558 call -(3556 call _cast(3555 call int[13] w) a)))
      }
    }
  }
  function -[3581](param arg a[3578] :
  (3577 call real[16] unknown w[3574])) param : _unknown[51] "inline"
  {
    { scopeless
      (3587 return(3586 'u-' a))
    }
  }
  function -[3602](param arg a[3599] :
  (3598 call imag[130] unknown w[3595])) param : _unknown[51] "inline"
  {
    { scopeless
      (3608 return(3607 'u-' a))
    }
  }
  function -[3623](param arg a[3620] :
  (3619 call complex[140] unknown w[3616])) param : _unknown[51] "inline"
  {
    { scopeless
      (3629 return(3628 'u-' a))
    }
  }
  function +[3644](arg a[3641] :
  (3640 call int[13] unknown w[3637]), arg b[3650] :
  (3649 call int[13] w)) : _unknown[51] "inline"
  {
    { scopeless
      (3674 return(3673 '+' a b))
    }
  }
  function +[3689](arg a[3686] :
  (3685 call uint[115] unknown w[3682]), arg b[3695] :
  (3694 call uint[115] w)) : _unknown[51] "inline"
  {
    { scopeless
      (3703 return(3702 '+' a b))
    }
  }
  function +[3718](arg a[3715] :
  (3714 call real[16] unknown w[3711]), arg b[3724] :
  (3723 call real[16] w)) : _unknown[51] "inline"
  {
    { scopeless
      (3732 return(3731 '+' a b))
    }
  }
  function +[3747](arg a[3744] :
  (3743 call imag[130] unknown w[3740]), arg b[3753] :
  (3752 call imag[130] w)) : _unknown[51] "inline"
  {
    { scopeless
      (3761 return(3760 '+' a b))
    }
  }
  function +[3776](arg a[3773] :
  (3772 call complex[140] unknown w[3769]), arg b[3782] :
  (3781 call complex[140] w)) : _unknown[51] "inline"
  {
    { scopeless
      (3790 return(3789 '+' a b))
    }
  }
  function +[3805](arg a[3802] :
  (3801 call real[16] unknown w[3798]), arg b[3811] :
  (3810 call imag[130] w)) : _unknown[51] "inline"
  {
    { scopeless
      (3831 return(3829 call _cast(3828 call complex[140](3825 call * w 2))(3820 call _build_tuple a(3818 call _i2r b))))
    }
  }
  function +[3846](arg a[3843] :
  (3842 call imag[130] unknown w[3839]), arg b[3852] :
  (3851 call real[16] w)) : _unknown[51] "inline"
  {
    { scopeless
      (3872 return(3870 call _cast(3869 call complex[140](3866 call * w 2))(3861 call _build_tuple b(3859 call _i2r a))))
    }
  }
  function +[3887](arg a[3884] :
  (3883 call real[16] unknown w[3880]), arg b[3896] :
  (3895 call complex[140](3892 call * w 2))) : _unknown[51] "inline"
  {
    { scopeless
      (3922 return(3920 call _cast(3919 call complex[140](3916 call * w 2))(3911 call _build_tuple(3904 call + a(3901 call . b c"re"))(3907 call . b c"im"))))
    }
  }
  function +[3937](arg a[3934] :
  (3933 call complex[140] unknown w[3930]), arg b[3946] :
  (3945 call real[16](3942 call / w 2))) : _unknown[51] "inline"
  {
    { scopeless
      (3969 return(3967 call _cast(3966 call complex[140] w)(3961 call _build_tuple(3954 call +(3950 call . a c"re") b)(3957 call . a c"im"))))
    }
  }
  function +[3984](arg a[3981] :
  (3980 call imag[130] unknown w[3977]), arg b[3993] :
  (3992 call complex[140](3989 call * w 2))) : _unknown[51] "inline"
  {
    { scopeless
      (4022 return(4020 call _cast(4019 call complex[140](4016 call * w 2))(4011 call _build_tuple(3997 call . b c"re")(4008 call +(4003 call _i2r a)(4005 call . b c"im")))))
    }
  }
  function +[4037](arg a[4034] :
  (4033 call complex[140] unknown w[4030]), arg b[4046] :
  (4045 call imag[130](4042 call / w 2))) : _unknown[51] "inline"
  {
    { scopeless
      (4072 return(4070 call _cast(4069 call complex[140] w)(4064 call _build_tuple(4050 call . a c"re")(4061 call +(4054 call . a c"im")(4060 call _i2r b)))))
    }
  }
  function -[4087](arg a[4084] :
  (4083 call int[13] unknown w[4080]), arg b[4093] :
  (4092 call int[13] w)) : _unknown[51] "inline"
  {
    { scopeless
      (4117 return(4116 '-' a b))
    }
  }
  function -[4132](arg a[4129] :
  (4128 call uint[115] unknown w[4125]), arg b[4138] :
  (4137 call uint[115] w)) : _unknown[51] "inline"
  {
    { scopeless
      (4146 return(4145 '-' a b))
    }
  }
  function -[4161](arg a[4158] :
  (4157 call real[16] unknown w[4154]), arg b[4167] :
  (4166 call real[16] w)) : _unknown[51] "inline"
  {
    { scopeless
      (4175 return(4174 '-' a b))
    }
  }
  function -[4190](arg a[4187] :
  (4186 call imag[130] unknown w[4183]), arg b[4196] :
  (4195 call imag[130] w)) : _unknown[51] "inline"
  {
    { scopeless
      (4204 return(4203 '-' a b))
    }
  }
  function -[4219](arg a[4216] :
  (4215 call complex[140] unknown w[4212]), arg b[4225] :
  (4224 call complex[140] w)) : _unknown[51] "inline"
  {
    { scopeless
      (4233 return(4232 '-' a b))
    }
  }
  function -[4248](arg a[4245] :
  (4244 call real[16] unknown w[4241]), arg b[4254] :
  (4253 call imag[130] w)) : _unknown[51] "inline"
  {
    { scopeless
      (4276 return(4274 call _cast(4273 call complex[140](4270 call * w 2))(4265 call _build_tuple a(4262 call -(4261 call _i2r b)))))
    }
  }
  function -[4291](arg a[4288] :
  (4287 call imag[130] unknown w[4284]), arg b[4297] :
  (4296 call real[16] w)) : _unknown[51] "inline"
  {
    { scopeless
      (4319 return(4317 call _cast(4316 call complex[140](4313 call * w 2))(4308 call _build_tuple(4301 call - b)(4306 call _i2r a))))
    }
  }
  function -[4334](arg a[4331] :
  (4330 call real[16] unknown w[4327]), arg b[4343] :
  (4342 call complex[140](4339 call * w 2))) : _unknown[51] "inline"
  {
    { scopeless
      (4371 return(4369 call _cast(4368 call complex[140](4365 call * w 2))(4360 call _build_tuple(4351 call - a(4348 call . b c"re"))(4357 call -(4354 call . b c"im")))))
    }
  }
  function -[4386](arg a[4383] :
  (4382 call complex[140] unknown w[4379]), arg b[4395] :
  (4394 call real[16](4391 call / w 2))) : _unknown[51] "inline"
  {
    { scopeless
      (4418 return(4416 call _cast(4415 call complex[140] w)(4410 call _build_tuple(4403 call -(4399 call . a c"re") b)(4406 call . a c"im"))))
    }
  }
  function -[4433](arg a[4430] :
  (4429 call imag[130] unknown w[4426]), arg b[4442] :
  (4441 call complex[140](4438 call * w 2))) : _unknown[51] "inline"
  {
    { scopeless
      (4473 return(4471 call _cast(4470 call complex[140](4467 call * w 2))(4462 call _build_tuple(4449 call -(4446 call . b c"re"))(4459 call -(4454 call _i2r a)(4456 call . b c"im")))))
    }
  }
  function -[4488](arg a[4485] :
  (4484 call complex[140] unknown w[4481]), arg b[4497] :
  (4496 call imag[130](4493 call / w 2))) : _unknown[51] "inline"
  {
    { scopeless
      (4523 return(4521 call _cast(4520 call complex[140] w)(4515 call _build_tuple(4501 call . a c"re")(4512 call -(4505 call . a c"im")(4511 call _i2r b)))))
    }
  }
  function +[4538](param arg a[4535] :
  (4534 call int[13] unknown w[4531]), param arg b[4544] :
  (4543 call int[13] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (4552 return(4551 '+' a b))
    }
  }
  function +[4567](param arg a[4564] :
  (4563 call uint[115] unknown w[4560]), param arg b[4573] :
  (4572 call uint[115] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (4581 return(4580 '+' a b))
    }
  }
  function +[4596](param arg a[4593] :
  (4592 call real[16] unknown w[4589]), param arg b[4602] :
  (4601 call real[16] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (4610 return(4609 '+' a b))
    }
  }
  function +[4625](param arg a[4622] :
  (4621 call imag[130] unknown w[4618]), param arg b[4631] :
  (4630 call imag[130] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (4639 return(4638 '+' a b))
    }
  }
  function +[4654](param arg a[4651] :
  (4650 call complex[140] unknown w[4647]), param arg b[4660] :
  (4659 call complex[140] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (4668 return(4667 '+' a b))
    }
  }
  function -[4683](param arg a[4680] :
  (4679 call int[13] unknown w[4676]), param arg b[4689] :
  (4688 call int[13] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (4697 return(4696 '-' a b))
    }
  }
  function -[4712](param arg a[4709] :
  (4708 call uint[115] unknown w[4705]), param arg b[4718] :
  (4717 call uint[115] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (4726 return(4725 '-' a b))
    }
  }
  function -[4741](param arg a[4738] :
  (4737 call real[16] unknown w[4734]), param arg b[4747] :
  (4746 call real[16] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (4755 return(4754 '-' a b))
    }
  }
  function -[4770](param arg a[4767] :
  (4766 call imag[130] unknown w[4763]), param arg b[4776] :
  (4775 call imag[130] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (4784 return(4783 '-' a b))
    }
  }
  function -[4799](param arg a[4796] :
  (4795 call complex[140] unknown w[4792]), param arg b[4805] :
  (4804 call complex[140] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (4813 return(4812 '-' a b))
    }
  }
  function *[4828](arg a[4825] :
  (4824 call int[13] unknown w[4821]), arg b[4834] :
  (4833 call int[13] w)) : _unknown[51] "inline"
  {
    { scopeless
      (4858 return(4857 '*' a b))
    }
  }
  function *[4873](arg a[4870] :
  (4869 call uint[115] unknown w[4866]), arg b[4879] :
  (4878 call uint[115] w)) : _unknown[51] "inline"
  {
    { scopeless
      (4887 return(4886 '*' a b))
    }
  }
  function *[4902](arg a[4899] :
  (4898 call real[16] unknown w[4895]), arg b[4908] :
  (4907 call real[16] w)) : _unknown[51] "inline"
  {
    { scopeless
      (4916 return(4915 '*' a b))
    }
  }
  function *[4931](arg a[4928] :
  (4927 call imag[130] unknown w[4924]), arg b[4937] :
  (4936 call imag[130] w)) : _unknown[51] "inline"
  {
    { scopeless
      (4950 return(4949 call _i2r(4947 '*'(4944 call - a) b)))
    }
  }
  function *[4965](arg a[4962] :
  (4961 call complex[140] unknown w[4958]), arg b[4971] :
  (4970 call complex[140] w)) : _unknown[51] "inline"
  {
    { scopeless
      (4979 return(4978 '*' a b))
    }
  }
  function *[4994](arg a[4991] :
  (4990 call real[16] unknown w[4987]), arg b[5000] :
  (4999 call imag[130] w)) : _unknown[51] "inline"
  {
    { scopeless
      (5013 return(5012 call _r2i(5009 call * a(5008 call _i2r b))))
    }
  }
  function *[5028](arg a[5025] :
  (5024 call imag[130] unknown w[5021]), arg b[5034] :
  (5033 call real[16] w)) : _unknown[51] "inline"
  {
    { scopeless
      (5047 return(5046 call _r2i(5043 call *(5041 call _i2r a) b)))
    }
  }
  function *[5062](arg a[5059] :
  (5058 call real[16] unknown w[5055]), arg b[5071] :
  (5070 call complex[140](5067 call * w 2))) : _unknown[51] "inline"
  {
    { scopeless
      (5100 return(5098 call _cast(5097 call complex[140](5094 call * w 2))(5089 call _build_tuple(5079 call * a(5076 call . b c"re"))(5086 call * a(5083 call . b c"im")))))
    }
  }
  function *[5115](arg a[5112] :
  (5111 call complex[140] unknown w[5108]), arg b[5124] :
  (5123 call real[16](5120 call / w 2))) : _unknown[51] "inline"
  {
    { scopeless
      (5150 return(5148 call _cast(5147 call complex[140] w)(5142 call _build_tuple(5132 call *(5128 call . a c"re") b)(5139 call *(5135 call . a c"im") b))))
    }
  }
  function *[5165](arg a[5162] :
  (5161 call imag[130] unknown w[5158]), arg b[5174] :
  (5173 call complex[140](5170 call * w 2))) : _unknown[51] "inline"
  {
    { scopeless
      (5211 return(5209 call _cast(5208 call complex[140](5205 call * w 2))(5200 call _build_tuple(5187 call -(5185 call *(5180 call _i2r a)(5182 call . b c"im")))(5197 call *(5192 call _i2r a)(5194 call . b c"re")))))
    }
  }
  function *[5226](arg a[5223] :
  (5222 call complex[140] unknown w[5219]), arg b[5235] :
  (5234 call imag[130](5231 call / w 2))) : _unknown[51] "inline"
  {
    { scopeless
      (5269 return(5267 call _cast(5266 call complex[140] w)(5261 call _build_tuple(5248 call -(5246 call *(5239 call . a c"im")(5245 call _i2r b)))(5258 call *(5251 call . a c"re")(5257 call _i2r b)))))
    }
  }
  function /[5284](arg a[5281] :
  (5280 call int[13] unknown w[5277]), arg b[5290] :
  (5289 call int[13] w)) : _unknown[51] "inline"
  {
    if(5326 call _cond_test chpl_checkDivByZero)
    {
      { scopeless
        if(5321 call _cond_test(5296 call == b 0))
        {
          { scopeless
            (5319 call halt "Attempt to divide by zero")
          }
        }
      }
    }
    (5353 return(5352 '/' a b))
  }
  function /[5367](arg a[5364] :
  (5363 call uint[115] unknown w[5360]), arg b[5373] :
  (5372 call uint[115] w)) : _unknown[51] "inline"
  {
    if(5391 call _cond_test chpl_checkDivByZero)
    {
      { scopeless
        if(5386 call _cond_test(5379 call == b 0))
        {
          { scopeless
            (5384 call halt "Attempt to divide by zero")
          }
        }
      }
    }
    (5402 return(5401 '/' a b))
  }
  function /[5416](arg a[5413] :
  (5412 call real[16] unknown w[5409]), arg b[5422] :
  (5421 call real[16] w)) : _unknown[51] "inline"
  {
    { scopeless
      (5430 return(5429 '/' a b))
    }
  }
  function /[5445](arg a[5442] :
  (5441 call imag[130] unknown w[5438]), arg b[5451] :
  (5450 call imag[130] w)) : _unknown[51] "inline"
  {
    { scopeless
      (5462 return(5461 call _i2r(5459 '/' a b)))
    }
  }
  function /[5477](arg a[5474] :
  (5473 call complex[140] unknown w[5470]), arg b[5483] :
  (5482 call complex[140] w)) : _unknown[51] "inline"
  {
    { scopeless
      (5491 return(5490 '/' a b))
    }
  }
  function /[5506](arg a[5503] :
  (5502 call real[16] unknown w[5499]), arg b[5512] :
  (5511 call imag[130] w)) : _unknown[51] "inline"
  {
    { scopeless
      (5527 return(5526 call _r2i(5523 call -(5521 call / a(5520 call _i2r b)))))
    }
  }
  function /[5542](arg a[5539] :
  (5538 call imag[130] unknown w[5535]), arg b[5548] :
  (5547 call real[16] w)) : _unknown[51] "inline"
  {
    { scopeless
      (5561 return(5560 call _r2i(5557 call /(5555 call _i2r a) b)))
    }
  }
  function /[5576](arg a[5573] :
  (5572 call real[16] unknown w[5569]), arg b[5585] :
  (5584 call complex[140](5581 call * w 2))) : _unknown[51] "inline"
  {
    { scopeless
      const d[5592] "const"(5591 call abs b)
      (5595 'end of statement')
    }
    (5637 return(5635 call _cast(5634 call complex[140](5631 call * w 2))(5626 call _build_tuple(5608 call *(5599 call / a d)(5606 call /(5602 call . b c"re") d))(5623 call *(5614 call -(5612 call / a d))(5621 call /(5617 call . b c"im") d)))))
  }
  function /[5651](arg a[5648] :
  (5647 call complex[140] unknown w[5644]), arg b[5660] :
  (5659 call real[16](5656 call / w 2))) : _unknown[51] "inline"
  {
    { scopeless
      (5686 return(5684 call _cast(5683 call complex[140] w)(5678 call _build_tuple(5668 call /(5664 call . a c"re") b)(5675 call /(5671 call . a c"im") b))))
    }
  }
  function /[5701](arg a[5698] :
  (5697 call imag[130] unknown w[5694]), arg b[5710] :
  (5709 call complex[140](5706 call * w 2))) : _unknown[51] "inline"
  {
    { scopeless
      const d[5717] "const"(5716 call abs b)
      (5720 'end of statement')
    }
    (5766 return(5764 call _cast(5763 call complex[140](5760 call * w 2))(5755 call _build_tuple(5736 call *(5727 call /(5725 call _i2r a) d)(5734 call /(5730 call . b c"im") d))(5752 call *(5743 call /(5741 call _i2r a) d)(5750 call /(5746 call . b c"re") d)))))
  }
  function /[5780](arg a[5777] :
  (5776 call complex[140] unknown w[5773]), arg b[5789] :
  (5788 call imag[130](5785 call / w 2))) : _unknown[51] "inline"
  {
    { scopeless
      (5823 return(5821 call _cast(5820 call complex[140] w)(5815 call _build_tuple(5800 call /(5793 call . a c"im")(5799 call _i2r b))(5812 call -(5810 call /(5803 call . a c"re")(5809 call _i2r b))))))
    }
  }
  function *[5838](param arg a[5835] :
  (5834 call int[13] unknown w[5831]), param arg b[5844] :
  (5843 call int[13] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (5852 return(5851 '*' a b))
    }
  }
  function *[5867](param arg a[5864] :
  (5863 call uint[115] unknown w[5860]), param arg b[5873] :
  (5872 call uint[115] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (5881 return(5880 '*' a b))
    }
  }
  function *[5896](param arg a[5893] :
  (5892 call real[16] unknown w[5889]), param arg b[5902] :
  (5901 call real[16] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (5910 return(5909 '*' a b))
    }
  }
  function *[5925](param arg a[5922] :
  (5921 call imag[130] unknown w[5918]), param arg b[5931] :
  (5930 call imag[130] w)) param : _unknown[51] "inline"
  {
    (5947 return(5945 call _cast(5944 call real[16] w)(5940 '*'(5937 call - a) b)))
  }
  function *[5962](param arg a[5959] :
  (5958 call real[16] unknown w[5955]), param arg b[5968] :
  (5967 call imag[130] w)) param : _unknown[51] "inline"
  {
    (5988 return(5986 call _cast(5985 call imag[130] w)(5981 '*' a(5979 call _cast(5978 call real[16] w) b))))
  }
  function *[6003](param arg a[6000] :
  (5999 call imag[130] unknown w[5996]), param arg b[6009] :
  (6008 call real[16] w)) param : _unknown[51] "inline"
  {
    (6029 return(6027 call _cast(6026 call imag[130] w)(6022 '*'(6019 call _cast(6018 call real[16] w) a) b)))
  }
  function /[6044](param arg a[6041] :
  (6040 call int[13] unknown w[6037]), param arg b[6050] :
  (6049 call int[13] w)) param : _unknown[51] "inline"
  {
    if(6062 call _cond_test(6055 call == b 0))
    {
      { scopeless
        (6060 call compilerError "Attempt to divide by zero")
      }
    }
    (6073 return(6072 '/' a b))
  }
  function /[6087](param arg a[6084] :
  (6083 call uint[115] unknown w[6080]), param arg b[6093] :
  (6092 call uint[115] w)) param : _unknown[51] "inline"
  {
    if(6105 call _cond_test(6098 call == b 0))
    {
      { scopeless
        (6103 call compilerError "Attempt to divide by zero")
      }
    }
    (6116 return(6115 '/' a b))
  }
  function /[6130](param arg a[6127] :
  (6126 call real[16] unknown w[6123]), param arg b[6136] :
  (6135 call real[16] w)) param : _unknown[51] "inline"
  {
    (6144 return(6143 '/' a b))
  }
  function /[6159](param arg a[6156] :
  (6155 call imag[130] unknown w[6152]), param arg b[6165] :
  (6164 call imag[130] w)) param : _unknown[51] "inline"
  {
    (6179 return(6177 call _cast(6176 call real[16] w)(6172 '/' a b)))
  }
  function /[6194](param arg a[6191] :
  (6190 call real[16] unknown w[6187]), param arg b[6200] :
  (6199 call imag[130] w)) param : _unknown[51] "inline"
  {
    (6222 return(6220 call _cast(6219 call imag[130] w)(6215 '/'(6206 call - a)(6213 call _cast(6212 call real[16] w) b))))
  }
  function /[6237](param arg a[6234] :
  (6233 call imag[130] unknown w[6230]), param arg b[6243] :
  (6242 call real[16] w)) param : _unknown[51] "inline"
  {
    (6263 return(6261 call _cast(6260 call imag[130] w)(6256 '/'(6253 call _cast(6252 call real[16] w) a) b)))
  }
  function %[6278](arg a[6275] :
  (6274 call int[13] unknown w[6271]), arg b[6284] :
  (6283 call int[13] w)) : _unknown[51] "inline"
  {
    if(6320 call _cond_test chpl_checkDivByZero)
    {
      { scopeless
        if(6315 call _cond_test(6290 call == b 0))
        {
          { scopeless
            (6313 call halt "Attempt to compute a modulus by zero")
          }
        }
      }
    }
    (6347 return(6346 '%' a b))
  }
  function %[6361](arg a[6358] :
  (6357 call uint[115] unknown w[6354]), arg b[6367] :
  (6366 call uint[115] w)) : _unknown[51] "inline"
  {
    if(6385 call _cond_test chpl_checkDivByZero)
    {
      { scopeless
        if(6380 call _cond_test(6373 call == b 0))
        {
          { scopeless
            (6378 call halt "Attempt to compute a modulus by zero")
          }
        }
      }
    }
    (6396 return(6395 '%' a b))
  }
  function %[6410](param arg a[6407] :
  (6406 call int[13] unknown w[6403]), param arg b[6416] :
  (6415 call int[13] w)) param : _unknown[51] "inline"
  {
    if(6428 call _cond_test(6421 call == b 0))
    {
      { scopeless
        (6426 call compilerError "Attempt to compute a modulus by zero")
      }
    }
    (6439 return(6438 '%' a b))
  }
  function %[6453](param arg a[6450] :
  (6449 call uint[115] unknown w[6446]), param arg b[6459] :
  (6458 call uint[115] w)) param : _unknown[51] "inline"
  {
    if(6471 call _cond_test(6464 call == b 0))
    {
      { scopeless
        (6469 call compilerError "Attempt to compute a modulus by zero")
      }
    }
    (6482 return(6481 '%' a b))
  }
  function _intExpHelp[6492](arg a[6489] :
  integral, arg b[6494]:_any[178](?)) : _unknown[51] "inline"
  {
    if(6611 call _cond_test(6511 call &&(6506 call isIntType(6504 'typeof' b))(6509 call < b 0)))
    {
      { scopeless
        if(6605 call _cond_test(6515 call == a 0))
        {
          { scopeless
            (6559 call halt "cannot compute " a " ** " b)
          }
        }
        {
          { scopeless
            if(6599 call _cond_test(6563 call == a 1))
            {
              { scopeless
                (6566 return 1)
              }
            }
            {
              { scopeless
                if(6593 call _cond_test(6572 call == a(6570 call - 1)))
                {
                  { scopeless
                    (6588 return(6585 IfExpr (6579 call ==(6576 call % b 2) 0) then
                    { scopeless
                      1
                    } else
                    { scopeless
                      (6583 call - 1)
                    } ))
                  }
                }
                {
                  { scopeless
                    (6591 return 0)
                  }
                }
              }
            }
          }
        }
      }
    }
    { scopeless
      unknown i[6618] b
      unknown y[6624] 1(6622 'typeof' a)
      unknown z[6628] a
      (6631 'end of statement')
    }
    {
      unknown tmp[6664] "temp"
      (6688 'move' tmp[6664](6683 call _cond_test(6685 call != i 0)))
      WhileDo[6669]
      {
        {
          if(6648 call _cond_test(6641 call ==(6638 call % i 2) 1))
          {
            { scopeless
              (6645 call *= y z)
            }
          }
          (6656 call *= z z)
          (6661 call /= i 2)
        }
        label _continueLabel[6667]
        (6678 'move' tmp[6664](6673 call _cond_test(6675 call != i 0)))
        tmp[6664]
      }
      label _breakLabel[6668]
    }
    (6692 return y)
  }
  where {
    (6500 call ==(6497 'typeof' a)(6499 'typeof' b))
  }
  function **[6707](arg a[6704] :
  (6703 call int[13] unknown w[6700]), arg b[6713] :
  (6712 call int[13] w)) : _unknown[51] "inline"
  {
    { scopeless
      (6721 return(6720 call _intExpHelp a b))
    }
  }
  function **[6736](arg a[6733] :
  (6732 call uint[115] unknown w[6729]), arg b[6742] :
  (6741 call uint[115] w)) : _unknown[51] "inline"
  {
    { scopeless
      (6750 return(6749 call _intExpHelp a b))
    }
  }
  function **[6765](arg a[6762] :
  (6761 call real[16] unknown w[6758]), arg b[6771] :
  (6770 call real[16] w)) : _unknown[51] "inline"
  {
    { scopeless
      (6795 return(6794 '**' a b))
    }
  }
  function **[6810](arg a[6807] :
  (6806 call complex[140] unknown w[6803]), arg b[6816] :
  (6815 call complex[140] w)) : _unknown[51] "inline"
  {
    if(6895 call _cond_test(6827 call ==(6820 'typeof' a)(6826 call complex[140] 128)))
    {
      function cpow[6838](arg x[6835] :
      (6834 call complex[140] 128), arg y[6844] :
      (6843 call complex[140] 128)) : _unknown[51] "extern" "local args" "no fn body" "fn synchronization free"
      {
      }
      { scopeless type
        (6850 call complex[140] 128)
      }
      (6860 return(6859 call cpow a b))
    }
    {
      function cpowf[6871](arg x[6868] :
      (6867 call complex[140] 64), arg y[6877] :
      (6876 call complex[140] 64)) : _unknown[51] "extern" "local args" "no fn body" "fn synchronization free"
      {
      }
      { scopeless type
        (6883 call complex[140] 64)
      }
      (6893 return(6892 call cpowf a b))
    }
  }
  function **[6912](param arg a[6909] :
  (6908 call int[13] unknown w[6905]), param arg b[6918] :
  (6917 call int[13] w)) param : _unknown[51]
  {
    { scopeless
      (6926 return(6925 '**' a b))
    }
  }
  function **[6941](param arg a[6938] :
  (6937 call uint[115] unknown w[6934]), param arg b[6947] :
  (6946 call uint[115] w)) param : _unknown[51]
  {
    { scopeless
      (6955 return(6954 '**' a b))
    }
  }
  function _expHelp[6964](arg a[6962]:_any[178](?), param arg b[6967] :
  integral) : _unknown[51] "inline"
  {
    if(7168 call _cond_test(6972 call == b 0))
    {
      (6979 return(6977 call _cast(6976 'typeof' a) 1))
    }
    {
      { scopeless
        if(7163 call _cond_test(6984 call == b 1))
        {
          (6987 return a)
        }
        {
          { scopeless
            if(7158 call _cond_test(6992 call == b 2))
            {
              (6998 return(6996 call * a a))
            }
            {
              { scopeless
                if(7153 call _cond_test(7005 call == b 3))
                {
                  (7014 return(7012 call *(7009 call * a a) a))
                }
                {
                  { scopeless
                    if(7148 call _cond_test(7019 call == b 4))
                    {
                      { scopeless
                        const t[7025] "const"(7023 call * a a)
                        (7028 'end of statement')
                      }
                      (7034 return(7032 call * t t))
                    }
                    {
                      { scopeless
                        if(7143 call _cond_test(7040 call == b 5))
                        {
                          { scopeless
                            const t[7046] "const"(7044 call * a a)
                            (7049 'end of statement')
                          }
                          (7058 return(7056 call *(7053 call * t t) a))
                        }
                        {
                          { scopeless
                            if(7138 call _cond_test(7062 call == b 6))
                            {
                              { scopeless
                                const t[7068] "const"(7066 call * a a)
                                (7071 'end of statement')
                              }
                              (7080 return(7078 call *(7075 call * t t) t))
                            }
                            {
                              { scopeless
                                if(7133 call _cond_test(7086 call == b 8))
                                {
                                  { scopeless
                                    const t[7092] "const"(7090 call * a a)
                                    const u[7099] "const"(7097 call * t t)
                                    (7102 'end of statement')
                                  }
                                  (7108 return(7106 call * u u))
                                }
                                {
                                  { scopeless
                                    (7131 call compilerError "unexpected case in exponentiation optimization")
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  function _expBaseHelp[7182](param arg a[7179] :
  int[13], arg b[7184]:_any[178](?)) : _unknown[51] "inline"
  {
    if(7201 call _cond_test(7192 call == b 0))
    {
      { scopeless
        (7199 return(7197 call _cast(7196 'typeof' a) 1))
      }
    }
    if(7227 call _cond_test(7209 call < b 0))
    {
      { scopeless
        if(7221 call _cond_test(7213 call == a 1))
        {
          { scopeless
            (7216 return 1)
          }
        }
        {
          { scopeless
            (7219 return 0)
          }
        }
      }
    }
    { scopeless
      unknown c[7233] 0
      (7236 'end of statement')
    }
    { scopeless
      unknown x[7239] a int[13]
      (7242 'end of statement')
    }
    {
      unknown tmp[7261] "temp"
      (7285 'move' tmp[7261](7280 call _cond_test(7282 call > x 1)))
      WhileDo[7266]
      {
        {
          (7249 call += c 1)
          (7258 call = x(7256 call >> x 1))
        }
        label _continueLabel[7264]
        (7275 'move' tmp[7261](7270 call _cond_test(7272 call > x 1)))
        tmp[7261]
      }
      label _breakLabel[7265]
    }
    { scopeless
      unknown exp[7295](7293 call * c(7291 call - b 1))
      (7298 'end of statement')
    }
    (7303 return(7301 call << a exp))
  }
  where {
    (7189 call _basePowerTwo a)
  }
  function _canOptimizeExp[7314](param arg b[7311] :
  integral) param : _unknown[51]
  {
    { scopeless
      (7332 return(7330 call &&(7324 call &&(7318 call >= b 0)(7322 call <= b 8))(7328 call != b 7)))
    }
  }
  function _basePowerTwo[7343](param arg a[7340] :
  integral) param : _unknown[51]
  {
    { scopeless
      (7363 return(7361 call &&(7347 call > a 0)(7359 call ==(7356 call & a(7354 call +(7351 call ~ a) 1)) a)))
    }
  }
  function **[7378](arg a[7375] :
  (7374 call int[13] unknown w[7371]), param arg b[7381] :
  integral) : _unknown[51] "inline"
  {
    { scopeless
      (7393 return(7392 call _expHelp a b))
    }
  }
  where {
    (7387 call _canOptimizeExp b)
  }
  function **[7409](arg a[7406] :
  (7405 call uint[115] unknown w[7402]), param arg b[7412] :
  integral) : _unknown[51] "inline"
  {
    { scopeless
      (7424 return(7423 call _expHelp a b))
    }
  }
  where {
    (7418 call _canOptimizeExp b)
  }
  function **[7440](arg a[7437] :
  (7436 call real[16] unknown w[7433]), param arg b[7443] :
  integral) : _unknown[51] "inline"
  {
    { scopeless
      (7455 return(7454 call _expHelp a b))
    }
  }
  where {
    (7449 call _canOptimizeExp b)
  }
  function **[7467](param arg a[7464] :
  integral, arg b[7470] :
  int[13]) : _unknown[51] "inline"
  {
    { scopeless
      (7482 return(7481 call _expBaseHelp a b))
    }
  }
  where {
    (7476 call _basePowerTwo a)
  }
  function ![7494](arg a[7491] :
  bool[10]) : _unknown[51] "inline"
  {
    { scopeless
      (7516 return(7515 '!' a))
    }
  }
  function ![7531](arg a[7528] :
  (7527 call int[13] unknown w[7524])) : _unknown[51] "inline"
  {
    { scopeless
      (7537 return(7535 call == a 0))
    }
  }
  function ![7552](arg a[7549] :
  (7548 call uint[115] unknown w[7545])) : _unknown[51] "inline"
  {
    { scopeless
      (7558 return(7556 call == a 0))
    }
  }
  function isTrue[7569](arg a[7566] :
  bool[10]) : _unknown[51] "inline"
  {
    { scopeless
      (7572 return a)
    }
  }
  function isTrue[7583](param arg a[7580] :
  bool[10]) param : _unknown[51] "inline"
  {
    { scopeless
      (7586 return a)
    }
  }
  function isTrue[7597](arg a[7594] :
  integral) : _unknown[51]
  {
    (7620 call compilerError "short-circuiting logical operators not supported on integers")
  }
  function ![7631](param arg a[7628] :
  bool[10]) param : _unknown[51] "inline"
  {
    { scopeless
      (7637 return(7636 '!' a))
    }
  }
  function ![7652](param arg a[7649] :
  (7648 call int[13] unknown w[7645])) param : _unknown[51] "inline"
  {
    { scopeless
      (7658 return(7656 call == a 0))
    }
  }
  function ![7673](param arg a[7670] :
  (7669 call uint[115] unknown w[7666])) param : _unknown[51] "inline"
  {
    { scopeless
      (7679 return(7677 call == a 0))
    }
  }
  function ~[7694](arg a[7691] :
  (7690 call int[13] unknown w[7687])) : _unknown[51] "inline"
  {
    { scopeless
      (7716 return(7715 'u~' a))
    }
  }
  function ~[7731](arg a[7728] :
  (7727 call uint[115] unknown w[7724])) : _unknown[51] "inline"
  {
    { scopeless
      (7737 return(7736 'u~' a))
    }
  }
  function ~[7748](arg a[7745] :
  bool[10]) : _unknown[51] "inline"
  {
    (7769 call compilerError "~ is not supported on operands of boolean type")
  }
  function &[7780](arg a[7777] :
  bool[10], arg b[7783] :
  bool[10]) : _unknown[51] "inline"
  {
    { scopeless
      (7807 return(7806 '&' a b))
    }
  }
  function &[7822](arg a[7819] :
  (7818 call int[13] unknown w[7815]), arg b[7828] :
  (7827 call int[13] w)) : _unknown[51] "inline"
  {
    { scopeless
      (7836 return(7835 '&' a b))
    }
  }
  function &[7851](arg a[7848] :
  (7847 call uint[115] unknown w[7844]), arg b[7857] :
  (7856 call uint[115] w)) : _unknown[51] "inline"
  {
    { scopeless
      (7865 return(7864 '&' a b))
    }
  }
  function &[7880](arg a[7877] :
  (7876 call uint[115] unknown w[7873]), arg b[7886] :
  (7885 call int[13] w)) : _unknown[51] "inline"
  {
    { scopeless
      (7900 return(7899 '&' a(7897 call _cast(7896 call uint[115] w) b)))
    }
  }
  function &[7915](arg a[7912] :
  (7911 call int[13] unknown w[7908]), arg b[7921] :
  (7920 call uint[115] w)) : _unknown[51] "inline"
  {
    { scopeless
      (7935 return(7934 '&'(7931 call _cast(7930 call uint[115] w) a) b))
    }
  }
  function |[7946](arg a[7943] :
  bool[10], arg b[7949] :
  bool[10]) : _unknown[51] "inline"
  {
    { scopeless
      (7973 return(7972 '|' a b))
    }
  }
  function |[7988](arg a[7985] :
  (7984 call int[13] unknown w[7981]), arg b[7994] :
  (7993 call int[13] w)) : _unknown[51] "inline"
  {
    { scopeless
      (8002 return(8001 '|' a b))
    }
  }
  function |[8017](arg a[8014] :
  (8013 call uint[115] unknown w[8010]), arg b[8023] :
  (8022 call uint[115] w)) : _unknown[51] "inline"
  {
    { scopeless
      (8031 return(8030 '|' a b))
    }
  }
  function |[8046](arg a[8043] :
  (8042 call uint[115] unknown w[8039]), arg b[8052] :
  (8051 call int[13] w)) : _unknown[51] "inline"
  {
    { scopeless
      (8066 return(8065 '|' a(8063 call _cast(8062 call uint[115] w) b)))
    }
  }
  function |[8081](arg a[8078] :
  (8077 call int[13] unknown w[8074]), arg b[8087] :
  (8086 call uint[115] w)) : _unknown[51] "inline"
  {
    { scopeless
      (8101 return(8100 '|'(8097 call _cast(8096 call uint[115] w) a) b))
    }
  }
  function ^[8112](arg a[8109] :
  bool[10], arg b[8115] :
  bool[10]) : _unknown[51] "inline"
  {
    { scopeless
      (8139 return(8138 '^' a b))
    }
  }
  function ^[8154](arg a[8151] :
  (8150 call int[13] unknown w[8147]), arg b[8160] :
  (8159 call int[13] w)) : _unknown[51] "inline"
  {
    { scopeless
      (8168 return(8167 '^' a b))
    }
  }
  function ^[8183](arg a[8180] :
  (8179 call uint[115] unknown w[8176]), arg b[8189] :
  (8188 call uint[115] w)) : _unknown[51] "inline"
  {
    { scopeless
      (8197 return(8196 '^' a b))
    }
  }
  function ^[8212](arg a[8209] :
  (8208 call uint[115] unknown w[8205]), arg b[8218] :
  (8217 call int[13] w)) : _unknown[51] "inline"
  {
    { scopeless
      (8232 return(8231 '^' a(8229 call _cast(8228 call uint[115] w) b)))
    }
  }
  function ^[8247](arg a[8244] :
  (8243 call int[13] unknown w[8240]), arg b[8253] :
  (8252 call uint[115] w)) : _unknown[51] "inline"
  {
    { scopeless
      (8267 return(8266 '^'(8263 call _cast(8262 call uint[115] w) a) b))
    }
  }
  function ~[8278](param arg a[8275] :
  bool[10]) : _unknown[51] "inline"
  {
    (8283 call compilerError "~ is not supported on operands of boolean type")
  }
  function ~[8298](param arg a[8295] :
  (8294 call int[13] unknown w[8291])) param : _unknown[51] "inline"
  {
    { scopeless
      (8304 return(8303 'u~' a))
    }
  }
  function ~[8319](param arg a[8316] :
  (8315 call uint[115] unknown w[8312])) param : _unknown[51] "inline"
  {
    { scopeless
      (8325 return(8324 'u~' a))
    }
  }
  function &[8336](param arg a[8333] :
  bool[10], param arg b[8339] :
  bool[10]) param : _unknown[51] "inline"
  {
    { scopeless
      (8347 return(8346 '&' a b))
    }
  }
  function &[8362](param arg a[8359] :
  (8358 call int[13] unknown w[8355]), param arg b[8368] :
  (8367 call int[13] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (8376 return(8375 '&' a b))
    }
  }
  function &[8391](param arg a[8388] :
  (8387 call uint[115] unknown w[8384]), param arg b[8397] :
  (8396 call uint[115] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (8405 return(8404 '&' a b))
    }
  }
  function &[8420](param arg a[8417] :
  (8416 call uint[115] unknown w[8413]), param arg b[8426] :
  (8425 call int[13] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (8440 return(8439 '&' a(8437 call _cast(8436 call uint[115] w) b)))
    }
  }
  function &[8455](param arg a[8452] :
  (8451 call int[13] unknown w[8448]), param arg b[8461] :
  (8460 call uint[115] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (8475 return(8474 '&'(8471 call _cast(8470 call uint[115] w) a) b))
    }
  }
  function |[8486](param arg a[8483] :
  bool[10], param arg b[8489] :
  bool[10]) param : _unknown[51] "inline"
  {
    { scopeless
      (8497 return(8496 '|' a b))
    }
  }
  function |[8512](param arg a[8509] :
  (8508 call int[13] unknown w[8505]), param arg b[8518] :
  (8517 call int[13] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (8526 return(8525 '|' a b))
    }
  }
  function |[8541](param arg a[8538] :
  (8537 call uint[115] unknown w[8534]), param arg b[8547] :
  (8546 call uint[115] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (8555 return(8554 '|' a b))
    }
  }
  function |[8570](param arg a[8567] :
  (8566 call uint[115] unknown w[8563]), param arg b[8576] :
  (8575 call int[13] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (8590 return(8589 '|' a(8587 call _cast(8586 call uint[115] w) b)))
    }
  }
  function |[8605](param arg a[8602] :
  (8601 call int[13] unknown w[8598]), param arg b[8611] :
  (8610 call uint[115] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (8625 return(8624 '|'(8621 call _cast(8620 call uint[115] w) a) b))
    }
  }
  function ^[8636](param arg a[8633] :
  bool[10], param arg b[8639] :
  bool[10]) param : _unknown[51] "inline"
  {
    { scopeless
      (8647 return(8646 '^' a b))
    }
  }
  function ^[8662](param arg a[8659] :
  (8658 call int[13] unknown w[8655]), param arg b[8668] :
  (8667 call int[13] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (8676 return(8675 '^' a b))
    }
  }
  function ^[8691](param arg a[8688] :
  (8687 call uint[115] unknown w[8684]), param arg b[8697] :
  (8696 call uint[115] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (8705 return(8704 '^' a b))
    }
  }
  function ^[8720](param arg a[8717] :
  (8716 call uint[115] unknown w[8713]), param arg b[8726] :
  (8725 call int[13] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (8740 return(8739 '^' a(8737 call _cast(8736 call uint[115] w) b)))
    }
  }
  function ^[8755](param arg a[8752] :
  (8751 call int[13] unknown w[8748]), param arg b[8761] :
  (8760 call uint[115] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (8775 return(8774 '^'(8771 call _cast(8770 call uint[115] w) a) b))
    }
  }
  function bitshiftChecks[8784](arg a[8782]:_any[178](?), arg b[8787] :
  integral) : _unknown[51] "inline"
  {
    (8791 'use' HaltWrappers)
    if(8985 call _cond_test(8796 call < b 0))
    {
      { scopeless
        unknown msg[8892](8890 call +(8871 call +(8865 call +(8844 call +(8838 call +(8819 call + "Cannot bitshift "(8817 call _cast string[26] a)) " by ")(8842 call _cast string[26] b)) " because ")(8869 call _cast string[26] b)) " is less than 0")
        (8895 'end of statement')
      }
      (8905 call(8900 call . HaltWrappers c"boundsCheckHalt") msg)
    }
    {
      { scopeless
        if(8981 call _cond_test(8913 call >= b(8912 call numBits(8910 'typeof' a))))
        {
          { scopeless
            unknown msg[8968](8966 call +(8959 call +(8938 call +(8932 call +(8929 call +(8923 call +(8920 call + "Cannot bitshift "(8918 call _cast string[26] a)) " by ")(8927 call _cast string[26] b)) " because ")(8936 call _cast string[26] b)) " is >= the bitwidth of ")(8964 call _cast string[26](8962 'typeof' a)))
            (8971 'end of statement')
          }
          (8979 call(8974 call . HaltWrappers c"boundsCheckHalt") msg)
        }
      }
    }
  }
  function bitshiftChecks[8996](param arg a[8994]:_any[178](?), param arg b[8999] :
  integral) : _unknown[51] "inline"
  {
    if(9101 call _cond_test(9004 call < b 0))
    {
      { scopeless
        unknown msg[9034] "param"(9032 call +(9029 call +(9023 call +(9020 call +(9014 call +(9011 call + "Cannot bitshift "(9009 call _cast string[26] a)) " by ")(9018 call _cast string[26] b)) " because ")(9027 call _cast string[26] b)) " is less than 0")
        (9037 'end of statement')
      }
      (9042 call compilerError msg)
    }
    {
      { scopeless
        if(9097 call _cond_test(9050 call >= b(9049 call numBits(9047 'typeof' a))))
        {
          { scopeless
            unknown msg[9087] "param"(9085 call +(9078 call +(9075 call +(9069 call +(9066 call +(9060 call +(9057 call + "Cannot bitshift "(9055 call _cast string[26] a)) " by ")(9064 call _cast string[26] b)) " because ")(9073 call _cast string[26] b)) " is >= the bitwidth of ")(9083 call _cast string[26](9081 'typeof' a)))
            (9090 'end of statement')
          }
          (9095 call compilerError msg)
        }
      }
    }
  }
  function <<[9119](arg a[9116] :
  (9115 call int[13] unknown w[9112]), arg b[9122] :
  integral) : _unknown[51] "inline"
  {
    if(9132 call _cond_test boundsChecking)
    {
      { scopeless
        (9130 call bitshiftChecks a b)
      }
    }
    (9171 return(9169 call _cast(9168 call int[13] w)(9164 '<<'(9161 call _cast(9160 call uint[115] w) a) b)))
  }
  function <<[9185](arg a[9182] :
  (9181 call uint[115] unknown w[9178]), arg b[9188] :
  integral) : _unknown[51] "inline"
  {
    if(9198 call _cond_test boundsChecking)
    {
      { scopeless
        (9196 call bitshiftChecks a b)
      }
    }
    (9209 return(9208 '<<' a b))
  }
  function >>[9223](arg a[9220] :
  (9219 call int[13] unknown w[9216]), arg b[9226] :
  integral) : _unknown[51] "inline"
  {
    if(9236 call _cond_test boundsChecking)
    {
      { scopeless
        (9234 call bitshiftChecks a b)
      }
    }
    (9263 return(9262 '>>' a b))
  }
  function >>[9277](arg a[9274] :
  (9273 call uint[115] unknown w[9270]), arg b[9280] :
  integral) : _unknown[51] "inline"
  {
    if(9290 call _cond_test boundsChecking)
    {
      { scopeless
        (9288 call bitshiftChecks a b)
      }
    }
    (9301 return(9300 '>>' a b))
  }
  function <<[9315](param arg a[9312] :
  (9311 call int[13] unknown w[9308]), param arg b[9318] :
  integral) param : _unknown[51] "inline"
  {
    if(9328 call _cond_test boundsChecking)
    {
      { scopeless
        (9326 call bitshiftChecks a b)
      }
    }
    (9351 return(9349 call _cast(9348 call int[13] w)(9344 '<<'(9341 call _cast(9340 call uint[115] w) a) b)))
  }
  function <<[9365](param arg a[9362] :
  (9361 call uint[115] unknown w[9358]), param arg b[9368] :
  integral) param : _unknown[51] "inline"
  {
    if(9378 call _cond_test boundsChecking)
    {
      { scopeless
        (9376 call bitshiftChecks a b)
      }
    }
    (9389 return(9388 '<<' a b))
  }
  function >>[9403](param arg a[9400] :
  (9399 call int[13] unknown w[9396]), param arg b[9406] :
  integral) param : _unknown[51] "inline"
  {
    if(9416 call _cond_test boundsChecking)
    {
      { scopeless
        (9414 call bitshiftChecks a b)
      }
    }
    (9427 return(9426 '>>' a b))
  }
  function >>[9441](param arg a[9438] :
  (9437 call uint[115] unknown w[9434]), param arg b[9444] :
  integral) param : _unknown[51] "inline"
  {
    if(9454 call _cond_test boundsChecking)
    {
      { scopeless
        (9452 call bitshiftChecks a b)
      }
    }
    (9465 return(9464 '>>' a b))
  }
  function checkNotNil[9477](arg x[9474] :
  (9473 'to borrowed class from unknown'(9472 'to nilable class from type' class[232](?)))) : _unknown[51] "always propagate line file info" "inline" "private"
  {
    (9480 'import' HaltWrappers)
    if(9525 call _cond_test(9485 call || chpl_checkNilDereferences enablePostfixBangChecks))
    {
      if(9520 call _cond_test(9489 call == x nil[44]))
      {
        (9517 call(9494 call . HaltWrappers c"nilCheckHalt") "argument to ! is nil")
      }
    }
  }
  function postfix![9537](arg t[9534] :
  class[232](?)) type : _unknown[51] "inline"
  {
    (9560 call compilerWarning "applying the postfix-! operator to a type is deprecated; instead use a cast to 'class' or 'borrowed class', e.g. 'MyType :borr)
    (9570 return(9569 call _to_borrowed(9567 call _to_nonnil t)))
  }
  function postfix![9581](arg t[9578] :
  (9577 'to nilable class from type' class[232](?))) type : _unknown[51] "inline"
  {
    (9586 call compilerWarning "applying the postfix-! operator to a type is deprecated; instead use a cast to 'class' or 'borrowed class', e.g. 'MyType :borr)
    (9596 return(9595 call _to_borrowed(9593 call _to_nonnil t)))
  }
  function postfix![9607](arg x[9604] :
  (9603 'to unmanaged class from unknown' class[232](?))) : _unknown[51] "inline"
  {
    (9613 return(9612 call _to_nonnil x))
  }
  function postfix![9625](arg x[9622] :
  (9621 'to borrowed class from unknown' class[232](?))) : _unknown[51] "inline"
  {
    (9631 return(9630 call _to_nonnil x))
  }
  function postfix![9644](arg x[9641] :
  (9640 'to unmanaged class from unknown'(9639 'to nilable class from type' class[232](?)))) : _unknown[51] "always propagate line file info" "inline"
  {
    (9652 call checkNotNil(9650 call _to_borrowed x))
    (9659 return(9658 call _to_nonnil x))
  }
  function postfix![9671](arg x[9668] :
  (9667 'to borrowed class from unknown'(9666 'to nilable class from type' class[232](?)))) : _unknown[51] "always propagate line file info" "inline"
  {
    (9676 call checkNotNil x)
    (9683 return(9682 call _to_nonnil x))
  }
  function postfix![9691](arg x[9689]:_any[178](?)) : _unknown[51] "last resort"
  {
    (9714 call compilerError "postfix ! can only apply to classes")
  }
  function chpl_statementLevelSymbol[9723](arg a[9721]:_any[178](?)) : _unknown[51] "inline"
  {
  }
  function chpl_statementLevelSymbol[9734](arg a[9731] :
  _syncvar) : _unknown[51] "inline"
  {
    (9743 call(9739 call . a c"readFE"))
  }
  function chpl_statementLevelSymbol[9754](arg a[9751] :
  _singlevar) : _unknown[51] "inline"
  {
    (9763 call(9759 call . a c"readFF"))
  }
  function chpl_statementLevelSymbol[9774](arg ir[9771] :
  _iteratorRecord) : _unknown[51] "inline"
  {
    function _ir_copy_recursive[9780](arg ir[9778]:_any[178](?)) : _unknown[51] "iterator fn"
    {
      {
        unknown _indexOfInterest[9790] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[9791] "expr temp" "temp"
        (9800 'move' _iterator[9791](9798 call _getIterator ir))
        Defer
        {
          {
            (9816 call _freeIterator _iterator[9791])
          }
        }
        { scopeless type
          (9805 'move' _indexOfInterest[9790](9802 call iteratorIndex _iterator[9791]))
        }
        ForLoop[9792]
        {
          unknown e[9809] "index var" "insert auto destroy"
          (9811 'move' e[9809] _indexOfInterest[9790])
          { scopeless
            (9788 yield(9787 call chpl__initCopy e))
          }
          label _continueLabel[9795]
          _indexOfInterest[9790]
          _iterator[9791]
        }
        label _breakLabel[9796]
      }
    }
    { scopeless
      unknown irc[9831] "no copy"(9830 call _ir_copy_recursive ir)
      (9834 'end of statement')
    }
    {
      unknown _indexOfInterest[9838] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[9839] "expr temp" "temp"
      (9848 'move' _iterator[9839](9846 call _getIterator irc))
      Defer
      {
        {
          (9864 call _freeIterator _iterator[9839])
        }
      }
      { scopeless type
        (9853 'move' _indexOfInterest[9838](9850 call iteratorIndex _iterator[9839]))
      }
      ForLoop[9840]
      {
        unknown e[9857] "index var" "insert auto destroy"
        (9859 'move' e[9857] _indexOfInterest[9838])
        {
        }
        label _continueLabel[9843]
        _indexOfInterest[9838]
        _iterator[9839]
      }
      label _breakLabel[9844]
    }
  }
  function _cond_test[9881](arg x[9878] :
  (9877 'to borrowed class from unknown'(9876 'to nilable class from type' object))) : _unknown[51] "inline"
  {
    { scopeless
      (9887 return(9885 call != x nil[44]))
    }
  }
  function _cond_test[9898](arg x[9895] :
  bool[10]) : _unknown[51] "inline"
  {
    { scopeless
      (9901 return x)
    }
  }
  function _cond_test[9912](arg x[9909] :
  int[13]) : _unknown[51] "inline"
  {
    { scopeless
      (9918 return(9916 call != x 0))
    }
  }
  function _cond_test[9929](arg x[9926] :
  uint[115]) : _unknown[51] "inline"
  {
    { scopeless
      (9935 return(9933 call != x 0))
    }
  }
  function _cond_test[9946](param arg x[9943] :
  bool[10]) param : _unknown[51] "inline"
  {
    { scopeless
      (9949 return x)
    }
  }
  function _cond_test[9960](param arg x[9957] :
  integral) param : _unknown[51] "inline"
  {
    { scopeless
      (9970 return(9968 call != x(9966 call _cast(9965 'typeof' x) 0)))
    }
  }
  function _cond_test[9979](arg x[9977]:_any[178](?)) : _unknown[51] "inline"
  {
    if(10080 call _cond_test(9986 call !(9984 call <=(9982 'typeof' x) _iteratorRecord)))
    {
      { scopeless
        (10031 call compilerError "type '"(10010 call _cast string[26](10008 'typeof' x)) "' used in if or while condition")
      }
    }
    {
      { scopeless
        (10078 call compilerError "iterator or promoted expression "(10057 call _cast string[26](10055 'typeof' x)) " used in if or while condition")
      }
    }
  }
  function _cond_invalid[10097](arg x[10094] :
  (10093 'to borrowed class from unknown'(10092 'to nilable class from type' object))) param : _unknown[51]
  {
    { scopeless
      (10100 return 0)
    }
  }
  function _cond_invalid[10111](arg x[10108] :
  bool[10]) param : _unknown[51]
  {
    { scopeless
      (10114 return 0)
    }
  }
  function _cond_invalid[10125](arg x[10122] :
  int[13]) param : _unknown[51]
  {
    { scopeless
      (10128 return 0)
    }
  }
  function _cond_invalid[10139](arg x[10136] :
  uint[115]) param : _unknown[51]
  {
    { scopeless
      (10142 return 0)
    }
  }
  function _cond_invalid[10151](arg x[10149]:_any[178](?)) param : _unknown[51]
  {
    { scopeless
      (10154 return 1)
    }
  }
  function isNonnegative[10168](arg i[10165] :
  (10164 call int[13] ?[260])) : _unknown[51] "inline"
  {
    { scopeless
      (10174 return(10172 call >= i 0))
    }
  }
  function isNonnegative[10188](arg i[10185] :
  (10184 call uint[115] ?[260])) param : _unknown[51] "inline"
  {
    { scopeless
      (10191 return 1)
    }
  }
  function isNonnegative[10200](param arg i[10198]:_any[178](?)) param : _unknown[51] "inline"
  {
    { scopeless
      (10206 return(10204 call >= i 0))
    }
  }
  function _unknown[51].re[10214](arg _mt[10219]:_MT[238], ref arg this[10216] :
  chpl_anycomplex) ref : _unknown[51] "inline" "method" "no parens"
  {
    (10241 return(10240 'complex_get_real' this))
  }
  function _unknown[51].re[10249](arg _mt[10254]:_MT[238], arg this[10251] :
  chpl_anycomplex) : _unknown[51] "inline" "method" "no parens"
  {
    if(10314 call _cond_test(10262 call ==(10257 'typeof' this)(10261 call complex[140] 128)))
    {
      function creal[10273](arg x[10270] :
      (10269 call complex[140] 128)) : _unknown[51] "extern" "local args" "no fn body" "fn synchronization free"
      {
      }
      { scopeless type
        (10278 call real[16] 64)
      }
      (10287 return(10286 call creal this))
    }
    {
      function crealf[10298](arg x[10295] :
      (10294 call complex[140] 64)) : _unknown[51] "extern" "local args" "no fn body" "fn synchronization free"
      {
      }
      { scopeless type
        (10303 call real[16] 32)
      }
      (10312 return(10311 call crealf this))
    }
  }
  function _unknown[51].im[10324](arg _mt[10329]:_MT[238], ref arg this[10326] :
  chpl_anycomplex) ref : _unknown[51] "inline" "method" "no parens"
  {
    (10351 return(10350 'complex_get_imag' this))
  }
  function _unknown[51].im[10359](arg _mt[10364]:_MT[238], arg this[10361] :
  chpl_anycomplex) : _unknown[51] "inline" "method" "no parens"
  {
    if(10424 call _cond_test(10372 call ==(10367 'typeof' this)(10371 call complex[140] 128)))
    {
      function cimag[10383](arg x[10380] :
      (10379 call complex[140] 128)) : _unknown[51] "extern" "local args" "no fn body" "fn synchronization free"
      {
      }
      { scopeless type
        (10388 call real[16] 64)
      }
      (10397 return(10396 call cimag this))
    }
    {
      function cimagf[10408](arg x[10405] :
      (10404 call complex[140] 64)) : _unknown[51] "extern" "local args" "no fn body" "fn synchronization free"
      {
      }
      { scopeless type
        (10413 call real[16] 32)
      }
      (10422 return(10421 call cimagf this))
    }
  }
  function _i2r[10441](arg a[10438] :
  (10437 call imag[130] unknown w[10434])) : _unknown[51] "inline"
  {
    { scopeless
      (10467 return(10466 'cast'(10464 call real[16] w) a))
    }
  }
  function _r2i[10482](arg a[10479] :
  (10478 call real[16] unknown w[10475])) : _unknown[51] "inline"
  {
    { scopeless
      (10492 return(10491 'cast'(10489 call imag[130] w) a))
    }
  }
  function min[10507](arg x[10504] :
  (10503 call int[13] unknown w[10500]), arg y[10513] :
  (10512 call int[13] w)) : _unknown[51] "inline"
  {
    { scopeless
      (10525 return(10522 IfExpr (10518 call < x y) then
      { scopeless
        x
      } else
      { scopeless
        y
      } ))
    }
  }
  function max[10540](arg x[10537] :
  (10536 call int[13] unknown w[10533]), arg y[10546] :
  (10545 call int[13] w)) : _unknown[51] "inline"
  {
    { scopeless
      (10558 return(10555 IfExpr (10551 call > x y) then
      { scopeless
        x
      } else
      { scopeless
        y
      } ))
    }
  }
  function min[10573](arg x[10570] :
  (10569 call uint[115] unknown w[10566]), arg y[10579] :
  (10578 call uint[115] w)) : _unknown[51] "inline"
  {
    { scopeless
      (10591 return(10588 IfExpr (10584 call < x y) then
      { scopeless
        x
      } else
      { scopeless
        y
      } ))
    }
  }
  function max[10606](arg x[10603] :
  (10602 call uint[115] unknown w[10599]), arg y[10612] :
  (10611 call uint[115] w)) : _unknown[51] "inline"
  {
    { scopeless
      (10624 return(10621 IfExpr (10617 call > x y) then
      { scopeless
        x
      } else
      { scopeless
        y
      } ))
    }
  }
  function min[10639](arg x[10636] :
  (10635 call real[16] unknown w[10632]), arg y[10645] :
  (10644 call real[16] w)) : _unknown[51] "inline"
  {
    { scopeless
      (10663 return(10660 IfExpr (10656 call |(10650 call < x y)(10655 call isnan x)) then
      { scopeless
        x
      } else
      { scopeless
        y
      } ))
    }
  }
  function max[10678](arg x[10675] :
  (10674 call real[16] unknown w[10671]), arg y[10684] :
  (10683 call real[16] w)) : _unknown[51] "inline"
  {
    { scopeless
      (10702 return(10699 IfExpr (10695 call |(10689 call > x y)(10694 call isnan x)) then
      { scopeless
        x
      } else
      { scopeless
        y
      } ))
    }
  }
  function min[10711](arg x[10709]:_any[178](?), arg y[10713]:_any[178](?)) : _unknown[51] "inline"
  {
    { scopeless
      (10724 return(10721 IfExpr (10717 call < x y) then
      { scopeless
        x
      } else
      { scopeless
        y
      } ))
    }
  }
  function max[10733](arg x[10731]:_any[178](?), arg y[10735]:_any[178](?)) : _unknown[51] "inline"
  {
    { scopeless
      (10746 return(10743 IfExpr (10739 call > x y) then
      { scopeless
        x
      } else
      { scopeless
        y
      } ))
    }
  }
  function min[10755](arg x[10753]:_any[178](?), arg y[10757]:_any[178](?), arg z[10761]:_any[178](?) ...) : _unknown[51] "inline"
  {
    { scopeless
      (10774 return(10773 call min(10769 call min x y)(10772 'expand_tuple' z)))
    }
  }
  function max[10783](arg x[10781]:_any[178](?), arg y[10785]:_any[178](?), arg z[10789]:_any[178](?) ...) : _unknown[51] "inline"
  {
    { scopeless
      (10802 return(10801 call max(10797 call max x y)(10800 'expand_tuple' z)))
    }
  }
  function min[10817](param arg x[10814] :
  (10813 call int[13] unknown w[10810]), param arg y[10823] :
  (10822 call int[13] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (10835 return(10832 IfExpr (10828 call < x y) then
      { scopeless
        x
      } else
      { scopeless
        y
      } ))
    }
  }
  function max[10850](param arg x[10847] :
  (10846 call int[13] unknown w[10843]), param arg y[10856] :
  (10855 call int[13] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (10868 return(10865 IfExpr (10861 call > x y) then
      { scopeless
        x
      } else
      { scopeless
        y
      } ))
    }
  }
  function min[10883](param arg x[10880] :
  (10879 call uint[115] unknown w[10876]), param arg y[10889] :
  (10888 call uint[115] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (10901 return(10898 IfExpr (10894 call < x y) then
      { scopeless
        x
      } else
      { scopeless
        y
      } ))
    }
  }
  function max[10916](param arg x[10913] :
  (10912 call uint[115] unknown w[10909]), param arg y[10922] :
  (10921 call uint[115] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (10934 return(10931 IfExpr (10927 call > x y) then
      { scopeless
        x
      } else
      { scopeless
        y
      } ))
    }
  }
  function min[10949](param arg x[10946] :
  (10945 call real[16] unknown w[10942]), param arg y[10955] :
  (10954 call real[16] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (10967 return(10964 IfExpr (10960 call < x y) then
      { scopeless
        x
      } else
      { scopeless
        y
      } ))
    }
  }
  function max[10982](param arg x[10979] :
  (10978 call real[16] unknown w[10975]), param arg y[10988] :
  (10987 call real[16] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (11000 return(10997 IfExpr (10993 call > x y) then
      { scopeless
        x
      } else
      { scopeless
        y
      } ))
    }
  }
  function min[11015](param arg x[11012] :
  (11011 call imag[130] unknown w[11008]), param arg y[11021] :
  (11020 call imag[130] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (11033 return(11030 IfExpr (11026 call < x y) then
      { scopeless
        x
      } else
      { scopeless
        y
      } ))
    }
  }
  function max[11048](param arg x[11045] :
  (11044 call imag[130] unknown w[11041]), param arg y[11054] :
  (11053 call imag[130] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (11066 return(11063 IfExpr (11059 call > x y) then
      { scopeless
        x
      } else
      { scopeless
        y
      } ))
    }
  }
  function min[11075](arg x[11073]:_any[178](?), arg y[11077]:_any[178](?)) : _unknown[51] "inline"
  {
    (11110 call compilerError "min() and max() are not supported for atomic arguments - apply read() to those arguments first")
  }
  where {
    (11087 call ||(11082 call isAtomic x)(11086 call isAtomic y))
  }
  function max[11120](arg x[11118]:_any[178](?), arg y[11122]:_any[178](?)) : _unknown[51] "inline"
  {
    (11137 call compilerError "min() and max() are not supported for atomic arguments - apply read() to those arguments first")
  }
  where {
    (11132 call ||(11127 call isAtomic x)(11131 call isAtomic y))
  }
  type ArrayInit[11152] def heuristicInit[11144]:ArrayInit[11152] def noInit[11146]:ArrayInit[11152] def serialInit[11148]:ArrayInit[11152] def parallelInit[11150]:ArrayInit[11152]
  {
  }
  { scopeless
    unknown chpl_defaultArrayInitMethod[11163] "config" "param"(11160 call . ArrayInit c"heuristicInit")
    (11166 'end of statement')
  }
  { scopeless
    unknown chpl_arrayInitMethodRuntimeSelectable[11168] "config" "param" 0
    (11171 'end of statement')
  }
  { scopeless
    unknown chpl_arrayInitMethod[11173] "private" chpl_defaultArrayInitMethod
    (11176 'end of statement')
  }
  function chpl_setArrayInitMethod[11183](arg initMethod[11180] :
  ArrayInit) : _unknown[51] "inline"
  {
    if(11232 call _cond_test(11187 call == chpl_arrayInitMethodRuntimeSelectable 0))
    {
      (11229 call compilerWarning "must set 'chpl_arrayInitMethodRuntimeSelectable' for " "'chpl_setArrayInitMethod' to have any effect")
    }
    { scopeless
      const oldInit[11238] "const" chpl_arrayInitMethod
      (11241 'end of statement')
    }
    (11244 call = chpl_arrayInitMethod initMethod)
    (11248 return oldInit)
  }
  function chpl_getArrayInitMethod[11254]() : _unknown[51] "inline"
  {
    if(11268 call _cond_test(11258 call == chpl_arrayInitMethodRuntimeSelectable 0))
    {
      (11261 return chpl_defaultArrayInitMethod)
    }
    {
      (11265 return chpl_arrayInitMethod)
    }
  }
  function init_elts_method[11279](arg s[11277]:_any[178](?), arg t[11281]:_any[178](?)) : _unknown[51]
  {
    { scopeless
      unknown initMethod[11286](11285 call chpl_getArrayInitMethod)
      (11289 'end of statement')
    }
    if(11424 call _cond_test(11293 call == s 0))
    {
      (11302 call = initMethod(11299 call . ArrayInit c"noInit"))
    }
    {
      { scopeless
        if(11419 call _cond_test(11307 call ! rootLocaleInitialized))
        {
          (11316 call = initMethod(11313 call . ArrayInit c"serialInit"))
        }
        {
          { scopeless
            if(11415 call _cond_test(11325 call == initMethod(11322 call . ArrayInit c"heuristicInit")))
            {
              { scopeless
                const elemsizeInBytes[11350] "const"(11347 IfExpr (11330 call isNumericType t) then
                { scopeless
                  (11334 call numBytes t)
                } else
                { scopeless
                  (11346 call(11341 call .(11338 call c_sizeof t) c"safeCast") int[13])
                } )
                (11353 'end of statement')
              }
              { scopeless
                const arrsizeInBytes[11365] "const"(11363 call *(11361 call(11356 call . s c"safeCast") int[13]) elemsizeInBytes)
                (11368 'end of statement')
              }
              { scopeless
                unknown heuristicThresh[11378] "param"(11376 call *(11373 call * 2 1024) 1024)
                (11381 'end of statement')
              }
              { scopeless
                const heuristicWantsPar[11386] "const"(11384 call > arrsizeInBytes heuristicThresh)
                (11389 'end of statement')
              }
              if(11411 call _cond_test heuristicWantsPar)
              {
                (11398 call = initMethod(11395 call . ArrayInit c"parallelInit"))
              }
              {
                (11407 call = initMethod(11404 call . ArrayInit c"serialInit"))
              }
            }
          }
        }
      }
    }
    (11430 return initMethod)
  }
  function init_elts[11438](arg x[11436]:_any[178](?), arg s[11440]:_any[178](?), arg t[11442]:_any[178](?), arg lo[11449] =
  (11447 call _cast(11446 'typeof' s) 0)) : _unknown[51]
  {
    { scopeless
      unknown initMethod[11458](11457 call init_elts_method s t)
      (11461 'end of statement')
    }
    {
      unknown tmp[11621] "expr temp" "maybe param" "maybe type" "temp"
      (11623 'move' tmp[11621] initMethod)
      if(11628 call _cond_test(11625 call == tmp[11621](11466 call . ArrayInit c"noInit")))
      {
        (11470 return)
      }
      {
        if(11634 call _cond_test(11631 call == tmp[11621](11476 call . ArrayInit c"serialInit")))
        {
          {
            unknown _indexOfInterest[11517] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[11518] "expr temp" "temp"
            (11527 'move' _iterator[11518](11525 call _getIterator(11535 call chpl_direct_range_iter lo(11532 call - s 1) 1)))
            Defer
            {
              {
                (11551 call _freeIterator _iterator[11518])
              }
            }
            { scopeless type
              (11540 'move' _indexOfInterest[11517](11537 call iteratorIndex _iterator[11518]))
            }
            ForLoop[11519]
            {
              unknown i[11544] "index var" "insert auto destroy"
              (11546 'move' i[11544] _indexOfInterest[11517])
              {
                { scopeless
                  unknown y[11489] "no auto destroy" "unsafe" t
                  (11492 'end of statement')
                }
                (11515 'array_set_first' x i y)
              }
              label _continueLabel[11522]
              _indexOfInterest[11517]
              _iterator[11518]
            }
            label _breakLabel[11523]
          }
        }
        {
          if(11641 call _cond_test(11638 call == tmp[11621](11562 call . ArrayInit c"parallelInit")))
          {
            Forall {
              induction variables:
                
                unknown i[11588] "index var" "insert auto destroy"
              iterated expressions:
                (11572 call chpl_build_bounded_range lo(11570 call - s 1))
              shadow variables:
              other variables
                forall body
              {
                { scopeless
                  unknown y[11575] "no auto destroy" "unsafe" t
                  (11578 'end of statement')
                }
                (11585 'array_set_first' x i y)
              }
            }
          }
          {
            (11615 call halt "ArrayInit.heuristicInit should have been made concrete")
          }
        }
      }
    }
  }
  { scopeless type
    void[4]
  }
  unknown chpl_mem_descInt_t[11653] "extern" "no doc" "type variable"(11652 call int[13] 16)
  type _ddata[11695](?) unknown eltType[11657] "type variable" function _ddata[11695](?).this[11666](arg _mt[11699]:_MT[238], arg this[11697]:_ddata[11695](?), arg i[11663] :
  integral) ref : _unknown[51] "inline" "method" "primary method"
  {
    (11689 return(11688 'array_get' this i))
  }
  function chpl_isDdata[11708](arg t[11705] :
  _ddata) param : _unknown[51]
  {
    { scopeless
      (11711 return 1)
    }
  }
  function chpl_isDdata[11720](arg t[11718]:_any[178](?)) param : _unknown[51]
  {
    { scopeless
      (11723 return 0)
    }
  }
  function =[11738](ref arg a[11735] :
  (11734 call _ddata unknown t[11731]), arg b[11744] :
  (11743 call _ddata t)) : _unknown[51] "assignop" "inline"
  {
    (11751 '=' a b)
  }
  function _ddata_shift[11760](arg eltType[11758]:_any[178](?), arg data[11766] :
  (11765 call _ddata eltType), arg shift[11770] :
  integral) : _unknown[51] "inline"
  {
    { scopeless
      unknown ret[11777](11776 call _ddata eltType)
      (11780 'end of statement')
    }
    (11805 'shift_base_pointer' ret data shift)
    (11808 return ret)
  }
  function _ddata_sizeof_element[11818](arg t[11815] :
  _ddata) : _unknown[51] "inline"
  {
    (11844 return(11842 call _cast size_t(11840 'sizeof_ddata_element' t)))
  }
  { scopeless type
    size_t
  }
  function _ddata_sizeof_element[11856](arg x[11853] :
  _ddata) : _unknown[51] "inline"
  {
    (11864 return(11863 call _ddata_sizeof_element(11861 'typeof' x)))
  }
  { scopeless type
    size_t
  }
  function _ddata_allocate_noinit[11874](arg eltType[11872]:_any[178](?), arg size[11877] :
  integral, out arg callPostAlloc[11881] :
  bool[10], arg subloc[11885] =
  c_sublocid_none) : _unknown[51] "llvm return noalias"
  {
    function chpl_mem_array_alloc[11894](arg nmemb[11891] :
    size_t, arg eltSize[11897] :
    size_t, arg subloc[11901] :
    chpl_sublocID_t, ref arg callPostAlloc[11905] :
    bool[10]) : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "fn synchronization free"
    {
    }
    { scopeless type
      c_void_ptr
    }
    { scopeless
      unknown ret[11917](11916 call _ddata eltType)
      (11920 'end of statement')
    }
    (11939 call = ret(11937 call _cast(11936 'typeof' ret)(11934 call chpl_mem_array_alloc(11925 call _cast size_t size)(11931 call _ddata_sizeof_element ret) subloc callPostAlloc)))
    (11943 return ret)
  }
  function _ddata_allocate_postalloc[11953](arg data[11950] :
  _ddata, arg size[11956] :
  integral) : _unknown[51] "inline"
  {
    function chpl_mem_array_postAlloc[11965](arg data[11962] :
    c_void_ptr, arg nmemb[11968] :
    size_t, arg eltSize[11972] :
    size_t) : void[4] "extern" "insert line file info" "local args" "no fn body" "fn synchronization free"
    {
    }
    (11992 call chpl_mem_array_postAlloc(11981 call _cast c_void_ptr data)(11986 call _cast size_t size)(11991 call _ddata_sizeof_element data))
  }
  function _ddata_allocate[12000](arg eltType[11998]:_any[178](?), arg size[12003] :
  integral, arg subloc[12007] =
  c_sublocid_none, param arg initElts[12012] :
  bool[10] =
  1) : _unknown[51] "inline"
  {
    { scopeless
      unknown callPostAlloc[12017] bool[10]
      (12020 'end of statement')
    }
    { scopeless
      unknown ret[12026](12025 call _ddata eltType)
      (12029 'end of statement')
    }
    (12038 call = ret(12037 call _ddata_allocate_noinit eltType size callPostAlloc subloc))
    if(12049 call _cond_test initElts)
    {
      { scopeless
        (12047 call init_elts ret size eltType)
      }
    }
    if(12062 call _cond_test callPostAlloc)
    {
      (12059 call _ddata_allocate_postalloc ret size)
    }
    (12067 return ret)
  }
  function _ddata_reallocate[12075](arg oldDdata[12073]:_any[178](?), arg eltType[12077]:_any[178](?), arg oldSize[12080] :
  integral, arg newSize[12084] :
  integral, arg subloc[12088] =
  c_sublocid_none) : _unknown[51] "inline"
  {
    function chpl_mem_array_realloc[12097](arg ptr[12094] :
    c_void_ptr, arg oldNmemb[12100] :
    size_t, arg newNmemb[12104] :
    size_t, arg eltSize[12108] :
    size_t, arg subloc[12112] :
    chpl_sublocID_t, ref arg callPostAlloc[12116] :
    bool[10]) : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "fn synchronization free"
    {
    }
    { scopeless type
      c_void_ptr
    }
    { scopeless
      unknown callPostAlloc[12125] bool[10]
      (12128 'end of statement')
    }
    { scopeless
      unknown needsDestroy[12171] "param"(12170 'needs auto destroy'(12169 'deref'(12168 call oldDdata 0)))
      (12174 'end of statement')
    }
    if(12270 call _cond_test(12180 call && needsDestroy(12178 call > oldSize newSize)))
    {
      if(12265 call _cond_test(12185 call _deinitElementsIsParallel eltType))
      {
        Forall {
          induction variables:
            
            unknown i[12203] "index var" "insert auto destroy"
          iterated expressions:
            (12192 call chpl_build_bounded_range newSize(12190 call - oldSize 1))
          shadow variables:
          other variables
            forall body
          {
            (12200 call chpl__autoDestroy(12198 call oldDdata i))
          }
        }
      }
      {
        {
          unknown _indexOfInterest[12223] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[12224] "expr temp" "temp"
          (12233 'move' _iterator[12224](12231 call _getIterator(12241 call chpl_direct_range_iter newSize(12238 call - oldSize 1) 1)))
          Defer
          {
            {
              (12257 call _freeIterator _iterator[12224])
            }
          }
          { scopeless type
            (12246 'move' _indexOfInterest[12223](12243 call iteratorIndex _iterator[12224]))
          }
          ForLoop[12225]
          {
            unknown i[12250] "index var" "insert auto destroy"
            (12252 'move' i[12250] _indexOfInterest[12223])
            { scopeless
              (12221 call chpl__autoDestroy(12219 call oldDdata i))
            }
            label _continueLabel[12228]
            _indexOfInterest[12223]
            _iterator[12224]
          }
          label _breakLabel[12229]
        }
      }
    }
    { scopeless
      const newDdata[12305] "const"(12303 call _cast(12302 'typeof' oldDdata)(12300 call chpl_mem_array_realloc(12277 call _cast c_void_ptr oldDdata)(12286 call(12281 call . oldSize c"safeCast") size_t)(12293 call(12288 call . newSize c"safeCast") size_t)(12297 call _ddata_sizeof_element oldDdata) subloc callPostAlloc))
      (12308 'end of statement')
    }
    (12316 call init_elts newDdata newSize eltType(lo = oldSize))
    if(12376 call _cond_test callPostAlloc)
    {
      function chpl_mem_array_postRealloc[12325](arg oldData[12322] :
      c_void_ptr, arg oldNmemb[12328] :
      size_t, arg newData[12332] :
      c_void_ptr, arg newNmemb[12336] :
      size_t, arg eltSize[12340] :
      size_t) : void[4] "extern" "insert line file info" "local args" "no fn body" "fn synchronization free"
      {
      }
      (12374 call chpl_mem_array_postRealloc(12349 call _cast c_void_ptr oldDdata)(12358 call(12353 call . oldSize c"safeCast") size_t)(12361 call _cast c_void_ptr newDdata)(12369 call(12364 call . newSize c"safeCast") size_t)(12373 call _ddata_sizeof_element oldDdata))
    }
    (12381 return newDdata)
  }
  function _ddata_free[12391](arg data[12388] :
  _ddata, arg size[12394] :
  integral) : _unknown[51] "inline"
  {
    function chpl_mem_array_free[12403](arg data[12400] :
    c_void_ptr, arg nmemb[12406] :
    size_t, arg eltSize[12410] :
    size_t) : void[4] "extern" "insert line file info" "local args" "no fn body" "fn synchronization free"
    {
    }
    (12430 call chpl_mem_array_free(12419 call _cast c_void_ptr data)(12424 call _cast size_t size)(12429 call _ddata_sizeof_element data))
  }
  function ==[12440](arg a[12437] :
  _ddata, arg b[12443] :
  _ddata) : _unknown[51] "inline"
  {
    (12469 return(12468 'ptr_eq' a b))
  }
  where {
    (12462 call ==(12454 call _to_borrowed(12450 call . a c"eltType"))(12461 call _to_borrowed(12457 call . b c"eltType")))
  }
  function ==[12481](arg a[12478] :
  _ddata, arg b[12484] :
  _nilType) : _unknown[51] "inline"
  {
    (12492 return(12491 'ptr_eq' a nil[44]))
  }
  function ==[12503](arg a[12500] :
  _nilType, arg b[12506] :
  _ddata) : _unknown[51] "inline"
  {
    (12514 return(12513 'ptr_eq' nil[44] b))
  }
  function !=[12525](arg a[12522] :
  _ddata, arg b[12528] :
  _ddata) : _unknown[51] "inline"
  {
    (12546 return(12545 'ptr_neq' a b))
  }
  where {
    (12539 call ==(12532 call . a c"eltType")(12536 call . b c"eltType"))
  }
  function !=[12558](arg a[12555] :
  _ddata, arg b[12561] :
  _nilType) : _unknown[51] "inline"
  {
    (12569 return(12568 'ptr_neq' a nil[44]))
  }
  function !=[12580](arg a[12577] :
  _nilType, arg b[12583] :
  _ddata) : _unknown[51] "inline"
  {
    (12591 return(12590 'ptr_neq' nil[44] b))
  }
  function _cond_test[12602](arg x[12599] :
  _ddata) : _unknown[51] "inline"
  {
    { scopeless
      (12608 return(12606 call != x nil[44]))
    }
  }
  type _ref[12619](?) unknown _val[12614]
  function chpl_rt_reset_task_spawn[12624]() : _unknown[51] "inline"
  {
    function chpl_task_reset_spawn_order[12628]() : void[4] "extern" "local args" "no fn body" "fn synchronization free"
    {
    }
    (12635 call chpl_task_reset_spawn_order)
  }
  function chpl_resetTaskSpawn[12643](arg numTasks[12641]:_any[178](?)) : _unknown[51]
  {
    { scopeless
      const dptpl[12659] "const"(12656 IfExpr (12647 call == dataParTasksPerLocale 0) then
      { scopeless
        (12652 call . here c"maxTaskPar")
      } else
      { scopeless
        dataParTasksPerLocale
      } )
      (12662 'end of statement')
    }
    if(12672 call _cond_test(12666 call >= numTasks dptpl))
    {
      { scopeless
        (12670 call chpl_rt_reset_task_spawn)
      }
    }
  }
  { scopeless
    unknown useAtomicTaskCnt[12699] "config" "param"(12697 call != CHPL_NETWORK_ATOMICS "none")
    (12702 'end of statement')
  }
  type _EndCountBase[12715] unknown errors[12705] chpl_TaskErrors unknown taskList[12710] c_void_ptr
  type _EndCount[12769](?) unknown iType[12721] "type variable" unknown taskType[12724] "type variable" unknown i[12728] iType unknown taskCnt[12733] taskType function _EndCount[12769](?).init[12741](arg _mt[12773]:_MT[238], arg this[12771]:_EndCount[12769](?), arg iType[12739]:_any[178](?), arg taskType[12743]:_any[178](?)) : _unknown[51] "method" "primary method"
  {
    (12752 call =(12748 call . this c"iType") iType)
    (12763 call =(12759 call . this c"taskType") taskType)
  } _EndCountBase
  function _endCountAlloc[12782](param arg forceLocalTypes[12779] :
  bool[10]) : _unknown[51] "dont disable remote value forwarding" "inline"
  {
    unknown taskCntType[12797] "type variable"(12794 IfExpr (12788 call &&(12785 call ! forceLocalTypes) useAtomicTaskCnt) then
    { scopeless
      (12791 call chpl__atomicType int[13])
    } else
    { scopeless
      int[13]
    } )
    if(12834 call _cond_test forceLocalTypes)
    {
      (12815 return(12804 'new'(_chpl_manager = unmanaged[220](?))(12814 call _EndCount(iType =(12809 call chpl__processorAtomicType int[13]))(taskType = taskCntType))))
    }
    {
      (12831 return(12820 'new'(_chpl_manager = unmanaged[220](?))(12830 call _EndCount(iType =(12825 call chpl__atomicType int[13]))(taskType = taskCntType))))
    }
  }
  unknown _remoteEndCountType[12845] "type variable"(12844 'typeof'(12843 call _endCountAlloc 0))
  function _endCountFree[12854](arg e[12851] :
  _EndCount) : _unknown[51] "dont disable remote value forwarding" "inline"
  {
    (12861 call chpl__delete(12859 call _to_unmanaged e))
  }
  function _upEndCount[12873](arg e[12870] :
  _EndCount, param arg countRunningTasks[12876] =
  1) : _unknown[51] "dont disable remote value forwarding" "no remote memory fence" "task spawn impl fn"
  {
    if(12970 call _cond_test(12887 call isAtomic(12883 call . e c"taskCnt")))
    {
      (12907 call(12896 call .(12891 call . e c"i") c"add") 1(12904 call . memoryOrder c"release"))
      (12923 call(12914 call .(12911 call . e c"taskCnt") c"add") 1(12920 call . memoryOrder c"release"))
    }
    {
      (12931 call chpl_rmem_consist_fence(12927 call . memoryOrder c"release"))
      {
        const tmp[12962] "const" "temp"
        (12963 'move' tmp[12962](12960 'deref'(12959 '_wide_get_locale' e)))
        {
          (12948 call(12939 call .(12936 call . e c"i") c"add") 1(12945 call . memoryOrder c"release"))
          (12956 call +=(12952 call . e c"taskCnt") 1)
        }
        (12966 'elided on block' 0 tmp[12962])
      }
    }
    if(12987 call _cond_test countRunningTasks)
    {
      (12984 call(12979 call . here c"runningTaskCntAdd") 1)
    }
  }
  function _upEndCount[12999](arg e[12996] :
  _EndCount, param arg countRunningTasks[13002] =
  1, arg numTasks[13005]:_any[178](?)) : _unknown[51] "dont disable remote value forwarding" "no remote memory fence" "task spawn impl fn"
  {
    (13023 call(13011 call .(13008 call . e c"i") c"add")(13016 call _cast int[13] numTasks)(13020 call . memoryOrder c"release"))
    if(13053 call _cond_test countRunningTasks)
    {
      (13039 call(13028 call . here c"runningTaskCntAdd")(13036 call -(13033 call _cast int[13] numTasks) 1))
    }
    {
      (13050 call(13045 call . here c"runningTaskCntSub") 1)
    }
  }
  function chpl_comm_task_end[13061]() : _unknown[51] "extern" "local args" "no fn body" "task complete impl fn"
  {
  }
  { scopeless type
    void[4]
  }
  function chpl_after_forall_fence[13069]() : _unknown[51] "task complete impl fn"
  {
    (13073 call chpl_comm_task_end)
  }
  function _downEndCount[13084](arg e[13081] :
  _EndCount, arg err[13089] :
  (13088 'to unmanaged class from unknown'(13087 'to nilable class from type' Error))) : _unknown[51] "dont disable remote value forwarding" "down end count fn" "task complete impl fn"
  {
    (13096 call chpl_save_task_error e err)
    (13101 call chpl_comm_task_end)
    (13118 call(13109 call .(13104 call . e c"i") c"sub") 1(13115 call . memoryOrder c"release"))
  }
  function _waitEndCount[13128](arg e[13125] :
  _EndCount, param arg countRunningTasks[13131] =
  1) : _unknown[51] throws "dont disable remote value forwarding" "task join impl fn" "unchecked throws"
  {
    (13140 call(13135 call . here c"runningTaskCntSub") 1)
    (13151 call chpl_taskListExecute(13147 call . e c"taskList"))
    (13170 call(13159 call .(13154 call . e c"i") c"waitFor") 0(13167 call . memoryOrder c"acquire"))
    if(13223 call _cond_test countRunningTasks)
    {
      { scopeless
        const taskDec[13198] "const"(13195 IfExpr (13179 call isAtomic(13175 call . e c"taskCnt")) then
        { scopeless
          (13190 call(13186 call .(13181 call . e c"taskCnt") c"read"))
        } else
        { scopeless
          (13192 call . e c"taskCnt")
        } )
        (13201 'end of statement')
      }
      (13212 call(13204 call . here c"runningTaskCntSub")(13209 call - taskDec 1))
    }
    {
      (13220 call(13215 call . here c"runningTaskCntAdd") 1)
    }
    if(13254 call _cond_test(13240 call !(13239 call(13235 call .(13230 call . e c"errors") c"empty"))))
    {
      { scopeless
        (13252 'throw'(13244 'new'(_chpl_manager = _owned[30](?))(13251 call TaskErrors(13247 call . e c"errors"))))
      }
    }
  }
  function _waitEndCount[13267](arg e[13264] :
  _EndCount, param arg countRunningTasks[13270] =
  1, arg numTasks[13273]:_any[178](?)) : _unknown[51] throws "dont disable remote value forwarding" "task join impl fn" "unchecked throws"
  {
    (13281 call chpl_taskListExecute(13277 call . e c"taskList"))
    (13297 call(13288 call .(13285 call . e c"i") c"waitFor") 0(13294 call . memoryOrder c"acquire"))
    if(13324 call _cond_test countRunningTasks)
    {
      (13312 call(13301 call . here c"runningTaskCntSub")(13309 call -(13306 call _cast int[13] numTasks) 1))
    }
    {
      (13321 call(13316 call . here c"runningTaskCntAdd") 1)
    }
    if(13351 call _cond_test(13337 call !(13336 call(13332 call .(13329 call . e c"errors") c"empty"))))
    {
      { scopeless
        (13349 'throw'(13341 'new'(_chpl_manager = _owned[30](?))(13348 call TaskErrors(13344 call . e c"errors"))))
      }
    }
  }
  function _upDynamicEndCount[13364](param arg countRunningTasks[13361] =
  1) : _unknown[51] "task spawn impl fn"
  {
    { scopeless
      unknown e[13387](13386 'get dynamic end count')
      (13390 'end of statement')
    }
    (13396 call _upEndCount e countRunningTasks)
  }
  function _downDynamicEndCount[13408](arg err[13405] :
  (13404 'to unmanaged class from unknown'(13403 'to nilable class from type' Error))) : _unknown[51] "dont disable remote value forwarding" "down end count fn" "task complete impl fn"
  {
    { scopeless
      unknown e[13413](13412 'get dynamic end count')
      (13416 'end of statement')
    }
    (13422 call _downEndCount e err)
  }
  function chpl_waitDynamicEndCount[13432](param arg countRunningTasks[13429] =
  1) : _unknown[51] throws "task join impl fn" "unchecked throws"
  {
    { scopeless
      unknown e[13437](13436 'get dynamic end count')
      (13440 'end of statement')
    }
    (13446 call _waitEndCount e countRunningTasks)
    if(13471 call _cond_test(13457 call !(13456 call(13452 call .(13449 call . e c"errors") c"empty"))))
    {
      { scopeless
        (13469 'throw'(13461 'new'(_chpl_manager = _owned[30](?))(13468 call TaskErrors(13464 call . e c"errors"))))
      }
    }
  }
  function _do_command_line_cast[13482](arg t[13480]:_any[178](?), arg x[13485] :
  c_string) : _unknown[51] throws
  {
    if(13515 call _cond_test(13491 call isSyncType t))
    {
      { scopeless
        (13513 call compilerError "config variables of sync type are not supported")
      }
    }
    if(13546 call _cond_test(13524 call isSingleType t))
    {
      { scopeless
        (13544 call compilerError "config variables of single type are not supported")
      }
    }
    if(13576 call _cond_test(13554 call isAtomicType t))
    {
      { scopeless
        (13574 call compilerError "config variables of atomic type are not supported")
      }
    }
    { scopeless
      unknown str[13582] string[26]
      (13585 'end of statement')
    }
    Try!
    {
      {
        (13591 call = str(13590 call createStringWithNewBuffer x))
      }
    }
    if(13613 call _cond_test(13600 call == t string[26]))
    {
      (13603 return str)
    }
    {
      (13610 return(13608 call _cast t str))
    }
  }
  function _command_line_cast[13625](param arg s[13622] :
  c_string, arg t[13627]:_any[178](?), arg x[13630] :
  c_string) : _unknown[51] "command line setting"
  {
    Try!
    {
      {
        (13638 return(13637 call _do_command_line_cast t x))
      }
    }
  }
  function chpl_typeSupportsPrimitiveCast[13651](arg t[13649]:_any[178](?)) param : _unknown[51] "inline"
  {
    { scopeless
      (13669 return(13667 call ||(13661 call ||(13656 call isBoolType t)(13660 call isIntegralType t))(13666 call isRealType t)))
    }
  }
  function _cast[13680](arg t[13677] :
  chpl_anybool, arg x[13683] :
  chpl_anybool) : _unknown[51] "inline"
  {
    { scopeless
      (13691 return(13690 'cast' t x))
    }
  }
  function _cast[13702](arg t[13699] :
  integral, arg x[13705] :
  chpl_anybool) : _unknown[51] "inline"
  {
    { scopeless
      (13713 return(13712 'cast' t x))
    }
  }
  function _cast[13724](arg t[13721] :
  chpl_anyreal, arg x[13727] :
  chpl_anybool) : _unknown[51] "inline"
  {
    { scopeless
      (13735 return(13734 'cast' t x))
    }
  }
  function _cast[13746](arg t[13743] :
  chpl_anybool, arg x[13749] :
  integral) : _unknown[51] "inline"
  {
    { scopeless
      (13757 return(13756 'cast' t x))
    }
  }
  function _cast[13768](arg t[13765] :
  integral, arg x[13771] :
  integral) : _unknown[51] "inline"
  {
    { scopeless
      (13779 return(13778 'cast' t x))
    }
  }
  function _cast[13790](arg t[13787] :
  chpl_anyreal, arg x[13793] :
  integral) : _unknown[51] "inline"
  {
    { scopeless
      (13801 return(13800 'cast' t x))
    }
  }
  function _cast[13812](arg t[13809] :
  chpl_anybool, arg x[13815] :
  chpl_anyreal) : _unknown[51] "inline"
  {
    { scopeless
      (13823 return(13822 'cast' t x))
    }
  }
  function _cast[13834](arg t[13831] :
  integral, arg x[13837] :
  chpl_anyreal) : _unknown[51] "inline"
  {
    { scopeless
      (13845 return(13844 'cast' t x))
    }
  }
  function _cast[13856](arg t[13853] :
  chpl_anyreal, arg x[13859] :
  chpl_anyreal) : _unknown[51] "inline"
  {
    { scopeless
      (13867 return(13866 'cast' t x))
    }
  }
  function _cast[13878](arg t[13875] :
  chpl_anybool, arg x[13881] :
  enum[187](?)) : _unknown[51] throws "inline"
  {
    if(13907 call _cond_test chpl_warnUnstable)
    {
      (13904 call compilerWarning "enum-to-bool casts are likely to be deprecated in the future")
    }
    (13919 return(13917 call _cast bool[10](13914 call _cast int[13] x)))
  }
  function _cast[13929](arg t[13926] :
  enum[187](?), arg x[13932] :
  enum[187](?)) : _unknown[51] "inline"
  {
    { scopeless
      (13941 return x)
    }
  }
  where {
    (13938 call ==(13936 'typeof' x) t)
  }
  function _cast[13953](arg t[13950] :
  chpl_anyreal, arg x[13956] :
  enum[187](?)) : _unknown[51] throws "inline"
  {
    if(13984 call _cond_test chpl_warnUnstable)
    {
      (13981 call compilerWarning "enum-to-float casts are likely to be deprecated in the future")
    }
    (13996 return(13994 call _cast real[16](13991 call _cast int[13] x)))
  }
  function _cast[14007](arg t[14004] :
  (14003 'to unmanaged class from unknown' class[232](?)), arg x[14010] :
  _nilType) : _unknown[51] "inline"
  {
    (14040 call compilerError(14037 call + "cannot cast nil to "(14035 call _cast string[26] t)))
  }
  function _cast[14052](arg t[14049] :
  (14048 'to borrowed class from unknown' class[232](?)), arg x[14055] :
  _nilType) : _unknown[51] "inline"
  {
    (14067 call compilerError(14064 call + "cannot cast nil to "(14062 call _cast string[26] t)))
  }
  function _cast[14080](arg t[14077] :
  (14076 'to unmanaged class from unknown'(14075 'to nilable class from type' class[232](?))), arg x[14085] :
  (14084 'to borrowed class from unknown'(14083 'to nilable class from type' class[232](?)))) : _unknown[51] "inline"
  {
    (14102 return(14101 'cast' t x))
  }
  where {
    (14096 call isSubtype(14093 call _to_unmanaged(14091 'typeof' x)) t)
  }
  function _cast[14116](arg t[14113] :
  (14112 'to unmanaged class from unknown'(14111 'to nilable class from type' class[232](?))), arg x[14120] :
  (14119 'to borrowed class from unknown' class[232](?))) : _unknown[51] "inline"
  {
    (14140 return(14139 'cast' t x))
  }
  where {
    (14134 call isSubtype(14131 call _to_nonnil(14129 call _to_unmanaged(14127 'typeof' x))) t)
  }
  function _cast[14153](arg t[14150] :
  (14149 'to unmanaged class from unknown' class[232](?)), arg x[14157] :
  (14156 'to borrowed class from unknown' class[232](?))) : _unknown[51] "inline"
  {
    (14174 return(14173 'cast' t x))
  }
  where {
    (14168 call isSubtype(14165 call _to_unmanaged(14163 'typeof' x)) t)
  }
  function _cast[14187](arg t[14184] :
  (14183 'to borrowed class from unknown' class[232](?)), arg x[14192] :
  (14191 'to unmanaged class from unknown'(14190 'to nilable class from type' class[232](?)))) : _unknown[51] throws "inline"
  {
    if(14217 call _cond_test(14206 call == x nil[44]))
    {
      (14214 'throw'(14210 'new'(_chpl_manager = _owned[30](?))(14213 call NilClassError)))
    }
    (14227 return(14226 'cast' t x))
  }
  where {
    (14203 call isSubtype(14200 call _to_nonnil(14198 'typeof' x)) t)
  }
  function _cast[14239](arg t[14236] :
  (14235 'to borrowed class from unknown' class[232](?)), arg x[14244] :
  (14243 'to borrowed class from unknown'(14242 'to nilable class from type' class[232](?)))) : _unknown[51] throws "inline"
  {
    if(14269 call _cond_test(14258 call == x nil[44]))
    {
      (14266 'throw'(14262 'new'(_chpl_manager = _owned[30](?))(14265 call NilClassError)))
    }
    (14279 return(14278 'cast' t x))
  }
  where {
    (14255 call isSubtype(14252 call _to_nonnil(14250 'typeof' x)) t)
  }
  function _cast[14291](arg t[14288] :
  (14287 'to unmanaged class from unknown' class[232](?)), arg x[14296] :
  (14295 'to borrowed class from unknown'(14294 'to nilable class from type' class[232](?)))) : _unknown[51] throws "inline"
  {
    if(14324 call _cond_test(14313 call == x nil[44]))
    {
      (14321 'throw'(14317 'new'(_chpl_manager = _owned[30](?))(14320 call NilClassError)))
    }
    (14334 return(14333 'cast' t x))
  }
  where {
    (14310 call isSubtype(14307 call _to_nonnil(14305 call _to_unmanaged(14303 'typeof' x))) t)
  }
  function _cast[14346](arg t[14343] :
  (14342 'to borrowed class from unknown' class[232](?)), arg x[14351] :
  (14350 'to borrowed class from unknown'(14349 'to nilable class from type' class[232](?)))) : _unknown[51] throws "inline"
  {
    if(14376 call _cond_test(14365 call == x nil[44]))
    {
      (14373 'throw'(14369 'new'(_chpl_manager = _owned[30](?))(14372 call NilClassError)))
    }
    { scopeless
      unknown tmp[14404](14403 'dynamic_cast' t x)
      (14407 'end of statement')
    }
    if(14421 call _cond_test(14410 call == tmp nil[44]))
    {
      (14418 'throw'(14414 'new'(_chpl_manager = _owned[30](?))(14417 call ClassCastError)))
    }
    (14432 return(14431 call _to_nonnil(14429 call _to_borrowed tmp)))
  }
  where {
    (14362 call isProperSubtype t(14361 call _to_nonnil(14359 'typeof' x)))
  }
  function _cast[14445](arg t[14442] :
  (14441 'to borrowed class from unknown'(14440 'to nilable class from type' class[232](?))), arg x[14450] :
  (14449 'to borrowed class from unknown'(14448 'to nilable class from type' class[232](?)))) : _unknown[51] "inline"
  {
    if(14467 call _cond_test(14461 call == x nil[44]))
    {
      (14464 return nil[44])
    }
    { scopeless
      unknown tmp[14477](14476 'dynamic_cast' t x)
      (14480 'end of statement')
    }
    (14488 return(14487 call _to_nilable(14485 call _to_borrowed tmp)))
  }
  where {
    (14458 call isProperSubtype t(14457 'typeof' x))
  }
  function _cast[14500](arg t[14497] :
  (14496 'to unmanaged class from unknown' class[232](?)), arg x[14505] :
  (14504 'to borrowed class from unknown'(14503 'to nilable class from type' class[232](?)))) : _unknown[51] throws "inline"
  {
    if(14533 call _cond_test(14522 call == x nil[44]))
    {
      (14530 'throw'(14526 'new'(_chpl_manager = _owned[30](?))(14529 call NilClassError)))
    }
    { scopeless
      unknown tmp[14543](14542 'dynamic_cast' t x)
      (14546 'end of statement')
    }
    if(14560 call _cond_test(14549 call == tmp nil[44]))
    {
      (14557 'throw'(14553 'new'(_chpl_manager = _owned[30](?))(14556 call ClassCastError)))
    }
    (14571 return(14570 call _to_nonnil(14568 call _to_unmanaged tmp)))
  }
  where {
    (14519 call isProperSubtype t(14518 call _to_nonnil(14516 call _to_unmanaged(14514 'typeof' x))))
  }
  function _cast[14584](arg t[14581] :
  (14580 'to unmanaged class from unknown'(14579 'to nilable class from type' class[232](?))), arg x[14589] :
  (14588 'to borrowed class from unknown'(14587 'to nilable class from type' class[232](?)))) : _unknown[51] "inline"
  {
    if(14609 call _cond_test(14603 call == x nil[44]))
    {
      (14606 return nil[44])
    }
    { scopeless
      unknown tmp[14619](14618 'dynamic_cast' t x)
      (14622 'end of statement')
    }
    (14630 return(14629 call _to_nilable(14627 call _to_unmanaged tmp)))
  }
  where {
    (14600 call isProperSubtype t(14599 call _to_unmanaged(14597 'typeof' x)))
  }
  function _cast[14643](arg t[14640] :
  (14639 'to unmanaged class from unknown'(14638 'to nilable class from type' class[232](?))), arg x[14647] :
  (14646 'to borrowed class from unknown' class[232](?))) : _unknown[51] "inline"
  {
    if(14670 call _cond_test(14664 call == x nil[44]))
    {
      (14667 return nil[44])
    }
    { scopeless
      unknown tmp[14680](14679 'dynamic_cast' t x)
      (14683 'end of statement')
    }
    (14691 return(14690 call _to_nilable(14688 call _to_unmanaged tmp)))
  }
  where {
    (14661 call isProperSubtype(14657 call _to_nonnil(14655 call _to_borrowed t))(14660 'typeof' x))
  }
  function _cast[14702](arg t[14699] :
  chpl_anycomplex, arg x[14705] :
  bool[10]) : _unknown[51] "inline"
  {
    { scopeless
      (14716 return(14714 call _cast t(14711 call _build_tuple x 0)))
    }
  }
  function _cast[14727](arg t[14724] :
  chpl_anycomplex, arg x[14730] :
  integral) : _unknown[51] "inline"
  {
    { scopeless
      (14741 return(14739 call _cast t(14736 call _build_tuple x 0)))
    }
  }
  function _cast[14752](arg t[14749] :
  chpl_anycomplex, arg x[14755] :
  chpl_anyreal) : _unknown[51] "inline"
  {
    { scopeless
      (14766 return(14764 call _cast t(14761 call _build_tuple x 0)))
    }
  }
  function _cast[14777](arg t[14774] :
  chpl_anycomplex, arg x[14780] :
  chpl_anyimag) : _unknown[51] "inline"
  {
    { scopeless
      (14794 return(14792 call _cast t(14789 call _build_tuple 0(14787 call _i2r x))))
    }
  }
  function _cast[14805](arg t[14802] :
  chpl_anycomplex, arg x[14808] :
  chpl_anycomplex) : _unknown[51] "inline"
  {
    { scopeless
      (14825 return(14823 call _cast t(14820 call _build_tuple(14812 call . x c"re")(14816 call . x c"im"))))
    }
  }
  function _cast[14836](arg t[14833] :
  chpl_anycomplex, arg x[14839] :
  enum[187](?)) : _unknown[51] throws "inline"
  {
    { scopeless
      (14853 return(14851 call _cast t(14848 call _build_tuple(14844 call _cast real[16] x) 0)))
    }
  }
  function _cast[14864](arg t[14861] :
  chpl_anyimag, arg x[14867] :
  bool[10]) : _unknown[51] "inline"
  {
    { scopeless
      (14884 return(14881 IfExpr  x then
      { scopeless
        (14875 call _cast t 1.0i)
      } else
      { scopeless
        (14879 call _cast t 0.0i)
      } ))
    }
  }
  function _cast[14895](arg t[14892] :
  chpl_anyimag, arg x[14898] :
  integral) : _unknown[51] "inline"
  {
    { scopeless
      (14906 return(14905 'cast' t x))
    }
  }
  function _cast[14917](arg t[14914] :
  chpl_anyimag, arg x[14920] :
  chpl_anyreal) : _unknown[51] "inline"
  {
    { scopeless
      (14928 return(14927 'cast' t x))
    }
  }
  function _cast[14939](arg t[14936] :
  chpl_anyimag, arg x[14942] :
  chpl_anyimag) : _unknown[51] "inline"
  {
    { scopeless
      (14950 return(14949 'cast' t x))
    }
  }
  function _cast[14961](arg t[14958] :
  chpl_anyimag, arg x[14964] :
  chpl_anycomplex) : _unknown[51] "inline"
  {
    { scopeless
      (14975 return(14974 'cast' t(14971 call . x c"im")))
    }
  }
  function _cast[14986](arg t[14983] :
  chpl_anyimag, arg x[14989] :
  enum[187](?)) : _unknown[51] throws "inline"
  {
    { scopeless
      (14999 return(14997 call _cast imag[130](14994 call _cast real[16] x)))
    }
  }
  function _cast[15010](arg t[15007] :
  chpl_anyreal, arg x[15013] :
  chpl_anycomplex) : _unknown[51] "inline"
  {
    { scopeless
      unknown y[15017] t
      (15020 'end of statement')
    }
    (15030 call = y(15028 call _cast t(15024 call . x c"re")))
    (15034 return y)
  }
  function _cast[15044](arg t[15041] :
  integral, arg x[15047] :
  chpl_anycomplex) : _unknown[51] "inline"
  {
    { scopeless
      unknown y[15051] t
      (15054 'end of statement')
    }
    (15064 call = y(15062 call _cast t(15058 call . x c"re")))
    (15068 return y)
  }
  function _cast[15078](arg t[15075] :
  chpl_anyreal, arg x[15081] :
  chpl_anyimag) : _unknown[51] "inline"
  {
    { scopeless
      (15089 return(15088 'cast' t x))
    }
  }
  function _cast[15100](arg t[15097] :
  integral, arg x[15103] :
  chpl_anyimag) : _unknown[51] "inline"
  {
    { scopeless
      (15111 return(15110 'cast' t x))
    }
  }
  function _cast[15122](arg t[15119] :
  chpl_anybool, arg x[15125] :
  chpl_anyimag) : _unknown[51] "inline"
  {
    { scopeless
      (15137 return(15134 IfExpr (15130 call != x 0.0i) then
      { scopeless
        1
      } else
      { scopeless
        0
      } ))
    }
  }
  function chpl__initCopy[15146](arg t[15144]:_any[178](?)) type : _unknown[51] "init copy fn" "inline"
  {
    (15167 call compilerError "illegal assignment of type to value")
    (15171 return t)
  }
  function chpl__initCopy[15181](arg x[15178] :
  _tuple) : _unknown[51] "compiler generated" "init copy fn" "inline" "last resort"
  {
  }
  function chpl__initCopy[15190](const arg x[15188]:_any[178](?)) : _unknown[51] "compiler generated" "init copy fn" "inline" "last resort" "suppress lvalue error"
  {
    (15193 return x)
  }
  function chpl__autoCopy[15204](arg x[15201] :
  _tuple) : _unknown[51] "auto copy fn" "compiler generated" "inline" "last resort"
  {
  }
  function chpl__unref[15215](arg x[15212] :
  _tuple) : _unknown[51] "compiler generated" "inline" "last resort" "unref fn"
  {
  }
  function chpl__autoCopy[15226](arg ir[15223] :
  _iteratorRecord) : _unknown[51] "auto copy fn" "compiler generated" "inline"
  {
    (15229 return ir)
  }
  function chpl__autoCopy[15238](const arg x[15236]:_any[178](?)) : _unknown[51] "auto copy fn" "compiler generated" "inline" "last resort" "suppress lvalue error"
  {
    { scopeless
      (15244 return(15243 call chpl__initCopy x))
    }
  }
  function chpl__unalias[15253](arg x[15251]:_any[178](?)) : _unknown[51] "compiler generated" "inline" "last resort" "unalias fn"
  {
    { scopeless
      unknown ret[15256] "no copy" x
      (15259 'end of statement')
    }
    (15262 return ret)
  }
  function chpl__unalias[15272](arg x[15269] :
  _iteratorClass) : _unknown[51] "inline" "unalias fn"
  {
    { scopeless
      unknown ret[15275] "no copy" x
      (15278 'end of statement')
    }
    (15281 return ret)
  }
  function chpl__unalias[15291](const  ref arg x[15288] :
  _iteratorRecord) : _unknown[51] "inline" "unalias fn"
  {
    { scopeless
      unknown ret[15294] "no copy" x
      (15297 'end of statement')
    }
    (15300 return ret)
  }
  function chpl__autoDestroy[15310](arg x[15307] :
  object) : _unknown[51] "auto destroy fn" "compiler generated" "inline" "last resort"
  {
  }
  function chpl__autoDestroy[15319](arg t[15317]:_any[178](?)) : _unknown[51] "auto destroy fn" "compiler generated" "inline" "last resort"
  {
  }
  function chpl__autoDestroy[15331](arg x[15328] :
  unknown t[15326]) : _unknown[51] "auto destroy fn" "compiler generated" "inline" "last resort"
  {
    (15352 'call destructor' x)
  }
  function chpl__autoDestroy[15363](arg ir[15360] :
  _iteratorRecord) : _unknown[51] "auto destroy fn" "inline"
  {
  }
  function chpl__autoDestroy[15374](arg x[15371] :
  _distribution) : _unknown[51] "auto destroy fn" "dont disable remote value forwarding" "removable auto destroy"
  {
    (15379 'call destructor' x)
  }
  function chpl__autoDestroy[15390](arg x[15387] :
  _domain) : _unknown[51] "auto destroy fn" "dont disable remote value forwarding" "removable auto destroy"
  {
    (15395 'call destructor' x)
  }
  function chpl__autoDestroy[15408](arg x[15405] :
  (15402 call chpl__buildArrayRuntimeType nil[44])) : _unknown[51] "auto destroy fn" "dont disable remote value forwarding" "removable auto destroy"
  {
    (15413 'call destructor' x)
  }
  function chpl__delete[15422](arg arg[15420]:_any[178](?)) : _unknown[51] "inline" "no borrow convert"
  {
    if(15452 call _cond_test(15428 call chpl_isDdata(15426 'typeof' arg)))
    {
      { scopeless
        (15450 call compilerError "cannot delete data class")
      }
    }
    if(15484 call _cond_test(15461 call ==(15459 'typeof' arg) _nilType))
    {
      { scopeless
        (15482 call compilerError "should not delete 'nil'")
      }
    }
    if(15516 call _cond_test(15494 call isSubtype(15491 'typeof' arg) _owned))
    {
      { scopeless
        (15514 call compilerError "'delete' is not allowed on an owned class type")
      }
    }
    if(15548 call _cond_test(15526 call isSubtype(15523 'typeof' arg) _shared))
    {
      { scopeless
        (15546 call compilerError "'delete' is not allowed on a shared class type")
      }
    }
    if(15580 call _cond_test(15556 call isRecord arg))
    {
      { scopeless
        (15578 call compilerError "'delete' is not allowed on records")
      }
    }
    if(15623 call _cond_test(15593 call !(15592 call isCoercible(15587 'typeof' arg)(15591 'to borrowed class from unknown'(15590 'to nilable class from type' class[232](?))))))
    {
      { scopeless
        (15621 call compilerError "'delete' is not allowed on non-class type "(15619 call _cast string[26](15617 'typeof' arg)))
      }
    }
    if(15659 call _cond_test(15636 call !(15635 call isCoercible(15630 'typeof' arg)(15634 'to unmanaged class from unknown'(15633 'to nilable class from type' class[232](?))))))
    {
      { scopeless
        (15657 call compilerError "'delete' can only be applied to unmanaged classes")
      }
    }
    if(15718 call _cond_test(15666 call != arg nil[44]))
    {
      (15677 call(15673 call .(15669 call postfix! arg) c"deinit"))
      {
        const tmp[15710] "const" "temp"
        (15711 'move' tmp[15710](15708 'deref'(15707 '_wide_get_locale' arg)))
        { scopeless
          (15705 call chpl_here_free(15703 '_wide_get_addr' arg))
        }
        (15714 'elided on block' 0 tmp[15710])
      }
    }
  }
  function chpl__delete[15732](arg arr[15729] :
  (15726 call chpl__buildArrayRuntimeType nil[44])) : _unknown[51]
  {
    Forall {
      induction variables:
        
        unknown a[15742] "index var" "insert auto destroy"
      iterated expressions:
        arr
      shadow variables:
      other variables
        forall body
      {
        (15739 call chpl__delete a)
      }
    }
  }
  function chpl__delete[15752](arg arg[15750]:_any[178](?), arg args[15755]:_any[178](?) ...) : _unknown[51] "inline"
  {
    (15761 call chpl__delete arg)
    {
      unknown i[15784] 0
      unknown tmp[15785] "maybe param" "temp"
      (15797 'move' tmp[15785](15795 call chpl_compute_low_param_loop_bound 0(15772 call -(15768 call . args c"size") 1)))
      unknown tmp[15786] "maybe param" "temp"
      (15810 'move' tmp[15786](15808 call chpl_compute_high_param_loop_bound 0(15802 call -(15804 call . args c"size") 1)))
      unknown tmp[15787] "maybe param" "temp"
      (15813 'move' tmp[15787] 1)
      ParamForLoop[15815]
      { i[15784] tmp[15785] tmp[15786] tmp[15787]
        { scopeless
          (15782 call chpl__delete(15780 call args i))
        }
      }
      label _unused_continueLabel[15789]
      label _breakLabel[15788]
    }
  }
  function =[15832](ref arg a[15829] :
  c_void_ptr, arg b[15835] :
  c_void_ptr) : _unknown[51] "assignop" "inline"
  {
    (15842 '=' a b)
  }
  function ==[15853](arg a[15850] :
  c_void_ptr, arg b[15856] :
  c_void_ptr) : _unknown[51] "inline"
  {
    (15864 return(15863 'ptr_eq' a b))
  }
  function !=[15875](arg a[15872] :
  c_void_ptr, arg b[15878] :
  c_void_ptr) : _unknown[51] "inline"
  {
    (15886 return(15885 'ptr_neq' a b))
  }
  function func[15893]() type : _unknown[51] "inline"
  {
    (15915 return(15914 'create fn type' void[4]))
  }
  function func[15924](arg rettype[15922]:_any[178](?)) type : _unknown[51] "inline"
  {
    (15930 return(15929 'create fn type' rettype))
  }
  function func[15942](arg t[15939]:_any[178](?) ..., arg rettype[15944]:_any[178](?)) type : _unknown[51] "inline"
  {
    (15952 return(15951 'create fn type'(15949 'expand_tuple' t) rettype))
  }
  function isIterator[15963](arg ic[15960] :
  _iteratorClass) param : _unknown[51]
  {
    { scopeless
      (15966 return 1)
    }
  }
  function isIterator[15977](arg ir[15974] :
  _iteratorRecord) param : _unknown[51]
  {
    { scopeless
      (15980 return 1)
    }
  }
  function isIterator[15989](arg not_an_iterator[15987]:_any[178](?)) param : _unknown[51]
  {
    { scopeless
      (15992 return 0)
    }
  }
  function +=[16007](ref arg lhs[16004] :
  (16003 call int[13] unknown w[16000]), arg rhs[16013] :
  (16012 call int[13] w)) : _unknown[51] "assignop" "inline"
  {
    (16036 '+=' lhs rhs)
  }
  function +=[16051](ref arg lhs[16048] :
  (16047 call uint[115] unknown w[16044]), arg rhs[16057] :
  (16056 call uint[115] w)) : _unknown[51] "assignop" "inline"
  {
    (16064 '+=' lhs rhs)
  }
  function +=[16079](ref arg lhs[16076] :
  (16075 call real[16] unknown w[16072]), arg rhs[16085] :
  (16084 call real[16] w)) : _unknown[51] "assignop" "inline"
  {
    (16092 '+=' lhs rhs)
  }
  function +=[16107](ref arg lhs[16104] :
  (16103 call imag[130] unknown w[16100]), arg rhs[16113] :
  (16112 call imag[130] w)) : _unknown[51] "assignop" "inline"
  {
    (16120 '+=' lhs rhs)
  }
  function +=[16129](ref arg lhs[16127]:_any[178](?), arg rhs[16131]:_any[178](?)) : _unknown[51] "assignop" "inline"
  {
    (16138 call = lhs(16136 call + lhs rhs))
  }
  function -=[16154](ref arg lhs[16151] :
  (16150 call int[13] unknown w[16147]), arg rhs[16160] :
  (16159 call int[13] w)) : _unknown[51] "assignop" "inline"
  {
    (16183 '-=' lhs rhs)
  }
  function -=[16198](ref arg lhs[16195] :
  (16194 call uint[115] unknown w[16191]), arg rhs[16204] :
  (16203 call uint[115] w)) : _unknown[51] "assignop" "inline"
  {
    (16211 '-=' lhs rhs)
  }
  function -=[16226](ref arg lhs[16223] :
  (16222 call real[16] unknown w[16219]), arg rhs[16232] :
  (16231 call real[16] w)) : _unknown[51] "assignop" "inline"
  {
    (16239 '-=' lhs rhs)
  }
  function -=[16254](ref arg lhs[16251] :
  (16250 call imag[130] unknown w[16247]), arg rhs[16260] :
  (16259 call imag[130] w)) : _unknown[51] "assignop" "inline"
  {
    (16267 '-=' lhs rhs)
  }
  function -=[16276](ref arg lhs[16274]:_any[178](?), arg rhs[16278]:_any[178](?)) : _unknown[51] "assignop" "inline"
  {
    (16285 call = lhs(16283 call - lhs rhs))
  }
  function *=[16301](ref arg lhs[16298] :
  (16297 call int[13] unknown w[16294]), arg rhs[16307] :
  (16306 call int[13] w)) : _unknown[51] "assignop" "inline"
  {
    (16330 '*=' lhs rhs)
  }
  function *=[16345](ref arg lhs[16342] :
  (16341 call uint[115] unknown w[16338]), arg rhs[16351] :
  (16350 call uint[115] w)) : _unknown[51] "assignop" "inline"
  {
    (16358 '*=' lhs rhs)
  }
  function *=[16373](ref arg lhs[16370] :
  (16369 call real[16] unknown w[16366]), arg rhs[16379] :
  (16378 call real[16] w)) : _unknown[51] "assignop" "inline"
  {
    (16386 '*=' lhs rhs)
  }
  function *=[16395](ref arg lhs[16393]:_any[178](?), arg rhs[16397]:_any[178](?)) : _unknown[51] "assignop" "inline"
  {
    (16404 call = lhs(16402 call * lhs rhs))
  }
  function /=[16420](ref arg lhs[16417] :
  (16416 call int[13] unknown w[16413]), arg rhs[16426] :
  (16425 call int[13] w)) : _unknown[51] "assignop" "inline"
  {
    if(16444 call _cond_test chpl_checkDivByZero)
    {
      { scopeless
        if(16439 call _cond_test(16432 call == rhs 0))
        {
          { scopeless
            (16437 call halt "Attempt to divide by zero")
          }
        }
      }
    }
    (16470 '/=' lhs rhs)
  }
  function /=[16484](ref arg lhs[16481] :
  (16480 call uint[115] unknown w[16477]), arg rhs[16490] :
  (16489 call uint[115] w)) : _unknown[51] "assignop" "inline"
  {
    if(16508 call _cond_test chpl_checkDivByZero)
    {
      { scopeless
        if(16503 call _cond_test(16496 call == rhs 0))
        {
          { scopeless
            (16501 call halt "Attempt to divide by zero")
          }
        }
      }
    }
    (16518 '/=' lhs rhs)
  }
  function /=[16532](ref arg lhs[16529] :
  (16528 call real[16] unknown w[16525]), arg rhs[16538] :
  (16537 call real[16] w)) : _unknown[51] "assignop" "inline"
  {
    (16545 '/=' lhs rhs)
  }
  function /=[16554](ref arg lhs[16552]:_any[178](?), arg rhs[16556]:_any[178](?)) : _unknown[51] "assignop" "inline"
  {
    (16563 call = lhs(16561 call / lhs rhs))
  }
  function %=[16579](ref arg lhs[16576] :
  (16575 call int[13] unknown w[16572]), arg rhs[16585] :
  (16584 call int[13] w)) : _unknown[51] "assignop" "inline"
  {
    if(16603 call _cond_test chpl_checkDivByZero)
    {
      { scopeless
        if(16598 call _cond_test(16591 call == rhs 0))
        {
          { scopeless
            (16596 call halt "Attempt to compute a modulus by zero")
          }
        }
      }
    }
    (16629 '%=' lhs rhs)
  }
  function %=[16643](ref arg lhs[16640] :
  (16639 call uint[115] unknown w[16636]), arg rhs[16649] :
  (16648 call uint[115] w)) : _unknown[51] "assignop" "inline"
  {
    if(16667 call _cond_test chpl_checkDivByZero)
    {
      { scopeless
        if(16662 call _cond_test(16655 call == rhs 0))
        {
          { scopeless
            (16660 call halt "Attempt to compute a modulus by zero")
          }
        }
      }
    }
    (16677 '%=' lhs rhs)
  }
  function %=[16691](ref arg lhs[16688] :
  (16687 call real[16] unknown w[16684]), arg rhs[16697] :
  (16696 call real[16] w)) : _unknown[51] "assignop" "inline"
  {
    (16704 '%=' lhs rhs)
  }
  function %=[16713](ref arg lhs[16711]:_any[178](?), arg rhs[16715]:_any[178](?)) : _unknown[51] "assignop" "inline"
  {
    (16722 call = lhs(16720 call % lhs rhs))
  }
  function **=[16732](ref arg lhs[16730]:_any[178](?), arg rhs[16734]:_any[178](?)) : _unknown[51] "assignop" "inline"
  {
    (16741 call = lhs(16739 call ** lhs rhs))
  }
  function &=[16757](ref arg lhs[16754] :
  (16753 call int[13] unknown w[16750]), arg rhs[16763] :
  (16762 call int[13] w)) : _unknown[51] "assignop" "inline"
  {
    (16786 '&=' lhs rhs)
  }
  function &=[16801](ref arg lhs[16798] :
  (16797 call uint[115] unknown w[16794]), arg rhs[16807] :
  (16806 call uint[115] w)) : _unknown[51] "assignop" "inline"
  {
    (16814 '&=' lhs rhs)
  }
  function &=[16823](ref arg lhs[16821]:_any[178](?), arg rhs[16825]:_any[178](?)) : _unknown[51] "assignop" "inline"
  {
    (16832 call = lhs(16830 call & lhs rhs))
  }
  function |=[16848](ref arg lhs[16845] :
  (16844 call int[13] unknown w[16841]), arg rhs[16854] :
  (16853 call int[13] w)) : _unknown[51] "assignop" "inline"
  {
    (16877 '|=' lhs rhs)
  }
  function |=[16892](ref arg lhs[16889] :
  (16888 call uint[115] unknown w[16885]), arg rhs[16898] :
  (16897 call uint[115] w)) : _unknown[51] "assignop" "inline"
  {
    (16905 '|=' lhs rhs)
  }
  function |=[16914](ref arg lhs[16912]:_any[178](?), arg rhs[16916]:_any[178](?)) : _unknown[51] "assignop" "inline"
  {
    (16923 call = lhs(16921 call | lhs rhs))
  }
  function ^=[16939](ref arg lhs[16936] :
  (16935 call int[13] unknown w[16932]), arg rhs[16945] :
  (16944 call int[13] w)) : _unknown[51] "assignop" "inline"
  {
    (16968 '^=' lhs rhs)
  }
  function ^=[16983](ref arg lhs[16980] :
  (16979 call uint[115] unknown w[16976]), arg rhs[16989] :
  (16988 call uint[115] w)) : _unknown[51] "assignop" "inline"
  {
    (16996 '^=' lhs rhs)
  }
  function ^=[17005](ref arg lhs[17003]:_any[178](?), arg rhs[17007]:_any[178](?)) : _unknown[51] "assignop" "inline"
  {
    (17014 call = lhs(17012 call ^ lhs rhs))
  }
  function >>=[17030](ref arg lhs[17027] :
  (17026 call int[13] unknown w[17023]), arg rhs[17036] :
  (17035 call int[13] w)) : _unknown[51] "assignop" "inline"
  {
    (17059 '>>=' lhs rhs)
  }
  function >>=[17074](ref arg lhs[17071] :
  (17070 call uint[115] unknown w[17067]), arg rhs[17080] :
  (17079 call uint[115] w)) : _unknown[51] "assignop" "inline"
  {
    (17087 '>>=' lhs rhs)
  }
  function >>=[17096](ref arg lhs[17094]:_any[178](?), arg rhs[17098]:_any[178](?)) : _unknown[51] "assignop" "inline"
  {
    (17105 call = lhs(17103 call >> lhs rhs))
  }
  function <<=[17121](ref arg lhs[17118] :
  (17117 call int[13] unknown w[17114]), arg rhs[17127] :
  (17126 call int[13] w)) : _unknown[51] "assignop" "inline"
  {
    (17150 '<<=' lhs rhs)
  }
  function <<=[17165](ref arg lhs[17162] :
  (17161 call uint[115] unknown w[17158]), arg rhs[17171] :
  (17170 call uint[115] w)) : _unknown[51] "assignop" "inline"
  {
    (17178 '<<=' lhs rhs)
  }
  function <<=[17187](ref arg lhs[17185]:_any[178](?), arg rhs[17189]:_any[178](?)) : _unknown[51] "assignop" "inline"
  {
    (17196 call = lhs(17194 call << lhs rhs))
  }
  function +=[17208](ref arg D[17205] :
  _domain, arg idx[17210]:_any[178](?)) : _unknown[51] "assignop" "inline"
  {
    (17218 call(17213 call . D c"add") idx)
  }
  function -=[17229](ref arg D[17226] :
  _domain, arg idx[17231]:_any[178](?)) : _unknown[51] "assignop" "inline"
  {
    (17241 call(17236 call . D c"remove") idx)
  }
  function +=[17252](ref arg D[17249] :
  _domain, param arg idx[17254]:_any[178](?)) : _unknown[51] "assignop" "inline"
  {
    (17262 call(17257 call . D c"add") idx)
  }
  function -=[17273](ref arg D[17270] :
  _domain, param arg idx[17275]:_any[178](?)) : _unknown[51] "assignop" "inline"
  {
    (17283 call(17278 call . D c"remove") idx)
  }
  function <=>[17292](ref arg lhs[17290]:_any[178](?), ref arg rhs[17294]:_any[178](?)) : _unknown[51] "inline" "ignore transfer errors"
  {
    { scopeless
      unknown tmp[17297] lhs
      (17300 'end of statement')
    }
    (17304 call = lhs rhs)
    (17309 call = rhs tmp)
  }
  function +[17323](arg a[17320] :
  (17319 call uint[115] 64), arg b[17329] :
  (17328 call int[13] 64)) : _unknown[51] "inline"
  {
    (17335 call _throwOpError "+")
  }
  function +[17349](arg a[17346] :
  (17345 call int[13] 64), arg b[17355] :
  (17354 call uint[115] 64)) : _unknown[51] "inline"
  {
    (17361 call _throwOpError "+")
  }
  function +[17375](arg a[17372] :
  (17371 call uint[115] 64), param arg b[17381] :
  (17380 call uint[115] 64)) : _unknown[51] "inline"
  {
    (17389 return(17388 '+' a b))
  }
  function +[17403](param arg a[17400] :
  (17399 call uint[115] 64), arg b[17409] :
  (17408 call uint[115] 64)) : _unknown[51] "inline"
  {
    (17417 return(17416 '+' a b))
  }
  function +[17431](arg a[17428] :
  (17427 call int[13] 64), param arg b[17437] :
  (17436 call int[13] 64)) : _unknown[51] "inline"
  {
    (17445 return(17444 '+' a b))
  }
  function +[17459](param arg a[17456] :
  (17455 call int[13] 64), arg b[17465] :
  (17464 call int[13] 64)) : _unknown[51] "inline"
  {
    (17473 return(17472 '+' a b))
  }
  function -[17487](arg a[17484] :
  (17483 call uint[115] 64), arg b[17493] :
  (17492 call int[13] 64)) : _unknown[51] "inline"
  {
    (17499 call _throwOpError "-")
  }
  function -[17513](arg a[17510] :
  (17509 call int[13] 64), arg b[17519] :
  (17518 call uint[115] 64)) : _unknown[51] "inline"
  {
    (17525 call _throwOpError "-")
  }
  function -[17539](arg a[17536] :
  (17535 call uint[115] 64), param arg b[17545] :
  (17544 call uint[115] 64)) : _unknown[51] "inline"
  {
    (17553 return(17552 '-' a b))
  }
  function -[17567](param arg a[17564] :
  (17563 call uint[115] 64), arg b[17573] :
  (17572 call uint[115] 64)) : _unknown[51] "inline"
  {
    (17581 return(17580 '-' a b))
  }
  function -[17595](arg a[17592] :
  (17591 call int[13] 64), param arg b[17601] :
  (17600 call int[13] 64)) : _unknown[51] "inline"
  {
    (17609 return(17608 '-' a b))
  }
  function -[17623](param arg a[17620] :
  (17619 call int[13] 64), arg b[17629] :
  (17628 call int[13] 64)) : _unknown[51] "inline"
  {
    (17637 return(17636 '-' a b))
  }
  function *[17651](arg a[17648] :
  (17647 call uint[115] 64), arg b[17657] :
  (17656 call int[13] 64)) : _unknown[51] "inline"
  {
    (17663 call _throwOpError "*")
  }
  function *[17677](arg a[17674] :
  (17673 call int[13] 64), arg b[17683] :
  (17682 call uint[115] 64)) : _unknown[51] "inline"
  {
    (17689 call _throwOpError "*")
  }
  function *[17703](arg a[17700] :
  (17699 call uint[115] 64), param arg b[17709] :
  (17708 call uint[115] 64)) : _unknown[51] "inline"
  {
    (17717 return(17716 '*' a b))
  }
  function *[17731](param arg a[17728] :
  (17727 call uint[115] 64), arg b[17737] :
  (17736 call uint[115] 64)) : _unknown[51] "inline"
  {
    (17745 return(17744 '*' a b))
  }
  function *[17759](arg a[17756] :
  (17755 call int[13] 64), param arg b[17765] :
  (17764 call int[13] 64)) : _unknown[51] "inline"
  {
    (17773 return(17772 '*' a b))
  }
  function *[17787](param arg a[17784] :
  (17783 call int[13] 64), arg b[17793] :
  (17792 call int[13] 64)) : _unknown[51] "inline"
  {
    (17801 return(17800 '*' a b))
  }
  function /[17815](arg a[17812] :
  (17811 call uint[115] 64), arg b[17821] :
  (17820 call int[13] 64)) : _unknown[51] "inline"
  {
    (17827 call _throwOpError "/")
  }
  function /[17841](arg a[17838] :
  (17837 call int[13] 64), arg b[17847] :
  (17846 call uint[115] 64)) : _unknown[51] "inline"
  {
    (17853 call _throwOpError "/")
  }
  function /[17867](arg a[17864] :
  (17863 call int[13] 64), param arg b[17873] :
  (17872 call int[13] 64)) : _unknown[51] "inline"
  {
    if(17885 call _cond_test(17878 call == b 0))
    {
      { scopeless
        (17883 call compilerError "Attempt to divide by zero")
      }
    }
    (17896 return(17895 '/' a b))
  }
  function /[17909](arg a[17906] :
  (17905 call uint[115] 64), param arg b[17915] :
  (17914 call uint[115] 64)) : _unknown[51] "inline"
  {
    if(17927 call _cond_test(17920 call == b 0))
    {
      { scopeless
        (17925 call compilerError "Attempt to divide by zero")
      }
    }
    (17938 return(17937 '/' a b))
  }
  function /[17951](param arg a[17948] :
  (17947 call uint[115] 64), arg b[17957] :
  (17956 call uint[115] 64)) : _unknown[51] "inline"
  {
    if(17975 call _cond_test chpl_checkDivByZero)
    {
      { scopeless
        if(17970 call _cond_test(17963 call == b 0))
        {
          { scopeless
            (17968 call halt "Attempt to divide by zero")
          }
        }
      }
    }
    (17986 return(17985 '/' a b))
  }
  function /[17999](param arg a[17996] :
  (17995 call int[13] 64), arg b[18005] :
  (18004 call int[13] 64)) : _unknown[51] "inline"
  {
    if(18023 call _cond_test chpl_checkDivByZero)
    {
      { scopeless
        if(18018 call _cond_test(18011 call == b 0))
        {
          { scopeless
            (18016 call halt "Attempt to divide by zero")
          }
        }
      }
    }
    (18034 return(18033 '/' a b))
  }
  function **[18047](arg a[18044] :
  (18043 call uint[115] 64), arg b[18053] :
  (18052 call int[13] 64)) : _unknown[51] "inline"
  {
    (18059 call _throwOpError "**")
  }
  function **[18073](arg a[18070] :
  (18069 call int[13] 64), arg b[18079] :
  (18078 call uint[115] 64)) : _unknown[51] "inline"
  {
    (18085 call _throwOpError "**")
  }
  function **[18099](arg a[18096] :
  (18095 call uint[115] 64), param arg b[18105] :
  (18104 call uint[115] 64)) : _unknown[51] "inline"
  {
    (18113 return(18112 '**' a b))
  }
  function **[18127](param arg a[18124] :
  (18123 call uint[115] 64), arg b[18133] :
  (18132 call uint[115] 64)) : _unknown[51] "inline"
  {
    (18141 return(18140 '**' a b))
  }
  function **[18155](arg a[18152] :
  (18151 call int[13] 64), param arg b[18161] :
  (18160 call int[13] 64)) : _unknown[51] "inline"
  {
    (18169 return(18168 '**' a b))
  }
  function **[18183](param arg a[18180] :
  (18179 call int[13] 64), arg b[18189] :
  (18188 call int[13] 64)) : _unknown[51] "inline"
  {
    (18197 return(18196 '**' a b))
  }
  function %[18211](arg a[18208] :
  (18207 call uint[115] 64), arg b[18217] :
  (18216 call int[13] 64)) : _unknown[51] "inline"
  {
    (18223 call _throwOpError "%")
  }
  function %[18237](arg a[18234] :
  (18233 call int[13] 64), arg b[18243] :
  (18242 call uint[115] 64)) : _unknown[51] "inline"
  {
    (18249 call _throwOpError "%")
  }
  function %[18263](arg a[18260] :
  (18259 call uint[115] 64), param arg b[18269] :
  (18268 call uint[115] 64)) : _unknown[51] "inline"
  {
    if(18281 call _cond_test(18274 call == b 0))
    {
      { scopeless
        (18279 call compilerError "Attempt to compute a modulus by zero")
      }
    }
    (18292 return(18291 '%' a b))
  }
  function %[18305](param arg a[18302] :
  (18301 call uint[115] 64), arg b[18311] :
  (18310 call uint[115] 64)) : _unknown[51] "inline"
  {
    if(18329 call _cond_test chpl_checkDivByZero)
    {
      { scopeless
        if(18324 call _cond_test(18317 call == b 0))
        {
          { scopeless
            (18322 call halt "Attempt to compute a modulus by zero")
          }
        }
      }
    }
    (18340 return(18339 '%' a b))
  }
  function %[18353](arg a[18350] :
  (18349 call int[13] 64), param arg b[18359] :
  (18358 call int[13] 64)) : _unknown[51] "inline"
  {
    if(18371 call _cond_test(18364 call == b 0))
    {
      { scopeless
        (18369 call compilerError "Attempt to compute a modulus by zero")
      }
    }
    (18382 return(18381 '%' a b))
  }
  function %[18395](param arg a[18392] :
  (18391 call int[13] 64), arg b[18401] :
  (18400 call int[13] 64)) : _unknown[51] "inline"
  {
    if(18419 call _cond_test chpl_checkDivByZero)
    {
      { scopeless
        if(18414 call _cond_test(18407 call == b 0))
        {
          { scopeless
            (18412 call halt "Attempt to compute a modulus by zero")
          }
        }
      }
    }
    (18430 return(18429 '%' a b))
  }
  function ==[18443](arg a[18440] :
  (18439 call uint[115] 64), arg b[18449] :
  (18448 call int[13] 64)) : _unknown[51] "inline"
  {
    (18470 return(18468 call &&(18456 call !(18454 call < b 0))(18466 call == a(18464 call _cast(18463 call uint[115] 64) b))))
  }
  function ==[18484](arg a[18481] :
  (18480 call int[13] 64), arg b[18490] :
  (18489 call uint[115] 64)) : _unknown[51] "inline"
  {
    (18511 return(18509 call &&(18497 call !(18495 call < a 0))(18507 call ==(18504 call _cast(18503 call uint[115] 64) a) b)))
  }
  function !=[18525](arg a[18522] :
  (18521 call uint[115] 64), arg b[18531] :
  (18530 call int[13] 64)) : _unknown[51] "inline"
  {
    (18550 return(18548 call ||(18536 call < b 0)(18546 call != a(18544 call _cast(18543 call uint[115] 64) b))))
  }
  function !=[18564](arg a[18561] :
  (18560 call int[13] 64), arg b[18570] :
  (18569 call uint[115] 64)) : _unknown[51] "inline"
  {
    (18589 return(18587 call ||(18575 call < a 0)(18585 call !=(18582 call _cast(18581 call uint[115] 64) a) b)))
  }
  function >[18603](arg a[18600] :
  (18599 call uint[115] 64), arg b[18609] :
  (18608 call int[13] 64)) : _unknown[51] "inline"
  {
    (18628 return(18626 call ||(18614 call < b 0)(18624 call > a(18622 call _cast(18621 call uint[115] 64) b))))
  }
  function >[18642](arg a[18639] :
  (18638 call int[13] 64), arg b[18648] :
  (18647 call uint[115] 64)) : _unknown[51] "inline"
  {
    (18669 return(18667 call &&(18655 call !(18653 call < a 0))(18665 call >(18662 call _cast(18661 call uint[115] 64) a) b)))
  }
  function >[18683](param arg a[18680] :
  (18679 call uint[115] 64), arg b[18689] :
  (18688 call uint[115] 64)) param : _unknown[51] "inline"
  {
    (18697 return 0)
  }
  where {
    (18694 call == a 0)
  }
  function >[18712](param arg a[18709] :
  (18708 call uint[115] 64), arg b[18718] :
  (18717 call uint[115] 64)) : _unknown[51] "inline"
  {
    (18726 return(18725 '>' a b))
  }
  function >[18740](param arg a[18737] :
  (18736 call int[13] 64), arg b[18746] :
  (18745 call int[13] 64)) : _unknown[51] "inline"
  {
    (18754 return(18753 '>' a b))
  }
  function <[18768](arg a[18765] :
  (18764 call uint[115] 64), arg b[18774] :
  (18773 call int[13] 64)) : _unknown[51] "inline"
  {
    (18795 return(18793 call &&(18781 call !(18779 call < b 0))(18791 call < a(18789 call _cast(18788 call uint[115] 64) b))))
  }
  function <[18809](arg a[18806] :
  (18805 call int[13] 64), arg b[18815] :
  (18814 call uint[115] 64)) : _unknown[51] "inline"
  {
    (18834 return(18832 call ||(18820 call < a 0)(18830 call <(18827 call _cast(18826 call uint[115] 64) a) b)))
  }
  function <[18848](arg a[18845] :
  (18844 call uint[115] 64), param arg b[18854] :
  (18853 call uint[115] 64)) param : _unknown[51] "inline"
  {
    (18862 return 0)
  }
  where {
    (18859 call == b 0)
  }
  function <[18877](arg a[18874] :
  (18873 call uint[115] 64), param arg b[18883] :
  (18882 call uint[115] 64)) : _unknown[51] "inline"
  {
    (18891 return(18890 '<' a b))
  }
  function <[18905](arg a[18902] :
  (18901 call int[13] 64), param arg b[18911] :
  (18910 call int[13] 64)) : _unknown[51] "inline"
  {
    (18919 return(18918 '<' a b))
  }
  function >=[18933](arg a[18930] :
  (18929 call uint[115] 64), arg b[18939] :
  (18938 call int[13] 64)) : _unknown[51] "inline"
  {
    (18958 return(18956 call ||(18944 call < b 0)(18954 call >= a(18952 call _cast(18951 call uint[115] 64) b))))
  }
  function >=[18972](arg a[18969] :
  (18968 call int[13] 64), arg b[18978] :
  (18977 call uint[115] 64)) : _unknown[51] "inline"
  {
    (18999 return(18997 call &&(18985 call !(18983 call < a 0))(18995 call >=(18992 call _cast(18991 call uint[115] 64) a) b)))
  }
  function >=[19013](arg a[19010] :
  (19009 call uint[115] 64), param arg b[19019] :
  (19018 call uint[115] 64)) param : _unknown[51] "inline"
  {
    (19027 return 1)
  }
  where {
    (19024 call == b 0)
  }
  function >=[19042](arg a[19039] :
  (19038 call uint[115] 64), param arg b[19048] :
  (19047 call uint[115] 64)) : _unknown[51] "inline"
  {
    (19056 return(19055 '>=' a b))
  }
  function >=[19070](arg a[19067] :
  (19066 call int[13] 64), param arg b[19076] :
  (19075 call int[13] 64)) : _unknown[51] "inline"
  {
    (19084 return(19083 '>=' a b))
  }
  function <=[19098](arg a[19095] :
  (19094 call uint[115] 64), arg b[19104] :
  (19103 call int[13] 64)) : _unknown[51] "inline"
  {
    (19125 return(19123 call &&(19111 call !(19109 call < b 0))(19121 call <= a(19119 call _cast(19118 call uint[115] 64) b))))
  }
  function <=[19139](arg a[19136] :
  (19135 call int[13] 64), arg b[19145] :
  (19144 call uint[115] 64)) : _unknown[51] "inline"
  {
    (19164 return(19162 call ||(19150 call < a 0)(19160 call <=(19157 call _cast(19156 call uint[115] 64) a) b)))
  }
  function <=[19178](param arg a[19175] :
  (19174 call uint[115] 64), arg b[19184] :
  (19183 call uint[115] 64)) param : _unknown[51] "inline"
  {
    (19192 return 1)
  }
  where {
    (19189 call == a 0)
  }
  function <=[19207](param arg a[19204] :
  (19203 call uint[115] 64), arg b[19213] :
  (19212 call uint[115] 64)) : _unknown[51] "inline"
  {
    (19221 return(19220 '<=' a b))
  }
  function <=[19235](param arg a[19232] :
  (19231 call int[13] 64), arg b[19241] :
  (19240 call int[13] 64)) : _unknown[51] "inline"
  {
    (19249 return(19248 '<=' a b))
  }
  function isGenericType[19258](arg t[19256]:_any[178](?)) param : _unknown[51]
  {
    { scopeless
      (19280 return(19279 'is generic type' t))
    }
  }
  function isClassType[19289](arg t[19287]:_any[178](?)) param : _unknown[51]
  {
    { scopeless
      (19313 return(19312 'is class type' t))
    }
  }
  function isNilableClassType[19322](arg t[19320]:_any[178](?)) param : _unknown[51]
  {
    { scopeless
      (19344 return(19343 'is nilable class type' t))
    }
  }
  function isNonNilableClassType[19353](arg t[19351]:_any[178](?)) param : _unknown[51]
  {
    { scopeless
      (19375 return(19374 'is non nilable class type' t))
    }
  }
  function isBorrowedOrUnmanagedClassType[19386](arg t[19383] :
  unmanaged[220](?)) param : _unknown[51]
  {
    { scopeless
      (19389 return 1)
    }
  }
  function isBorrowedOrUnmanagedClassType[19400](arg t[19397] :
  borrowed[211](?)) param : _unknown[51]
  {
    { scopeless
      (19403 return 1)
    }
  }
  function isBorrowedOrUnmanagedClassType[19412](arg t[19410]:_any[178](?)) param : _unknown[51]
  {
    { scopeless
      (19415 return 0)
    }
  }
  function chpl_legacyClasses[19422]() param : _unknown[51] "no parens"
  {
    (19445 call compilerWarning "'chpl_legacyClasses' is deprecated and will be removed in the next release; it is now always false")
    (19449 return 0)
  }
  function isRecordType[19457](arg t[19455]:_any[178](?)) param : _unknown[51]
  {
    if(19549 call _cond_test(19480 call ==(19478 'is record type' t) 0))
    {
      { scopeless
        (19483 return 0)
      }
    }
    {
      { scopeless
        if(19543 call _cond_test(19535 call ||(19529 call ||(19523 call ||(19517 call ||(19511 call ||(19505 call ||(19499 call ||(19493 call ||(19488 call isDmapType t)(19492 call isDomainType t))(19498 call isArrayType t))(19504 call isRangeType t))(19510 call isTupleType t))(19516 call isSyncType t))(19522 call isSingleType t))(19528 call isStringType t))(19534 call isAtomicType t)))
        {
          { scopeless
            (19538 return 0)
          }
        }
        {
          { scopeless
            (19541 return 1)
          }
        }
      }
    }
  }
  function isUnionType[19562](arg t[19560]:_any[178](?)) param : _unknown[51]
  {
    { scopeless
      (19584 return(19583 'is union type' t))
    }
  }
  function isAtomicType[19593](arg t[19591]:_any[178](?)) param : _unknown[51]
  {
    { scopeless
      (19615 return(19614 'is atomic type' t))
    }
  }
  function isRefIterType[19624](arg t[19622]:_any[178](?)) param : _unknown[51]
  {
    { scopeless
      (19646 return(19645 'is ref iter type' t))
    }
  }
  { scopeless
    const QIO_STYLE_ELEMENT_STRING[19652] "const" "extern" int[13]
    (19655 'end of statement')
  }
  { scopeless
    const QIO_STYLE_ELEMENT_COMPLEX[19657] "const" "extern" int[13]
    (19660 'end of statement')
  }
  { scopeless
    const QIO_STYLE_ELEMENT_ARRAY[19662] "const" "extern" int[13]
    (19665 'end of statement')
  }
  { scopeless
    const QIO_STYLE_ELEMENT_AGGREGATE[19667] "const" "extern" int[13]
    (19670 'end of statement')
  }
  { scopeless
    const QIO_STYLE_ELEMENT_TUPLE[19672] "const" "extern" int[13]
    (19675 'end of statement')
  }
  { scopeless
    const QIO_STYLE_ELEMENT_BYTE_ORDER[19677] "const" "extern" int[13]
    (19680 'end of statement')
  }
  { scopeless
    const QIO_STYLE_ELEMENT_IS_NATIVE_BYTE_ORDER[19682] "const" "extern" int[13]
    (19685 'end of statement')
  }
  { scopeless
    const QIO_STYLE_ELEMENT_SKIP_UNKNOWN_FIELDS[19687] "const" "extern" int[13]
    (19690 'end of statement')
  }
  { scopeless
    const QIO_ARRAY_FORMAT_SPACE[19692] "const" "extern" int[13]
    (19695 'end of statement')
  }
  { scopeless
    const QIO_ARRAY_FORMAT_CHPL[19697] "const" "extern" int[13]
    (19700 'end of statement')
  }
  { scopeless
    const QIO_ARRAY_FORMAT_JSON[19702] "const" "extern" int[13]
    (19705 'end of statement')
  }
  { scopeless
    const QIO_AGGREGATE_FORMAT_BRACES[19707] "const" "extern" int[13]
    (19710 'end of statement')
  }
  { scopeless
    const QIO_AGGREGATE_FORMAT_CHPL[19712] "const" "extern" int[13]
    (19715 'end of statement')
  }
  { scopeless
    const QIO_AGGREGATE_FORMAT_JSON[19717] "const" "extern" int[13]
    (19720 'end of statement')
  }
  { scopeless
    const QIO_TUPLE_FORMAT_CHPL[19722] "const" "extern" int[13]
    (19725 'end of statement')
  }
  { scopeless
    const QIO_TUPLE_FORMAT_SPACE[19727] "const" "extern" int[13]
    (19730 'end of statement')
  }
  { scopeless
    const QIO_TUPLE_FORMAT_JSON[19732] "const" "extern" int[13]
    (19735 'end of statement')
  }
  type chpl_ModuleDeinit[19824] const moduleName[19738] "const" c_string const deinitFun[19743] "const" c_fn_ptr const prevModule[19750] "const"(19749 'to unmanaged class from unknown'(19748 'to nilable class from type' chpl_ModuleDeinit)) function chpl_ModuleDeinit[19824].writeThis[19758](arg _mt[19828]:_MT[238], arg this[19826]:chpl_ModuleDeinit[19824], arg ch[19756]:_any[178](?)) : _unknown[51] throws "method" "primary method"
  {
    Try
    {
      {
        (19788 call(19763 call . ch c"writef") "chpl_ModuleDeinit(%s)"(19787 call createStringWithNewBuffer moduleName))
      }
    }
    Catch e : DecodeError
    {
      (19814 call halt "Module name is not valid string!")
    }
  }
  { scopeless
    unknown chpl_moduleDeinitFuns[19837](19835 call _cast(19834 'to unmanaged class from unknown'(19833 'to nilable class from type' chpl_ModuleDeinit)) nil[44])
    (19840 'end of statement')
  }
  function chpl_checkLegalTypeFieldAccessor[19845](arg thisArg[19843]:_any[178](?), arg fieldType[19847]:_any[178](?), param arg fieldName[19849]:_any[178](?)) type : _unknown[51] "inline"
  {
    if(19928 call _cond_test(19866 call &&(19855 call isNilableClassType(19853 'typeof' thisArg))(19864 call ||(19859 call isDomainType fieldType)(19863 call isArrayType fieldType))))
    {
      { scopeless
        (19926 call compilerError "accessing the runtime-type field " fieldName " of a nilable class. Consider applying postfix-! operator" " to the class before accessing this field.")
      }
    }
    (19935 return fieldType)
  }
  function chpl_checkLegalTypeFieldAccessor[19943](arg thisArg[19941]:_any[178](?), arg fieldType[19945]:_any[178](?), param arg fieldName[19947]:_any[178](?)) type : _unknown[51] "inline"
  {
    if(19984 call _cond_test(19957 call ||(19952 call isDomainType fieldType)(19956 call isArrayType fieldType)))
    {
      { scopeless
        (19982 call compilerError "accessing the runtime-type field " fieldName " of a class type is currently unsupported")
      }
    }
    (19991 return fieldType)
  }
  function _to_unmanaged[19999](arg t[19997]:_any[178](?)) type : _unknown[51]
  {
    unknown rt[20021] "type variable"(20020 'to unmanaged class' t)
    (20026 return rt)
  }
  function _to_unmanaged[20034](arg arg[20032]:_any[178](?)) : _unknown[51] "inline"
  {
    { scopeless
      unknown ret[20040](20039 'to unmanaged class' arg)
      (20043 'end of statement')
    }
    (20046 return ret)
  }
  function _to_borrowed[20054](arg t[20052]:_any[178](?)) type : _unknown[51]
  {
    unknown rt[20078] "type variable"(20077 'to borrowed class' t)
    (20083 return rt)
  }
  function _to_borrowed[20091](arg arg[20089]:_any[178](?)) : _unknown[51] "inline"
  {
    { scopeless
      unknown ret[20097](20096 'to borrowed class' arg)
      (20100 'end of statement')
    }
    (20103 return ret)
  }
  function _to_nonnil[20111](arg t[20109]:_any[178](?)) type : _unknown[51]
  {
    unknown rt[20133] "type variable"(20132 'to non nilable class' t)
    (20138 return rt)
  }
  function _to_nonnil[20146](arg arg[20144]:_any[178](?)) : _unknown[51] "inline"
  {
    { scopeless
      unknown ret[20152](20151 'to non nilable class' arg)
      (20155 'end of statement')
    }
    (20158 return ret)
  }
  function _to_nilable[20166](arg t[20164]:_any[178](?)) type : _unknown[51]
  {
    unknown rt[20188] "type variable"(20187 'to nilable class' t)
    (20193 return rt)
  }
  function _to_nilable[20201](arg arg[20199]:_any[178](?)) : _unknown[51] "inline"
  {
    { scopeless
      unknown ret[20207](20206 'to nilable class' arg)
      (20210 'end of statement')
    }
    (20213 return ret)
  }
  function _removed_cast[20221](in arg x[20219]:_any[178](?)) : _unknown[51] "inline" "no borrow convert"
  {
    (20224 return x)
  }
  function enumerated[20231]() type : _unknown[51] "no parens"
  {
    (20252 call compilerWarning "'enumerated' is deprecated - please use 'enum' instead")
    (20256 return enum[187](?))
  }
  (353045 'used modules list'(353043 'use' _root[2]))
}