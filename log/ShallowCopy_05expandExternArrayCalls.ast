AST dump for ShallowCopy after pass expandExternArrayCalls.
Module use list: 

{
  (353040 'use' ChapelStandard)
  (277383 'use' SysCTypes)
  function ptrTo[277390](ref arg x[277388]:_any[178](?)) : _unknown[51] "inline" "private"
  {
    (277396 return(277395 call c_pointer_return x))
  }
  function shallowCopy[277405](ref arg dst[277403]:_any[178](?), ref arg src[277407]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown st[277413] "type variable"(277412 'static typeof' dst)
    if(277465 call _cond_test(277420 call isPODType st))
    {
      (277423 call = dst src)
    }
    {
      { scopeless
        unknown size[277431](277430 call c_sizeof st)
        (277434 'end of statement')
      }
      (277447 call c_memcpy(277440 call ptrTo dst)(277445 call ptrTo src) size)
      if(277461 call _cond_test boundsChecking)
      {
        (277458 call c_memset(277454 call ptrTo src) 0 size)
      }
    }
  }
  function shallowCopyInit[277475](ref arg src[277473]:_any[178](?)) : _unknown[51] "inline" "no copy return" "unsafe"
  {
    unknown st[277481] "type variable"(277480 'static typeof' src)
    { scopeless
      unknown dst[277486] "no auto destroy" "no init" st
      (277489 'end of statement')
    }
    (277494 call shallowCopy dst src)
    (277497 return dst)
  }
  function shallowSwap[277508](ref arg lhs[277505] :
  unknown t[277503], ref arg rhs[277511] :
  t) : _unknown[51] "inline" "unsafe"
  {
    unknown st[277518] "type variable"(277517 'static typeof' lhs)
    { scopeless
      unknown tmp[277523] "no auto destroy" "no init" st
      (277526 'end of statement')
    }
    if(277595 call _cond_test(277530 call isPODType st))
    {
      (277533 call = tmp lhs)
      (277539 call = lhs rhs)
      (277544 call = rhs tmp)
    }
    {
      { scopeless
        unknown size[277551](277550 call c_sizeof st)
        (277554 'end of statement')
      }
      (277567 call c_memcpy(277560 call ptrTo tmp)(277565 call ptrTo lhs) size)
      (277580 call c_memcpy(277573 call ptrTo lhs)(277578 call ptrTo rhs) size)
      (277593 call c_memcpy(277586 call ptrTo rhs)(277591 call ptrTo tmp) size)
    }
  }
  function shallowCopy[277605](ref arg A[277603]:_any[178](?), arg dst[277607]:_any[178](?), arg src[277609]:_any[178](?), arg nElts[277611]:_any[178](?)) : _unknown[51] "inline"
  {
    (277614 'use' SysCTypes)
    if(277665 call _cond_test boundsChecking)
    {
      (277624 call assert(277621 call > nElts 0))
      (277644 call assert(277642 call(277632 call .(277629 call . A c"_dom") c"contains")(277639 call #(277636 call chpl_build_low_bounded_range dst) nElts)))
      (277663 call assert(277661 call(277651 call .(277648 call . A c"_dom") c"contains")(277658 call #(277655 call chpl_build_low_bounded_range src) nElts)))
    }
    if(277843 call _cond_test(277677 call(277673 call .(277670 call . A c"_instance") c"isDefaultRectangular")))
    {
      unknown st[277686] "type variable"(277685 'static field type'(277681 call . A c"_value") "eltType")
      { scopeless
        unknown size[277700](277698 call *(277692 call _cast size_t nElts)(277697 call c_sizeof st))
        (277703 'end of statement')
      }
      (277721 call c_memcpy(277711 call ptrTo(277709 call A dst))(277719 call ptrTo(277717 call A src)) size)
    }
    {
      { scopeless
        unknown ok[277746](277745 call chpl__bulkTransferArray A(277733 call chpl__buildDomainExpr(277730 call #(277727 call chpl_build_low_bounded_range dst) nElts)) A(277743 call chpl__buildDomainExpr(277740 call #(277737 call chpl_build_low_bounded_range src) nElts)))
        (277749 'end of statement')
      }
      if(277839 call _cond_test(277752 call ! ok))
      {
        (277773 call halt "bulk transfer failed in sorting")
        {
          unknown _indexOfInterest[277805] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[277806] "expr temp" "temp"
          (277815 'move' _iterator[277806](277813 call _getIterator(277785 call vectorizeOnly(277782 call #(277779 call chpl_build_low_bounded_range 0) nElts))))
          Defer
          {
            {
              (277832 call _freeIterator _iterator[277806])
            }
          }
          { scopeless type
            (277821 'move' _indexOfInterest[277805](277818 call iteratorIndex _iterator[277806]))
          }
          ForLoop[277807]
          {
            unknown i[277825] "index var" "insert auto destroy"
            (277827 'move' i[277825] _indexOfInterest[277805])
            {
              (277802 '='(277794 call A(277791 call + dst i))(277801 call A(277798 call + src i)))
            }
            label _continueLabel[277810]
            _indexOfInterest[277805]
            _iterator[277806]
          }
          label _breakLabel[277811]
        }
      }
    }
  }
  function shallowCopy[277853](ref arg DstA[277851]:_any[178](?), arg dst[277855]:_any[178](?), ref arg SrcA[277857]:_any[178](?), arg src[277859]:_any[178](?), arg nElts[277861]:_any[178](?)) : _unknown[51] "inline"
  {
    (277864 'use' SysCTypes)
    if(277915 call _cond_test boundsChecking)
    {
      (277874 call assert(277871 call > nElts 0))
      (277894 call assert(277892 call(277882 call .(277879 call . DstA c"_dom") c"contains")(277889 call #(277886 call chpl_build_low_bounded_range dst) nElts)))
      (277913 call assert(277911 call(277901 call .(277898 call . SrcA c"_dom") c"contains")(277908 call #(277905 call chpl_build_low_bounded_range src) nElts)))
    }
    if(278088 call _cond_test(277937 call &&(277927 call(277923 call .(277920 call . DstA c"_instance") c"isDefaultRectangular"))(277936 call(277932 call .(277929 call . SrcA c"_instance") c"isDefaultRectangular"))))
    {
      unknown st[277947] "type variable"(277946 'static field type'(277942 call . DstA c"_value") "eltType")
      { scopeless
        unknown size[277961](277959 call *(277953 call _cast size_t nElts)(277958 call c_sizeof st))
        (277964 'end of statement')
      }
      (277982 call c_memcpy(277972 call ptrTo(277970 call DstA dst))(277980 call ptrTo(277978 call SrcA src)) size)
    }
    {
      { scopeless
        unknown ok[278007](278006 call chpl__bulkTransferArray DstA(277994 call chpl__buildDomainExpr(277991 call #(277988 call chpl_build_low_bounded_range dst) nElts)) SrcA(278004 call chpl__buildDomainExpr(278001 call #(277998 call chpl_build_low_bounded_range src) nElts)))
        (278010 'end of statement')
      }
      if(278084 call _cond_test(278013 call ! ok))
      {
        (278018 call halt "bulk transfer failed in sorting")
        {
          unknown _indexOfInterest[278050] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[278051] "expr temp" "temp"
          (278060 'move' _iterator[278051](278058 call _getIterator(278030 call vectorizeOnly(278027 call #(278024 call chpl_build_low_bounded_range 0) nElts))))
          Defer
          {
            {
              (278077 call _freeIterator _iterator[278051])
            }
          }
          { scopeless type
            (278066 'move' _indexOfInterest[278050](278063 call iteratorIndex _iterator[278051]))
          }
          ForLoop[278052]
          {
            unknown i[278070] "index var" "insert auto destroy"
            (278072 'move' i[278070] _indexOfInterest[278050])
            {
              (278047 '='(278039 call DstA(278036 call + dst i))(278046 call SrcA(278043 call + src i)))
            }
            label _continueLabel[278055]
            _indexOfInterest[278050]
            _iterator[278051]
          }
          label _breakLabel[278056]
        }
      }
    }
  }
}