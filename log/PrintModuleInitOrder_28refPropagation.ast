AST dump for PrintModuleInitOrder after pass refPropagation.
Module use list: ChapelBase 

{
  function chpl__init_PrintModuleInitOrder[415900]() : void[4] "export" "insert line file info" "local args" "module init" "resolved"
  {
    const-val call_tmp[594623]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (594626 'move' call_tmp[594623](539902 call chpl_config_has_value[334] c"printModuleInitOrder" c"Built-in"))
    const-val call_tmp[594628]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2114572]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2114574 'move' call_tmp[2114572](2114576 '!' call_tmp[594623]))
    (594631 'move' call_tmp[594628] call_tmp[2114572])
    if call_tmp[594628]
    {
      (539921 'move' tmp[539891] 0)
    }
    {
      const-val call_tmp[594638]:c_string[19] "dead at end of block" "expr temp" "maybe param" "temp"
      (594641 'move' call_tmp[594638](539912 call chpl_config_get_value[350] c"printModuleInitOrder" c"Built-in"))
      (539917 'move' tmp[539891](539915 call _command_line_cast[1437942] call_tmp[594638]))
    }
    (539893 'move' printModuleInitOrder[20405] tmp[539891])
    (2085005 '_private_broadcast' printModuleInitOrder[20405])
    (539923 'move' moduleInitLevel[20416] 2)
    const-val call_tmp[594688]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (594691 'move' call_tmp[594688] printModuleInitOrder[20405])
    if call_tmp[594688]
    {
      (20534 call initPrint[20493])
    }
    (501519 return _void[55])
  }
  const-val printModuleInitOrder[20405]:bool[10] "config" "const" "insert auto destroy"
  const-val moduleInitLevel[20416]:int(32)[95] "dead at end of block" "insert auto destroy" "print module init indent level"
  function printModuleInit[20426](const in arg s1[20423]:c_string[19], const in arg s2[20429]:c_string[19], const in arg len[20433]:int(64)[13]) : void[4] "print module init fn" "resolved" "no return value for void"
  {
    const-val call_tmp[594653]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (594656 'move' call_tmp[594653] printModuleInitOrder[20405])
    if call_tmp[594653]
    {
      const-val call_tmp[594663]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val call_tmp[2206249]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2206251 'move' call_tmp[2206249](2206253 'cast' int(32)[95] len[20433]))
      (594666 'move' call_tmp[594663] call_tmp[2206249])
      const-val call_tmp[594668]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val call_tmp[2212353]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2212355 'move' call_tmp[2212353](2212357 '+' moduleInitLevel[20416] call_tmp[594663]))
      (594671 'move' call_tmp[594668] call_tmp[2212353])
      const-val call_tmp[594683]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      val inlineImm[2212362]:int(32)[95] "temp"
      (2212365 'move' inlineImm[2212362] 2)
      const-val call_tmp[2212368]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2212370 'move' call_tmp[2212368](2212372 '+' call_tmp[594668] inlineImm[2212362]))
      (594686 'move' call_tmp[594683] call_tmp[2212368])
      (20482 call printf[20442] s1[20423] call_tmp[594683] s2[20429])
    }
    (501513 return _void[55])
  }
  function initPrint[20493]() : void[4] "resolved" "no return value for void"
  {
    (20527 call printf[20501] c"Initializing Modules:\n")
    (501517 return _void[55])
  }
  val tmp[539891]:bool[10] "dead at end of block" "temp"
  function printf[20442](const in arg s1[20439]:c_string[19], const in arg len[20448]:int(32)[95], const in arg s2[20452]:c_string[19]) : void[4] "extern" "local args" "no fn body" "resolved" "no return value for void"
  {
    (501511 return _void[55])
  }
  function printf[20501](const in arg s[20498]:c_string[19]) : void[4] "extern" "local args" "no fn body" "resolved" "no return value for void"
  {
    (501515 return _void[55])
  }
}