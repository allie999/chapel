AST dump for SysError after pass readExternC.
Module use list: 

{
  (353056 'use' ChapelStandard)
  (264254 'use' SysBasic)
  (264258 'use' SysCTypes)
  type SystemError[264866] unknown err[264264] syserr unknown details[264269] string[26] function SystemError[264866].init[264279](arg _mt[264870]:_MT[238], arg this[264868]:SystemError[264866], arg err[264276] :
  syserr, arg details[264299] :
  string[26] =
  "") : _unknown[51] "method" "primary method"
  {
    (264308 call =(264304 call . this c"err") err)
    (264319 call =(264315 call . this c"details") details)
  } function SystemError[264866].message[264326](arg _mt[264874]:_MT[238], arg this[264872]:SystemError[264866]) : _unknown[51] "method" "primary method" "method overrides"
  {
    { scopeless
      unknown strerror_err[264330] ENOERR err_t
      (264333 'end of statement')
    }
    { scopeless
      unknown errstr[264340](264339 call sys_strerror_syserr_str err strerror_err)
      (264343 'end of statement')
    }
    { scopeless
      unknown err_msg[264345] string[26]
      (264348 'end of statement')
    }
    Try!
    {
      {
        (264354 call = err_msg(264353 call createStringWithOwnedBuffer errstr))
      }
    }
    if(264380 call _cond_test(264367 call !(264366 call(264362 call . details c"isEmpty"))))
    {
      { scopeless
        (264377 call += err_msg(264375 call +(264372 call + " (" details) ")"))
      }
    }
    (264386 return err_msg)
  } function SystemError[264866].fromSyserr[264396](arg _mt[264878]:_MT[238], arg this[264876]:SystemError[264866], arg err[264393] :
  syserr, arg details[264416] :
  string[26] =
  "") : _unknown[51] "always propagate line file info" "insert line file info" "method" "primary method"
  {
    if(264804 call _cond_test(264440 call ||(264434 call ||(264428 call ||(264422 call == err EAGAIN)(264426 call == err EALREADY))(264432 call == err EWOULDBLOCK))(264438 call == err EINPROGRESS)))
    {
      (264450 return(264444 'new'(_chpl_manager = _owned[30](?))(264449 call BlockingIOError details err)))
    }
    {
      { scopeless
        if(264799 call _cond_test(264455 call == err ECHILD))
        {
          (264465 return(264459 'new'(_chpl_manager = _owned[30](?))(264464 call ChildProcessError details err)))
        }
        {
          { scopeless
            if(264794 call _cond_test(264476 call ||(264470 call == err EPIPE)(264474 call == err ESHUTDOWN)))
            {
              (264486 return(264480 'new'(_chpl_manager = _owned[30](?))(264485 call BrokenPipeError details err)))
            }
            {
              { scopeless
                if(264789 call _cond_test(264491 call == err ECONNABORTED))
                {
                  (264501 return(264495 'new'(_chpl_manager = _owned[30](?))(264500 call ConnectionAbortedError details err)))
                }
                {
                  { scopeless
                    if(264784 call _cond_test(264506 call == err ECONNREFUSED))
                    {
                      (264516 return(264510 'new'(_chpl_manager = _owned[30](?))(264515 call ConnectionRefusedError details err)))
                    }
                    {
                      { scopeless
                        if(264779 call _cond_test(264521 call == err ECONNRESET))
                        {
                          (264531 return(264525 'new'(_chpl_manager = _owned[30](?))(264530 call ConnectionResetError details err)))
                        }
                        {
                          { scopeless
                            if(264774 call _cond_test(264536 call == err EEXIST))
                            {
                              (264546 return(264540 'new'(_chpl_manager = _owned[30](?))(264545 call FileExistsError details err)))
                            }
                            {
                              { scopeless
                                if(264769 call _cond_test(264551 call == err ENOENT))
                                {
                                  (264561 return(264555 'new'(_chpl_manager = _owned[30](?))(264560 call FileNotFoundError details err)))
                                }
                                {
                                  { scopeless
                                    if(264764 call _cond_test(264566 call == err EINTR))
                                    {
                                      (264576 return(264570 'new'(_chpl_manager = _owned[30](?))(264575 call InterruptedError details err)))
                                    }
                                    {
                                      { scopeless
                                        if(264759 call _cond_test(264581 call == err EISDIR))
                                        {
                                          (264591 return(264585 'new'(_chpl_manager = _owned[30](?))(264590 call IsADirectoryError details err)))
                                        }
                                        {
                                          { scopeless
                                            if(264754 call _cond_test(264596 call == err ENOTDIR))
                                            {
                                              (264606 return(264600 'new'(_chpl_manager = _owned[30](?))(264605 call NotADirectoryError details err)))
                                            }
                                            {
                                              { scopeless
                                                if(264749 call _cond_test(264617 call ||(264611 call == err EACCES)(264615 call == err EPERM)))
                                                {
                                                  (264627 return(264621 'new'(_chpl_manager = _owned[30](?))(264626 call PermissionError details err)))
                                                }
                                                {
                                                  { scopeless
                                                    if(264744 call _cond_test(264632 call == err ESRCH))
                                                    {
                                                      (264642 return(264636 'new'(_chpl_manager = _owned[30](?))(264641 call ProcessLookupError details err)))
                                                    }
                                                    {
                                                      { scopeless
                                                        if(264739 call _cond_test(264647 call == err ETIMEDOUT))
                                                        {
                                                          (264657 return(264651 'new'(_chpl_manager = _owned[30](?))(264656 call TimeoutError details err)))
                                                        }
                                                        {
                                                          { scopeless
                                                            if(264734 call _cond_test(264662 call == err EEOF))
                                                            {
                                                              (264672 return(264666 'new'(_chpl_manager = _owned[30](?))(264671 call EOFError details err)))
                                                            }
                                                            {
                                                              { scopeless
                                                                if(264729 call _cond_test(264677 call == err ESHORT))
                                                                {
                                                                  (264687 return(264681 'new'(_chpl_manager = _owned[30](?))(264686 call UnexpectedEOFError details err)))
                                                                }
                                                                {
                                                                  { scopeless
                                                                    if(264724 call _cond_test(264692 call == err EFORMAT))
                                                                    {
                                                                      (264702 return(264696 'new'(_chpl_manager = _owned[30](?))(264701 call BadFormatError details err)))
                                                                    }
                                                                    {
                                                                      { scopeless
                                                                        if(264720 call _cond_test(264707 call == err EIO))
                                                                        {
                                                                          (264717 return(264711 'new'(_chpl_manager = _owned[30](?))(264716 call IOError err details)))
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    (264818 return(264812 'new'(_chpl_manager = _owned[30](?))(264817 call SystemError err details)))
  } function SystemError[264866].fromSyserr[264828](arg _mt[264882]:_MT[238], arg this[264880]:SystemError[264866], arg err[264825] :
  int[13], arg details[264848] :
  string[26] =
  "") : _unknown[51] "always propagate line file info" "insert line file info" "method" "primary method"
  {
    (264860 return(264859 call fromSyserr(264855 call _cast syserr err) details))
  } Error
  type BlockingIOError[264936] function BlockingIOError[264936].init[264912](arg _mt[264940]:_MT[238], arg this[264938]:BlockingIOError[264936], arg details[264908] :
  string[26] =
  "", arg err[264919] :
  syserr =
  (264917 call _cast syserr EWOULDBLOCK)) : _unknown[51] "method" "primary method"
  {
    (264930 call(264924 call . super c"init") err details)
  } SystemError
  type ChildProcessError[264994] function ChildProcessError[264994].init[264970](arg _mt[264998]:_MT[238], arg this[264996]:ChildProcessError[264994], arg details[264966] :
  string[26] =
  "", arg err[264977] :
  syserr =
  (264975 call _cast syserr ECHILD)) : _unknown[51] "method" "primary method"
  {
    (264988 call(264982 call . super c"init") err details)
  } SystemError
  type ConnectionError[265047] function ConnectionError[265047].init[265010](arg _mt[265051]:_MT[238], arg this[265049]:ConnectionError[265047], arg err[265007] :
  syserr, arg details[265030] :
  string[26] =
  "") : _unknown[51] "method" "primary method"
  {
    (265041 call(265035 call . super c"init") err details)
  } SystemError
  type BrokenPipeError[265105] function BrokenPipeError[265105].init[265081](arg _mt[265109]:_MT[238], arg this[265107]:BrokenPipeError[265105], arg details[265077] :
  string[26] =
  "", arg err[265088] :
  syserr =
  (265086 call _cast syserr EPIPE)) : _unknown[51] "method" "primary method"
  {
    (265099 call(265093 call . super c"init") err details)
  } ConnectionError
  type ConnectionAbortedError[265163] function ConnectionAbortedError[265163].init[265139](arg _mt[265167]:_MT[238], arg this[265165]:ConnectionAbortedError[265163], arg details[265135] :
  string[26] =
  "", arg err[265146] :
  syserr =
  (265144 call _cast syserr ECONNABORTED)) : _unknown[51] "method" "primary method"
  {
    (265157 call(265151 call . super c"init") err details)
  } ConnectionError
  type ConnectionRefusedError[265221] function ConnectionRefusedError[265221].init[265197](arg _mt[265225]:_MT[238], arg this[265223]:ConnectionRefusedError[265221], arg details[265193] :
  string[26] =
  "", arg err[265204] :
  syserr =
  (265202 call _cast syserr ECONNREFUSED)) : _unknown[51] "method" "primary method"
  {
    (265215 call(265209 call . super c"init") err details)
  } ConnectionError
  type ConnectionResetError[265279] function ConnectionResetError[265279].init[265255](arg _mt[265283]:_MT[238], arg this[265281]:ConnectionResetError[265279], arg details[265251] :
  string[26] =
  "", arg err[265262] :
  syserr =
  (265260 call _cast syserr ECONNRESET)) : _unknown[51] "method" "primary method"
  {
    (265273 call(265267 call . super c"init") err details)
  } ConnectionError
  type FileExistsError[265337] function FileExistsError[265337].init[265313](arg _mt[265341]:_MT[238], arg this[265339]:FileExistsError[265337], arg details[265309] :
  string[26] =
  "", arg err[265320] :
  syserr =
  (265318 call _cast syserr EEXIST)) : _unknown[51] "method" "primary method"
  {
    (265331 call(265325 call . super c"init") err details)
  } SystemError
  type FileNotFoundError[265395] function FileNotFoundError[265395].init[265371](arg _mt[265399]:_MT[238], arg this[265397]:FileNotFoundError[265395], arg details[265367] :
  string[26] =
  "", arg err[265378] :
  syserr =
  (265376 call _cast syserr ENOENT)) : _unknown[51] "method" "primary method"
  {
    (265389 call(265383 call . super c"init") err details)
  } SystemError
  type InterruptedError[265453] function InterruptedError[265453].init[265429](arg _mt[265457]:_MT[238], arg this[265455]:InterruptedError[265453], arg details[265425] :
  string[26] =
  "", arg err[265436] :
  syserr =
  (265434 call _cast syserr EINTR)) : _unknown[51] "method" "primary method"
  {
    (265447 call(265441 call . super c"init") err details)
  } SystemError
  type IsADirectoryError[265511] function IsADirectoryError[265511].init[265487](arg _mt[265515]:_MT[238], arg this[265513]:IsADirectoryError[265511], arg details[265483] :
  string[26] =
  "", arg err[265494] :
  syserr =
  (265492 call _cast syserr EISDIR)) : _unknown[51] "method" "primary method"
  {
    (265505 call(265499 call . super c"init") err details)
  } SystemError
  type NotADirectoryError[265569] function NotADirectoryError[265569].init[265545](arg _mt[265573]:_MT[238], arg this[265571]:NotADirectoryError[265569], arg details[265541] :
  string[26] =
  "", arg err[265552] :
  syserr =
  (265550 call _cast syserr ENOTDIR)) : _unknown[51] "method" "primary method"
  {
    (265563 call(265557 call . super c"init") err details)
  } SystemError
  type PermissionError[265627] function PermissionError[265627].init[265603](arg _mt[265631]:_MT[238], arg this[265629]:PermissionError[265627], arg details[265599] :
  string[26] =
  "", arg err[265610] :
  syserr =
  (265608 call _cast syserr EPERM)) : _unknown[51] "method" "primary method"
  {
    (265621 call(265615 call . super c"init") err details)
  } SystemError
  type ProcessLookupError[265685] function ProcessLookupError[265685].init[265661](arg _mt[265689]:_MT[238], arg this[265687]:ProcessLookupError[265685], arg details[265657] :
  string[26] =
  "", arg err[265668] :
  syserr =
  (265666 call _cast syserr ESRCH)) : _unknown[51] "method" "primary method"
  {
    (265679 call(265673 call . super c"init") err details)
  } SystemError
  type TimeoutError[265743] function TimeoutError[265743].init[265719](arg _mt[265747]:_MT[238], arg this[265745]:TimeoutError[265743], arg details[265715] :
  string[26] =
  "", arg err[265726] :
  syserr =
  (265724 call _cast syserr ETIMEDOUT)) : _unknown[51] "method" "primary method"
  {
    (265737 call(265731 call . super c"init") err details)
  } SystemError
  type IOError[265796] function IOError[265796].init[265759](arg _mt[265800]:_MT[238], arg this[265798]:IOError[265796], arg err[265756] :
  syserr, arg details[265779] :
  string[26] =
  "") : _unknown[51] "method" "primary method"
  {
    (265790 call(265784 call . super c"init") err details)
  } SystemError
  type EOFError[265854] function EOFError[265854].init[265830](arg _mt[265858]:_MT[238], arg this[265856]:EOFError[265854], arg details[265826] :
  string[26] =
  "", arg err[265837] :
  syserr =
  (265835 call _cast syserr EEOF)) : _unknown[51] "method" "primary method"
  {
    (265848 call(265842 call . super c"init") err details)
  } IOError
  type UnexpectedEOFError[265912] function UnexpectedEOFError[265912].init[265888](arg _mt[265916]:_MT[238], arg this[265914]:UnexpectedEOFError[265912], arg details[265884] :
  string[26] =
  "", arg err[265895] :
  syserr =
  (265893 call _cast syserr ESHORT)) : _unknown[51] "method" "primary method"
  {
    (265906 call(265900 call . super c"init") err details)
  } IOError
  type BadFormatError[265970] function BadFormatError[265970].init[265946](arg _mt[265974]:_MT[238], arg this[265972]:BadFormatError[265970], arg details[265942] :
  string[26] =
  "", arg err[265953] :
  syserr =
  (265951 call _cast syserr EFORMAT)) : _unknown[51] "method" "primary method"
  {
    (265964 call(265958 call . super c"init") err details)
  } IOError
  function sys_strerror_syserr_str[265983](arg error[265980] :
  syserr, out arg err_in_strerror[265986] :
  err_t) : _unknown[51] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    c_string
  }
  function quote_string[265999](arg s[265996] :
  string[26], arg len[266002] :
  ssize_t) : _unknown[51] "private"
  {
    { scopeless
      const QIO_STRING_FORMAT_CHPL[266009] "const" "extern"(266008 call uint[115] 8)
      (266012 'end of statement')
    }
    function qio_quote_string[266023](arg s[266020] :
    (266019 call uint[115] 8), arg e[266029] :
    (266028 call uint[115] 8), arg f[266036] :
    (266035 call uint[115] 8), arg ptr[266040] :
    c_string, arg len[266044] :
    ssize_t, ref arg ret[266048] :
    c_string, arg ti[266052] :
    c_void_ptr) : _unknown[51] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      syserr
    }
    function qio_strdup[266065](arg s[266062] :
    c_string) : _unknown[51] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      c_string
    }
    { scopeless
      unknown ret[266072] c_string
      (266075 'end of statement')
    }
    { scopeless
      unknown err[266109](266108 call qio_quote_string(266083 call _cast(266082 call uint[115] 8) 34)(266091 call _cast(266090 call uint[115] 8) 34) QIO_STRING_FORMAT_CHPL(266104 call(266100 call .(266099 call(266095 call . s c"localize")) c"c_str")) len ret c_nil) syserr
      (266112 'end of statement')
    }
    Try!
    {
      {
        if(266139 call _cond_test err)
        {
          { scopeless
            (266137 return(266136 call createStringWithOwnedBuffer(266134 call qio_strdup "<error>")))
          }
        }
        (266149 return(266148 call createStringWithOwnedBuffer ret))
      }
    }
  }
  function ioerror[266162](arg error[266159] :
  syserr, arg msg[266165] :
  string[26], arg path[266169] :
  string[26], arg offset[266176] :
  (266175 call int[13] 64)) : _unknown[51] throws "always propagate line file info" "insert line file info"
  {
    if(266258 call _cond_test error)
    {
      { scopeless
        const quotedpath[266191] "const"(266190 call quote_string path(266188 call _cast ssize_t(266184 call . path c"numBytes")))
        (266194 'end of statement')
      }
      { scopeless
        unknown details[266244](266242 call +(266236 call +(266217 call +(266214 call + msg " with path ") quotedpath) " offset ")(266240 call _cast string[26] offset))
        (266247 'end of statement')
      }
      (266256 'throw'(266255 call(266249 call . SystemError c"fromSyserr") error details))
    }
  }
  function ioerror[266271](arg error[266268] :
  syserr, arg msg[266274] :
  string[26], arg path[266278] :
  string[26]) : _unknown[51] throws "always propagate line file info" "insert line file info" "no doc"
  {
    if(266319 call _cond_test error)
    {
      { scopeless
        const quotedpath[266293] "const"(266292 call quote_string path(266290 call _cast ssize_t(266286 call . path c"numBytes")))
        (266296 'end of statement')
      }
      { scopeless
        unknown details[266305](266303 call +(266300 call + msg " with path ") quotedpath)
        (266308 'end of statement')
      }
      (266317 'throw'(266316 call(266310 call . SystemError c"fromSyserr") error details))
    }
  }
  function ioerror[266332](arg error[266329] :
  syserr, arg msg[266335] :
  string[26]) : _unknown[51] throws "always propagate line file info" "insert line file info" "no doc"
  {
    if(266349 call _cond_test error)
    {
      { scopeless
        (266347 'throw'(266346 call(266340 call . SystemError c"fromSyserr") error msg))
      }
    }
  }
  function ioerror[266363](arg errstr[266360] :
  string[26], arg msg[266366] :
  string[26], arg path[266370] :
  string[26], arg offset[266377] :
  (266376 call int[13] 64)) : _unknown[51] throws "always propagate line file info" "insert line file info"
  {
    { scopeless
      const quotedpath[266391] "const"(266390 call quote_string path(266388 call _cast ssize_t(266384 call . path c"numBytes")))
      (266394 'end of statement')
    }
    { scopeless
      const details[266418] "const"(266416 call +(266410 call +(266407 call +(266404 call +(266401 call +(266398 call + errstr " ") msg) " with path ") quotedpath) " offset ")(266414 call _cast string[26] offset))
      (266421 'end of statement')
    }
    (266433 'throw'(266432 call(266423 call . SystemError c"fromSyserr")(266428 call _cast syserr EIO) details))
  }
  function errorToString[266443](arg error[266440] :
  syserr) : _unknown[51]
  {
    { scopeless
      unknown strerror_err[266448] ENOERR err_t
      (266451 'end of statement')
    }
    { scopeless
      const errstr[266458] "const"(266457 call sys_strerror_syserr_str error strerror_err)
      (266461 'end of statement')
    }
    Try!
    {
      {
        (266466 return(266465 call createStringWithOwnedBuffer errstr))
      }
    }
  }
  { scopeless type
    string[26]
  }
}