AST dump for ChapelSerializedBroadcast after pass normalize.
Module use list: ChapelLocale CPtr 

{
  function chpl__init_ChapelSerializedBroadcast[416066]() : void[4] "insert line file info" "module init"
  {
    (544805 'init var' chpl__enableSerializedGlobals[171469] 1)
    (171472 'end of statement')
    (522465 return _void[55])
  }
  unknown chpl__enableSerializedGlobals[171469] "config" "param"
  function chpl_get_global_serialize_table[171479](arg idx[171476]:int(64)[13]) : _unknown[51] "extern" "local args" "no fn body" "no return value for void"
  {
    unknown ret[522457] "RVV" "temp"
    (522459 return ret[522457])
  }
  { scopeless type
    c_void_ptr[149]
  }
  function chpl__broadcastGlobal[171492](ref arg localeZeroGlobal[171489]:_any[178](?), arg id[171495]:int(64)[13]) : _unknown[51] "no return value for void"
  {
    unknown tmp[428539] "maybe param" "temp"
    (428550 'move' tmp[428539](171502 call isArray localeZeroGlobal[171489]))
    unknown call_tmp[681098] "expr temp" "maybe param" "maybe type" "temp"
    (681101 'move' call_tmp[681098](428552 call _cond_invalid tmp[428539]))
    if call_tmp[681098]
    {
      (428555 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[570616] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[570617] "maybe param" "temp"
    unknown call_tmp[681103] "expr temp" "maybe param" "maybe type" "temp"
    (681106 'move' call_tmp[681103](428540 call isTrue tmp[428539]))
    (570622 'move' tmp[570617](570620 call _cond_test call_tmp[681103]))
    if tmp[570617]
    {
      unknown tmp[570624] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[681108] "expr temp" "maybe param" "maybe type" "temp"
      (681111 'move' call_tmp[681108](171506 call chpl__isArrayView localeZeroGlobal[171489]))
      (570626 'move' tmp[570624](428543 call isTrue call_tmp[681108]))
      (570631 'move' tmp[570616](570628 '_paramFoldLogical' tmp[570617] tmp[570624]))
    }
    {
      (570636 'move' tmp[570616](570633 '_paramFoldLogical' tmp[570617] 0))
    }
    unknown call_tmp[681113] "expr temp" "maybe param" "maybe type" "temp"
    (681116 'move' call_tmp[681113](171833 call _cond_test tmp[570616]))
    if call_tmp[681113]
    {
      (171528 call halt "internal error: can't broadcast module-scope arrays yet")
    }
    {
      unknown call_tmp[681120] "maybe param" "maybe type" "temp"
      (681123 'move' call_tmp[681120](171536 call(171532 call (partial) chpl__serialize _mt[243] localeZeroGlobal[171489])))
      const data[171537] "dead at end of block" "const" "insert auto destroy"
      (544807 'init var' data[171537] call_tmp[681120])
      (171540 'end of statement')
      unknown call_tmp[681125] "expr temp" "maybe param" "maybe type" "temp"
      (681128 'move' call_tmp[681125](361476 call here[90438]))
      unknown call_tmp[681132] "maybe param" "maybe type" "temp"
      (681135 'move' call_tmp[681132](171543 call id _mt[243] call_tmp[681125]))
      const root[171546] "dead at end of block" "const" "insert auto destroy"
      (544809 'init var' root[171546] call_tmp[681132])
      (171549 'end of statement')
      {
        unknown tmpIter[171620] "expr temp" "maybe ref" "no copy" "temp"
        (171623 'move' tmpIter[171620] Locales[113662])
        unknown isRngDomArr[171814] "maybe param" "temp"
        unknown tmp[428497] "maybe param" "temp"
        (428508 'move' tmp[428497](171816 call isBoundedRange tmpIter[171620]))
        unknown call_tmp[681137] "expr temp" "maybe param" "maybe type" "temp"
        (681140 'move' call_tmp[681137](428510 call _cond_invalid tmp[428497]))
        if call_tmp[681137]
        {
          (428513 call compilerError "cannot promote short-circuiting || operator")
        }
        unknown tmp[570670] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[570671] "maybe param" "temp"
        unknown call_tmp[681142] "expr temp" "maybe param" "maybe type" "temp"
        (681145 'move' call_tmp[681142](428498 call isTrue tmp[428497]))
        (570676 'move' tmp[570671](570674 call _cond_test call_tmp[681142]))
        if tmp[570671]
        {
          (570681 'move' tmp[570670](570678 '_paramFoldLogical' tmp[570671] 1))
        }
        {
          unknown tmp[428518] "maybe param" "temp"
          (428529 'move' tmp[428518](171819 call isDomain tmpIter[171620]))
          unknown call_tmp[681147] "expr temp" "maybe param" "maybe type" "temp"
          (681150 'move' call_tmp[681147](428531 call _cond_invalid tmp[428518]))
          if call_tmp[681147]
          {
            (428534 call compilerError "cannot promote short-circuiting || operator")
          }
          unknown tmp[570643] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[570644] "maybe param" "temp"
          unknown call_tmp[681152] "expr temp" "maybe param" "maybe type" "temp"
          (681155 'move' call_tmp[681152](428519 call isTrue tmp[428518]))
          (570649 'move' tmp[570644](570647 call _cond_test call_tmp[681152]))
          if tmp[570644]
          {
            (570654 'move' tmp[570643](570651 '_paramFoldLogical' tmp[570644] 1))
          }
          {
            unknown tmp[570656] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[681157] "expr temp" "maybe param" "maybe type" "temp"
            (681160 'move' call_tmp[681157](171822 call isArray tmpIter[171620]))
            (570658 'move' tmp[570656](428523 call isTrue call_tmp[681157]))
            (570663 'move' tmp[570643](570660 '_paramFoldLogical' tmp[570644] tmp[570656]))
          }
          unknown tmp[570683] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          (570685 'move' tmp[570683](428502 call isTrue tmp[570643]))
          (570690 'move' tmp[570670](570687 '_paramFoldLogical' tmp[570671] tmp[570683]))
        }
        (171829 'move' isRngDomArr[171814] tmp[570670])
        if isRngDomArr[171814]
        {
          const _coforallCount[171686] "const" "end count" "temp"
          (171751 'move' _coforallCount[171686](171748 call _endCountAlloc 0))
          unknown numTasks[171687] "temp"
          (171735 'move' numTasks[171687](171731 call size _mt[243] tmpIter[171620]))
          (171726 call _upEndCount _coforallCount[171686] 0 numTasks[171687])
          (483302 'end of statement')
          unknown _indexOfInterest[171693] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[171694] "expr temp" "temp"
          (171703 'move' _iterator[171694](171701 call _getIterator tmpIter[171620]))
          Defer
          {
            {
              (171719 call _freeIterator _iterator[171694])
            }
          }
          { scopeless type
            (171708 'move' _indexOfInterest[171693](171705 call iteratorIndex _iterator[171694]))
          }
          ForLoop[171695]
          {
            unknown loc[171712] "coforall index var" "index var" "insert auto destroy"
            (483304 'end of statement')
            (171714 'move' loc[171712] _indexOfInterest[171693])
            (483305 'end of statement' loc[171712])
            const tmp[171626] "const" "temp"
            unknown call_tmp[681164] "expr temp" "maybe param" "maybe type" "temp"
            (681167 'move' call_tmp[681164](171631 '_wide_get_locale' loc[171712]))
            (171628 'move' tmp[171626](171630 'deref' call_tmp[681164]))
            {
              {
                unknown call_tmp[681169] "expr temp" "maybe param" "maybe type" "temp"
                (681172 'move' call_tmp[681169](361481 call here[90438]))
                unknown call_tmp[681176] "expr temp" "maybe param" "maybe type" "temp"
                (681179 'move' call_tmp[681176](171643 call id _mt[243] call_tmp[681169]))
                unknown call_tmp[681181] "expr temp" "maybe param" "maybe type" "temp"
                (681184 'move' call_tmp[681181](171641 call != call_tmp[681176] root[171546]))
                unknown call_tmp[681186] "expr temp" "maybe param" "maybe type" "temp"
                (681189 'move' call_tmp[681186](171639 call _cond_test call_tmp[681181]))
                if call_tmp[681186]
                {
                  unknown call_tmp[681191] "expr temp" "maybe param" "maybe type" "temp" "type variable"
                  (681194 'move' call_tmp[681191](171652 'typeof' localeZeroGlobal[171489]))
                  unknown call_tmp[681198] "maybe param" "maybe type" "temp"
                  (681201 'move' call_tmp[681198](171655 call(171651 call (partial) chpl__deserialize _mt[243] call_tmp[681191]) data[171537]))
                  unknown temp[171649] "dead at end of block" "no auto destroy" "no copy"
                  (544811 'init var' temp[171649] call_tmp[681198])
                  (171658 'end of statement')
                  unknown call_tmp[681203] "maybe param" "maybe type" "temp"
                  (681206 'move' call_tmp[681203](171662 call chpl_get_global_serialize_table id[171495]))
                  const destVoidPtr[171660] "dead at end of block" "const" "insert auto destroy"
                  (544813 'init var' destVoidPtr[171660] call_tmp[681203])
                  (171665 'end of statement')
                  unknown call_tmp[681208] "expr temp" "maybe param" "maybe type" "temp" "type variable"
                  (681211 'move' call_tmp[681208](171672 'typeof' localeZeroGlobal[171489]))
                  unknown call_tmp[681213] "expr temp" "maybe param" "maybe type" "temp"
                  (681216 'move' call_tmp[681213](171671 call c_ptr[205100](?) call_tmp[681208]))
                  unknown call_tmp[681218] "maybe param" "maybe type" "temp"
                  (681221 'move' call_tmp[681218](171669 call _cast call_tmp[681213] destVoidPtr[171660]))
                  const dest[171667] "dead at end of block" "const" "insert auto destroy"
                  (544815 'init var' dest[171667] call_tmp[681218])
                  (171676 'end of statement' data[171537] destVoidPtr[171660])
                  unknown call_tmp[681225] "expr temp" "maybe param" "maybe type" "temp"
                  (681228 'move' call_tmp[681225](171682 call(171679 call (partial) deref _mt[243] dest[171667])))
                  (171677 '=' call_tmp[681225] temp[171649])
                  (483309 'end of statement' dest[171667] temp[171649])
                }
              }
              (171688 call _downEndCount _coforallCount[171686] nil[44])
              (171634 'coforall on block' 0 tmp[171626])
            }
            label _continueLabel[171698]
            _indexOfInterest[171693]
            _iterator[171694]
          }
          label _breakLabel[171699]
          Defer
          {
            {
              (171738 call _endCountFree _coforallCount[171686])
            }
          }
          (171743 call _waitEndCount _coforallCount[171686] 0 numTasks[171687])
        }
        {
          const _coforallCount[171755] "const" "end count" "temp"
          (171811 'move' _coforallCount[171755](171808 call _endCountAlloc 0))
          unknown _indexOfInterest[171762] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[171763] "expr temp" "temp"
          (171772 'move' _iterator[171763](171770 call _getIterator tmpIter[171620]))
          Defer
          {
            {
              (171788 call _freeIterator _iterator[171763])
            }
          }
          { scopeless type
            (171777 'move' _indexOfInterest[171762](171774 call iteratorIndex _iterator[171763]))
          }
          ForLoop[171764]
          {
            unknown loc[171781] "coforall index var" "index var" "insert auto destroy"
            (483316 'end of statement')
            (171783 'move' loc[171781] _indexOfInterest[171762])
            (483317 'end of statement' loc[171781])
            (171795 call _upEndCount _coforallCount[171755] 0)
            (483319 'end of statement')
            const tmp[171612] "const" "temp"
            unknown call_tmp[681230] "expr temp" "maybe param" "maybe type" "temp"
            (681233 'move' call_tmp[681230](171609 '_wide_get_locale' loc[171781]))
            (171614 'move' tmp[171612](171610 'deref' call_tmp[681230]))
            {
              {
                unknown call_tmp[681235] "expr temp" "maybe param" "maybe type" "temp"
                (681238 'move' call_tmp[681235](361478 call here[90438]))
                unknown call_tmp[681242] "expr temp" "maybe param" "maybe type" "temp"
                (681245 'move' call_tmp[681242](171554 call id _mt[243] call_tmp[681235]))
                unknown call_tmp[681247] "expr temp" "maybe param" "maybe type" "temp"
                (681250 'move' call_tmp[681247](171558 call != call_tmp[681242] root[171546]))
                unknown call_tmp[681252] "expr temp" "maybe param" "maybe type" "temp"
                (681255 'move' call_tmp[681252](171604 call _cond_test call_tmp[681247]))
                if call_tmp[681252]
                {
                  unknown call_tmp[681257] "expr temp" "maybe param" "maybe type" "temp" "type variable"
                  (681260 'move' call_tmp[681257](171561 'typeof' localeZeroGlobal[171489]))
                  unknown call_tmp[681264] "maybe param" "maybe type" "temp"
                  (681267 'move' call_tmp[681264](171567 call(171562 call (partial) chpl__deserialize _mt[243] call_tmp[681257]) data[171537]))
                  unknown temp[171568] "dead at end of block" "no auto destroy" "no copy"
                  (544817 'init var' temp[171568] call_tmp[681264])
                  (171571 'end of statement')
                  unknown call_tmp[681269] "maybe param" "maybe type" "temp"
                  (681272 'move' call_tmp[681269](171576 call chpl_get_global_serialize_table id[171495]))
                  const destVoidPtr[171577] "dead at end of block" "const" "insert auto destroy"
                  (544819 'init var' destVoidPtr[171577] call_tmp[681269])
                  (171580 'end of statement')
                  unknown call_tmp[681274] "expr temp" "maybe param" "maybe type" "temp" "type variable"
                  (681277 'move' call_tmp[681274](171584 'typeof' localeZeroGlobal[171489]))
                  unknown call_tmp[681279] "expr temp" "maybe param" "maybe type" "temp"
                  (681282 'move' call_tmp[681279](171586 call c_ptr[205100](?) call_tmp[681274]))
                  unknown call_tmp[681284] "maybe param" "maybe type" "temp"
                  (681287 'move' call_tmp[681284](171587 call _cast call_tmp[681279] destVoidPtr[171577]))
                  const dest[171589] "dead at end of block" "const" "insert auto destroy"
                  (544821 'init var' dest[171589] call_tmp[681284])
                  (171592 'end of statement' data[171537] destVoidPtr[171577])
                  unknown call_tmp[681291] "expr temp" "maybe param" "maybe type" "temp"
                  (681294 'move' call_tmp[681291](171600 call(171596 call (partial) deref _mt[243] dest[171589])))
                  (171602 '=' call_tmp[681291] temp[171568])
                  (483322 'end of statement' dest[171589] temp[171568])
                }
              }
              (171757 call _downEndCount _coforallCount[171755] nil[44])
              (171617 'coforall on block' 0 tmp[171612])
            }
            label _continueLabel[171767]
            _indexOfInterest[171762]
            _iterator[171763]
          }
          label _breakLabel[171768]
          Defer
          {
            {
              (171799 call _endCountFree _coforallCount[171755])
            }
          }
          (171804 call _waitEndCount _coforallCount[171755] 0)
        }
      }
    }
    (522461 return _void[55])
  }
  where {
    (748211 call chpl_statementLevelSymbol chpl__enableSerializedGlobals[171469])
  }
  function chpl__destroyBroadcastedGlobal[171845](ref arg localeZeroGlobal[171843]:_any[178](?), arg id[171848]:int(64)[13]) : _unknown[51] "no return value for void"
  {
    unknown globalType[171854] "dead at end of block" "insert auto destroy" "type variable"(171853 'typeof' localeZeroGlobal[171843])
    (544825 'move' globalType[171854](544823 'typeof' localeZeroGlobal[171843]))
    unknown call_tmp[681296] "expr temp" "maybe param" "maybe type" "temp"
    (681299 'move' call_tmp[681296](361484 call here[90438]))
    unknown call_tmp[681303] "maybe param" "maybe type" "temp"
    (681306 'move' call_tmp[681303](171859 call id _mt[243] call_tmp[681296]))
    const root[171862] "dead at end of block" "const" "insert auto destroy"
    (544827 'init var' root[171862] call_tmp[681303])
    (171865 'end of statement')
    {
      unknown tmpIter[171927] "expr temp" "maybe ref" "no copy" "temp"
      (171930 'move' tmpIter[171927] Locales[113662])
      unknown isRngDomArr[172114] "maybe param" "temp"
      unknown tmp[428560] "maybe param" "temp"
      (428571 'move' tmp[428560](172116 call isBoundedRange tmpIter[171927]))
      unknown call_tmp[681308] "expr temp" "maybe param" "maybe type" "temp"
      (681311 'move' call_tmp[681308](428573 call _cond_invalid tmp[428560]))
      if call_tmp[681308]
      {
        (428576 call compilerError "cannot promote short-circuiting || operator")
      }
      unknown tmp[570724] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[570725] "maybe param" "temp"
      unknown call_tmp[681313] "expr temp" "maybe param" "maybe type" "temp"
      (681316 'move' call_tmp[681313](428561 call isTrue tmp[428560]))
      (570730 'move' tmp[570725](570728 call _cond_test call_tmp[681313]))
      if tmp[570725]
      {
        (570735 'move' tmp[570724](570732 '_paramFoldLogical' tmp[570725] 1))
      }
      {
        unknown tmp[428581] "maybe param" "temp"
        (428592 'move' tmp[428581](172119 call isDomain tmpIter[171927]))
        unknown call_tmp[681318] "expr temp" "maybe param" "maybe type" "temp"
        (681321 'move' call_tmp[681318](428594 call _cond_invalid tmp[428581]))
        if call_tmp[681318]
        {
          (428597 call compilerError "cannot promote short-circuiting || operator")
        }
        unknown tmp[570697] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[570698] "maybe param" "temp"
        unknown call_tmp[681323] "expr temp" "maybe param" "maybe type" "temp"
        (681326 'move' call_tmp[681323](428582 call isTrue tmp[428581]))
        (570703 'move' tmp[570698](570701 call _cond_test call_tmp[681323]))
        if tmp[570698]
        {
          (570708 'move' tmp[570697](570705 '_paramFoldLogical' tmp[570698] 1))
        }
        {
          unknown tmp[570710] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[681328] "expr temp" "maybe param" "maybe type" "temp"
          (681331 'move' call_tmp[681328](172122 call isArray tmpIter[171927]))
          (570712 'move' tmp[570710](428586 call isTrue call_tmp[681328]))
          (570717 'move' tmp[570697](570714 '_paramFoldLogical' tmp[570698] tmp[570710]))
        }
        unknown tmp[570737] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (570739 'move' tmp[570737](428565 call isTrue tmp[570697]))
        (570744 'move' tmp[570724](570741 '_paramFoldLogical' tmp[570725] tmp[570737]))
      }
      (172129 'move' isRngDomArr[172114] tmp[570724])
      if isRngDomArr[172114]
      {
        const _coforallCount[171986] "const" "end count" "temp"
        (172051 'move' _coforallCount[171986](172048 call _endCountAlloc 0))
        unknown numTasks[171987] "temp"
        (172035 'move' numTasks[171987](172031 call size _mt[243] tmpIter[171927]))
        (172026 call _upEndCount _coforallCount[171986] 0 numTasks[171987])
        (483329 'end of statement')
        unknown _indexOfInterest[171993] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[171994] "expr temp" "temp"
        (172003 'move' _iterator[171994](172001 call _getIterator tmpIter[171927]))
        Defer
        {
          {
            (172019 call _freeIterator _iterator[171994])
          }
        }
        { scopeless type
          (172008 'move' _indexOfInterest[171993](172005 call iteratorIndex _iterator[171994]))
        }
        ForLoop[171995]
        {
          unknown loc[172012] "coforall index var" "index var" "insert auto destroy"
          (483331 'end of statement')
          (172014 'move' loc[172012] _indexOfInterest[171993])
          (483332 'end of statement' loc[172012])
          const tmp[171933] "const" "temp"
          unknown call_tmp[681335] "expr temp" "maybe param" "maybe type" "temp"
          (681338 'move' call_tmp[681335](171938 '_wide_get_locale' loc[172012]))
          (171935 'move' tmp[171933](171937 'deref' call_tmp[681335]))
          {
            {
              unknown call_tmp[681340] "expr temp" "maybe param" "maybe type" "temp"
              (681343 'move' call_tmp[681340](361489 call here[90438]))
              unknown call_tmp[681347] "expr temp" "maybe param" "maybe type" "temp"
              (681350 'move' call_tmp[681347](171950 call id _mt[243] call_tmp[681340]))
              unknown call_tmp[681352] "expr temp" "maybe param" "maybe type" "temp"
              (681355 'move' call_tmp[681352](171948 call != call_tmp[681347] root[171862]))
              unknown call_tmp[681357] "expr temp" "maybe param" "maybe type" "temp"
              (681360 'move' call_tmp[681357](171946 call _cond_test call_tmp[681352]))
              if call_tmp[681357]
              {
                unknown call_tmp[681362] "maybe param" "maybe type" "temp"
                (681365 'move' call_tmp[681362](171958 call chpl_get_global_serialize_table id[171848]))
                const voidPtr[171956] "dead at end of block" "const" "insert auto destroy"
                (544829 'init var' voidPtr[171956] call_tmp[681362])
                (171961 'end of statement')
                unknown call_tmp[681367] "expr temp" "maybe param" "maybe type" "temp"
                (681370 'move' call_tmp[681367](171967 call c_ptr[205100](?) globalType[171854]))
                unknown call_tmp[681372] "maybe param" "maybe type" "temp"
                (681375 'move' call_tmp[681372](171965 call _cast call_tmp[681367] voidPtr[171956]))
                unknown ptr[171963] "dead at end of block" "insert auto destroy"
                (544831 'init var' ptr[171963] call_tmp[681372])
                (171971 'end of statement')
                unknown call_tmp[681379] "maybe param" "maybe type" "temp"
                (681382 'move' call_tmp[681379](171978 call(171975 call (partial) deref _mt[243] ptr[171963])))
                unknown temp[171973] "dead at end of block" "no auto destroy" "no copy"
                (544833 'init var' temp[171973] call_tmp[681379])
                (171980 'end of statement' globalType[171854] voidPtr[171956] ptr[171963])
                (171982 call chpl__autoDestroy temp[171973])
                (483337 'end of statement' temp[171973])
              }
            }
            (171988 call _downEndCount _coforallCount[171986] nil[44])
            (171941 'coforall on block' 0 tmp[171933])
          }
          label _continueLabel[171998]
          _indexOfInterest[171993]
          _iterator[171994]
        }
        label _breakLabel[171999]
        Defer
        {
          {
            (172038 call _endCountFree _coforallCount[171986])
          }
        }
        (172043 call _waitEndCount _coforallCount[171986] 0 numTasks[171987])
      }
      {
        const _coforallCount[172055] "const" "end count" "temp"
        (172111 'move' _coforallCount[172055](172108 call _endCountAlloc 0))
        unknown _indexOfInterest[172062] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[172063] "expr temp" "temp"
        (172072 'move' _iterator[172063](172070 call _getIterator tmpIter[171927]))
        Defer
        {
          {
            (172088 call _freeIterator _iterator[172063])
          }
        }
        { scopeless type
          (172077 'move' _indexOfInterest[172062](172074 call iteratorIndex _iterator[172063]))
        }
        ForLoop[172064]
        {
          unknown loc[172081] "coforall index var" "index var" "insert auto destroy"
          (483343 'end of statement')
          (172083 'move' loc[172081] _indexOfInterest[172062])
          (483344 'end of statement' loc[172081])
          (172095 call _upEndCount _coforallCount[172055] 0)
          (483346 'end of statement')
          const tmp[171919] "const" "temp"
          unknown call_tmp[681384] "expr temp" "maybe param" "maybe type" "temp"
          (681387 'move' call_tmp[681384](171916 '_wide_get_locale' loc[172081]))
          (171921 'move' tmp[171919](171917 'deref' call_tmp[681384]))
          {
            {
              unknown call_tmp[681389] "expr temp" "maybe param" "maybe type" "temp"
              (681392 'move' call_tmp[681389](361486 call here[90438]))
              unknown call_tmp[681396] "expr temp" "maybe param" "maybe type" "temp"
              (681399 'move' call_tmp[681396](171870 call id _mt[243] call_tmp[681389]))
              unknown call_tmp[681401] "expr temp" "maybe param" "maybe type" "temp"
              (681404 'move' call_tmp[681401](171874 call != call_tmp[681396] root[171862]))
              unknown call_tmp[681406] "expr temp" "maybe param" "maybe type" "temp"
              (681409 'move' call_tmp[681406](171911 call _cond_test call_tmp[681401]))
              if call_tmp[681406]
              {
                unknown call_tmp[681411] "maybe param" "maybe type" "temp"
                (681414 'move' call_tmp[681411](171879 call chpl_get_global_serialize_table id[171848]))
                const voidPtr[171880] "dead at end of block" "const" "insert auto destroy"
                (544835 'init var' voidPtr[171880] call_tmp[681411])
                (171883 'end of statement')
                unknown call_tmp[681416] "expr temp" "maybe param" "maybe type" "temp"
                (681419 'move' call_tmp[681416](171889 call c_ptr[205100](?) globalType[171854]))
                unknown call_tmp[681421] "maybe param" "maybe type" "temp"
                (681424 'move' call_tmp[681421](171890 call _cast call_tmp[681416] voidPtr[171880]))
                unknown ptr[171892] "dead at end of block" "insert auto destroy"
                (544837 'init var' ptr[171892] call_tmp[681421])
                (171895 'end of statement')
                unknown call_tmp[681428] "maybe param" "maybe type" "temp"
                (681431 'move' call_tmp[681428](171901 call(171897 call (partial) deref _mt[243] ptr[171892])))
                unknown temp[171902] "dead at end of block" "no auto destroy" "no copy"
                (544839 'init var' temp[171902] call_tmp[681428])
                (171905 'end of statement' globalType[171854] voidPtr[171880] ptr[171892])
                (171909 call chpl__autoDestroy temp[171902])
                (483350 'end of statement' temp[171902])
              }
            }
            (172057 call _downEndCount _coforallCount[172055] nil[44])
            (171924 'coforall on block' 0 tmp[171919])
          }
          label _continueLabel[172067]
          _indexOfInterest[172062]
          _iterator[172063]
        }
        label _breakLabel[172068]
        Defer
        {
          {
            (172099 call _endCountFree _coforallCount[172055])
          }
        }
        (172104 call _waitEndCount _coforallCount[172055] 0)
      }
    }
    (522463 return _void[55])
  }
  where {
    (748213 call chpl_statementLevelSymbol chpl__enableSerializedGlobals[171469])
  }
  (355225 'used modules list'(171462 'use' ChapelLocale[89847])(171466 'use' CPtr[204989]))
}