AST dump for LocaleTree after pass removeUnnecessaryAutoCopyCalls.
Module use list: ChapelLocale 

{
  type _class_localson_fn[2034820] val _runtime_hdr[2034821]:chpl_comm_on_bundle_t[209301] val _0_tmp[2034823]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2034825]:BaseLocale[91201] val _2_rvfDerefTmp[2034827]:BaseLocale[91201]
  function chpl__init_LocaleTree[415904]() : void[4] "insert line file info" "module init" "resolved"
  {
    const-val ret_tmp[1794713]:locale[28] "temp"
    (1353667 call init_default_left[1353642] ret_tmp[1794713])
    (1794716 'move' default_arg_left[1353665] ret_tmp[1794713])
    const-val ret_tmp[1794725]:locale[28] "temp"
    (1353698 call init_default_right[1353673] ret_tmp[1794725])
    (1794728 'move' default_arg_right[1353696] ret_tmp[1794725])
    (1353633 call init[808357] chpl_localeTree[155188] default_arg_left[1353665] default_arg_right[1353696])
    (155359 call chpl_initLocaleTree[155194])
    (520571 return _void[55])
  }
  function _ref(chpl_localeTreeRecord)[967671].left[808305](ref arg this[808309]:_ref(chpl_localeTreeRecord)[967671]) ref : _ref(locale)[948755] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[808319]:_ref(locale)[948755] "dead after last mention" "RVV" "temp"
    ref call_tmp[808326]:_ref(locale)[948755] "dead after last mention" "maybe param" "temp"
    (808329 'move' call_tmp[808326](808313 '.' this[808309] left[155173]))
    (808324 'move' ret[808319] call_tmp[808326])
    (808321 return ret[808319])
  }
  function _ref(chpl_localeTreeRecord)[967671].right[808331](ref arg this[808335]:_ref(chpl_localeTreeRecord)[967671]) ref : _ref(locale)[948755] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[808345]:_ref(locale)[948755] "dead after last mention" "RVV" "temp"
    ref call_tmp[808352]:_ref(locale)[948755] "dead after last mention" "maybe param" "temp"
    (808355 'move' call_tmp[808352](808339 '.' this[808335] right[155177]))
    (808350 'move' ret[808345] call_tmp[808352])
    (808347 return ret[808345])
  }
  function _ref(chpl_localeTreeRecord)[967671].init[808357](ref arg this[808360]:_ref(chpl_localeTreeRecord)[967671], const  ref arg left[808363]:locale[28], const  ref arg right[808376]:locale[28]) : void[4] "compiler generated" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_tmp_left[1353710]:locale[28] "dead at end of block" "no auto destroy" "no copy" "temp"
    (1353714 'move' _formal_tmp_left[1353710] left[808363])
    val _formal_tmp_right[1353711]:locale[28] "dead at end of block" "no auto destroy" "no copy" "temp"
    (1353718 'move' _formal_tmp_right[1353711] right[808376])
    (808391 '.=' this[808360] left[155173] _formal_tmp_left[1353710])
    (808394 '.=' this[808360] right[155177] _formal_tmp_right[1353711])
    (808398 return _void[55])
  }
  function init_default_right[1353673](ref arg _retArg[1794731]:_ref(locale)[948755]) : void[4] "compiler generated" "default actual function" "fn returns via _retArg" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    const-val ret[1353675]:locale[28] "dead after last mention" "RVV" "maybe param" "temp"
    const-val right[1353680]:locale[28] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (1353691 call init[90000] right[1353680])
    (1353687 'move' ret[1353675] right[1353680])
    (1794733 '=' _retArg[1794731] ret[1353675])
    (1794735 return _void[55])
  }
  function init_default_left[1353642](ref arg _retArg[1794719]:_ref(locale)[948755]) : void[4] "compiler generated" "default actual function" "fn returns via _retArg" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    const-val ret[1353644]:locale[28] "dead after last mention" "RVV" "maybe param" "temp"
    const-val left[1353649]:locale[28] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (1353660 call init[90000] left[1353649])
    (1353656 'move' ret[1353644] left[1353649])
    (1794721 '=' _retArg[1794719] ret[1353644])
    (1794723 return _void[55])
  }
  function _ref(chpl_localeTreeRecord)[967671].deinit[808480](const  ref arg this[808484]:_ref(chpl_localeTreeRecord)[967671]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved"
  {
    label _enddeinit[1771803]
    ref _field_destructor_tmp_[1771801]:_ref(locale)[948755] "temp"
    (1771808 'move' _field_destructor_tmp_[1771801](1771805 '.' this[808484] right[155177]))
    (1771810 call deinit[90185] _field_destructor_tmp_[1771801])
    ref _field_destructor_tmp_[1771813]:_ref(locale)[948755] "temp"
    (1771818 'move' _field_destructor_tmp_[1771813](1771815 '.' this[808484] left[155173]))
    (1771820 call deinit[90185] _field_destructor_tmp_[1771813])
    (808492 return _void[55])
  }
  type chpl_localeTreeRecord[155184] val left[155173]:locale[28] val right[155177]:locale[28]
  val chpl_localeTree[155188]:chpl_localeTreeRecord[155184] "dead at end of block" "insert auto destroy" "locale private"
  function chpl_initLocaleTree[155194]() : void[4] "resolved" "no return value for void"
  {
    {
      val _indexOfInterest[155321]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[155322]:_ic_these__ref__domain_DefaultRectangularDom_1_int64_t_F[1314694] "dead at end of block" "expr temp" "temp"
      (155331 'move' _iterator[155322](155329 call _getIterator[1305871] LocaleSpace[113664]))
      {
        val ret[1857447]:_ir_these__ref__domain_DefaultRectangularDom_1_int64_t_F[1314700] "dead after last mention" "RVV" "temp"
        val _indexOfInterest[1857449]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[1857451]:_ic_these_DefaultRectangularDom_1_int64_t_F[1306625] "dead at end of block" "expr temp" "temp"
        val call_tmp[1857453]:domain(1,int(64),false)[1250845] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val this[1857812]:domain(1,int(64),false)[1252508] "temp"
        (1857817 'move' this[1857812](1857814 '.v' _iterator[155322] F0_this[1977782]))
        (1857455 'move' call_tmp[1857453](1857458 call _value[1252749] this[1857812]))
        const-val call_tmp[1857460]:_ir_these_DefaultRectangularDom_1_int64_t_F[1306631] "dead at end of block" "expr temp" "maybe param" "temp"
        val coerce_tmp[1857462]:domain(1,int(64),false)[1250845] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1857464 'move' coerce_tmp[1857462] call_tmp[1857453])
        const-val default_arg_tasksPerLocale[1857467]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1857469 'move' default_arg_tasksPerLocale[1857467](1857472 call these_default_tasksPerLocale[1306435] call_tmp[1857453]))
        const-val default_arg_ignoreRunning[1857474]:bool[10] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1857476 'move' default_arg_ignoreRunning[1857474](1857479 call these_default_ignoreRunning[1306466] coerce_tmp[1857462]))
        const-val default_arg_minIndicesPerTask[1857481]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1857483 'move' default_arg_minIndicesPerTask[1857481](1857486 call these_default_minIndicesPerTask[1306497] coerce_tmp[1857462]))
        const-val default_arg_offset[1857488]:1*int(64)[1256436] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
        const-val ret_tmp[1857490]:1*int(64)[1256436] "temp"
        (1857493 call these_default_offset[1306528] coerce_tmp[1857462] ret_tmp[1857490])
        (1857496 'move' default_arg_offset[1857488] ret_tmp[1857490])
        const-val ret_tmp[1857499]:_ir_these_DefaultRectangularDom_1_int64_t_F[1306631] "temp"
        (1857502 call these[1306002] coerce_tmp[1857462] default_arg_tasksPerLocale[1857467] default_arg_ignoreRunning[1857474] default_arg_minIndicesPerTask[1857481] default_arg_offset[1857488] ret_tmp[1857499])
        (1857509 'move' call_tmp[1857460] ret_tmp[1857499])
        (1857512 'move' _iterator[1857451](1857515 call _getIterator[1306640] call_tmp[1857460]))
        {
          val ret[1915037]:_ir_these_DefaultRectangularDom_1_int64_t_F[1306631] "dead after last mention" "RVV" "temp"
          val _indexOfInterest[1915039]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1915041]:_ic_these_range_int64_t_bounded_F[1096614] "dead at end of block" "expr temp" "temp"
          ref call_tmp[1915043]:_ref(range(int(64),bounded,false))[1026769] "dead at end of block" "maybe param" "temp"
          ref _this_tmp_[1915045]:_ref(1*range(int(64),bounded,false))[1244665] "dead at end of block" "temp"
          const-val this[1915484]:domain(1,int(64),false)[1250845] "temp"
          (1915489 'move' this[1915484](1915486 '.v' _iterator[1857451] F0_this[1979003]))
          (1915047 'move' _this_tmp_[1915045](1915050 call ranges[1251255] this[1915484]))
          (1915052 'move' call_tmp[1915043](1915054 '.' _this_tmp_[1915045] x0[1244605]))
          (1915057 'move' _iterator[1915041](1915060 call _getIterator[1095231] call_tmp[1915043]))
          {
            val ret[1915063]:_ir_these_range_int64_t_bounded_F[1096620] "dead after last mention" "RVV" "temp"
            const-val _return_tmp_[1915065]:bool[10] "dead after last mention" "temp"
            const-val this[1915067]:range(int(64),bounded,false)[1026725] "temp"
            (1915069 'move' this[1915067](1915071 '.v' _iterator[1915041] F0_this[1964014]))
            (1915074 'move' _return_tmp_[1915065](1915077 call checkIfIterWillOverflow[1095725] this[1915067] 1))
            val i[1915080]:int(64)[13] "dead at end of block" "insert auto destroy"
            val call_tmp[1915082]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (1915084 'move' i[1915080] 0)
            ref call_tmp[1915087]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[1915089]:range(int(64),bounded,false)[1026725] "temp"
            (1915091 'move' this[1915089](1915093 '.v' _iterator[1915041] F0_this[1964014]))
            (1915096 'move' call_tmp[1915087](1915099 call _low[1028363] this[1915089]))
            const-val start[1915101]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1915103]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1915105 'move' coerce_tmp[1915103](1915107 'deref' call_tmp[1915087]))
            (1915109 '=' start[1915101] coerce_tmp[1915103])
            (1915112 'noop')
            ref call_tmp[1915113]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[1915115]:range(int(64),bounded,false)[1026725] "temp"
            (1915117 'move' this[1915115](1915119 '.v' _iterator[1915041] F0_this[1964014]))
            (1915122 'move' call_tmp[1915113](1915125 call _high[1028571] this[1915115]))
            const end[1915127]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1915129]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1915131 'move' coerce_tmp[1915129](1915133 'deref' call_tmp[1915113]))
            (1915135 '=' end[1915127] coerce_tmp[1915129])
            (1915138 'noop')
            CForLoop[1915139] hazard
            {
              const-val yret[1915154]:int(64)[13] "dead after last mention" "YVV" "temp"
              const-val call_tmp[1915156]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val this[1915158]:range(int(64),bounded,false)[1026725] "temp"
              (1915160 'move' this[1915158](1915162 '.v' _iterator[1915041] F0_this[1964014]))
              (1915165 'move' call_tmp[1915156](1915168 call chpl_intToIdx[1028391] this[1915158] i[1915080]))
              (1915171 'move' yret[1915154] call_tmp[1915156])
              const-val _yieldedIndex[1915174]:int(64)[13] "temp"
              (1915176 'move' _yieldedIndex[1915174] call_tmp[1915156])
              {
                const-val i[1915180]:int(64)[13] "const" "index var" "insert auto destroy"
                (1915182 'move' i[1915180] _yieldedIndex[1915174])
                const-val yret[1915185]:int(64)[13] "dead after last mention" "YVV" "temp"
                (1915187 'move' yret[1915185] _yieldedIndex[1915174])
                const-val _yieldedIndex[1915209]:int(64)[13] "temp"
                (1915482 'move' _yieldedIndex[1915209] _yieldedIndex[1915174])
                {
                  const-val i[1915211]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1915213 'move' i[1915211] _yieldedIndex[1915209])
                  const-val yret[1915216]:int(64)[13] "dead after last mention" "YVV" "temp"
                  (1915218 'move' yret[1915216] _yieldedIndex[1915209])
                  const-val _yieldedIndex[1915221]:int(64)[13] "temp"
                  (1915223 'move' _yieldedIndex[1915221] _yieldedIndex[1915209])
                  {
                    const i[1915227]:int(64)[13] "const" "index var" "insert auto destroy"
                    (1915229 'move' i[1915227] _yieldedIndex[1915221])
                    {
                      val left[1915233]:BaseLocale[91201] "dead at end of block" "insert auto destroy"
                      val init_coerce_tmp[1915235]:BaseLocale[91201] "dead at end of block" "temp"
                      (1915237 'move' init_coerce_tmp[1915235](1915239 'cast' BaseLocale[91201] nil[44]))
                      (1915242 'move' left[1915233] init_coerce_tmp[1915235])
                      val right[1915245]:BaseLocale[91201] "dead at end of block" "insert auto destroy"
                      val init_coerce_tmp[1915247]:BaseLocale[91201] "dead at end of block" "temp"
                      (1915249 'move' init_coerce_tmp[1915247](1915251 'cast' BaseLocale[91201] nil[44]))
                      (1915254 'move' right[1915245] init_coerce_tmp[1915247])
                      const-val call_tmp[1915257]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                      (1915259 'move' call_tmp[1915257](1915262 call +[949577] i[1915227]))
                      const-val call_tmp[1915264]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                      (1915266 'move' call_tmp[1915264](1915269 call *[941917] call_tmp[1915257]))
                      const-val call_tmp[1915271]:int(64)[13] "dead at end of block" "maybe param" "temp"
                      (1915273 'move' call_tmp[1915271](1915276 call -[962137] call_tmp[1915264]))
                      val child[1915278]:int(64)[13] "dead at end of block" "insert auto destroy"
                      (1915280 'move' child[1915278] call_tmp[1915271])
                      const-val call_tmp[1915283]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1915285 'move' call_tmp[1915283](1915288 call <[437363] child[1915278] numLocales[209834]))
                      const-val call_tmp[1915291]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1915293 'move' call_tmp[1915291] call_tmp[1915283])
                      if call_tmp[1915291]
                      {
                        val call_tmp[1915298]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        val _chpl_forward_tgt[1915300]:BaseLocale[91201] "dead after last mention" "maybe ref" "maybe type" "temp"
                        (1915302 'move' _chpl_forward_tgt[1915300](1915305 call chpl_forwarding_expr3__value[89992] rootLocale[91511]))
                        val coerce_tmp[1915307]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (1915309 'move' coerce_tmp[1915307] _chpl_forward_tgt[1915300])
                        val _virtual_method_tmp_[1915312]:int(32)[95] "temp"
                        (1915314 'move' _virtual_method_tmp_[1915312](1915316 'getcid' coerce_tmp[1915307]))
                        val ret_tmp[1915318]:locale[28] "temp"
                        (1915320 'virtual method call' getChild[91186] _virtual_method_tmp_[1915312] coerce_tmp[1915307] child[1915278] ret_tmp[1915318])
                        (1915326 'move' call_tmp[1915298] ret_tmp[1915318])
                        ref call_tmp[1915329]:_ref(BaseLocale)[982334] "dead after last mention" "maybe param" "temp"
                        (1915331 'move' call_tmp[1915329](1915334 call _instance[782666] call_tmp[1915298]))
                        val coerce_tmp[1915336]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (1915338 'move' coerce_tmp[1915336](1915340 'deref' call_tmp[1915329]))
                        (1915343 call =[986391] left[1915233] coerce_tmp[1915336])
                        (1915347 call chpl__autoDestroy[1494484] call_tmp[1915298])
                        (1915350 call +=[451226] child[1915278] 1)
                        const-val call_tmp[1915353]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1915355 'move' call_tmp[1915353](1915358 call <[437363] child[1915278] numLocales[209834]))
                        const-val call_tmp[1915361]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1915363 'move' call_tmp[1915361] call_tmp[1915353])
                        if call_tmp[1915361]
                        {
                          val call_tmp[1915368]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                          val _chpl_forward_tgt[1915370]:BaseLocale[91201] "dead after last mention" "maybe ref" "maybe type" "temp"
                          (1915372 'move' _chpl_forward_tgt[1915370](1915375 call chpl_forwarding_expr3__value[89992] rootLocale[91511]))
                          val coerce_tmp[1915377]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (1915379 'move' coerce_tmp[1915377] _chpl_forward_tgt[1915370])
                          val _virtual_method_tmp_[1915382]:int(32)[95] "temp"
                          (1915384 'move' _virtual_method_tmp_[1915382](1915386 'getcid' coerce_tmp[1915377]))
                          val ret_tmp[1915388]:locale[28] "temp"
                          (1915390 'virtual method call' getChild[91186] _virtual_method_tmp_[1915382] coerce_tmp[1915377] child[1915278] ret_tmp[1915388])
                          (1915396 'move' call_tmp[1915368] ret_tmp[1915388])
                          ref call_tmp[1915399]:_ref(BaseLocale)[982334] "dead after last mention" "maybe param" "temp"
                          (1915401 'move' call_tmp[1915399](1915404 call _instance[782666] call_tmp[1915368]))
                          val coerce_tmp[1915406]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (1915408 'move' coerce_tmp[1915406](1915410 'deref' call_tmp[1915399]))
                          (1915413 call =[986391] right[1915245] coerce_tmp[1915406])
                          (1915417 call chpl__autoDestroy[1494484] call_tmp[1915368])
                        }
                      }
                      const-val tmp[1915421]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
                      const-val call_tmp[1915423]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                      val _chpl_forward_tgt[1915425]:BaseLocale[91201] "dead after last mention" "maybe ref" "maybe type" "temp"
                      (1915427 'move' _chpl_forward_tgt[1915425](1915430 call chpl_forwarding_expr3__value[89992] rootLocale[91511]))
                      val coerce_tmp[1915432]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (1915434 'move' coerce_tmp[1915432] _chpl_forward_tgt[1915425])
                      val _virtual_method_tmp_[1915437]:int(32)[95] "temp"
                      (1915439 'move' _virtual_method_tmp_[1915437](1915441 'getcid' coerce_tmp[1915432]))
                      val ret_tmp[1915443]:locale[28] "temp"
                      (1915445 'virtual method call' getChild[91186] _virtual_method_tmp_[1915437] coerce_tmp[1915432] i[1915227] ret_tmp[1915443])
                      (1915451 'move' call_tmp[1915423] ret_tmp[1915443])
                      const-val call_tmp[1915454]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
                      val _locale_tmp_[1915456]:BaseLocale[91201] "dead after last mention" "temp"
                      (1915458 'move' _locale_tmp_[1915456](1915461 call _value[89981] call_tmp[1915423]))
                      (1915463 'move' call_tmp[1915454](1915465 '_wide_get_locale' _locale_tmp_[1915456]))
                      (1915467 'move' tmp[1915421] call_tmp[1915454])
                      val rvfDerefTmp[2032122]:BaseLocale[91201] "concurrently accessed" "temp"
                      (2032125 'move' rvfDerefTmp[2032122] left[1915233])
                      val rvfDerefTmp[2032129]:BaseLocale[91201] "concurrently accessed" "temp"
                      (2032132 'move' rvfDerefTmp[2032129] right[1915245])
                      val isdirect[2034803]:bool[10] "temp"
                      (2034808 'move' isdirect[2034803](2034805 call chpl_doDirectExecuteOn[187423] tmp[1915421]))
                      if isdirect[2034803]
                      {
                        (2034812 call on_fn[935153] rvfDerefTmp[2032122] rvfDerefTmp[2032129])
                      }
                      {
                        val _args_foron_fn[2034830]:_class_localson_fn[2034820] "temp"
                        (2034834 'move' _args_foron_fn[2034830](2034832 'stack allocate class' _class_localson_fn[2034820]))
                        (2034836 '.=' _args_foron_fn[2034830] _0_tmp[2034823] tmp[1915421])
                        (2034840 '.=' _args_foron_fn[2034830] _1_rvfDerefTmp[2034825] rvfDerefTmp[2032122])
                        (2034844 '.=' _args_foron_fn[2034830] _2_rvfDerefTmp[2034827] rvfDerefTmp[2032129])
                        val _args_vforon_fn[2034848]:c_void_ptr[149] "temp"
                        (2034852 'move' _args_vforon_fn[2034848](2034850 'cast_to_void_star' _args_foron_fn[2034830]))
                        val _args_sizeon_fn[2034854]:int(64)[13] "temp"
                        (2034858 'move' _args_sizeon_fn[2034854](2034856 'sizeof_bundle' _class_localson_fn[2034820]))
                        on(2034898 call wrapon_fn[2034860] tmp[1915421] _args_vforon_fn[2034848] _args_sizeon_fn[2034854] _args_foron_fn[2034830])
                      }
                      (1915476 call chpl__autoDestroy[1494484] call_tmp[1915423])
                      {
                      }
                    }
                    label _continueLabel[1915479]
                  }
                }
              }
              {
                (1915141 '=' i[1915080] coerce_tmp[1915103])
              }
              {
                (1915145 '<=' i[1915080] end[1915127])
              }
              {
                val call_tmp[1915149]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (1915151 '+=' i[1915080] 1)
              }
            }
            label _endthese[1915200]
          }
          (1915203 call _freeIterator[1101917] _iterator[1915041])
          label _endthese[1915205]
        }
        (1857544 call _freeIterator[1314628] _iterator[1857451])
        (1857547 call chpl__autoDestroy[1590069] default_arg_offset[1857488])
        label _endthese[1857549]
      }
      label _breakLabel[155327]
      (1798690 call _freeIterator[1315457] _iterator[155322])
    }
    (520569 return _void[55])
  }
  const-val default_arg_left[1353665]:locale[28] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
  const-val default_arg_right[1353696]:locale[28] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
  function on_fn[935153](const in arg left[1765442]:BaseLocale[91201], const in arg right[1765444]:BaseLocale[91201]) : void[4] "on" "resolved" "fn synchronization free"
  {
    {
      ref call_tmp[672152]:_ref(locale)[948755] "dead after last mention" "maybe param" "temp"
      (672155 'move' call_tmp[672152](155288 call left[808305] chpl_localeTree[155188]))
      ref call_tmp[672159]:_ref(BaseLocale)[982334] "dead after last mention" "maybe param" "temp"
      (672162 'move' call_tmp[672159](155291 call _instance[782666] call_tmp[672152]))
      val tmp[1766106]:BaseLocale[91201] "temp"
      (1766109 'move' tmp[1766106] left[1765442])
      (155295 call =[986391] call_tmp[672159] tmp[1766106])
      ref call_tmp[672166]:_ref(locale)[948755] "dead after last mention" "maybe param" "temp"
      (672169 'move' call_tmp[672166](155300 call right[808331] chpl_localeTree[155188]))
      ref call_tmp[672173]:_ref(BaseLocale)[982334] "dead after last mention" "maybe param" "temp"
      (672176 'move' call_tmp[672173](155303 call _instance[782666] call_tmp[672166]))
      val tmp[1766112]:BaseLocale[91201] "temp"
      (1766115 'move' tmp[1766112] right[1765444])
      (155307 call =[986391] call_tmp[672173] tmp[1766112])
    }
    (935160 return _void[55])
  }
  function chpl__deinit_LocaleTree[1808162]() : void[4] "resolved"
  {
    label _endchpl__deinit_LocaleTree[1808168]
    (1808170 call chpl__autoDestroy[1495913] chpl_localeTree[155188])
    (1808165 return _void[55])
  }
  function wrapon_fn[2034860](const in arg dummy_locale_arg[2034862]:chpl_localeID_t[209294], in arg buf[2034864]:c_void_ptr[149], in arg buf_size[2034866]:int(64)[13], in arg c[2034868]:_class_localson_fn[2034820]) : void[4] "on block"
  {
    val _0_tmp[2034873]:chpl_localeID_t[209294] "temp"
    (2034878 'move' _0_tmp[2034873](2034875 '.v' c[2034868] _0_tmp[2034823]))
    val _1_rvfDerefTmp[2034880]:BaseLocale[91201] "temp"
    (2034885 'move' _1_rvfDerefTmp[2034880](2034882 '.v' c[2034868] _1_rvfDerefTmp[2034825]))
    val _2_rvfDerefTmp[2034888]:BaseLocale[91201] "temp"
    (2034893 'move' _2_rvfDerefTmp[2034888](2034890 '.v' c[2034868] _2_rvfDerefTmp[2034827]))
    (2034871 call on_fn[935153] _1_rvfDerefTmp[2034880] _2_rvfDerefTmp[2034888])
    (2034896 return _void[55])
  }
}