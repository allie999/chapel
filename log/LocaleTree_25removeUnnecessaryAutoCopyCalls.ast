AST dump for LocaleTree after pass removeUnnecessaryAutoCopyCalls.
Module use list: ChapelLocale 

{
  type _class_localson_fn[2148085] val _runtime_hdr[2148086]:chpl_comm_on_bundle_t[209359] val _0_tmp[2148088]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2148090]:BaseLocale[91204] val _2_rvfDerefTmp[2148092]:BaseLocale[91204]
  function chpl__init_LocaleTree[416036]() : void[4] "insert line file info" "module init" "resolved"
  {
    const-val ret_tmp[1871904]:locale[28] "temp"
    (1353817 call init_default_left[1353792] ret_tmp[1871904])
    (1871907 'move' default_arg_left[1353815] ret_tmp[1871904])
    const-val ret_tmp[1871916]:locale[28] "temp"
    (1353848 call init_default_right[1353823] ret_tmp[1871916])
    (1871919 'move' default_arg_right[1353846] ret_tmp[1871916])
    (1353783 call init[808507] chpl_localeTree[155232] default_arg_left[1353815] default_arg_right[1353846])
    (155403 call chpl_initLocaleTree[155238])
    (520708 return _void[55])
  }
  function _ref(chpl_localeTreeRecord)[967821].left[808455](ref arg this[808459]:_ref(chpl_localeTreeRecord)[967821]) ref : _ref(locale)[948905] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[808469]:_ref(locale)[948905] "dead after last mention" "RVV" "temp"
    ref call_tmp[808476]:_ref(locale)[948905] "dead after last mention" "maybe param" "temp"
    (808479 'move' call_tmp[808476](808463 '.' this[808459] left[155217]))
    (808474 'move' ret[808469] call_tmp[808476])
    (808471 return ret[808469])
  }
  function _ref(chpl_localeTreeRecord)[967821].right[808481](ref arg this[808485]:_ref(chpl_localeTreeRecord)[967821]) ref : _ref(locale)[948905] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[808495]:_ref(locale)[948905] "dead after last mention" "RVV" "temp"
    ref call_tmp[808502]:_ref(locale)[948905] "dead after last mention" "maybe param" "temp"
    (808505 'move' call_tmp[808502](808489 '.' this[808485] right[155221]))
    (808500 'move' ret[808495] call_tmp[808502])
    (808497 return ret[808495])
  }
  function _ref(chpl_localeTreeRecord)[967821].init[808507](ref arg this[808510]:_ref(chpl_localeTreeRecord)[967821], const  ref arg left[808513]:locale[28], const  ref arg right[808526]:locale[28]) : void[4] "compiler generated" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_tmp_left[1353860]:locale[28] "dead at end of block" "no auto destroy" "no copy" "temp"
    (1353864 'move' _formal_tmp_left[1353860] left[808513])
    val _formal_tmp_right[1353861]:locale[28] "dead at end of block" "no auto destroy" "no copy" "temp"
    (1353868 'move' _formal_tmp_right[1353861] right[808526])
    (808541 '.=' this[808510] left[155217] _formal_tmp_left[1353860])
    (808544 '.=' this[808510] right[155221] _formal_tmp_right[1353861])
    (808548 return _void[55])
  }
  function init_default_right[1353823](ref arg _retArg[1871922]:_ref(locale)[948905]) : void[4] "compiler generated" "default actual function" "fn returns via _retArg" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    const-val ret[1353825]:locale[28] "dead after last mention" "RVV" "maybe param" "temp"
    const-val right[1353830]:locale[28] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (1353841 call init[90003] right[1353830])
    (1353837 'move' ret[1353825] right[1353830])
    (1871924 '=' _retArg[1871922] ret[1353825])
    (1871926 return _void[55])
  }
  function init_default_left[1353792](ref arg _retArg[1871910]:_ref(locale)[948905]) : void[4] "compiler generated" "default actual function" "fn returns via _retArg" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    const-val ret[1353794]:locale[28] "dead after last mention" "RVV" "maybe param" "temp"
    const-val left[1353799]:locale[28] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (1353810 call init[90003] left[1353799])
    (1353806 'move' ret[1353794] left[1353799])
    (1871912 '=' _retArg[1871910] ret[1353794])
    (1871914 return _void[55])
  }
  function _ref(chpl_localeTreeRecord)[967821].deinit[808630](const  ref arg this[808634]:_ref(chpl_localeTreeRecord)[967821]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved"
  {
    label _enddeinit[1848266]
    ref _field_destructor_tmp_[1848264]:_ref(locale)[948905] "temp"
    (1848271 'move' _field_destructor_tmp_[1848264](1848268 '.' this[808634] right[155221]))
    (1848273 call deinit[90188] _field_destructor_tmp_[1848264])
    ref _field_destructor_tmp_[1848276]:_ref(locale)[948905] "temp"
    (1848281 'move' _field_destructor_tmp_[1848276](1848278 '.' this[808634] left[155217]))
    (1848283 call deinit[90188] _field_destructor_tmp_[1848276])
    (808642 return _void[55])
  }
  type chpl_localeTreeRecord[155228] val left[155217]:locale[28] val right[155221]:locale[28]
  val chpl_localeTree[155232]:chpl_localeTreeRecord[155228] "dead at end of block" "insert auto destroy" "locale private"
  function chpl_initLocaleTree[155238]() : void[4] "resolved" "no return value for void"
  {
    {
      val _indexOfInterest[155365]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[155366]:_ic_these__ref__domain_DefaultRectangularDom_1_int64_t_F[1314844] "dead at end of block" "expr temp" "temp"
      (155375 'move' _iterator[155366](155373 call _getIterator[1306021] LocaleSpace[113670]))
      {
        val ret[1941479]:_ir_these__ref__domain_DefaultRectangularDom_1_int64_t_F[1314850] "dead after last mention" "RVV" "temp"
        val _indexOfInterest[1941481]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[1941483]:_ic_these_DefaultRectangularDom_1_int64_t_F[1306775] "dead at end of block" "expr temp" "temp"
        val call_tmp[1941485]:domain(1,int(64),false)[1250995] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val this[1941844]:domain(1,int(64),false)[1252658] "temp"
        (1941849 'move' this[1941844](1941846 '.v' _iterator[155366] F0_this[2077409]))
        (1941487 'move' call_tmp[1941485](1941490 call _value[1252899] this[1941844]))
        const-val call_tmp[1941492]:_ir_these_DefaultRectangularDom_1_int64_t_F[1306781] "dead at end of block" "expr temp" "maybe param" "temp"
        val coerce_tmp[1941494]:domain(1,int(64),false)[1250995] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1941496 'move' coerce_tmp[1941494] call_tmp[1941485])
        const-val default_arg_tasksPerLocale[1941499]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1941501 'move' default_arg_tasksPerLocale[1941499](1941504 call these_default_tasksPerLocale[1306585] call_tmp[1941485]))
        const-val default_arg_ignoreRunning[1941506]:bool[10] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1941508 'move' default_arg_ignoreRunning[1941506](1941511 call these_default_ignoreRunning[1306616] coerce_tmp[1941494]))
        const-val default_arg_minIndicesPerTask[1941513]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1941515 'move' default_arg_minIndicesPerTask[1941513](1941518 call these_default_minIndicesPerTask[1306647] coerce_tmp[1941494]))
        const-val default_arg_offset[1941520]:1*int(64)[1256586] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
        const-val ret_tmp[1941522]:1*int(64)[1256586] "temp"
        (1941525 call these_default_offset[1306678] coerce_tmp[1941494] ret_tmp[1941522])
        (1941528 'move' default_arg_offset[1941520] ret_tmp[1941522])
        const-val ret_tmp[1941531]:_ir_these_DefaultRectangularDom_1_int64_t_F[1306781] "temp"
        (1941534 call these[1306152] coerce_tmp[1941494] default_arg_tasksPerLocale[1941499] default_arg_ignoreRunning[1941506] default_arg_minIndicesPerTask[1941513] default_arg_offset[1941520] ret_tmp[1941531])
        (1941541 'move' call_tmp[1941492] ret_tmp[1941531])
        (1941544 'move' _iterator[1941483](1941547 call _getIterator[1306790] call_tmp[1941492]))
        {
          val ret[2008203]:_ir_these_DefaultRectangularDom_1_int64_t_F[1306781] "dead after last mention" "RVV" "temp"
          val _indexOfInterest[2008205]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[2008207]:_ic_these_range_int64_t_bounded_F[1096764] "dead at end of block" "expr temp" "temp"
          ref call_tmp[2008209]:_ref(range(int(64),bounded,false))[1026919] "dead at end of block" "maybe param" "temp"
          ref _this_tmp_[2008211]:_ref(1*range(int(64),bounded,false))[1244815] "dead at end of block" "temp"
          const-val this[2008650]:domain(1,int(64),false)[1250995] "temp"
          (2008655 'move' this[2008650](2008652 '.v' _iterator[1941483] F0_this[2078630]))
          (2008213 'move' _this_tmp_[2008211](2008216 call ranges[1251405] this[2008650]))
          (2008218 'move' call_tmp[2008209](2008220 '.' _this_tmp_[2008211] x0[1244755]))
          (2008223 'move' _iterator[2008207](2008226 call _getIterator[1095381] call_tmp[2008209]))
          {
            val ret[2008229]:_ir_these_range_int64_t_bounded_F[1096770] "dead after last mention" "RVV" "temp"
            const-val _return_tmp_[2008231]:bool[10] "dead after last mention" "temp"
            const-val this[2008233]:range(int(64),bounded,false)[1026875] "temp"
            (2008235 'move' this[2008233](2008237 '.v' _iterator[2008207] F0_this[2063641]))
            (2008240 'move' _return_tmp_[2008231](2008243 call checkIfIterWillOverflow[1095875] this[2008233] 1))
            val i[2008246]:int(64)[13] "dead at end of block" "insert auto destroy"
            val call_tmp[2008248]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (2008250 'move' i[2008246] 0)
            ref call_tmp[2008253]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[2008255]:range(int(64),bounded,false)[1026875] "temp"
            (2008257 'move' this[2008255](2008259 '.v' _iterator[2008207] F0_this[2063641]))
            (2008262 'move' call_tmp[2008253](2008265 call _low[1028513] this[2008255]))
            const-val start[2008267]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[2008269]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (2008271 'move' coerce_tmp[2008269](2008273 'deref' call_tmp[2008253]))
            (2008275 '=' start[2008267] coerce_tmp[2008269])
            (2008278 'noop')
            ref call_tmp[2008279]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[2008281]:range(int(64),bounded,false)[1026875] "temp"
            (2008283 'move' this[2008281](2008285 '.v' _iterator[2008207] F0_this[2063641]))
            (2008288 'move' call_tmp[2008279](2008291 call _high[1028721] this[2008281]))
            const end[2008293]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[2008295]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (2008297 'move' coerce_tmp[2008295](2008299 'deref' call_tmp[2008279]))
            (2008301 '=' end[2008293] coerce_tmp[2008295])
            (2008304 'noop')
            CForLoop[2008305] hazard
            {
              const-val yret[2008320]:int(64)[13] "dead after last mention" "YVV" "temp"
              const-val call_tmp[2008322]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val this[2008324]:range(int(64),bounded,false)[1026875] "temp"
              (2008326 'move' this[2008324](2008328 '.v' _iterator[2008207] F0_this[2063641]))
              (2008331 'move' call_tmp[2008322](2008334 call chpl_intToIdx[1028541] this[2008324] i[2008246]))
              (2008337 'move' yret[2008320] call_tmp[2008322])
              const-val _yieldedIndex[2008340]:int(64)[13] "temp"
              (2008342 'move' _yieldedIndex[2008340] call_tmp[2008322])
              {
                const-val i[2008346]:int(64)[13] "const" "index var" "insert auto destroy"
                (2008348 'move' i[2008346] _yieldedIndex[2008340])
                const-val yret[2008351]:int(64)[13] "dead after last mention" "YVV" "temp"
                (2008353 'move' yret[2008351] _yieldedIndex[2008340])
                const-val _yieldedIndex[2008375]:int(64)[13] "temp"
                (2008648 'move' _yieldedIndex[2008375] _yieldedIndex[2008340])
                {
                  const-val i[2008377]:int(64)[13] "const" "index var" "insert auto destroy"
                  (2008379 'move' i[2008377] _yieldedIndex[2008375])
                  const-val yret[2008382]:int(64)[13] "dead after last mention" "YVV" "temp"
                  (2008384 'move' yret[2008382] _yieldedIndex[2008375])
                  const-val _yieldedIndex[2008387]:int(64)[13] "temp"
                  (2008389 'move' _yieldedIndex[2008387] _yieldedIndex[2008375])
                  {
                    const i[2008393]:int(64)[13] "const" "index var" "insert auto destroy"
                    (2008395 'move' i[2008393] _yieldedIndex[2008387])
                    {
                      val left[2008399]:BaseLocale[91204] "dead at end of block" "insert auto destroy"
                      val init_coerce_tmp[2008401]:BaseLocale[91204] "dead at end of block" "temp"
                      (2008403 'move' init_coerce_tmp[2008401](2008405 'cast' BaseLocale[91204] nil[44]))
                      (2008408 'move' left[2008399] init_coerce_tmp[2008401])
                      val right[2008411]:BaseLocale[91204] "dead at end of block" "insert auto destroy"
                      val init_coerce_tmp[2008413]:BaseLocale[91204] "dead at end of block" "temp"
                      (2008415 'move' init_coerce_tmp[2008413](2008417 'cast' BaseLocale[91204] nil[44]))
                      (2008420 'move' right[2008411] init_coerce_tmp[2008413])
                      const-val call_tmp[2008423]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                      (2008425 'move' call_tmp[2008423](2008428 call +[949727] i[2008393]))
                      const-val call_tmp[2008430]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                      (2008432 'move' call_tmp[2008430](2008435 call *[942067] call_tmp[2008423]))
                      const-val call_tmp[2008437]:int(64)[13] "dead at end of block" "maybe param" "temp"
                      (2008439 'move' call_tmp[2008437](2008442 call -[962287] call_tmp[2008430]))
                      val child[2008444]:int(64)[13] "dead at end of block" "insert auto destroy"
                      (2008446 'move' child[2008444] call_tmp[2008437])
                      const-val call_tmp[2008449]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (2008451 'move' call_tmp[2008449](2008454 call <[437495] child[2008444] numLocales[209892]))
                      const-val call_tmp[2008457]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (2008459 'move' call_tmp[2008457] call_tmp[2008449])
                      if call_tmp[2008457]
                      {
                        val call_tmp[2008464]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        val _chpl_forward_tgt[2008466]:BaseLocale[91204] "dead after last mention" "maybe ref" "maybe type" "temp"
                        (2008468 'move' _chpl_forward_tgt[2008466](2008471 call chpl_forwarding_expr3__value[89995] rootLocale[91514]))
                        val coerce_tmp[2008473]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (2008475 'move' coerce_tmp[2008473] _chpl_forward_tgt[2008466])
                        val _virtual_method_tmp_[2008478]:int(32)[95] "temp"
                        (2008480 'move' _virtual_method_tmp_[2008478](2008482 'getcid' coerce_tmp[2008473]))
                        val ret_tmp[2008484]:locale[28] "temp"
                        (2008486 'virtual method call' getChild[91189] _virtual_method_tmp_[2008478] coerce_tmp[2008473] child[2008444] ret_tmp[2008484])
                        (2008492 'move' call_tmp[2008464] ret_tmp[2008484])
                        ref call_tmp[2008495]:_ref(BaseLocale)[982484] "dead after last mention" "maybe param" "temp"
                        (2008497 'move' call_tmp[2008495](2008500 call _instance[782816] call_tmp[2008464]))
                        val coerce_tmp[2008502]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (2008504 'move' coerce_tmp[2008502](2008506 'deref' call_tmp[2008495]))
                        (2008509 call =[986541] left[2008399] coerce_tmp[2008502])
                        (2008513 call chpl__autoDestroy[1562339] call_tmp[2008464])
                        (2008516 call +=[451358] child[2008444] 1)
                        const-val call_tmp[2008519]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (2008521 'move' call_tmp[2008519](2008524 call <[437495] child[2008444] numLocales[209892]))
                        const-val call_tmp[2008527]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (2008529 'move' call_tmp[2008527] call_tmp[2008519])
                        if call_tmp[2008527]
                        {
                          val call_tmp[2008534]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                          val _chpl_forward_tgt[2008536]:BaseLocale[91204] "dead after last mention" "maybe ref" "maybe type" "temp"
                          (2008538 'move' _chpl_forward_tgt[2008536](2008541 call chpl_forwarding_expr3__value[89995] rootLocale[91514]))
                          val coerce_tmp[2008543]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (2008545 'move' coerce_tmp[2008543] _chpl_forward_tgt[2008536])
                          val _virtual_method_tmp_[2008548]:int(32)[95] "temp"
                          (2008550 'move' _virtual_method_tmp_[2008548](2008552 'getcid' coerce_tmp[2008543]))
                          val ret_tmp[2008554]:locale[28] "temp"
                          (2008556 'virtual method call' getChild[91189] _virtual_method_tmp_[2008548] coerce_tmp[2008543] child[2008444] ret_tmp[2008554])
                          (2008562 'move' call_tmp[2008534] ret_tmp[2008554])
                          ref call_tmp[2008565]:_ref(BaseLocale)[982484] "dead after last mention" "maybe param" "temp"
                          (2008567 'move' call_tmp[2008565](2008570 call _instance[782816] call_tmp[2008534]))
                          val coerce_tmp[2008572]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (2008574 'move' coerce_tmp[2008572](2008576 'deref' call_tmp[2008565]))
                          (2008579 call =[986541] right[2008411] coerce_tmp[2008572])
                          (2008583 call chpl__autoDestroy[1562339] call_tmp[2008534])
                        }
                      }
                      const-val tmp[2008587]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
                      const-val call_tmp[2008589]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                      val _chpl_forward_tgt[2008591]:BaseLocale[91204] "dead after last mention" "maybe ref" "maybe type" "temp"
                      (2008593 'move' _chpl_forward_tgt[2008591](2008596 call chpl_forwarding_expr3__value[89995] rootLocale[91514]))
                      val coerce_tmp[2008598]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (2008600 'move' coerce_tmp[2008598] _chpl_forward_tgt[2008591])
                      val _virtual_method_tmp_[2008603]:int(32)[95] "temp"
                      (2008605 'move' _virtual_method_tmp_[2008603](2008607 'getcid' coerce_tmp[2008598]))
                      val ret_tmp[2008609]:locale[28] "temp"
                      (2008611 'virtual method call' getChild[91189] _virtual_method_tmp_[2008603] coerce_tmp[2008598] i[2008393] ret_tmp[2008609])
                      (2008617 'move' call_tmp[2008589] ret_tmp[2008609])
                      const-val call_tmp[2008620]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
                      val _locale_tmp_[2008622]:BaseLocale[91204] "dead after last mention" "temp"
                      (2008624 'move' _locale_tmp_[2008622](2008627 call _value[89984] call_tmp[2008589]))
                      (2008629 'move' call_tmp[2008620](2008631 '_wide_get_locale' _locale_tmp_[2008622]))
                      (2008633 'move' tmp[2008587] call_tmp[2008620])
                      val rvfDerefTmp[2145192]:BaseLocale[91204] "concurrently accessed" "temp"
                      (2145195 'move' rvfDerefTmp[2145192] left[2008399])
                      val rvfDerefTmp[2145199]:BaseLocale[91204] "concurrently accessed" "temp"
                      (2145202 'move' rvfDerefTmp[2145199] right[2008411])
                      val isdirect[2148068]:bool[10] "temp"
                      (2148073 'move' isdirect[2148068](2148070 call chpl_doDirectExecuteOn[187469] tmp[2008587]))
                      if isdirect[2148068]
                      {
                        (2148077 call on_fn[935303] rvfDerefTmp[2145192] rvfDerefTmp[2145199])
                      }
                      {
                        val _args_foron_fn[2148095]:_class_localson_fn[2148085] "temp"
                        (2148099 'move' _args_foron_fn[2148095](2148097 'stack allocate class' _class_localson_fn[2148085]))
                        (2148101 '.=' _args_foron_fn[2148095] _0_tmp[2148088] tmp[2008587])
                        (2148105 '.=' _args_foron_fn[2148095] _1_rvfDerefTmp[2148090] rvfDerefTmp[2145192])
                        (2148109 '.=' _args_foron_fn[2148095] _2_rvfDerefTmp[2148092] rvfDerefTmp[2145199])
                        val _args_vforon_fn[2148113]:c_void_ptr[149] "temp"
                        (2148117 'move' _args_vforon_fn[2148113](2148115 'cast_to_void_star' _args_foron_fn[2148095]))
                        val _args_sizeon_fn[2148119]:int(64)[13] "temp"
                        (2148123 'move' _args_sizeon_fn[2148119](2148121 'sizeof_bundle' _class_localson_fn[2148085]))
                        on(2148163 call wrapon_fn[2148125] tmp[2008587] _args_vforon_fn[2148113] _args_sizeon_fn[2148119] _args_foron_fn[2148095])
                      }
                      (2008642 call chpl__autoDestroy[1562339] call_tmp[2008589])
                      {
                      }
                    }
                    label _continueLabel[2008645]
                  }
                }
              }
              {
                (2008307 '=' i[2008246] coerce_tmp[2008269])
              }
              {
                (2008311 '<=' i[2008246] end[2008293])
              }
              {
                val call_tmp[2008315]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (2008317 '+=' i[2008246] 1)
              }
            }
            label _endthese[2008366]
          }
          (2008369 call _freeIterator[1102067] _iterator[2008207])
          label _endthese[2008371]
        }
        (1941576 call _freeIterator[1314778] _iterator[1941483])
        (1941579 call chpl__autoDestroy[1657885] default_arg_offset[1941520])
        label _endthese[1941581]
      }
      label _breakLabel[155371]
      (1876924 call _freeIterator[1315607] _iterator[155366])
    }
    (520706 return _void[55])
  }
  const-val default_arg_left[1353815]:locale[28] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
  const-val default_arg_right[1353846]:locale[28] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
  function on_fn[935303](const in arg left[1841190]:BaseLocale[91204], const in arg right[1841192]:BaseLocale[91204]) : void[4] "on" "resolved" "fn synchronization free"
  {
    {
      ref call_tmp[672281]:_ref(locale)[948905] "dead after last mention" "maybe param" "temp"
      (672284 'move' call_tmp[672281](155332 call left[808455] chpl_localeTree[155232]))
      ref call_tmp[672288]:_ref(BaseLocale)[982484] "dead after last mention" "maybe param" "temp"
      (672291 'move' call_tmp[672288](155335 call _instance[782816] call_tmp[672281]))
      val tmp[1841948]:BaseLocale[91204] "temp"
      (1841951 'move' tmp[1841948] left[1841190])
      (155339 call =[986541] call_tmp[672288] tmp[1841948])
      ref call_tmp[672295]:_ref(locale)[948905] "dead after last mention" "maybe param" "temp"
      (672298 'move' call_tmp[672295](155344 call right[808481] chpl_localeTree[155232]))
      ref call_tmp[672302]:_ref(BaseLocale)[982484] "dead after last mention" "maybe param" "temp"
      (672305 'move' call_tmp[672302](155347 call _instance[782816] call_tmp[672295]))
      val tmp[1841954]:BaseLocale[91204] "temp"
      (1841957 'move' tmp[1841954] right[1841192])
      (155351 call =[986541] call_tmp[672302] tmp[1841954])
    }
    (935310 return _void[55])
  }
  function chpl__deinit_LocaleTree[1887201]() : void[4] "resolved"
  {
    label _endchpl__deinit_LocaleTree[1887207]
    (1887209 call chpl__autoDestroy[1563768] chpl_localeTree[155232])
    (1887204 return _void[55])
  }
  function wrapon_fn[2148125](const in arg dummy_locale_arg[2148127]:chpl_localeID_t[209352], in arg buf[2148129]:c_void_ptr[149], in arg buf_size[2148131]:int(64)[13], in arg c[2148133]:_class_localson_fn[2148085]) : void[4] "on block"
  {
    val _0_tmp[2148138]:chpl_localeID_t[209352] "temp"
    (2148143 'move' _0_tmp[2148138](2148140 '.v' c[2148133] _0_tmp[2148088]))
    val _1_rvfDerefTmp[2148145]:BaseLocale[91204] "temp"
    (2148150 'move' _1_rvfDerefTmp[2148145](2148147 '.v' c[2148133] _1_rvfDerefTmp[2148090]))
    val _2_rvfDerefTmp[2148153]:BaseLocale[91204] "temp"
    (2148158 'move' _2_rvfDerefTmp[2148153](2148155 '.v' c[2148133] _2_rvfDerefTmp[2148092]))
    (2148136 call on_fn[935303] _1_rvfDerefTmp[2148145] _2_rvfDerefTmp[2148153])
    (2148161 return _void[55])
  }
}