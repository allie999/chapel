AST dump for List after pass buildDefaultFunctions.
Module use list: ChapelStandard ChapelLocks HaltWrappers Sort IO 

{
  function chpl__init_List[416155]() : void[4] "insert line file info" "module init"
  {
    (549805 'init var' _initialCapacity[298228] 8)
    (298231 'end of statement')
    (549807 'init var' _initialArrayCapacity[298233] 16)
    (298236 'end of statement')
    (549809 'init var' _sanityChecks[298238] 0)
    (298241 'end of statement')
    (549815 'move' _lockType[298270](549814 call chpl_LocalSpinlock[187386]))
    (490904 'end of statement')
    (539607 return _void[55])
  }
  const _initialCapacity[298228] "dead at end of block" "const" "insert auto destroy" "no doc" "private"
  const _initialArrayCapacity[298233] "dead at end of block" "const" "insert auto destroy" "no doc" "private"
  unknown _sanityChecks[298238] "dead at end of block" "no doc" "param" "private"
  function _sanity[298248](arg expr[298245]:bool[10]) : _unknown[51] "inline" "private" "no return value for void"
  {
    unknown call_tmp[744132] "expr temp" "maybe param" "maybe type" "temp"
    (744135 'move' call_tmp[744132](298256 call _cond_test _sanityChecks[298238]))
    if call_tmp[744132]
    {
      (298254 call assert expr[298245])
    }
    (539049 return _void[55])
  }
  unknown _lockType[298270] "dead at end of block" "insert auto destroy" "no doc" "type variable" chpl_LocalSpinlock[187386]
  function _LockWrapper[298311].lock[298284](arg _mt[298315]:_MT[238], arg this[298313]:_LockWrapper[298311]) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[744139] "expr temp" "maybe param" "maybe type" "temp"
    (744142 'move' call_tmp[744139](364900 call lock$ _mt[243] this[298313]))
    (298291 call(298287 call (partial) lock _mt[243] call_tmp[744139]))
    (539051 return _void[55])
  }
  function _LockWrapper[298311].unlock[298298](arg _mt[298319]:_MT[238], arg this[298317]:_LockWrapper[298311]) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[744148] "expr temp" "maybe param" "maybe type" "temp"
    (744151 'move' call_tmp[744148](364905 call lock$ _mt[243] this[298317]))
    (298305 call(298301 call (partial) unlock _mt[243] call_tmp[744148]))
    (539053 return _void[55])
  }
  function _LockWrapper[298311].super[929959](arg _mt[929961]:_MT[238], arg this[929963]:_LockWrapper[298311]) : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[929973] "RVV" "temp"
    unknown call_tmp[929980] "expr temp" "maybe param" "maybe type" "temp"
    (929983 'move' call_tmp[929980](929967 '.v' this[929963] c"super"))
    (929978 'move' ret[929973](929977 'deref' call_tmp[929980]))
    (929975 return ret[929973])
  }
  function _LockWrapper[298311].lock$[929985](arg _mt[929987]:_MT[238], arg this[929989]:_LockWrapper[298311]) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[929999] "RVV" "temp"
    unknown call_tmp[930006] "expr temp" "maybe param" "maybe type" "temp"
    (930009 'move' call_tmp[930006](929993 '.' this[929989] c"lock$"))
    (930004 'move' ret[929999](930003 'addr of' call_tmp[930006]))
    (930001 return ret[929999])
  }
  function _LockWrapper[298311].init[930011](arg _mt[930013]:_MT[238], arg this[930014]:_LockWrapper[298311], in arg lock$[930025] :
  (930095 'new' _lockType[298270]) =
  (930096 'new' _lockType[298270])) : void[4] "compiler generated" "inline" "last resort" "method" "primary method" "suppress lvalue error"
  {
    unknown super_tmp[930044] "temporary of super field" "temp"
    (930046 'move' super_tmp[930044](930043 '.v' this[930014] c"super"))
    (930024 call(930022 call (partial) init _mt[243] super_tmp[930044]))
    (930070 'end of statement')
    unknown tmp[930049] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[930073] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[930085] "expr temp" "maybe param" "maybe type" "temp"
      (930088 'move' call_tmp[930085](930051 '.v' this[930014] c"super"))
      (930077 'move' call_type_tmp[930073](930054 'typeof' call_tmp[930085]))
    }
    (930055 'move' tmp[930049] call_type_tmp[930073])
    unknown call_tmp[930090] "maybe param" "maybe type" "temp"
    (930093 'move' call_tmp[930090](930060 'cast' tmp[930049] this[930014]))
    unknown chpl__thisAsParent[930057] "dead at end of block" "insert auto destroy" "temp"
    (930081 'init var' chpl__thisAsParent[930057] call_tmp[930090] tmp[930049])
    (930063 'setcid' chpl__thisAsParent[930057])
    (930065 '.=' this[930014] c"lock$" lock$[930025])
    (930071 'end of statement')
    (930068 'setcid' this[930014])
    (930079 return _void[55])
  }
  function _LockWrapper[298311].deinit[930097](arg _mt[930099]:_MT[238], arg this[930101]:_LockWrapper[298311]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method"
  {
    (930109 return _void[55])
  }
  function _LockWrapper[298311].writeThis[930111](arg _mt[930115]:_MT[238], arg this[930113]:_LockWrapper[298311], arg f[930114]:_any[178](?)) : void[4] throws "compiler generated" "last resort" "method" "primary method" "method overrides"
  {
    (930120 call writeThisDefaultImpl f[930114] this[930113])
    (930125 return _void[55])
  }
  function _LockWrapper[298311].readThis[930127](arg _mt[930131]:_MT[238], arg this[930129]:_LockWrapper[298311], arg f[930130]:_any[178](?)) : void[4] throws "compiler generated" "last resort" "method" "primary method" "method overrides"
  {
    (930135 call readThisDefaultImpl f[930130] this[930129])
    (930141 return _void[55])
  }
  type _LockWrapper[298311] val super[355772]:object[22] "super class" unknown lock$[298278](298274 'new'(298277 call _lockType[298270]))
  type _LockWrapper[405197](?)
  function _checkType[298326](arg eltType[298324]:_any[178](?)) : _unknown[51] "no doc" "no return value for void"
  {
    unknown call_tmp[744155] "expr temp" "maybe param" "maybe type" "temp"
    (744158 'move' call_tmp[744155](298331 call isGenericType eltType[298324]))
    unknown call_tmp[744160] "expr temp" "maybe param" "maybe type" "temp"
    (744163 'move' call_tmp[744160](298404 call _cond_test call_tmp[744155]))
    if call_tmp[744160]
    {
      unknown call_tmp[744165] "expr temp" "maybe param" "maybe type" "temp"
      (744168 'move' call_tmp[744165](298352 call _cast string[26] eltType[298324]))
      unknown call_tmp[744170] "expr temp" "maybe param" "maybe type" "temp"
      (744173 'move' call_tmp[744170](298354 call + "creating a list with element type " call_tmp[744165]))
      (298357 call compilerWarning call_tmp[744170])
      (490907 'end of statement')
      unknown tmp[434796] "maybe param" "temp"
      (434807 'move' tmp[434796](298363 call isClassType eltType[298324]))
      unknown call_tmp[744175] "expr temp" "maybe param" "maybe type" "temp"
      (744178 'move' call_tmp[744175](434809 call _cond_invalid tmp[434796]))
      if call_tmp[744175]
      {
        (434812 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown tmp[580657] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[580658] "maybe param" "temp"
      unknown call_tmp[744180] "expr temp" "maybe param" "maybe type" "temp"
      (744183 'move' call_tmp[744180](434797 call isTrue tmp[434796]))
      (580663 'move' tmp[580658](580661 call _cond_test call_tmp[744180]))
      if tmp[580658]
      {
        unknown tmp[580665] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[744185] "expr temp" "maybe param" "maybe type" "temp"
        (744188 'move' call_tmp[744185](298366 'to borrowed class from unknown' eltType[298324]))
        unknown call_tmp[744190] "expr temp" "maybe param" "maybe type" "temp"
        (744193 'move' call_tmp[744190](298368 call isGenericType call_tmp[744185]))
        unknown call_tmp[744195] "expr temp" "maybe param" "maybe type" "temp"
        (744198 'move' call_tmp[744195](298369 call ! call_tmp[744190]))
        (580667 'move' tmp[580665](434800 call isTrue call_tmp[744195]))
        (580672 'move' tmp[580657](580669 '_paramFoldLogical' tmp[580658] tmp[580665]))
      }
      {
        (580677 'move' tmp[580657](580674 '_paramFoldLogical' tmp[580658] 0))
      }
      unknown call_tmp[744200] "expr temp" "maybe param" "maybe type" "temp"
      (744203 'move' call_tmp[744200](298379 call _cond_test tmp[580657]))
      if call_tmp[744200]
      {
        (298376 call compilerWarning "which now means class type with generic management")
      }
      (298402 call compilerError "list element type cannot currently be generic")
    }
    (539055 return _void[55])
  }
  function _dummyFieldType[298415](arg t[298413]:_any[178](?)) type : _unknown[51] "no doc"
  {
    unknown ret[539059] "RVV" "temp" "type variable"
    unknown call_tmp[744205] "expr temp" "maybe param" "maybe type" "temp"
    (744208 'move' call_tmp[744205](298420 call isBorrowedClass t[298413]))
    unknown call_tmp[744210] "expr temp" "maybe param" "maybe type" "temp"
    (744213 'move' call_tmp[744210](298430 call _cond_test call_tmp[744205]))
    if call_tmp[744210]
    {
      unknown call_tmp[744215] "expr temp" "maybe param" "maybe type" "temp"
      (744218 'move' call_tmp[744215](298422 'to nilable class from type' t[298413]))
      (539064 'move' ret[539059](539063 'deref' call_tmp[744215]))
      gotoReturn _end__dummyFieldType[539057] _end__dummyFieldType[539057]
    }
    {
      (539069 'move' ret[539059](539068 'deref' nothing[7]))
      gotoReturn _end__dummyFieldType[539057] _end__dummyFieldType[539057]
    }
    label _end__dummyFieldType[539057]
    (539061 return ret[539059])
  }
  function list[304193](?).init[298501](arg _mt[304197]:_MT[238], ref arg this[304195]:list[304193](?), arg eltType[298499]:_any[178](?), param arg parSafe[298504] :
  0 =
  0) : void[4] "method" "primary method" "no return value for void"
  {
    (298510 call _checkType eltType[298499])
    (490913 'end of statement')
    unknown tmp[467078] "temp" "type variable"
    (467080 'move' tmp[467078] eltType[298499])
    (467082 'init field' this[304195] c"eltType" tmp[467078])
    (490914 'end of statement')
    unknown tmp[467086] "param" "temp"
    (467088 'init var' tmp[467086] parSafe[298504])
    (467090 'init field' this[304195] c"parSafe" tmp[467086])
    (490915 'end of statement')
    unknown tmp[467095] "temp"
    (467097 'init var' tmp[467095] 0)
    (467099 '.=' this[304195] c"_size" tmp[467095])
    (490916 'end of statement')
    unknown tmp[467111] "temp"
    unknown tmp[580684] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[580685] "maybe param" "temp"
    unknown call_tmp[744220] "expr temp" "maybe param" "maybe type" "temp"
    (744223 'move' call_tmp[744220](467119 '.v' this[304195] c"parSafe"))
    (580690 'move' tmp[580685](580688 call _cond_test call_tmp[744220]))
    if tmp[580685]
    {
      unknown tmp[580692] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (580694 'move' tmp[580692](748121 'new' _LockWrapper[405197](?)))
      (580699 'move' tmp[580684](580696 '_paramFoldLogical' tmp[580685] tmp[580692]))
    }
    {
      (580704 'move' tmp[580684](580701 '_paramFoldLogical' tmp[580685] none[57]))
    }
    (467113 'init var' tmp[467111] tmp[580684])
    (467115 '.=' this[304195] c"_lock$" tmp[467111])
    (490917 'end of statement')
    unknown call_tmp[744225] "expr temp" "maybe param" "maybe type" "temp"
    (744228 'move' call_tmp[744225](467136 '.v' this[304195] c"eltType"))
    unknown call_tmp[744230] "expr temp" "maybe param" "maybe type" "temp"
    (744233 'move' call_tmp[744230](467128 call _ddata[11695](?) call_tmp[744225]))
    unknown call_tmp[744235] "maybe param" "maybe type" "temp"
    (744238 'move' call_tmp[744235](467126 call _ddata[11695](?) call_tmp[744230]))
    unknown tmp[467123] "temp"
    (467130 'init var' tmp[467123] nil[44] call_tmp[744235])
    (467132 'init field' this[304195] c"_arrays" tmp[467123])
    (490918 'end of statement')
    unknown tmp[467140] "temp"
    (467142 'init var' tmp[467140] 0)
    (467144 '.=' this[304195] c"_arrayCapacity" tmp[467140])
    (490919 'end of statement')
    unknown tmp[467149] "temp"
    (467151 'init var' tmp[467149] 0)
    (467153 '.=' this[304195] c"_totalCapacity" tmp[467149])
    (490920 'end of statement')
    unknown tmp[467157] "temp"
    unknown call_tmp[744240] "expr temp" "maybe param" "maybe type" "temp"
    (744243 'move' call_tmp[744240](467170 '.v' this[304195] c"eltType"))
    unknown call_tmp[744245] "expr temp" "maybe param" "maybe type" "temp"
    (744248 'move' call_tmp[744245](467160 call _dummyFieldType call_tmp[744240]))
    (467162 'default init var' tmp[467157] call_tmp[744245])
    (467166 '.=' this[304195] c"_dummyFieldToForceBorrowChecking" tmp[467157])
    (490921 'end of statement')
    (298543 call(298539 call (partial) _firstTimeInitializeArrays _mt[243] this[304195]))
    (539073 return _void[55])
  }
  function list[304193](?).init[298557](arg _mt[304201]:_MT[238], ref arg this[304199]:list[304193](?), arg other[298554]:list[304193](?), param arg parSafe[298560] :
  0 =
  0) : void[4] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[744252] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744255 'move' call_tmp[744252](298565 'typeof' this[304199]))
    unknown call_tmp[744259] "expr temp" "maybe param" "maybe type" "temp"
    (744262 'move' call_tmp[744259](298566 call eltType _mt[243] call_tmp[744252]))
    unknown call_tmp[744264] "expr temp" "maybe param" "maybe type" "temp"
    (744267 'move' call_tmp[744264](298570 call isCopyableType call_tmp[744259]))
    unknown call_tmp[744269] "expr temp" "maybe param" "maybe type" "temp"
    (744272 'move' call_tmp[744269](298571 call ! call_tmp[744264]))
    unknown call_tmp[744274] "expr temp" "maybe param" "maybe type" "temp"
    (744277 'move' call_tmp[744274](298613 call _cond_test call_tmp[744269]))
    if call_tmp[744274]
    {
      unknown call_tmp[744279] "expr temp" "maybe param" "maybe type" "temp"
      (744282 'move' call_tmp[744279](298608 call + "Cannot copy list with element type that " "cannot be copied"))
      (298611 call compilerError call_tmp[744279])
    }
    unknown tmp[467183] "temp" "type variable"
    (467185 'move' tmp[467183](467179 'query' other[298554] 1))
    (467187 'init field' this[304199] c"eltType" tmp[467183])
    (490924 'end of statement')
    unknown tmp[467191] "param" "temp"
    (467193 'init var' tmp[467191] parSafe[298560])
    (467195 'init field' this[304199] c"parSafe" tmp[467191])
    (490925 'end of statement')
    unknown tmp[467200] "temp"
    (467202 'init var' tmp[467200] 0)
    (467204 '.=' this[304199] c"_size" tmp[467200])
    (490926 'end of statement')
    unknown tmp[467216] "temp"
    unknown tmp[580711] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[580712] "maybe param" "temp"
    unknown call_tmp[744284] "expr temp" "maybe param" "maybe type" "temp"
    (744287 'move' call_tmp[744284](467224 '.v' this[304199] c"parSafe"))
    (580717 'move' tmp[580712](580715 call _cond_test call_tmp[744284]))
    if tmp[580712]
    {
      unknown tmp[580719] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (580721 'move' tmp[580719](748122 'new' _LockWrapper[405197](?)))
      (580726 'move' tmp[580711](580723 '_paramFoldLogical' tmp[580712] tmp[580719]))
    }
    {
      (580731 'move' tmp[580711](580728 '_paramFoldLogical' tmp[580712] none[57]))
    }
    (467218 'init var' tmp[467216] tmp[580711])
    (467220 '.=' this[304199] c"_lock$" tmp[467216])
    (490927 'end of statement')
    unknown call_tmp[744289] "expr temp" "maybe param" "maybe type" "temp"
    (744292 'move' call_tmp[744289](467241 '.v' this[304199] c"eltType"))
    unknown call_tmp[744294] "expr temp" "maybe param" "maybe type" "temp"
    (744297 'move' call_tmp[744294](467233 call _ddata[11695](?) call_tmp[744289]))
    unknown call_tmp[744299] "maybe param" "maybe type" "temp"
    (744302 'move' call_tmp[744299](467231 call _ddata[11695](?) call_tmp[744294]))
    unknown tmp[467228] "temp"
    (467235 'init var' tmp[467228] nil[44] call_tmp[744299])
    (467237 'init field' this[304199] c"_arrays" tmp[467228])
    (490928 'end of statement')
    unknown tmp[467245] "temp"
    (467247 'init var' tmp[467245] 0)
    (467249 '.=' this[304199] c"_arrayCapacity" tmp[467245])
    (490929 'end of statement')
    unknown tmp[467254] "temp"
    (467256 'init var' tmp[467254] 0)
    (467258 '.=' this[304199] c"_totalCapacity" tmp[467254])
    (490930 'end of statement')
    unknown tmp[467262] "temp"
    unknown call_tmp[744304] "expr temp" "maybe param" "maybe type" "temp"
    (744307 'move' call_tmp[744304](467273 '.v' this[304199] c"eltType"))
    unknown call_tmp[744309] "expr temp" "maybe param" "maybe type" "temp"
    (744312 'move' call_tmp[744309](467265 call _dummyFieldType call_tmp[744304]))
    (467267 'default init var' tmp[467262] call_tmp[744309])
    (467269 '.=' this[304199] c"_dummyFieldToForceBorrowChecking" tmp[467262])
    (490931 'end of statement')
    (298645 call(405214 call (partial) _commonInitFromIterable _mt[243] this[304199]) other[298554])
    (539075 return _void[55])
  }
  function list[304193](?).init[298661](arg _mt[304205]:_MT[238], ref arg this[304203]:list[304193](?), arg other[298658]:_array[133588](?), param arg parSafe[298664] :
  0 =
  0) : void[4] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[744318] "expr temp" "maybe param" "maybe type" "temp"
    (744321 'move' call_tmp[744318](467278 call eltType _mt[243] other[298658]))
    (298670 call _checkType call_tmp[744318])
    (490933 'end of statement')
    unknown call_tmp[744325] "expr temp" "maybe param" "maybe type" "temp"
    (744328 'move' call_tmp[744325](467282 call eltType _mt[243] other[298658]))
    unknown call_tmp[744330] "expr temp" "maybe param" "maybe type" "temp"
    (744333 'move' call_tmp[744330](298676 call isCopyableType call_tmp[744325]))
    unknown call_tmp[744335] "expr temp" "maybe param" "maybe type" "temp"
    (744338 'move' call_tmp[744335](298677 call ! call_tmp[744330]))
    unknown call_tmp[744340] "expr temp" "maybe param" "maybe type" "temp"
    (744343 'move' call_tmp[744340](298719 call _cond_test call_tmp[744335]))
    if call_tmp[744340]
    {
      unknown call_tmp[744345] "expr temp" "maybe param" "maybe type" "temp"
      (744348 'move' call_tmp[744345](298714 call + "Cannot construct list from array with element " "type that cannot be copied"))
      (298717 call compilerError call_tmp[744345])
    }
    unknown tmp[467290] "temp" "type variable"
    (467292 'move' tmp[467290](467286 call eltType _mt[243] other[298658]))
    (467294 'init field' this[304203] c"eltType" tmp[467290])
    (490935 'end of statement')
    unknown tmp[467298] "param" "temp"
    (467300 'init var' tmp[467298] parSafe[298664])
    (467302 'init field' this[304203] c"parSafe" tmp[467298])
    (490936 'end of statement')
    unknown tmp[467307] "temp"
    (467309 'init var' tmp[467307] 0)
    (467311 '.=' this[304203] c"_size" tmp[467307])
    (490937 'end of statement')
    unknown tmp[467323] "temp"
    unknown tmp[580738] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[580739] "maybe param" "temp"
    unknown call_tmp[744352] "expr temp" "maybe param" "maybe type" "temp"
    (744355 'move' call_tmp[744352](467331 '.v' this[304203] c"parSafe"))
    (580744 'move' tmp[580739](580742 call _cond_test call_tmp[744352]))
    if tmp[580739]
    {
      unknown tmp[580746] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (580748 'move' tmp[580746](748123 'new' _LockWrapper[405197](?)))
      (580753 'move' tmp[580738](580750 '_paramFoldLogical' tmp[580739] tmp[580746]))
    }
    {
      (580758 'move' tmp[580738](580755 '_paramFoldLogical' tmp[580739] none[57]))
    }
    (467325 'init var' tmp[467323] tmp[580738])
    (467327 '.=' this[304203] c"_lock$" tmp[467323])
    (490938 'end of statement')
    unknown call_tmp[744357] "expr temp" "maybe param" "maybe type" "temp"
    (744360 'move' call_tmp[744357](467348 '.v' this[304203] c"eltType"))
    unknown call_tmp[744362] "expr temp" "maybe param" "maybe type" "temp"
    (744365 'move' call_tmp[744362](467340 call _ddata[11695](?) call_tmp[744357]))
    unknown call_tmp[744367] "maybe param" "maybe type" "temp"
    (744370 'move' call_tmp[744367](467338 call _ddata[11695](?) call_tmp[744362]))
    unknown tmp[467335] "temp"
    (467342 'init var' tmp[467335] nil[44] call_tmp[744367])
    (467344 'init field' this[304203] c"_arrays" tmp[467335])
    (490939 'end of statement')
    unknown tmp[467352] "temp"
    (467354 'init var' tmp[467352] 0)
    (467356 '.=' this[304203] c"_arrayCapacity" tmp[467352])
    (490940 'end of statement')
    unknown tmp[467361] "temp"
    (467363 'init var' tmp[467361] 0)
    (467365 '.=' this[304203] c"_totalCapacity" tmp[467361])
    (490941 'end of statement')
    unknown tmp[467369] "temp"
    unknown call_tmp[744372] "expr temp" "maybe param" "maybe type" "temp"
    (744375 'move' call_tmp[744372](467380 '.v' this[304203] c"eltType"))
    unknown call_tmp[744377] "expr temp" "maybe param" "maybe type" "temp"
    (744380 'move' call_tmp[744377](467372 call _dummyFieldType call_tmp[744372]))
    (467374 'default init var' tmp[467369] call_tmp[744377])
    (467376 '.=' this[304203] c"_dummyFieldToForceBorrowChecking" tmp[467369])
    (490942 'end of statement')
    (298750 call(405223 call (partial) _commonInitFromIterable _mt[243] this[304203]) other[298658])
    (539077 return _void[55])
  }
  function list[304193](?).init[298764](arg _mt[304209]:_MT[238], ref arg this[304207]:list[304193](?), arg other[298761]:range[64316](?), param arg parSafe[298767] :
  0 =
  0) : void[4] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[744384] "expr temp" "maybe param" "maybe type" "temp"
    (744387 'move' call_tmp[744384](467389 'query' other[298761] 1))
    (298773 call _checkType call_tmp[744384])
    (490944 'end of statement')
    unknown tmp[467396] "temp" "type variable"
    (467398 'move' tmp[467396](467392 'query' other[298761] 1))
    (467400 'init field' this[304207] c"eltType" tmp[467396])
    (490945 'end of statement')
    unknown tmp[467404] "param" "temp"
    (467406 'init var' tmp[467404] parSafe[298767])
    (467408 'init field' this[304207] c"parSafe" tmp[467404])
    (490946 'end of statement')
    unknown call_tmp[744389] "expr temp" "maybe param" "maybe type" "temp"
    (744392 'move' call_tmp[744389](298795 call isBoundedRange other[298761]))
    unknown call_tmp[744394] "expr temp" "maybe param" "maybe type" "temp"
    (744397 'move' call_tmp[744394](298796 call ! call_tmp[744389]))
    unknown call_tmp[744399] "expr temp" "maybe param" "maybe type" "temp"
    (744402 'move' call_tmp[744399](298868 call _cond_test call_tmp[744394]))
    if call_tmp[744399]
    {
      unknown call_tmp[744404] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (744407 'move' call_tmp[744404](298799 'typeof' this[304207]))
      unknown call_tmp[744409] "maybe param" "maybe type" "temp"
      (744412 'move' call_tmp[744409](298801 call _cast string[26] call_tmp[744404]))
      unknown e[298803] "dead at end of block" "param"
      (549817 'init var' e[298803] call_tmp[744409])
      (298806 'end of statement')
      unknown call_tmp[744414] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (744417 'move' call_tmp[744414](298809 'typeof' other[298761]))
      unknown call_tmp[744419] "maybe param" "maybe type" "temp"
      (744422 'move' call_tmp[744419](298811 call _cast string[26] call_tmp[744414]))
      unknown f[298813] "dead at end of block" "param"
      (549819 'init var' f[298813] call_tmp[744419])
      (298816 'end of statement')
      unknown call_tmp[744424] "expr temp" "maybe param" "maybe type" "temp"
      (744427 'move' call_tmp[744424](298835 call + "Cannot init " e[298803]))
      unknown call_tmp[744429] "expr temp" "maybe param" "maybe type" "temp"
      (744432 'move' call_tmp[744429](298854 call + call_tmp[744424] " from unbounded "))
      unknown call_tmp[744434] "maybe param" "maybe type" "temp"
      (744437 'move' call_tmp[744434](298857 call + call_tmp[744429] f[298813]))
      unknown msg[298859] "dead at end of block" "param"
      (549821 'init var' msg[298859] call_tmp[744434])
      (298862 'end of statement')
      (298866 call compilerError msg[298859])
    }
    unknown tmp[467413] "temp"
    (467415 'init var' tmp[467413] 0)
    (467417 '.=' this[304207] c"_size" tmp[467413])
    (490948 'end of statement')
    unknown tmp[467429] "temp"
    unknown tmp[580765] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[580766] "maybe param" "temp"
    unknown call_tmp[744439] "expr temp" "maybe param" "maybe type" "temp"
    (744442 'move' call_tmp[744439](467437 '.v' this[304207] c"parSafe"))
    (580771 'move' tmp[580766](580769 call _cond_test call_tmp[744439]))
    if tmp[580766]
    {
      unknown tmp[580773] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (580775 'move' tmp[580773](748124 'new' _LockWrapper[405197](?)))
      (580780 'move' tmp[580765](580777 '_paramFoldLogical' tmp[580766] tmp[580773]))
    }
    {
      (580785 'move' tmp[580765](580782 '_paramFoldLogical' tmp[580766] none[57]))
    }
    (467431 'init var' tmp[467429] tmp[580765])
    (467433 '.=' this[304207] c"_lock$" tmp[467429])
    (490949 'end of statement')
    unknown call_tmp[744444] "expr temp" "maybe param" "maybe type" "temp"
    (744447 'move' call_tmp[744444](467454 '.v' this[304207] c"eltType"))
    unknown call_tmp[744449] "expr temp" "maybe param" "maybe type" "temp"
    (744452 'move' call_tmp[744449](467446 call _ddata[11695](?) call_tmp[744444]))
    unknown call_tmp[744454] "maybe param" "maybe type" "temp"
    (744457 'move' call_tmp[744454](467444 call _ddata[11695](?) call_tmp[744449]))
    unknown tmp[467441] "temp"
    (467448 'init var' tmp[467441] nil[44] call_tmp[744454])
    (467450 'init field' this[304207] c"_arrays" tmp[467441])
    (490950 'end of statement')
    unknown tmp[467458] "temp"
    (467460 'init var' tmp[467458] 0)
    (467462 '.=' this[304207] c"_arrayCapacity" tmp[467458])
    (490951 'end of statement')
    unknown tmp[467467] "temp"
    (467469 'init var' tmp[467467] 0)
    (467471 '.=' this[304207] c"_totalCapacity" tmp[467467])
    (490952 'end of statement')
    unknown tmp[467475] "temp"
    unknown call_tmp[744459] "expr temp" "maybe param" "maybe type" "temp"
    (744462 'move' call_tmp[744459](467486 '.v' this[304207] c"eltType"))
    unknown call_tmp[744464] "expr temp" "maybe param" "maybe type" "temp"
    (744467 'move' call_tmp[744464](467478 call _dummyFieldType call_tmp[744459]))
    (467480 'default init var' tmp[467475] call_tmp[744464])
    (467482 '.=' this[304207] c"_dummyFieldToForceBorrowChecking" tmp[467475])
    (490953 'end of statement')
    (298882 call(405238 call (partial) _commonInitFromIterable _mt[243] this[304207]) other[298761])
    (539079 return _void[55])
  }
  function list[304193](?).init=[298901](arg _mt[304213]:_MT[238], ref arg this[304211]:list[304193](?), arg other[298898]:list[304193](?)) : void[4] "compiler added where" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[744471] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744474 'move' call_tmp[744471](298905 'typeof' this[304211]))
    unknown call_tmp[744478] "expr temp" "maybe param" "maybe type" "temp"
    (744481 'move' call_tmp[744478](298906 call eltType _mt[243] call_tmp[744471]))
    unknown call_tmp[744483] "expr temp" "maybe param" "maybe type" "temp"
    (744486 'move' call_tmp[744483](298910 call isCopyableType call_tmp[744478]))
    unknown call_tmp[744488] "expr temp" "maybe param" "maybe type" "temp"
    (744491 'move' call_tmp[744488](298911 call ! call_tmp[744483]))
    unknown call_tmp[744493] "expr temp" "maybe param" "maybe type" "temp"
    (744496 'move' call_tmp[744493](298921 call _cond_test call_tmp[744488]))
    if call_tmp[744493]
    {
      unknown call_tmp[744498] "expr temp" "maybe param" "maybe type" "temp"
      (744501 'move' call_tmp[744498](298916 call + "Cannot copy list with element type that " "cannot be copied"))
      (298919 call compilerError call_tmp[744498])
    }
    unknown tmp[467510] "temp" "type variable"
    unknown call_tmp[744503] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744506 'move' call_tmp[744503](298932 'typeof' this[304211]))
    (467512 'move' tmp[467510](298933 call eltType _mt[243] call_tmp[744503]))
    (467514 'init field' this[304211] c"eltType" tmp[467510])
    (490956 'end of statement')
    unknown call_tmp[744510] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744513 'move' call_tmp[744510](298944 'typeof' this[304211]))
    unknown call_tmp[744517] "maybe param" "maybe type" "temp"
    (744520 'move' call_tmp[744517](298945 call parSafe _mt[243] call_tmp[744510]))
    unknown tmp[467518] "param" "temp"
    (467520 'init var' tmp[467518] call_tmp[744517])
    (467522 'init field' this[304211] c"parSafe" tmp[467518])
    (490957 'end of statement')
    unknown tmp[467527] "temp"
    (467529 'init var' tmp[467527] 0)
    (467531 '.=' this[304211] c"_size" tmp[467527])
    (490958 'end of statement')
    unknown tmp[467543] "temp"
    unknown tmp[580792] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[580793] "maybe param" "temp"
    unknown call_tmp[744522] "expr temp" "maybe param" "maybe type" "temp"
    (744525 'move' call_tmp[744522](467551 '.v' this[304211] c"parSafe"))
    (580798 'move' tmp[580793](580796 call _cond_test call_tmp[744522]))
    if tmp[580793]
    {
      unknown tmp[580800] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (580802 'move' tmp[580800](748125 'new' _LockWrapper[405197](?)))
      (580807 'move' tmp[580792](580804 '_paramFoldLogical' tmp[580793] tmp[580800]))
    }
    {
      (580812 'move' tmp[580792](580809 '_paramFoldLogical' tmp[580793] none[57]))
    }
    (467545 'init var' tmp[467543] tmp[580792])
    (467547 '.=' this[304211] c"_lock$" tmp[467543])
    (490959 'end of statement')
    unknown call_tmp[744527] "expr temp" "maybe param" "maybe type" "temp"
    (744530 'move' call_tmp[744527](467568 '.v' this[304211] c"eltType"))
    unknown call_tmp[744532] "expr temp" "maybe param" "maybe type" "temp"
    (744535 'move' call_tmp[744532](467560 call _ddata[11695](?) call_tmp[744527]))
    unknown call_tmp[744537] "maybe param" "maybe type" "temp"
    (744540 'move' call_tmp[744537](467558 call _ddata[11695](?) call_tmp[744532]))
    unknown tmp[467555] "temp"
    (467562 'init var' tmp[467555] nil[44] call_tmp[744537])
    (467564 'init field' this[304211] c"_arrays" tmp[467555])
    (490960 'end of statement')
    unknown tmp[467572] "temp"
    (467574 'init var' tmp[467572] 0)
    (467576 '.=' this[304211] c"_arrayCapacity" tmp[467572])
    (490961 'end of statement')
    unknown tmp[467581] "temp"
    (467583 'init var' tmp[467581] 0)
    (467585 '.=' this[304211] c"_totalCapacity" tmp[467581])
    (490962 'end of statement')
    unknown tmp[467589] "temp"
    unknown call_tmp[744542] "expr temp" "maybe param" "maybe type" "temp"
    (744545 'move' call_tmp[744542](467600 '.v' this[304211] c"eltType"))
    unknown call_tmp[744547] "expr temp" "maybe param" "maybe type" "temp"
    (744550 'move' call_tmp[744547](467592 call _dummyFieldType call_tmp[744542]))
    (467594 'default init var' tmp[467589] call_tmp[744547])
    (467596 '.=' this[304211] c"_dummyFieldToForceBorrowChecking" tmp[467589])
    (490963 'end of statement')
    (298961 call(405248 call (partial) _commonInitFromIterable _mt[243] this[304211]) other[298898])
    (539081 return _void[55])
  }
  where {
    unknown call_tmp[744554] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744557 'move' call_tmp[744554](467497 'typeof' this[304211]))
    unknown call_tmp[744561] "expr temp" "maybe param" "maybe type" "temp"
    (744564 'move' call_tmp[744561](467496 call eltType _mt[243] call_tmp[744554]))
    unknown call_tmp[744566] "expr temp" "maybe param" "maybe type" "temp"
    (744569 'move' call_tmp[744566](467492 'query' other[298898] 1))
    unknown call_tmp[744571] "expr temp" "maybe param" "maybe type" "temp"
    (744574 'move' call_tmp[744571](467500 call == call_tmp[744561] call_tmp[744566]))
    (467504 call & 1 call_tmp[744571])
  }
  function list[304193](?).init=[298980](arg _mt[304217]:_MT[238], ref arg this[304215]:list[304193](?), arg other[298977]:_array[133588](?)) : void[4] "compiler added where" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[744576] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744579 'move' call_tmp[744576](298984 'typeof' this[304215]))
    unknown call_tmp[744583] "expr temp" "maybe param" "maybe type" "temp"
    (744586 'move' call_tmp[744583](298985 call eltType _mt[243] call_tmp[744576]))
    unknown call_tmp[744588] "expr temp" "maybe param" "maybe type" "temp"
    (744591 'move' call_tmp[744588](298989 call isCopyableType call_tmp[744583]))
    unknown call_tmp[744593] "expr temp" "maybe param" "maybe type" "temp"
    (744596 'move' call_tmp[744593](298990 call ! call_tmp[744588]))
    unknown call_tmp[744598] "expr temp" "maybe param" "maybe type" "temp"
    (744601 'move' call_tmp[744598](299032 call _cond_test call_tmp[744593]))
    if call_tmp[744598]
    {
      unknown call_tmp[744603] "expr temp" "maybe param" "maybe type" "temp"
      (744606 'move' call_tmp[744603](299027 call + "Cannot copy list from array with element type " "that cannot be copied"))
      (299030 call compilerError call_tmp[744603])
    }
    unknown tmp[467615] "temp" "type variable"
    unknown call_tmp[744608] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744611 'move' call_tmp[744608](299043 'typeof' this[304215]))
    (467617 'move' tmp[467615](299044 call eltType _mt[243] call_tmp[744608]))
    (467619 'init field' this[304215] c"eltType" tmp[467615])
    (490966 'end of statement')
    unknown call_tmp[744615] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744618 'move' call_tmp[744615](299055 'typeof' this[304215]))
    unknown call_tmp[744622] "maybe param" "maybe type" "temp"
    (744625 'move' call_tmp[744622](299056 call parSafe _mt[243] call_tmp[744615]))
    unknown tmp[467623] "param" "temp"
    (467625 'init var' tmp[467623] call_tmp[744622])
    (467627 'init field' this[304215] c"parSafe" tmp[467623])
    (490967 'end of statement')
    unknown tmp[467632] "temp"
    (467634 'init var' tmp[467632] 0)
    (467636 '.=' this[304215] c"_size" tmp[467632])
    (490968 'end of statement')
    unknown tmp[467648] "temp"
    unknown tmp[580819] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[580820] "maybe param" "temp"
    unknown call_tmp[744627] "expr temp" "maybe param" "maybe type" "temp"
    (744630 'move' call_tmp[744627](467656 '.v' this[304215] c"parSafe"))
    (580825 'move' tmp[580820](580823 call _cond_test call_tmp[744627]))
    if tmp[580820]
    {
      unknown tmp[580827] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (580829 'move' tmp[580827](748126 'new' _LockWrapper[405197](?)))
      (580834 'move' tmp[580819](580831 '_paramFoldLogical' tmp[580820] tmp[580827]))
    }
    {
      (580839 'move' tmp[580819](580836 '_paramFoldLogical' tmp[580820] none[57]))
    }
    (467650 'init var' tmp[467648] tmp[580819])
    (467652 '.=' this[304215] c"_lock$" tmp[467648])
    (490969 'end of statement')
    unknown call_tmp[744632] "expr temp" "maybe param" "maybe type" "temp"
    (744635 'move' call_tmp[744632](467673 '.v' this[304215] c"eltType"))
    unknown call_tmp[744637] "expr temp" "maybe param" "maybe type" "temp"
    (744640 'move' call_tmp[744637](467665 call _ddata[11695](?) call_tmp[744632]))
    unknown call_tmp[744642] "maybe param" "maybe type" "temp"
    (744645 'move' call_tmp[744642](467663 call _ddata[11695](?) call_tmp[744637]))
    unknown tmp[467660] "temp"
    (467667 'init var' tmp[467660] nil[44] call_tmp[744642])
    (467669 'init field' this[304215] c"_arrays" tmp[467660])
    (490970 'end of statement')
    unknown tmp[467677] "temp"
    (467679 'init var' tmp[467677] 0)
    (467681 '.=' this[304215] c"_arrayCapacity" tmp[467677])
    (490971 'end of statement')
    unknown tmp[467686] "temp"
    (467688 'init var' tmp[467686] 0)
    (467690 '.=' this[304215] c"_totalCapacity" tmp[467686])
    (490972 'end of statement')
    unknown tmp[467694] "temp"
    unknown call_tmp[744647] "expr temp" "maybe param" "maybe type" "temp"
    (744650 'move' call_tmp[744647](467705 '.v' this[304215] c"eltType"))
    unknown call_tmp[744652] "expr temp" "maybe param" "maybe type" "temp"
    (744655 'move' call_tmp[744652](467697 call _dummyFieldType call_tmp[744647]))
    (467699 'default init var' tmp[467694] call_tmp[744652])
    (467701 '.=' this[304215] c"_dummyFieldToForceBorrowChecking" tmp[467694])
    (490973 'end of statement')
    (299072 call(405257 call (partial) _commonInitFromIterable _mt[243] this[304215]) other[298977])
    (539083 return _void[55])
  }
  where {
    unknown call_tmp[744659] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744662 'move' call_tmp[744659](298971 'typeof' this[304215]))
    unknown call_tmp[744666] "expr temp" "maybe param" "maybe type" "temp"
    (744669 'move' call_tmp[744666](298972 call eltType _mt[243] call_tmp[744659]))
    unknown call_tmp[744673] "expr temp" "maybe param" "maybe type" "temp"
    (744676 'move' call_tmp[744673](467609 call eltType _mt[243] other[298977]))
    unknown call_tmp[744678] "expr temp" "maybe param" "maybe type" "temp"
    (744681 'move' call_tmp[744678](467613 call == call_tmp[744666] call_tmp[744673]))
    (467607 call & 1 call_tmp[744678])
  }
  function list[304193](?).init=[299093](arg _mt[304221]:_MT[238], ref arg this[304219]:list[304193](?), arg other[299090]:range[64316](?)) : void[4] "compiler added where" "method" "primary method" "no return value for void"
  {
    unknown tmp[467732] "temp" "type variable"
    unknown call_tmp[744683] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744686 'move' call_tmp[744683](299100 'typeof' this[304219]))
    (467734 'move' tmp[467732](299101 call eltType _mt[243] call_tmp[744683]))
    (467736 'init field' this[304219] c"eltType" tmp[467732])
    (490975 'end of statement')
    unknown call_tmp[744690] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744693 'move' call_tmp[744690](299113 'typeof' this[304219]))
    unknown call_tmp[744697] "maybe param" "maybe type" "temp"
    (744700 'move' call_tmp[744697](299114 call parSafe _mt[243] call_tmp[744690]))
    unknown tmp[467740] "param" "temp"
    (467742 'init var' tmp[467740] call_tmp[744697])
    (467744 'init field' this[304219] c"parSafe" tmp[467740])
    (490976 'end of statement')
    unknown call_tmp[744702] "expr temp" "maybe param" "maybe type" "temp"
    (744705 'move' call_tmp[744702](299123 call isBoundedRange other[299090]))
    unknown call_tmp[744707] "expr temp" "maybe param" "maybe type" "temp"
    (744710 'move' call_tmp[744707](299124 call ! call_tmp[744702]))
    unknown call_tmp[744712] "expr temp" "maybe param" "maybe type" "temp"
    (744715 'move' call_tmp[744712](299164 call _cond_test call_tmp[744707]))
    if call_tmp[744712]
    {
      unknown call_tmp[744717] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (744720 'move' call_tmp[744717](299127 'typeof' this[304219]))
      unknown call_tmp[744722] "maybe param" "maybe type" "temp"
      (744725 'move' call_tmp[744722](299129 call _cast string[26] call_tmp[744717]))
      unknown e[299131] "dead at end of block" "param"
      (549823 'init var' e[299131] call_tmp[744722])
      (299134 'end of statement')
      unknown call_tmp[744727] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (744730 'move' call_tmp[744727](299137 'typeof' other[299090]))
      unknown call_tmp[744732] "maybe param" "maybe type" "temp"
      (744735 'move' call_tmp[744732](299139 call _cast string[26] call_tmp[744727]))
      unknown f[299141] "dead at end of block" "param"
      (549825 'init var' f[299141] call_tmp[744732])
      (299144 'end of statement')
      unknown call_tmp[744737] "expr temp" "maybe param" "maybe type" "temp"
      (744740 'move' call_tmp[744737](299147 call + "Cannot init " e[299131]))
      unknown call_tmp[744742] "expr temp" "maybe param" "maybe type" "temp"
      (744745 'move' call_tmp[744742](299150 call + call_tmp[744737] " from unbounded "))
      unknown call_tmp[744747] "maybe param" "maybe type" "temp"
      (744750 'move' call_tmp[744747](299153 call + call_tmp[744742] f[299141]))
      unknown msg[299155] "dead at end of block" "param"
      (549827 'init var' msg[299155] call_tmp[744747])
      (299158 'end of statement')
      (299162 call compilerError msg[299155])
    }
    unknown tmp[467749] "temp"
    (467751 'init var' tmp[467749] 0)
    (467753 '.=' this[304219] c"_size" tmp[467749])
    (490978 'end of statement')
    unknown tmp[467765] "temp"
    unknown tmp[580846] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[580847] "maybe param" "temp"
    unknown call_tmp[744752] "expr temp" "maybe param" "maybe type" "temp"
    (744755 'move' call_tmp[744752](467773 '.v' this[304219] c"parSafe"))
    (580852 'move' tmp[580847](580850 call _cond_test call_tmp[744752]))
    if tmp[580847]
    {
      unknown tmp[580854] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (580856 'move' tmp[580854](748127 'new' _LockWrapper[405197](?)))
      (580861 'move' tmp[580846](580858 '_paramFoldLogical' tmp[580847] tmp[580854]))
    }
    {
      (580866 'move' tmp[580846](580863 '_paramFoldLogical' tmp[580847] none[57]))
    }
    (467767 'init var' tmp[467765] tmp[580846])
    (467769 '.=' this[304219] c"_lock$" tmp[467765])
    (490979 'end of statement')
    unknown call_tmp[744757] "expr temp" "maybe param" "maybe type" "temp"
    (744760 'move' call_tmp[744757](467790 '.v' this[304219] c"eltType"))
    unknown call_tmp[744762] "expr temp" "maybe param" "maybe type" "temp"
    (744765 'move' call_tmp[744762](467782 call _ddata[11695](?) call_tmp[744757]))
    unknown call_tmp[744767] "maybe param" "maybe type" "temp"
    (744770 'move' call_tmp[744767](467780 call _ddata[11695](?) call_tmp[744762]))
    unknown tmp[467777] "temp"
    (467784 'init var' tmp[467777] nil[44] call_tmp[744767])
    (467786 'init field' this[304219] c"_arrays" tmp[467777])
    (490980 'end of statement')
    unknown tmp[467794] "temp"
    (467796 'init var' tmp[467794] 0)
    (467798 '.=' this[304219] c"_arrayCapacity" tmp[467794])
    (490981 'end of statement')
    unknown tmp[467803] "temp"
    (467805 'init var' tmp[467803] 0)
    (467807 '.=' this[304219] c"_totalCapacity" tmp[467803])
    (490982 'end of statement')
    unknown tmp[467811] "temp"
    unknown call_tmp[744772] "expr temp" "maybe param" "maybe type" "temp"
    (744775 'move' call_tmp[744772](467822 '.v' this[304219] c"eltType"))
    unknown call_tmp[744777] "expr temp" "maybe param" "maybe type" "temp"
    (744780 'move' call_tmp[744777](467814 call _dummyFieldType call_tmp[744772]))
    (467816 'default init var' tmp[467811] call_tmp[744777])
    (467818 '.=' this[304219] c"_dummyFieldToForceBorrowChecking" tmp[467811])
    (490983 'end of statement')
    (299178 call(405272 call (partial) _commonInitFromIterable _mt[243] this[304219]) other[299090])
    (539085 return _void[55])
  }
  where {
    unknown call_tmp[744784] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744787 'move' call_tmp[744784](467716 'typeof' this[304219]))
    unknown call_tmp[744791] "expr temp" "maybe param" "maybe type" "temp"
    (744794 'move' call_tmp[744791](467715 call eltType _mt[243] call_tmp[744784]))
    unknown call_tmp[744796] "expr temp" "maybe param" "maybe type" "temp"
    (744799 'move' call_tmp[744796](467711 'query' other[299090] 1))
    unknown call_tmp[744801] "expr temp" "maybe param" "maybe type" "temp"
    (744804 'move' call_tmp[744801](467719 call == call_tmp[744791] call_tmp[744796]))
    (467723 call & 1 call_tmp[744801])
  }
  function list[304193](?)._commonInitFromIterable[299186](arg _mt[304225]:_MT[238], arg this[304223]:list[304193](?), arg iterable[299184]:_any[178](?)) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    (299199 call(299195 call (partial) _firstTimeInitializeArrays _mt[243] this[304223]))
    (490985 'end of statement')
    {
      unknown _indexOfInterest[299209] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[299210] "expr temp" "temp"
      (299219 'move' _iterator[299210](299217 call _getIterator iterable[299184]))
      Defer
      {
        {
          (299235 call _freeIterator _iterator[299210])
        }
      }
      { scopeless type
        (299224 'move' _indexOfInterest[299209](299221 call iteratorIndex _iterator[299210]))
      }
      ForLoop[299211]
      {
        unknown x[299228] "index var" "insert auto destroy"
        (490987 'end of statement')
        (299230 'move' x[299228] _indexOfInterest[299209])
        (490988 'end of statement' x[299228])
        (299207 call(405280 call (partial) append _mt[243] this[304223]) x[299228])
        (490990 'end of statement' x[299228])
        label _continueLabel[299214]
        _indexOfInterest[299209]
        _iterator[299210]
      }
      label _breakLabel[299215]
    }
    (539087 return _void[55])
  }
  {
    (299192 call <(299189 'lifetime_of' this[304223])(299191 'lifetime_of' iterable[299184]))
  }
  function list[304193](?)._firstTimeInitializeArrays[299247](arg _mt[304229]:_MT[238], arg this[304227]:list[304193](?)) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[744812] "expr temp" "maybe param" "maybe type" "temp"
    (744815 'move' call_tmp[744812](405288 call _arrays _mt[243] this[304227]))
    unknown call_tmp[744817] "expr temp" "maybe param" "maybe type" "temp"
    (744820 'move' call_tmp[744817](299252 call == call_tmp[744812] nil[44]))
    (299255 call _sanity call_tmp[744817])
    (490992 'end of statement')
    unknown call_tmp[744824] "expr temp" "maybe param" "maybe type" "temp"
    (744827 'move' call_tmp[744824](405295 call _totalCapacity _mt[243] this[304227]))
    unknown call_tmp[744829] "expr temp" "maybe param" "maybe type" "temp"
    (744832 'move' call_tmp[744829](299261 call == call_tmp[744824] 0))
    (299264 call _sanity call_tmp[744829])
    (490993 'end of statement')
    unknown call_tmp[744836] "expr temp" "maybe param" "maybe type" "temp"
    (744839 'move' call_tmp[744836](405302 call _size _mt[243] this[304227]))
    unknown call_tmp[744841] "expr temp" "maybe param" "maybe type" "temp"
    (744844 'move' call_tmp[744841](299269 call == call_tmp[744836] 0))
    (299272 call _sanity call_tmp[744841])
    (490994 'end of statement')
    unknown call_tmp[744848] "expr temp" "maybe param" "maybe type" "temp"
    (744851 'move' call_tmp[744848](405307 call _arrays _mt[243] this[304227]))
    unknown call_tmp[744855] "expr temp" "maybe param" "maybe type" "temp"
    (744858 'move' call_tmp[744855](299278 call(405313 call (partial) _makeBlockArray _mt[243] this[304227]) _initialArrayCapacity[298233]))
    (299279 call = call_tmp[744848] call_tmp[744855])
    (490995 'end of statement')
    unknown call_tmp[744862] "expr temp" "maybe param" "maybe type" "temp"
    (744865 'move' call_tmp[744862](405321 call _arrayCapacity _mt[243] this[304227]))
    (299284 call = call_tmp[744862] _initialArrayCapacity[298233])
    (490996 'end of statement')
    unknown call_tmp[744869] "expr temp" "maybe param" "maybe type" "temp"
    (744872 'move' call_tmp[744869](299290 call(405327 call (partial) _arrays _mt[243] this[304227]) 0))
    unknown call_tmp[744876] "expr temp" "maybe param" "maybe type" "temp"
    (744879 'move' call_tmp[744876](299294 call(405333 call (partial) _makeArray _mt[243] this[304227]) _initialCapacity[298228]))
    (299295 call = call_tmp[744869] call_tmp[744876])
    (490997 'end of statement')
    unknown call_tmp[744883] "expr temp" "maybe param" "maybe type" "temp"
    (744886 'move' call_tmp[744883](405339 call _totalCapacity _mt[243] this[304227]))
    (299300 call = call_tmp[744883] _initialCapacity[298228])
    (539089 return _void[55])
  }
  function list[304193](?).deinit[299307](arg _mt[304233]:_MT[238], arg this[304231]:list[304193](?)) : _unknown[51] "destructor" "inline" "method" "primary method" "no doc" "no return value for void"
  {
    (299311 call(405346 call (partial) _fireAllDestructors _mt[243] this[304231]))
    (490999 'end of statement')
    (299316 call(405352 call (partial) _freeAllArrays _mt[243] this[304231]))
    (491000 'end of statement')
    unknown call_tmp[744894] "expr temp" "maybe param" "maybe type" "temp"
    (744897 'move' call_tmp[744894](405357 call _totalCapacity _mt[243] this[304231]))
    unknown call_tmp[744899] "expr temp" "maybe param" "maybe type" "temp"
    (744902 'move' call_tmp[744899](299321 call == call_tmp[744894] 0))
    (299324 call _sanity call_tmp[744899])
    (491001 'end of statement')
    unknown call_tmp[744906] "expr temp" "maybe param" "maybe type" "temp"
    (744909 'move' call_tmp[744906](405362 call _size _mt[243] this[304231]))
    unknown call_tmp[744911] "expr temp" "maybe param" "maybe type" "temp"
    (744914 'move' call_tmp[744911](299329 call == call_tmp[744906] 0))
    (299332 call _sanity call_tmp[744911])
    (491002 'end of statement')
    unknown call_tmp[744918] "expr temp" "maybe param" "maybe type" "temp"
    (744921 'move' call_tmp[744918](405367 call _arrays _mt[243] this[304231]))
    unknown call_tmp[744923] "expr temp" "maybe param" "maybe type" "temp"
    (744926 'move' call_tmp[744923](299337 call == call_tmp[744918] nil[44]))
    (299340 call _sanity call_tmp[744923])
    (539091 return _void[55])
  }
  function list[304193](?)._destroy[299350](arg _mt[304237]:_MT[238], arg this[304235]:list[304193](?), ref arg item[299347] :
  (405372 call eltType _mt[243] this[304235])) : _unknown[51] "inline" "method" "primary method" "no doc" "no return value for void"
  {
    (299355 call chpl__autoDestroy item[299347])
    (539093 return _void[55])
  }
  function list[304193](?)._move[299367](arg _mt[304241]:_MT[238], arg this[304239]:list[304193](?), ref arg src[299364]:_any[178](?), ref arg dst[299370] :
  (467825 'typeof' src[299364])) : _unknown[51] "inline" "method" "primary method" "no doc" "unsafe" "no return value for void"
  {
    (299383 '=' dst[299370] src[299364])
    (539095 return _void[55])
  }
  {
    (299377 call ==(299374 'lifetime_of' src[299364])(299376 'lifetime_of' dst[299370]))
  }
  function list[304193](?)._getArrayCapacity[299395](arg _mt[304245]:_MT[238], arg this[304243]:list[304193](?), arg array[299392]:int(64)[13]) : _unknown[51] "inline" "method" "primary method" "no doc"
  {
    unknown ret[539099] "RVV" "temp"
    unknown call_tmp[744930] "expr temp" "maybe param" "maybe type" "temp"
    (744933 'move' call_tmp[744930](299402 call log2 _initialCapacity[298228]))
    unknown call_tmp[744935] "maybe param" "maybe type" "temp"
    (744938 'move' call_tmp[744935](299403 call + array[299392] call_tmp[744930]))
    const exp[299405] "dead at end of block" "const" "insert auto destroy"
    (549829 'init var' exp[299405] call_tmp[744935])
    (299408 'end of statement')
    unknown call_tmp[744940] "maybe param" "maybe type" "temp"
    (744943 'move' call_tmp[744940](299412 call ** 2 exp[299405]))
    const result[299414] "dead at end of block" "const" "insert auto destroy"
    (549831 'init var' result[299414] call_tmp[744940])
    (299417 'end of statement' exp[299405])
    (539105 'move' ret[539099](539104 'coerce' result[299414] int(64)[13]))
    gotoReturn _end__getArrayCapacity[539097] _end__getArrayCapacity[539097]
    (491007 'end of statement' result[299414])
    label _end__getArrayCapacity[539097]
    (539101 return ret[539099])
  }
  { scopeless type
    int(64)[13]
  }
  function list[304193](?)._getArrayIdx[299430](arg _mt[304249]:_MT[238], arg this[304247]:list[304193](?), arg zpos[299427]:int(64)[13]) : _unknown[51] "inline" "method" "primary method" "no doc"
  {
    unknown ret[539111] "RVV" "temp"
    unknown call_tmp[744945] "maybe param" "maybe type" "temp"
    (744948 'move' call_tmp[744945](299435 call + zpos[299427] _initialCapacity[298228]))
    const adj[299437] "dead at end of block" "const" "insert auto destroy"
    (549833 'init var' adj[299437] call_tmp[744945])
    (299440 'end of statement')
    unknown call_tmp[744950] "expr temp" "maybe param" "maybe type" "temp"
    (744953 'move' call_tmp[744950](299445 call log2 adj[299437]))
    unknown call_tmp[744955] "expr temp" "maybe param" "maybe type" "temp"
    (744958 'move' call_tmp[744955](299449 call log2 _initialCapacity[298228]))
    unknown call_tmp[744960] "maybe param" "maybe type" "temp"
    (744963 'move' call_tmp[744960](299450 call - call_tmp[744950] call_tmp[744955]))
    const result[299452] "dead at end of block" "const" "insert auto destroy"
    (549835 'init var' result[299452] call_tmp[744960])
    (299455 'end of statement' adj[299437])
    (539117 'move' ret[539111](539116 'coerce' result[299452] int(64)[13]))
    gotoReturn _end__getArrayIdx[539109] _end__getArrayIdx[539109]
    (491010 'end of statement' result[299452])
    label _end__getArrayIdx[539109]
    (539113 return ret[539111])
  }
  { scopeless type
    int(64)[13]
  }
  function list[304193](?)._getLastArrayIdx[299464](arg _mt[304253]:_MT[238], arg this[304251]:list[304193](?)) : _unknown[51] "inline" "method" "primary method" "no doc"
  {
    unknown ret[539123] "RVV" "temp"
    unknown call_tmp[744969] "expr temp" "maybe param" "maybe type" "temp"
    (744972 'move' call_tmp[744969](405398 call _size _mt[243] this[304251]))
    unknown call_tmp[744974] "expr temp" "maybe param" "maybe type" "temp"
    (744977 'move' call_tmp[744974](299470 call - call_tmp[744969] 1))
    unknown call_tmp[744979] "maybe param" "maybe type" "temp"
    (744982 'move' call_tmp[744979](299473 call(405393 call (partial) _getArrayIdx _mt[243] this[304251]) call_tmp[744974]))
    const result[299474] "dead at end of block" "const" "insert auto destroy"
    (549837 'init var' result[299474] call_tmp[744979])
    (299477 'end of statement')
    unknown call_tmp[744984] "expr temp" "maybe param" "maybe type" "temp"
    (744987 'move' call_tmp[744984](299482 call >= result[299474] 0))
    (299485 call _sanity call_tmp[744984])
    (491012 'end of statement' result[299474])
    (539129 'move' ret[539123](539128 'coerce' result[299474] int(64)[13]))
    gotoReturn _end__getLastArrayIdx[539121] _end__getLastArrayIdx[539121]
    (491014 'end of statement' result[299474])
    label _end__getLastArrayIdx[539121]
    (539125 return ret[539123])
  }
  { scopeless type
    int(64)[13]
  }
  function list[304193](?)._getItemIdx[299499](arg _mt[304257]:_MT[238], arg this[304255]:list[304193](?), arg zpos[299496]:int(64)[13]) : _unknown[51] "inline" "method" "primary method" "no doc"
  {
    unknown ret[539135] "RVV" "temp"
    unknown call_tmp[744989] "maybe param" "maybe type" "temp"
    (744992 'move' call_tmp[744989](299504 call + zpos[299496] _initialCapacity[298228]))
    const adj[299506] "dead at end of block" "const" "insert auto destroy"
    (549839 'init var' adj[299506] call_tmp[744989])
    (299509 'end of statement')
    unknown call_tmp[744994] "expr temp" "maybe param" "maybe type" "temp"
    (744997 'move' call_tmp[744994](299516 call log2 adj[299506]))
    unknown call_tmp[744999] "expr temp" "maybe param" "maybe type" "temp"
    (745002 'move' call_tmp[744999](299517 call << 1 call_tmp[744994]))
    unknown call_tmp[745004] "maybe param" "maybe type" "temp"
    (745007 'move' call_tmp[745004](299519 call ^ adj[299506] call_tmp[744999]))
    const result[299521] "dead at end of block" "const" "insert auto destroy"
    (549841 'init var' result[299521] call_tmp[745004])
    (299524 'end of statement' adj[299506] adj[299506])
    (539141 'move' ret[539135](539140 'coerce' result[299521] int(64)[13]))
    gotoReturn _end__getItemIdx[539133] _end__getItemIdx[539133]
    (491018 'end of statement' result[299521])
    label _end__getItemIdx[539133]
    (539137 return ret[539135])
  }
  { scopeless type
    int(64)[13]
  }
  function list[304193](?)._getRef[299537](arg _mt[304261]:_MT[238], const  ref arg this[304259]:list[304193](?), arg idx[299534]:int(64)[13]) ref : _unknown[51] "inline" "method" "primary method" "no doc"
  {
    unknown ret[539147] "RVV" "temp"
    unknown tmp[434817] "maybe param" "temp"
    (434828 'move' tmp[434817](299542 call >= idx[299534] 0))
    unknown call_tmp[745009] "expr temp" "maybe param" "maybe type" "temp"
    (745012 'move' call_tmp[745009](434830 call _cond_invalid tmp[434817]))
    if call_tmp[745009]
    {
      (434833 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[580873] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[580874] "maybe param" "temp"
    unknown call_tmp[745014] "expr temp" "maybe param" "maybe type" "temp"
    (745017 'move' call_tmp[745014](434818 call isTrue tmp[434817]))
    (580879 'move' tmp[580874](580877 call _cond_test call_tmp[745014]))
    if tmp[580874]
    {
      unknown tmp[580881] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[745021] "expr temp" "maybe param" "maybe type" "temp"
      (745024 'move' call_tmp[745021](405412 call _totalCapacity _mt[243] this[304259]))
      unknown call_tmp[745026] "expr temp" "maybe param" "maybe type" "temp"
      (745029 'move' call_tmp[745026](299546 call < idx[299534] call_tmp[745021]))
      (580883 'move' tmp[580881](434821 call isTrue call_tmp[745026]))
      (580888 'move' tmp[580873](580885 '_paramFoldLogical' tmp[580874] tmp[580881]))
    }
    {
      (580893 'move' tmp[580873](580890 '_paramFoldLogical' tmp[580874] 0))
    }
    (299551 call _sanity tmp[580873])
    (491021 'end of statement')
    unknown call_tmp[745033] "maybe param" "maybe type" "temp"
    (745036 'move' call_tmp[745033](299557 call(405416 call (partial) _getArrayIdx _mt[243] this[304259]) idx[299534]))
    const arrayIdx[299558] "dead at end of block" "const" "insert auto destroy"
    (549843 'init var' arrayIdx[299558] call_tmp[745033])
    (299561 'end of statement')
    unknown call_tmp[745040] "maybe param" "maybe type" "temp"
    (745043 'move' call_tmp[745040](299565 call(405423 call (partial) _getItemIdx _mt[243] this[304259]) idx[299534]))
    const itemIdx[299566] "dead at end of block" "const" "insert auto destroy"
    (549845 'init var' itemIdx[299566] call_tmp[745040])
    (299569 'end of statement')
    unknown call_tmp[745047] "maybe param" "maybe type" "temp"
    (745050 'move' call_tmp[745047](299573 call(405429 call (partial) _arrays _mt[243] this[304259]) arrayIdx[299558]))
    const array[299574] "dead at end of block" "const" "insert auto destroy"
    (549847 'init var' array[299574] call_tmp[745047])
    (299577 'end of statement')
    unknown call_tmp[745052] "expr temp" "maybe param" "maybe type" "temp"
    (745055 'move' call_tmp[745052](299581 call != array[299574] nil[44]))
    (299584 call _sanity call_tmp[745052])
    (491023 'end of statement' array[299574])
    unknown result[299590] "dead at end of block" "ref var"
    unknown call_tmp[745057] "expr temp" "maybe param" "maybe type" "temp"
    (745060 'move' call_tmp[745057](299589 call array[299574] itemIdx[299566]))
    (549850 'move' result[299590](549849 'addr of' call_tmp[745057]))
    (299593 'end of statement' arrayIdx[299558] array[299574] itemIdx[299566])
    (539152 'move' ret[539147](539151 'addr of' result[299590]))
    gotoReturn _end__getRef[539145] _end__getRef[539145]
    (491027 'end of statement' result[299590])
    label _end__getRef[539145]
    (539149 return ret[539147])
  }
  function list[304193](?)._enter[299601](arg _mt[304265]:_MT[238], arg this[304263]:list[304193](?)) : _unknown[51] "inline" "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[745064] "expr temp" "maybe param" "maybe type" "temp"
    (745067 'move' call_tmp[745064](405439 call parSafe _mt[243] this[304263]))
    unknown call_tmp[745069] "expr temp" "maybe param" "maybe type" "temp"
    (745072 'move' call_tmp[745069](299611 call _cond_test call_tmp[745064]))
    if call_tmp[745069]
    {
      unknown call_tmp[745076] "expr temp" "maybe param" "maybe type" "temp"
      (745079 'move' call_tmp[745076](364935 call _lock$ _mt[243] this[304263]))
      (299609 call(299605 call (partial) lock _mt[243] call_tmp[745076]))
    }
    (539156 return _void[55])
  }
  function list[304193](?)._leave[299621](arg _mt[304269]:_MT[238], arg this[304267]:list[304193](?)) : _unknown[51] "inline" "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[745085] "expr temp" "maybe param" "maybe type" "temp"
    (745088 'move' call_tmp[745085](405444 call parSafe _mt[243] this[304267]))
    unknown call_tmp[745090] "expr temp" "maybe param" "maybe type" "temp"
    (745093 'move' call_tmp[745090](299631 call _cond_test call_tmp[745085]))
    if call_tmp[745090]
    {
      unknown call_tmp[745097] "expr temp" "maybe param" "maybe type" "temp"
      (745100 'move' call_tmp[745097](364940 call _lock$ _mt[243] this[304267]))
      (299629 call(299625 call (partial) unlock _mt[243] call_tmp[745097]))
    }
    (539158 return _void[55])
  }
  function list[304193](?)._withinBounds[299645](arg _mt[304273]:_MT[238], const arg this[304271]:list[304193](?), arg idx[299642]:int(64)[13]) : _unknown[51] "inline" "method" "primary method" "no doc"
  {
    unknown ret[539162] "RVV" "temp"
    unknown tmp[434838] "maybe param" "temp"
    (434849 'move' tmp[434838](299650 call >= idx[299642] 0))
    unknown call_tmp[745104] "expr temp" "maybe param" "maybe type" "temp"
    (745107 'move' call_tmp[745104](434851 call _cond_invalid tmp[434838]))
    if call_tmp[745104]
    {
      (434854 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[580900] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[580901] "maybe param" "temp"
    unknown call_tmp[745109] "expr temp" "maybe param" "maybe type" "temp"
    (745112 'move' call_tmp[745109](434839 call isTrue tmp[434838]))
    (580906 'move' tmp[580901](580904 call _cond_test call_tmp[745109]))
    if tmp[580901]
    {
      unknown tmp[580908] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[745116] "expr temp" "maybe param" "maybe type" "temp"
      (745119 'move' call_tmp[745116](405451 call _size _mt[243] this[304271]))
      unknown call_tmp[745121] "expr temp" "maybe param" "maybe type" "temp"
      (745124 'move' call_tmp[745121](299654 call < idx[299642] call_tmp[745116]))
      (580910 'move' tmp[580908](434842 call isTrue call_tmp[745121]))
      (580915 'move' tmp[580900](580912 '_paramFoldLogical' tmp[580901] tmp[580908]))
    }
    {
      (580920 'move' tmp[580900](580917 '_paramFoldLogical' tmp[580901] 0))
    }
    (539168 'move' ret[539162](539167 'coerce' tmp[580900] bool[10]))
    (539164 return ret[539162])
  }
  { scopeless type
    bool[10]
  }
  function list[304193](?)._boundsCheckLeaveOnThrow[299670](arg _mt[304277]:_MT[238], const arg this[304275]:list[304193](?), arg i[299667]:int(64)[13], arg umsg[299690]:string[26] =
  "") : _unknown[51] throws "inline" "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[745128] "expr temp" "maybe param" "maybe type" "temp"
    (745131 'move' call_tmp[745128](299697 call(405457 call (partial) _withinBounds _mt[243] this[304275]) i[299667]))
    unknown call_tmp[745133] "expr temp" "maybe param" "maybe type" "temp"
    (745136 'move' call_tmp[745133](299698 call ! call_tmp[745128]))
    unknown call_tmp[745138] "expr temp" "maybe param" "maybe type" "temp"
    (745141 'move' call_tmp[745138](299765 call _cond_test call_tmp[745133]))
    if call_tmp[745138]
    {
      (299702 call(405464 call (partial) _leave _mt[243] this[304275]))
      (491033 'end of statement')
      const msg[299752] "dead at end of block" "const" "insert auto destroy"
      unknown tmp[580927] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[580928] "maybe param" "temp"
      unknown call_tmp[745145] "expr temp" "maybe param" "maybe type" "temp"
      (745148 'move' call_tmp[745145](299723 call != umsg[299690] ""))
      (580933 'move' tmp[580928](580931 call _cond_test call_tmp[745145]))
      if tmp[580928]
      {
        (580938 'move' tmp[580927](580935 '_paramFoldLogical' tmp[580928] umsg[299690]))
      }
      {
        unknown tmp[580940] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[745150] "expr temp" "maybe param" "maybe type" "temp"
        (745153 'move' call_tmp[745150](299745 call _cast string[26] i[299667]))
        (580942 'move' tmp[580940](299747 call + "Index out of bounds: " call_tmp[745150]))
        (580947 'move' tmp[580927](580944 '_paramFoldLogical' tmp[580928] tmp[580940]))
      }
      (549852 'init var' msg[299752] tmp[580927])
      (299755 'end of statement')
      unknown call_tmp[745155] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
      (745158 'move' call_tmp[745155](748128 'new' IllegalArgumentError[388778](?) msg[299752](_chpl_manager = _owned[30](?))))
      unknown call_tmp[745160] "expr temp" "maybe param" "maybe type" "temp"
      (745163 'move' call_tmp[745160](468167 call chpl_fix_thrown_error call_tmp[745155]))
      (299763 'throw' call_tmp[745160])
      (491034 'end of statement' msg[299752])
    }
    (539170 return _void[55])
  }
  function list[304193](?)._makeBlockArray[299778](arg _mt[304281]:_MT[238], arg this[304279]:list[304193](?), arg size[299775]:int(64)[13]) : _unknown[51] "method" "primary method" "no doc"
  {
    unknown ret[539174] "RVV" "temp"
    unknown call_tmp[745167] "expr temp" "maybe param" "maybe type" "temp"
    (745170 'move' call_tmp[745167](405475 call eltType _mt[243] this[304279]))
    unknown call_tmp[745172] "expr temp" "maybe param" "maybe type" "temp"
    (745175 'move' call_tmp[745172](299784 call _ddata[11695](?) call_tmp[745167]))
    unknown call_tmp[745177] "expr temp" "maybe param" "maybe type" "temp"
    (745180 'move' call_tmp[745177](299787 call _ddata_allocate call_tmp[745172] size[299775]))
    (539179 'move' ret[539174](539178 'deref' call_tmp[745177]))
    (539176 return ret[539174])
  }
  function list[304193](?)._freeBlockArray[299805](arg _mt[304285]:_MT[238], arg this[304283]:list[304193](?), arg data[299802] :
  unknown call_tmp[745184] "expr temp" "maybe param" "maybe type" "temp", arg size[299808]:int(64)[13]) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    (299815 call _ddata_free data[299802] size[299808])
    (539181 return _void[55])
  }
  function list[304193](?)._makeArray[299826](arg _mt[304289]:_MT[238], arg this[304287]:list[304193](?), arg size[299823]:int(64)[13]) : _unknown[51] "method" "primary method" "no doc"
  {
    unknown ret[539185] "RVV" "temp"
    unknown call_tmp[745196] "expr temp" "maybe param" "maybe type" "temp"
    (745199 'move' call_tmp[745196](405490 call eltType _mt[243] this[304287]))
    unknown call_tmp[745201] "expr temp" "maybe param" "maybe type" "temp"
    (745204 'move' call_tmp[745201](299834 call _ddata_allocate call_tmp[745196] size[299823](initElts = 0)))
    (539190 'move' ret[539185](539189 'deref' call_tmp[745201]))
    (539187 return ret[539185])
  }
  function list[304193](?)._freeArray[299849](arg _mt[304293]:_MT[238], arg this[304291]:list[304193](?), arg data[299846] :
  unknown call_tmp[745208] "expr temp" "maybe param" "maybe type" "temp", arg size[299852]:int(64)[13]) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    (299859 call _ddata_free data[299846] size[299852])
    (539192 return _void[55])
  }
  function list[304193](?)._maybeAcquireMem[299870](arg _mt[304297]:_MT[238], arg this[304295]:list[304193](?), arg amount[299867]:int(64)[13]) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[745215] "expr temp" "maybe param" "maybe type" "temp"
    (745218 'move' call_tmp[745215](405504 call _totalCapacity _mt[243] this[304295]))
    unknown call_tmp[745222] "expr temp" "maybe param" "maybe type" "temp"
    (745225 'move' call_tmp[745222](405509 call _size _mt[243] this[304295]))
    unknown call_tmp[745227] "maybe param" "maybe type" "temp"
    (745230 'move' call_tmp[745227](299874 call - call_tmp[745215] call_tmp[745222]))
    const remaining[299876] "dead at end of block" "const" "insert auto destroy"
    (549854 'init var' remaining[299876] call_tmp[745227])
    (299879 'end of statement')
    unknown call_tmp[745232] "expr temp" "maybe param" "maybe type" "temp"
    (745235 'move' call_tmp[745232](299884 call >= remaining[299876] 0))
    (299887 call _sanity call_tmp[745232])
    (491040 'end of statement' remaining[299876])
    unknown call_tmp[745237] "expr temp" "maybe param" "maybe type" "temp"
    (745240 'move' call_tmp[745237](299891 call >= remaining[299876] amount[299867]))
    unknown call_tmp[745242] "expr temp" "maybe param" "maybe type" "temp"
    (745245 'move' call_tmp[745242](299895 call _cond_test call_tmp[745237]))
    if call_tmp[745242]
    {
      gotoReturn _end__maybeAcquireMem[539194] _end__maybeAcquireMem[539194]
    }
    unknown lastArrayIdx[299911] "dead at end of block" "insert auto destroy"
    unknown tmp[580954] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[580955] "maybe param" "temp"
    unknown call_tmp[745249] "expr temp" "maybe param" "maybe type" "temp"
    (745252 'move' call_tmp[745249](405517 call _size _mt[243] this[304295]))
    unknown call_tmp[745254] "expr temp" "maybe param" "maybe type" "temp"
    (745257 'move' call_tmp[745254](299902 call == call_tmp[745249] 0))
    (580960 'move' tmp[580955](580958 call _cond_test call_tmp[745254]))
    if tmp[580955]
    {
      (580965 'move' tmp[580954](580962 '_paramFoldLogical' tmp[580955] 0))
    }
    {
      unknown tmp[580967] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (580969 'move' tmp[580967](299907 call(405523 call (partial) _getLastArrayIdx _mt[243] this[304295])))
      (580974 'move' tmp[580954](580971 '_paramFoldLogical' tmp[580955] tmp[580967]))
    }
    (549856 'init var' lastArrayIdx[299911] tmp[580954])
    (299914 'end of statement')
    unknown call_tmp[745261] "maybe param" "maybe type" "temp"
    (745264 'move' call_tmp[745261](299917 call - amount[299867] remaining[299876]))
    unknown req[299919] "dead at end of block" "insert auto destroy"
    (549858 'init var' req[299919] call_tmp[745261])
    (299922 'end of statement' remaining[299876])
    {
      unknown tmp[300122] "temp"
      unknown call_tmp[745266] "expr temp" "maybe param" "maybe type" "temp"
      (745269 'move' call_tmp[745266](300143 call > req[299919] 0))
      (300146 'move' tmp[300122](300141 call _cond_test call_tmp[745266]))
      WhileDo[300127]
      {
        {
          unknown call_tmp[745273] "expr temp" "maybe param" "maybe type" "temp"
          (745276 'move' call_tmp[745273](405531 call _arrayCapacity _mt[243] this[304295]))
          unknown call_tmp[745278] "expr temp" "maybe param" "maybe type" "temp"
          (745281 'move' call_tmp[745278](299930 call - call_tmp[745273] 1))
          unknown call_tmp[745283] "expr temp" "maybe param" "maybe type" "temp"
          (745286 'move' call_tmp[745283](299932 call >= lastArrayIdx[299911] call_tmp[745278]))
          unknown call_tmp[745288] "expr temp" "maybe param" "maybe type" "temp"
          (745291 'move' call_tmp[745288](300032 call _cond_test call_tmp[745283]))
          if call_tmp[745288]
          {
            const tmp[300024] "const" "temp"
            unknown call_tmp[745293] "expr temp" "maybe param" "maybe type" "temp"
            (745296 'move' call_tmp[745293](300021 '_wide_get_locale' this[304295]))
            (300026 'move' tmp[300024](300022 'deref' call_tmp[745293]))
            {
              {
                unknown call_tmp[745302] "expr temp" "maybe param" "maybe type" "temp"
                (745305 'move' call_tmp[745302](405541 call _arrayCapacity _mt[243] this[304295]))
                unknown call_tmp[745307] "expr temp" "maybe param" "maybe type" "temp"
                (745310 'move' call_tmp[745307](299938 call * call_tmp[745302] 2))
                unknown call_tmp[745312] "maybe param" "maybe type" "temp"
                (745315 'move' call_tmp[745312](299941 call(405536 call (partial) _makeBlockArray _mt[243] this[304295]) call_tmp[745307]))
                unknown _narrays[299942] "dead at end of block" "insert auto destroy"
                (549860 'init var' _narrays[299942] call_tmp[745312])
                (299945 'end of statement')
                {
                  unknown _indexOfInterest[299965] "an _indexOfInterest or chpl__followIdx variable" "temp"
                  unknown _iterator[299966] "expr temp" "temp"
                  unknown call_tmp[745319] "expr temp" "maybe param" "maybe type" "temp"
                  (745322 'move' call_tmp[745319](405554 call _arrayCapacity _mt[243] this[304295]))
                  unknown call_tmp[745324] "expr temp" "maybe param" "maybe type" "temp"
                  (745327 'move' call_tmp[745324](299982 call chpl_direct_counted_range_iter 0 call_tmp[745319]))
                  (299975 'move' _iterator[299966](299973 call _getIterator call_tmp[745324]))
                  Defer
                  {
                    {
                      (299998 call _freeIterator _iterator[299966])
                    }
                  }
                  { scopeless type
                    (299987 'move' _indexOfInterest[299965](299984 call iteratorIndex _iterator[299966]))
                  }
                  ForLoop[299967]
                  {
                    unknown i[299991] "index var" "insert auto destroy"
                    (491045 'end of statement')
                    (299993 'move' i[299991] _indexOfInterest[299965])
                    (491046 'end of statement' i[299991])
                    unknown call_tmp[745329] "expr temp" "maybe param" "maybe type" "temp"
                    (745332 'move' call_tmp[745329](299957 call _narrays[299942] i[299991]))
                    unknown call_tmp[745336] "expr temp" "maybe param" "maybe type" "temp"
                    (745339 'move' call_tmp[745336](299961 call(405548 call (partial) _arrays _mt[243] this[304295]) i[299991]))
                    (299962 call = call_tmp[745329] call_tmp[745336])
                    (491048 'end of statement' _narrays[299942] i[299991] i[299991])
                    label _continueLabel[299970]
                    _indexOfInterest[299965]
                    _iterator[299966]
                  }
                  label _breakLabel[299971]
                }
                unknown call_tmp[745345] "expr temp" "maybe param" "maybe type" "temp"
                (745348 'move' call_tmp[745345](405565 call _arrays _mt[243] this[304295]))
                unknown call_tmp[745352] "expr temp" "maybe param" "maybe type" "temp"
                (745355 'move' call_tmp[745352](405570 call _arrayCapacity _mt[243] this[304295]))
                (300009 call(405560 call (partial) _freeBlockArray _mt[243] this[304295]) call_tmp[745345] call_tmp[745352])
                (491052 'end of statement')
                unknown call_tmp[745359] "expr temp" "maybe param" "maybe type" "temp"
                (745362 'move' call_tmp[745359](405575 call _arrays _mt[243] this[304295]))
                (300013 call = call_tmp[745359] _narrays[299942])
                (491053 'end of statement' _narrays[299942])
                unknown call_tmp[745366] "expr temp" "maybe param" "maybe type" "temp"
                (745369 'move' call_tmp[745366](405581 call _arrayCapacity _mt[243] this[304295]))
                (300018 call *= call_tmp[745366] 2)
              }
              (300029 'on block' 0 tmp[300024])
            }
          }
          const tmp[300114] "const" "temp"
          unknown call_tmp[745371] "expr temp" "maybe param" "maybe type" "temp"
          (745374 'move' call_tmp[745371](300111 '_wide_get_locale' this[304295]))
          (300116 'move' tmp[300114](300112 'deref' call_tmp[745371]))
          {
            {
              unknown call_tmp[745378] "maybe param" "maybe type" "temp"
              (745381 'move' call_tmp[745378](300042 call(405587 call (partial) _arrays _mt[243] this[304295]) lastArrayIdx[299911]))
              const oldLast[300043] "dead at end of block" "const" "insert auto destroy"
              (549862 'init var' oldLast[300043] call_tmp[745378])
              (300046 'end of statement')
              unknown call_tmp[745385] "maybe param" "maybe type" "temp"
              (745388 'move' call_tmp[745385](300051 call(405594 call (partial) _getArrayCapacity _mt[243] this[304295]) lastArrayIdx[299911]))
              const oldLastCapacity[300052] "dead at end of block" "const" "insert auto destroy"
              (549864 'init var' oldLastCapacity[300052] call_tmp[745385])
              (300055 'end of statement')
              (300058 call += lastArrayIdx[299911] 1)
              (491058 'end of statement' lastArrayIdx[299911])
              unknown newLast[300065] "dead at end of block" "ref var"
              unknown call_tmp[745392] "expr temp" "maybe param" "maybe type" "temp"
              (745395 'move' call_tmp[745392](300064 call(405601 call (partial) _arrays _mt[243] this[304295]) lastArrayIdx[299911]))
              (549867 'move' newLast[300065](549866 'addr of' call_tmp[745392]))
              (300068 'end of statement')
              unknown call_tmp[745397] "maybe param" "maybe type" "temp"
              (745400 'move' call_tmp[745397](300071 call * oldLastCapacity[300052] 2))
              const newLastCapacity[300073] "dead at end of block" "const" "insert auto destroy"
              (549869 'init var' newLastCapacity[300073] call_tmp[745397])
              (300076 'end of statement' lastArrayIdx[299911] lastArrayIdx[299911] lastArrayIdx[299911] oldLastCapacity[300052])
              unknown call_tmp[745402] "expr temp" "maybe param" "maybe type" "temp"
              (745405 'move' call_tmp[745402](300080 call != oldLast[300043] nil[44]))
              (300083 call _sanity call_tmp[745402])
              (491062 'end of statement' oldLast[300043])
              unknown call_tmp[745407] "expr temp" "maybe param" "maybe type" "temp"
              (745410 'move' call_tmp[745407](300088 call == newLast[300065] nil[44]))
              (300091 call _sanity call_tmp[745407])
              (491064 'end of statement' newLast[300065])
              unknown call_tmp[745414] "expr temp" "maybe param" "maybe type" "temp"
              (745417 'move' call_tmp[745414](300097 call(405610 call (partial) _makeArray _mt[243] this[304295]) newLastCapacity[300073]))
              (300098 call = newLast[300065] call_tmp[745414])
              (491066 'end of statement' newLast[300065] newLastCapacity[300073])
              unknown call_tmp[745421] "expr temp" "maybe param" "maybe type" "temp"
              (745424 'move' call_tmp[745421](405616 call _totalCapacity _mt[243] this[304295]))
              (300103 call += call_tmp[745421] newLastCapacity[300073])
              (491069 'end of statement' newLastCapacity[300073])
              (300108 call -= req[299919] newLastCapacity[300073])
              (491071 'end of statement' req[299919] newLastCapacity[300073])
            }
            (300119 'on block' 0 tmp[300114])
          }
        }
        label _continueLabel[300125]
        unknown call_tmp[745426] "expr temp" "maybe param" "maybe type" "temp"
        (745429 'move' call_tmp[745426](300133 call > req[299919] 0))
        (300136 'move' tmp[300122](300131 call _cond_test call_tmp[745426]))
        tmp[300122]
      }
      label _breakLabel[300126]
    }
    label _end__maybeAcquireMem[539194]
    (539196 return _void[55])
  }
  function list[304193](?)._maybeReleaseMem[300159](arg _mt[304301]:_MT[238], arg this[304299]:list[304193](?), arg amount[300156]:int(64)[13]) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[745433] "expr temp" "maybe param" "maybe type" "temp"
    (745436 'move' call_tmp[745433](405626 call _totalCapacity _mt[243] this[304299]))
    unknown call_tmp[745438] "expr temp" "maybe param" "maybe type" "temp"
    (745441 'move' call_tmp[745438](300163 call <= call_tmp[745433] _initialCapacity[298228]))
    unknown call_tmp[745443] "expr temp" "maybe param" "maybe type" "temp"
    (745446 'move' call_tmp[745443](300167 call _cond_test call_tmp[745438]))
    if call_tmp[745443]
    {
      gotoReturn _end__maybeReleaseMem[539200] _end__maybeReleaseMem[539200]
    }
    unknown call_tmp[745450] "maybe param" "maybe type" "temp"
    (745453 'move' call_tmp[745450](300175 call(405631 call (partial) _getLastArrayIdx _mt[243] this[304299])))
    const lastArrayIdx[300176] "dead at end of block" "const" "insert auto destroy"
    (549871 'init var' lastArrayIdx[300176] call_tmp[745450])
    (300179 'end of statement')
    unknown call_tmp[745455] "expr temp" "maybe param" "maybe type" "temp"
    (745458 'move' call_tmp[745455](300183 call != lastArrayIdx[300176] 0))
    (300186 call _sanity call_tmp[745455])
    (491076 'end of statement' lastArrayIdx[300176])
    unknown call_tmp[745462] "maybe param" "maybe type" "temp"
    (745465 'move' call_tmp[745462](300191 call(405636 call (partial) _getArrayCapacity _mt[243] this[304299]) lastArrayIdx[300176]))
    const lastArrayCapacity[300192] "dead at end of block" "const" "insert auto destroy"
    (549873 'init var' lastArrayCapacity[300192] call_tmp[745462])
    (300195 'end of statement')
    unknown call_tmp[745469] "expr temp" "maybe param" "maybe type" "temp"
    (745472 'move' call_tmp[745469](405642 call _totalCapacity _mt[243] this[304299]))
    unknown call_tmp[745474] "maybe param" "maybe type" "temp"
    (745477 'move' call_tmp[745474](300198 call - call_tmp[745469] lastArrayCapacity[300192]))
    const threshold[300200] "dead at end of block" "const" "insert auto destroy"
    (549875 'init var' threshold[300200] call_tmp[745474])
    (300203 'end of statement')
    unknown call_tmp[745481] "expr temp" "maybe param" "maybe type" "temp"
    (745484 'move' call_tmp[745481](405648 call _size _mt[243] this[304299]))
    unknown call_tmp[745486] "maybe param" "maybe type" "temp"
    (745489 'move' call_tmp[745486](300206 call - call_tmp[745481] amount[300156]))
    const nsize[300208] "dead at end of block" "const" "insert auto destroy"
    (549877 'init var' nsize[300208] call_tmp[745486])
    (300211 'end of statement')
    unknown call_tmp[745491] "expr temp" "maybe param" "maybe type" "temp"
    (745494 'move' call_tmp[745491](300214 call > nsize[300208] threshold[300200]))
    unknown call_tmp[745496] "expr temp" "maybe param" "maybe type" "temp"
    (745499 'move' call_tmp[745496](300218 call _cond_test call_tmp[745491]))
    if call_tmp[745496]
    {
      gotoReturn _end__maybeReleaseMem[539200] _end__maybeReleaseMem[539200]
    }
    unknown array[300227] "dead at end of block" "ref var"
    unknown call_tmp[745503] "expr temp" "maybe param" "maybe type" "temp"
    (745506 'move' call_tmp[745503](300226 call(405656 call (partial) _arrays _mt[243] this[304299]) lastArrayIdx[300176]))
    (549880 'move' array[300227](549879 'addr of' call_tmp[745503]))
    (300230 'end of statement' lastArrayIdx[300176] lastArrayCapacity[300192] lastArrayIdx[300176])
    unknown call_tmp[745508] "expr temp" "maybe param" "maybe type" "temp"
    (745511 'move' call_tmp[745508](300234 call != array[300227] nil[44]))
    (300237 call _sanity call_tmp[745508])
    (491082 'end of statement' array[300227])
    (300243 call(405664 call (partial) _freeArray _mt[243] this[304299]) array[300227] lastArrayCapacity[300192])
    (491084 'end of statement' array[300227] lastArrayCapacity[300192])
    unknown call_tmp[745517] "expr temp" "maybe param" "maybe type" "temp"
    (745520 'move' call_tmp[745517](405671 call _totalCapacity _mt[243] this[304299]))
    (300247 call -= call_tmp[745517] lastArrayCapacity[300192])
    (491087 'end of statement' lastArrayCapacity[300192])
    (300252 call = array[300227] nil[44])
    (491089 'end of statement' array[300227])
    label _end__maybeReleaseMem[539200]
    (539202 return _void[55])
  }
  function list[304193](?)._expand[300263](arg _mt[304305]:_MT[238], ref arg this[304303]:list[304193](?), arg idx[300260]:int(64)[13], arg shift[300267]:int(64)[13] =
  1) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[745524] "expr temp" "maybe param" "maybe type" "temp"
    (745527 'move' call_tmp[745524](300275 call(405677 call (partial) _withinBounds _mt[243] this[304303]) idx[300260]))
    (300277 call _sanity call_tmp[745524])
    (491091 'end of statement')
    unknown call_tmp[745529] "expr temp" "maybe param" "maybe type" "temp"
    (745532 'move' call_tmp[745529](300282 call <= shift[300267] 0))
    unknown call_tmp[745534] "expr temp" "maybe param" "maybe type" "temp"
    (745537 'move' call_tmp[745534](300286 call _cond_test call_tmp[745529]))
    if call_tmp[745534]
    {
      gotoReturn _end__expand[539208] _end__expand[539208]
    }
    const tmp[300390] "const" "temp"
    unknown call_tmp[745539] "expr temp" "maybe param" "maybe type" "temp"
    (745542 'move' call_tmp[745539](300387 '_wide_get_locale' this[304303]))
    (300392 'move' tmp[300390](300388 'deref' call_tmp[745539]))
    {
      {
        (300295 call(405686 call (partial) _maybeAcquireMem _mt[243] this[304303]) shift[300267])
        (491093 'end of statement')
        {
          unknown _indexOfInterest[300337] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[300338] "expr temp" "temp"
          unknown call_tmp[745548] "expr temp" "maybe param" "maybe type" "temp"
          (745551 'move' call_tmp[745548](405714 call _size _mt[243] this[304303]))
          unknown call_tmp[745553] "expr temp" "maybe param" "maybe type" "temp"
          (745556 'move' call_tmp[745553](300361 call - call_tmp[745548] 1))
          unknown call_tmp[745558] "expr temp" "maybe param" "maybe type" "temp"
          (745561 'move' call_tmp[745558](300357 call - 1))
          unknown call_tmp[745563] "expr temp" "maybe param" "maybe type" "temp"
          (745566 'move' call_tmp[745563](300364 call chpl_direct_range_iter idx[300260] call_tmp[745553] call_tmp[745558]))
          (300347 'move' _iterator[300338](300345 call _getIterator call_tmp[745563]))
          Defer
          {
            {
              (300380 call _freeIterator _iterator[300338])
            }
          }
          { scopeless type
            (300369 'move' _indexOfInterest[300337](300366 call iteratorIndex _iterator[300338]))
          }
          ForLoop[300339]
          {
            unknown i[300373] "index var" "insert auto destroy"
            (491095 'end of statement')
            (300375 'move' i[300373] _indexOfInterest[300337])
            (491096 'end of statement' i[300373])
            {
              unknown src[300315] "dead at end of block" "ref var"
              unknown call_tmp[745570] "expr temp" "maybe param" "maybe type" "temp"
              (745573 'move' call_tmp[745570](300314 call(405693 call (partial) _getRef _mt[243] this[304303]) i[300373]))
              (549883 'move' src[300315](549882 'addr of' call_tmp[745570]))
              (300318 'end of statement')
              unknown dst[300327] "dead at end of block" "ref var"
              unknown call_tmp[745577] "expr temp" "maybe param" "maybe type" "temp"
              (745580 'move' call_tmp[745577](300323 call + i[300373] shift[300267]))
              unknown call_tmp[745582] "expr temp" "maybe param" "maybe type" "temp"
              (745585 'move' call_tmp[745582](300326 call(405698 call (partial) _getRef _mt[243] this[304303]) call_tmp[745577]))
              (549886 'move' dst[300327](549885 'addr of' call_tmp[745582]))
              (300330 'end of statement' i[300373] i[300373])
              (300335 call(405706 call (partial) _move _mt[243] this[304303]) src[300315] dst[300327])
              (491100 'end of statement' src[300315] dst[300327])
            }
            label _continueLabel[300342]
            _indexOfInterest[300337]
            _iterator[300338]
          }
          label _breakLabel[300343]
        }
      }
      (300395 'on block' 0 tmp[300390])
    }
    label _end__expand[539208]
    (539210 return _void[55])
  }
  function list[304193](?)._collapse[300408](arg _mt[304309]:_MT[238], ref arg this[304307]:list[304193](?), arg idx[300405]:int(64)[13]) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[745591] "expr temp" "maybe param" "maybe type" "temp"
    (745594 'move' call_tmp[745591](300414 call(405718 call (partial) _withinBounds _mt[243] this[304307]) idx[300405]))
    (300416 call _sanity call_tmp[745591])
    (491104 'end of statement')
    unknown call_tmp[745598] "expr temp" "maybe param" "maybe type" "temp"
    (745601 'move' call_tmp[745598](405725 call _size _mt[243] this[304307]))
    unknown call_tmp[745603] "expr temp" "maybe param" "maybe type" "temp"
    (745606 'move' call_tmp[745603](300422 call - call_tmp[745598] 1))
    unknown call_tmp[745608] "expr temp" "maybe param" "maybe type" "temp"
    (745611 'move' call_tmp[745608](300424 call == idx[300405] call_tmp[745603]))
    unknown call_tmp[745613] "expr temp" "maybe param" "maybe type" "temp"
    (745616 'move' call_tmp[745613](300446 call _cond_test call_tmp[745608]))
    if call_tmp[745613]
    {
      const tmp[300435] "const" "temp"
      unknown call_tmp[745618] "expr temp" "maybe param" "maybe type" "temp"
      (745621 'move' call_tmp[745618](300432 '_wide_get_locale' this[304307]))
      (300437 'move' tmp[300435](300433 'deref' call_tmp[745618]))
      {
        (300430 call(405732 call (partial) _maybeReleaseMem _mt[243] this[304307]) 1)
        (300440 'on block' 0 tmp[300435])
      }
      gotoReturn _end__collapse[539214] _end__collapse[539214]
    }
    const tmp[300535] "const" "temp"
    unknown call_tmp[745625] "expr temp" "maybe param" "maybe type" "temp"
    (745628 'move' call_tmp[745625](300532 '_wide_get_locale' this[304307]))
    (300537 'move' tmp[300535](300533 'deref' call_tmp[745625]))
    {
      {
        {
          unknown _indexOfInterest[300485] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[300486] "expr temp" "temp"
          unknown call_tmp[745632] "expr temp" "maybe param" "maybe type" "temp"
          (745635 'move' call_tmp[745632](405755 call _size _mt[243] this[304307]))
          unknown call_tmp[745637] "expr temp" "maybe param" "maybe type" "temp"
          (745640 'move' call_tmp[745637](300500 call - call_tmp[745632] 2))
          unknown call_tmp[745642] "expr temp" "maybe param" "maybe type" "temp"
          (745645 'move' call_tmp[745642](300503 call chpl_direct_range_iter idx[300405] call_tmp[745637] 1))
          (300495 'move' _iterator[300486](300493 call _getIterator call_tmp[745642]))
          Defer
          {
            {
              (300519 call _freeIterator _iterator[300486])
            }
          }
          { scopeless type
            (300508 'move' _indexOfInterest[300485](300505 call iteratorIndex _iterator[300486]))
          }
          ForLoop[300487]
          {
            unknown i[300512] "index var" "insert auto destroy"
            (491108 'end of statement')
            (300514 'move' i[300512] _indexOfInterest[300485])
            (491109 'end of statement' i[300512])
            {
              unknown src[300466] "dead at end of block" "ref var"
              unknown call_tmp[745649] "expr temp" "maybe param" "maybe type" "temp"
              (745652 'move' call_tmp[745649](300462 call + i[300512] 1))
              unknown call_tmp[745654] "expr temp" "maybe param" "maybe type" "temp"
              (745657 'move' call_tmp[745654](300465 call(405737 call (partial) _getRef _mt[243] this[304307]) call_tmp[745649]))
              (549889 'move' src[300466](549888 'addr of' call_tmp[745654]))
              (300469 'end of statement')
              unknown dst[300475] "dead at end of block" "ref var"
              unknown call_tmp[745661] "expr temp" "maybe param" "maybe type" "temp"
              (745664 'move' call_tmp[745661](300474 call(405742 call (partial) _getRef _mt[243] this[304307]) i[300512]))
              (549892 'move' dst[300475](549891 'addr of' call_tmp[745661]))
              (300478 'end of statement' i[300512] i[300512])
              (300483 call(405747 call (partial) _move _mt[243] this[304307]) src[300466] dst[300475])
              (491113 'end of statement' src[300466] dst[300475])
            }
            label _continueLabel[300490]
            _indexOfInterest[300485]
            _iterator[300486]
          }
          label _breakLabel[300491]
        }
        (300530 call(405759 call (partial) _maybeReleaseMem _mt[243] this[304307]) 1)
      }
      (300540 'on block' 0 tmp[300535])
    }
    label _end__collapse[539214]
    (539216 return _void[55])
  }
  function list[304193](?)._appendByRef[300553](arg _mt[304313]:_MT[238], ref arg this[304311]:list[304193](?), ref arg x[300550] :
  (405764 call eltType _mt[243] this[304311])) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    (300558 call(405768 call (partial) _maybeAcquireMem _mt[243] this[304311]) 1)
    (491118 'end of statement')
    unknown src[300562] "dead at end of block" "ref var"
    (549895 'move' src[300562](549894 'addr of' x[300550]))
    (300565 'end of statement')
    unknown dst[300570] "dead at end of block" "ref var"
    unknown call_tmp[745678] "expr temp" "maybe param" "maybe type" "temp"
    (745681 'move' call_tmp[745678](405778 call _size _mt[243] this[304311]))
    unknown call_tmp[745683] "expr temp" "maybe param" "maybe type" "temp"
    (745686 'move' call_tmp[745683](300569 call(405773 call (partial) _getRef _mt[243] this[304311]) call_tmp[745678]))
    (549898 'move' dst[300570](549897 'addr of' call_tmp[745683]))
    (300573 'end of statement')
    (300578 call(405782 call (partial) _move _mt[243] this[304311]) src[300562] dst[300570])
    (491119 'end of statement' src[300562] dst[300570])
    unknown call_tmp[745692] "expr temp" "maybe param" "maybe type" "temp"
    (745695 'move' call_tmp[745692](405789 call _size _mt[243] this[304311]))
    (300582 call += call_tmp[745692] 1)
    (539220 return _void[55])
  }
  function list[304193](?).append[300596](arg _mt[304317]:_MT[238], ref arg this[304315]:list[304193](?), in arg x[300593] :
  (300590 call eltType _mt[243] this[304315])) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (300606 call(405797 call (partial) _enter _mt[243] this[304315]))
    (491123 'end of statement')
    (300612 call(405803 call (partial) _appendByRef _mt[243] this[304315]) x[300593])
    (491124 'end of statement')
    (300616 call(405808 call (partial) _leave _mt[243] this[304315]))
    (539222 return _void[55])
  }
  {
    (300602 call <(300599 'lifetime_of' this[304315])(300601 'lifetime_of' x[300593]))
  }
  function list[304193](?).contains[300627](arg _mt[304321]:_MT[238], const arg this[304319]:list[304193](?), arg x[300624] :
  (405813 call eltType _mt[243] this[304319])) : _unknown[51] "method" "primary method"
  {
    unknown ret[539226] "RVV" "temp"
    unknown result[300631] "dead at end of block" "insert auto destroy"
    (549900 'init var' result[300631] 0)
    (300634 'end of statement')
    const tmp[300701] "const" "temp"
    unknown call_tmp[745707] "expr temp" "maybe param" "maybe type" "temp"
    (745710 'move' call_tmp[745707](300698 '_wide_get_locale' this[304319]))
    (300703 'move' tmp[300701](300699 'deref' call_tmp[745707]))
    {
      {
        (300639 call(405818 call (partial) _enter _mt[243] this[304319]))
        (491126 'end of statement')
        {
          unknown _indexOfInterest[300661] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[300662] "expr temp" "temp"
          (300671 'move' _iterator[300662](300669 call _getIterator this[304319]))
          Defer
          {
            {
              (300687 call _freeIterator _iterator[300662])
            }
          }
          { scopeless type
            (300676 'move' _indexOfInterest[300661](300673 call iteratorIndex _iterator[300662]))
          }
          ForLoop[300663]
          {
            unknown item[300680] "index var" "insert auto destroy"
            (491128 'end of statement')
            (300682 'move' item[300680] _indexOfInterest[300661])
            (491129 'end of statement' item[300680])
            unknown call_tmp[745714] "expr temp" "maybe param" "maybe type" "temp"
            (745717 'move' call_tmp[745714](300646 call == item[300680] x[300624]))
            unknown call_tmp[745719] "expr temp" "maybe param" "maybe type" "temp"
            (745722 'move' call_tmp[745719](300657 call _cond_test call_tmp[745714]))
            if call_tmp[745719]
            {
              (300650 call = result[300631] 1)
              (491131 'end of statement' result[300631])
              break _breakLabel[300667] _breakLabel[300667]
            }
            label _continueLabel[300666]
            _indexOfInterest[300661]
            _iterator[300662]
          }
          label _breakLabel[300667]
        }
        (300696 call(405826 call (partial) _leave _mt[243] this[304319]))
      }
      (300706 'on block' 0 tmp[300701])
    }
    (539232 'move' ret[539226](539231 'coerce' result[300631] bool[10]))
    gotoReturn _end_contains[539224] _end_contains[539224]
    (491134 'end of statement' result[300631])
    label _end_contains[539224]
    (539228 return ret[539226])
  }
  { scopeless type
    bool[10]
  }
  function list[304193](?).first[300717](arg _mt[304325]:_MT[238], ref arg this[304323]:list[304193](?)) ref : _unknown[51] "method" "primary method"
  {
    unknown ret[539238] "RVV" "temp"
    (300721 call(405831 call (partial) _enter _mt[243] this[304323]))
    (491136 'end of statement')
    unknown tmp[434859] "maybe param" "temp"
    (434870 'move' tmp[434859] 1)
    unknown call_tmp[745728] "expr temp" "maybe param" "maybe type" "temp"
    (745731 'move' call_tmp[745728](434872 call _cond_invalid tmp[434859]))
    if call_tmp[745728]
    {
      (434875 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[580981] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[580982] "maybe param" "temp"
    unknown call_tmp[745733] "expr temp" "maybe param" "maybe type" "temp"
    (745736 'move' call_tmp[745733](434860 call isTrue tmp[434859]))
    (580987 'move' tmp[580982](580985 call _cond_test call_tmp[745733]))
    if tmp[580982]
    {
      unknown tmp[580989] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[745740] "expr temp" "maybe param" "maybe type" "temp"
      (745743 'move' call_tmp[745740](405837 call _size _mt[243] this[304323]))
      unknown call_tmp[745745] "expr temp" "maybe param" "maybe type" "temp"
      (745748 'move' call_tmp[745745](300727 call == call_tmp[745740] 0))
      (580991 'move' tmp[580989](434863 call isTrue call_tmp[745745]))
      (580996 'move' tmp[580981](580993 '_paramFoldLogical' tmp[580982] tmp[580989]))
    }
    {
      (581001 'move' tmp[580981](580998 '_paramFoldLogical' tmp[580982] 0))
    }
    unknown call_tmp[745750] "expr temp" "maybe param" "maybe type" "temp"
    (745753 'move' call_tmp[745750](300757 call _cond_test tmp[580981]))
    if call_tmp[745750]
    {
      (300733 call(405841 call (partial) _leave _mt[243] this[304323]))
      (491138 'end of statement')
      (300755 call boundsCheckHalt "Called \"list.first\" on an empty list.")
    }
    unknown result[300765] "dead at end of block" "ref var"
    unknown call_tmp[745759] "expr temp" "maybe param" "maybe type" "temp"
    (745762 'move' call_tmp[745759](300764 call(405845 call (partial) _getRef _mt[243] this[304323]) 0))
    (549903 'move' result[300765](549902 'addr of' call_tmp[745759]))
    (300768 'end of statement')
    (300771 call(405849 call (partial) _leave _mt[243] this[304323]))
    (491140 'end of statement')
    (539243 'move' ret[539238](539242 'addr of' result[300765]))
    gotoReturn _end_first[539236] _end_first[539236]
    (491141 'end of statement' result[300765])
    label _end_first[539236]
    (539240 return ret[539238])
  }
  function list[304193](?).last[300780](arg _mt[304329]:_MT[238], ref arg this[304327]:list[304193](?)) ref : _unknown[51] "method" "primary method"
  {
    unknown ret[539249] "RVV" "temp"
    (300784 call(405854 call (partial) _enter _mt[243] this[304327]))
    (491143 'end of statement')
    unknown tmp[434880] "maybe param" "temp"
    (434891 'move' tmp[434880] 1)
    unknown call_tmp[745768] "expr temp" "maybe param" "maybe type" "temp"
    (745771 'move' call_tmp[745768](434893 call _cond_invalid tmp[434880]))
    if call_tmp[745768]
    {
      (434896 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[581008] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[581009] "maybe param" "temp"
    unknown call_tmp[745773] "expr temp" "maybe param" "maybe type" "temp"
    (745776 'move' call_tmp[745773](434881 call isTrue tmp[434880]))
    (581014 'move' tmp[581009](581012 call _cond_test call_tmp[745773]))
    if tmp[581009]
    {
      unknown tmp[581016] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[745780] "expr temp" "maybe param" "maybe type" "temp"
      (745783 'move' call_tmp[745780](405860 call _size _mt[243] this[304327]))
      unknown call_tmp[745785] "expr temp" "maybe param" "maybe type" "temp"
      (745788 'move' call_tmp[745785](300790 call == call_tmp[745780] 0))
      (581018 'move' tmp[581016](434884 call isTrue call_tmp[745785]))
      (581023 'move' tmp[581008](581020 '_paramFoldLogical' tmp[581009] tmp[581016]))
    }
    {
      (581028 'move' tmp[581008](581025 '_paramFoldLogical' tmp[581009] 0))
    }
    unknown call_tmp[745790] "expr temp" "maybe param" "maybe type" "temp"
    (745793 'move' call_tmp[745790](300820 call _cond_test tmp[581008]))
    if call_tmp[745790]
    {
      (300796 call(405864 call (partial) _leave _mt[243] this[304327]))
      (491145 'end of statement')
      (300818 call boundsCheckHalt "Called \"list.last\" on an empty list.")
    }
    unknown result[300831] "dead at end of block" "ref var"
    unknown call_tmp[745801] "expr temp" "maybe param" "maybe type" "temp"
    (745804 'move' call_tmp[745801](405873 call _size _mt[243] this[304327]))
    unknown call_tmp[745806] "expr temp" "maybe param" "maybe type" "temp"
    (745809 'move' call_tmp[745806](300827 call - call_tmp[745801] 1))
    unknown call_tmp[745811] "expr temp" "maybe param" "maybe type" "temp"
    (745814 'move' call_tmp[745811](300830 call(405868 call (partial) _getRef _mt[243] this[304327]) call_tmp[745806]))
    (549906 'move' result[300831](549905 'addr of' call_tmp[745811]))
    (300834 'end of statement')
    (300837 call(405877 call (partial) _leave _mt[243] this[304327]))
    (491147 'end of statement')
    (539254 'move' ret[539249](539253 'addr of' result[300831]))
    gotoReturn _end_last[539247] _end_last[539247]
    (491148 'end of statement' result[300831])
    label _end_last[539247]
    (539251 return ret[539249])
  }
  function list[304193](?)._extendGeneric[300848](arg _mt[304333]:_MT[238], ref arg this[304331]:list[304193](?), arg collection[300846]:_any[178](?)) : _unknown[51] "inline" "method" "primary method" "no doc" "no return value for void"
  {
    const tmp[300901] "const" "temp"
    unknown call_tmp[745818] "expr temp" "maybe param" "maybe type" "temp"
    (745821 'move' call_tmp[745818](300898 '_wide_get_locale' this[304331]))
    (300903 'move' tmp[300901](300899 'deref' call_tmp[745818]))
    {
      {
        {
          unknown _indexOfInterest[300864] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[300865] "expr temp" "temp"
          (300874 'move' _iterator[300865](300872 call _getIterator collection[300846]))
          Defer
          {
            {
              (300890 call _freeIterator _iterator[300865])
            }
          }
          { scopeless type
            (300879 'move' _indexOfInterest[300864](300876 call iteratorIndex _iterator[300865]))
          }
          ForLoop[300866]
          {
            unknown item[300883] "index var" "insert auto destroy"
            (491151 'end of statement')
            (300885 'move' item[300883] _indexOfInterest[300864])
            (491152 'end of statement' item[300883])
            {
              unknown cpy[300854] "dead at end of block" "no auto destroy"
              (549908 'init var' cpy[300854] item[300883])
              (300857 'end of statement' item[300883])
              (300862 call(405885 call (partial) _appendByRef _mt[243] this[304331]) cpy[300854])
              (491155 'end of statement' cpy[300854])
            }
            label _continueLabel[300869]
            _indexOfInterest[300864]
            _iterator[300865]
          }
          label _breakLabel[300870]
        }
      }
      (300906 'on block' 0 tmp[300901])
    }
    (539258 return _void[55])
  }
  function list[304193](?).extend[300923](arg _mt[304337]:_MT[238], ref arg this[304335]:list[304193](?), arg other[300920]:list[304193](?)) : _unknown[51] "compiler added where" "method" "primary method" "no return value for void"
  {
    const tmp[300949] "const" "temp"
    unknown call_tmp[745825] "expr temp" "maybe param" "maybe type" "temp"
    (745828 'move' call_tmp[745825](300946 '_wide_get_locale' this[304335]))
    (300951 'move' tmp[300949](300947 'deref' call_tmp[745825]))
    {
      {
        (300934 call(405899 call (partial) _enter _mt[243] this[304335]))
        (491157 'end of statement')
        (300940 call(405905 call (partial) _extendGeneric _mt[243] this[304335]) other[300920])
        (491158 'end of statement')
        (300944 call(405910 call (partial) _leave _mt[243] this[304335]))
      }
      (300954 'on block' 0 tmp[300949])
    }
    (539260 return _void[55])
  }
  where {
    unknown call_tmp[745838] "expr temp" "maybe param" "maybe type" "temp"
    (745841 'move' call_tmp[745838](467834 call eltType _mt[243] this[304335]))
    unknown call_tmp[745843] "expr temp" "maybe param" "maybe type" "temp"
    (745846 'move' call_tmp[745843](467830 'query' other[300920] 1))
    unknown call_tmp[745848] "expr temp" "maybe param" "maybe type" "temp"
    (745851 'move' call_tmp[745848](467837 call == call_tmp[745838] call_tmp[745843]))
    (467841 call & 1 call_tmp[745848])
  }
  {
    (300929 call <(300926 'lifetime_of' this[304335])(300928 'lifetime_of' other[300920]))
  }
  function list[304193](?).extend[300972](arg _mt[304341]:_MT[238], ref arg this[304339]:list[304193](?), arg other[300969]:_array[133588](?)) : _unknown[51] "compiler added where" "method" "primary method" "no return value for void"
  {
    const tmp[300998] "const" "temp"
    unknown call_tmp[745853] "expr temp" "maybe param" "maybe type" "temp"
    (745856 'move' call_tmp[745853](300995 '_wide_get_locale' this[304339]))
    (301000 'move' tmp[300998](300996 'deref' call_tmp[745853]))
    {
      {
        (300983 call(405922 call (partial) _enter _mt[243] this[304339]))
        (491160 'end of statement')
        (300989 call(405926 call (partial) _extendGeneric _mt[243] this[304339]) other[300969])
        (491161 'end of statement')
        (300993 call(405931 call (partial) _leave _mt[243] this[304339]))
      }
      (301003 'on block' 0 tmp[300998])
    }
    (539262 return _void[55])
  }
  where {
    unknown call_tmp[745866] "expr temp" "maybe param" "maybe type" "temp"
    (745869 'move' call_tmp[745866](405915 call eltType _mt[243] this[304339]))
    unknown call_tmp[745873] "expr temp" "maybe param" "maybe type" "temp"
    (745876 'move' call_tmp[745873](467853 call eltType _mt[243] other[300969]))
    unknown call_tmp[745878] "expr temp" "maybe param" "maybe type" "temp"
    (745881 'move' call_tmp[745878](467857 call == call_tmp[745866] call_tmp[745873]))
    (467851 call & 1 call_tmp[745878])
  }
  {
    (300978 call <(300975 'lifetime_of' this[304339])(300977 'lifetime_of' other[300969]))
  }
  function list[304193](?).extend[301023](arg _mt[304345]:_MT[238], ref arg this[304343]:list[304193](?), arg other[301020]:range[64316](?)) : _unknown[51] "compiler added where" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[745883] "expr temp" "maybe param" "maybe type" "temp"
    (745886 'move' call_tmp[745883](301034 call isBoundedRange other[301020]))
    unknown call_tmp[745888] "expr temp" "maybe param" "maybe type" "temp"
    (745891 'move' call_tmp[745888](301035 call ! call_tmp[745883]))
    unknown call_tmp[745893] "expr temp" "maybe param" "maybe type" "temp"
    (745896 'move' call_tmp[745893](301107 call _cond_test call_tmp[745888]))
    if call_tmp[745893]
    {
      unknown call_tmp[745898] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (745901 'move' call_tmp[745898](301038 'typeof' this[304343]))
      unknown call_tmp[745903] "maybe param" "maybe type" "temp"
      (745906 'move' call_tmp[745903](301040 call _cast string[26] call_tmp[745898]))
      unknown e[301042] "dead at end of block" "param"
      (549910 'init var' e[301042] call_tmp[745903])
      (301045 'end of statement')
      unknown call_tmp[745908] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (745911 'move' call_tmp[745908](301048 'typeof' other[301020]))
      unknown call_tmp[745913] "maybe param" "maybe type" "temp"
      (745916 'move' call_tmp[745913](301050 call _cast string[26] call_tmp[745908]))
      unknown f[301052] "dead at end of block" "param"
      (549912 'init var' f[301052] call_tmp[745913])
      (301055 'end of statement')
      unknown call_tmp[745918] "expr temp" "maybe param" "maybe type" "temp"
      (745921 'move' call_tmp[745918](301074 call + "Cannot extend " e[301042]))
      unknown call_tmp[745923] "expr temp" "maybe param" "maybe type" "temp"
      (745926 'move' call_tmp[745923](301093 call + call_tmp[745918] " with unbounded "))
      unknown call_tmp[745928] "maybe param" "maybe type" "temp"
      (745931 'move' call_tmp[745928](301096 call + call_tmp[745923] f[301052]))
      unknown msg[301098] "dead at end of block" "param"
      (549914 'init var' msg[301098] call_tmp[745928])
      (301101 'end of statement')
      (301105 call compilerError msg[301098])
    }
    const tmp[301130] "const" "temp"
    unknown call_tmp[745933] "expr temp" "maybe param" "maybe type" "temp"
    (745936 'move' call_tmp[745933](301127 '_wide_get_locale' this[304343]))
    (301132 'move' tmp[301130](301128 'deref' call_tmp[745933]))
    {
      {
        (301115 call(405950 call (partial) _enter _mt[243] this[304343]))
        (491164 'end of statement')
        (301121 call(405954 call (partial) _extendGeneric _mt[243] this[304343]) other[301020])
        (491165 'end of statement')
        (301125 call(405959 call (partial) _leave _mt[243] this[304343]))
      }
      (301135 'on block' 0 tmp[301130])
    }
    (539264 return _void[55])
  }
  where {
    unknown call_tmp[745946] "expr temp" "maybe param" "maybe type" "temp"
    (745949 'move' call_tmp[745946](467866 call eltType _mt[243] this[304343]))
    unknown call_tmp[745951] "expr temp" "maybe param" "maybe type" "temp"
    (745954 'move' call_tmp[745951](467862 'query' other[301020] 1))
    unknown call_tmp[745956] "expr temp" "maybe param" "maybe type" "temp"
    (745959 'move' call_tmp[745956](467869 call == call_tmp[745946] call_tmp[745951]))
    (467873 call & 1 call_tmp[745956])
  }
  {
    (301029 call <(301026 'lifetime_of' this[304343])(301028 'lifetime_of' other[301020]))
  }
  function list[304193](?).insert[301147](arg _mt[304349]:_MT[238], ref arg this[304347]:list[304193](?), arg idx[301144]:int(64)[13], in arg x[301150] :
  (405964 call eltType _mt[243] this[304347])) : _unknown[51] "method" "primary method"
  {
    unknown ret[539268] "RVV" "temp"
    unknown result[301161] "dead at end of block" "insert auto destroy"
    (549916 'init var' result[301161] 0)
    (301164 'end of statement')
    const tmp[301242] "const" "temp"
    unknown call_tmp[745963] "expr temp" "maybe param" "maybe type" "temp"
    (745966 'move' call_tmp[745963](301239 '_wide_get_locale' this[304347]))
    (301244 'move' tmp[301242](301240 'deref' call_tmp[745963]))
    {
      {
        (301169 call(405971 call (partial) _enter _mt[243] this[304347]))
        (491167 'end of statement')
        unknown call_tmp[745972] "expr temp" "maybe param" "maybe type" "temp"
        (745975 'move' call_tmp[745972](405977 call _size _mt[243] this[304347]))
        unknown call_tmp[745977] "expr temp" "maybe param" "maybe type" "temp"
        (745980 'move' call_tmp[745977](301174 call == idx[301144] call_tmp[745972]))
        unknown call_tmp[745982] "expr temp" "maybe param" "maybe type" "temp"
        (745985 'move' call_tmp[745982](301230 call _cond_test call_tmp[745977]))
        if call_tmp[745982]
        {
          (301179 call(405981 call (partial) _appendByRef _mt[243] this[304347]) x[301150])
          (491168 'end of statement')
          (301184 call = result[301161] 1)
          (491169 'end of statement' result[301161])
        }
        {
          unknown call_tmp[745991] "expr temp" "maybe param" "maybe type" "temp"
          (745994 'move' call_tmp[745991](301190 call(405987 call (partial) _withinBounds _mt[243] this[304347]) idx[301144]))
          unknown call_tmp[745996] "expr temp" "maybe param" "maybe type" "temp"
          (745999 'move' call_tmp[745996](301226 call _cond_test call_tmp[745991]))
          if call_tmp[745996]
          {
            (301194 call(405994 call (partial) _expand _mt[243] this[304347]) idx[301144])
            (491171 'end of statement')
            unknown src[301198] "dead at end of block" "ref var"
            (549919 'move' src[301198](549918 'addr of' x[301150]))
            (301201 'end of statement')
            unknown dst[301206] "dead at end of block" "ref var"
            unknown call_tmp[746005] "expr temp" "maybe param" "maybe type" "temp"
            (746008 'move' call_tmp[746005](301205 call(406000 call (partial) _getRef _mt[243] this[304347]) idx[301144]))
            (549922 'move' dst[301206](549921 'addr of' call_tmp[746005]))
            (301209 'end of statement')
            (301214 call(406005 call (partial) _move _mt[243] this[304347]) src[301198] dst[301206])
            (491172 'end of statement' src[301198] dst[301206])
            unknown call_tmp[746014] "expr temp" "maybe param" "maybe type" "temp"
            (746017 'move' call_tmp[746014](406012 call _size _mt[243] this[304347]))
            (301218 call += call_tmp[746014] 1)
            (491175 'end of statement')
            (301223 call = result[301161] 1)
            (491176 'end of statement' result[301161])
          }
        }
        (301237 call(406017 call (partial) _leave _mt[243] this[304347]))
      }
      (301247 'on block' 0 tmp[301242])
    }
    unknown call_tmp[746021] "expr temp" "maybe param" "maybe type" "temp"
    (746024 'move' call_tmp[746021](301251 call ! result[301161]))
    unknown call_tmp[746026] "expr temp" "maybe param" "maybe type" "temp"
    (746029 'move' call_tmp[746026](301258 call _cond_test call_tmp[746021]))
    if call_tmp[746026]
    {
      (301256 call(406024 call (partial) _destroy _mt[243] this[304347]) x[301150])
    }
    (539274 'move' ret[539268](539273 'coerce' result[301161] bool[10]))
    gotoReturn _end_insert[539266] _end_insert[539266]
    (491180 'end of statement' result[301161])
    label _end_insert[539266]
    (539270 return ret[539268])
  }
  {
    (301158 call <(301155 'lifetime_of' this[304347])(301157 'lifetime_of' x[301150]))
  }
  { scopeless type
    bool[10]
  }
  function list[304193](?)._insertGenericKnownSize[301276](arg _mt[304353]:_MT[238], ref arg this[304351]:list[304193](?), arg idx[301273]:int(64)[13], arg items[301278]:_any[178](?), arg size[301281]:int(64)[13]) : _unknown[51] "method" "primary method" "no doc"
  {
    unknown ret[539280] "RVV" "temp"
    unknown result[301286] "dead at end of block" "insert auto destroy"
    (549924 'init var' result[301286] 0)
    (301289 'end of statement')
    unknown call_tmp[746033] "expr temp" "maybe param" "maybe type" "temp"
    (746036 'move' call_tmp[746033](301294 call >= size[301281] 0))
    (301297 call _sanity call_tmp[746033])
    (491182 'end of statement')
    unknown call_tmp[746038] "expr temp" "maybe param" "maybe type" "temp"
    (746041 'move' call_tmp[746038](301301 call == size[301281] 0))
    unknown call_tmp[746043] "expr temp" "maybe param" "maybe type" "temp"
    (746046 'move' call_tmp[746043](301306 call _cond_test call_tmp[746038]))
    if call_tmp[746043]
    {
      (539286 'move' ret[539280](539285 'coerce' 1 bool[10]))
      gotoReturn _end__insertGenericKnownSize[539278] _end__insertGenericKnownSize[539278]
    }
    const tmp[301431] "const" "temp"
    unknown call_tmp[746048] "expr temp" "maybe param" "maybe type" "temp"
    (746051 'move' call_tmp[746048](301428 '_wide_get_locale' this[304351]))
    (301433 'move' tmp[301431](301429 'deref' call_tmp[746048]))
    {
      {
        unknown call_tmp[746055] "expr temp" "maybe param" "maybe type" "temp"
        (746058 'move' call_tmp[746055](406035 call _size _mt[243] this[304351]))
        unknown call_tmp[746060] "expr temp" "maybe param" "maybe type" "temp"
        (746063 'move' call_tmp[746060](301314 call == idx[301273] call_tmp[746055]))
        unknown call_tmp[746065] "expr temp" "maybe param" "maybe type" "temp"
        (746068 'move' call_tmp[746065](301422 call _cond_test call_tmp[746060]))
        if call_tmp[746065]
        {
          (301319 call(406039 call (partial) _extendGeneric _mt[243] this[304351]) items[301278])
          (491184 'end of statement')
          (301324 call = result[301286] 1)
          (491185 'end of statement' result[301286])
        }
        {
          unknown call_tmp[746074] "expr temp" "maybe param" "maybe type" "temp"
          (746077 'move' call_tmp[746074](301330 call(406045 call (partial) _withinBounds _mt[243] this[304351]) idx[301273]))
          unknown call_tmp[746079] "expr temp" "maybe param" "maybe type" "temp"
          (746082 'move' call_tmp[746079](301418 call _cond_test call_tmp[746074]))
          if call_tmp[746079]
          {
            (301335 call(406050 call (partial) _expand _mt[243] this[304351]) idx[301273] size[301281])
            (491187 'end of statement')
            unknown i[301339] "dead at end of block" "insert auto destroy"
            (549926 'init var' i[301339] idx[301273])
            (301342 'end of statement')
            {
              unknown _indexOfInterest[301380] "an _indexOfInterest or chpl__followIdx variable" "temp"
              unknown _iterator[301381] "expr temp" "temp"
              (301390 'move' _iterator[301381](301388 call _getIterator items[301278]))
              Defer
              {
                {
                  (301406 call _freeIterator _iterator[301381])
                }
              }
              { scopeless type
                (301395 'move' _indexOfInterest[301380](301392 call iteratorIndex _iterator[301381]))
              }
              ForLoop[301382]
              {
                unknown x[301399] "index var" "insert auto destroy"
                (491189 'end of statement')
                (301401 'move' x[301399] _indexOfInterest[301380])
                (491190 'end of statement' x[301399])
                {
                  unknown cpy[301346] "dead at end of block" "no auto destroy"
                  (549928 'init var' cpy[301346] x[301399])
                  (301349 'end of statement')
                  unknown src[301352] "dead at end of block" "ref var"
                  (549931 'move' src[301352](549930 'addr of' cpy[301346]))
                  (301355 'end of statement')
                  unknown dst[301360] "dead at end of block" "ref var"
                  unknown call_tmp[746088] "expr temp" "maybe param" "maybe type" "temp"
                  (746091 'move' call_tmp[746088](301359 call(406060 call (partial) _getRef _mt[243] this[304351]) i[301339]))
                  (549934 'move' dst[301360](549933 'addr of' call_tmp[746088]))
                  (301363 'end of statement' x[301399] cpy[301346] i[301339])
                  (301368 call(406065 call (partial) _move _mt[243] this[304351]) src[301352] dst[301360])
                  (491195 'end of statement' src[301352] dst[301360])
                  unknown call_tmp[746097] "expr temp" "maybe param" "maybe type" "temp"
                  (746100 'move' call_tmp[746097](406072 call _size _mt[243] this[304351]))
                  (301372 call += call_tmp[746097] 1)
                  (491198 'end of statement')
                  (301377 call += i[301339] 1)
                  (491199 'end of statement' i[301339])
                }
                label _continueLabel[301385]
                _indexOfInterest[301380]
                _iterator[301381]
              }
              label _breakLabel[301386]
            }
            (301415 call = result[301286] 1)
            (491201 'end of statement' result[301286])
          }
        }
      }
      (301436 'on block' 0 tmp[301431])
    }
    (539292 'move' ret[539280](539291 'coerce' result[301286] bool[10]))
    gotoReturn _end__insertGenericKnownSize[539278] _end__insertGenericKnownSize[539278]
    (491203 'end of statement' result[301286])
    label _end__insertGenericKnownSize[539278]
    (539282 return ret[539280])
  }
  { scopeless type
    bool[10]
  }
  function list[304193](?).insert[301451](arg _mt[304357]:_MT[238], ref arg this[304355]:list[304193](?), arg idx[301448]:int(64)[13], arg arr[301459]:_array[133588](?)) : _unknown[51] "compiler added where" "method" "primary method"
  {
    unknown ret[539298] "RVV" "temp"
    unknown result[301470] "dead at end of block" "insert auto destroy"
    (549936 'init var' result[301470] 0)
    (301473 'end of statement')
    const tmp[301501] "const" "temp"
    unknown call_tmp[746102] "expr temp" "maybe param" "maybe type" "temp"
    (746105 'move' call_tmp[746102](301498 '_wide_get_locale' this[304355]))
    (301503 'move' tmp[301501](301499 'deref' call_tmp[746102]))
    {
      {
        (301478 call(406087 call (partial) _enter _mt[243] this[304355]))
        (491205 'end of statement')
        unknown call_tmp[746113] "expr temp" "maybe param" "maybe type" "temp"
        (746116 'move' call_tmp[746113](301487 call size _mt[243] arr[301459]))
        unknown call_tmp[746118] "expr temp" "maybe param" "maybe type" "temp"
        (746121 'move' call_tmp[746118](301490 call(406094 call (partial) _insertGenericKnownSize _mt[243] this[304355]) idx[301448] arr[301459] call_tmp[746113]))
        (301491 call = result[301470] call_tmp[746118])
        (491206 'end of statement' result[301470])
        (301496 call(406100 call (partial) _leave _mt[243] this[304355]))
      }
      (301506 'on block' 0 tmp[301501])
    }
    (539304 'move' ret[539298](539303 'coerce' result[301470] bool[10]))
    gotoReturn _end_insert[539296] _end_insert[539296]
    (491209 'end of statement' result[301470])
    label _end_insert[539296]
    (539300 return ret[539298])
  }
  where {
    unknown call_tmp[746127] "expr temp" "maybe param" "maybe type" "temp"
    (746130 'move' call_tmp[746127](406080 call eltType _mt[243] this[304355]))
    unknown call_tmp[746134] "expr temp" "maybe param" "maybe type" "temp"
    (746137 'move' call_tmp[746134](467888 call eltType _mt[243] arr[301459]))
    unknown call_tmp[746139] "expr temp" "maybe param" "maybe type" "temp"
    (746142 'move' call_tmp[746139](467892 call == call_tmp[746127] call_tmp[746134]))
    (467886 call & 1 call_tmp[746139])
  }
  {
    (301467 call <(301464 'lifetime_of' this[304355])(301466 'lifetime_of' arr[301459]))
  }
  { scopeless type
    bool[10]
  }
  function list[304193](?).insert[301522](arg _mt[304361]:_MT[238], ref arg this[304359]:list[304193](?), arg idx[301519]:int(64)[13], arg lst[301528]:list[304193](?)) : _unknown[51] "compiler added where" "method" "primary method"
  {
    unknown ret[539310] "RVV" "temp"
    unknown result[301539] "dead at end of block" "insert auto destroy"
    (549938 'init var' result[301539] 0)
    (301542 'end of statement')
    unknown call_tmp[746146] "maybe param" "maybe type" "temp"
    (746149 'move' call_tmp[746146](301545 call size _mt[243] lst[301528]))
    const size[301548] "dead at end of block" "const" "insert auto destroy"
    (549940 'init var' size[301548] call_tmp[746146])
    (301551 'end of statement')
    const tmp[301575] "const" "temp"
    unknown call_tmp[746151] "expr temp" "maybe param" "maybe type" "temp"
    (746154 'move' call_tmp[746151](301572 '_wide_get_locale' this[304359]))
    (301577 'move' tmp[301575](301573 'deref' call_tmp[746151]))
    {
      {
        (301555 call(406114 call (partial) _enter _mt[243] this[304359]))
        (491211 'end of statement')
        unknown call_tmp[746160] "expr temp" "maybe param" "maybe type" "temp"
        (746163 'move' call_tmp[746160](301564 call(406119 call (partial) _insertGenericKnownSize _mt[243] this[304359]) idx[301519] lst[301528] size[301548]))
        (301565 call = result[301539] call_tmp[746160])
        (491212 'end of statement' result[301539] size[301548])
        (301570 call(406126 call (partial) _leave _mt[243] this[304359]))
      }
      (301580 'on block' 0 tmp[301575])
    }
    (539316 'move' ret[539310](539315 'coerce' result[301539] bool[10]))
    gotoReturn _end_insert[539308] _end_insert[539308]
    (491216 'end of statement' result[301539])
    label _end_insert[539308]
    (539312 return ret[539310])
  }
  where {
    unknown call_tmp[746169] "expr temp" "maybe param" "maybe type" "temp"
    (746172 'move' call_tmp[746169](467901 call eltType _mt[243] this[304359]))
    unknown call_tmp[746174] "expr temp" "maybe param" "maybe type" "temp"
    (746177 'move' call_tmp[746174](467897 'query' lst[301528] 1))
    unknown call_tmp[746179] "expr temp" "maybe param" "maybe type" "temp"
    (746182 'move' call_tmp[746179](467904 call == call_tmp[746169] call_tmp[746174]))
    (467908 call & 1 call_tmp[746179])
  }
  {
    (301536 call <(301533 'lifetime_of' this[304359])(301535 'lifetime_of' lst[301528]))
  }
  { scopeless type
    bool[10]
  }
  function list[304193](?).remove[301596](arg _mt[304365]:_MT[238], ref arg this[304363]:list[304193](?), arg x[301593] :
  (406132 call eltType _mt[243] this[304363]), arg count[301600]:int(64)[13] =
  1) : _unknown[51] "method" "primary method"
  {
    unknown ret[539322] "RVV" "temp"
    unknown result[301606] "dead at end of block" "insert auto destroy"
    (549942 'init var' result[301606] 0)
    (301609 'end of statement')
    const tmp[301846] "const" "temp"
    unknown call_tmp[746186] "expr temp" "maybe param" "maybe type" "temp"
    (746189 'move' call_tmp[746186](301843 '_wide_get_locale' this[304363]))
    (301848 'move' tmp[301846](301844 'deref' call_tmp[746186]))
    {
      {
        unknown src_i[301612] "dead at end of block" "insert auto destroy"
        (549944 'default init var' src_i[301612] int(64)[13])
        unknown dst_i[301616] "dead at end of block" "insert auto destroy"
        unknown call_tmp[746191] "expr temp" "maybe param" "maybe type" "temp" "type variable"
        (746194 'move' call_tmp[746191](301620 'typeof' src_i[301612]))
        (549946 'default init var' dst_i[301616] call_tmp[746191])
        (301621 'end of statement')
        unknown removed[301624] "dead at end of block" "insert auto destroy"
        (549948 'init var' removed[301624] 0)
        (301627 'end of statement' src_i[301612])
        (301630 call = src_i[301612] 0)
        (491219 'end of statement' src_i[301612])
        (301635 call(406139 call (partial) _enter _mt[243] this[304363]))
        (491221 'end of statement')
        {
          unknown tmp[301677] "temp"
          unknown call_tmp[746200] "expr temp" "maybe param" "maybe type" "temp"
          (746203 'move' call_tmp[746200](406165 call _size _mt[243] this[304363]))
          unknown call_tmp[746205] "expr temp" "maybe param" "maybe type" "temp"
          (746208 'move' call_tmp[746205](301698 call < dst_i[301616] call_tmp[746200]))
          (301701 'move' tmp[301677](301696 call _cond_test call_tmp[746205]))
          WhileDo[301682]
          {
            {
              unknown dst[301645] "dead at end of block" "ref var"
              unknown call_tmp[746212] "expr temp" "maybe param" "maybe type" "temp"
              (746215 'move' call_tmp[746212](301644 call(406143 call (partial) _getRef _mt[243] this[304363]) dst_i[301616]))
              (549951 'move' dst[301645](549950 'addr of' call_tmp[746212]))
              (301648 'end of statement' dst_i[301616])
              unknown call_tmp[746217] "expr temp" "maybe param" "maybe type" "temp"
              (746220 'move' call_tmp[746217](301652 call == dst[301645] x[301593]))
              unknown call_tmp[746222] "expr temp" "maybe param" "maybe type" "temp"
              (746225 'move' call_tmp[746222](301668 call _cond_test call_tmp[746217]))
              if call_tmp[746222]
              {
                (301657 call(406150 call (partial) _destroy _mt[243] this[304363]) dst[301645])
                (491223 'end of statement' dst[301645])
                (301662 call += removed[301624] 1)
                (491225 'end of statement' removed[301624])
                break _breakLabel[301681] _breakLabel[301681]
              }
              (301674 call += dst_i[301616] 1)
              (491227 'end of statement' dst_i[301616])
            }
            label _continueLabel[301680]
            unknown call_tmp[746231] "expr temp" "maybe param" "maybe type" "temp"
            (746234 'move' call_tmp[746231](406159 call _size _mt[243] this[304363]))
            unknown call_tmp[746236] "expr temp" "maybe param" "maybe type" "temp"
            (746239 'move' call_tmp[746236](301688 call < dst_i[301616] call_tmp[746231]))
            (301691 'move' tmp[301677](301686 call _cond_test call_tmp[746236]))
            tmp[301677]
          }
          label _breakLabel[301681]
        }
        unknown call_tmp[746241] "expr temp" "maybe param" "maybe type" "temp"
        (746244 'move' call_tmp[746241](301707 call + dst_i[301616] 1))
        (301709 call = src_i[301612] call_tmp[746241])
        (491229 'end of statement' src_i[301612] dst_i[301616])
        {
          unknown tmp[301788] "temp"
          unknown call_tmp[746248] "expr temp" "maybe param" "maybe type" "temp"
          (746251 'move' call_tmp[746248](406209 call _size _mt[243] this[304363]))
          unknown call_tmp[746253] "expr temp" "maybe param" "maybe type" "temp"
          (746256 'move' call_tmp[746253](301809 call < src_i[301612] call_tmp[746248]))
          (301812 'move' tmp[301788](301807 call _cond_test call_tmp[746253]))
          WhileDo[301793]
          {
            {
              unknown src[301720] "dead at end of block" "ref var"
              unknown call_tmp[746260] "expr temp" "maybe param" "maybe type" "temp"
              (746263 'move' call_tmp[746260](301719 call(406171 call (partial) _getRef _mt[243] this[304363]) src_i[301612]))
              (549954 'move' src[301720](549953 'addr of' call_tmp[746260]))
              (301723 'end of statement')
              unknown tmp[434901] "maybe param" "temp"
              unknown tmp[434922] "maybe param" "temp"
              (434933 'move' tmp[434922](301727 call == count[301600] 0))
              unknown call_tmp[746265] "expr temp" "maybe param" "maybe type" "temp"
              (746268 'move' call_tmp[746265](434935 call _cond_invalid tmp[434922]))
              if call_tmp[746265]
              {
                (434938 call compilerError "cannot promote short-circuiting || operator")
              }
              unknown tmp[581035] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
              unknown tmp[581036] "maybe param" "temp"
              unknown call_tmp[746270] "expr temp" "maybe param" "maybe type" "temp"
              (746273 'move' call_tmp[746270](434923 call isTrue tmp[434922]))
              (581041 'move' tmp[581036](581039 call _cond_test call_tmp[746270]))
              if tmp[581036]
              {
                (581046 'move' tmp[581035](581043 '_paramFoldLogical' tmp[581036] 1))
              }
              {
                unknown tmp[581048] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                unknown call_tmp[746275] "expr temp" "maybe param" "maybe type" "temp"
                (746278 'move' call_tmp[746275](301731 call < removed[301624] count[301600]))
                (581050 'move' tmp[581048](434927 call isTrue call_tmp[746275]))
                (581055 'move' tmp[581035](581052 '_paramFoldLogical' tmp[581036] tmp[581048]))
              }
              (434912 'move' tmp[434901] tmp[581035])
              unknown call_tmp[746280] "expr temp" "maybe param" "maybe type" "temp"
              (746283 'move' call_tmp[746280](434914 call _cond_invalid tmp[434901]))
              if call_tmp[746280]
              {
                (434917 call compilerError "cannot promote short-circuiting && operator")
              }
              unknown tmp[581062] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
              unknown tmp[581063] "maybe param" "temp"
              unknown call_tmp[746285] "expr temp" "maybe param" "maybe type" "temp"
              (746288 'move' call_tmp[746285](434902 call isTrue tmp[434901]))
              (581068 'move' tmp[581063](581066 call _cond_test call_tmp[746285]))
              if tmp[581063]
              {
                unknown tmp[581070] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                unknown call_tmp[746290] "expr temp" "maybe param" "maybe type" "temp"
                (746293 'move' call_tmp[746290](301737 call == src[301720] x[301593]))
                (581072 'move' tmp[581070](434905 call isTrue call_tmp[746290]))
                (581077 'move' tmp[581062](581074 '_paramFoldLogical' tmp[581063] tmp[581070]))
              }
              {
                (581082 'move' tmp[581062](581079 '_paramFoldLogical' tmp[581063] 0))
              }
              unknown call_tmp[746295] "expr temp" "maybe param" "maybe type" "temp"
              (746298 'move' call_tmp[746295](301760 call _cond_test tmp[581062]))
              if call_tmp[746295]
              {
                (301744 call(406181 call (partial) _destroy _mt[243] this[304363]) src[301720])
                (491235 'end of statement' src[301720])
                (301749 call += src_i[301612] 1)
                (491237 'end of statement' src_i[301612])
                (301754 call += removed[301624] 1)
                (491239 'end of statement' removed[301624])
                continue _continueLabel[301791] _continueLabel[301791]
              }
              unknown dst[301768] "dead at end of block" "ref var"
              unknown call_tmp[746304] "expr temp" "maybe param" "maybe type" "temp"
              (746307 'move' call_tmp[746304](301767 call(406188 call (partial) _getRef _mt[243] this[304363]) dst_i[301616]))
              (549957 'move' dst[301768](549956 'addr of' call_tmp[746304]))
              (301771 'end of statement' src_i[301612] dst_i[301616])
              (301776 call(406193 call (partial) _move _mt[243] this[304363]) src[301720] dst[301768])
              (491242 'end of statement' src[301720] dst[301768])
              (301780 call += src_i[301612] 1)
              (491245 'end of statement' src_i[301612])
              (301785 call += dst_i[301616] 1)
              (491247 'end of statement' dst_i[301616])
            }
            label _continueLabel[301791]
            unknown call_tmp[746313] "expr temp" "maybe param" "maybe type" "temp"
            (746316 'move' call_tmp[746313](406203 call _size _mt[243] this[304363]))
            unknown call_tmp[746318] "expr temp" "maybe param" "maybe type" "temp"
            (746321 'move' call_tmp[746318](301799 call < src_i[301612] call_tmp[746313]))
            (301802 'move' tmp[301788](301797 call _cond_test call_tmp[746318]))
            tmp[301788]
          }
          label _breakLabel[301792]
        }
        unknown call_tmp[746323] "expr temp" "maybe param" "maybe type" "temp"
        (746326 'move' call_tmp[746323](301830 call _cond_test removed[301624]))
        if call_tmp[746323]
        {
          (301819 call(406214 call (partial) _maybeReleaseMem _mt[243] this[304363]) removed[301624])
          (491249 'end of statement' removed[301624])
          unknown call_tmp[746332] "expr temp" "maybe param" "maybe type" "temp"
          (746335 'move' call_tmp[746332](406220 call _size _mt[243] this[304363]))
          unknown call_tmp[746339] "expr temp" "maybe param" "maybe type" "temp"
          (746342 'move' call_tmp[746339](406225 call _size _mt[243] this[304363]))
          unknown call_tmp[746344] "expr temp" "maybe param" "maybe type" "temp"
          (746347 'move' call_tmp[746344](301825 call - call_tmp[746339] removed[301624]))
          (301827 call = call_tmp[746332] call_tmp[746344])
          (491251 'end of statement' removed[301624])
        }
        (301836 call(406230 call (partial) _leave _mt[243] this[304363]))
        (491253 'end of statement')
        (301840 call = result[301606] removed[301624])
        (491254 'end of statement' result[301606] removed[301624])
      }
      (301851 'on block' 0 tmp[301846])
    }
    (539328 'move' ret[539322](539327 'coerce' result[301606] int(64)[13]))
    gotoReturn _end_remove[539320] _end_remove[539320]
    (491257 'end of statement' result[301606])
    label _end_remove[539320]
    (539324 return ret[539322])
  }
  { scopeless type
    int(64)[13]
  }
  function list[304193](?)._popAtIndex[301866](arg _mt[304369]:_MT[238], ref arg this[304367]:list[304193](?), arg idx[301863]:int(64)[13], arg unlockBeforeHalt[301869] :
  1 =
  1) : _unknown[51] "method" "primary method" "no doc"
  {
    unknown ret[539334] "RVV" "temp"
    unknown tmp[434943] "maybe param" "temp"
    (434954 'move' tmp[434943] 1)
    unknown call_tmp[746351] "expr temp" "maybe param" "maybe type" "temp"
    (746354 'move' call_tmp[746351](434956 call _cond_invalid tmp[434943]))
    if call_tmp[746351]
    {
      (434959 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[581089] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[581090] "maybe param" "temp"
    unknown call_tmp[746356] "expr temp" "maybe param" "maybe type" "temp"
    (746359 'move' call_tmp[746356](434944 call isTrue tmp[434943]))
    (581095 'move' tmp[581090](581093 call _cond_test call_tmp[746356]))
    if tmp[581090]
    {
      unknown tmp[581097] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[746363] "expr temp" "maybe param" "maybe type" "temp"
      (746366 'move' call_tmp[746363](406244 call _size _mt[243] this[304367]))
      unknown call_tmp[746368] "expr temp" "maybe param" "maybe type" "temp"
      (746371 'move' call_tmp[746368](301876 call <= call_tmp[746363] 0))
      (581099 'move' tmp[581097](434947 call isTrue call_tmp[746368]))
      (581104 'move' tmp[581089](581101 '_paramFoldLogical' tmp[581090] tmp[581097]))
    }
    {
      (581109 'move' tmp[581089](581106 '_paramFoldLogical' tmp[581090] 0))
    }
    unknown call_tmp[746373] "expr temp" "maybe param" "maybe type" "temp"
    (746376 'move' call_tmp[746373](301912 call _cond_test tmp[581089]))
    if call_tmp[746373]
    {
      unknown call_tmp[746378] "expr temp" "maybe param" "maybe type" "temp"
      (746381 'move' call_tmp[746378](301885 call _cond_test unlockBeforeHalt[301869]))
      if call_tmp[746378]
      {
        (301883 call(406249 call (partial) _leave _mt[243] this[304367]))
      }
      (301910 call boundsCheckHalt "Called \"list.pop\" on an empty list.")
    }
    unknown tmp[434964] "maybe param" "temp"
    (434975 'move' tmp[434964] 1)
    unknown call_tmp[746385] "expr temp" "maybe param" "maybe type" "temp"
    (746388 'move' call_tmp[746385](434977 call _cond_invalid tmp[434964]))
    if call_tmp[746385]
    {
      (434980 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[581116] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[581117] "maybe param" "temp"
    unknown call_tmp[746390] "expr temp" "maybe param" "maybe type" "temp"
    (746393 'move' call_tmp[746390](434965 call isTrue tmp[434964]))
    (581122 'move' tmp[581117](581120 call _cond_test call_tmp[746390]))
    if tmp[581117]
    {
      unknown tmp[581124] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[746397] "expr temp" "maybe param" "maybe type" "temp"
      (746400 'move' call_tmp[746397](301921 call(406254 call (partial) _withinBounds _mt[243] this[304367]) idx[301863]))
      unknown call_tmp[746402] "expr temp" "maybe param" "maybe type" "temp"
      (746405 'move' call_tmp[746402](301922 call ! call_tmp[746397]))
      (581126 'move' tmp[581124](434968 call isTrue call_tmp[746402]))
      (581131 'move' tmp[581116](581128 '_paramFoldLogical' tmp[581117] tmp[581124]))
    }
    {
      (581136 'move' tmp[581116](581133 '_paramFoldLogical' tmp[581117] 0))
    }
    unknown call_tmp[746407] "expr temp" "maybe param" "maybe type" "temp"
    (746410 'move' call_tmp[746407](301969 call _cond_test tmp[581116]))
    if call_tmp[746407]
    {
      unknown call_tmp[746412] "expr temp" "maybe param" "maybe type" "temp"
      (746415 'move' call_tmp[746412](301931 call _cond_test unlockBeforeHalt[301869]))
      if call_tmp[746412]
      {
        (301929 call(406260 call (partial) _leave _mt[243] this[304367]))
      }
      unknown call_tmp[746419] "expr temp" "maybe param" "maybe type" "temp"
      (746422 'move' call_tmp[746419](301956 call _cast string[26] idx[301863]))
      unknown call_tmp[746424] "maybe param" "maybe type" "temp"
      (746427 'move' call_tmp[746424](301958 call + "Index for \"list.pop\" out of bounds: " call_tmp[746419]))
      const msg[301960] "dead at end of block" "const" "insert auto destroy"
      (549959 'init var' msg[301960] call_tmp[746424])
      (301963 'end of statement')
      (301967 call boundsCheckHalt msg[301960])
      (491264 'end of statement' msg[301960])
    }
    unknown item[301977] "dead at end of block" "ref var"
    unknown call_tmp[746431] "expr temp" "maybe param" "maybe type" "temp"
    (746434 'move' call_tmp[746431](301976 call(406266 call (partial) _getRef _mt[243] this[304367]) idx[301863]))
    (549962 'move' item[301977](549961 'addr of' call_tmp[746431]))
    (301980 'end of statement')
    unknown result[301982] "dead at end of block" "insert auto destroy" "no init"
    unknown call_tmp[746438] "expr temp" "maybe param" "maybe type" "temp"
    (746441 'move' call_tmp[746438](406272 call eltType _mt[243] this[304367]))
    (549964 'default init var' result[301982] call_tmp[746438])
    (301985 'end of statement')
    (301990 call(406276 call (partial) _move _mt[243] this[304367]) item[301977] result[301982])
    (491266 'end of statement' item[301977] result[301982])
    (301995 call(406284 call (partial) _collapse _mt[243] this[304367]) idx[301863])
    (491269 'end of statement')
    unknown call_tmp[746449] "expr temp" "maybe param" "maybe type" "temp"
    (746452 'move' call_tmp[746449](406290 call _size _mt[243] this[304367]))
    (301999 call -= call_tmp[746449] 1)
    (491270 'end of statement')
    unknown call_tmp[746456] "expr temp" "maybe param" "maybe type" "temp"
    (746459 'move' call_tmp[746456](539339 call eltType _mt[243] this[304367]))
    (539343 'move' ret[539334](539342 'coerce' result[301982] call_tmp[746456]))
    gotoReturn _end__popAtIndex[539332] _end__popAtIndex[539332]
    (491271 'end of statement' result[301982])
    label _end__popAtIndex[539332]
    (539336 return ret[539334])
  }
  { scopeless type
    (406238 call eltType _mt[243] this[304367])
  }
  function list[304193](?).pop[302010](arg _mt[304373]:_MT[238], ref arg this[304371]:list[304193](?)) : _unknown[51] "method" "primary method"
  {
    unknown ret[539349] "RVV" "temp"
    (302015 call(406300 call (partial) _enter _mt[243] this[304371]))
    (491273 'end of statement')
    unknown call_tmp[746469] "expr temp" "maybe param" "maybe type" "temp"
    (746472 'move' call_tmp[746469](406311 call _size _mt[243] this[304371]))
    unknown call_tmp[746474] "expr temp" "maybe param" "maybe type" "temp"
    (746477 'move' call_tmp[746474](302021 call - call_tmp[746469] 1))
    unknown call_tmp[746479] "maybe param" "maybe type" "temp"
    (746482 'move' call_tmp[746479](302024 call(406306 call (partial) _popAtIndex _mt[243] this[304371]) call_tmp[746474]))
    unknown result[302025] "dead at end of block" "insert auto destroy"
    (549966 'init var' result[302025] call_tmp[746479])
    (302028 'end of statement')
    (302031 call(406315 call (partial) _leave _mt[243] this[304371]))
    (491274 'end of statement')
    unknown call_tmp[746488] "expr temp" "maybe param" "maybe type" "temp"
    (746491 'move' call_tmp[746488](539354 call eltType _mt[243] this[304371]))
    (539358 'move' ret[539349](539357 'coerce' result[302025] call_tmp[746488]))
    gotoReturn _end_pop[539347] _end_pop[539347]
    (491275 'end of statement' result[302025])
    label _end_pop[539347]
    (539351 return ret[539349])
  }
  { scopeless type
    (406296 call eltType _mt[243] this[304371])
  }
  function list[304193](?).pop[302045](arg _mt[304377]:_MT[238], ref arg this[304375]:list[304193](?), arg idx[302042]:int(64)[13]) : _unknown[51] "method" "primary method"
  {
    unknown ret[539364] "RVV" "temp"
    (302050 call(406325 call (partial) _enter _mt[243] this[304375]))
    (491277 'end of statement')
    unknown call_tmp[746499] "maybe param" "maybe type" "temp"
    (746502 'move' call_tmp[746499](302056 call(406329 call (partial) _popAtIndex _mt[243] this[304375]) idx[302042]))
    unknown result[302057] "dead at end of block" "insert auto destroy"
    (549968 'init var' result[302057] call_tmp[746499])
    (302060 'end of statement')
    (302063 call(406334 call (partial) _leave _mt[243] this[304375]))
    (491278 'end of statement')
    unknown call_tmp[746508] "expr temp" "maybe param" "maybe type" "temp"
    (746511 'move' call_tmp[746508](539369 call eltType _mt[243] this[304375]))
    (539373 'move' ret[539364](539372 'coerce' result[302057] call_tmp[746508]))
    gotoReturn _end_pop[539362] _end_pop[539362]
    (491279 'end of statement' result[302057])
    label _end_pop[539362]
    (539366 return ret[539364])
  }
  { scopeless type
    (406321 call eltType _mt[243] this[304375])
  }
  function list[304193](?)._fireAllDestructors[302073](arg _mt[304381]:_MT[238], arg this[304379]:list[304193](?)) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    const tmp[302146] "const" "temp"
    unknown call_tmp[746515] "expr temp" "maybe param" "maybe type" "temp"
    (746518 'move' call_tmp[746515](302143 '_wide_get_locale' this[304379]))
    (302148 'move' tmp[302146](302144 'deref' call_tmp[746515]))
    {
      {
        {
          unknown _indexOfInterest[302097] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[302098] "expr temp" "temp"
          unknown call_tmp[746522] "expr temp" "maybe param" "maybe type" "temp"
          (746525 'move' call_tmp[746522](406351 call _size _mt[243] this[304379]))
          unknown call_tmp[746527] "expr temp" "maybe param" "maybe type" "temp"
          (746530 'move' call_tmp[746527](302114 call chpl_direct_counted_range_iter 0 call_tmp[746522]))
          (302107 'move' _iterator[302098](302105 call _getIterator call_tmp[746527]))
          Defer
          {
            {
              (302130 call _freeIterator _iterator[302098])
            }
          }
          { scopeless type
            (302119 'move' _indexOfInterest[302097](302116 call iteratorIndex _iterator[302098]))
          }
          ForLoop[302099]
          {
            unknown i[302123] "index var" "insert auto destroy"
            (491282 'end of statement')
            (302125 'move' i[302123] _indexOfInterest[302097])
            (491283 'end of statement' i[302123])
            {
              unknown item[302087] "dead at end of block" "ref var"
              unknown call_tmp[746534] "expr temp" "maybe param" "maybe type" "temp"
              (746537 'move' call_tmp[746534](302086 call(406340 call (partial) _getRef _mt[243] this[304379]) i[302123]))
              (549971 'move' item[302087](549970 'addr of' call_tmp[746534]))
              (302090 'end of statement' i[302123])
              (302095 call(406345 call (partial) _destroy _mt[243] this[304379]) item[302087])
              (491286 'end of statement' item[302087])
            }
            label _continueLabel[302102]
            _indexOfInterest[302097]
            _iterator[302098]
          }
          label _breakLabel[302103]
        }
        unknown call_tmp[746543] "expr temp" "maybe param" "maybe type" "temp"
        (746546 'move' call_tmp[746543](406356 call _size _mt[243] this[304379]))
        (302140 call = call_tmp[746543] 0)
      }
      (302151 'on block' 0 tmp[302146])
    }
    (539379 return _void[55])
  }
  function list[304193](?)._freeAllArrays[302161](arg _mt[304385]:_MT[238], arg this[304383]:list[304193](?)) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[746550] "expr temp" "maybe param" "maybe type" "temp"
    (746553 'move' call_tmp[746550](406361 call _arrays _mt[243] this[304383]))
    unknown call_tmp[746555] "expr temp" "maybe param" "maybe type" "temp"
    (746558 'move' call_tmp[746555](302165 call == call_tmp[746550] nil[44]))
    unknown call_tmp[746560] "expr temp" "maybe param" "maybe type" "temp"
    (746563 'move' call_tmp[746560](302169 call _cond_test call_tmp[746555]))
    if call_tmp[746560]
    {
      gotoReturn _end__freeAllArrays[539381] _end__freeAllArrays[539381]
    }
    unknown call_tmp[746567] "expr temp" "maybe param" "maybe type" "temp"
    (746570 'move' call_tmp[746567](406366 call _totalCapacity _mt[243] this[304383]))
    unknown call_tmp[746572] "expr temp" "maybe param" "maybe type" "temp"
    (746575 'move' call_tmp[746572](302178 call != call_tmp[746567] 0))
    (302181 call _sanity call_tmp[746572])
    (491291 'end of statement')
    unknown call_tmp[746579] "expr temp" "maybe param" "maybe type" "temp"
    (746582 'move' call_tmp[746579](406371 call _arrayCapacity _mt[243] this[304383]))
    unknown call_tmp[746584] "expr temp" "maybe param" "maybe type" "temp"
    (746587 'move' call_tmp[746584](302186 call != call_tmp[746579] 0))
    (302189 call _sanity call_tmp[746584])
    (491292 'end of statement')
    const tmp[302312] "const" "temp"
    unknown call_tmp[746589] "expr temp" "maybe param" "maybe type" "temp"
    (746592 'move' call_tmp[746589](302309 '_wide_get_locale' this[304383]))
    (302314 'move' tmp[302312](302310 'deref' call_tmp[746589]))
    {
      {
        {
          unknown _indexOfInterest[302244] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[302245] "expr temp" "temp"
          unknown call_tmp[746596] "expr temp" "maybe param" "maybe type" "temp"
          (746599 'move' call_tmp[746596](406402 call _arrayCapacity _mt[243] this[304383]))
          unknown call_tmp[746601] "expr temp" "maybe param" "maybe type" "temp"
          (746604 'move' call_tmp[746601](302261 call chpl_direct_counted_range_iter 0 call_tmp[746596]))
          (302254 'move' _iterator[302245](302252 call _getIterator call_tmp[746601]))
          Defer
          {
            {
              (302277 call _freeIterator _iterator[302245])
            }
          }
          { scopeless type
            (302266 'move' _indexOfInterest[302244](302263 call iteratorIndex _iterator[302245]))
          }
          ForLoop[302246]
          {
            unknown i[302270] "index var" "insert auto destroy"
            (491294 'end of statement')
            (302272 'move' i[302270] _indexOfInterest[302244])
            (491295 'end of statement' i[302270])
            {
              unknown array[302203] "dead at end of block" "ref var"
              unknown call_tmp[746608] "expr temp" "maybe param" "maybe type" "temp"
              (746611 'move' call_tmp[746608](302202 call(406377 call (partial) _arrays _mt[243] this[304383]) i[302270]))
              (549974 'move' array[302203](549973 'addr of' call_tmp[746608]))
              (302206 'end of statement')
              unknown call_tmp[746613] "expr temp" "maybe param" "maybe type" "temp"
              (746616 'move' call_tmp[746613](302210 call == array[302203] nil[44]))
              unknown call_tmp[746618] "expr temp" "maybe param" "maybe type" "temp"
              (746621 'move' call_tmp[746618](302215 call _cond_test call_tmp[746613]))
              if call_tmp[746618]
              {
                continue _continueLabel[302249] _continueLabel[302249]
              }
              unknown call_tmp[746625] "maybe param" "maybe type" "temp"
              (746628 'move' call_tmp[746625](302223 call(406383 call (partial) _getArrayCapacity _mt[243] this[304383]) i[302270]))
              const capacity[302224] "dead at end of block" "const" "insert auto destroy"
              (549976 'init var' capacity[302224] call_tmp[746625])
              (302227 'end of statement' i[302270] i[302270])
              unknown call_tmp[746632] "expr temp" "maybe param" "maybe type" "temp"
              (746635 'move' call_tmp[746632](406389 call _totalCapacity _mt[243] this[304383]))
              (302230 call -= call_tmp[746632] capacity[302224])
              (491299 'end of statement' capacity[302224])
              (302237 call(406394 call (partial) _freeArray _mt[243] this[304383]) array[302203] capacity[302224])
              (491301 'end of statement' array[302203] capacity[302224])
              (302241 call = array[302203] nil[44])
              (491304 'end of statement' array[302203])
            }
            label _continueLabel[302249]
            _indexOfInterest[302244]
            _iterator[302245]
          }
          label _breakLabel[302250]
        }
        unknown call_tmp[746641] "expr temp" "maybe param" "maybe type" "temp"
        (746644 'move' call_tmp[746641](406407 call _totalCapacity _mt[243] this[304383]))
        unknown call_tmp[746646] "expr temp" "maybe param" "maybe type" "temp"
        (746649 'move' call_tmp[746646](302288 call == call_tmp[746641] 0))
        (302291 call _sanity call_tmp[746646])
        (491306 'end of statement')
        unknown call_tmp[746655] "expr temp" "maybe param" "maybe type" "temp"
        (746658 'move' call_tmp[746655](406416 call _arrays _mt[243] this[304383]))
        unknown call_tmp[746662] "expr temp" "maybe param" "maybe type" "temp"
        (746665 'move' call_tmp[746662](406421 call _arrayCapacity _mt[243] this[304383]))
        (302297 call(406411 call (partial) _freeBlockArray _mt[243] this[304383]) call_tmp[746655] call_tmp[746662])
        (491307 'end of statement')
        unknown call_tmp[746669] "expr temp" "maybe param" "maybe type" "temp"
        (746672 'move' call_tmp[746669](406426 call _arrays _mt[243] this[304383]))
        (302301 call = call_tmp[746669] nil[44])
        (491308 'end of statement')
        unknown call_tmp[746676] "expr temp" "maybe param" "maybe type" "temp"
        (746679 'move' call_tmp[746676](406431 call _size _mt[243] this[304383]))
        (302306 call = call_tmp[746676] 0)
      }
      (302317 'on block' 0 tmp[302312])
    }
    label _end__freeAllArrays[539381]
    (539383 return _void[55])
  }
  function list[304193](?).clear[302326](arg _mt[304389]:_MT[238], ref arg this[304387]:list[304193](?)) : _unknown[51] "method" "primary method" "no return value for void"
  {
    const tmp[302377] "const" "temp"
    unknown call_tmp[746681] "expr temp" "maybe param" "maybe type" "temp"
    (746684 'move' call_tmp[746681](302374 '_wide_get_locale' this[304387]))
    (302379 'move' tmp[302377](302375 'deref' call_tmp[746681]))
    {
      {
        (302331 call(406436 call (partial) _enter _mt[243] this[304387]))
        (491311 'end of statement')
        (302336 call(406440 call (partial) _fireAllDestructors _mt[243] this[304387]))
        (491312 'end of statement')
        (302340 call(406444 call (partial) _freeAllArrays _mt[243] this[304387]))
        (491313 'end of statement')
        unknown call_tmp[746694] "expr temp" "maybe param" "maybe type" "temp"
        (746697 'move' call_tmp[746694](406449 call _totalCapacity _mt[243] this[304387]))
        unknown call_tmp[746699] "expr temp" "maybe param" "maybe type" "temp"
        (746702 'move' call_tmp[746699](302345 call == call_tmp[746694] 0))
        (302348 call _sanity call_tmp[746699])
        (491314 'end of statement')
        unknown call_tmp[746706] "expr temp" "maybe param" "maybe type" "temp"
        (746709 'move' call_tmp[746706](406454 call _size _mt[243] this[304387]))
        unknown call_tmp[746711] "expr temp" "maybe param" "maybe type" "temp"
        (746714 'move' call_tmp[746711](302353 call == call_tmp[746706] 0))
        (302356 call _sanity call_tmp[746711])
        (491315 'end of statement')
        unknown call_tmp[746718] "expr temp" "maybe param" "maybe type" "temp"
        (746721 'move' call_tmp[746718](406459 call _arrays _mt[243] this[304387]))
        unknown call_tmp[746723] "expr temp" "maybe param" "maybe type" "temp"
        (746726 'move' call_tmp[746723](302361 call == call_tmp[746718] nil[44]))
        (302364 call _sanity call_tmp[746723])
        (491316 'end of statement')
        (302368 call(406463 call (partial) _firstTimeInitializeArrays _mt[243] this[304387]))
        (491317 'end of statement')
        (302372 call(406467 call (partial) _leave _mt[243] this[304387]))
      }
      (302382 'on block' 0 tmp[302377])
    }
    (539387 return _void[55])
  }
  function list[304193](?).indexOf[302394](arg _mt[304393]:_MT[238], const arg this[304391]:list[304193](?), arg x[302391] :
  (406472 call eltType _mt[243] this[304391]), arg start[302398]:int(64)[13] =
  0, arg end[302406]:int(64)[13] =
  (302404 call - 1)) : _unknown[51] "method" "primary method"
  {
    unknown ret[539391] "RVV" "temp"
    unknown call_tmp[746734] "expr temp" "maybe param" "maybe type" "temp"
    (746737 'move' call_tmp[746734](302522 call _cond_test 1))
    if call_tmp[746734]
    {
      const msg[302429] "dead at end of block" "const" "insert auto destroy"
      (549978 'init var' msg[302429] " index for \"list.indexOf\" out of bounds: ")
      (302432 'end of statement')
      unknown tmp[434985] "maybe param" "temp"
      (434996 'move' tmp[434985](302436 call >= end[302406] 0))
      unknown call_tmp[746739] "expr temp" "maybe param" "maybe type" "temp"
      (746742 'move' call_tmp[746739](434998 call _cond_invalid tmp[434985]))
      if call_tmp[746739]
      {
        (435001 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown tmp[581143] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[581144] "maybe param" "temp"
      unknown call_tmp[746744] "expr temp" "maybe param" "maybe type" "temp"
      (746747 'move' call_tmp[746744](434986 call isTrue tmp[434985]))
      (581149 'move' tmp[581144](581147 call _cond_test call_tmp[746744]))
      if tmp[581144]
      {
        unknown tmp[581151] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[746751] "expr temp" "maybe param" "maybe type" "temp"
        (746754 'move' call_tmp[746751](302441 call(406478 call (partial) _withinBounds _mt[243] this[304391]) end[302406]))
        unknown call_tmp[746756] "expr temp" "maybe param" "maybe type" "temp"
        (746759 'move' call_tmp[746756](302442 call ! call_tmp[746751]))
        (581153 'move' tmp[581151](434989 call isTrue call_tmp[746756]))
        (581158 'move' tmp[581143](581155 '_paramFoldLogical' tmp[581144] tmp[581151]))
      }
      {
        (581163 'move' tmp[581143](581160 '_paramFoldLogical' tmp[581144] 0))
      }
      unknown call_tmp[746761] "expr temp" "maybe param" "maybe type" "temp"
      (746764 'move' call_tmp[746761](302476 call _cond_test tmp[581143]))
      if call_tmp[746761]
      {
        unknown call_tmp[746766] "expr temp" "maybe param" "maybe type" "temp"
        (746769 'move' call_tmp[746766](302465 call + "End" msg[302429]))
        unknown call_tmp[746771] "expr temp" "maybe param" "maybe type" "temp"
        (746774 'move' call_tmp[746771](302469 call _cast string[26] end[302406]))
        unknown call_tmp[746776] "expr temp" "maybe param" "maybe type" "temp"
        (746779 'move' call_tmp[746776](302471 call + call_tmp[746766] call_tmp[746771]))
        (302474 call boundsCheckHalt call_tmp[746776])
        (491320 'end of statement' msg[302429])
      }
      unknown call_tmp[746783] "expr temp" "maybe param" "maybe type" "temp"
      (746786 'move' call_tmp[746783](302484 call(406485 call (partial) _withinBounds _mt[243] this[304391]) start[302398]))
      unknown call_tmp[746788] "expr temp" "maybe param" "maybe type" "temp"
      (746791 'move' call_tmp[746788](302485 call ! call_tmp[746783]))
      unknown call_tmp[746793] "expr temp" "maybe param" "maybe type" "temp"
      (746796 'move' call_tmp[746793](302517 call _cond_test call_tmp[746788]))
      if call_tmp[746793]
      {
        unknown call_tmp[746798] "expr temp" "maybe param" "maybe type" "temp"
        (746801 'move' call_tmp[746798](302506 call + "Start" msg[302429]))
        unknown call_tmp[746803] "expr temp" "maybe param" "maybe type" "temp"
        (746806 'move' call_tmp[746803](302510 call _cast string[26] start[302398]))
        unknown call_tmp[746808] "expr temp" "maybe param" "maybe type" "temp"
        (746811 'move' call_tmp[746808](302512 call + call_tmp[746798] call_tmp[746803]))
        (302515 call boundsCheckHalt call_tmp[746808])
        (491322 'end of statement' msg[302429])
      }
    }
    unknown call_tmp[746813] "maybe param" "maybe type" "temp"
    (746816 'move' call_tmp[746813](302528 call - 1))
    unknown error[302530] "dead at end of block" "param"
    (549980 'init var' error[302530] call_tmp[746813])
    (302533 'end of statement')
    unknown tmp[435006] "maybe param" "temp"
    (435017 'move' tmp[435006](302536 call >= end[302406] 0))
    unknown call_tmp[746818] "expr temp" "maybe param" "maybe type" "temp"
    (746821 'move' call_tmp[746818](435019 call _cond_invalid tmp[435006]))
    if call_tmp[746818]
    {
      (435022 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[581170] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[581171] "maybe param" "temp"
    unknown call_tmp[746823] "expr temp" "maybe param" "maybe type" "temp"
    (746826 'move' call_tmp[746823](435007 call isTrue tmp[435006]))
    (581176 'move' tmp[581171](581174 call _cond_test call_tmp[746823]))
    if tmp[581171]
    {
      unknown tmp[581178] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[746828] "expr temp" "maybe param" "maybe type" "temp"
      (746831 'move' call_tmp[746828](302540 call < end[302406] start[302398]))
      (581180 'move' tmp[581178](435010 call isTrue call_tmp[746828]))
      (581185 'move' tmp[581170](581182 '_paramFoldLogical' tmp[581171] tmp[581178]))
    }
    {
      (581190 'move' tmp[581170](581187 '_paramFoldLogical' tmp[581171] 0))
    }
    unknown call_tmp[746833] "expr temp" "maybe param" "maybe type" "temp"
    (746836 'move' call_tmp[746833](302547 call _cond_test tmp[581170]))
    if call_tmp[746833]
    {
      (539397 'move' ret[539391](539396 'coerce' error[302530] int(64)[13]))
      gotoReturn _end_indexOf[539389] _end_indexOf[539389]
    }
    unknown result[302553] "dead at end of block" "insert auto destroy"
    (549982 'init var' result[302553] error[302530])
    (302556 'end of statement')
    const tmp[302649] "const" "temp"
    unknown call_tmp[746838] "expr temp" "maybe param" "maybe type" "temp"
    (746841 'move' call_tmp[746838](302646 '_wide_get_locale' this[304391]))
    (302651 'move' tmp[302649](302647 'deref' call_tmp[746838]))
    {
      {
        (302560 call(406498 call (partial) _enter _mt[243] this[304391]))
        (491326 'end of statement')
        const stop[302575] "dead at end of block" "const" "insert auto destroy"
        unknown tmp[581197] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[581198] "maybe param" "temp"
        unknown call_tmp[746845] "expr temp" "maybe param" "maybe type" "temp"
        (746848 'move' call_tmp[746845](302565 call < end[302406] 0))
        (581203 'move' tmp[581198](581201 call _cond_test call_tmp[746845]))
        if tmp[581198]
        {
          unknown tmp[581205] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[746852] "expr temp" "maybe param" "maybe type" "temp"
          (746855 'move' call_tmp[746852](406504 call _size _mt[243] this[304391]))
          (581207 'move' tmp[581205](302569 call - call_tmp[746852] 1))
          (581212 'move' tmp[581197](581209 '_paramFoldLogical' tmp[581198] tmp[581205]))
        }
        {
          (581217 'move' tmp[581197](581214 '_paramFoldLogical' tmp[581198] end[302406]))
        }
        (549984 'init var' stop[302575] tmp[581197])
        (302578 'end of statement')
        {
          unknown _indexOfInterest[302604] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[302605] "expr temp" "temp"
          unknown call_tmp[746857] "expr temp" "maybe param" "maybe type" "temp"
          (746860 'move' call_tmp[746857](302619 call chpl_direct_range_iter start[302398] stop[302575] 1))
          (302614 'move' _iterator[302605](302612 call _getIterator call_tmp[746857]))
          Defer
          {
            {
              (302635 call _freeIterator _iterator[302605])
            }
          }
          { scopeless type
            (302624 'move' _indexOfInterest[302604](302621 call iteratorIndex _iterator[302605]))
          }
          ForLoop[302606]
          {
            unknown i[302628] "index var" "insert auto destroy"
            (491328 'end of statement')
            (302630 'move' i[302628] _indexOfInterest[302604])
            (491329 'end of statement' i[302628])
            unknown call_tmp[746864] "expr temp" "maybe param" "maybe type" "temp"
            (746867 'move' call_tmp[746864](302588 call(406510 call (partial) _getRef _mt[243] this[304391]) i[302628]))
            unknown call_tmp[746869] "expr temp" "maybe param" "maybe type" "temp"
            (746872 'move' call_tmp[746869](302589 call == x[302391] call_tmp[746864]))
            unknown call_tmp[746874] "expr temp" "maybe param" "maybe type" "temp"
            (746877 'move' call_tmp[746874](302600 call _cond_test call_tmp[746869]))
            if call_tmp[746874]
            {
              (302593 call = result[302553] i[302628])
              (491331 'end of statement' result[302553] i[302628])
              break _breakLabel[302610] _breakLabel[302610]
            }
            label _continueLabel[302609]
            _indexOfInterest[302604]
            _iterator[302605]
          }
          label _breakLabel[302610]
        }
        (302644 call(406519 call (partial) _leave _mt[243] this[304391]))
      }
      (302654 'on block' 0 tmp[302649])
    }
    (539403 'move' ret[539391](539402 'coerce' result[302553] int(64)[13]))
    gotoReturn _end_indexOf[539389] _end_indexOf[539389]
    (491335 'end of statement' result[302553])
    label _end_indexOf[539389]
    (539393 return ret[539391])
  }
  { scopeless type
    int(64)[13]
  }
  function list[304193](?).count[302669](arg _mt[304397]:_MT[238], const arg this[304395]:list[304193](?), arg x[302666] :
  (406525 call eltType _mt[243] this[304395])) : _unknown[51] "method" "primary method"
  {
    unknown ret[539409] "RVV" "temp"
    unknown result[302673] "dead at end of block" "insert auto destroy"
    (549986 'init var' result[302673] 0)
    (302676 'end of statement')
    const tmp[302750] "const" "temp"
    unknown call_tmp[746883] "expr temp" "maybe param" "maybe type" "temp"
    (746886 'move' call_tmp[746883](302747 '_wide_get_locale' this[304395]))
    (302752 'move' tmp[302750](302748 'deref' call_tmp[746883]))
    {
      {
        (302681 call(406530 call (partial) _enter _mt[243] this[304395]))
        (491337 'end of statement')
        unknown count[302685] "dead at end of block" "insert auto destroy"
        (549988 'init var' count[302685] 0)
        (302688 'end of statement')
        {
          unknown _indexOfInterest[302705] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[302706] "expr temp" "temp"
          (302715 'move' _iterator[302706](302713 call _getIterator this[304395]))
          Defer
          {
            {
              (302731 call _freeIterator _iterator[302706])
            }
          }
          { scopeless type
            (302720 'move' _indexOfInterest[302705](302717 call iteratorIndex _iterator[302706]))
          }
          ForLoop[302707]
          {
            unknown item[302724] "index var" "insert auto destroy"
            (491339 'end of statement')
            (302726 'move' item[302724] _indexOfInterest[302705])
            (491340 'end of statement' item[302724])
            unknown call_tmp[746890] "expr temp" "maybe param" "maybe type" "temp"
            (746893 'move' call_tmp[746890](302693 call == x[302666] item[302724]))
            unknown call_tmp[746895] "expr temp" "maybe param" "maybe type" "temp"
            (746898 'move' call_tmp[746895](302700 call _cond_test call_tmp[746890]))
            if call_tmp[746895]
            {
              (302697 call += count[302685] 1)
              (491342 'end of statement' count[302685])
            }
            label _continueLabel[302710]
            _indexOfInterest[302705]
            _iterator[302706]
          }
          label _breakLabel[302711]
        }
        (302740 call = result[302673] count[302685])
        (491344 'end of statement' result[302673] count[302685])
        (302745 call(406540 call (partial) _leave _mt[243] this[304395]))
      }
      (302755 'on block' 0 tmp[302750])
    }
    (539415 'move' ret[539409](539414 'coerce' result[302673] int(64)[13]))
    gotoReturn _end_count[539407] _end_count[539407]
    (491348 'end of statement' result[302673])
    label _end_count[539407]
    (539411 return ret[539409])
  }
  { scopeless type
    int(64)[13]
  }
  function list[304193](?).sort[302776](arg _mt[304401]:_MT[238], ref arg this[304399]:list[304193](?), arg comparator[302772]:_any[178](?) :
  defaultComparator[267977] =
  defaultComparator[267977]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    const tmp[302902] "const" "temp"
    unknown call_tmp[746902] "expr temp" "maybe param" "maybe type" "temp"
    (746905 'move' call_tmp[746902](302899 '_wide_get_locale' this[304399]))
    (302904 'move' tmp[302902](302900 'deref' call_tmp[746902]))
    {
      {
        (302781 call(406546 call (partial) _enter _mt[243] this[304399]))
        (491350 'end of statement')
        unknown call_tmp[746911] "expr temp" "maybe param" "maybe type" "temp"
        (746914 'move' call_tmp[746911](406551 call _size _mt[243] this[304399]))
        unknown call_tmp[746916] "expr temp" "maybe param" "maybe type" "temp"
        (746919 'move' call_tmp[746916](302786 call > call_tmp[746911] 1))
        unknown call_tmp[746921] "expr temp" "maybe param" "maybe type" "temp"
        (746924 'move' call_tmp[746921](302891 call _cond_test call_tmp[746916]))
        if call_tmp[746921]
        {
          unknown arr[302800] "dead at end of block" "insert auto destroy"
          unknown call_tmp[746926] "expr temp" "maybe param" "maybe type" "temp"
          (746929 'move' call_tmp[746926](302789 call chpl_build_low_bounded_range 0))
          unknown call_tmp[746933] "expr temp" "maybe param" "maybe type" "temp"
          (746936 'move' call_tmp[746933](406556 call _size _mt[243] this[304399]))
          unknown call_tmp[746938] "expr temp" "maybe param" "maybe type" "temp"
          (746941 'move' call_tmp[746938](302792 call # call_tmp[746926] call_tmp[746933]))
          unknown call_tmp[746943] "expr temp" "maybe param" "maybe type" "temp"
          (746946 'move' call_tmp[746943](302796 call chpl__ensureDomainExpr call_tmp[746938]))
          unknown call_tmp[746950] "expr temp" "maybe param" "maybe type" "temp"
          (746953 'move' call_tmp[746950](406561 call eltType _mt[243] this[304399]))
          unknown call_tmp[746955] "expr temp" "maybe param" "maybe type" "temp"
          (746958 'move' call_tmp[746955](302798 call chpl__buildArrayRuntimeType call_tmp[746943] call_tmp[746950]))
          (549990 'default init var' arr[302800] call_tmp[746955])
          (302803 'end of statement')
          {
            unknown _indexOfInterest[302823] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[302824] "expr temp" "temp"
            unknown call_tmp[746962] "expr temp" "maybe param" "maybe type" "temp"
            (746965 'move' call_tmp[746962](406570 call _size _mt[243] this[304399]))
            unknown call_tmp[746967] "expr temp" "maybe param" "maybe type" "temp"
            (746970 'move' call_tmp[746967](302840 call chpl_direct_counted_range_iter 0 call_tmp[746962]))
            (302833 'move' _iterator[302824](302831 call _getIterator call_tmp[746967]))
            Defer
            {
              {
                (302856 call _freeIterator _iterator[302824])
              }
            }
            { scopeless type
              (302845 'move' _indexOfInterest[302823](302842 call iteratorIndex _iterator[302824]))
            }
            ForLoop[302825]
            {
              unknown i[302849] "index var" "insert auto destroy"
              (491352 'end of statement')
              (302851 'move' i[302849] _indexOfInterest[302823])
              (491353 'end of statement' i[302849])
              unknown call_tmp[746972] "expr temp" "maybe param" "maybe type" "temp"
              (746975 'move' call_tmp[746972](302815 call arr[302800] i[302849]))
              unknown call_tmp[746977] "expr temp" "maybe param" "maybe type" "temp"
              (746980 'move' call_tmp[746977](302819 call this[304399] i[302849]))
              (302820 call = call_tmp[746972] call_tmp[746977])
              (491355 'end of statement' arr[302800] i[302849] i[302849])
              label _continueLabel[302828]
              _indexOfInterest[302823]
              _iterator[302824]
            }
            label _breakLabel[302829]
          }
          (302872 call sort module=[255] Sort[267968] arr[302800] comparator[302772])
          (491359 'end of statement' arr[302800])
          (302876 call(406576 call (partial) _fireAllDestructors _mt[243] this[304399]))
          (491361 'end of statement')
          (302880 call(406580 call (partial) _freeAllArrays _mt[243] this[304399]))
          (491362 'end of statement')
          (302884 call(406584 call (partial) _firstTimeInitializeArrays _mt[243] this[304399]))
          (491363 'end of statement')
          (302889 call(406588 call (partial) _extendGeneric _mt[243] this[304399]) arr[302800])
          (491364 'end of statement' arr[302800])
          (364950 'referenced modules list' Sort[267968])
        }
        (302897 call(406593 call (partial) _leave _mt[243] this[304399]))
      }
      (302907 'on block' 0 tmp[302902])
    }
    (539421 return _void[55])
  }
  function list[304193](?).this[302921](arg _mt[304405]:_MT[238], ref arg this[304403]:list[304193](?), arg i[302918]:int(64)[13]) ref : _unknown[51] "method" "primary method"
  {
    unknown ret[539425] "RVV" "temp"
    unknown tmp[435027] "maybe param" "temp"
    (435038 'move' tmp[435027] 1)
    unknown call_tmp[746992] "expr temp" "maybe param" "maybe type" "temp"
    (746995 'move' call_tmp[746992](435040 call _cond_invalid tmp[435027]))
    if call_tmp[746992]
    {
      (435043 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[581224] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[581225] "maybe param" "temp"
    unknown call_tmp[746997] "expr temp" "maybe param" "maybe type" "temp"
    (747000 'move' call_tmp[746997](435028 call isTrue tmp[435027]))
    (581230 'move' tmp[581225](581228 call _cond_test call_tmp[746997]))
    if tmp[581225]
    {
      unknown tmp[581232] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[747004] "expr temp" "maybe param" "maybe type" "temp"
      (747007 'move' call_tmp[747004](302927 call(406598 call (partial) _withinBounds _mt[243] this[304403]) i[302918]))
      unknown call_tmp[747009] "expr temp" "maybe param" "maybe type" "temp"
      (747012 'move' call_tmp[747009](302928 call ! call_tmp[747004]))
      (581234 'move' tmp[581232](435031 call isTrue call_tmp[747009]))
      (581239 'move' tmp[581224](581236 '_paramFoldLogical' tmp[581225] tmp[581232]))
    }
    {
      (581244 'move' tmp[581224](581241 '_paramFoldLogical' tmp[581225] 0))
    }
    unknown call_tmp[747014] "expr temp" "maybe param" "maybe type" "temp"
    (747017 'move' call_tmp[747014](302965 call _cond_test tmp[581224]))
    if call_tmp[747014]
    {
      unknown call_tmp[747019] "expr temp" "maybe param" "maybe type" "temp"
      (747022 'move' call_tmp[747019](302951 call _cast string[26] i[302918]))
      unknown call_tmp[747024] "maybe param" "maybe type" "temp"
      (747027 'move' call_tmp[747024](302953 call + "Invalid list index: " call_tmp[747019]))
      const msg[302955] "dead at end of block" "const" "insert auto destroy"
      (549992 'init var' msg[302955] call_tmp[747024])
      (302958 'end of statement')
      (302963 call boundsCheckHalt msg[302955])
      (491369 'end of statement' msg[302955])
    }
    unknown result[302974] "dead at end of block" "ref var"
    unknown call_tmp[747031] "expr temp" "maybe param" "maybe type" "temp"
    (747034 'move' call_tmp[747031](302973 call(406605 call (partial) _getRef _mt[243] this[304403]) i[302918]))
    (549995 'move' result[302974](549994 'addr of' call_tmp[747031]))
    (302977 'end of statement')
    (539430 'move' ret[539425](539429 'addr of' result[302974]))
    gotoReturn _end_this[539423] _end_this[539423]
    (491371 'end of statement' result[302974])
    label _end_this[539423]
    (539427 return ret[539425])
  }
  function list[304193](?).this[302989](arg _mt[304409]:_MT[238], const  ref arg this[304407]:list[304193](?), arg i[302986]:int(64)[13]) const ref : _unknown[51] "method" "primary method"
  {
    unknown ret[539436] "RVV" "temp"
    unknown tmp[435048] "maybe param" "temp"
    (435059 'move' tmp[435048] 1)
    unknown call_tmp[747036] "expr temp" "maybe param" "maybe type" "temp"
    (747039 'move' call_tmp[747036](435061 call _cond_invalid tmp[435048]))
    if call_tmp[747036]
    {
      (435064 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[581251] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[581252] "maybe param" "temp"
    unknown call_tmp[747041] "expr temp" "maybe param" "maybe type" "temp"
    (747044 'move' call_tmp[747041](435049 call isTrue tmp[435048]))
    (581257 'move' tmp[581252](581255 call _cond_test call_tmp[747041]))
    if tmp[581252]
    {
      unknown tmp[581259] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[747048] "expr temp" "maybe param" "maybe type" "temp"
      (747051 'move' call_tmp[747048](302995 call(406612 call (partial) _withinBounds _mt[243] this[304407]) i[302986]))
      unknown call_tmp[747053] "expr temp" "maybe param" "maybe type" "temp"
      (747056 'move' call_tmp[747053](302996 call ! call_tmp[747048]))
      (581261 'move' tmp[581259](435052 call isTrue call_tmp[747053]))
      (581266 'move' tmp[581251](581263 '_paramFoldLogical' tmp[581252] tmp[581259]))
    }
    {
      (581271 'move' tmp[581251](581268 '_paramFoldLogical' tmp[581252] 0))
    }
    unknown call_tmp[747058] "expr temp" "maybe param" "maybe type" "temp"
    (747061 'move' call_tmp[747058](303017 call _cond_test tmp[581251]))
    if call_tmp[747058]
    {
      unknown call_tmp[747063] "expr temp" "maybe param" "maybe type" "temp"
      (747066 'move' call_tmp[747063](303003 call _cast string[26] i[302986]))
      unknown call_tmp[747068] "maybe param" "maybe type" "temp"
      (747071 'move' call_tmp[747068](303005 call + "Invalid list index: " call_tmp[747063]))
      const msg[303007] "dead at end of block" "const" "insert auto destroy"
      (549997 'init var' msg[303007] call_tmp[747068])
      (303010 'end of statement')
      (303015 call halt msg[303007])
      (491374 'end of statement' msg[303007])
    }
    const result[303026] "dead at end of block" "const" "ref var"
    unknown call_tmp[747075] "expr temp" "maybe param" "maybe type" "temp"
    (747078 'move' call_tmp[747075](303025 call(406619 call (partial) _getRef _mt[243] this[304407]) i[302986]))
    (550000 'move' result[303026](549999 'addr of' call_tmp[747075]))
    (303029 'end of statement')
    (539441 'move' ret[539436](539440 'addr of' result[303026]))
    gotoReturn _end_this[539434] _end_this[539434]
    (491376 'end of statement' result[303026])
    label _end_this[539434]
    (539438 return ret[539436])
  }
  function list[304193](?).these[303037](arg _mt[304413]:_MT[238], arg this[304411]:list[304193](?)) ref : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[539447] "RVV" "temp"
    {
      unknown _indexOfInterest[303058] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[303059] "expr temp" "temp"
      unknown call_tmp[747082] "expr temp" "maybe param" "maybe type" "temp"
      (747085 'move' call_tmp[747082](406632 call _size _mt[243] this[304411]))
      unknown call_tmp[747087] "expr temp" "maybe param" "maybe type" "temp"
      (747090 'move' call_tmp[747087](303075 call chpl_direct_counted_range_iter 0 call_tmp[747082]))
      (303068 'move' _iterator[303059](303066 call _getIterator call_tmp[747087]))
      Defer
      {
        {
          (303091 call _freeIterator _iterator[303059])
        }
      }
      { scopeless type
        (303080 'move' _indexOfInterest[303058](303077 call iteratorIndex _iterator[303059]))
      }
      ForLoop[303060]
      {
        unknown i[303084] "index var" "insert auto destroy"
        (491379 'end of statement')
        (303086 'move' i[303084] _indexOfInterest[303058])
        (491380 'end of statement' i[303084])
        {
          unknown result[303050] "dead at end of block" "ref var"
          unknown call_tmp[747094] "expr temp" "maybe param" "maybe type" "temp"
          (747097 'move' call_tmp[747094](303049 call(406625 call (partial) _getRef _mt[243] this[304411]) i[303084]))
          (550003 'move' result[303050](550002 'addr of' call_tmp[747094]))
          (303053 'end of statement' i[303084])
          unknown yret[539451] "YVV" "temp"
          (539454 'move' yret[539451](539453 'addr of' result[303050]))
          (539456 yield yret[539451])
          (491383 'end of statement' result[303050])
        }
        label _continueLabel[303063]
        _indexOfInterest[303058]
        _iterator[303059]
      }
      label _breakLabel[303064]
    }
    (539449 return ret[539447])
  }
  function list[304193](?).these[303107](arg _mt[304417]:_MT[238], arg this[304415]:list[304193](?), param arg tag[303104]:iterKind[453]) ref : _unknown[51] "iterator fn" "method" "primary method" "no doc" "no return value for void"
  {
    unknown ret[539460] "RVV" "temp"
    unknown call_tmp[747101] "maybe param" "maybe type" "temp"
    (747104 'move' call_tmp[747101](406639 call _size _mt[243] this[304415]))
    const osz[303117] "dead at end of block" "const" "insert auto destroy"
    (550005 'init var' osz[303117] call_tmp[747101])
    (303120 'end of statement')
    const minChunkSize[303123] "dead at end of block" "const" "insert auto destroy"
    (550007 'init var' minChunkSize[303123] 64)
    (303126 'end of statement')
    unknown call_tmp[747106] "maybe param" "maybe type" "temp"
    (747109 'move' call_tmp[747106](303129 call <= osz[303117] minChunkSize[303123]))
    const hasOneChunk[303131] "dead at end of block" "const" "insert auto destroy"
    (550009 'init var' hasOneChunk[303131] call_tmp[747106])
    (303134 'end of statement')
    const numTasks[303144] "dead at end of block" "const" "insert auto destroy"
    unknown tmp[581278] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[581279] "maybe param" "temp"
    (581284 'move' tmp[581279](581282 call _cond_test hasOneChunk[303131]))
    if tmp[581279]
    {
      (581289 'move' tmp[581278](581286 '_paramFoldLogical' tmp[581279] 1))
    }
    {
      unknown tmp[581291] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[747111] "expr temp" "maybe param" "maybe type" "temp"
      (747114 'move' call_tmp[747111](364956 call here[90435]))
      (581293 'move' tmp[581291](303138 call maxTaskPar _mt[243] call_tmp[747111]))
      (581298 'move' tmp[581278](581295 '_paramFoldLogical' tmp[581279] tmp[581291]))
    }
    (550011 'init var' numTasks[303144] tmp[581278])
    (303147 'end of statement')
    unknown call_tmp[747118] "expr temp" "maybe param" "maybe type" "temp"
    (747121 'move' call_tmp[747118](303151 call / osz[303117] numTasks[303144]))
    unknown call_tmp[747123] "expr temp" "maybe param" "maybe type" "temp"
    (747126 'move' call_tmp[747123](303154 call floor call_tmp[747118]))
    unknown call_tmp[747128] "maybe param" "maybe type" "temp"
    (747131 'move' call_tmp[747128](303156 call _cast int(64)[13] call_tmp[747123]))
    const chunkSize[303158] "dead at end of block" "const" "insert auto destroy"
    (550013 'init var' chunkSize[303158] call_tmp[747128])
    (303161 'end of statement')
    unknown call_tmp[747133] "expr temp" "maybe param" "maybe type" "temp"
    (747136 'move' call_tmp[747133](303165 call * chunkSize[303158] numTasks[303144]))
    unknown call_tmp[747138] "maybe param" "maybe type" "temp"
    (747141 'move' call_tmp[747138](303167 call - osz[303117] call_tmp[747133]))
    const trailing[303169] "dead at end of block" "const" "insert auto destroy"
    (550015 'init var' trailing[303169] call_tmp[747138])
    (303172 'end of statement' osz[303117] minChunkSize[303123] hasOneChunk[303131] osz[303117] numTasks[303144] osz[303117] chunkSize[303158] numTasks[303144])
    {
      unknown tmpIter[303236] "expr temp" "maybe ref" "no copy" "temp"
      unknown call_tmp[747143] "expr temp" "maybe param" "maybe type" "temp"
      (747146 'move' call_tmp[747143](303175 call chpl_build_low_bounded_range 0))
      (303239 'move' tmpIter[303236](303178 call # call_tmp[747143] numTasks[303144]))
      unknown isRngDomArr[303425] "maybe param" "temp"
      unknown tmp[435069] "maybe param" "temp"
      (435080 'move' tmp[435069](303427 call isBoundedRange tmpIter[303236]))
      unknown call_tmp[747148] "expr temp" "maybe param" "maybe type" "temp"
      (747151 'move' call_tmp[747148](435082 call _cond_invalid tmp[435069]))
      if call_tmp[747148]
      {
        (435085 call compilerError "cannot promote short-circuiting || operator")
      }
      unknown tmp[581332] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[581333] "maybe param" "temp"
      unknown call_tmp[747153] "expr temp" "maybe param" "maybe type" "temp"
      (747156 'move' call_tmp[747153](435070 call isTrue tmp[435069]))
      (581338 'move' tmp[581333](581336 call _cond_test call_tmp[747153]))
      if tmp[581333]
      {
        (581343 'move' tmp[581332](581340 '_paramFoldLogical' tmp[581333] 1))
      }
      {
        unknown tmp[435090] "maybe param" "temp"
        (435101 'move' tmp[435090](303430 call isDomain tmpIter[303236]))
        unknown call_tmp[747158] "expr temp" "maybe param" "maybe type" "temp"
        (747161 'move' call_tmp[747158](435103 call _cond_invalid tmp[435090]))
        if call_tmp[747158]
        {
          (435106 call compilerError "cannot promote short-circuiting || operator")
        }
        unknown tmp[581305] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[581306] "maybe param" "temp"
        unknown call_tmp[747163] "expr temp" "maybe param" "maybe type" "temp"
        (747166 'move' call_tmp[747163](435091 call isTrue tmp[435090]))
        (581311 'move' tmp[581306](581309 call _cond_test call_tmp[747163]))
        if tmp[581306]
        {
          (581316 'move' tmp[581305](581313 '_paramFoldLogical' tmp[581306] 1))
        }
        {
          unknown tmp[581318] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[747168] "expr temp" "maybe param" "maybe type" "temp"
          (747171 'move' call_tmp[747168](303433 call isArray tmpIter[303236]))
          (581320 'move' tmp[581318](435095 call isTrue call_tmp[747168]))
          (581325 'move' tmp[581305](581322 '_paramFoldLogical' tmp[581306] tmp[581318]))
        }
        unknown tmp[581345] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (581347 'move' tmp[581345](435074 call isTrue tmp[581305]))
        (581352 'move' tmp[581332](581349 '_paramFoldLogical' tmp[581333] tmp[581345]))
      }
      (303440 'move' isRngDomArr[303425] tmp[581332])
      if isRngDomArr[303425]
      {
        const _coforallCount[303292] "const" "end count" "temp"
        (303361 'move' _coforallCount[303292](303358 call _endCountAlloc 1))
        unknown numTasks[303293] "temp"
        (303345 'move' numTasks[303293](303341 call size _mt[243] tmpIter[303236]))
        (303336 call _upEndCount _coforallCount[303292] 1 numTasks[303293])
        (491394 'end of statement')
        (303333 call chpl_resetTaskSpawn numTasks[303293])
        (491395 'end of statement')
        unknown _indexOfInterest[303300] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[303301] "expr temp" "temp"
        (303310 'move' _iterator[303301](303308 call _getIterator tmpIter[303236]))
        Defer
        {
          {
            (303326 call _freeIterator _iterator[303301])
          }
        }
        { scopeless type
          (303315 'move' _indexOfInterest[303300](303312 call iteratorIndex _iterator[303301]))
        }
        ForLoop[303302]
        {
          unknown tid[303319] "coforall index var" "index var" "insert auto destroy"
          (491397 'end of statement')
          (303321 'move' tid[303319] _indexOfInterest[303300])
          (491398 'end of statement' tid[303319])
          {
            {
              unknown call_tmp[747177] "maybe param" "maybe type" "temp"
              (747180 'move' call_tmp[747177](303245 call(406664 call (partial) _computeChunk _mt[243] this[304415]) tid[303319] chunkSize[303158] trailing[303169]))
              unknown chunk[303243] "dead at end of block" "insert auto destroy"
              (550017 'init var' chunk[303243] call_tmp[747177])
              (303250 'end of statement' tid[303319] chunkSize[303158] trailing[303169])
              {
                unknown _indexOfInterest[303252] "an _indexOfInterest or chpl__followIdx variable" "temp"
                unknown _iterator[303254] "expr temp" "temp"
                unknown call_tmp[747182] "expr temp" "maybe param" "maybe type" "temp"
                (747185 'move' call_tmp[747182](303261 call chunk[303243] 0))
                (303256 'move' _iterator[303254](303259 call _getIterator call_tmp[747182]))
                Defer
                {
                  {
                    (303265 call _freeIterator _iterator[303254])
                  }
                }
                { scopeless type
                  (303269 'move' _indexOfInterest[303252](303272 call iteratorIndex _iterator[303254]))
                }
                ForLoop[303274]
                {
                  unknown i[303277] "index var" "insert auto destroy"
                  (491404 'end of statement')
                  (303279 'move' i[303277] _indexOfInterest[303252])
                  (491405 'end of statement' i[303277])
                  unknown yret[539464] "YVV" "temp"
                  unknown call_tmp[747187] "expr temp" "maybe param" "maybe type" "temp"
                  (747190 'move' call_tmp[747187](303285 call this[304415] i[303277]))
                  (539467 'move' yret[539464](539466 'addr of' call_tmp[747187]))
                  (539469 yield yret[539464])
                  (491407 'end of statement' i[303277])
                  label _continueLabel[303287]
                  _indexOfInterest[303252]
                  _iterator[303254]
                }
                label _breakLabel[303289]
              }
            }
            (303295 call _downEndCount _coforallCount[303292] nil[44])
            (303294 'coforall loop')
          }
          label _continueLabel[303305]
          _indexOfInterest[303300]
          _iterator[303301]
        }
        label _breakLabel[303306]
        Defer
        {
          {
            (303348 call _endCountFree _coforallCount[303292])
          }
        }
        (303353 call _waitEndCount _coforallCount[303292] 1 numTasks[303293])
      }
      {
        const _coforallCount[303365] "const" "end count" "temp"
        (303422 'move' _coforallCount[303365](303419 call _endCountAlloc 1))
        unknown _indexOfInterest[303373] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[303374] "expr temp" "temp"
        (303383 'move' _iterator[303374](303381 call _getIterator tmpIter[303236]))
        Defer
        {
          {
            (303399 call _freeIterator _iterator[303374])
          }
        }
        { scopeless type
          (303388 'move' _indexOfInterest[303373](303385 call iteratorIndex _iterator[303374]))
        }
        ForLoop[303375]
        {
          unknown tid[303392] "coforall index var" "index var" "insert auto destroy"
          (491413 'end of statement')
          (303394 'move' tid[303392] _indexOfInterest[303373])
          (491414 'end of statement' tid[303392])
          (303406 call _upEndCount _coforallCount[303365] 1)
          (491416 'end of statement')
          {
            {
              unknown call_tmp[747194] "maybe param" "maybe type" "temp"
              (747197 'move' call_tmp[747194](303185 call(406654 call (partial) _computeChunk _mt[243] this[304415]) tid[303392] chunkSize[303158] trailing[303169]))
              unknown chunk[303186] "dead at end of block" "insert auto destroy"
              (550019 'init var' chunk[303186] call_tmp[747194])
              (303189 'end of statement' tid[303392] chunkSize[303158] trailing[303169])
              {
                unknown _indexOfInterest[303202] "an _indexOfInterest or chpl__followIdx variable" "temp"
                unknown _iterator[303203] "expr temp" "temp"
                unknown call_tmp[747199] "expr temp" "maybe param" "maybe type" "temp"
                (747202 'move' call_tmp[747199](303195 call chunk[303186] 0))
                (303212 'move' _iterator[303203](303210 call _getIterator call_tmp[747199]))
                Defer
                {
                  {
                    (303229 call _freeIterator _iterator[303203])
                  }
                }
                { scopeless type
                  (303218 'move' _indexOfInterest[303202](303215 call iteratorIndex _iterator[303203]))
                }
                ForLoop[303204]
                {
                  unknown i[303222] "index var" "insert auto destroy"
                  (491421 'end of statement')
                  (303224 'move' i[303222] _indexOfInterest[303202])
                  (491422 'end of statement' i[303222])
                  unknown yret[539471] "YVV" "temp"
                  unknown call_tmp[747204] "expr temp" "maybe param" "maybe type" "temp"
                  (747207 'move' call_tmp[747204](303199 call this[304415] i[303222]))
                  (539474 'move' yret[539471](539473 'addr of' call_tmp[747204]))
                  (539476 yield yret[539471])
                  (491424 'end of statement' i[303222])
                  label _continueLabel[303207]
                  _indexOfInterest[303202]
                  _iterator[303203]
                }
                label _breakLabel[303208]
              }
            }
            (303368 call _downEndCount _coforallCount[303365] nil[44])
            (303367 'coforall loop')
          }
          label _continueLabel[303378]
          _indexOfInterest[303373]
          _iterator[303374]
        }
        label _breakLabel[303379]
        Defer
        {
          {
            (303410 call _endCountFree _coforallCount[303365])
          }
        }
        (303415 call _waitEndCount _coforallCount[303365] 1)
      }
    }
    (539462 return ret[539460])
  }
  where {
    (303114 call == tag[303104] standalone[451])
  }
  function list[304193](?)._computeChunk[303451](arg _mt[304421]:_MT[238], arg this[304419]:list[304193](?), arg tid[303449]:_any[178](?), arg chunkSize[303453]:_any[178](?), arg trailing[303455]:_any[178](?)) : _unknown[51] "method" "primary method" "no doc"
  {
    unknown ret[539480] "RVV" "temp"
    unknown lo[303457] "dead at end of block" "insert auto destroy"
    (550021 'init var' lo[303457] 0)
    unknown hi[303461] "dead at end of block" "insert auto destroy"
    (550023 'init var' hi[303461] lo[303457])
    (303465 'end of statement' lo[303457])
    unknown call_tmp[747209] "expr temp" "maybe param" "maybe type" "temp"
    (747212 'move' call_tmp[747209](303469 call <= tid[303449] 0))
    unknown call_tmp[747214] "expr temp" "maybe param" "maybe type" "temp"
    (747217 'move' call_tmp[747214](303511 call _cond_test call_tmp[747209]))
    if call_tmp[747214]
    {
      (303473 call = lo[303457] 0)
      (491430 'end of statement' lo[303457])
      unknown call_tmp[747219] "expr temp" "maybe param" "maybe type" "temp"
      (747222 'move' call_tmp[747219](303480 call + chunkSize[303453] trailing[303455]))
      unknown call_tmp[747224] "expr temp" "maybe param" "maybe type" "temp"
      (747227 'move' call_tmp[747224](303483 call - call_tmp[747219] 1))
      (303485 call = hi[303461] call_tmp[747224])
      (491432 'end of statement' hi[303461])
    }
    {
      unknown call_tmp[747229] "expr temp" "maybe param" "maybe type" "temp"
      (747232 'move' call_tmp[747229](303491 call * chunkSize[303453] tid[303449]))
      unknown call_tmp[747234] "expr temp" "maybe param" "maybe type" "temp"
      (747237 'move' call_tmp[747234](303494 call + call_tmp[747229] trailing[303455]))
      (303496 call = lo[303457] call_tmp[747234])
      (491434 'end of statement' lo[303457])
      unknown call_tmp[747239] "expr temp" "maybe param" "maybe type" "temp"
      (747242 'move' call_tmp[747239](303503 call + lo[303457] chunkSize[303453]))
      unknown call_tmp[747244] "expr temp" "maybe param" "maybe type" "temp"
      (747247 'move' call_tmp[747244](303506 call - call_tmp[747239] 1))
      (303508 call = hi[303461] call_tmp[747244])
      (491436 'end of statement' hi[303461] lo[303457])
    }
    unknown call_tmp[747249] "expr temp" "maybe param" "maybe type" "temp"
    (747252 'move' call_tmp[747249](303517 call chpl_build_bounded_range lo[303457] hi[303461]))
    unknown call_tmp[747254] "expr temp" "maybe param" "maybe type" "temp"
    (747257 'move' call_tmp[747254](303519 call _build_tuple call_tmp[747249]))
    (539485 'move' ret[539480](539484 'deref' call_tmp[747254]))
    gotoReturn _end__computeChunk[539478] _end__computeChunk[539478]
    (491439 'end of statement' lo[303457] hi[303461])
    label _end__computeChunk[539478]
    (539482 return ret[539480])
  }
  function list[304193](?).these[303529](arg _mt[304425]:_MT[238], arg this[304423]:list[304193](?), param arg tag[303527]:_any[178](?)) ref : _unknown[51] "iterator fn" "method" "primary method" "no doc" "no return value for void"
  {
    unknown ret[539491] "RVV" "temp"
    unknown call_tmp[747261] "maybe param" "maybe type" "temp"
    (747264 'move' call_tmp[747261](406691 call _size _mt[243] this[304423]))
    const osz[303539] "dead at end of block" "const" "insert auto destroy"
    (550025 'init var' osz[303539] call_tmp[747261])
    (303542 'end of statement')
    const minChunkSize[303545] "dead at end of block" "const" "insert auto destroy"
    (550027 'init var' minChunkSize[303545] 32)
    (303548 'end of statement')
    unknown call_tmp[747266] "maybe param" "maybe type" "temp"
    (747269 'move' call_tmp[747266](303551 call <= osz[303539] minChunkSize[303545]))
    const hasOneChunk[303553] "dead at end of block" "const" "insert auto destroy"
    (550029 'init var' hasOneChunk[303553] call_tmp[747266])
    (303556 'end of statement')
    const numTasks[303563] "dead at end of block" "const" "insert auto destroy"
    unknown tmp[581359] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[581360] "maybe param" "temp"
    (581365 'move' tmp[581360](581363 call _cond_test hasOneChunk[303553]))
    if tmp[581360]
    {
      (581370 'move' tmp[581359](581367 '_paramFoldLogical' tmp[581360] 1))
    }
    {
      (581375 'move' tmp[581359](581372 '_paramFoldLogical' tmp[581360] dataParTasksPerLocale[93281]))
    }
    (550031 'init var' numTasks[303563] tmp[581359])
    (303566 'end of statement')
    unknown call_tmp[747271] "expr temp" "maybe param" "maybe type" "temp"
    (747274 'move' call_tmp[747271](303570 call / osz[303539] numTasks[303563]))
    unknown call_tmp[747276] "expr temp" "maybe param" "maybe type" "temp"
    (747279 'move' call_tmp[747276](303573 call floor call_tmp[747271]))
    unknown call_tmp[747281] "maybe param" "maybe type" "temp"
    (747284 'move' call_tmp[747281](303575 call _cast int(64)[13] call_tmp[747276]))
    const chunkSize[303577] "dead at end of block" "const" "insert auto destroy"
    (550033 'init var' chunkSize[303577] call_tmp[747281])
    (303580 'end of statement')
    unknown call_tmp[747286] "expr temp" "maybe param" "maybe type" "temp"
    (747289 'move' call_tmp[747286](303584 call * chunkSize[303577] numTasks[303563]))
    unknown call_tmp[747291] "maybe param" "maybe type" "temp"
    (747294 'move' call_tmp[747291](303586 call - osz[303539] call_tmp[747286]))
    const trailing[303588] "dead at end of block" "const" "insert auto destroy"
    (550035 'init var' trailing[303588] call_tmp[747291])
    (303591 'end of statement' osz[303539] minChunkSize[303545] hasOneChunk[303553] osz[303539] numTasks[303563] osz[303539] chunkSize[303577] numTasks[303563])
    {
      unknown tmpIter[303613] "expr temp" "maybe ref" "no copy" "temp"
      unknown call_tmp[747296] "expr temp" "maybe param" "maybe type" "temp"
      (747299 'move' call_tmp[747296](303594 call chpl_build_low_bounded_range 0))
      (303616 'move' tmpIter[303613](303597 call # call_tmp[747296] numTasks[303563]))
      unknown isRngDomArr[303764] "maybe param" "temp"
      unknown tmp[435111] "maybe param" "temp"
      (435122 'move' tmp[435111](303766 call isBoundedRange tmpIter[303613]))
      unknown call_tmp[747301] "expr temp" "maybe param" "maybe type" "temp"
      (747304 'move' call_tmp[747301](435124 call _cond_invalid tmp[435111]))
      if call_tmp[747301]
      {
        (435127 call compilerError "cannot promote short-circuiting || operator")
      }
      unknown tmp[581409] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[581410] "maybe param" "temp"
      unknown call_tmp[747306] "expr temp" "maybe param" "maybe type" "temp"
      (747309 'move' call_tmp[747306](435112 call isTrue tmp[435111]))
      (581415 'move' tmp[581410](581413 call _cond_test call_tmp[747306]))
      if tmp[581410]
      {
        (581420 'move' tmp[581409](581417 '_paramFoldLogical' tmp[581410] 1))
      }
      {
        unknown tmp[435132] "maybe param" "temp"
        (435143 'move' tmp[435132](303769 call isDomain tmpIter[303613]))
        unknown call_tmp[747311] "expr temp" "maybe param" "maybe type" "temp"
        (747314 'move' call_tmp[747311](435145 call _cond_invalid tmp[435132]))
        if call_tmp[747311]
        {
          (435148 call compilerError "cannot promote short-circuiting || operator")
        }
        unknown tmp[581382] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[581383] "maybe param" "temp"
        unknown call_tmp[747316] "expr temp" "maybe param" "maybe type" "temp"
        (747319 'move' call_tmp[747316](435133 call isTrue tmp[435132]))
        (581388 'move' tmp[581383](581386 call _cond_test call_tmp[747316]))
        if tmp[581383]
        {
          (581393 'move' tmp[581382](581390 '_paramFoldLogical' tmp[581383] 1))
        }
        {
          unknown tmp[581395] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[747321] "expr temp" "maybe param" "maybe type" "temp"
          (747324 'move' call_tmp[747321](303772 call isArray tmpIter[303613]))
          (581397 'move' tmp[581395](435137 call isTrue call_tmp[747321]))
          (581402 'move' tmp[581382](581399 '_paramFoldLogical' tmp[581383] tmp[581395]))
        }
        unknown tmp[581422] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (581424 'move' tmp[581422](435116 call isTrue tmp[581382]))
        (581429 'move' tmp[581409](581426 '_paramFoldLogical' tmp[581410] tmp[581422]))
      }
      (303779 'move' isRngDomArr[303764] tmp[581409])
      if isRngDomArr[303764]
      {
        const _coforallCount[303631] "const" "end count" "temp"
        (303700 'move' _coforallCount[303631](303697 call _endCountAlloc 1))
        unknown numTasks[303632] "temp"
        (303684 'move' numTasks[303632](303680 call size _mt[243] tmpIter[303613]))
        (303675 call _upEndCount _coforallCount[303631] 1 numTasks[303632])
        (491451 'end of statement')
        (303672 call chpl_resetTaskSpawn numTasks[303632])
        (491452 'end of statement')
        unknown _indexOfInterest[303639] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[303640] "expr temp" "temp"
        (303649 'move' _iterator[303640](303647 call _getIterator tmpIter[303613]))
        Defer
        {
          {
            (303665 call _freeIterator _iterator[303640])
          }
        }
        { scopeless type
          (303654 'move' _indexOfInterest[303639](303651 call iteratorIndex _iterator[303640]))
        }
        ForLoop[303641]
        {
          unknown tid[303658] "coforall index var" "index var" "insert auto destroy"
          (491454 'end of statement')
          (303660 'move' tid[303658] _indexOfInterest[303639])
          (491455 'end of statement' tid[303658])
          {
            {
              unknown call_tmp[747330] "maybe param" "maybe type" "temp"
              (747333 'move' call_tmp[747330](303622 call(406713 call (partial) _computeChunk _mt[243] this[304423]) tid[303658] chunkSize[303577] trailing[303588]))
              unknown chunk[303620] "dead at end of block" "insert auto destroy"
              (550037 'init var' chunk[303620] call_tmp[747330])
              (303627 'end of statement' tid[303658] chunkSize[303577] trailing[303588])
              unknown yret[539495] "YVV" "temp"
              (539498 'move' yret[539495](539497 'addr of' chunk[303620]))
              (539500 yield yret[539495])
              (491460 'end of statement' chunk[303620])
            }
            (303634 call _downEndCount _coforallCount[303631] nil[44])
            (303633 'coforall loop')
          }
          label _continueLabel[303644]
          _indexOfInterest[303639]
          _iterator[303640]
        }
        label _breakLabel[303645]
        Defer
        {
          {
            (303687 call _endCountFree _coforallCount[303631])
          }
        }
        (303692 call _waitEndCount _coforallCount[303631] 1 numTasks[303632])
      }
      {
        const _coforallCount[303704] "const" "end count" "temp"
        (303761 'move' _coforallCount[303704](303758 call _endCountAlloc 1))
        unknown _indexOfInterest[303712] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[303713] "expr temp" "temp"
        (303722 'move' _iterator[303713](303720 call _getIterator tmpIter[303613]))
        Defer
        {
          {
            (303738 call _freeIterator _iterator[303713])
          }
        }
        { scopeless type
          (303727 'move' _indexOfInterest[303712](303724 call iteratorIndex _iterator[303713]))
        }
        ForLoop[303714]
        {
          unknown tid[303731] "coforall index var" "index var" "insert auto destroy"
          (491466 'end of statement')
          (303733 'move' tid[303731] _indexOfInterest[303712])
          (491467 'end of statement' tid[303731])
          (303745 call _upEndCount _coforallCount[303704] 1)
          (491469 'end of statement')
          {
            {
              unknown call_tmp[747337] "maybe param" "maybe type" "temp"
              (747340 'move' call_tmp[747337](303604 call(406705 call (partial) _computeChunk _mt[243] this[304423]) tid[303731] chunkSize[303577] trailing[303588]))
              unknown chunk[303605] "dead at end of block" "insert auto destroy"
              (550039 'init var' chunk[303605] call_tmp[747337])
              (303608 'end of statement' tid[303731] chunkSize[303577] trailing[303588])
              unknown yret[539502] "YVV" "temp"
              (539505 'move' yret[539502](539504 'addr of' chunk[303605]))
              (539507 yield yret[539502])
              (491473 'end of statement' chunk[303605])
            }
            (303707 call _downEndCount _coforallCount[303704] nil[44])
            (303706 'coforall loop')
          }
          label _continueLabel[303717]
          _indexOfInterest[303712]
          _iterator[303713]
        }
        label _breakLabel[303718]
        Defer
        {
          {
            (303749 call _endCountFree _coforallCount[303704])
          }
        }
        (303754 call _waitEndCount _coforallCount[303704] 1)
      }
    }
    (539493 return ret[539491])
  }
  where {
    (303536 call == tag[303527] leader[447])
  }
  function list[304193](?).these[303790](arg _mt[304429]:_MT[238], arg this[304427]:list[304193](?), param arg tag[303788]:_any[178](?), arg followThis[303792]:_any[178](?)) ref : _unknown[51] "iterator fn" "method" "primary method" "no doc" "no return value for void"
  {
    unknown ret[539511] "RVV" "temp"
    {
      unknown _indexOfInterest[303812] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[303813] "expr temp" "temp"
      unknown call_tmp[747342] "expr temp" "maybe param" "maybe type" "temp"
      (747345 'move' call_tmp[747342](303805 call followThis[303792] 0))
      (303822 'move' _iterator[303813](303820 call _getIterator call_tmp[747342]))
      Defer
      {
        {
          (303839 call _freeIterator _iterator[303813])
        }
      }
      { scopeless type
        (303828 'move' _indexOfInterest[303812](303825 call iteratorIndex _iterator[303813]))
      }
      ForLoop[303814]
      {
        unknown i[303832] "index var" "insert auto destroy"
        (491479 'end of statement')
        (303834 'move' i[303832] _indexOfInterest[303812])
        (491480 'end of statement' i[303832])
        unknown yret[539515] "YVV" "temp"
        unknown call_tmp[747347] "expr temp" "maybe param" "maybe type" "temp"
        (747350 'move' call_tmp[747347](303809 call this[304427] i[303832]))
        (539518 'move' yret[539515](539517 'addr of' call_tmp[747347]))
        (539520 yield yret[539515])
        (491482 'end of statement' i[303832])
        label _continueLabel[303817]
        _indexOfInterest[303812]
        _iterator[303813]
      }
      label _breakLabel[303818]
    }
    (539513 return ret[539511])
  }
  where {
    (303799 call == tag[303788] follower[449])
  }
  function list[304193](?).readWriteThis[303856](arg _mt[304433]:_MT[238], arg this[304431]:list[304193](?), arg ch[303853]:channel[237730](?)) : _unknown[51] throws "method" "primary method" "no return value for void"
  {
    (303860 call(406726 call (partial) _enter _mt[243] this[304431]))
    (491484 'end of statement')
    (303865 call <~> ch[303853] "[")
    (491485 'end of statement')
    {
      unknown _indexOfInterest[303887] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[303888] "expr temp" "temp"
      unknown call_tmp[747356] "expr temp" "maybe param" "maybe type" "temp"
      (747359 'move' call_tmp[747356](406738 call _size _mt[243] this[304431]))
      unknown call_tmp[747361] "expr temp" "maybe param" "maybe type" "temp"
      (747364 'move' call_tmp[747361](303902 call - call_tmp[747356] 2))
      unknown call_tmp[747366] "expr temp" "maybe param" "maybe type" "temp"
      (747369 'move' call_tmp[747366](303905 call chpl_direct_range_iter 0 call_tmp[747361] 1))
      (303897 'move' _iterator[303888](303895 call _getIterator call_tmp[747366]))
      Defer
      {
        {
          (303921 call _freeIterator _iterator[303888])
        }
      }
      { scopeless type
        (303910 'move' _indexOfInterest[303887](303907 call iteratorIndex _iterator[303888]))
      }
      ForLoop[303889]
      {
        unknown i[303914] "index var" "insert auto destroy"
        (491487 'end of statement')
        (303916 'move' i[303914] _indexOfInterest[303887])
        (491488 'end of statement' i[303914])
        unknown call_tmp[747373] "expr temp" "maybe param" "maybe type" "temp"
        (747376 'move' call_tmp[747373](303880 call(406732 call (partial) _getRef _mt[243] this[304431]) i[303914]))
        unknown call_tmp[747378] "expr temp" "maybe param" "maybe type" "temp"
        (747381 'move' call_tmp[747378](303881 call <~> ch[303853] call_tmp[747373]))
        (303884 call <~> call_tmp[747378] ", ")
        (491490 'end of statement' i[303914])
        label _continueLabel[303892]
        _indexOfInterest[303887]
        _iterator[303888]
      }
      label _breakLabel[303893]
    }
    unknown call_tmp[747385] "expr temp" "maybe param" "maybe type" "temp"
    (747388 'move' call_tmp[747385](406743 call _size _mt[243] this[304431]))
    unknown call_tmp[747390] "expr temp" "maybe param" "maybe type" "temp"
    (747393 'move' call_tmp[747390](303930 call > call_tmp[747385] 0))
    unknown call_tmp[747395] "expr temp" "maybe param" "maybe type" "temp"
    (747398 'move' call_tmp[747395](303943 call _cond_test call_tmp[747390]))
    if call_tmp[747395]
    {
      unknown call_tmp[747404] "expr temp" "maybe param" "maybe type" "temp"
      (747407 'move' call_tmp[747404](406753 call _size _mt[243] this[304431]))
      unknown call_tmp[747409] "expr temp" "maybe param" "maybe type" "temp"
      (747412 'move' call_tmp[747409](303936 call - call_tmp[747404] 1))
      unknown call_tmp[747414] "expr temp" "maybe param" "maybe type" "temp"
      (747417 'move' call_tmp[747414](303939 call(406748 call (partial) _getRef _mt[243] this[304431]) call_tmp[747409]))
      (303940 call <~> ch[303853] call_tmp[747414])
    }
    (303950 call <~> ch[303853] "]")
    (491493 'end of statement')
    (303955 call(406758 call (partial) _leave _mt[243] this[304431]))
    (539522 return _void[55])
  }
  function list[304193](?).isEmpty[303961](arg _mt[304437]:_MT[238], const arg this[304435]:list[304193](?)) : _unknown[51] "method" "primary method"
  {
    unknown ret[539526] "RVV" "temp"
    (303966 call(406762 call (partial) _enter _mt[243] this[304435]))
    (491495 'end of statement')
    unknown call_tmp[747425] "expr temp" "maybe param" "maybe type" "temp"
    (747428 'move' call_tmp[747425](406767 call _size _mt[243] this[304435]))
    unknown call_tmp[747430] "maybe param" "maybe type" "temp"
    (747433 'move' call_tmp[747430](303971 call == call_tmp[747425] 0))
    unknown result[303973] "dead at end of block" "insert auto destroy"
    (550041 'init var' result[303973] call_tmp[747430])
    (303976 'end of statement')
    (303979 call(406771 call (partial) _leave _mt[243] this[304435]))
    (491496 'end of statement')
    (539532 'move' ret[539526](539531 'coerce' result[303973] bool[10]))
    gotoReturn _end_isEmpty[539524] _end_isEmpty[539524]
    (491497 'end of statement' result[303973])
    label _end_isEmpty[539524]
    (539528 return ret[539526])
  }
  { scopeless type
    bool[10]
  }
  function list[304193](?).size[303989](arg _mt[304441]:_MT[238], const arg this[304439]:list[304193](?)) : _unknown[51] "inline" "method" "primary method" "no parens"
  {
    unknown ret[539538] "RVV" "temp"
    unknown result[303992] "dead at end of block" "insert auto destroy"
    (550043 'init var' result[303992] 0)
    (303995 'end of statement')
    const tmp[304015] "const" "temp"
    unknown call_tmp[747437] "expr temp" "maybe param" "maybe type" "temp"
    (747440 'move' call_tmp[747437](304012 '_wide_get_locale' this[304439]))
    (304017 'move' tmp[304015](304013 'deref' call_tmp[747437]))
    {
      {
        (304000 call(406777 call (partial) _enter _mt[243] this[304439]))
        (491499 'end of statement')
        unknown call_tmp[747446] "expr temp" "maybe param" "maybe type" "temp"
        (747449 'move' call_tmp[747446](406783 call _size _mt[243] this[304439]))
        (304005 call = result[303992] call_tmp[747446])
        (491500 'end of statement' result[303992])
        (304010 call(406787 call (partial) _leave _mt[243] this[304439]))
      }
      (304020 'on block' 0 tmp[304015])
    }
    (539543 'move' ret[539538](539542 'deref' result[303992]))
    gotoReturn _end_size[539536] _end_size[539536]
    (491503 'end of statement' result[303992])
    label _end_size[539536]
    (539540 return ret[539538])
  }
  function list[304193](?).indices[304030](arg _mt[304445]:_MT[238], arg this[304443]:list[304193](?)) : _unknown[51] "method" "primary method" "no parens"
  {
    unknown ret[539549] "RVV" "temp"
    unknown call_tmp[747455] "expr temp" "maybe param" "maybe type" "temp"
    (747458 'move' call_tmp[747455](304034 call size _mt[243] this[304443]))
    unknown call_tmp[747460] "expr temp" "maybe param" "maybe type" "temp"
    (747463 'move' call_tmp[747460](304038 call - call_tmp[747455] 1))
    unknown call_tmp[747465] "expr temp" "maybe param" "maybe type" "temp"
    (747468 'move' call_tmp[747465](304040 call chpl_build_bounded_range 0 call_tmp[747460]))
    (539554 'move' ret[539549](539553 'deref' call_tmp[747465]))
    (539551 return ret[539549])
  }
  function list[304193](?).toArray[304049](arg _mt[304449]:_MT[238], const arg this[304447]:list[304193](?)) : _unknown[51] "method" "primary method"
  {
    unknown ret[539558] "RVV" "temp"
    unknown tmp[435153] "maybe param" "temp"
    unknown call_tmp[747472] "expr temp" "maybe param" "maybe type" "temp"
    (747475 'move' call_tmp[747472](406798 call eltType _mt[243] this[304447]))
    (435164 'move' tmp[435153](304058 call isNonNilableClass call_tmp[747472]))
    unknown call_tmp[747477] "expr temp" "maybe param" "maybe type" "temp"
    (747480 'move' call_tmp[747477](435166 call _cond_invalid tmp[435153]))
    if call_tmp[747477]
    {
      (435169 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[581436] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[581437] "maybe param" "temp"
    unknown call_tmp[747482] "expr temp" "maybe param" "maybe type" "temp"
    (747485 'move' call_tmp[747482](435154 call isTrue tmp[435153]))
    (581442 'move' tmp[581437](581440 call _cond_test call_tmp[747482]))
    if tmp[581437]
    {
      unknown tmp[581444] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[747489] "expr temp" "maybe param" "maybe type" "temp"
      (747492 'move' call_tmp[747489](406803 call eltType _mt[243] this[304447]))
      unknown call_tmp[747494] "expr temp" "maybe param" "maybe type" "temp"
      (747497 'move' call_tmp[747494](304062 call isOwnedClass call_tmp[747489]))
      (581446 'move' tmp[581444](435157 call isTrue call_tmp[747494]))
      (581451 'move' tmp[581436](581448 '_paramFoldLogical' tmp[581437] tmp[581444]))
    }
    {
      (581456 'move' tmp[581436](581453 '_paramFoldLogical' tmp[581437] 0))
    }
    unknown call_tmp[747499] "expr temp" "maybe param" "maybe type" "temp"
    (747502 'move' call_tmp[747499](304107 call _cond_test tmp[581436]))
    if call_tmp[747499]
    {
      unknown call_tmp[747506] "expr temp" "maybe param" "maybe type" "temp"
      (747509 'move' call_tmp[747506](406808 call eltType _mt[243] this[304447]))
      unknown call_tmp[747511] "expr temp" "maybe param" "maybe type" "temp"
      (747514 'move' call_tmp[747511](304103 call _cast string[26] call_tmp[747506]))
      (304105 call compilerError "toArray() method is not available on a 'list'" " with elements of a non-nilable owned type, here: " call_tmp[747511])
    }
    unknown result[304125] "dead at end of block" "insert auto destroy" "unsafe"
    unknown call_tmp[747516] "expr temp" "maybe param" "maybe type" "temp"
    (747519 'move' call_tmp[747516](304114 call chpl_build_low_bounded_range 0))
    unknown call_tmp[747523] "expr temp" "maybe param" "maybe type" "temp"
    (747526 'move' call_tmp[747523](406813 call _size _mt[243] this[304447]))
    unknown call_tmp[747528] "expr temp" "maybe param" "maybe type" "temp"
    (747531 'move' call_tmp[747528](304117 call # call_tmp[747516] call_tmp[747523]))
    unknown call_tmp[747533] "expr temp" "maybe param" "maybe type" "temp"
    (747536 'move' call_tmp[747533](304121 call chpl__ensureDomainExpr call_tmp[747528]))
    unknown call_tmp[747540] "expr temp" "maybe param" "maybe type" "temp"
    (747543 'move' call_tmp[747540](406818 call eltType _mt[243] this[304447]))
    unknown call_tmp[747545] "expr temp" "maybe param" "maybe type" "temp"
    (747548 'move' call_tmp[747545](304123 call chpl__buildArrayRuntimeType call_tmp[747533] call_tmp[747540]))
    (550045 'default init var' result[304125] call_tmp[747545])
    (304128 'end of statement')
    const tmp[304178] "const" "temp"
    unknown call_tmp[747550] "expr temp" "maybe param" "maybe type" "temp"
    (747553 'move' call_tmp[747550](304175 '_wide_get_locale' this[304447]))
    (304180 'move' tmp[304178](304176 'deref' call_tmp[747550]))
    {
      {
        (304132 call(406823 call (partial) _enter _mt[243] this[304447]))
        (491508 'end of statement')
        unknown tmp[304162] "dead at end of block" "insert auto destroy"
        function chpl__loopexpr_iter10[583202](arg iterator[583204]:_any[178](?), arg this[583340]:list[304193](?)) : _unknown[51] "iterator fn"
        {
          unknown ret[583351] "RVV" "temp"
          {
            unknown _indexOfInterest[583209] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[583210] "expr temp" "temp"
            (583219 'move' _iterator[583210](583217 call _getIterator iterator[583204]))
            Defer
            {
              {
                (583233 call _freeIterator _iterator[583210])
              }
            }
            { scopeless type
              (583224 'move' _indexOfInterest[583209](583221 call iteratorIndex _iterator[583210]))
            }
            ForLoop[583211] for-expr
            {
              unknown i[304160] "index var" "insert auto destroy" "no doc"
              (583344 'end of statement')
              (583228 'move' i[304160] _indexOfInterest[583209])
              (583345 'end of statement' i[304160])
              {
                {
                  unknown yret[583355] "YVV" "temp"
                  unknown call_tmp[583364] "expr temp" "maybe param" "maybe type" "temp"
                  (583367 'move' call_tmp[583364](304157 call(406843 call (partial) _getRef _mt[243] this[583340]) i[304160]))
                  (583358 'move' yret[583355](583357 'deref' call_tmp[583364]))
                  (583360 yield yret[583355])
                  (583347 'end of statement' i[304160])
                }
              }
              label _continueLabel[583214]
              _indexOfInterest[583209]
              _iterator[583210]
            }
            label _breakLabel[583215]
          }
          (583353 return ret[583351])
        }
        function chpl__loopexpr_iter10[583240](param arg tag[583244]:iterKind[453], arg iterator[583247]:_any[178](?), arg this[583268]:list[304193](?)) : _unknown[51] "fn returns iterator"
        {
          unknown ret[583394] "RVV" "temp"
          const _leaderIterator[583259] "const" "expr temp" "temp"
          (583264 'move' _leaderIterator[583259](583261 call _toLeader iterator[583247]))
          (583399 'move' ret[583394](583398 'deref' _leaderIterator[583259]))
          (583396 return ret[583394])
        }
        where {
          unknown tmp[583370] "maybe param" "temp"
          (583381 'move' tmp[583370](583249 call == tag[583244] leader[447]))
          unknown call_tmp[583428] "expr temp" "maybe param" "maybe type" "temp"
          (583431 'move' call_tmp[583428](583383 call _cond_invalid tmp[583370]))
          if call_tmp[583428]
          {
            (583386 call compilerError "cannot promote short-circuiting && operator")
          }
          unknown tmp[583401] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[583402] "maybe param" "temp"
          unknown call_tmp[583433] "expr temp" "maybe param" "maybe type" "temp"
          (583436 'move' call_tmp[583433](583371 call isTrue tmp[583370]))
          (583407 'move' tmp[583402](583405 call _cond_test call_tmp[583433]))
          if tmp[583402]
          {
            unknown tmp[583409] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[583438] "expr temp" "maybe param" "maybe type" "temp"
            (583441 'move' call_tmp[583438](583253 'call resolves' "_toLeader" iterator[583247]))
            (583411 'move' tmp[583409](583374 call isTrue call_tmp[583438]))
            (583416 'move' tmp[583401](583413 '_paramFoldLogical' tmp[583402] tmp[583409]))
          }
          {
            (583421 'move' tmp[583401](583418 '_paramFoldLogical' tmp[583402] 0))
          }
          (748428 call chpl_statementLevelSymbol tmp[583401])
        }
        function chpl__loopexpr_iter10[583270](param arg tag[583274]:iterKind[453], arg followThis[583277]:_any[178](?), arg iterator[583279]:_any[178](?), arg this[583338]:list[304193](?)) : _unknown[51] "iterator fn"
        {
          unknown ret[583452] "RVV" "temp"
          const _followerIterator[583286] "const" "expr temp" "temp"
          (583292 'move' _followerIterator[583286](583288 call _toFollower iterator[583279] followThis[583277]))
          {
            unknown _indexOfInterest[583307] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[583308] "expr temp" "temp"
            (583317 'move' _iterator[583308](583315 call _getIterator _followerIterator[583286]))
            Defer
            {
              {
                (583331 call _freeIterator _iterator[583308])
              }
            }
            { scopeless type
              (583322 'move' _indexOfInterest[583307](583319 call iteratorIndex _iterator[583308]))
            }
            ForLoop[583309] lowered-forall for-expr
            {
              unknown i[583294] "index var" "insert auto destroy" "no doc"
              (583445 'end of statement')
              (583326 'move' i[583294] _indexOfInterest[583307])
              (583446 'end of statement' i[583294])
              {
                {
                  unknown yret[583456] "YVV" "temp"
                  unknown call_tmp[583465] "expr temp" "maybe param" "maybe type" "temp"
                  (583468 'move' call_tmp[583465](583303 call(583300 call (partial) _getRef _mt[243] this[583338]) i[583294]))
                  (583459 'move' yret[583456](583458 'deref' call_tmp[583465]))
                  (583461 yield yret[583456])
                  (583448 'end of statement' i[583294])
                }
              }
              label _continueLabel[583312]
              _indexOfInterest[583307]
              _iterator[583308]
            }
            label _breakLabel[583313]
          }
          (583454 return ret[583452])
        }
        where {
          (583282 call == tag[583274] follower[449])
        }
        function chpl__forallexpr10[583182](arg iterExpr[583185]:_any[178](?), arg this[583189]:list[304193](?)) : _unknown[51] "compiler generated" "compiler nested function" "maybe array type" "fn returns iterator"
        {
          unknown ret[583473] "RVV" "temp"
          unknown _iterator[583192] "expr temp" "maybe ref" "temp"
          (583194 'move' _iterator[583192] iterExpr[583185])
          unknown call_tmp[583480] "expr temp" "maybe param" "maybe type" "temp"
          (583483 'move' call_tmp[583480](583197 call chpl__loopexpr_iter10 _iterator[583192] this[583189]))
          (583478 'move' ret[583473](583477 'deref' call_tmp[583480]))
          (583475 return ret[583473])
        }
        unknown call_tmp[583485] "expr temp" "maybe param" "maybe type" "temp"
        (583488 'move' call_tmp[583485](304149 call chpl_build_low_bounded_range 0))
        unknown call_tmp[583492] "expr temp" "maybe param" "maybe type" "temp"
        (583495 'move' call_tmp[583492](406839 call _size _mt[243] this[304447]))
        unknown call_tmp[583497] "expr temp" "maybe param" "maybe type" "temp"
        (583500 'move' call_tmp[583497](304152 call # call_tmp[583485] call_tmp[583492]))
        unknown call_tmp[583502] "maybe param" "maybe type" "temp"
        (583505 'move' call_tmp[583502](583187 call chpl__forallexpr10 call_tmp[583497] this[304447]))
        (583509 'iterator record set shape' call_tmp[583502] call_tmp[583497] 0)
        unknown call_tmp[747557] "expr temp" "maybe param" "maybe type" "temp"
        (747560 'move' call_tmp[747557](304136 call chpl_build_low_bounded_range 0))
        unknown call_tmp[747564] "expr temp" "maybe param" "maybe type" "temp"
        (747567 'move' call_tmp[747564](406828 call _size _mt[243] this[304447]))
        unknown call_tmp[747569] "expr temp" "maybe param" "maybe type" "temp"
        (747572 'move' call_tmp[747569](304139 call # call_tmp[747557] call_tmp[747564]))
        unknown call_tmp[747574] "expr temp" "maybe param" "maybe type" "temp"
        (747577 'move' call_tmp[747574](304143 call chpl__ensureDomainExpr call_tmp[747569]))
        unknown call_tmp[747581] "expr temp" "maybe param" "maybe type" "temp"
        (747584 'move' call_tmp[747581](406833 call eltType _mt[243] this[304447]))
        unknown call_tmp[747586] "maybe param" "maybe type" "temp"
        (747589 'move' call_tmp[747586](304145 call chpl__buildArrayRuntimeType call_tmp[747574] call_tmp[747581]))
        (550047 'init var' tmp[304162] call_tmp[583502] call_tmp[747586])
        (304165 'end of statement')
        (304168 call = result[304125] tmp[304162])
        (491509 'end of statement' result[304125] tmp[304162])
        (304173 call(406850 call (partial) _leave _mt[243] this[304447]))
      }
      (304183 'on block' 0 tmp[304178])
    }
    unknown call_tmp[747595] "expr temp" "maybe param" "maybe type" "temp"
    (747598 'move' call_tmp[747595](539564 call eltType _mt[243] this[304447]))
    (539567 call chpl__checkEltTypeMatch result[304125] call_tmp[747595])
    (539569 'move' ret[539558] result[304125])
    gotoReturn _end_toArray[539556] _end_toArray[539556]
    (491513 'end of statement' result[304125])
    label _end_toArray[539556]
    (539560 return ret[539558])
  }
  function list[304193](?).eltType[930143](arg _mt[930145]:_MT[238], arg this[930147]:list[304193](?)) type : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[930166] "RVV" "temp" "type variable"
    unknown call_tmp[930180] "expr temp" "maybe param" "maybe type" "temp"
    (930183 'move' call_tmp[930180](930152 'is bound' this[930147] c"eltType"))
    if call_tmp[930180]
    {
      unknown call_tmp[930185] "expr temp" "maybe param" "maybe type" "temp"
      (930188 'move' call_tmp[930185](930151 '.v' this[930147] c"eltType"))
      (930171 'move' ret[930166](930170 'deref' call_tmp[930185]))
      gotoReturn _end_eltType[930164] _end_eltType[930164]
    }
    {
      (930176 'move' ret[930166](930175 'deref' _uninstantiated[258]))
      gotoReturn _end_eltType[930164] _end_eltType[930164]
    }
    label _end_eltType[930164]
    (930168 return ret[930166])
  }
  function list[304193](?).eltType[930190](arg _mt[930192]:_MT[238], arg this[930194]:list[304193](?)) type : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[930213] "RVV" "temp" "type variable"
    unknown call_tmp[930227] "expr temp" "maybe param" "maybe type" "temp"
    (930230 'move' call_tmp[930227](930199 'is bound' this[930194] c"eltType"))
    if call_tmp[930227]
    {
      unknown call_tmp[930232] "expr temp" "maybe param" "maybe type" "temp"
      (930235 'move' call_tmp[930232](930198 '.v' this[930194] c"eltType"))
      (930218 'move' ret[930213](930217 'deref' call_tmp[930232]))
      gotoReturn _end_eltType[930211] _end_eltType[930211]
    }
    {
      (930223 'move' ret[930213](930222 'deref' _uninstantiated[258]))
      gotoReturn _end_eltType[930211] _end_eltType[930211]
    }
    label _end_eltType[930211]
    (930215 return ret[930213])
  }
  function list[304193](?).parSafe[930237](arg _mt[930239]:_MT[238], arg this[930241]:list[304193](?)) param : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[930260] "RVV" "param" "temp"
    unknown call_tmp[930274] "expr temp" "maybe param" "maybe type" "temp"
    (930277 'move' call_tmp[930274](930246 'is bound' this[930241] c"parSafe"))
    if call_tmp[930274]
    {
      unknown call_tmp[930279] "expr temp" "maybe param" "maybe type" "temp"
      (930282 'move' call_tmp[930279](930245 '.' this[930241] c"parSafe"))
      (930265 'move' ret[930260](930264 'deref' call_tmp[930279]))
      gotoReturn _end_parSafe[930258] _end_parSafe[930258]
    }
    {
      (930270 'move' ret[930260](930269 'deref' ?[260]))
      gotoReturn _end_parSafe[930258] _end_parSafe[930258]
    }
    label _end_parSafe[930258]
    (930262 return ret[930260])
  }
  function list[304193](?).parSafe[930284](arg _mt[930286]:_MT[238], arg this[930288]:list[304193](?)) param : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[930307] "RVV" "param" "temp"
    unknown call_tmp[930321] "expr temp" "maybe param" "maybe type" "temp"
    (930324 'move' call_tmp[930321](930293 'is bound' this[930288] c"parSafe"))
    if call_tmp[930321]
    {
      unknown call_tmp[930326] "expr temp" "maybe param" "maybe type" "temp"
      (930329 'move' call_tmp[930326](930292 '.' this[930288] c"parSafe"))
      (930312 'move' ret[930307](930311 'deref' call_tmp[930326]))
      gotoReturn _end_parSafe[930305] _end_parSafe[930305]
    }
    {
      (930317 'move' ret[930307](930316 'deref' ?[260]))
      gotoReturn _end_parSafe[930305] _end_parSafe[930305]
    }
    label _end_parSafe[930305]
    (930309 return ret[930307])
  }
  function list[304193](?)._size[930331](arg _mt[930333]:_MT[238], ref arg this[930335]:list[304193](?)) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[930345] "RVV" "temp"
    unknown call_tmp[930352] "expr temp" "maybe param" "maybe type" "temp"
    (930355 'move' call_tmp[930352](930339 '.' this[930335] c"_size"))
    (930350 'move' ret[930345](930349 'addr of' call_tmp[930352]))
    (930347 return ret[930345])
  }
  function list[304193](?)._lock$[930357](arg _mt[930359]:_MT[238], ref arg this[930361]:list[304193](?)) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[930371] "RVV" "temp"
    unknown call_tmp[930378] "expr temp" "maybe param" "maybe type" "temp"
    (930381 'move' call_tmp[930378](930365 '.' this[930361] c"_lock$"))
    (930376 'move' ret[930371](930375 'addr of' call_tmp[930378]))
    (930373 return ret[930371])
  }
  function list[304193](?)._arrays[930383](arg _mt[930385]:_MT[238], ref arg this[930387]:list[304193](?)) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[930397] "RVV" "temp"
    unknown call_tmp[930404] "expr temp" "maybe param" "maybe type" "temp"
    (930407 'move' call_tmp[930404](930391 '.' this[930387] c"_arrays"))
    (930402 'move' ret[930397](930401 'addr of' call_tmp[930404]))
    (930399 return ret[930397])
  }
  function list[304193](?)._arrayCapacity[930409](arg _mt[930411]:_MT[238], ref arg this[930413]:list[304193](?)) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[930423] "RVV" "temp"
    unknown call_tmp[930430] "expr temp" "maybe param" "maybe type" "temp"
    (930433 'move' call_tmp[930430](930417 '.' this[930413] c"_arrayCapacity"))
    (930428 'move' ret[930423](930427 'addr of' call_tmp[930430]))
    (930425 return ret[930423])
  }
  function list[304193](?)._totalCapacity[930435](arg _mt[930437]:_MT[238], ref arg this[930439]:list[304193](?)) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[930449] "RVV" "temp"
    unknown call_tmp[930456] "expr temp" "maybe param" "maybe type" "temp"
    (930459 'move' call_tmp[930456](930443 '.' this[930439] c"_totalCapacity"))
    (930454 'move' ret[930449](930453 'addr of' call_tmp[930456]))
    (930451 return ret[930449])
  }
  function list[304193](?)._dummyFieldToForceBorrowChecking[930461](arg _mt[930463]:_MT[238], ref arg this[930465]:list[304193](?)) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[930475] "RVV" "temp"
    unknown call_tmp[930482] "expr temp" "maybe param" "maybe type" "temp"
    (930485 'move' call_tmp[930482](930469 '.' this[930465] c"_dummyFieldToForceBorrowChecking"))
    (930480 'move' ret[930475](930479 'addr of' call_tmp[930482]))
    (930477 return ret[930475])
  }
  function list[304193](?).writeThis[930487](arg _mt[930491]:_MT[238], arg this[930489]:list[304193](?), arg f[930490]:_any[178](?)) : void[4] throws "compiler generated" "inline" "last resort" "method" "primary method"
  {
    (930500 call(930496 call (partial) readWriteThis _mt[243] this[930489]) f[930490])
    (930503 return _void[55])
  }
  function list[304193](?).readThis[930507](arg _mt[930511]:_MT[238], arg this[930509]:list[304193](?), arg f[930510]:_any[178](?)) : void[4] throws "compiler generated" "inline" "last resort" "method" "primary method"
  {
    (930519 call(930515 call (partial) readWriteThis _mt[243] this[930509]) f[930510])
    (930523 return _void[55])
  }
  function chpl_fields_are_comparable[930539](arg _arg1[930541]:list[304193](?), arg _arg2[930542]:list[304193](?)) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[930621]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[930628] "expr temp" "maybe param" "maybe type" "temp"
    (930631 'move' call_tmp[930628](930545 call parSafe _mt[243] _arg1[930541]))
    unknown call_tmp[930633] "expr temp" "maybe param" "maybe type" "temp"
    (930636 'move' call_tmp[930633](930549 call parSafe _mt[243] _arg2[930542]))
    unknown call_tmp[930638] "expr temp" "maybe param" "maybe type" "temp"
    (930641 'move' call_tmp[930638](930553 'call resolves' c"<" call_tmp[930628] call_tmp[930633]))
    unknown call_tmp[930643] "expr temp" "maybe param" "maybe type" "temp"
    (930646 'move' call_tmp[930643](930555 call _size _mt[243] _arg1[930541]))
    unknown call_tmp[930648] "expr temp" "maybe param" "maybe type" "temp"
    (930651 'move' call_tmp[930648](930559 call _size _mt[243] _arg2[930542]))
    unknown call_tmp[930653] "expr temp" "maybe param" "maybe type" "temp"
    (930656 'move' call_tmp[930653](930563 'call resolves' c"<" call_tmp[930643] call_tmp[930648]))
    unknown call_tmp[930658] "expr temp" "maybe param" "maybe type" "temp"
    (930661 'move' call_tmp[930658](930565 call _lock$ _mt[243] _arg1[930541]))
    unknown call_tmp[930663] "expr temp" "maybe param" "maybe type" "temp"
    (930666 'move' call_tmp[930663](930569 call _lock$ _mt[243] _arg2[930542]))
    unknown call_tmp[930668] "expr temp" "maybe param" "maybe type" "temp"
    (930671 'move' call_tmp[930668](930573 'call resolves' c"<" call_tmp[930658] call_tmp[930663]))
    unknown call_tmp[930673] "expr temp" "maybe param" "maybe type" "temp"
    (930676 'move' call_tmp[930673](930575 call _arrays _mt[243] _arg1[930541]))
    unknown call_tmp[930678] "expr temp" "maybe param" "maybe type" "temp"
    (930681 'move' call_tmp[930678](930579 call _arrays _mt[243] _arg2[930542]))
    unknown call_tmp[930683] "expr temp" "maybe param" "maybe type" "temp"
    (930686 'move' call_tmp[930683](930583 'call resolves' c"<" call_tmp[930673] call_tmp[930678]))
    unknown call_tmp[930688] "expr temp" "maybe param" "maybe type" "temp"
    (930691 'move' call_tmp[930688](930585 call _arrayCapacity _mt[243] _arg1[930541]))
    unknown call_tmp[930693] "expr temp" "maybe param" "maybe type" "temp"
    (930696 'move' call_tmp[930693](930589 call _arrayCapacity _mt[243] _arg2[930542]))
    unknown call_tmp[930698] "expr temp" "maybe param" "maybe type" "temp"
    (930701 'move' call_tmp[930698](930593 'call resolves' c"<" call_tmp[930688] call_tmp[930693]))
    unknown call_tmp[930703] "expr temp" "maybe param" "maybe type" "temp"
    (930706 'move' call_tmp[930703](930595 call _totalCapacity _mt[243] _arg1[930541]))
    unknown call_tmp[930708] "expr temp" "maybe param" "maybe type" "temp"
    (930711 'move' call_tmp[930708](930599 call _totalCapacity _mt[243] _arg2[930542]))
    unknown call_tmp[930713] "expr temp" "maybe param" "maybe type" "temp"
    (930716 'move' call_tmp[930713](930603 'call resolves' c"<" call_tmp[930703] call_tmp[930708]))
    unknown call_tmp[930718] "expr temp" "maybe param" "maybe type" "temp"
    (930721 'move' call_tmp[930718](930605 call _dummyFieldToForceBorrowChecking _mt[243] _arg1[930541]))
    unknown call_tmp[930723] "expr temp" "maybe param" "maybe type" "temp"
    (930726 'move' call_tmp[930723](930609 call _dummyFieldToForceBorrowChecking _mt[243] _arg2[930542]))
    unknown call_tmp[930728] "expr temp" "maybe param" "maybe type" "temp"
    (930731 'move' call_tmp[930728](930613 'call resolves' c"<" call_tmp[930718] call_tmp[930723]))
    unknown call_tmp[930733] "expr temp" "maybe param" "maybe type" "temp"
    (930736 'move' call_tmp[930733](930615 '&' call_tmp[930638] call_tmp[930653] call_tmp[930668] call_tmp[930683] call_tmp[930698] call_tmp[930713] call_tmp[930728]))
    (930626 'move' ret[930621](930625 'deref' call_tmp[930733]))
    (930623 return ret[930621])
  }
  function <[930527](arg _arg1[930529]:list[304193](?), arg _arg2[930530]:list[304193](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[930960]:bool[10] "RVV" "temp"
    unknown call_tmp[931037] "expr temp" "maybe param" "maybe type" "temp"
    (931040 'move' call_tmp[931037](930744 call parSafe _mt[243] _arg1[930529]))
    unknown call_tmp[931042] "expr temp" "maybe param" "maybe type" "temp"
    (931045 'move' call_tmp[931042](930748 call parSafe _mt[243] _arg2[930530]))
    unknown call_tmp[931047] "expr temp" "maybe param" "maybe type" "temp"
    (931050 'move' call_tmp[931047](930752 call < call_tmp[931037] call_tmp[931042]))
    if call_tmp[931047]
    {
      (930965 'move' ret[930960](930964 'deref' 1))
      gotoReturn _end_<[930958] _end_<[930958]
    }
    unknown call_tmp[931052] "expr temp" "maybe param" "maybe type" "temp"
    (931055 'move' call_tmp[931052](930758 call parSafe _mt[243] _arg1[930529]))
    unknown call_tmp[931057] "expr temp" "maybe param" "maybe type" "temp"
    (931060 'move' call_tmp[931057](930762 call parSafe _mt[243] _arg2[930530]))
    unknown call_tmp[931062] "expr temp" "maybe param" "maybe type" "temp"
    (931065 'move' call_tmp[931062](930766 call > call_tmp[931052] call_tmp[931057]))
    if call_tmp[931062]
    {
      (930970 'move' ret[930960](930969 'deref' 0))
      gotoReturn _end_<[930958] _end_<[930958]
    }
    unknown call_tmp[931067] "expr temp" "maybe param" "maybe type" "temp"
    (931070 'move' call_tmp[931067](930772 call _size _mt[243] _arg1[930529]))
    unknown call_tmp[931072] "expr temp" "maybe param" "maybe type" "temp"
    (931075 'move' call_tmp[931072](930776 call _size _mt[243] _arg2[930530]))
    unknown call_tmp[931077] "expr temp" "maybe param" "maybe type" "temp"
    (931080 'move' call_tmp[931077](930780 call < call_tmp[931067] call_tmp[931072]))
    if call_tmp[931077]
    {
      (930975 'move' ret[930960](930974 'deref' 1))
      gotoReturn _end_<[930958] _end_<[930958]
    }
    unknown call_tmp[931082] "expr temp" "maybe param" "maybe type" "temp"
    (931085 'move' call_tmp[931082](930786 call _size _mt[243] _arg1[930529]))
    unknown call_tmp[931087] "expr temp" "maybe param" "maybe type" "temp"
    (931090 'move' call_tmp[931087](930790 call _size _mt[243] _arg2[930530]))
    unknown call_tmp[931092] "expr temp" "maybe param" "maybe type" "temp"
    (931095 'move' call_tmp[931092](930794 call > call_tmp[931082] call_tmp[931087]))
    if call_tmp[931092]
    {
      (930980 'move' ret[930960](930979 'deref' 0))
      gotoReturn _end_<[930958] _end_<[930958]
    }
    unknown call_tmp[931097] "expr temp" "maybe param" "maybe type" "temp"
    (931100 'move' call_tmp[931097](930800 call _lock$ _mt[243] _arg1[930529]))
    unknown call_tmp[931102] "expr temp" "maybe param" "maybe type" "temp"
    (931105 'move' call_tmp[931102](930804 call _lock$ _mt[243] _arg2[930530]))
    unknown call_tmp[931107] "expr temp" "maybe param" "maybe type" "temp"
    (931110 'move' call_tmp[931107](930808 call < call_tmp[931097] call_tmp[931102]))
    if call_tmp[931107]
    {
      (930985 'move' ret[930960](930984 'deref' 1))
      gotoReturn _end_<[930958] _end_<[930958]
    }
    unknown call_tmp[931112] "expr temp" "maybe param" "maybe type" "temp"
    (931115 'move' call_tmp[931112](930814 call _lock$ _mt[243] _arg1[930529]))
    unknown call_tmp[931117] "expr temp" "maybe param" "maybe type" "temp"
    (931120 'move' call_tmp[931117](930818 call _lock$ _mt[243] _arg2[930530]))
    unknown call_tmp[931122] "expr temp" "maybe param" "maybe type" "temp"
    (931125 'move' call_tmp[931122](930822 call > call_tmp[931112] call_tmp[931117]))
    if call_tmp[931122]
    {
      (930990 'move' ret[930960](930989 'deref' 0))
      gotoReturn _end_<[930958] _end_<[930958]
    }
    unknown call_tmp[931127] "expr temp" "maybe param" "maybe type" "temp"
    (931130 'move' call_tmp[931127](930828 call _arrays _mt[243] _arg1[930529]))
    unknown call_tmp[931132] "expr temp" "maybe param" "maybe type" "temp"
    (931135 'move' call_tmp[931132](930832 call _arrays _mt[243] _arg2[930530]))
    unknown call_tmp[931137] "expr temp" "maybe param" "maybe type" "temp"
    (931140 'move' call_tmp[931137](930836 call < call_tmp[931127] call_tmp[931132]))
    if call_tmp[931137]
    {
      (930995 'move' ret[930960](930994 'deref' 1))
      gotoReturn _end_<[930958] _end_<[930958]
    }
    unknown call_tmp[931142] "expr temp" "maybe param" "maybe type" "temp"
    (931145 'move' call_tmp[931142](930842 call _arrays _mt[243] _arg1[930529]))
    unknown call_tmp[931147] "expr temp" "maybe param" "maybe type" "temp"
    (931150 'move' call_tmp[931147](930846 call _arrays _mt[243] _arg2[930530]))
    unknown call_tmp[931152] "expr temp" "maybe param" "maybe type" "temp"
    (931155 'move' call_tmp[931152](930850 call > call_tmp[931142] call_tmp[931147]))
    if call_tmp[931152]
    {
      (931000 'move' ret[930960](930999 'deref' 0))
      gotoReturn _end_<[930958] _end_<[930958]
    }
    unknown call_tmp[931157] "expr temp" "maybe param" "maybe type" "temp"
    (931160 'move' call_tmp[931157](930856 call _arrayCapacity _mt[243] _arg1[930529]))
    unknown call_tmp[931162] "expr temp" "maybe param" "maybe type" "temp"
    (931165 'move' call_tmp[931162](930860 call _arrayCapacity _mt[243] _arg2[930530]))
    unknown call_tmp[931167] "expr temp" "maybe param" "maybe type" "temp"
    (931170 'move' call_tmp[931167](930864 call < call_tmp[931157] call_tmp[931162]))
    if call_tmp[931167]
    {
      (931005 'move' ret[930960](931004 'deref' 1))
      gotoReturn _end_<[930958] _end_<[930958]
    }
    unknown call_tmp[931172] "expr temp" "maybe param" "maybe type" "temp"
    (931175 'move' call_tmp[931172](930870 call _arrayCapacity _mt[243] _arg1[930529]))
    unknown call_tmp[931177] "expr temp" "maybe param" "maybe type" "temp"
    (931180 'move' call_tmp[931177](930874 call _arrayCapacity _mt[243] _arg2[930530]))
    unknown call_tmp[931182] "expr temp" "maybe param" "maybe type" "temp"
    (931185 'move' call_tmp[931182](930878 call > call_tmp[931172] call_tmp[931177]))
    if call_tmp[931182]
    {
      (931010 'move' ret[930960](931009 'deref' 0))
      gotoReturn _end_<[930958] _end_<[930958]
    }
    unknown call_tmp[931187] "expr temp" "maybe param" "maybe type" "temp"
    (931190 'move' call_tmp[931187](930884 call _totalCapacity _mt[243] _arg1[930529]))
    unknown call_tmp[931192] "expr temp" "maybe param" "maybe type" "temp"
    (931195 'move' call_tmp[931192](930888 call _totalCapacity _mt[243] _arg2[930530]))
    unknown call_tmp[931197] "expr temp" "maybe param" "maybe type" "temp"
    (931200 'move' call_tmp[931197](930892 call < call_tmp[931187] call_tmp[931192]))
    if call_tmp[931197]
    {
      (931015 'move' ret[930960](931014 'deref' 1))
      gotoReturn _end_<[930958] _end_<[930958]
    }
    unknown call_tmp[931202] "expr temp" "maybe param" "maybe type" "temp"
    (931205 'move' call_tmp[931202](930898 call _totalCapacity _mt[243] _arg1[930529]))
    unknown call_tmp[931207] "expr temp" "maybe param" "maybe type" "temp"
    (931210 'move' call_tmp[931207](930902 call _totalCapacity _mt[243] _arg2[930530]))
    unknown call_tmp[931212] "expr temp" "maybe param" "maybe type" "temp"
    (931215 'move' call_tmp[931212](930906 call > call_tmp[931202] call_tmp[931207]))
    if call_tmp[931212]
    {
      (931020 'move' ret[930960](931019 'deref' 0))
      gotoReturn _end_<[930958] _end_<[930958]
    }
    unknown call_tmp[931217] "expr temp" "maybe param" "maybe type" "temp"
    (931220 'move' call_tmp[931217](930912 call _dummyFieldToForceBorrowChecking _mt[243] _arg1[930529]))
    unknown call_tmp[931222] "expr temp" "maybe param" "maybe type" "temp"
    (931225 'move' call_tmp[931222](930916 call _dummyFieldToForceBorrowChecking _mt[243] _arg2[930530]))
    unknown call_tmp[931227] "expr temp" "maybe param" "maybe type" "temp"
    (931230 'move' call_tmp[931227](930920 call < call_tmp[931217] call_tmp[931222]))
    if call_tmp[931227]
    {
      (931025 'move' ret[930960](931024 'deref' 1))
      gotoReturn _end_<[930958] _end_<[930958]
    }
    unknown call_tmp[931232] "expr temp" "maybe param" "maybe type" "temp"
    (931235 'move' call_tmp[931232](930926 call _dummyFieldToForceBorrowChecking _mt[243] _arg1[930529]))
    unknown call_tmp[931237] "expr temp" "maybe param" "maybe type" "temp"
    (931240 'move' call_tmp[931237](930930 call _dummyFieldToForceBorrowChecking _mt[243] _arg2[930530]))
    unknown call_tmp[931242] "expr temp" "maybe param" "maybe type" "temp"
    (931245 'move' call_tmp[931242](930934 call > call_tmp[931232] call_tmp[931237]))
    if call_tmp[931242]
    {
      (931030 'move' ret[930960](931029 'deref' 0))
      gotoReturn _end_<[930958] _end_<[930958]
    }
    (931035 'move' ret[930960](931034 'deref' 0))
    label _end_<[930958]
    (930962 return ret[930960])
  }
  where {
    unknown call_tmp[931247] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (931250 'move' call_tmp[931247](930533 'typeof' _arg1[930529]))
    unknown call_tmp[931252] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (931255 'move' call_tmp[931252](930535 'typeof' _arg2[930530]))
    unknown call_tmp[931257] "expr temp" "maybe param" "maybe type" "temp"
    (931260 'move' call_tmp[931257](930537 call == call_tmp[931247] call_tmp[931252]))
    unknown call_tmp[931262] "expr temp" "maybe param" "maybe type" "temp"
    (931265 'move' call_tmp[931262](930738 call chpl_fields_are_comparable[930539] _arg1[930529] _arg2[930530]))
    (930742 '&' call_tmp[931257] call_tmp[931262])
  }
  function chpl_fields_are_comparable[931279](arg _arg1[931281]:list[304193](?), arg _arg2[931282]:list[304193](?)) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[931361]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[931368] "expr temp" "maybe param" "maybe type" "temp"
    (931371 'move' call_tmp[931368](931285 call parSafe _mt[243] _arg1[931281]))
    unknown call_tmp[931373] "expr temp" "maybe param" "maybe type" "temp"
    (931376 'move' call_tmp[931373](931289 call parSafe _mt[243] _arg2[931282]))
    unknown call_tmp[931378] "expr temp" "maybe param" "maybe type" "temp"
    (931381 'move' call_tmp[931378](931293 'call resolves' c"<=" call_tmp[931368] call_tmp[931373]))
    unknown call_tmp[931383] "expr temp" "maybe param" "maybe type" "temp"
    (931386 'move' call_tmp[931383](931295 call _size _mt[243] _arg1[931281]))
    unknown call_tmp[931388] "expr temp" "maybe param" "maybe type" "temp"
    (931391 'move' call_tmp[931388](931299 call _size _mt[243] _arg2[931282]))
    unknown call_tmp[931393] "expr temp" "maybe param" "maybe type" "temp"
    (931396 'move' call_tmp[931393](931303 'call resolves' c"<=" call_tmp[931383] call_tmp[931388]))
    unknown call_tmp[931398] "expr temp" "maybe param" "maybe type" "temp"
    (931401 'move' call_tmp[931398](931305 call _lock$ _mt[243] _arg1[931281]))
    unknown call_tmp[931403] "expr temp" "maybe param" "maybe type" "temp"
    (931406 'move' call_tmp[931403](931309 call _lock$ _mt[243] _arg2[931282]))
    unknown call_tmp[931408] "expr temp" "maybe param" "maybe type" "temp"
    (931411 'move' call_tmp[931408](931313 'call resolves' c"<=" call_tmp[931398] call_tmp[931403]))
    unknown call_tmp[931413] "expr temp" "maybe param" "maybe type" "temp"
    (931416 'move' call_tmp[931413](931315 call _arrays _mt[243] _arg1[931281]))
    unknown call_tmp[931418] "expr temp" "maybe param" "maybe type" "temp"
    (931421 'move' call_tmp[931418](931319 call _arrays _mt[243] _arg2[931282]))
    unknown call_tmp[931423] "expr temp" "maybe param" "maybe type" "temp"
    (931426 'move' call_tmp[931423](931323 'call resolves' c"<=" call_tmp[931413] call_tmp[931418]))
    unknown call_tmp[931428] "expr temp" "maybe param" "maybe type" "temp"
    (931431 'move' call_tmp[931428](931325 call _arrayCapacity _mt[243] _arg1[931281]))
    unknown call_tmp[931433] "expr temp" "maybe param" "maybe type" "temp"
    (931436 'move' call_tmp[931433](931329 call _arrayCapacity _mt[243] _arg2[931282]))
    unknown call_tmp[931438] "expr temp" "maybe param" "maybe type" "temp"
    (931441 'move' call_tmp[931438](931333 'call resolves' c"<=" call_tmp[931428] call_tmp[931433]))
    unknown call_tmp[931443] "expr temp" "maybe param" "maybe type" "temp"
    (931446 'move' call_tmp[931443](931335 call _totalCapacity _mt[243] _arg1[931281]))
    unknown call_tmp[931448] "expr temp" "maybe param" "maybe type" "temp"
    (931451 'move' call_tmp[931448](931339 call _totalCapacity _mt[243] _arg2[931282]))
    unknown call_tmp[931453] "expr temp" "maybe param" "maybe type" "temp"
    (931456 'move' call_tmp[931453](931343 'call resolves' c"<=" call_tmp[931443] call_tmp[931448]))
    unknown call_tmp[931458] "expr temp" "maybe param" "maybe type" "temp"
    (931461 'move' call_tmp[931458](931345 call _dummyFieldToForceBorrowChecking _mt[243] _arg1[931281]))
    unknown call_tmp[931463] "expr temp" "maybe param" "maybe type" "temp"
    (931466 'move' call_tmp[931463](931349 call _dummyFieldToForceBorrowChecking _mt[243] _arg2[931282]))
    unknown call_tmp[931468] "expr temp" "maybe param" "maybe type" "temp"
    (931471 'move' call_tmp[931468](931353 'call resolves' c"<=" call_tmp[931458] call_tmp[931463]))
    unknown call_tmp[931473] "expr temp" "maybe param" "maybe type" "temp"
    (931476 'move' call_tmp[931473](931355 '&' call_tmp[931378] call_tmp[931393] call_tmp[931408] call_tmp[931423] call_tmp[931438] call_tmp[931453] call_tmp[931468]))
    (931366 'move' ret[931361](931365 'deref' call_tmp[931473]))
    (931363 return ret[931361])
  }
  function <=[931267](arg _arg1[931269]:list[304193](?), arg _arg2[931270]:list[304193](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[931700]:bool[10] "RVV" "temp"
    unknown call_tmp[931777] "expr temp" "maybe param" "maybe type" "temp"
    (931780 'move' call_tmp[931777](931484 call parSafe _mt[243] _arg1[931269]))
    unknown call_tmp[931782] "expr temp" "maybe param" "maybe type" "temp"
    (931785 'move' call_tmp[931782](931488 call parSafe _mt[243] _arg2[931270]))
    unknown call_tmp[931787] "expr temp" "maybe param" "maybe type" "temp"
    (931790 'move' call_tmp[931787](931492 call < call_tmp[931777] call_tmp[931782]))
    if call_tmp[931787]
    {
      (931705 'move' ret[931700](931704 'deref' 1))
      gotoReturn _end_<=[931698] _end_<=[931698]
    }
    unknown call_tmp[931792] "expr temp" "maybe param" "maybe type" "temp"
    (931795 'move' call_tmp[931792](931498 call parSafe _mt[243] _arg1[931269]))
    unknown call_tmp[931797] "expr temp" "maybe param" "maybe type" "temp"
    (931800 'move' call_tmp[931797](931502 call parSafe _mt[243] _arg2[931270]))
    unknown call_tmp[931802] "expr temp" "maybe param" "maybe type" "temp"
    (931805 'move' call_tmp[931802](931506 call > call_tmp[931792] call_tmp[931797]))
    if call_tmp[931802]
    {
      (931710 'move' ret[931700](931709 'deref' 0))
      gotoReturn _end_<=[931698] _end_<=[931698]
    }
    unknown call_tmp[931807] "expr temp" "maybe param" "maybe type" "temp"
    (931810 'move' call_tmp[931807](931512 call _size _mt[243] _arg1[931269]))
    unknown call_tmp[931812] "expr temp" "maybe param" "maybe type" "temp"
    (931815 'move' call_tmp[931812](931516 call _size _mt[243] _arg2[931270]))
    unknown call_tmp[931817] "expr temp" "maybe param" "maybe type" "temp"
    (931820 'move' call_tmp[931817](931520 call < call_tmp[931807] call_tmp[931812]))
    if call_tmp[931817]
    {
      (931715 'move' ret[931700](931714 'deref' 1))
      gotoReturn _end_<=[931698] _end_<=[931698]
    }
    unknown call_tmp[931822] "expr temp" "maybe param" "maybe type" "temp"
    (931825 'move' call_tmp[931822](931526 call _size _mt[243] _arg1[931269]))
    unknown call_tmp[931827] "expr temp" "maybe param" "maybe type" "temp"
    (931830 'move' call_tmp[931827](931530 call _size _mt[243] _arg2[931270]))
    unknown call_tmp[931832] "expr temp" "maybe param" "maybe type" "temp"
    (931835 'move' call_tmp[931832](931534 call > call_tmp[931822] call_tmp[931827]))
    if call_tmp[931832]
    {
      (931720 'move' ret[931700](931719 'deref' 0))
      gotoReturn _end_<=[931698] _end_<=[931698]
    }
    unknown call_tmp[931837] "expr temp" "maybe param" "maybe type" "temp"
    (931840 'move' call_tmp[931837](931540 call _lock$ _mt[243] _arg1[931269]))
    unknown call_tmp[931842] "expr temp" "maybe param" "maybe type" "temp"
    (931845 'move' call_tmp[931842](931544 call _lock$ _mt[243] _arg2[931270]))
    unknown call_tmp[931847] "expr temp" "maybe param" "maybe type" "temp"
    (931850 'move' call_tmp[931847](931548 call < call_tmp[931837] call_tmp[931842]))
    if call_tmp[931847]
    {
      (931725 'move' ret[931700](931724 'deref' 1))
      gotoReturn _end_<=[931698] _end_<=[931698]
    }
    unknown call_tmp[931852] "expr temp" "maybe param" "maybe type" "temp"
    (931855 'move' call_tmp[931852](931554 call _lock$ _mt[243] _arg1[931269]))
    unknown call_tmp[931857] "expr temp" "maybe param" "maybe type" "temp"
    (931860 'move' call_tmp[931857](931558 call _lock$ _mt[243] _arg2[931270]))
    unknown call_tmp[931862] "expr temp" "maybe param" "maybe type" "temp"
    (931865 'move' call_tmp[931862](931562 call > call_tmp[931852] call_tmp[931857]))
    if call_tmp[931862]
    {
      (931730 'move' ret[931700](931729 'deref' 0))
      gotoReturn _end_<=[931698] _end_<=[931698]
    }
    unknown call_tmp[931867] "expr temp" "maybe param" "maybe type" "temp"
    (931870 'move' call_tmp[931867](931568 call _arrays _mt[243] _arg1[931269]))
    unknown call_tmp[931872] "expr temp" "maybe param" "maybe type" "temp"
    (931875 'move' call_tmp[931872](931572 call _arrays _mt[243] _arg2[931270]))
    unknown call_tmp[931877] "expr temp" "maybe param" "maybe type" "temp"
    (931880 'move' call_tmp[931877](931576 call < call_tmp[931867] call_tmp[931872]))
    if call_tmp[931877]
    {
      (931735 'move' ret[931700](931734 'deref' 1))
      gotoReturn _end_<=[931698] _end_<=[931698]
    }
    unknown call_tmp[931882] "expr temp" "maybe param" "maybe type" "temp"
    (931885 'move' call_tmp[931882](931582 call _arrays _mt[243] _arg1[931269]))
    unknown call_tmp[931887] "expr temp" "maybe param" "maybe type" "temp"
    (931890 'move' call_tmp[931887](931586 call _arrays _mt[243] _arg2[931270]))
    unknown call_tmp[931892] "expr temp" "maybe param" "maybe type" "temp"
    (931895 'move' call_tmp[931892](931590 call > call_tmp[931882] call_tmp[931887]))
    if call_tmp[931892]
    {
      (931740 'move' ret[931700](931739 'deref' 0))
      gotoReturn _end_<=[931698] _end_<=[931698]
    }
    unknown call_tmp[931897] "expr temp" "maybe param" "maybe type" "temp"
    (931900 'move' call_tmp[931897](931596 call _arrayCapacity _mt[243] _arg1[931269]))
    unknown call_tmp[931902] "expr temp" "maybe param" "maybe type" "temp"
    (931905 'move' call_tmp[931902](931600 call _arrayCapacity _mt[243] _arg2[931270]))
    unknown call_tmp[931907] "expr temp" "maybe param" "maybe type" "temp"
    (931910 'move' call_tmp[931907](931604 call < call_tmp[931897] call_tmp[931902]))
    if call_tmp[931907]
    {
      (931745 'move' ret[931700](931744 'deref' 1))
      gotoReturn _end_<=[931698] _end_<=[931698]
    }
    unknown call_tmp[931912] "expr temp" "maybe param" "maybe type" "temp"
    (931915 'move' call_tmp[931912](931610 call _arrayCapacity _mt[243] _arg1[931269]))
    unknown call_tmp[931917] "expr temp" "maybe param" "maybe type" "temp"
    (931920 'move' call_tmp[931917](931614 call _arrayCapacity _mt[243] _arg2[931270]))
    unknown call_tmp[931922] "expr temp" "maybe param" "maybe type" "temp"
    (931925 'move' call_tmp[931922](931618 call > call_tmp[931912] call_tmp[931917]))
    if call_tmp[931922]
    {
      (931750 'move' ret[931700](931749 'deref' 0))
      gotoReturn _end_<=[931698] _end_<=[931698]
    }
    unknown call_tmp[931927] "expr temp" "maybe param" "maybe type" "temp"
    (931930 'move' call_tmp[931927](931624 call _totalCapacity _mt[243] _arg1[931269]))
    unknown call_tmp[931932] "expr temp" "maybe param" "maybe type" "temp"
    (931935 'move' call_tmp[931932](931628 call _totalCapacity _mt[243] _arg2[931270]))
    unknown call_tmp[931937] "expr temp" "maybe param" "maybe type" "temp"
    (931940 'move' call_tmp[931937](931632 call < call_tmp[931927] call_tmp[931932]))
    if call_tmp[931937]
    {
      (931755 'move' ret[931700](931754 'deref' 1))
      gotoReturn _end_<=[931698] _end_<=[931698]
    }
    unknown call_tmp[931942] "expr temp" "maybe param" "maybe type" "temp"
    (931945 'move' call_tmp[931942](931638 call _totalCapacity _mt[243] _arg1[931269]))
    unknown call_tmp[931947] "expr temp" "maybe param" "maybe type" "temp"
    (931950 'move' call_tmp[931947](931642 call _totalCapacity _mt[243] _arg2[931270]))
    unknown call_tmp[931952] "expr temp" "maybe param" "maybe type" "temp"
    (931955 'move' call_tmp[931952](931646 call > call_tmp[931942] call_tmp[931947]))
    if call_tmp[931952]
    {
      (931760 'move' ret[931700](931759 'deref' 0))
      gotoReturn _end_<=[931698] _end_<=[931698]
    }
    unknown call_tmp[931957] "expr temp" "maybe param" "maybe type" "temp"
    (931960 'move' call_tmp[931957](931652 call _dummyFieldToForceBorrowChecking _mt[243] _arg1[931269]))
    unknown call_tmp[931962] "expr temp" "maybe param" "maybe type" "temp"
    (931965 'move' call_tmp[931962](931656 call _dummyFieldToForceBorrowChecking _mt[243] _arg2[931270]))
    unknown call_tmp[931967] "expr temp" "maybe param" "maybe type" "temp"
    (931970 'move' call_tmp[931967](931660 call < call_tmp[931957] call_tmp[931962]))
    if call_tmp[931967]
    {
      (931765 'move' ret[931700](931764 'deref' 1))
      gotoReturn _end_<=[931698] _end_<=[931698]
    }
    unknown call_tmp[931972] "expr temp" "maybe param" "maybe type" "temp"
    (931975 'move' call_tmp[931972](931666 call _dummyFieldToForceBorrowChecking _mt[243] _arg1[931269]))
    unknown call_tmp[931977] "expr temp" "maybe param" "maybe type" "temp"
    (931980 'move' call_tmp[931977](931670 call _dummyFieldToForceBorrowChecking _mt[243] _arg2[931270]))
    unknown call_tmp[931982] "expr temp" "maybe param" "maybe type" "temp"
    (931985 'move' call_tmp[931982](931674 call > call_tmp[931972] call_tmp[931977]))
    if call_tmp[931982]
    {
      (931770 'move' ret[931700](931769 'deref' 0))
      gotoReturn _end_<=[931698] _end_<=[931698]
    }
    (931775 'move' ret[931700](931774 'deref' 1))
    label _end_<=[931698]
    (931702 return ret[931700])
  }
  where {
    unknown call_tmp[931987] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (931990 'move' call_tmp[931987](931273 'typeof' _arg1[931269]))
    unknown call_tmp[931992] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (931995 'move' call_tmp[931992](931275 'typeof' _arg2[931270]))
    unknown call_tmp[931997] "expr temp" "maybe param" "maybe type" "temp"
    (932000 'move' call_tmp[931997](931277 call == call_tmp[931987] call_tmp[931992]))
    unknown call_tmp[932002] "expr temp" "maybe param" "maybe type" "temp"
    (932005 'move' call_tmp[932002](931478 call chpl_fields_are_comparable[931279] _arg1[931269] _arg2[931270]))
    (931482 '&' call_tmp[931997] call_tmp[932002])
  }
  function chpl_fields_are_comparable[932019](arg _arg1[932021]:list[304193](?), arg _arg2[932022]:list[304193](?)) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[932101]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[932108] "expr temp" "maybe param" "maybe type" "temp"
    (932111 'move' call_tmp[932108](932025 call parSafe _mt[243] _arg1[932021]))
    unknown call_tmp[932113] "expr temp" "maybe param" "maybe type" "temp"
    (932116 'move' call_tmp[932113](932029 call parSafe _mt[243] _arg2[932022]))
    unknown call_tmp[932118] "expr temp" "maybe param" "maybe type" "temp"
    (932121 'move' call_tmp[932118](932033 'call resolves' c">" call_tmp[932108] call_tmp[932113]))
    unknown call_tmp[932123] "expr temp" "maybe param" "maybe type" "temp"
    (932126 'move' call_tmp[932123](932035 call _size _mt[243] _arg1[932021]))
    unknown call_tmp[932128] "expr temp" "maybe param" "maybe type" "temp"
    (932131 'move' call_tmp[932128](932039 call _size _mt[243] _arg2[932022]))
    unknown call_tmp[932133] "expr temp" "maybe param" "maybe type" "temp"
    (932136 'move' call_tmp[932133](932043 'call resolves' c">" call_tmp[932123] call_tmp[932128]))
    unknown call_tmp[932138] "expr temp" "maybe param" "maybe type" "temp"
    (932141 'move' call_tmp[932138](932045 call _lock$ _mt[243] _arg1[932021]))
    unknown call_tmp[932143] "expr temp" "maybe param" "maybe type" "temp"
    (932146 'move' call_tmp[932143](932049 call _lock$ _mt[243] _arg2[932022]))
    unknown call_tmp[932148] "expr temp" "maybe param" "maybe type" "temp"
    (932151 'move' call_tmp[932148](932053 'call resolves' c">" call_tmp[932138] call_tmp[932143]))
    unknown call_tmp[932153] "expr temp" "maybe param" "maybe type" "temp"
    (932156 'move' call_tmp[932153](932055 call _arrays _mt[243] _arg1[932021]))
    unknown call_tmp[932158] "expr temp" "maybe param" "maybe type" "temp"
    (932161 'move' call_tmp[932158](932059 call _arrays _mt[243] _arg2[932022]))
    unknown call_tmp[932163] "expr temp" "maybe param" "maybe type" "temp"
    (932166 'move' call_tmp[932163](932063 'call resolves' c">" call_tmp[932153] call_tmp[932158]))
    unknown call_tmp[932168] "expr temp" "maybe param" "maybe type" "temp"
    (932171 'move' call_tmp[932168](932065 call _arrayCapacity _mt[243] _arg1[932021]))
    unknown call_tmp[932173] "expr temp" "maybe param" "maybe type" "temp"
    (932176 'move' call_tmp[932173](932069 call _arrayCapacity _mt[243] _arg2[932022]))
    unknown call_tmp[932178] "expr temp" "maybe param" "maybe type" "temp"
    (932181 'move' call_tmp[932178](932073 'call resolves' c">" call_tmp[932168] call_tmp[932173]))
    unknown call_tmp[932183] "expr temp" "maybe param" "maybe type" "temp"
    (932186 'move' call_tmp[932183](932075 call _totalCapacity _mt[243] _arg1[932021]))
    unknown call_tmp[932188] "expr temp" "maybe param" "maybe type" "temp"
    (932191 'move' call_tmp[932188](932079 call _totalCapacity _mt[243] _arg2[932022]))
    unknown call_tmp[932193] "expr temp" "maybe param" "maybe type" "temp"
    (932196 'move' call_tmp[932193](932083 'call resolves' c">" call_tmp[932183] call_tmp[932188]))
    unknown call_tmp[932198] "expr temp" "maybe param" "maybe type" "temp"
    (932201 'move' call_tmp[932198](932085 call _dummyFieldToForceBorrowChecking _mt[243] _arg1[932021]))
    unknown call_tmp[932203] "expr temp" "maybe param" "maybe type" "temp"
    (932206 'move' call_tmp[932203](932089 call _dummyFieldToForceBorrowChecking _mt[243] _arg2[932022]))
    unknown call_tmp[932208] "expr temp" "maybe param" "maybe type" "temp"
    (932211 'move' call_tmp[932208](932093 'call resolves' c">" call_tmp[932198] call_tmp[932203]))
    unknown call_tmp[932213] "expr temp" "maybe param" "maybe type" "temp"
    (932216 'move' call_tmp[932213](932095 '&' call_tmp[932118] call_tmp[932133] call_tmp[932148] call_tmp[932163] call_tmp[932178] call_tmp[932193] call_tmp[932208]))
    (932106 'move' ret[932101](932105 'deref' call_tmp[932213]))
    (932103 return ret[932101])
  }
  function >[932007](arg _arg1[932009]:list[304193](?), arg _arg2[932010]:list[304193](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[932440]:bool[10] "RVV" "temp"
    unknown call_tmp[932517] "expr temp" "maybe param" "maybe type" "temp"
    (932520 'move' call_tmp[932517](932224 call parSafe _mt[243] _arg1[932009]))
    unknown call_tmp[932522] "expr temp" "maybe param" "maybe type" "temp"
    (932525 'move' call_tmp[932522](932228 call parSafe _mt[243] _arg2[932010]))
    unknown call_tmp[932527] "expr temp" "maybe param" "maybe type" "temp"
    (932530 'move' call_tmp[932527](932232 call > call_tmp[932517] call_tmp[932522]))
    if call_tmp[932527]
    {
      (932445 'move' ret[932440](932444 'deref' 1))
      gotoReturn _end_>[932438] _end_>[932438]
    }
    unknown call_tmp[932532] "expr temp" "maybe param" "maybe type" "temp"
    (932535 'move' call_tmp[932532](932238 call parSafe _mt[243] _arg1[932009]))
    unknown call_tmp[932537] "expr temp" "maybe param" "maybe type" "temp"
    (932540 'move' call_tmp[932537](932242 call parSafe _mt[243] _arg2[932010]))
    unknown call_tmp[932542] "expr temp" "maybe param" "maybe type" "temp"
    (932545 'move' call_tmp[932542](932246 call < call_tmp[932532] call_tmp[932537]))
    if call_tmp[932542]
    {
      (932450 'move' ret[932440](932449 'deref' 0))
      gotoReturn _end_>[932438] _end_>[932438]
    }
    unknown call_tmp[932547] "expr temp" "maybe param" "maybe type" "temp"
    (932550 'move' call_tmp[932547](932252 call _size _mt[243] _arg1[932009]))
    unknown call_tmp[932552] "expr temp" "maybe param" "maybe type" "temp"
    (932555 'move' call_tmp[932552](932256 call _size _mt[243] _arg2[932010]))
    unknown call_tmp[932557] "expr temp" "maybe param" "maybe type" "temp"
    (932560 'move' call_tmp[932557](932260 call > call_tmp[932547] call_tmp[932552]))
    if call_tmp[932557]
    {
      (932455 'move' ret[932440](932454 'deref' 1))
      gotoReturn _end_>[932438] _end_>[932438]
    }
    unknown call_tmp[932562] "expr temp" "maybe param" "maybe type" "temp"
    (932565 'move' call_tmp[932562](932266 call _size _mt[243] _arg1[932009]))
    unknown call_tmp[932567] "expr temp" "maybe param" "maybe type" "temp"
    (932570 'move' call_tmp[932567](932270 call _size _mt[243] _arg2[932010]))
    unknown call_tmp[932572] "expr temp" "maybe param" "maybe type" "temp"
    (932575 'move' call_tmp[932572](932274 call < call_tmp[932562] call_tmp[932567]))
    if call_tmp[932572]
    {
      (932460 'move' ret[932440](932459 'deref' 0))
      gotoReturn _end_>[932438] _end_>[932438]
    }
    unknown call_tmp[932577] "expr temp" "maybe param" "maybe type" "temp"
    (932580 'move' call_tmp[932577](932280 call _lock$ _mt[243] _arg1[932009]))
    unknown call_tmp[932582] "expr temp" "maybe param" "maybe type" "temp"
    (932585 'move' call_tmp[932582](932284 call _lock$ _mt[243] _arg2[932010]))
    unknown call_tmp[932587] "expr temp" "maybe param" "maybe type" "temp"
    (932590 'move' call_tmp[932587](932288 call > call_tmp[932577] call_tmp[932582]))
    if call_tmp[932587]
    {
      (932465 'move' ret[932440](932464 'deref' 1))
      gotoReturn _end_>[932438] _end_>[932438]
    }
    unknown call_tmp[932592] "expr temp" "maybe param" "maybe type" "temp"
    (932595 'move' call_tmp[932592](932294 call _lock$ _mt[243] _arg1[932009]))
    unknown call_tmp[932597] "expr temp" "maybe param" "maybe type" "temp"
    (932600 'move' call_tmp[932597](932298 call _lock$ _mt[243] _arg2[932010]))
    unknown call_tmp[932602] "expr temp" "maybe param" "maybe type" "temp"
    (932605 'move' call_tmp[932602](932302 call < call_tmp[932592] call_tmp[932597]))
    if call_tmp[932602]
    {
      (932470 'move' ret[932440](932469 'deref' 0))
      gotoReturn _end_>[932438] _end_>[932438]
    }
    unknown call_tmp[932607] "expr temp" "maybe param" "maybe type" "temp"
    (932610 'move' call_tmp[932607](932308 call _arrays _mt[243] _arg1[932009]))
    unknown call_tmp[932612] "expr temp" "maybe param" "maybe type" "temp"
    (932615 'move' call_tmp[932612](932312 call _arrays _mt[243] _arg2[932010]))
    unknown call_tmp[932617] "expr temp" "maybe param" "maybe type" "temp"
    (932620 'move' call_tmp[932617](932316 call > call_tmp[932607] call_tmp[932612]))
    if call_tmp[932617]
    {
      (932475 'move' ret[932440](932474 'deref' 1))
      gotoReturn _end_>[932438] _end_>[932438]
    }
    unknown call_tmp[932622] "expr temp" "maybe param" "maybe type" "temp"
    (932625 'move' call_tmp[932622](932322 call _arrays _mt[243] _arg1[932009]))
    unknown call_tmp[932627] "expr temp" "maybe param" "maybe type" "temp"
    (932630 'move' call_tmp[932627](932326 call _arrays _mt[243] _arg2[932010]))
    unknown call_tmp[932632] "expr temp" "maybe param" "maybe type" "temp"
    (932635 'move' call_tmp[932632](932330 call < call_tmp[932622] call_tmp[932627]))
    if call_tmp[932632]
    {
      (932480 'move' ret[932440](932479 'deref' 0))
      gotoReturn _end_>[932438] _end_>[932438]
    }
    unknown call_tmp[932637] "expr temp" "maybe param" "maybe type" "temp"
    (932640 'move' call_tmp[932637](932336 call _arrayCapacity _mt[243] _arg1[932009]))
    unknown call_tmp[932642] "expr temp" "maybe param" "maybe type" "temp"
    (932645 'move' call_tmp[932642](932340 call _arrayCapacity _mt[243] _arg2[932010]))
    unknown call_tmp[932647] "expr temp" "maybe param" "maybe type" "temp"
    (932650 'move' call_tmp[932647](932344 call > call_tmp[932637] call_tmp[932642]))
    if call_tmp[932647]
    {
      (932485 'move' ret[932440](932484 'deref' 1))
      gotoReturn _end_>[932438] _end_>[932438]
    }
    unknown call_tmp[932652] "expr temp" "maybe param" "maybe type" "temp"
    (932655 'move' call_tmp[932652](932350 call _arrayCapacity _mt[243] _arg1[932009]))
    unknown call_tmp[932657] "expr temp" "maybe param" "maybe type" "temp"
    (932660 'move' call_tmp[932657](932354 call _arrayCapacity _mt[243] _arg2[932010]))
    unknown call_tmp[932662] "expr temp" "maybe param" "maybe type" "temp"
    (932665 'move' call_tmp[932662](932358 call < call_tmp[932652] call_tmp[932657]))
    if call_tmp[932662]
    {
      (932490 'move' ret[932440](932489 'deref' 0))
      gotoReturn _end_>[932438] _end_>[932438]
    }
    unknown call_tmp[932667] "expr temp" "maybe param" "maybe type" "temp"
    (932670 'move' call_tmp[932667](932364 call _totalCapacity _mt[243] _arg1[932009]))
    unknown call_tmp[932672] "expr temp" "maybe param" "maybe type" "temp"
    (932675 'move' call_tmp[932672](932368 call _totalCapacity _mt[243] _arg2[932010]))
    unknown call_tmp[932677] "expr temp" "maybe param" "maybe type" "temp"
    (932680 'move' call_tmp[932677](932372 call > call_tmp[932667] call_tmp[932672]))
    if call_tmp[932677]
    {
      (932495 'move' ret[932440](932494 'deref' 1))
      gotoReturn _end_>[932438] _end_>[932438]
    }
    unknown call_tmp[932682] "expr temp" "maybe param" "maybe type" "temp"
    (932685 'move' call_tmp[932682](932378 call _totalCapacity _mt[243] _arg1[932009]))
    unknown call_tmp[932687] "expr temp" "maybe param" "maybe type" "temp"
    (932690 'move' call_tmp[932687](932382 call _totalCapacity _mt[243] _arg2[932010]))
    unknown call_tmp[932692] "expr temp" "maybe param" "maybe type" "temp"
    (932695 'move' call_tmp[932692](932386 call < call_tmp[932682] call_tmp[932687]))
    if call_tmp[932692]
    {
      (932500 'move' ret[932440](932499 'deref' 0))
      gotoReturn _end_>[932438] _end_>[932438]
    }
    unknown call_tmp[932697] "expr temp" "maybe param" "maybe type" "temp"
    (932700 'move' call_tmp[932697](932392 call _dummyFieldToForceBorrowChecking _mt[243] _arg1[932009]))
    unknown call_tmp[932702] "expr temp" "maybe param" "maybe type" "temp"
    (932705 'move' call_tmp[932702](932396 call _dummyFieldToForceBorrowChecking _mt[243] _arg2[932010]))
    unknown call_tmp[932707] "expr temp" "maybe param" "maybe type" "temp"
    (932710 'move' call_tmp[932707](932400 call > call_tmp[932697] call_tmp[932702]))
    if call_tmp[932707]
    {
      (932505 'move' ret[932440](932504 'deref' 1))
      gotoReturn _end_>[932438] _end_>[932438]
    }
    unknown call_tmp[932712] "expr temp" "maybe param" "maybe type" "temp"
    (932715 'move' call_tmp[932712](932406 call _dummyFieldToForceBorrowChecking _mt[243] _arg1[932009]))
    unknown call_tmp[932717] "expr temp" "maybe param" "maybe type" "temp"
    (932720 'move' call_tmp[932717](932410 call _dummyFieldToForceBorrowChecking _mt[243] _arg2[932010]))
    unknown call_tmp[932722] "expr temp" "maybe param" "maybe type" "temp"
    (932725 'move' call_tmp[932722](932414 call < call_tmp[932712] call_tmp[932717]))
    if call_tmp[932722]
    {
      (932510 'move' ret[932440](932509 'deref' 0))
      gotoReturn _end_>[932438] _end_>[932438]
    }
    (932515 'move' ret[932440](932514 'deref' 0))
    label _end_>[932438]
    (932442 return ret[932440])
  }
  where {
    unknown call_tmp[932727] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (932730 'move' call_tmp[932727](932013 'typeof' _arg1[932009]))
    unknown call_tmp[932732] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (932735 'move' call_tmp[932732](932015 'typeof' _arg2[932010]))
    unknown call_tmp[932737] "expr temp" "maybe param" "maybe type" "temp"
    (932740 'move' call_tmp[932737](932017 call == call_tmp[932727] call_tmp[932732]))
    unknown call_tmp[932742] "expr temp" "maybe param" "maybe type" "temp"
    (932745 'move' call_tmp[932742](932218 call chpl_fields_are_comparable[932019] _arg1[932009] _arg2[932010]))
    (932222 '&' call_tmp[932737] call_tmp[932742])
  }
  function chpl_fields_are_comparable[932759](arg _arg1[932761]:list[304193](?), arg _arg2[932762]:list[304193](?)) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[932841]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[932848] "expr temp" "maybe param" "maybe type" "temp"
    (932851 'move' call_tmp[932848](932765 call parSafe _mt[243] _arg1[932761]))
    unknown call_tmp[932853] "expr temp" "maybe param" "maybe type" "temp"
    (932856 'move' call_tmp[932853](932769 call parSafe _mt[243] _arg2[932762]))
    unknown call_tmp[932858] "expr temp" "maybe param" "maybe type" "temp"
    (932861 'move' call_tmp[932858](932773 'call resolves' c">=" call_tmp[932848] call_tmp[932853]))
    unknown call_tmp[932863] "expr temp" "maybe param" "maybe type" "temp"
    (932866 'move' call_tmp[932863](932775 call _size _mt[243] _arg1[932761]))
    unknown call_tmp[932868] "expr temp" "maybe param" "maybe type" "temp"
    (932871 'move' call_tmp[932868](932779 call _size _mt[243] _arg2[932762]))
    unknown call_tmp[932873] "expr temp" "maybe param" "maybe type" "temp"
    (932876 'move' call_tmp[932873](932783 'call resolves' c">=" call_tmp[932863] call_tmp[932868]))
    unknown call_tmp[932878] "expr temp" "maybe param" "maybe type" "temp"
    (932881 'move' call_tmp[932878](932785 call _lock$ _mt[243] _arg1[932761]))
    unknown call_tmp[932883] "expr temp" "maybe param" "maybe type" "temp"
    (932886 'move' call_tmp[932883](932789 call _lock$ _mt[243] _arg2[932762]))
    unknown call_tmp[932888] "expr temp" "maybe param" "maybe type" "temp"
    (932891 'move' call_tmp[932888](932793 'call resolves' c">=" call_tmp[932878] call_tmp[932883]))
    unknown call_tmp[932893] "expr temp" "maybe param" "maybe type" "temp"
    (932896 'move' call_tmp[932893](932795 call _arrays _mt[243] _arg1[932761]))
    unknown call_tmp[932898] "expr temp" "maybe param" "maybe type" "temp"
    (932901 'move' call_tmp[932898](932799 call _arrays _mt[243] _arg2[932762]))
    unknown call_tmp[932903] "expr temp" "maybe param" "maybe type" "temp"
    (932906 'move' call_tmp[932903](932803 'call resolves' c">=" call_tmp[932893] call_tmp[932898]))
    unknown call_tmp[932908] "expr temp" "maybe param" "maybe type" "temp"
    (932911 'move' call_tmp[932908](932805 call _arrayCapacity _mt[243] _arg1[932761]))
    unknown call_tmp[932913] "expr temp" "maybe param" "maybe type" "temp"
    (932916 'move' call_tmp[932913](932809 call _arrayCapacity _mt[243] _arg2[932762]))
    unknown call_tmp[932918] "expr temp" "maybe param" "maybe type" "temp"
    (932921 'move' call_tmp[932918](932813 'call resolves' c">=" call_tmp[932908] call_tmp[932913]))
    unknown call_tmp[932923] "expr temp" "maybe param" "maybe type" "temp"
    (932926 'move' call_tmp[932923](932815 call _totalCapacity _mt[243] _arg1[932761]))
    unknown call_tmp[932928] "expr temp" "maybe param" "maybe type" "temp"
    (932931 'move' call_tmp[932928](932819 call _totalCapacity _mt[243] _arg2[932762]))
    unknown call_tmp[932933] "expr temp" "maybe param" "maybe type" "temp"
    (932936 'move' call_tmp[932933](932823 'call resolves' c">=" call_tmp[932923] call_tmp[932928]))
    unknown call_tmp[932938] "expr temp" "maybe param" "maybe type" "temp"
    (932941 'move' call_tmp[932938](932825 call _dummyFieldToForceBorrowChecking _mt[243] _arg1[932761]))
    unknown call_tmp[932943] "expr temp" "maybe param" "maybe type" "temp"
    (932946 'move' call_tmp[932943](932829 call _dummyFieldToForceBorrowChecking _mt[243] _arg2[932762]))
    unknown call_tmp[932948] "expr temp" "maybe param" "maybe type" "temp"
    (932951 'move' call_tmp[932948](932833 'call resolves' c">=" call_tmp[932938] call_tmp[932943]))
    unknown call_tmp[932953] "expr temp" "maybe param" "maybe type" "temp"
    (932956 'move' call_tmp[932953](932835 '&' call_tmp[932858] call_tmp[932873] call_tmp[932888] call_tmp[932903] call_tmp[932918] call_tmp[932933] call_tmp[932948]))
    (932846 'move' ret[932841](932845 'deref' call_tmp[932953]))
    (932843 return ret[932841])
  }
  function >=[932747](arg _arg1[932749]:list[304193](?), arg _arg2[932750]:list[304193](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[933180]:bool[10] "RVV" "temp"
    unknown call_tmp[933257] "expr temp" "maybe param" "maybe type" "temp"
    (933260 'move' call_tmp[933257](932964 call parSafe _mt[243] _arg1[932749]))
    unknown call_tmp[933262] "expr temp" "maybe param" "maybe type" "temp"
    (933265 'move' call_tmp[933262](932968 call parSafe _mt[243] _arg2[932750]))
    unknown call_tmp[933267] "expr temp" "maybe param" "maybe type" "temp"
    (933270 'move' call_tmp[933267](932972 call > call_tmp[933257] call_tmp[933262]))
    if call_tmp[933267]
    {
      (933185 'move' ret[933180](933184 'deref' 1))
      gotoReturn _end_>=[933178] _end_>=[933178]
    }
    unknown call_tmp[933272] "expr temp" "maybe param" "maybe type" "temp"
    (933275 'move' call_tmp[933272](932978 call parSafe _mt[243] _arg1[932749]))
    unknown call_tmp[933277] "expr temp" "maybe param" "maybe type" "temp"
    (933280 'move' call_tmp[933277](932982 call parSafe _mt[243] _arg2[932750]))
    unknown call_tmp[933282] "expr temp" "maybe param" "maybe type" "temp"
    (933285 'move' call_tmp[933282](932986 call < call_tmp[933272] call_tmp[933277]))
    if call_tmp[933282]
    {
      (933190 'move' ret[933180](933189 'deref' 0))
      gotoReturn _end_>=[933178] _end_>=[933178]
    }
    unknown call_tmp[933287] "expr temp" "maybe param" "maybe type" "temp"
    (933290 'move' call_tmp[933287](932992 call _size _mt[243] _arg1[932749]))
    unknown call_tmp[933292] "expr temp" "maybe param" "maybe type" "temp"
    (933295 'move' call_tmp[933292](932996 call _size _mt[243] _arg2[932750]))
    unknown call_tmp[933297] "expr temp" "maybe param" "maybe type" "temp"
    (933300 'move' call_tmp[933297](933000 call > call_tmp[933287] call_tmp[933292]))
    if call_tmp[933297]
    {
      (933195 'move' ret[933180](933194 'deref' 1))
      gotoReturn _end_>=[933178] _end_>=[933178]
    }
    unknown call_tmp[933302] "expr temp" "maybe param" "maybe type" "temp"
    (933305 'move' call_tmp[933302](933006 call _size _mt[243] _arg1[932749]))
    unknown call_tmp[933307] "expr temp" "maybe param" "maybe type" "temp"
    (933310 'move' call_tmp[933307](933010 call _size _mt[243] _arg2[932750]))
    unknown call_tmp[933312] "expr temp" "maybe param" "maybe type" "temp"
    (933315 'move' call_tmp[933312](933014 call < call_tmp[933302] call_tmp[933307]))
    if call_tmp[933312]
    {
      (933200 'move' ret[933180](933199 'deref' 0))
      gotoReturn _end_>=[933178] _end_>=[933178]
    }
    unknown call_tmp[933317] "expr temp" "maybe param" "maybe type" "temp"
    (933320 'move' call_tmp[933317](933020 call _lock$ _mt[243] _arg1[932749]))
    unknown call_tmp[933322] "expr temp" "maybe param" "maybe type" "temp"
    (933325 'move' call_tmp[933322](933024 call _lock$ _mt[243] _arg2[932750]))
    unknown call_tmp[933327] "expr temp" "maybe param" "maybe type" "temp"
    (933330 'move' call_tmp[933327](933028 call > call_tmp[933317] call_tmp[933322]))
    if call_tmp[933327]
    {
      (933205 'move' ret[933180](933204 'deref' 1))
      gotoReturn _end_>=[933178] _end_>=[933178]
    }
    unknown call_tmp[933332] "expr temp" "maybe param" "maybe type" "temp"
    (933335 'move' call_tmp[933332](933034 call _lock$ _mt[243] _arg1[932749]))
    unknown call_tmp[933337] "expr temp" "maybe param" "maybe type" "temp"
    (933340 'move' call_tmp[933337](933038 call _lock$ _mt[243] _arg2[932750]))
    unknown call_tmp[933342] "expr temp" "maybe param" "maybe type" "temp"
    (933345 'move' call_tmp[933342](933042 call < call_tmp[933332] call_tmp[933337]))
    if call_tmp[933342]
    {
      (933210 'move' ret[933180](933209 'deref' 0))
      gotoReturn _end_>=[933178] _end_>=[933178]
    }
    unknown call_tmp[933347] "expr temp" "maybe param" "maybe type" "temp"
    (933350 'move' call_tmp[933347](933048 call _arrays _mt[243] _arg1[932749]))
    unknown call_tmp[933352] "expr temp" "maybe param" "maybe type" "temp"
    (933355 'move' call_tmp[933352](933052 call _arrays _mt[243] _arg2[932750]))
    unknown call_tmp[933357] "expr temp" "maybe param" "maybe type" "temp"
    (933360 'move' call_tmp[933357](933056 call > call_tmp[933347] call_tmp[933352]))
    if call_tmp[933357]
    {
      (933215 'move' ret[933180](933214 'deref' 1))
      gotoReturn _end_>=[933178] _end_>=[933178]
    }
    unknown call_tmp[933362] "expr temp" "maybe param" "maybe type" "temp"
    (933365 'move' call_tmp[933362](933062 call _arrays _mt[243] _arg1[932749]))
    unknown call_tmp[933367] "expr temp" "maybe param" "maybe type" "temp"
    (933370 'move' call_tmp[933367](933066 call _arrays _mt[243] _arg2[932750]))
    unknown call_tmp[933372] "expr temp" "maybe param" "maybe type" "temp"
    (933375 'move' call_tmp[933372](933070 call < call_tmp[933362] call_tmp[933367]))
    if call_tmp[933372]
    {
      (933220 'move' ret[933180](933219 'deref' 0))
      gotoReturn _end_>=[933178] _end_>=[933178]
    }
    unknown call_tmp[933377] "expr temp" "maybe param" "maybe type" "temp"
    (933380 'move' call_tmp[933377](933076 call _arrayCapacity _mt[243] _arg1[932749]))
    unknown call_tmp[933382] "expr temp" "maybe param" "maybe type" "temp"
    (933385 'move' call_tmp[933382](933080 call _arrayCapacity _mt[243] _arg2[932750]))
    unknown call_tmp[933387] "expr temp" "maybe param" "maybe type" "temp"
    (933390 'move' call_tmp[933387](933084 call > call_tmp[933377] call_tmp[933382]))
    if call_tmp[933387]
    {
      (933225 'move' ret[933180](933224 'deref' 1))
      gotoReturn _end_>=[933178] _end_>=[933178]
    }
    unknown call_tmp[933392] "expr temp" "maybe param" "maybe type" "temp"
    (933395 'move' call_tmp[933392](933090 call _arrayCapacity _mt[243] _arg1[932749]))
    unknown call_tmp[933397] "expr temp" "maybe param" "maybe type" "temp"
    (933400 'move' call_tmp[933397](933094 call _arrayCapacity _mt[243] _arg2[932750]))
    unknown call_tmp[933402] "expr temp" "maybe param" "maybe type" "temp"
    (933405 'move' call_tmp[933402](933098 call < call_tmp[933392] call_tmp[933397]))
    if call_tmp[933402]
    {
      (933230 'move' ret[933180](933229 'deref' 0))
      gotoReturn _end_>=[933178] _end_>=[933178]
    }
    unknown call_tmp[933407] "expr temp" "maybe param" "maybe type" "temp"
    (933410 'move' call_tmp[933407](933104 call _totalCapacity _mt[243] _arg1[932749]))
    unknown call_tmp[933412] "expr temp" "maybe param" "maybe type" "temp"
    (933415 'move' call_tmp[933412](933108 call _totalCapacity _mt[243] _arg2[932750]))
    unknown call_tmp[933417] "expr temp" "maybe param" "maybe type" "temp"
    (933420 'move' call_tmp[933417](933112 call > call_tmp[933407] call_tmp[933412]))
    if call_tmp[933417]
    {
      (933235 'move' ret[933180](933234 'deref' 1))
      gotoReturn _end_>=[933178] _end_>=[933178]
    }
    unknown call_tmp[933422] "expr temp" "maybe param" "maybe type" "temp"
    (933425 'move' call_tmp[933422](933118 call _totalCapacity _mt[243] _arg1[932749]))
    unknown call_tmp[933427] "expr temp" "maybe param" "maybe type" "temp"
    (933430 'move' call_tmp[933427](933122 call _totalCapacity _mt[243] _arg2[932750]))
    unknown call_tmp[933432] "expr temp" "maybe param" "maybe type" "temp"
    (933435 'move' call_tmp[933432](933126 call < call_tmp[933422] call_tmp[933427]))
    if call_tmp[933432]
    {
      (933240 'move' ret[933180](933239 'deref' 0))
      gotoReturn _end_>=[933178] _end_>=[933178]
    }
    unknown call_tmp[933437] "expr temp" "maybe param" "maybe type" "temp"
    (933440 'move' call_tmp[933437](933132 call _dummyFieldToForceBorrowChecking _mt[243] _arg1[932749]))
    unknown call_tmp[933442] "expr temp" "maybe param" "maybe type" "temp"
    (933445 'move' call_tmp[933442](933136 call _dummyFieldToForceBorrowChecking _mt[243] _arg2[932750]))
    unknown call_tmp[933447] "expr temp" "maybe param" "maybe type" "temp"
    (933450 'move' call_tmp[933447](933140 call > call_tmp[933437] call_tmp[933442]))
    if call_tmp[933447]
    {
      (933245 'move' ret[933180](933244 'deref' 1))
      gotoReturn _end_>=[933178] _end_>=[933178]
    }
    unknown call_tmp[933452] "expr temp" "maybe param" "maybe type" "temp"
    (933455 'move' call_tmp[933452](933146 call _dummyFieldToForceBorrowChecking _mt[243] _arg1[932749]))
    unknown call_tmp[933457] "expr temp" "maybe param" "maybe type" "temp"
    (933460 'move' call_tmp[933457](933150 call _dummyFieldToForceBorrowChecking _mt[243] _arg2[932750]))
    unknown call_tmp[933462] "expr temp" "maybe param" "maybe type" "temp"
    (933465 'move' call_tmp[933462](933154 call < call_tmp[933452] call_tmp[933457]))
    if call_tmp[933462]
    {
      (933250 'move' ret[933180](933249 'deref' 0))
      gotoReturn _end_>=[933178] _end_>=[933178]
    }
    (933255 'move' ret[933180](933254 'deref' 1))
    label _end_>=[933178]
    (933182 return ret[933180])
  }
  where {
    unknown call_tmp[933467] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (933470 'move' call_tmp[933467](932753 'typeof' _arg1[932749]))
    unknown call_tmp[933472] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (933475 'move' call_tmp[933472](932755 'typeof' _arg2[932750]))
    unknown call_tmp[933477] "expr temp" "maybe param" "maybe type" "temp"
    (933480 'move' call_tmp[933477](932757 call == call_tmp[933467] call_tmp[933472]))
    unknown call_tmp[933482] "expr temp" "maybe param" "maybe type" "temp"
    (933485 'move' call_tmp[933482](932958 call chpl_fields_are_comparable[932759] _arg1[932749] _arg2[932750]))
    (932962 '&' call_tmp[933477] call_tmp[933482])
  }
  function chpl__defaultHash[933487](arg r[933489]:list[304193](?)) : _unknown[51] "compiler generated" "last resort"
  {
    unknown ret[933565] "RVV" "temp"
    unknown call_tmp[933572] "expr temp" "maybe param" "maybe type" "temp"
    (933575 'move' call_tmp[933572](933551 call _dummyFieldToForceBorrowChecking _mt[243] r[933489]))
    unknown call_tmp[933577] "expr temp" "maybe param" "maybe type" "temp"
    (933580 'move' call_tmp[933577](933555 call chpl__defaultHash call_tmp[933572]))
    unknown call_tmp[933582] "expr temp" "maybe param" "maybe type" "temp"
    (933585 'move' call_tmp[933582](933542 call _totalCapacity _mt[243] r[933489]))
    unknown call_tmp[933587] "expr temp" "maybe param" "maybe type" "temp"
    (933590 'move' call_tmp[933587](933546 call chpl__defaultHash call_tmp[933582]))
    unknown call_tmp[933592] "expr temp" "maybe param" "maybe type" "temp"
    (933595 'move' call_tmp[933592](933533 call _arrayCapacity _mt[243] r[933489]))
    unknown call_tmp[933597] "expr temp" "maybe param" "maybe type" "temp"
    (933600 'move' call_tmp[933597](933537 call chpl__defaultHash call_tmp[933592]))
    unknown call_tmp[933602] "expr temp" "maybe param" "maybe type" "temp"
    (933605 'move' call_tmp[933602](933524 call _arrays _mt[243] r[933489]))
    unknown call_tmp[933607] "expr temp" "maybe param" "maybe type" "temp"
    (933610 'move' call_tmp[933607](933528 call chpl__defaultHash call_tmp[933602]))
    unknown call_tmp[933612] "expr temp" "maybe param" "maybe type" "temp"
    (933615 'move' call_tmp[933612](933515 call _lock$ _mt[243] r[933489]))
    unknown call_tmp[933617] "expr temp" "maybe param" "maybe type" "temp"
    (933620 'move' call_tmp[933617](933519 call chpl__defaultHash call_tmp[933612]))
    unknown call_tmp[933622] "expr temp" "maybe param" "maybe type" "temp"
    (933625 'move' call_tmp[933622](933506 call _size _mt[243] r[933489]))
    unknown call_tmp[933627] "expr temp" "maybe param" "maybe type" "temp"
    (933630 'move' call_tmp[933627](933510 call chpl__defaultHash call_tmp[933622]))
    unknown call_tmp[933632] "expr temp" "maybe param" "maybe type" "temp"
    (933635 'move' call_tmp[933632](933497 call parSafe _mt[243] r[933489]))
    unknown call_tmp[933637] "expr temp" "maybe param" "maybe type" "temp"
    (933640 'move' call_tmp[933637](933501 call chpl__defaultHash call_tmp[933632]))
    unknown call_tmp[933642] "expr temp" "maybe param" "maybe type" "temp"
    (933645 'move' call_tmp[933642](933491 call eltType _mt[243] r[933489]))
    unknown call_tmp[933647] "expr temp" "maybe param" "maybe type" "temp"
    (933650 'move' call_tmp[933647](933495 call chpl__defaultHash call_tmp[933642]))
    unknown call_tmp[933652] "expr temp" "maybe param" "maybe type" "temp"
    (933655 'move' call_tmp[933652](933503 call chpl__defaultHashCombine call_tmp[933637] call_tmp[933647] 2))
    unknown call_tmp[933657] "expr temp" "maybe param" "maybe type" "temp"
    (933660 'move' call_tmp[933657](933512 call chpl__defaultHashCombine call_tmp[933627] call_tmp[933652] 3))
    unknown call_tmp[933662] "expr temp" "maybe param" "maybe type" "temp"
    (933665 'move' call_tmp[933662](933521 call chpl__defaultHashCombine call_tmp[933617] call_tmp[933657] 4))
    unknown call_tmp[933667] "expr temp" "maybe param" "maybe type" "temp"
    (933670 'move' call_tmp[933667](933530 call chpl__defaultHashCombine call_tmp[933607] call_tmp[933662] 5))
    unknown call_tmp[933672] "expr temp" "maybe param" "maybe type" "temp"
    (933675 'move' call_tmp[933672](933539 call chpl__defaultHashCombine call_tmp[933597] call_tmp[933667] 6))
    unknown call_tmp[933677] "expr temp" "maybe param" "maybe type" "temp"
    (933680 'move' call_tmp[933677](933548 call chpl__defaultHashCombine call_tmp[933587] call_tmp[933672] 7))
    unknown call_tmp[933682] "expr temp" "maybe param" "maybe type" "temp"
    (933685 'move' call_tmp[933682](933557 call chpl__defaultHashCombine call_tmp[933577] call_tmp[933677] 8))
    (933570 'move' ret[933565](933569 'deref' call_tmp[933682]))
    (933567 return ret[933565])
  }
  type list[304193](?) unknown eltType[298441] "type variable" unknown parSafe[298445] "param" 0 val _size[298450]:int(64)[13] "no doc" 0 unknown _lock$[298463] "no doc"(298460 IfExpr  parSafe[298445] then
  { scopeless
    (748129 'new' _LockWrapper[405197](?))
  } else
  { scopeless
    none[57]
  } ) unknown _arrays[298475] "no doc" nil[44](298473 call _ddata[11695](?)(298471 call _ddata[11695](?) eltType[298441])) val _arrayCapacity[298480]:int(64)[13] "no doc" 0 val _totalCapacity[298485]:int(64)[13] "no doc" 0 unknown _dummyFieldToForceBorrowChecking[298493] "no doc"(298492 call _dummyFieldType eltType[298441])
  function =[304463](ref arg lhs[304460]:list[304193](?), arg rhs[304470]:list[304193](?)) : _unknown[51] "assignop" "compiler added where" "no return value for void"
  {
    (304478 call(304474 call (partial) clear _mt[243] lhs[304460]))
    (491515 'end of statement')
    (304489 call(304484 call (partial) extend _mt[243] lhs[304460]) rhs[304470])
    (539573 return _void[55])
  }
  where {
    unknown call_tmp[747604] "expr temp" "maybe param" "maybe type" "temp"
    (747607 'move' call_tmp[747604](467930 'query' lhs[304460] 1))
    unknown call_tmp[747609] "expr temp" "maybe param" "maybe type" "temp"
    (747612 'move' call_tmp[747609](467927 'query' rhs[304470] 1))
    unknown call_tmp[747614] "expr temp" "maybe param" "maybe type" "temp"
    (747617 'move' call_tmp[747614](467933 call == call_tmp[747604] call_tmp[747609]))
    (467937 call & 1 call_tmp[747614])
  }
  function ==[304504](arg a[304501]:list[304193](?), arg b[304511]:list[304193](?)) : _unknown[51] "compiler added where"
  {
    unknown ret[539577] "RVV" "temp"
    unknown call_tmp[747621] "expr temp" "maybe param" "maybe type" "temp"
    (747624 'move' call_tmp[747621](304516 call size _mt[243] a[304501]))
    unknown call_tmp[747628] "expr temp" "maybe param" "maybe type" "temp"
    (747631 'move' call_tmp[747628](304520 call size _mt[243] b[304511]))
    unknown call_tmp[747633] "expr temp" "maybe param" "maybe type" "temp"
    (747636 'move' call_tmp[747633](304523 call != call_tmp[747621] call_tmp[747628]))
    unknown call_tmp[747638] "expr temp" "maybe param" "maybe type" "temp"
    (747641 'move' call_tmp[747638](304528 call _cond_test call_tmp[747633]))
    if call_tmp[747638]
    {
      (539583 'move' ret[539577](539582 'coerce' 0 bool[10]))
      gotoReturn _end_==[539575] _end_==[539575]
    }
    {
      unknown _indexOfInterest[304562] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[304563] "expr temp" "temp"
      unknown call_tmp[747645] "expr temp" "maybe param" "maybe type" "temp"
      (747648 'move' call_tmp[747645](304578 call size _mt[243] a[304501]))
      unknown call_tmp[747650] "expr temp" "maybe param" "maybe type" "temp"
      (747653 'move' call_tmp[747650](304582 call chpl_direct_counted_range_iter 0 call_tmp[747645]))
      (304572 'move' _iterator[304563](304570 call _getIterator call_tmp[747650]))
      Defer
      {
        {
          (304598 call _freeIterator _iterator[304563])
        }
      }
      { scopeless type
        (304587 'move' _indexOfInterest[304562](304584 call iteratorIndex _iterator[304563]))
      }
      ForLoop[304564]
      {
        unknown i[304591] "index var" "insert auto destroy"
        (491519 'end of statement')
        (304593 'move' i[304591] _indexOfInterest[304562])
        (491520 'end of statement' i[304591])
        unknown call_tmp[747655] "expr temp" "maybe param" "maybe type" "temp"
        (747658 'move' call_tmp[747655](304547 call a[304501] i[304591]))
        unknown call_tmp[747660] "expr temp" "maybe param" "maybe type" "temp"
        (747663 'move' call_tmp[747660](304551 call b[304511] i[304591]))
        unknown call_tmp[747665] "expr temp" "maybe param" "maybe type" "temp"
        (747668 'move' call_tmp[747665](304552 call != call_tmp[747655] call_tmp[747660]))
        unknown call_tmp[747670] "expr temp" "maybe param" "maybe type" "temp"
        (747673 'move' call_tmp[747670](304557 call _cond_test call_tmp[747665]))
        if call_tmp[747670]
        {
          (539589 'move' ret[539577](539588 'coerce' 0 bool[10]))
          gotoReturn _end_==[539575] _end_==[539575]
        }
        label _continueLabel[304567]
        _indexOfInterest[304562]
        _iterator[304563]
      }
      label _breakLabel[304568]
    }
    (539595 'move' ret[539577](539594 'coerce' 1 bool[10]))
    label _end_==[539575]
    (539579 return ret[539577])
  }
  where {
    unknown call_tmp[747675] "expr temp" "maybe param" "maybe type" "temp"
    (747678 'move' call_tmp[747675](467962 'query' a[304501] 1))
    unknown call_tmp[747680] "expr temp" "maybe param" "maybe type" "temp"
    (747683 'move' call_tmp[747680](467959 'query' b[304511] 1))
    unknown call_tmp[747685] "expr temp" "maybe param" "maybe type" "temp"
    (747688 'move' call_tmp[747685](467965 call == call_tmp[747675] call_tmp[747680]))
    (467969 call & 1 call_tmp[747685])
  }
  { scopeless type
    bool[10]
  }
  function !=[304622](arg a[304619]:list[304193](?), arg b[304629]:list[304193](?)) : _unknown[51] "compiler added where"
  {
    unknown ret[539599] "RVV" "temp"
    unknown call_tmp[747690] "expr temp" "maybe param" "maybe type" "temp"
    (747693 'move' call_tmp[747690](304635 call == a[304619] b[304629]))
    unknown call_tmp[747695] "expr temp" "maybe param" "maybe type" "temp"
    (747698 'move' call_tmp[747695](304637 call ! call_tmp[747690]))
    (539605 'move' ret[539599](539604 'coerce' call_tmp[747695] bool[10]))
    (539601 return ret[539599])
  }
  where {
    unknown call_tmp[747700] "expr temp" "maybe param" "maybe type" "temp"
    (747703 'move' call_tmp[747700](467994 'query' a[304619] 1))
    unknown call_tmp[747705] "expr temp" "maybe param" "maybe type" "temp"
    (747708 'move' call_tmp[747705](467991 'query' b[304629] 1))
    unknown call_tmp[747710] "expr temp" "maybe param" "maybe type" "temp"
    (747713 'move' call_tmp[747710](467997 call == call_tmp[747700] call_tmp[747705]))
    (468001 call & 1 call_tmp[747710])
  }
  { scopeless type
    bool[10]
  }
  (355511 'used modules list'(353060 'use' ChapelStandard[20264])(298218 'import' ChapelLocks[187256])(298222 'use' HaltWrappers[209998])(298225 'use' Sort[267968])(298438 'use' IO[230891]))
  (364893 'referenced modules list' ChapelLocks[187256] Sort[267968])
}