AST dump for List after pass buildDefaultFunctions.
Module use list: ChapelStandard ChapelLocks HaltWrappers Sort IO 

{
  function chpl__init_List[416198]() : void[4] "insert line file info" "module init"
  {
    (549860 'init var' _initialCapacity[298257] 8)
    (298260 'end of statement')
    (549862 'init var' _initialArrayCapacity[298262] 16)
    (298265 'end of statement')
    (549864 'init var' _sanityChecks[298267] 0)
    (298270 'end of statement')
    (549870 'move' _lockType[298299](549869 call chpl_LocalSpinlock[187432]))
    (490950 'end of statement')
    (539662 return _void[55])
  }
  const _initialCapacity[298257] "dead at end of block" "const" "insert auto destroy" "no doc" "private"
  const _initialArrayCapacity[298262] "dead at end of block" "const" "insert auto destroy" "no doc" "private"
  unknown _sanityChecks[298267] "dead at end of block" "no doc" "param" "private"
  function _sanity[298277](arg expr[298274]:bool[10]) : _unknown[51] "inline" "private" "no return value for void"
  {
    unknown call_tmp[744192] "expr temp" "maybe param" "maybe type" "temp"
    (744195 'move' call_tmp[744192](298285 call _cond_test _sanityChecks[298267]))
    if call_tmp[744192]
    {
      (298283 call assert expr[298274])
    }
    (539104 return _void[55])
  }
  unknown _lockType[298299] "dead at end of block" "insert auto destroy" "no doc" "type variable" chpl_LocalSpinlock[187432]
  function _LockWrapper[298340].lock[298313](arg _mt[298344]:_MT[238], arg this[298342]:_LockWrapper[298340]) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[744199] "expr temp" "maybe param" "maybe type" "temp"
    (744202 'move' call_tmp[744199](364943 call lock$ _mt[243] this[298342]))
    (298320 call(298316 call (partial) lock _mt[243] call_tmp[744199]))
    (539106 return _void[55])
  }
  function _LockWrapper[298340].unlock[298327](arg _mt[298348]:_MT[238], arg this[298346]:_LockWrapper[298340]) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[744208] "expr temp" "maybe param" "maybe type" "temp"
    (744211 'move' call_tmp[744208](364948 call lock$ _mt[243] this[298346]))
    (298334 call(298330 call (partial) unlock _mt[243] call_tmp[744208]))
    (539108 return _void[55])
  }
  function _LockWrapper[298340].super[930020](arg _mt[930022]:_MT[238], arg this[930024]:_LockWrapper[298340]) : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[930034] "RVV" "temp"
    unknown call_tmp[930041] "expr temp" "maybe param" "maybe type" "temp"
    (930044 'move' call_tmp[930041](930028 '.v' this[930024] c"super"))
    (930039 'move' ret[930034](930038 'deref' call_tmp[930041]))
    (930036 return ret[930034])
  }
  function _LockWrapper[298340].lock$[930046](arg _mt[930048]:_MT[238], arg this[930050]:_LockWrapper[298340]) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[930060] "RVV" "temp"
    unknown call_tmp[930067] "expr temp" "maybe param" "maybe type" "temp"
    (930070 'move' call_tmp[930067](930054 '.' this[930050] c"lock$"))
    (930065 'move' ret[930060](930064 'addr of' call_tmp[930067]))
    (930062 return ret[930060])
  }
  function _LockWrapper[298340].init[930072](arg _mt[930074]:_MT[238], arg this[930075]:_LockWrapper[298340], in arg lock$[930086] :
  (930156 'new' _lockType[298299]) =
  (930157 'new' _lockType[298299])) : void[4] "compiler generated" "inline" "last resort" "method" "primary method" "suppress lvalue error"
  {
    unknown super_tmp[930105] "temporary of super field" "temp"
    (930107 'move' super_tmp[930105](930104 '.v' this[930075] c"super"))
    (930085 call(930083 call (partial) init _mt[243] super_tmp[930105]))
    (930131 'end of statement')
    unknown tmp[930110] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[930134] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[930146] "expr temp" "maybe param" "maybe type" "temp"
      (930149 'move' call_tmp[930146](930112 '.v' this[930075] c"super"))
      (930138 'move' call_type_tmp[930134](930115 'typeof' call_tmp[930146]))
    }
    (930116 'move' tmp[930110] call_type_tmp[930134])
    unknown call_tmp[930151] "maybe param" "maybe type" "temp"
    (930154 'move' call_tmp[930151](930121 'cast' tmp[930110] this[930075]))
    unknown chpl__thisAsParent[930118] "dead at end of block" "insert auto destroy" "temp"
    (930142 'init var' chpl__thisAsParent[930118] call_tmp[930151] tmp[930110])
    (930124 'setcid' chpl__thisAsParent[930118])
    (930126 '.=' this[930075] c"lock$" lock$[930086])
    (930132 'end of statement')
    (930129 'setcid' this[930075])
    (930140 return _void[55])
  }
  function _LockWrapper[298340].deinit[930158](arg _mt[930160]:_MT[238], arg this[930162]:_LockWrapper[298340]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method"
  {
    (930170 return _void[55])
  }
  function _LockWrapper[298340].writeThis[930172](arg _mt[930176]:_MT[238], arg this[930174]:_LockWrapper[298340], arg f[930175]:_any[178](?)) : void[4] throws "compiler generated" "last resort" "method" "primary method" "method overrides"
  {
    (930181 call writeThisDefaultImpl f[930175] this[930174])
    (930186 return _void[55])
  }
  function _LockWrapper[298340].readThis[930188](arg _mt[930192]:_MT[238], arg this[930190]:_LockWrapper[298340], arg f[930191]:_any[178](?)) : void[4] throws "compiler generated" "last resort" "method" "primary method" "method overrides"
  {
    (930196 call readThisDefaultImpl f[930191] this[930190])
    (930202 return _void[55])
  }
  type _LockWrapper[298340] val super[355815]:object[22] "super class" unknown lock$[298307](298303 'new'(298306 call _lockType[298299]))
  type _LockWrapper[405240](?)
  function _checkType[298355](arg eltType[298353]:_any[178](?)) : _unknown[51] "no doc" "no return value for void"
  {
    unknown call_tmp[744215] "expr temp" "maybe param" "maybe type" "temp"
    (744218 'move' call_tmp[744215](298360 call isGenericType eltType[298353]))
    unknown call_tmp[744220] "expr temp" "maybe param" "maybe type" "temp"
    (744223 'move' call_tmp[744220](298433 call _cond_test call_tmp[744215]))
    if call_tmp[744220]
    {
      unknown call_tmp[744225] "expr temp" "maybe param" "maybe type" "temp"
      (744228 'move' call_tmp[744225](298381 call _cast string[26] eltType[298353]))
      unknown call_tmp[744230] "expr temp" "maybe param" "maybe type" "temp"
      (744233 'move' call_tmp[744230](298383 call + "creating a list with element type " call_tmp[744225]))
      (298386 call compilerWarning call_tmp[744230])
      (490953 'end of statement')
      unknown tmp[434839] "maybe param" "temp"
      (434850 'move' tmp[434839](298392 call isClassType eltType[298353]))
      unknown call_tmp[744235] "expr temp" "maybe param" "maybe type" "temp"
      (744238 'move' call_tmp[744235](434852 call _cond_invalid tmp[434839]))
      if call_tmp[744235]
      {
        (434855 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown tmp[580712] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[580713] "maybe param" "temp"
      unknown call_tmp[744240] "expr temp" "maybe param" "maybe type" "temp"
      (744243 'move' call_tmp[744240](434840 call isTrue tmp[434839]))
      (580718 'move' tmp[580713](580716 call _cond_test call_tmp[744240]))
      if tmp[580713]
      {
        unknown tmp[580720] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[744245] "expr temp" "maybe param" "maybe type" "temp"
        (744248 'move' call_tmp[744245](298395 'to borrowed class from unknown' eltType[298353]))
        unknown call_tmp[744250] "expr temp" "maybe param" "maybe type" "temp"
        (744253 'move' call_tmp[744250](298397 call isGenericType call_tmp[744245]))
        unknown call_tmp[744255] "expr temp" "maybe param" "maybe type" "temp"
        (744258 'move' call_tmp[744255](298398 call ! call_tmp[744250]))
        (580722 'move' tmp[580720](434843 call isTrue call_tmp[744255]))
        (580727 'move' tmp[580712](580724 '_paramFoldLogical' tmp[580713] tmp[580720]))
      }
      {
        (580732 'move' tmp[580712](580729 '_paramFoldLogical' tmp[580713] 0))
      }
      unknown call_tmp[744260] "expr temp" "maybe param" "maybe type" "temp"
      (744263 'move' call_tmp[744260](298408 call _cond_test tmp[580712]))
      if call_tmp[744260]
      {
        (298405 call compilerWarning "which now means class type with generic management")
      }
      (298431 call compilerError "list element type cannot currently be generic")
    }
    (539110 return _void[55])
  }
  function _dummyFieldType[298444](arg t[298442]:_any[178](?)) type : _unknown[51] "no doc"
  {
    unknown ret[539114] "RVV" "temp" "type variable"
    unknown call_tmp[744265] "expr temp" "maybe param" "maybe type" "temp"
    (744268 'move' call_tmp[744265](298449 call isBorrowedClass t[298442]))
    unknown call_tmp[744270] "expr temp" "maybe param" "maybe type" "temp"
    (744273 'move' call_tmp[744270](298459 call _cond_test call_tmp[744265]))
    if call_tmp[744270]
    {
      unknown call_tmp[744275] "expr temp" "maybe param" "maybe type" "temp"
      (744278 'move' call_tmp[744275](298451 'to nilable class from type' t[298442]))
      (539119 'move' ret[539114](539118 'deref' call_tmp[744275]))
      gotoReturn _end__dummyFieldType[539112] _end__dummyFieldType[539112]
    }
    {
      (539124 'move' ret[539114](539123 'deref' nothing[7]))
      gotoReturn _end__dummyFieldType[539112] _end__dummyFieldType[539112]
    }
    label _end__dummyFieldType[539112]
    (539116 return ret[539114])
  }
  function list[304222](?).init[298530](arg _mt[304226]:_MT[238], ref arg this[304224]:list[304222](?), arg eltType[298528]:_any[178](?), param arg parSafe[298533] :
  0 =
  0) : void[4] "method" "primary method" "no return value for void"
  {
    (298539 call _checkType eltType[298528])
    (490959 'end of statement')
    unknown tmp[467121] "temp" "type variable"
    (467123 'move' tmp[467121] eltType[298528])
    (467125 'init field' this[304224] c"eltType" tmp[467121])
    (490960 'end of statement')
    unknown tmp[467129] "param" "temp"
    (467131 'init var' tmp[467129] parSafe[298533])
    (467133 'init field' this[304224] c"parSafe" tmp[467129])
    (490961 'end of statement')
    unknown tmp[467138] "temp"
    (467140 'init var' tmp[467138] 0)
    (467142 '.=' this[304224] c"_size" tmp[467138])
    (490962 'end of statement')
    unknown tmp[467154] "temp"
    unknown tmp[580739] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[580740] "maybe param" "temp"
    unknown call_tmp[744280] "expr temp" "maybe param" "maybe type" "temp"
    (744283 'move' call_tmp[744280](467162 '.v' this[304224] c"parSafe"))
    (580745 'move' tmp[580740](580743 call _cond_test call_tmp[744280]))
    if tmp[580740]
    {
      unknown tmp[580747] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (580749 'move' tmp[580747](748182 'new' _LockWrapper[405240](?)))
      (580754 'move' tmp[580739](580751 '_paramFoldLogical' tmp[580740] tmp[580747]))
    }
    {
      (580759 'move' tmp[580739](580756 '_paramFoldLogical' tmp[580740] none[57]))
    }
    (467156 'init var' tmp[467154] tmp[580739])
    (467158 '.=' this[304224] c"_lock$" tmp[467154])
    (490963 'end of statement')
    unknown call_tmp[744285] "expr temp" "maybe param" "maybe type" "temp"
    (744288 'move' call_tmp[744285](467179 '.v' this[304224] c"eltType"))
    unknown call_tmp[744290] "expr temp" "maybe param" "maybe type" "temp"
    (744293 'move' call_tmp[744290](467171 call _ddata[11696](?) call_tmp[744285]))
    unknown call_tmp[744295] "maybe param" "maybe type" "temp"
    (744298 'move' call_tmp[744295](467169 call _ddata[11696](?) call_tmp[744290]))
    unknown tmp[467166] "temp"
    (467173 'init var' tmp[467166] nil[44] call_tmp[744295])
    (467175 'init field' this[304224] c"_arrays" tmp[467166])
    (490964 'end of statement')
    unknown tmp[467183] "temp"
    (467185 'init var' tmp[467183] 0)
    (467187 '.=' this[304224] c"_arrayCapacity" tmp[467183])
    (490965 'end of statement')
    unknown tmp[467192] "temp"
    (467194 'init var' tmp[467192] 0)
    (467196 '.=' this[304224] c"_totalCapacity" tmp[467192])
    (490966 'end of statement')
    unknown tmp[467200] "temp"
    unknown call_tmp[744300] "expr temp" "maybe param" "maybe type" "temp"
    (744303 'move' call_tmp[744300](467213 '.v' this[304224] c"eltType"))
    unknown call_tmp[744305] "expr temp" "maybe param" "maybe type" "temp"
    (744308 'move' call_tmp[744305](467203 call _dummyFieldType call_tmp[744300]))
    (467205 'default init var' tmp[467200] call_tmp[744305])
    (467209 '.=' this[304224] c"_dummyFieldToForceBorrowChecking" tmp[467200])
    (490967 'end of statement')
    (298572 call(298568 call (partial) _firstTimeInitializeArrays _mt[243] this[304224]))
    (539128 return _void[55])
  }
  function list[304222](?).init[298586](arg _mt[304230]:_MT[238], ref arg this[304228]:list[304222](?), arg other[298583]:list[304222](?), param arg parSafe[298589] :
  0 =
  0) : void[4] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[744312] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744315 'move' call_tmp[744312](298594 'typeof' this[304228]))
    unknown call_tmp[744319] "expr temp" "maybe param" "maybe type" "temp"
    (744322 'move' call_tmp[744319](298595 call eltType _mt[243] call_tmp[744312]))
    unknown call_tmp[744324] "expr temp" "maybe param" "maybe type" "temp"
    (744327 'move' call_tmp[744324](298599 call isCopyableType call_tmp[744319]))
    unknown call_tmp[744329] "expr temp" "maybe param" "maybe type" "temp"
    (744332 'move' call_tmp[744329](298600 call ! call_tmp[744324]))
    unknown call_tmp[744334] "expr temp" "maybe param" "maybe type" "temp"
    (744337 'move' call_tmp[744334](298642 call _cond_test call_tmp[744329]))
    if call_tmp[744334]
    {
      unknown call_tmp[744339] "expr temp" "maybe param" "maybe type" "temp"
      (744342 'move' call_tmp[744339](298637 call + "Cannot copy list with element type that " "cannot be copied"))
      (298640 call compilerError call_tmp[744339])
    }
    unknown tmp[467226] "temp" "type variable"
    (467228 'move' tmp[467226](467222 'query' other[298583] 1))
    (467230 'init field' this[304228] c"eltType" tmp[467226])
    (490970 'end of statement')
    unknown tmp[467234] "param" "temp"
    (467236 'init var' tmp[467234] parSafe[298589])
    (467238 'init field' this[304228] c"parSafe" tmp[467234])
    (490971 'end of statement')
    unknown tmp[467243] "temp"
    (467245 'init var' tmp[467243] 0)
    (467247 '.=' this[304228] c"_size" tmp[467243])
    (490972 'end of statement')
    unknown tmp[467259] "temp"
    unknown tmp[580766] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[580767] "maybe param" "temp"
    unknown call_tmp[744344] "expr temp" "maybe param" "maybe type" "temp"
    (744347 'move' call_tmp[744344](467267 '.v' this[304228] c"parSafe"))
    (580772 'move' tmp[580767](580770 call _cond_test call_tmp[744344]))
    if tmp[580767]
    {
      unknown tmp[580774] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (580776 'move' tmp[580774](748183 'new' _LockWrapper[405240](?)))
      (580781 'move' tmp[580766](580778 '_paramFoldLogical' tmp[580767] tmp[580774]))
    }
    {
      (580786 'move' tmp[580766](580783 '_paramFoldLogical' tmp[580767] none[57]))
    }
    (467261 'init var' tmp[467259] tmp[580766])
    (467263 '.=' this[304228] c"_lock$" tmp[467259])
    (490973 'end of statement')
    unknown call_tmp[744349] "expr temp" "maybe param" "maybe type" "temp"
    (744352 'move' call_tmp[744349](467284 '.v' this[304228] c"eltType"))
    unknown call_tmp[744354] "expr temp" "maybe param" "maybe type" "temp"
    (744357 'move' call_tmp[744354](467276 call _ddata[11696](?) call_tmp[744349]))
    unknown call_tmp[744359] "maybe param" "maybe type" "temp"
    (744362 'move' call_tmp[744359](467274 call _ddata[11696](?) call_tmp[744354]))
    unknown tmp[467271] "temp"
    (467278 'init var' tmp[467271] nil[44] call_tmp[744359])
    (467280 'init field' this[304228] c"_arrays" tmp[467271])
    (490974 'end of statement')
    unknown tmp[467288] "temp"
    (467290 'init var' tmp[467288] 0)
    (467292 '.=' this[304228] c"_arrayCapacity" tmp[467288])
    (490975 'end of statement')
    unknown tmp[467297] "temp"
    (467299 'init var' tmp[467297] 0)
    (467301 '.=' this[304228] c"_totalCapacity" tmp[467297])
    (490976 'end of statement')
    unknown tmp[467305] "temp"
    unknown call_tmp[744364] "expr temp" "maybe param" "maybe type" "temp"
    (744367 'move' call_tmp[744364](467316 '.v' this[304228] c"eltType"))
    unknown call_tmp[744369] "expr temp" "maybe param" "maybe type" "temp"
    (744372 'move' call_tmp[744369](467308 call _dummyFieldType call_tmp[744364]))
    (467310 'default init var' tmp[467305] call_tmp[744369])
    (467312 '.=' this[304228] c"_dummyFieldToForceBorrowChecking" tmp[467305])
    (490977 'end of statement')
    (298674 call(405257 call (partial) _commonInitFromIterable _mt[243] this[304228]) other[298583])
    (539130 return _void[55])
  }
  function list[304222](?).init[298690](arg _mt[304234]:_MT[238], ref arg this[304232]:list[304222](?), arg other[298687]:_array[133594](?), param arg parSafe[298693] :
  0 =
  0) : void[4] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[744378] "expr temp" "maybe param" "maybe type" "temp"
    (744381 'move' call_tmp[744378](467321 call eltType _mt[243] other[298687]))
    (298699 call _checkType call_tmp[744378])
    (490979 'end of statement')
    unknown call_tmp[744385] "expr temp" "maybe param" "maybe type" "temp"
    (744388 'move' call_tmp[744385](467325 call eltType _mt[243] other[298687]))
    unknown call_tmp[744390] "expr temp" "maybe param" "maybe type" "temp"
    (744393 'move' call_tmp[744390](298705 call isCopyableType call_tmp[744385]))
    unknown call_tmp[744395] "expr temp" "maybe param" "maybe type" "temp"
    (744398 'move' call_tmp[744395](298706 call ! call_tmp[744390]))
    unknown call_tmp[744400] "expr temp" "maybe param" "maybe type" "temp"
    (744403 'move' call_tmp[744400](298748 call _cond_test call_tmp[744395]))
    if call_tmp[744400]
    {
      unknown call_tmp[744405] "expr temp" "maybe param" "maybe type" "temp"
      (744408 'move' call_tmp[744405](298743 call + "Cannot construct list from array with element " "type that cannot be copied"))
      (298746 call compilerError call_tmp[744405])
    }
    unknown tmp[467333] "temp" "type variable"
    (467335 'move' tmp[467333](467329 call eltType _mt[243] other[298687]))
    (467337 'init field' this[304232] c"eltType" tmp[467333])
    (490981 'end of statement')
    unknown tmp[467341] "param" "temp"
    (467343 'init var' tmp[467341] parSafe[298693])
    (467345 'init field' this[304232] c"parSafe" tmp[467341])
    (490982 'end of statement')
    unknown tmp[467350] "temp"
    (467352 'init var' tmp[467350] 0)
    (467354 '.=' this[304232] c"_size" tmp[467350])
    (490983 'end of statement')
    unknown tmp[467366] "temp"
    unknown tmp[580793] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[580794] "maybe param" "temp"
    unknown call_tmp[744412] "expr temp" "maybe param" "maybe type" "temp"
    (744415 'move' call_tmp[744412](467374 '.v' this[304232] c"parSafe"))
    (580799 'move' tmp[580794](580797 call _cond_test call_tmp[744412]))
    if tmp[580794]
    {
      unknown tmp[580801] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (580803 'move' tmp[580801](748184 'new' _LockWrapper[405240](?)))
      (580808 'move' tmp[580793](580805 '_paramFoldLogical' tmp[580794] tmp[580801]))
    }
    {
      (580813 'move' tmp[580793](580810 '_paramFoldLogical' tmp[580794] none[57]))
    }
    (467368 'init var' tmp[467366] tmp[580793])
    (467370 '.=' this[304232] c"_lock$" tmp[467366])
    (490984 'end of statement')
    unknown call_tmp[744417] "expr temp" "maybe param" "maybe type" "temp"
    (744420 'move' call_tmp[744417](467391 '.v' this[304232] c"eltType"))
    unknown call_tmp[744422] "expr temp" "maybe param" "maybe type" "temp"
    (744425 'move' call_tmp[744422](467383 call _ddata[11696](?) call_tmp[744417]))
    unknown call_tmp[744427] "maybe param" "maybe type" "temp"
    (744430 'move' call_tmp[744427](467381 call _ddata[11696](?) call_tmp[744422]))
    unknown tmp[467378] "temp"
    (467385 'init var' tmp[467378] nil[44] call_tmp[744427])
    (467387 'init field' this[304232] c"_arrays" tmp[467378])
    (490985 'end of statement')
    unknown tmp[467395] "temp"
    (467397 'init var' tmp[467395] 0)
    (467399 '.=' this[304232] c"_arrayCapacity" tmp[467395])
    (490986 'end of statement')
    unknown tmp[467404] "temp"
    (467406 'init var' tmp[467404] 0)
    (467408 '.=' this[304232] c"_totalCapacity" tmp[467404])
    (490987 'end of statement')
    unknown tmp[467412] "temp"
    unknown call_tmp[744432] "expr temp" "maybe param" "maybe type" "temp"
    (744435 'move' call_tmp[744432](467423 '.v' this[304232] c"eltType"))
    unknown call_tmp[744437] "expr temp" "maybe param" "maybe type" "temp"
    (744440 'move' call_tmp[744437](467415 call _dummyFieldType call_tmp[744432]))
    (467417 'default init var' tmp[467412] call_tmp[744437])
    (467419 '.=' this[304232] c"_dummyFieldToForceBorrowChecking" tmp[467412])
    (490988 'end of statement')
    (298779 call(405266 call (partial) _commonInitFromIterable _mt[243] this[304232]) other[298687])
    (539132 return _void[55])
  }
  function list[304222](?).init[298793](arg _mt[304238]:_MT[238], ref arg this[304236]:list[304222](?), arg other[298790]:range[64319](?), param arg parSafe[298796] :
  0 =
  0) : void[4] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[744444] "expr temp" "maybe param" "maybe type" "temp"
    (744447 'move' call_tmp[744444](467432 'query' other[298790] 1))
    (298802 call _checkType call_tmp[744444])
    (490990 'end of statement')
    unknown tmp[467439] "temp" "type variable"
    (467441 'move' tmp[467439](467435 'query' other[298790] 1))
    (467443 'init field' this[304236] c"eltType" tmp[467439])
    (490991 'end of statement')
    unknown tmp[467447] "param" "temp"
    (467449 'init var' tmp[467447] parSafe[298796])
    (467451 'init field' this[304236] c"parSafe" tmp[467447])
    (490992 'end of statement')
    unknown call_tmp[744449] "expr temp" "maybe param" "maybe type" "temp"
    (744452 'move' call_tmp[744449](298824 call isBoundedRange other[298790]))
    unknown call_tmp[744454] "expr temp" "maybe param" "maybe type" "temp"
    (744457 'move' call_tmp[744454](298825 call ! call_tmp[744449]))
    unknown call_tmp[744459] "expr temp" "maybe param" "maybe type" "temp"
    (744462 'move' call_tmp[744459](298897 call _cond_test call_tmp[744454]))
    if call_tmp[744459]
    {
      unknown call_tmp[744464] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (744467 'move' call_tmp[744464](298828 'typeof' this[304236]))
      unknown call_tmp[744469] "maybe param" "maybe type" "temp"
      (744472 'move' call_tmp[744469](298830 call _cast string[26] call_tmp[744464]))
      unknown e[298832] "dead at end of block" "param"
      (549872 'init var' e[298832] call_tmp[744469])
      (298835 'end of statement')
      unknown call_tmp[744474] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (744477 'move' call_tmp[744474](298838 'typeof' other[298790]))
      unknown call_tmp[744479] "maybe param" "maybe type" "temp"
      (744482 'move' call_tmp[744479](298840 call _cast string[26] call_tmp[744474]))
      unknown f[298842] "dead at end of block" "param"
      (549874 'init var' f[298842] call_tmp[744479])
      (298845 'end of statement')
      unknown call_tmp[744484] "expr temp" "maybe param" "maybe type" "temp"
      (744487 'move' call_tmp[744484](298864 call + "Cannot init " e[298832]))
      unknown call_tmp[744489] "expr temp" "maybe param" "maybe type" "temp"
      (744492 'move' call_tmp[744489](298883 call + call_tmp[744484] " from unbounded "))
      unknown call_tmp[744494] "maybe param" "maybe type" "temp"
      (744497 'move' call_tmp[744494](298886 call + call_tmp[744489] f[298842]))
      unknown msg[298888] "dead at end of block" "param"
      (549876 'init var' msg[298888] call_tmp[744494])
      (298891 'end of statement')
      (298895 call compilerError msg[298888])
    }
    unknown tmp[467456] "temp"
    (467458 'init var' tmp[467456] 0)
    (467460 '.=' this[304236] c"_size" tmp[467456])
    (490994 'end of statement')
    unknown tmp[467472] "temp"
    unknown tmp[580820] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[580821] "maybe param" "temp"
    unknown call_tmp[744499] "expr temp" "maybe param" "maybe type" "temp"
    (744502 'move' call_tmp[744499](467480 '.v' this[304236] c"parSafe"))
    (580826 'move' tmp[580821](580824 call _cond_test call_tmp[744499]))
    if tmp[580821]
    {
      unknown tmp[580828] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (580830 'move' tmp[580828](748185 'new' _LockWrapper[405240](?)))
      (580835 'move' tmp[580820](580832 '_paramFoldLogical' tmp[580821] tmp[580828]))
    }
    {
      (580840 'move' tmp[580820](580837 '_paramFoldLogical' tmp[580821] none[57]))
    }
    (467474 'init var' tmp[467472] tmp[580820])
    (467476 '.=' this[304236] c"_lock$" tmp[467472])
    (490995 'end of statement')
    unknown call_tmp[744504] "expr temp" "maybe param" "maybe type" "temp"
    (744507 'move' call_tmp[744504](467497 '.v' this[304236] c"eltType"))
    unknown call_tmp[744509] "expr temp" "maybe param" "maybe type" "temp"
    (744512 'move' call_tmp[744509](467489 call _ddata[11696](?) call_tmp[744504]))
    unknown call_tmp[744514] "maybe param" "maybe type" "temp"
    (744517 'move' call_tmp[744514](467487 call _ddata[11696](?) call_tmp[744509]))
    unknown tmp[467484] "temp"
    (467491 'init var' tmp[467484] nil[44] call_tmp[744514])
    (467493 'init field' this[304236] c"_arrays" tmp[467484])
    (490996 'end of statement')
    unknown tmp[467501] "temp"
    (467503 'init var' tmp[467501] 0)
    (467505 '.=' this[304236] c"_arrayCapacity" tmp[467501])
    (490997 'end of statement')
    unknown tmp[467510] "temp"
    (467512 'init var' tmp[467510] 0)
    (467514 '.=' this[304236] c"_totalCapacity" tmp[467510])
    (490998 'end of statement')
    unknown tmp[467518] "temp"
    unknown call_tmp[744519] "expr temp" "maybe param" "maybe type" "temp"
    (744522 'move' call_tmp[744519](467529 '.v' this[304236] c"eltType"))
    unknown call_tmp[744524] "expr temp" "maybe param" "maybe type" "temp"
    (744527 'move' call_tmp[744524](467521 call _dummyFieldType call_tmp[744519]))
    (467523 'default init var' tmp[467518] call_tmp[744524])
    (467525 '.=' this[304236] c"_dummyFieldToForceBorrowChecking" tmp[467518])
    (490999 'end of statement')
    (298911 call(405281 call (partial) _commonInitFromIterable _mt[243] this[304236]) other[298790])
    (539134 return _void[55])
  }
  function list[304222](?).init=[298930](arg _mt[304242]:_MT[238], ref arg this[304240]:list[304222](?), arg other[298927]:list[304222](?)) : void[4] "compiler added where" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[744531] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744534 'move' call_tmp[744531](298934 'typeof' this[304240]))
    unknown call_tmp[744538] "expr temp" "maybe param" "maybe type" "temp"
    (744541 'move' call_tmp[744538](298935 call eltType _mt[243] call_tmp[744531]))
    unknown call_tmp[744543] "expr temp" "maybe param" "maybe type" "temp"
    (744546 'move' call_tmp[744543](298939 call isCopyableType call_tmp[744538]))
    unknown call_tmp[744548] "expr temp" "maybe param" "maybe type" "temp"
    (744551 'move' call_tmp[744548](298940 call ! call_tmp[744543]))
    unknown call_tmp[744553] "expr temp" "maybe param" "maybe type" "temp"
    (744556 'move' call_tmp[744553](298950 call _cond_test call_tmp[744548]))
    if call_tmp[744553]
    {
      unknown call_tmp[744558] "expr temp" "maybe param" "maybe type" "temp"
      (744561 'move' call_tmp[744558](298945 call + "Cannot copy list with element type that " "cannot be copied"))
      (298948 call compilerError call_tmp[744558])
    }
    unknown tmp[467553] "temp" "type variable"
    unknown call_tmp[744563] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744566 'move' call_tmp[744563](298961 'typeof' this[304240]))
    (467555 'move' tmp[467553](298962 call eltType _mt[243] call_tmp[744563]))
    (467557 'init field' this[304240] c"eltType" tmp[467553])
    (491002 'end of statement')
    unknown call_tmp[744570] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744573 'move' call_tmp[744570](298973 'typeof' this[304240]))
    unknown call_tmp[744577] "maybe param" "maybe type" "temp"
    (744580 'move' call_tmp[744577](298974 call parSafe _mt[243] call_tmp[744570]))
    unknown tmp[467561] "param" "temp"
    (467563 'init var' tmp[467561] call_tmp[744577])
    (467565 'init field' this[304240] c"parSafe" tmp[467561])
    (491003 'end of statement')
    unknown tmp[467570] "temp"
    (467572 'init var' tmp[467570] 0)
    (467574 '.=' this[304240] c"_size" tmp[467570])
    (491004 'end of statement')
    unknown tmp[467586] "temp"
    unknown tmp[580847] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[580848] "maybe param" "temp"
    unknown call_tmp[744582] "expr temp" "maybe param" "maybe type" "temp"
    (744585 'move' call_tmp[744582](467594 '.v' this[304240] c"parSafe"))
    (580853 'move' tmp[580848](580851 call _cond_test call_tmp[744582]))
    if tmp[580848]
    {
      unknown tmp[580855] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (580857 'move' tmp[580855](748186 'new' _LockWrapper[405240](?)))
      (580862 'move' tmp[580847](580859 '_paramFoldLogical' tmp[580848] tmp[580855]))
    }
    {
      (580867 'move' tmp[580847](580864 '_paramFoldLogical' tmp[580848] none[57]))
    }
    (467588 'init var' tmp[467586] tmp[580847])
    (467590 '.=' this[304240] c"_lock$" tmp[467586])
    (491005 'end of statement')
    unknown call_tmp[744587] "expr temp" "maybe param" "maybe type" "temp"
    (744590 'move' call_tmp[744587](467611 '.v' this[304240] c"eltType"))
    unknown call_tmp[744592] "expr temp" "maybe param" "maybe type" "temp"
    (744595 'move' call_tmp[744592](467603 call _ddata[11696](?) call_tmp[744587]))
    unknown call_tmp[744597] "maybe param" "maybe type" "temp"
    (744600 'move' call_tmp[744597](467601 call _ddata[11696](?) call_tmp[744592]))
    unknown tmp[467598] "temp"
    (467605 'init var' tmp[467598] nil[44] call_tmp[744597])
    (467607 'init field' this[304240] c"_arrays" tmp[467598])
    (491006 'end of statement')
    unknown tmp[467615] "temp"
    (467617 'init var' tmp[467615] 0)
    (467619 '.=' this[304240] c"_arrayCapacity" tmp[467615])
    (491007 'end of statement')
    unknown tmp[467624] "temp"
    (467626 'init var' tmp[467624] 0)
    (467628 '.=' this[304240] c"_totalCapacity" tmp[467624])
    (491008 'end of statement')
    unknown tmp[467632] "temp"
    unknown call_tmp[744602] "expr temp" "maybe param" "maybe type" "temp"
    (744605 'move' call_tmp[744602](467643 '.v' this[304240] c"eltType"))
    unknown call_tmp[744607] "expr temp" "maybe param" "maybe type" "temp"
    (744610 'move' call_tmp[744607](467635 call _dummyFieldType call_tmp[744602]))
    (467637 'default init var' tmp[467632] call_tmp[744607])
    (467639 '.=' this[304240] c"_dummyFieldToForceBorrowChecking" tmp[467632])
    (491009 'end of statement')
    (298990 call(405291 call (partial) _commonInitFromIterable _mt[243] this[304240]) other[298927])
    (539136 return _void[55])
  }
  where {
    unknown call_tmp[744614] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744617 'move' call_tmp[744614](467540 'typeof' this[304240]))
    unknown call_tmp[744621] "expr temp" "maybe param" "maybe type" "temp"
    (744624 'move' call_tmp[744621](467539 call eltType _mt[243] call_tmp[744614]))
    unknown call_tmp[744626] "expr temp" "maybe param" "maybe type" "temp"
    (744629 'move' call_tmp[744626](467535 'query' other[298927] 1))
    unknown call_tmp[744631] "expr temp" "maybe param" "maybe type" "temp"
    (744634 'move' call_tmp[744631](467543 call == call_tmp[744621] call_tmp[744626]))
    (467547 call & 1 call_tmp[744631])
  }
  function list[304222](?).init=[299009](arg _mt[304246]:_MT[238], ref arg this[304244]:list[304222](?), arg other[299006]:_array[133594](?)) : void[4] "compiler added where" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[744636] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744639 'move' call_tmp[744636](299013 'typeof' this[304244]))
    unknown call_tmp[744643] "expr temp" "maybe param" "maybe type" "temp"
    (744646 'move' call_tmp[744643](299014 call eltType _mt[243] call_tmp[744636]))
    unknown call_tmp[744648] "expr temp" "maybe param" "maybe type" "temp"
    (744651 'move' call_tmp[744648](299018 call isCopyableType call_tmp[744643]))
    unknown call_tmp[744653] "expr temp" "maybe param" "maybe type" "temp"
    (744656 'move' call_tmp[744653](299019 call ! call_tmp[744648]))
    unknown call_tmp[744658] "expr temp" "maybe param" "maybe type" "temp"
    (744661 'move' call_tmp[744658](299061 call _cond_test call_tmp[744653]))
    if call_tmp[744658]
    {
      unknown call_tmp[744663] "expr temp" "maybe param" "maybe type" "temp"
      (744666 'move' call_tmp[744663](299056 call + "Cannot copy list from array with element type " "that cannot be copied"))
      (299059 call compilerError call_tmp[744663])
    }
    unknown tmp[467658] "temp" "type variable"
    unknown call_tmp[744668] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744671 'move' call_tmp[744668](299072 'typeof' this[304244]))
    (467660 'move' tmp[467658](299073 call eltType _mt[243] call_tmp[744668]))
    (467662 'init field' this[304244] c"eltType" tmp[467658])
    (491012 'end of statement')
    unknown call_tmp[744675] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744678 'move' call_tmp[744675](299084 'typeof' this[304244]))
    unknown call_tmp[744682] "maybe param" "maybe type" "temp"
    (744685 'move' call_tmp[744682](299085 call parSafe _mt[243] call_tmp[744675]))
    unknown tmp[467666] "param" "temp"
    (467668 'init var' tmp[467666] call_tmp[744682])
    (467670 'init field' this[304244] c"parSafe" tmp[467666])
    (491013 'end of statement')
    unknown tmp[467675] "temp"
    (467677 'init var' tmp[467675] 0)
    (467679 '.=' this[304244] c"_size" tmp[467675])
    (491014 'end of statement')
    unknown tmp[467691] "temp"
    unknown tmp[580874] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[580875] "maybe param" "temp"
    unknown call_tmp[744687] "expr temp" "maybe param" "maybe type" "temp"
    (744690 'move' call_tmp[744687](467699 '.v' this[304244] c"parSafe"))
    (580880 'move' tmp[580875](580878 call _cond_test call_tmp[744687]))
    if tmp[580875]
    {
      unknown tmp[580882] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (580884 'move' tmp[580882](748187 'new' _LockWrapper[405240](?)))
      (580889 'move' tmp[580874](580886 '_paramFoldLogical' tmp[580875] tmp[580882]))
    }
    {
      (580894 'move' tmp[580874](580891 '_paramFoldLogical' tmp[580875] none[57]))
    }
    (467693 'init var' tmp[467691] tmp[580874])
    (467695 '.=' this[304244] c"_lock$" tmp[467691])
    (491015 'end of statement')
    unknown call_tmp[744692] "expr temp" "maybe param" "maybe type" "temp"
    (744695 'move' call_tmp[744692](467716 '.v' this[304244] c"eltType"))
    unknown call_tmp[744697] "expr temp" "maybe param" "maybe type" "temp"
    (744700 'move' call_tmp[744697](467708 call _ddata[11696](?) call_tmp[744692]))
    unknown call_tmp[744702] "maybe param" "maybe type" "temp"
    (744705 'move' call_tmp[744702](467706 call _ddata[11696](?) call_tmp[744697]))
    unknown tmp[467703] "temp"
    (467710 'init var' tmp[467703] nil[44] call_tmp[744702])
    (467712 'init field' this[304244] c"_arrays" tmp[467703])
    (491016 'end of statement')
    unknown tmp[467720] "temp"
    (467722 'init var' tmp[467720] 0)
    (467724 '.=' this[304244] c"_arrayCapacity" tmp[467720])
    (491017 'end of statement')
    unknown tmp[467729] "temp"
    (467731 'init var' tmp[467729] 0)
    (467733 '.=' this[304244] c"_totalCapacity" tmp[467729])
    (491018 'end of statement')
    unknown tmp[467737] "temp"
    unknown call_tmp[744707] "expr temp" "maybe param" "maybe type" "temp"
    (744710 'move' call_tmp[744707](467748 '.v' this[304244] c"eltType"))
    unknown call_tmp[744712] "expr temp" "maybe param" "maybe type" "temp"
    (744715 'move' call_tmp[744712](467740 call _dummyFieldType call_tmp[744707]))
    (467742 'default init var' tmp[467737] call_tmp[744712])
    (467744 '.=' this[304244] c"_dummyFieldToForceBorrowChecking" tmp[467737])
    (491019 'end of statement')
    (299101 call(405300 call (partial) _commonInitFromIterable _mt[243] this[304244]) other[299006])
    (539138 return _void[55])
  }
  where {
    unknown call_tmp[744719] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744722 'move' call_tmp[744719](299000 'typeof' this[304244]))
    unknown call_tmp[744726] "expr temp" "maybe param" "maybe type" "temp"
    (744729 'move' call_tmp[744726](299001 call eltType _mt[243] call_tmp[744719]))
    unknown call_tmp[744733] "expr temp" "maybe param" "maybe type" "temp"
    (744736 'move' call_tmp[744733](467652 call eltType _mt[243] other[299006]))
    unknown call_tmp[744738] "expr temp" "maybe param" "maybe type" "temp"
    (744741 'move' call_tmp[744738](467656 call == call_tmp[744726] call_tmp[744733]))
    (467650 call & 1 call_tmp[744738])
  }
  function list[304222](?).init=[299122](arg _mt[304250]:_MT[238], ref arg this[304248]:list[304222](?), arg other[299119]:range[64319](?)) : void[4] "compiler added where" "method" "primary method" "no return value for void"
  {
    unknown tmp[467775] "temp" "type variable"
    unknown call_tmp[744743] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744746 'move' call_tmp[744743](299129 'typeof' this[304248]))
    (467777 'move' tmp[467775](299130 call eltType _mt[243] call_tmp[744743]))
    (467779 'init field' this[304248] c"eltType" tmp[467775])
    (491021 'end of statement')
    unknown call_tmp[744750] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744753 'move' call_tmp[744750](299142 'typeof' this[304248]))
    unknown call_tmp[744757] "maybe param" "maybe type" "temp"
    (744760 'move' call_tmp[744757](299143 call parSafe _mt[243] call_tmp[744750]))
    unknown tmp[467783] "param" "temp"
    (467785 'init var' tmp[467783] call_tmp[744757])
    (467787 'init field' this[304248] c"parSafe" tmp[467783])
    (491022 'end of statement')
    unknown call_tmp[744762] "expr temp" "maybe param" "maybe type" "temp"
    (744765 'move' call_tmp[744762](299152 call isBoundedRange other[299119]))
    unknown call_tmp[744767] "expr temp" "maybe param" "maybe type" "temp"
    (744770 'move' call_tmp[744767](299153 call ! call_tmp[744762]))
    unknown call_tmp[744772] "expr temp" "maybe param" "maybe type" "temp"
    (744775 'move' call_tmp[744772](299193 call _cond_test call_tmp[744767]))
    if call_tmp[744772]
    {
      unknown call_tmp[744777] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (744780 'move' call_tmp[744777](299156 'typeof' this[304248]))
      unknown call_tmp[744782] "maybe param" "maybe type" "temp"
      (744785 'move' call_tmp[744782](299158 call _cast string[26] call_tmp[744777]))
      unknown e[299160] "dead at end of block" "param"
      (549878 'init var' e[299160] call_tmp[744782])
      (299163 'end of statement')
      unknown call_tmp[744787] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (744790 'move' call_tmp[744787](299166 'typeof' other[299119]))
      unknown call_tmp[744792] "maybe param" "maybe type" "temp"
      (744795 'move' call_tmp[744792](299168 call _cast string[26] call_tmp[744787]))
      unknown f[299170] "dead at end of block" "param"
      (549880 'init var' f[299170] call_tmp[744792])
      (299173 'end of statement')
      unknown call_tmp[744797] "expr temp" "maybe param" "maybe type" "temp"
      (744800 'move' call_tmp[744797](299176 call + "Cannot init " e[299160]))
      unknown call_tmp[744802] "expr temp" "maybe param" "maybe type" "temp"
      (744805 'move' call_tmp[744802](299179 call + call_tmp[744797] " from unbounded "))
      unknown call_tmp[744807] "maybe param" "maybe type" "temp"
      (744810 'move' call_tmp[744807](299182 call + call_tmp[744802] f[299170]))
      unknown msg[299184] "dead at end of block" "param"
      (549882 'init var' msg[299184] call_tmp[744807])
      (299187 'end of statement')
      (299191 call compilerError msg[299184])
    }
    unknown tmp[467792] "temp"
    (467794 'init var' tmp[467792] 0)
    (467796 '.=' this[304248] c"_size" tmp[467792])
    (491024 'end of statement')
    unknown tmp[467808] "temp"
    unknown tmp[580901] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[580902] "maybe param" "temp"
    unknown call_tmp[744812] "expr temp" "maybe param" "maybe type" "temp"
    (744815 'move' call_tmp[744812](467816 '.v' this[304248] c"parSafe"))
    (580907 'move' tmp[580902](580905 call _cond_test call_tmp[744812]))
    if tmp[580902]
    {
      unknown tmp[580909] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (580911 'move' tmp[580909](748188 'new' _LockWrapper[405240](?)))
      (580916 'move' tmp[580901](580913 '_paramFoldLogical' tmp[580902] tmp[580909]))
    }
    {
      (580921 'move' tmp[580901](580918 '_paramFoldLogical' tmp[580902] none[57]))
    }
    (467810 'init var' tmp[467808] tmp[580901])
    (467812 '.=' this[304248] c"_lock$" tmp[467808])
    (491025 'end of statement')
    unknown call_tmp[744817] "expr temp" "maybe param" "maybe type" "temp"
    (744820 'move' call_tmp[744817](467833 '.v' this[304248] c"eltType"))
    unknown call_tmp[744822] "expr temp" "maybe param" "maybe type" "temp"
    (744825 'move' call_tmp[744822](467825 call _ddata[11696](?) call_tmp[744817]))
    unknown call_tmp[744827] "maybe param" "maybe type" "temp"
    (744830 'move' call_tmp[744827](467823 call _ddata[11696](?) call_tmp[744822]))
    unknown tmp[467820] "temp"
    (467827 'init var' tmp[467820] nil[44] call_tmp[744827])
    (467829 'init field' this[304248] c"_arrays" tmp[467820])
    (491026 'end of statement')
    unknown tmp[467837] "temp"
    (467839 'init var' tmp[467837] 0)
    (467841 '.=' this[304248] c"_arrayCapacity" tmp[467837])
    (491027 'end of statement')
    unknown tmp[467846] "temp"
    (467848 'init var' tmp[467846] 0)
    (467850 '.=' this[304248] c"_totalCapacity" tmp[467846])
    (491028 'end of statement')
    unknown tmp[467854] "temp"
    unknown call_tmp[744832] "expr temp" "maybe param" "maybe type" "temp"
    (744835 'move' call_tmp[744832](467865 '.v' this[304248] c"eltType"))
    unknown call_tmp[744837] "expr temp" "maybe param" "maybe type" "temp"
    (744840 'move' call_tmp[744837](467857 call _dummyFieldType call_tmp[744832]))
    (467859 'default init var' tmp[467854] call_tmp[744837])
    (467861 '.=' this[304248] c"_dummyFieldToForceBorrowChecking" tmp[467854])
    (491029 'end of statement')
    (299207 call(405315 call (partial) _commonInitFromIterable _mt[243] this[304248]) other[299119])
    (539140 return _void[55])
  }
  where {
    unknown call_tmp[744844] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744847 'move' call_tmp[744844](467759 'typeof' this[304248]))
    unknown call_tmp[744851] "expr temp" "maybe param" "maybe type" "temp"
    (744854 'move' call_tmp[744851](467758 call eltType _mt[243] call_tmp[744844]))
    unknown call_tmp[744856] "expr temp" "maybe param" "maybe type" "temp"
    (744859 'move' call_tmp[744856](467754 'query' other[299119] 1))
    unknown call_tmp[744861] "expr temp" "maybe param" "maybe type" "temp"
    (744864 'move' call_tmp[744861](467762 call == call_tmp[744851] call_tmp[744856]))
    (467766 call & 1 call_tmp[744861])
  }
  function list[304222](?)._commonInitFromIterable[299215](arg _mt[304254]:_MT[238], arg this[304252]:list[304222](?), arg iterable[299213]:_any[178](?)) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    (299228 call(299224 call (partial) _firstTimeInitializeArrays _mt[243] this[304252]))
    (491031 'end of statement')
    {
      unknown _indexOfInterest[299238] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[299239] "expr temp" "temp"
      (299248 'move' _iterator[299239](299246 call _getIterator iterable[299213]))
      Defer
      {
        {
          (299264 call _freeIterator _iterator[299239])
        }
      }
      { scopeless type
        (299253 'move' _indexOfInterest[299238](299250 call iteratorIndex _iterator[299239]))
      }
      ForLoop[299240]
      {
        unknown x[299257] "index var" "insert auto destroy"
        (491033 'end of statement')
        (299259 'move' x[299257] _indexOfInterest[299238])
        (491034 'end of statement' x[299257])
        (299236 call(405323 call (partial) append _mt[243] this[304252]) x[299257])
        (491036 'end of statement' x[299257])
        label _continueLabel[299243]
        _indexOfInterest[299238]
        _iterator[299239]
      }
      label _breakLabel[299244]
    }
    (539142 return _void[55])
  }
  {
    (299221 call <(299218 'lifetime_of' this[304252])(299220 'lifetime_of' iterable[299213]))
  }
  function list[304222](?)._firstTimeInitializeArrays[299276](arg _mt[304258]:_MT[238], arg this[304256]:list[304222](?)) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[744872] "expr temp" "maybe param" "maybe type" "temp"
    (744875 'move' call_tmp[744872](405331 call _arrays _mt[243] this[304256]))
    unknown call_tmp[744877] "expr temp" "maybe param" "maybe type" "temp"
    (744880 'move' call_tmp[744877](299281 call == call_tmp[744872] nil[44]))
    (299284 call _sanity call_tmp[744877])
    (491038 'end of statement')
    unknown call_tmp[744884] "expr temp" "maybe param" "maybe type" "temp"
    (744887 'move' call_tmp[744884](405338 call _totalCapacity _mt[243] this[304256]))
    unknown call_tmp[744889] "expr temp" "maybe param" "maybe type" "temp"
    (744892 'move' call_tmp[744889](299290 call == call_tmp[744884] 0))
    (299293 call _sanity call_tmp[744889])
    (491039 'end of statement')
    unknown call_tmp[744896] "expr temp" "maybe param" "maybe type" "temp"
    (744899 'move' call_tmp[744896](405345 call _size _mt[243] this[304256]))
    unknown call_tmp[744901] "expr temp" "maybe param" "maybe type" "temp"
    (744904 'move' call_tmp[744901](299298 call == call_tmp[744896] 0))
    (299301 call _sanity call_tmp[744901])
    (491040 'end of statement')
    unknown call_tmp[744908] "expr temp" "maybe param" "maybe type" "temp"
    (744911 'move' call_tmp[744908](405350 call _arrays _mt[243] this[304256]))
    unknown call_tmp[744915] "expr temp" "maybe param" "maybe type" "temp"
    (744918 'move' call_tmp[744915](299307 call(405356 call (partial) _makeBlockArray _mt[243] this[304256]) _initialArrayCapacity[298262]))
    (299308 call = call_tmp[744908] call_tmp[744915])
    (491041 'end of statement')
    unknown call_tmp[744922] "expr temp" "maybe param" "maybe type" "temp"
    (744925 'move' call_tmp[744922](405364 call _arrayCapacity _mt[243] this[304256]))
    (299313 call = call_tmp[744922] _initialArrayCapacity[298262])
    (491042 'end of statement')
    unknown call_tmp[744929] "expr temp" "maybe param" "maybe type" "temp"
    (744932 'move' call_tmp[744929](299319 call(405370 call (partial) _arrays _mt[243] this[304256]) 0))
    unknown call_tmp[744936] "expr temp" "maybe param" "maybe type" "temp"
    (744939 'move' call_tmp[744936](299323 call(405376 call (partial) _makeArray _mt[243] this[304256]) _initialCapacity[298257]))
    (299324 call = call_tmp[744929] call_tmp[744936])
    (491043 'end of statement')
    unknown call_tmp[744943] "expr temp" "maybe param" "maybe type" "temp"
    (744946 'move' call_tmp[744943](405382 call _totalCapacity _mt[243] this[304256]))
    (299329 call = call_tmp[744943] _initialCapacity[298257])
    (539144 return _void[55])
  }
  function list[304222](?).deinit[299336](arg _mt[304262]:_MT[238], arg this[304260]:list[304222](?)) : _unknown[51] "destructor" "inline" "method" "primary method" "no doc" "no return value for void"
  {
    (299340 call(405389 call (partial) _fireAllDestructors _mt[243] this[304260]))
    (491045 'end of statement')
    (299345 call(405395 call (partial) _freeAllArrays _mt[243] this[304260]))
    (491046 'end of statement')
    unknown call_tmp[744954] "expr temp" "maybe param" "maybe type" "temp"
    (744957 'move' call_tmp[744954](405400 call _totalCapacity _mt[243] this[304260]))
    unknown call_tmp[744959] "expr temp" "maybe param" "maybe type" "temp"
    (744962 'move' call_tmp[744959](299350 call == call_tmp[744954] 0))
    (299353 call _sanity call_tmp[744959])
    (491047 'end of statement')
    unknown call_tmp[744966] "expr temp" "maybe param" "maybe type" "temp"
    (744969 'move' call_tmp[744966](405405 call _size _mt[243] this[304260]))
    unknown call_tmp[744971] "expr temp" "maybe param" "maybe type" "temp"
    (744974 'move' call_tmp[744971](299358 call == call_tmp[744966] 0))
    (299361 call _sanity call_tmp[744971])
    (491048 'end of statement')
    unknown call_tmp[744978] "expr temp" "maybe param" "maybe type" "temp"
    (744981 'move' call_tmp[744978](405410 call _arrays _mt[243] this[304260]))
    unknown call_tmp[744983] "expr temp" "maybe param" "maybe type" "temp"
    (744986 'move' call_tmp[744983](299366 call == call_tmp[744978] nil[44]))
    (299369 call _sanity call_tmp[744983])
    (539146 return _void[55])
  }
  function list[304222](?)._destroy[299379](arg _mt[304266]:_MT[238], arg this[304264]:list[304222](?), ref arg item[299376] :
  (405415 call eltType _mt[243] this[304264])) : _unknown[51] "inline" "method" "primary method" "no doc" "no return value for void"
  {
    (299384 call chpl__autoDestroy item[299376])
    (539148 return _void[55])
  }
  function list[304222](?)._move[299396](arg _mt[304270]:_MT[238], arg this[304268]:list[304222](?), ref arg src[299393]:_any[178](?), ref arg dst[299399] :
  (467868 'typeof' src[299393])) : _unknown[51] "inline" "method" "primary method" "no doc" "unsafe" "no return value for void"
  {
    (299412 '=' dst[299399] src[299393])
    (539150 return _void[55])
  }
  {
    (299406 call ==(299403 'lifetime_of' src[299393])(299405 'lifetime_of' dst[299399]))
  }
  function list[304222](?)._getArrayCapacity[299424](arg _mt[304274]:_MT[238], arg this[304272]:list[304222](?), arg array[299421]:int(64)[13]) : _unknown[51] "inline" "method" "primary method" "no doc"
  {
    unknown ret[539154] "RVV" "temp"
    unknown call_tmp[744990] "expr temp" "maybe param" "maybe type" "temp"
    (744993 'move' call_tmp[744990](299431 call log2 _initialCapacity[298257]))
    unknown call_tmp[744995] "maybe param" "maybe type" "temp"
    (744998 'move' call_tmp[744995](299432 call + array[299421] call_tmp[744990]))
    const exp[299434] "dead at end of block" "const" "insert auto destroy"
    (549884 'init var' exp[299434] call_tmp[744995])
    (299437 'end of statement')
    unknown call_tmp[745000] "maybe param" "maybe type" "temp"
    (745003 'move' call_tmp[745000](299441 call ** 2 exp[299434]))
    const result[299443] "dead at end of block" "const" "insert auto destroy"
    (549886 'init var' result[299443] call_tmp[745000])
    (299446 'end of statement' exp[299434])
    (539160 'move' ret[539154](539159 'coerce' result[299443] int(64)[13]))
    gotoReturn _end__getArrayCapacity[539152] _end__getArrayCapacity[539152]
    (491053 'end of statement' result[299443])
    label _end__getArrayCapacity[539152]
    (539156 return ret[539154])
  }
  { scopeless type
    int(64)[13]
  }
  function list[304222](?)._getArrayIdx[299459](arg _mt[304278]:_MT[238], arg this[304276]:list[304222](?), arg zpos[299456]:int(64)[13]) : _unknown[51] "inline" "method" "primary method" "no doc"
  {
    unknown ret[539166] "RVV" "temp"
    unknown call_tmp[745005] "maybe param" "maybe type" "temp"
    (745008 'move' call_tmp[745005](299464 call + zpos[299456] _initialCapacity[298257]))
    const adj[299466] "dead at end of block" "const" "insert auto destroy"
    (549888 'init var' adj[299466] call_tmp[745005])
    (299469 'end of statement')
    unknown call_tmp[745010] "expr temp" "maybe param" "maybe type" "temp"
    (745013 'move' call_tmp[745010](299474 call log2 adj[299466]))
    unknown call_tmp[745015] "expr temp" "maybe param" "maybe type" "temp"
    (745018 'move' call_tmp[745015](299478 call log2 _initialCapacity[298257]))
    unknown call_tmp[745020] "maybe param" "maybe type" "temp"
    (745023 'move' call_tmp[745020](299479 call - call_tmp[745010] call_tmp[745015]))
    const result[299481] "dead at end of block" "const" "insert auto destroy"
    (549890 'init var' result[299481] call_tmp[745020])
    (299484 'end of statement' adj[299466])
    (539172 'move' ret[539166](539171 'coerce' result[299481] int(64)[13]))
    gotoReturn _end__getArrayIdx[539164] _end__getArrayIdx[539164]
    (491056 'end of statement' result[299481])
    label _end__getArrayIdx[539164]
    (539168 return ret[539166])
  }
  { scopeless type
    int(64)[13]
  }
  function list[304222](?)._getLastArrayIdx[299493](arg _mt[304282]:_MT[238], arg this[304280]:list[304222](?)) : _unknown[51] "inline" "method" "primary method" "no doc"
  {
    unknown ret[539178] "RVV" "temp"
    unknown call_tmp[745029] "expr temp" "maybe param" "maybe type" "temp"
    (745032 'move' call_tmp[745029](405441 call _size _mt[243] this[304280]))
    unknown call_tmp[745034] "expr temp" "maybe param" "maybe type" "temp"
    (745037 'move' call_tmp[745034](299499 call - call_tmp[745029] 1))
    unknown call_tmp[745039] "maybe param" "maybe type" "temp"
    (745042 'move' call_tmp[745039](299502 call(405436 call (partial) _getArrayIdx _mt[243] this[304280]) call_tmp[745034]))
    const result[299503] "dead at end of block" "const" "insert auto destroy"
    (549892 'init var' result[299503] call_tmp[745039])
    (299506 'end of statement')
    unknown call_tmp[745044] "expr temp" "maybe param" "maybe type" "temp"
    (745047 'move' call_tmp[745044](299511 call >= result[299503] 0))
    (299514 call _sanity call_tmp[745044])
    (491058 'end of statement' result[299503])
    (539184 'move' ret[539178](539183 'coerce' result[299503] int(64)[13]))
    gotoReturn _end__getLastArrayIdx[539176] _end__getLastArrayIdx[539176]
    (491060 'end of statement' result[299503])
    label _end__getLastArrayIdx[539176]
    (539180 return ret[539178])
  }
  { scopeless type
    int(64)[13]
  }
  function list[304222](?)._getItemIdx[299528](arg _mt[304286]:_MT[238], arg this[304284]:list[304222](?), arg zpos[299525]:int(64)[13]) : _unknown[51] "inline" "method" "primary method" "no doc"
  {
    unknown ret[539190] "RVV" "temp"
    unknown call_tmp[745049] "maybe param" "maybe type" "temp"
    (745052 'move' call_tmp[745049](299533 call + zpos[299525] _initialCapacity[298257]))
    const adj[299535] "dead at end of block" "const" "insert auto destroy"
    (549894 'init var' adj[299535] call_tmp[745049])
    (299538 'end of statement')
    unknown call_tmp[745054] "expr temp" "maybe param" "maybe type" "temp"
    (745057 'move' call_tmp[745054](299545 call log2 adj[299535]))
    unknown call_tmp[745059] "expr temp" "maybe param" "maybe type" "temp"
    (745062 'move' call_tmp[745059](299546 call << 1 call_tmp[745054]))
    unknown call_tmp[745064] "maybe param" "maybe type" "temp"
    (745067 'move' call_tmp[745064](299548 call ^ adj[299535] call_tmp[745059]))
    const result[299550] "dead at end of block" "const" "insert auto destroy"
    (549896 'init var' result[299550] call_tmp[745064])
    (299553 'end of statement' adj[299535] adj[299535])
    (539196 'move' ret[539190](539195 'coerce' result[299550] int(64)[13]))
    gotoReturn _end__getItemIdx[539188] _end__getItemIdx[539188]
    (491064 'end of statement' result[299550])
    label _end__getItemIdx[539188]
    (539192 return ret[539190])
  }
  { scopeless type
    int(64)[13]
  }
  function list[304222](?)._getRef[299566](arg _mt[304290]:_MT[238], const  ref arg this[304288]:list[304222](?), arg idx[299563]:int(64)[13]) ref : _unknown[51] "inline" "method" "primary method" "no doc"
  {
    unknown ret[539202] "RVV" "temp"
    unknown tmp[434860] "maybe param" "temp"
    (434871 'move' tmp[434860](299571 call >= idx[299563] 0))
    unknown call_tmp[745069] "expr temp" "maybe param" "maybe type" "temp"
    (745072 'move' call_tmp[745069](434873 call _cond_invalid tmp[434860]))
    if call_tmp[745069]
    {
      (434876 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[580928] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[580929] "maybe param" "temp"
    unknown call_tmp[745074] "expr temp" "maybe param" "maybe type" "temp"
    (745077 'move' call_tmp[745074](434861 call isTrue tmp[434860]))
    (580934 'move' tmp[580929](580932 call _cond_test call_tmp[745074]))
    if tmp[580929]
    {
      unknown tmp[580936] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[745081] "expr temp" "maybe param" "maybe type" "temp"
      (745084 'move' call_tmp[745081](405455 call _totalCapacity _mt[243] this[304288]))
      unknown call_tmp[745086] "expr temp" "maybe param" "maybe type" "temp"
      (745089 'move' call_tmp[745086](299575 call < idx[299563] call_tmp[745081]))
      (580938 'move' tmp[580936](434864 call isTrue call_tmp[745086]))
      (580943 'move' tmp[580928](580940 '_paramFoldLogical' tmp[580929] tmp[580936]))
    }
    {
      (580948 'move' tmp[580928](580945 '_paramFoldLogical' tmp[580929] 0))
    }
    (299580 call _sanity tmp[580928])
    (491067 'end of statement')
    unknown call_tmp[745093] "maybe param" "maybe type" "temp"
    (745096 'move' call_tmp[745093](299586 call(405459 call (partial) _getArrayIdx _mt[243] this[304288]) idx[299563]))
    const arrayIdx[299587] "dead at end of block" "const" "insert auto destroy"
    (549898 'init var' arrayIdx[299587] call_tmp[745093])
    (299590 'end of statement')
    unknown call_tmp[745100] "maybe param" "maybe type" "temp"
    (745103 'move' call_tmp[745100](299594 call(405466 call (partial) _getItemIdx _mt[243] this[304288]) idx[299563]))
    const itemIdx[299595] "dead at end of block" "const" "insert auto destroy"
    (549900 'init var' itemIdx[299595] call_tmp[745100])
    (299598 'end of statement')
    unknown call_tmp[745107] "maybe param" "maybe type" "temp"
    (745110 'move' call_tmp[745107](299602 call(405472 call (partial) _arrays _mt[243] this[304288]) arrayIdx[299587]))
    const array[299603] "dead at end of block" "const" "insert auto destroy"
    (549902 'init var' array[299603] call_tmp[745107])
    (299606 'end of statement')
    unknown call_tmp[745112] "expr temp" "maybe param" "maybe type" "temp"
    (745115 'move' call_tmp[745112](299610 call != array[299603] nil[44]))
    (299613 call _sanity call_tmp[745112])
    (491069 'end of statement' array[299603])
    unknown result[299619] "dead at end of block" "ref var"
    unknown call_tmp[745117] "expr temp" "maybe param" "maybe type" "temp"
    (745120 'move' call_tmp[745117](299618 call array[299603] itemIdx[299595]))
    (549905 'move' result[299619](549904 'addr of' call_tmp[745117]))
    (299622 'end of statement' arrayIdx[299587] array[299603] itemIdx[299595])
    (539207 'move' ret[539202](539206 'addr of' result[299619]))
    gotoReturn _end__getRef[539200] _end__getRef[539200]
    (491073 'end of statement' result[299619])
    label _end__getRef[539200]
    (539204 return ret[539202])
  }
  function list[304222](?)._enter[299630](arg _mt[304294]:_MT[238], arg this[304292]:list[304222](?)) : _unknown[51] "inline" "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[745124] "expr temp" "maybe param" "maybe type" "temp"
    (745127 'move' call_tmp[745124](405482 call parSafe _mt[243] this[304292]))
    unknown call_tmp[745129] "expr temp" "maybe param" "maybe type" "temp"
    (745132 'move' call_tmp[745129](299640 call _cond_test call_tmp[745124]))
    if call_tmp[745129]
    {
      unknown call_tmp[745136] "expr temp" "maybe param" "maybe type" "temp"
      (745139 'move' call_tmp[745136](364978 call _lock$ _mt[243] this[304292]))
      (299638 call(299634 call (partial) lock _mt[243] call_tmp[745136]))
    }
    (539211 return _void[55])
  }
  function list[304222](?)._leave[299650](arg _mt[304298]:_MT[238], arg this[304296]:list[304222](?)) : _unknown[51] "inline" "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[745145] "expr temp" "maybe param" "maybe type" "temp"
    (745148 'move' call_tmp[745145](405487 call parSafe _mt[243] this[304296]))
    unknown call_tmp[745150] "expr temp" "maybe param" "maybe type" "temp"
    (745153 'move' call_tmp[745150](299660 call _cond_test call_tmp[745145]))
    if call_tmp[745150]
    {
      unknown call_tmp[745157] "expr temp" "maybe param" "maybe type" "temp"
      (745160 'move' call_tmp[745157](364983 call _lock$ _mt[243] this[304296]))
      (299658 call(299654 call (partial) unlock _mt[243] call_tmp[745157]))
    }
    (539213 return _void[55])
  }
  function list[304222](?)._withinBounds[299674](arg _mt[304302]:_MT[238], const arg this[304300]:list[304222](?), arg idx[299671]:int(64)[13]) : _unknown[51] "inline" "method" "primary method" "no doc"
  {
    unknown ret[539217] "RVV" "temp"
    unknown tmp[434881] "maybe param" "temp"
    (434892 'move' tmp[434881](299679 call >= idx[299671] 0))
    unknown call_tmp[745164] "expr temp" "maybe param" "maybe type" "temp"
    (745167 'move' call_tmp[745164](434894 call _cond_invalid tmp[434881]))
    if call_tmp[745164]
    {
      (434897 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[580955] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[580956] "maybe param" "temp"
    unknown call_tmp[745169] "expr temp" "maybe param" "maybe type" "temp"
    (745172 'move' call_tmp[745169](434882 call isTrue tmp[434881]))
    (580961 'move' tmp[580956](580959 call _cond_test call_tmp[745169]))
    if tmp[580956]
    {
      unknown tmp[580963] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[745176] "expr temp" "maybe param" "maybe type" "temp"
      (745179 'move' call_tmp[745176](405494 call _size _mt[243] this[304300]))
      unknown call_tmp[745181] "expr temp" "maybe param" "maybe type" "temp"
      (745184 'move' call_tmp[745181](299683 call < idx[299671] call_tmp[745176]))
      (580965 'move' tmp[580963](434885 call isTrue call_tmp[745181]))
      (580970 'move' tmp[580955](580967 '_paramFoldLogical' tmp[580956] tmp[580963]))
    }
    {
      (580975 'move' tmp[580955](580972 '_paramFoldLogical' tmp[580956] 0))
    }
    (539223 'move' ret[539217](539222 'coerce' tmp[580955] bool[10]))
    (539219 return ret[539217])
  }
  { scopeless type
    bool[10]
  }
  function list[304222](?)._boundsCheckLeaveOnThrow[299699](arg _mt[304306]:_MT[238], const arg this[304304]:list[304222](?), arg i[299696]:int(64)[13], arg umsg[299719]:string[26] =
  "") : _unknown[51] throws "inline" "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[745188] "expr temp" "maybe param" "maybe type" "temp"
    (745191 'move' call_tmp[745188](299726 call(405500 call (partial) _withinBounds _mt[243] this[304304]) i[299696]))
    unknown call_tmp[745193] "expr temp" "maybe param" "maybe type" "temp"
    (745196 'move' call_tmp[745193](299727 call ! call_tmp[745188]))
    unknown call_tmp[745198] "expr temp" "maybe param" "maybe type" "temp"
    (745201 'move' call_tmp[745198](299794 call _cond_test call_tmp[745193]))
    if call_tmp[745198]
    {
      (299731 call(405507 call (partial) _leave _mt[243] this[304304]))
      (491079 'end of statement')
      const msg[299781] "dead at end of block" "const" "insert auto destroy"
      unknown tmp[580982] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[580983] "maybe param" "temp"
      unknown call_tmp[745205] "expr temp" "maybe param" "maybe type" "temp"
      (745208 'move' call_tmp[745205](299752 call != umsg[299719] ""))
      (580988 'move' tmp[580983](580986 call _cond_test call_tmp[745205]))
      if tmp[580983]
      {
        (580993 'move' tmp[580982](580990 '_paramFoldLogical' tmp[580983] umsg[299719]))
      }
      {
        unknown tmp[580995] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[745210] "expr temp" "maybe param" "maybe type" "temp"
        (745213 'move' call_tmp[745210](299774 call _cast string[26] i[299696]))
        (580997 'move' tmp[580995](299776 call + "Index out of bounds: " call_tmp[745210]))
        (581002 'move' tmp[580982](580999 '_paramFoldLogical' tmp[580983] tmp[580995]))
      }
      (549907 'init var' msg[299781] tmp[580982])
      (299784 'end of statement')
      unknown call_tmp[745215] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
      (745218 'move' call_tmp[745215](748189 'new' IllegalArgumentError[388821](?) msg[299781](_chpl_manager = _owned[30](?))))
      unknown call_tmp[745220] "expr temp" "maybe param" "maybe type" "temp"
      (745223 'move' call_tmp[745220](468210 call chpl_fix_thrown_error call_tmp[745215]))
      (299792 'throw' call_tmp[745220])
      (491080 'end of statement' msg[299781])
    }
    (539225 return _void[55])
  }
  function list[304222](?)._makeBlockArray[299807](arg _mt[304310]:_MT[238], arg this[304308]:list[304222](?), arg size[299804]:int(64)[13]) : _unknown[51] "method" "primary method" "no doc"
  {
    unknown ret[539229] "RVV" "temp"
    unknown call_tmp[745227] "expr temp" "maybe param" "maybe type" "temp"
    (745230 'move' call_tmp[745227](405518 call eltType _mt[243] this[304308]))
    unknown call_tmp[745232] "expr temp" "maybe param" "maybe type" "temp"
    (745235 'move' call_tmp[745232](299813 call _ddata[11696](?) call_tmp[745227]))
    unknown call_tmp[745237] "expr temp" "maybe param" "maybe type" "temp"
    (745240 'move' call_tmp[745237](299816 call _ddata_allocate call_tmp[745232] size[299804]))
    (539234 'move' ret[539229](539233 'deref' call_tmp[745237]))
    (539231 return ret[539229])
  }
  function list[304222](?)._freeBlockArray[299834](arg _mt[304314]:_MT[238], arg this[304312]:list[304222](?), arg data[299831] :
  unknown call_tmp[745244] "expr temp" "maybe param" "maybe type" "temp", arg size[299837]:int(64)[13]) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    (299844 call _ddata_free data[299831] size[299837])
    (539236 return _void[55])
  }
  function list[304222](?)._makeArray[299855](arg _mt[304318]:_MT[238], arg this[304316]:list[304222](?), arg size[299852]:int(64)[13]) : _unknown[51] "method" "primary method" "no doc"
  {
    unknown ret[539240] "RVV" "temp"
    unknown call_tmp[745256] "expr temp" "maybe param" "maybe type" "temp"
    (745259 'move' call_tmp[745256](405533 call eltType _mt[243] this[304316]))
    unknown call_tmp[745261] "expr temp" "maybe param" "maybe type" "temp"
    (745264 'move' call_tmp[745261](299863 call _ddata_allocate call_tmp[745256] size[299852](initElts = 0)))
    (539245 'move' ret[539240](539244 'deref' call_tmp[745261]))
    (539242 return ret[539240])
  }
  function list[304222](?)._freeArray[299878](arg _mt[304322]:_MT[238], arg this[304320]:list[304222](?), arg data[299875] :
  unknown call_tmp[745268] "expr temp" "maybe param" "maybe type" "temp", arg size[299881]:int(64)[13]) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    (299888 call _ddata_free data[299875] size[299881])
    (539247 return _void[55])
  }
  function list[304222](?)._maybeAcquireMem[299899](arg _mt[304326]:_MT[238], arg this[304324]:list[304222](?), arg amount[299896]:int(64)[13]) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[745275] "expr temp" "maybe param" "maybe type" "temp"
    (745278 'move' call_tmp[745275](405547 call _totalCapacity _mt[243] this[304324]))
    unknown call_tmp[745282] "expr temp" "maybe param" "maybe type" "temp"
    (745285 'move' call_tmp[745282](405552 call _size _mt[243] this[304324]))
    unknown call_tmp[745287] "maybe param" "maybe type" "temp"
    (745290 'move' call_tmp[745287](299903 call - call_tmp[745275] call_tmp[745282]))
    const remaining[299905] "dead at end of block" "const" "insert auto destroy"
    (549909 'init var' remaining[299905] call_tmp[745287])
    (299908 'end of statement')
    unknown call_tmp[745292] "expr temp" "maybe param" "maybe type" "temp"
    (745295 'move' call_tmp[745292](299913 call >= remaining[299905] 0))
    (299916 call _sanity call_tmp[745292])
    (491086 'end of statement' remaining[299905])
    unknown call_tmp[745297] "expr temp" "maybe param" "maybe type" "temp"
    (745300 'move' call_tmp[745297](299920 call >= remaining[299905] amount[299896]))
    unknown call_tmp[745302] "expr temp" "maybe param" "maybe type" "temp"
    (745305 'move' call_tmp[745302](299924 call _cond_test call_tmp[745297]))
    if call_tmp[745302]
    {
      gotoReturn _end__maybeAcquireMem[539249] _end__maybeAcquireMem[539249]
    }
    unknown lastArrayIdx[299940] "dead at end of block" "insert auto destroy"
    unknown tmp[581009] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[581010] "maybe param" "temp"
    unknown call_tmp[745309] "expr temp" "maybe param" "maybe type" "temp"
    (745312 'move' call_tmp[745309](405560 call _size _mt[243] this[304324]))
    unknown call_tmp[745314] "expr temp" "maybe param" "maybe type" "temp"
    (745317 'move' call_tmp[745314](299931 call == call_tmp[745309] 0))
    (581015 'move' tmp[581010](581013 call _cond_test call_tmp[745314]))
    if tmp[581010]
    {
      (581020 'move' tmp[581009](581017 '_paramFoldLogical' tmp[581010] 0))
    }
    {
      unknown tmp[581022] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (581024 'move' tmp[581022](299936 call(405566 call (partial) _getLastArrayIdx _mt[243] this[304324])))
      (581029 'move' tmp[581009](581026 '_paramFoldLogical' tmp[581010] tmp[581022]))
    }
    (549911 'init var' lastArrayIdx[299940] tmp[581009])
    (299943 'end of statement')
    unknown call_tmp[745321] "maybe param" "maybe type" "temp"
    (745324 'move' call_tmp[745321](299946 call - amount[299896] remaining[299905]))
    unknown req[299948] "dead at end of block" "insert auto destroy"
    (549913 'init var' req[299948] call_tmp[745321])
    (299951 'end of statement' remaining[299905])
    {
      unknown tmp[300151] "temp"
      unknown call_tmp[745326] "expr temp" "maybe param" "maybe type" "temp"
      (745329 'move' call_tmp[745326](300172 call > req[299948] 0))
      (300175 'move' tmp[300151](300170 call _cond_test call_tmp[745326]))
      WhileDo[300156]
      {
        {
          unknown call_tmp[745333] "expr temp" "maybe param" "maybe type" "temp"
          (745336 'move' call_tmp[745333](405574 call _arrayCapacity _mt[243] this[304324]))
          unknown call_tmp[745338] "expr temp" "maybe param" "maybe type" "temp"
          (745341 'move' call_tmp[745338](299959 call - call_tmp[745333] 1))
          unknown call_tmp[745343] "expr temp" "maybe param" "maybe type" "temp"
          (745346 'move' call_tmp[745343](299961 call >= lastArrayIdx[299940] call_tmp[745338]))
          unknown call_tmp[745348] "expr temp" "maybe param" "maybe type" "temp"
          (745351 'move' call_tmp[745348](300061 call _cond_test call_tmp[745343]))
          if call_tmp[745348]
          {
            const tmp[300053] "const" "temp"
            unknown call_tmp[745353] "expr temp" "maybe param" "maybe type" "temp"
            (745356 'move' call_tmp[745353](300050 '_wide_get_locale' this[304324]))
            (300055 'move' tmp[300053](300051 'deref' call_tmp[745353]))
            {
              {
                unknown call_tmp[745362] "expr temp" "maybe param" "maybe type" "temp"
                (745365 'move' call_tmp[745362](405584 call _arrayCapacity _mt[243] this[304324]))
                unknown call_tmp[745367] "expr temp" "maybe param" "maybe type" "temp"
                (745370 'move' call_tmp[745367](299967 call * call_tmp[745362] 2))
                unknown call_tmp[745372] "maybe param" "maybe type" "temp"
                (745375 'move' call_tmp[745372](299970 call(405579 call (partial) _makeBlockArray _mt[243] this[304324]) call_tmp[745367]))
                unknown _narrays[299971] "dead at end of block" "insert auto destroy"
                (549915 'init var' _narrays[299971] call_tmp[745372])
                (299974 'end of statement')
                {
                  unknown _indexOfInterest[299994] "an _indexOfInterest or chpl__followIdx variable" "temp"
                  unknown _iterator[299995] "expr temp" "temp"
                  unknown call_tmp[745379] "expr temp" "maybe param" "maybe type" "temp"
                  (745382 'move' call_tmp[745379](405597 call _arrayCapacity _mt[243] this[304324]))
                  unknown call_tmp[745384] "expr temp" "maybe param" "maybe type" "temp"
                  (745387 'move' call_tmp[745384](300011 call chpl_direct_counted_range_iter 0 call_tmp[745379]))
                  (300004 'move' _iterator[299995](300002 call _getIterator call_tmp[745384]))
                  Defer
                  {
                    {
                      (300027 call _freeIterator _iterator[299995])
                    }
                  }
                  { scopeless type
                    (300016 'move' _indexOfInterest[299994](300013 call iteratorIndex _iterator[299995]))
                  }
                  ForLoop[299996]
                  {
                    unknown i[300020] "index var" "insert auto destroy"
                    (491091 'end of statement')
                    (300022 'move' i[300020] _indexOfInterest[299994])
                    (491092 'end of statement' i[300020])
                    unknown call_tmp[745389] "expr temp" "maybe param" "maybe type" "temp"
                    (745392 'move' call_tmp[745389](299986 call _narrays[299971] i[300020]))
                    unknown call_tmp[745396] "expr temp" "maybe param" "maybe type" "temp"
                    (745399 'move' call_tmp[745396](299990 call(405591 call (partial) _arrays _mt[243] this[304324]) i[300020]))
                    (299991 call = call_tmp[745389] call_tmp[745396])
                    (491094 'end of statement' _narrays[299971] i[300020] i[300020])
                    label _continueLabel[299999]
                    _indexOfInterest[299994]
                    _iterator[299995]
                  }
                  label _breakLabel[300000]
                }
                unknown call_tmp[745405] "expr temp" "maybe param" "maybe type" "temp"
                (745408 'move' call_tmp[745405](405608 call _arrays _mt[243] this[304324]))
                unknown call_tmp[745412] "expr temp" "maybe param" "maybe type" "temp"
                (745415 'move' call_tmp[745412](405613 call _arrayCapacity _mt[243] this[304324]))
                (300038 call(405603 call (partial) _freeBlockArray _mt[243] this[304324]) call_tmp[745405] call_tmp[745412])
                (491098 'end of statement')
                unknown call_tmp[745419] "expr temp" "maybe param" "maybe type" "temp"
                (745422 'move' call_tmp[745419](405618 call _arrays _mt[243] this[304324]))
                (300042 call = call_tmp[745419] _narrays[299971])
                (491099 'end of statement' _narrays[299971])
                unknown call_tmp[745426] "expr temp" "maybe param" "maybe type" "temp"
                (745429 'move' call_tmp[745426](405624 call _arrayCapacity _mt[243] this[304324]))
                (300047 call *= call_tmp[745426] 2)
              }
              (300058 'on block' 0 tmp[300053])
            }
          }
          const tmp[300143] "const" "temp"
          unknown call_tmp[745431] "expr temp" "maybe param" "maybe type" "temp"
          (745434 'move' call_tmp[745431](300140 '_wide_get_locale' this[304324]))
          (300145 'move' tmp[300143](300141 'deref' call_tmp[745431]))
          {
            {
              unknown call_tmp[745438] "maybe param" "maybe type" "temp"
              (745441 'move' call_tmp[745438](300071 call(405630 call (partial) _arrays _mt[243] this[304324]) lastArrayIdx[299940]))
              const oldLast[300072] "dead at end of block" "const" "insert auto destroy"
              (549917 'init var' oldLast[300072] call_tmp[745438])
              (300075 'end of statement')
              unknown call_tmp[745445] "maybe param" "maybe type" "temp"
              (745448 'move' call_tmp[745445](300080 call(405637 call (partial) _getArrayCapacity _mt[243] this[304324]) lastArrayIdx[299940]))
              const oldLastCapacity[300081] "dead at end of block" "const" "insert auto destroy"
              (549919 'init var' oldLastCapacity[300081] call_tmp[745445])
              (300084 'end of statement')
              (300087 call += lastArrayIdx[299940] 1)
              (491104 'end of statement' lastArrayIdx[299940])
              unknown newLast[300094] "dead at end of block" "ref var"
              unknown call_tmp[745452] "expr temp" "maybe param" "maybe type" "temp"
              (745455 'move' call_tmp[745452](300093 call(405644 call (partial) _arrays _mt[243] this[304324]) lastArrayIdx[299940]))
              (549922 'move' newLast[300094](549921 'addr of' call_tmp[745452]))
              (300097 'end of statement')
              unknown call_tmp[745457] "maybe param" "maybe type" "temp"
              (745460 'move' call_tmp[745457](300100 call * oldLastCapacity[300081] 2))
              const newLastCapacity[300102] "dead at end of block" "const" "insert auto destroy"
              (549924 'init var' newLastCapacity[300102] call_tmp[745457])
              (300105 'end of statement' lastArrayIdx[299940] lastArrayIdx[299940] lastArrayIdx[299940] oldLastCapacity[300081])
              unknown call_tmp[745462] "expr temp" "maybe param" "maybe type" "temp"
              (745465 'move' call_tmp[745462](300109 call != oldLast[300072] nil[44]))
              (300112 call _sanity call_tmp[745462])
              (491108 'end of statement' oldLast[300072])
              unknown call_tmp[745467] "expr temp" "maybe param" "maybe type" "temp"
              (745470 'move' call_tmp[745467](300117 call == newLast[300094] nil[44]))
              (300120 call _sanity call_tmp[745467])
              (491110 'end of statement' newLast[300094])
              unknown call_tmp[745474] "expr temp" "maybe param" "maybe type" "temp"
              (745477 'move' call_tmp[745474](300126 call(405653 call (partial) _makeArray _mt[243] this[304324]) newLastCapacity[300102]))
              (300127 call = newLast[300094] call_tmp[745474])
              (491112 'end of statement' newLast[300094] newLastCapacity[300102])
              unknown call_tmp[745481] "expr temp" "maybe param" "maybe type" "temp"
              (745484 'move' call_tmp[745481](405659 call _totalCapacity _mt[243] this[304324]))
              (300132 call += call_tmp[745481] newLastCapacity[300102])
              (491115 'end of statement' newLastCapacity[300102])
              (300137 call -= req[299948] newLastCapacity[300102])
              (491117 'end of statement' req[299948] newLastCapacity[300102])
            }
            (300148 'on block' 0 tmp[300143])
          }
        }
        label _continueLabel[300154]
        unknown call_tmp[745486] "expr temp" "maybe param" "maybe type" "temp"
        (745489 'move' call_tmp[745486](300162 call > req[299948] 0))
        (300165 'move' tmp[300151](300160 call _cond_test call_tmp[745486]))
        tmp[300151]
      }
      label _breakLabel[300155]
    }
    label _end__maybeAcquireMem[539249]
    (539251 return _void[55])
  }
  function list[304222](?)._maybeReleaseMem[300188](arg _mt[304330]:_MT[238], arg this[304328]:list[304222](?), arg amount[300185]:int(64)[13]) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[745493] "expr temp" "maybe param" "maybe type" "temp"
    (745496 'move' call_tmp[745493](405669 call _totalCapacity _mt[243] this[304328]))
    unknown call_tmp[745498] "expr temp" "maybe param" "maybe type" "temp"
    (745501 'move' call_tmp[745498](300192 call <= call_tmp[745493] _initialCapacity[298257]))
    unknown call_tmp[745503] "expr temp" "maybe param" "maybe type" "temp"
    (745506 'move' call_tmp[745503](300196 call _cond_test call_tmp[745498]))
    if call_tmp[745503]
    {
      gotoReturn _end__maybeReleaseMem[539255] _end__maybeReleaseMem[539255]
    }
    unknown call_tmp[745510] "maybe param" "maybe type" "temp"
    (745513 'move' call_tmp[745510](300204 call(405674 call (partial) _getLastArrayIdx _mt[243] this[304328])))
    const lastArrayIdx[300205] "dead at end of block" "const" "insert auto destroy"
    (549926 'init var' lastArrayIdx[300205] call_tmp[745510])
    (300208 'end of statement')
    unknown call_tmp[745515] "expr temp" "maybe param" "maybe type" "temp"
    (745518 'move' call_tmp[745515](300212 call != lastArrayIdx[300205] 0))
    (300215 call _sanity call_tmp[745515])
    (491122 'end of statement' lastArrayIdx[300205])
    unknown call_tmp[745522] "maybe param" "maybe type" "temp"
    (745525 'move' call_tmp[745522](300220 call(405679 call (partial) _getArrayCapacity _mt[243] this[304328]) lastArrayIdx[300205]))
    const lastArrayCapacity[300221] "dead at end of block" "const" "insert auto destroy"
    (549928 'init var' lastArrayCapacity[300221] call_tmp[745522])
    (300224 'end of statement')
    unknown call_tmp[745529] "expr temp" "maybe param" "maybe type" "temp"
    (745532 'move' call_tmp[745529](405685 call _totalCapacity _mt[243] this[304328]))
    unknown call_tmp[745534] "maybe param" "maybe type" "temp"
    (745537 'move' call_tmp[745534](300227 call - call_tmp[745529] lastArrayCapacity[300221]))
    const threshold[300229] "dead at end of block" "const" "insert auto destroy"
    (549930 'init var' threshold[300229] call_tmp[745534])
    (300232 'end of statement')
    unknown call_tmp[745541] "expr temp" "maybe param" "maybe type" "temp"
    (745544 'move' call_tmp[745541](405691 call _size _mt[243] this[304328]))
    unknown call_tmp[745546] "maybe param" "maybe type" "temp"
    (745549 'move' call_tmp[745546](300235 call - call_tmp[745541] amount[300185]))
    const nsize[300237] "dead at end of block" "const" "insert auto destroy"
    (549932 'init var' nsize[300237] call_tmp[745546])
    (300240 'end of statement')
    unknown call_tmp[745551] "expr temp" "maybe param" "maybe type" "temp"
    (745554 'move' call_tmp[745551](300243 call > nsize[300237] threshold[300229]))
    unknown call_tmp[745556] "expr temp" "maybe param" "maybe type" "temp"
    (745559 'move' call_tmp[745556](300247 call _cond_test call_tmp[745551]))
    if call_tmp[745556]
    {
      gotoReturn _end__maybeReleaseMem[539255] _end__maybeReleaseMem[539255]
    }
    unknown array[300256] "dead at end of block" "ref var"
    unknown call_tmp[745563] "expr temp" "maybe param" "maybe type" "temp"
    (745566 'move' call_tmp[745563](300255 call(405699 call (partial) _arrays _mt[243] this[304328]) lastArrayIdx[300205]))
    (549935 'move' array[300256](549934 'addr of' call_tmp[745563]))
    (300259 'end of statement' lastArrayIdx[300205] lastArrayCapacity[300221] lastArrayIdx[300205])
    unknown call_tmp[745568] "expr temp" "maybe param" "maybe type" "temp"
    (745571 'move' call_tmp[745568](300263 call != array[300256] nil[44]))
    (300266 call _sanity call_tmp[745568])
    (491128 'end of statement' array[300256])
    (300272 call(405707 call (partial) _freeArray _mt[243] this[304328]) array[300256] lastArrayCapacity[300221])
    (491130 'end of statement' array[300256] lastArrayCapacity[300221])
    unknown call_tmp[745577] "expr temp" "maybe param" "maybe type" "temp"
    (745580 'move' call_tmp[745577](405714 call _totalCapacity _mt[243] this[304328]))
    (300276 call -= call_tmp[745577] lastArrayCapacity[300221])
    (491133 'end of statement' lastArrayCapacity[300221])
    (300281 call = array[300256] nil[44])
    (491135 'end of statement' array[300256])
    label _end__maybeReleaseMem[539255]
    (539257 return _void[55])
  }
  function list[304222](?)._expand[300292](arg _mt[304334]:_MT[238], ref arg this[304332]:list[304222](?), arg idx[300289]:int(64)[13], arg shift[300296]:int(64)[13] =
  1) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[745584] "expr temp" "maybe param" "maybe type" "temp"
    (745587 'move' call_tmp[745584](300304 call(405720 call (partial) _withinBounds _mt[243] this[304332]) idx[300289]))
    (300306 call _sanity call_tmp[745584])
    (491137 'end of statement')
    unknown call_tmp[745589] "expr temp" "maybe param" "maybe type" "temp"
    (745592 'move' call_tmp[745589](300311 call <= shift[300296] 0))
    unknown call_tmp[745594] "expr temp" "maybe param" "maybe type" "temp"
    (745597 'move' call_tmp[745594](300315 call _cond_test call_tmp[745589]))
    if call_tmp[745594]
    {
      gotoReturn _end__expand[539263] _end__expand[539263]
    }
    const tmp[300419] "const" "temp"
    unknown call_tmp[745599] "expr temp" "maybe param" "maybe type" "temp"
    (745602 'move' call_tmp[745599](300416 '_wide_get_locale' this[304332]))
    (300421 'move' tmp[300419](300417 'deref' call_tmp[745599]))
    {
      {
        (300324 call(405729 call (partial) _maybeAcquireMem _mt[243] this[304332]) shift[300296])
        (491139 'end of statement')
        {
          unknown _indexOfInterest[300366] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[300367] "expr temp" "temp"
          unknown call_tmp[745608] "expr temp" "maybe param" "maybe type" "temp"
          (745611 'move' call_tmp[745608](405757 call _size _mt[243] this[304332]))
          unknown call_tmp[745613] "expr temp" "maybe param" "maybe type" "temp"
          (745616 'move' call_tmp[745613](300390 call - call_tmp[745608] 1))
          unknown call_tmp[745618] "expr temp" "maybe param" "maybe type" "temp"
          (745621 'move' call_tmp[745618](300386 call - 1))
          unknown call_tmp[745623] "expr temp" "maybe param" "maybe type" "temp"
          (745626 'move' call_tmp[745623](300393 call chpl_direct_range_iter idx[300289] call_tmp[745613] call_tmp[745618]))
          (300376 'move' _iterator[300367](300374 call _getIterator call_tmp[745623]))
          Defer
          {
            {
              (300409 call _freeIterator _iterator[300367])
            }
          }
          { scopeless type
            (300398 'move' _indexOfInterest[300366](300395 call iteratorIndex _iterator[300367]))
          }
          ForLoop[300368]
          {
            unknown i[300402] "index var" "insert auto destroy"
            (491141 'end of statement')
            (300404 'move' i[300402] _indexOfInterest[300366])
            (491142 'end of statement' i[300402])
            {
              unknown src[300344] "dead at end of block" "ref var"
              unknown call_tmp[745630] "expr temp" "maybe param" "maybe type" "temp"
              (745633 'move' call_tmp[745630](300343 call(405736 call (partial) _getRef _mt[243] this[304332]) i[300402]))
              (549938 'move' src[300344](549937 'addr of' call_tmp[745630]))
              (300347 'end of statement')
              unknown dst[300356] "dead at end of block" "ref var"
              unknown call_tmp[745637] "expr temp" "maybe param" "maybe type" "temp"
              (745640 'move' call_tmp[745637](300352 call + i[300402] shift[300296]))
              unknown call_tmp[745642] "expr temp" "maybe param" "maybe type" "temp"
              (745645 'move' call_tmp[745642](300355 call(405741 call (partial) _getRef _mt[243] this[304332]) call_tmp[745637]))
              (549941 'move' dst[300356](549940 'addr of' call_tmp[745642]))
              (300359 'end of statement' i[300402] i[300402])
              (300364 call(405749 call (partial) _move _mt[243] this[304332]) src[300344] dst[300356])
              (491146 'end of statement' src[300344] dst[300356])
            }
            label _continueLabel[300371]
            _indexOfInterest[300366]
            _iterator[300367]
          }
          label _breakLabel[300372]
        }
      }
      (300424 'on block' 0 tmp[300419])
    }
    label _end__expand[539263]
    (539265 return _void[55])
  }
  function list[304222](?)._collapse[300437](arg _mt[304338]:_MT[238], ref arg this[304336]:list[304222](?), arg idx[300434]:int(64)[13]) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[745651] "expr temp" "maybe param" "maybe type" "temp"
    (745654 'move' call_tmp[745651](300443 call(405761 call (partial) _withinBounds _mt[243] this[304336]) idx[300434]))
    (300445 call _sanity call_tmp[745651])
    (491150 'end of statement')
    unknown call_tmp[745658] "expr temp" "maybe param" "maybe type" "temp"
    (745661 'move' call_tmp[745658](405768 call _size _mt[243] this[304336]))
    unknown call_tmp[745663] "expr temp" "maybe param" "maybe type" "temp"
    (745666 'move' call_tmp[745663](300451 call - call_tmp[745658] 1))
    unknown call_tmp[745668] "expr temp" "maybe param" "maybe type" "temp"
    (745671 'move' call_tmp[745668](300453 call == idx[300434] call_tmp[745663]))
    unknown call_tmp[745673] "expr temp" "maybe param" "maybe type" "temp"
    (745676 'move' call_tmp[745673](300475 call _cond_test call_tmp[745668]))
    if call_tmp[745673]
    {
      const tmp[300464] "const" "temp"
      unknown call_tmp[745678] "expr temp" "maybe param" "maybe type" "temp"
      (745681 'move' call_tmp[745678](300461 '_wide_get_locale' this[304336]))
      (300466 'move' tmp[300464](300462 'deref' call_tmp[745678]))
      {
        (300459 call(405775 call (partial) _maybeReleaseMem _mt[243] this[304336]) 1)
        (300469 'on block' 0 tmp[300464])
      }
      gotoReturn _end__collapse[539269] _end__collapse[539269]
    }
    const tmp[300564] "const" "temp"
    unknown call_tmp[745685] "expr temp" "maybe param" "maybe type" "temp"
    (745688 'move' call_tmp[745685](300561 '_wide_get_locale' this[304336]))
    (300566 'move' tmp[300564](300562 'deref' call_tmp[745685]))
    {
      {
        {
          unknown _indexOfInterest[300514] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[300515] "expr temp" "temp"
          unknown call_tmp[745692] "expr temp" "maybe param" "maybe type" "temp"
          (745695 'move' call_tmp[745692](405798 call _size _mt[243] this[304336]))
          unknown call_tmp[745697] "expr temp" "maybe param" "maybe type" "temp"
          (745700 'move' call_tmp[745697](300529 call - call_tmp[745692] 2))
          unknown call_tmp[745702] "expr temp" "maybe param" "maybe type" "temp"
          (745705 'move' call_tmp[745702](300532 call chpl_direct_range_iter idx[300434] call_tmp[745697] 1))
          (300524 'move' _iterator[300515](300522 call _getIterator call_tmp[745702]))
          Defer
          {
            {
              (300548 call _freeIterator _iterator[300515])
            }
          }
          { scopeless type
            (300537 'move' _indexOfInterest[300514](300534 call iteratorIndex _iterator[300515]))
          }
          ForLoop[300516]
          {
            unknown i[300541] "index var" "insert auto destroy"
            (491154 'end of statement')
            (300543 'move' i[300541] _indexOfInterest[300514])
            (491155 'end of statement' i[300541])
            {
              unknown src[300495] "dead at end of block" "ref var"
              unknown call_tmp[745709] "expr temp" "maybe param" "maybe type" "temp"
              (745712 'move' call_tmp[745709](300491 call + i[300541] 1))
              unknown call_tmp[745714] "expr temp" "maybe param" "maybe type" "temp"
              (745717 'move' call_tmp[745714](300494 call(405780 call (partial) _getRef _mt[243] this[304336]) call_tmp[745709]))
              (549944 'move' src[300495](549943 'addr of' call_tmp[745714]))
              (300498 'end of statement')
              unknown dst[300504] "dead at end of block" "ref var"
              unknown call_tmp[745721] "expr temp" "maybe param" "maybe type" "temp"
              (745724 'move' call_tmp[745721](300503 call(405785 call (partial) _getRef _mt[243] this[304336]) i[300541]))
              (549947 'move' dst[300504](549946 'addr of' call_tmp[745721]))
              (300507 'end of statement' i[300541] i[300541])
              (300512 call(405790 call (partial) _move _mt[243] this[304336]) src[300495] dst[300504])
              (491159 'end of statement' src[300495] dst[300504])
            }
            label _continueLabel[300519]
            _indexOfInterest[300514]
            _iterator[300515]
          }
          label _breakLabel[300520]
        }
        (300559 call(405802 call (partial) _maybeReleaseMem _mt[243] this[304336]) 1)
      }
      (300569 'on block' 0 tmp[300564])
    }
    label _end__collapse[539269]
    (539271 return _void[55])
  }
  function list[304222](?)._appendByRef[300582](arg _mt[304342]:_MT[238], ref arg this[304340]:list[304222](?), ref arg x[300579] :
  (405807 call eltType _mt[243] this[304340])) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    (300587 call(405811 call (partial) _maybeAcquireMem _mt[243] this[304340]) 1)
    (491164 'end of statement')
    unknown src[300591] "dead at end of block" "ref var"
    (549950 'move' src[300591](549949 'addr of' x[300579]))
    (300594 'end of statement')
    unknown dst[300599] "dead at end of block" "ref var"
    unknown call_tmp[745738] "expr temp" "maybe param" "maybe type" "temp"
    (745741 'move' call_tmp[745738](405821 call _size _mt[243] this[304340]))
    unknown call_tmp[745743] "expr temp" "maybe param" "maybe type" "temp"
    (745746 'move' call_tmp[745743](300598 call(405816 call (partial) _getRef _mt[243] this[304340]) call_tmp[745738]))
    (549953 'move' dst[300599](549952 'addr of' call_tmp[745743]))
    (300602 'end of statement')
    (300607 call(405825 call (partial) _move _mt[243] this[304340]) src[300591] dst[300599])
    (491165 'end of statement' src[300591] dst[300599])
    unknown call_tmp[745752] "expr temp" "maybe param" "maybe type" "temp"
    (745755 'move' call_tmp[745752](405832 call _size _mt[243] this[304340]))
    (300611 call += call_tmp[745752] 1)
    (539275 return _void[55])
  }
  function list[304222](?).append[300625](arg _mt[304346]:_MT[238], ref arg this[304344]:list[304222](?), in arg x[300622] :
  (300619 call eltType _mt[243] this[304344])) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (300635 call(405840 call (partial) _enter _mt[243] this[304344]))
    (491169 'end of statement')
    (300641 call(405846 call (partial) _appendByRef _mt[243] this[304344]) x[300622])
    (491170 'end of statement')
    (300645 call(405851 call (partial) _leave _mt[243] this[304344]))
    (539277 return _void[55])
  }
  {
    (300631 call <(300628 'lifetime_of' this[304344])(300630 'lifetime_of' x[300622]))
  }
  function list[304222](?).contains[300656](arg _mt[304350]:_MT[238], const arg this[304348]:list[304222](?), arg x[300653] :
  (405856 call eltType _mt[243] this[304348])) : _unknown[51] "method" "primary method"
  {
    unknown ret[539281] "RVV" "temp"
    unknown result[300660] "dead at end of block" "insert auto destroy"
    (549955 'init var' result[300660] 0)
    (300663 'end of statement')
    const tmp[300730] "const" "temp"
    unknown call_tmp[745767] "expr temp" "maybe param" "maybe type" "temp"
    (745770 'move' call_tmp[745767](300727 '_wide_get_locale' this[304348]))
    (300732 'move' tmp[300730](300728 'deref' call_tmp[745767]))
    {
      {
        (300668 call(405861 call (partial) _enter _mt[243] this[304348]))
        (491172 'end of statement')
        {
          unknown _indexOfInterest[300690] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[300691] "expr temp" "temp"
          (300700 'move' _iterator[300691](300698 call _getIterator this[304348]))
          Defer
          {
            {
              (300716 call _freeIterator _iterator[300691])
            }
          }
          { scopeless type
            (300705 'move' _indexOfInterest[300690](300702 call iteratorIndex _iterator[300691]))
          }
          ForLoop[300692]
          {
            unknown item[300709] "index var" "insert auto destroy"
            (491174 'end of statement')
            (300711 'move' item[300709] _indexOfInterest[300690])
            (491175 'end of statement' item[300709])
            unknown call_tmp[745774] "expr temp" "maybe param" "maybe type" "temp"
            (745777 'move' call_tmp[745774](300675 call == item[300709] x[300653]))
            unknown call_tmp[745779] "expr temp" "maybe param" "maybe type" "temp"
            (745782 'move' call_tmp[745779](300686 call _cond_test call_tmp[745774]))
            if call_tmp[745779]
            {
              (300679 call = result[300660] 1)
              (491177 'end of statement' result[300660])
              break _breakLabel[300696] _breakLabel[300696]
            }
            label _continueLabel[300695]
            _indexOfInterest[300690]
            _iterator[300691]
          }
          label _breakLabel[300696]
        }
        (300725 call(405869 call (partial) _leave _mt[243] this[304348]))
      }
      (300735 'on block' 0 tmp[300730])
    }
    (539287 'move' ret[539281](539286 'coerce' result[300660] bool[10]))
    gotoReturn _end_contains[539279] _end_contains[539279]
    (491180 'end of statement' result[300660])
    label _end_contains[539279]
    (539283 return ret[539281])
  }
  { scopeless type
    bool[10]
  }
  function list[304222](?).first[300746](arg _mt[304354]:_MT[238], ref arg this[304352]:list[304222](?)) ref : _unknown[51] "method" "primary method"
  {
    unknown ret[539293] "RVV" "temp"
    (300750 call(405874 call (partial) _enter _mt[243] this[304352]))
    (491182 'end of statement')
    unknown tmp[434902] "maybe param" "temp"
    (434913 'move' tmp[434902] 1)
    unknown call_tmp[745788] "expr temp" "maybe param" "maybe type" "temp"
    (745791 'move' call_tmp[745788](434915 call _cond_invalid tmp[434902]))
    if call_tmp[745788]
    {
      (434918 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[581036] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[581037] "maybe param" "temp"
    unknown call_tmp[745793] "expr temp" "maybe param" "maybe type" "temp"
    (745796 'move' call_tmp[745793](434903 call isTrue tmp[434902]))
    (581042 'move' tmp[581037](581040 call _cond_test call_tmp[745793]))
    if tmp[581037]
    {
      unknown tmp[581044] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[745800] "expr temp" "maybe param" "maybe type" "temp"
      (745803 'move' call_tmp[745800](405880 call _size _mt[243] this[304352]))
      unknown call_tmp[745805] "expr temp" "maybe param" "maybe type" "temp"
      (745808 'move' call_tmp[745805](300756 call == call_tmp[745800] 0))
      (581046 'move' tmp[581044](434906 call isTrue call_tmp[745805]))
      (581051 'move' tmp[581036](581048 '_paramFoldLogical' tmp[581037] tmp[581044]))
    }
    {
      (581056 'move' tmp[581036](581053 '_paramFoldLogical' tmp[581037] 0))
    }
    unknown call_tmp[745810] "expr temp" "maybe param" "maybe type" "temp"
    (745813 'move' call_tmp[745810](300786 call _cond_test tmp[581036]))
    if call_tmp[745810]
    {
      (300762 call(405884 call (partial) _leave _mt[243] this[304352]))
      (491184 'end of statement')
      (300784 call boundsCheckHalt "Called \"list.first\" on an empty list.")
    }
    unknown result[300794] "dead at end of block" "ref var"
    unknown call_tmp[745819] "expr temp" "maybe param" "maybe type" "temp"
    (745822 'move' call_tmp[745819](300793 call(405888 call (partial) _getRef _mt[243] this[304352]) 0))
    (549958 'move' result[300794](549957 'addr of' call_tmp[745819]))
    (300797 'end of statement')
    (300800 call(405892 call (partial) _leave _mt[243] this[304352]))
    (491186 'end of statement')
    (539298 'move' ret[539293](539297 'addr of' result[300794]))
    gotoReturn _end_first[539291] _end_first[539291]
    (491187 'end of statement' result[300794])
    label _end_first[539291]
    (539295 return ret[539293])
  }
  function list[304222](?).last[300809](arg _mt[304358]:_MT[238], ref arg this[304356]:list[304222](?)) ref : _unknown[51] "method" "primary method"
  {
    unknown ret[539304] "RVV" "temp"
    (300813 call(405897 call (partial) _enter _mt[243] this[304356]))
    (491189 'end of statement')
    unknown tmp[434923] "maybe param" "temp"
    (434934 'move' tmp[434923] 1)
    unknown call_tmp[745828] "expr temp" "maybe param" "maybe type" "temp"
    (745831 'move' call_tmp[745828](434936 call _cond_invalid tmp[434923]))
    if call_tmp[745828]
    {
      (434939 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[581063] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[581064] "maybe param" "temp"
    unknown call_tmp[745833] "expr temp" "maybe param" "maybe type" "temp"
    (745836 'move' call_tmp[745833](434924 call isTrue tmp[434923]))
    (581069 'move' tmp[581064](581067 call _cond_test call_tmp[745833]))
    if tmp[581064]
    {
      unknown tmp[581071] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[745840] "expr temp" "maybe param" "maybe type" "temp"
      (745843 'move' call_tmp[745840](405903 call _size _mt[243] this[304356]))
      unknown call_tmp[745845] "expr temp" "maybe param" "maybe type" "temp"
      (745848 'move' call_tmp[745845](300819 call == call_tmp[745840] 0))
      (581073 'move' tmp[581071](434927 call isTrue call_tmp[745845]))
      (581078 'move' tmp[581063](581075 '_paramFoldLogical' tmp[581064] tmp[581071]))
    }
    {
      (581083 'move' tmp[581063](581080 '_paramFoldLogical' tmp[581064] 0))
    }
    unknown call_tmp[745850] "expr temp" "maybe param" "maybe type" "temp"
    (745853 'move' call_tmp[745850](300849 call _cond_test tmp[581063]))
    if call_tmp[745850]
    {
      (300825 call(405907 call (partial) _leave _mt[243] this[304356]))
      (491191 'end of statement')
      (300847 call boundsCheckHalt "Called \"list.last\" on an empty list.")
    }
    unknown result[300860] "dead at end of block" "ref var"
    unknown call_tmp[745861] "expr temp" "maybe param" "maybe type" "temp"
    (745864 'move' call_tmp[745861](405916 call _size _mt[243] this[304356]))
    unknown call_tmp[745866] "expr temp" "maybe param" "maybe type" "temp"
    (745869 'move' call_tmp[745866](300856 call - call_tmp[745861] 1))
    unknown call_tmp[745871] "expr temp" "maybe param" "maybe type" "temp"
    (745874 'move' call_tmp[745871](300859 call(405911 call (partial) _getRef _mt[243] this[304356]) call_tmp[745866]))
    (549961 'move' result[300860](549960 'addr of' call_tmp[745871]))
    (300863 'end of statement')
    (300866 call(405920 call (partial) _leave _mt[243] this[304356]))
    (491193 'end of statement')
    (539309 'move' ret[539304](539308 'addr of' result[300860]))
    gotoReturn _end_last[539302] _end_last[539302]
    (491194 'end of statement' result[300860])
    label _end_last[539302]
    (539306 return ret[539304])
  }
  function list[304222](?)._extendGeneric[300877](arg _mt[304362]:_MT[238], ref arg this[304360]:list[304222](?), arg collection[300875]:_any[178](?)) : _unknown[51] "inline" "method" "primary method" "no doc" "no return value for void"
  {
    const tmp[300930] "const" "temp"
    unknown call_tmp[745878] "expr temp" "maybe param" "maybe type" "temp"
    (745881 'move' call_tmp[745878](300927 '_wide_get_locale' this[304360]))
    (300932 'move' tmp[300930](300928 'deref' call_tmp[745878]))
    {
      {
        {
          unknown _indexOfInterest[300893] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[300894] "expr temp" "temp"
          (300903 'move' _iterator[300894](300901 call _getIterator collection[300875]))
          Defer
          {
            {
              (300919 call _freeIterator _iterator[300894])
            }
          }
          { scopeless type
            (300908 'move' _indexOfInterest[300893](300905 call iteratorIndex _iterator[300894]))
          }
          ForLoop[300895]
          {
            unknown item[300912] "index var" "insert auto destroy"
            (491197 'end of statement')
            (300914 'move' item[300912] _indexOfInterest[300893])
            (491198 'end of statement' item[300912])
            {
              unknown cpy[300883] "dead at end of block" "no auto destroy"
              (549963 'init var' cpy[300883] item[300912])
              (300886 'end of statement' item[300912])
              (300891 call(405928 call (partial) _appendByRef _mt[243] this[304360]) cpy[300883])
              (491201 'end of statement' cpy[300883])
            }
            label _continueLabel[300898]
            _indexOfInterest[300893]
            _iterator[300894]
          }
          label _breakLabel[300899]
        }
      }
      (300935 'on block' 0 tmp[300930])
    }
    (539313 return _void[55])
  }
  function list[304222](?).extend[300952](arg _mt[304366]:_MT[238], ref arg this[304364]:list[304222](?), arg other[300949]:list[304222](?)) : _unknown[51] "compiler added where" "method" "primary method" "no return value for void"
  {
    const tmp[300978] "const" "temp"
    unknown call_tmp[745885] "expr temp" "maybe param" "maybe type" "temp"
    (745888 'move' call_tmp[745885](300975 '_wide_get_locale' this[304364]))
    (300980 'move' tmp[300978](300976 'deref' call_tmp[745885]))
    {
      {
        (300963 call(405942 call (partial) _enter _mt[243] this[304364]))
        (491203 'end of statement')
        (300969 call(405948 call (partial) _extendGeneric _mt[243] this[304364]) other[300949])
        (491204 'end of statement')
        (300973 call(405953 call (partial) _leave _mt[243] this[304364]))
      }
      (300983 'on block' 0 tmp[300978])
    }
    (539315 return _void[55])
  }
  where {
    unknown call_tmp[745898] "expr temp" "maybe param" "maybe type" "temp"
    (745901 'move' call_tmp[745898](467877 call eltType _mt[243] this[304364]))
    unknown call_tmp[745903] "expr temp" "maybe param" "maybe type" "temp"
    (745906 'move' call_tmp[745903](467873 'query' other[300949] 1))
    unknown call_tmp[745908] "expr temp" "maybe param" "maybe type" "temp"
    (745911 'move' call_tmp[745908](467880 call == call_tmp[745898] call_tmp[745903]))
    (467884 call & 1 call_tmp[745908])
  }
  {
    (300958 call <(300955 'lifetime_of' this[304364])(300957 'lifetime_of' other[300949]))
  }
  function list[304222](?).extend[301001](arg _mt[304370]:_MT[238], ref arg this[304368]:list[304222](?), arg other[300998]:_array[133594](?)) : _unknown[51] "compiler added where" "method" "primary method" "no return value for void"
  {
    const tmp[301027] "const" "temp"
    unknown call_tmp[745913] "expr temp" "maybe param" "maybe type" "temp"
    (745916 'move' call_tmp[745913](301024 '_wide_get_locale' this[304368]))
    (301029 'move' tmp[301027](301025 'deref' call_tmp[745913]))
    {
      {
        (301012 call(405965 call (partial) _enter _mt[243] this[304368]))
        (491206 'end of statement')
        (301018 call(405969 call (partial) _extendGeneric _mt[243] this[304368]) other[300998])
        (491207 'end of statement')
        (301022 call(405974 call (partial) _leave _mt[243] this[304368]))
      }
      (301032 'on block' 0 tmp[301027])
    }
    (539317 return _void[55])
  }
  where {
    unknown call_tmp[745926] "expr temp" "maybe param" "maybe type" "temp"
    (745929 'move' call_tmp[745926](405958 call eltType _mt[243] this[304368]))
    unknown call_tmp[745933] "expr temp" "maybe param" "maybe type" "temp"
    (745936 'move' call_tmp[745933](467896 call eltType _mt[243] other[300998]))
    unknown call_tmp[745938] "expr temp" "maybe param" "maybe type" "temp"
    (745941 'move' call_tmp[745938](467900 call == call_tmp[745926] call_tmp[745933]))
    (467894 call & 1 call_tmp[745938])
  }
  {
    (301007 call <(301004 'lifetime_of' this[304368])(301006 'lifetime_of' other[300998]))
  }
  function list[304222](?).extend[301052](arg _mt[304374]:_MT[238], ref arg this[304372]:list[304222](?), arg other[301049]:range[64319](?)) : _unknown[51] "compiler added where" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[745943] "expr temp" "maybe param" "maybe type" "temp"
    (745946 'move' call_tmp[745943](301063 call isBoundedRange other[301049]))
    unknown call_tmp[745948] "expr temp" "maybe param" "maybe type" "temp"
    (745951 'move' call_tmp[745948](301064 call ! call_tmp[745943]))
    unknown call_tmp[745953] "expr temp" "maybe param" "maybe type" "temp"
    (745956 'move' call_tmp[745953](301136 call _cond_test call_tmp[745948]))
    if call_tmp[745953]
    {
      unknown call_tmp[745958] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (745961 'move' call_tmp[745958](301067 'typeof' this[304372]))
      unknown call_tmp[745963] "maybe param" "maybe type" "temp"
      (745966 'move' call_tmp[745963](301069 call _cast string[26] call_tmp[745958]))
      unknown e[301071] "dead at end of block" "param"
      (549965 'init var' e[301071] call_tmp[745963])
      (301074 'end of statement')
      unknown call_tmp[745968] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (745971 'move' call_tmp[745968](301077 'typeof' other[301049]))
      unknown call_tmp[745973] "maybe param" "maybe type" "temp"
      (745976 'move' call_tmp[745973](301079 call _cast string[26] call_tmp[745968]))
      unknown f[301081] "dead at end of block" "param"
      (549967 'init var' f[301081] call_tmp[745973])
      (301084 'end of statement')
      unknown call_tmp[745978] "expr temp" "maybe param" "maybe type" "temp"
      (745981 'move' call_tmp[745978](301103 call + "Cannot extend " e[301071]))
      unknown call_tmp[745983] "expr temp" "maybe param" "maybe type" "temp"
      (745986 'move' call_tmp[745983](301122 call + call_tmp[745978] " with unbounded "))
      unknown call_tmp[745988] "maybe param" "maybe type" "temp"
      (745991 'move' call_tmp[745988](301125 call + call_tmp[745983] f[301081]))
      unknown msg[301127] "dead at end of block" "param"
      (549969 'init var' msg[301127] call_tmp[745988])
      (301130 'end of statement')
      (301134 call compilerError msg[301127])
    }
    const tmp[301159] "const" "temp"
    unknown call_tmp[745993] "expr temp" "maybe param" "maybe type" "temp"
    (745996 'move' call_tmp[745993](301156 '_wide_get_locale' this[304372]))
    (301161 'move' tmp[301159](301157 'deref' call_tmp[745993]))
    {
      {
        (301144 call(405993 call (partial) _enter _mt[243] this[304372]))
        (491210 'end of statement')
        (301150 call(405997 call (partial) _extendGeneric _mt[243] this[304372]) other[301049])
        (491211 'end of statement')
        (301154 call(406002 call (partial) _leave _mt[243] this[304372]))
      }
      (301164 'on block' 0 tmp[301159])
    }
    (539319 return _void[55])
  }
  where {
    unknown call_tmp[746006] "expr temp" "maybe param" "maybe type" "temp"
    (746009 'move' call_tmp[746006](467909 call eltType _mt[243] this[304372]))
    unknown call_tmp[746011] "expr temp" "maybe param" "maybe type" "temp"
    (746014 'move' call_tmp[746011](467905 'query' other[301049] 1))
    unknown call_tmp[746016] "expr temp" "maybe param" "maybe type" "temp"
    (746019 'move' call_tmp[746016](467912 call == call_tmp[746006] call_tmp[746011]))
    (467916 call & 1 call_tmp[746016])
  }
  {
    (301058 call <(301055 'lifetime_of' this[304372])(301057 'lifetime_of' other[301049]))
  }
  function list[304222](?).insert[301176](arg _mt[304378]:_MT[238], ref arg this[304376]:list[304222](?), arg idx[301173]:int(64)[13], in arg x[301179] :
  (406007 call eltType _mt[243] this[304376])) : _unknown[51] "method" "primary method"
  {
    unknown ret[539323] "RVV" "temp"
    unknown result[301190] "dead at end of block" "insert auto destroy"
    (549971 'init var' result[301190] 0)
    (301193 'end of statement')
    const tmp[301271] "const" "temp"
    unknown call_tmp[746023] "expr temp" "maybe param" "maybe type" "temp"
    (746026 'move' call_tmp[746023](301268 '_wide_get_locale' this[304376]))
    (301273 'move' tmp[301271](301269 'deref' call_tmp[746023]))
    {
      {
        (301198 call(406014 call (partial) _enter _mt[243] this[304376]))
        (491213 'end of statement')
        unknown call_tmp[746032] "expr temp" "maybe param" "maybe type" "temp"
        (746035 'move' call_tmp[746032](406020 call _size _mt[243] this[304376]))
        unknown call_tmp[746037] "expr temp" "maybe param" "maybe type" "temp"
        (746040 'move' call_tmp[746037](301203 call == idx[301173] call_tmp[746032]))
        unknown call_tmp[746042] "expr temp" "maybe param" "maybe type" "temp"
        (746045 'move' call_tmp[746042](301259 call _cond_test call_tmp[746037]))
        if call_tmp[746042]
        {
          (301208 call(406024 call (partial) _appendByRef _mt[243] this[304376]) x[301179])
          (491214 'end of statement')
          (301213 call = result[301190] 1)
          (491215 'end of statement' result[301190])
        }
        {
          unknown call_tmp[746051] "expr temp" "maybe param" "maybe type" "temp"
          (746054 'move' call_tmp[746051](301219 call(406030 call (partial) _withinBounds _mt[243] this[304376]) idx[301173]))
          unknown call_tmp[746056] "expr temp" "maybe param" "maybe type" "temp"
          (746059 'move' call_tmp[746056](301255 call _cond_test call_tmp[746051]))
          if call_tmp[746056]
          {
            (301223 call(406037 call (partial) _expand _mt[243] this[304376]) idx[301173])
            (491217 'end of statement')
            unknown src[301227] "dead at end of block" "ref var"
            (549974 'move' src[301227](549973 'addr of' x[301179]))
            (301230 'end of statement')
            unknown dst[301235] "dead at end of block" "ref var"
            unknown call_tmp[746065] "expr temp" "maybe param" "maybe type" "temp"
            (746068 'move' call_tmp[746065](301234 call(406043 call (partial) _getRef _mt[243] this[304376]) idx[301173]))
            (549977 'move' dst[301235](549976 'addr of' call_tmp[746065]))
            (301238 'end of statement')
            (301243 call(406048 call (partial) _move _mt[243] this[304376]) src[301227] dst[301235])
            (491218 'end of statement' src[301227] dst[301235])
            unknown call_tmp[746074] "expr temp" "maybe param" "maybe type" "temp"
            (746077 'move' call_tmp[746074](406055 call _size _mt[243] this[304376]))
            (301247 call += call_tmp[746074] 1)
            (491221 'end of statement')
            (301252 call = result[301190] 1)
            (491222 'end of statement' result[301190])
          }
        }
        (301266 call(406060 call (partial) _leave _mt[243] this[304376]))
      }
      (301276 'on block' 0 tmp[301271])
    }
    unknown call_tmp[746081] "expr temp" "maybe param" "maybe type" "temp"
    (746084 'move' call_tmp[746081](301280 call ! result[301190]))
    unknown call_tmp[746086] "expr temp" "maybe param" "maybe type" "temp"
    (746089 'move' call_tmp[746086](301287 call _cond_test call_tmp[746081]))
    if call_tmp[746086]
    {
      (301285 call(406067 call (partial) _destroy _mt[243] this[304376]) x[301179])
    }
    (539329 'move' ret[539323](539328 'coerce' result[301190] bool[10]))
    gotoReturn _end_insert[539321] _end_insert[539321]
    (491226 'end of statement' result[301190])
    label _end_insert[539321]
    (539325 return ret[539323])
  }
  {
    (301187 call <(301184 'lifetime_of' this[304376])(301186 'lifetime_of' x[301179]))
  }
  { scopeless type
    bool[10]
  }
  function list[304222](?)._insertGenericKnownSize[301305](arg _mt[304382]:_MT[238], ref arg this[304380]:list[304222](?), arg idx[301302]:int(64)[13], arg items[301307]:_any[178](?), arg size[301310]:int(64)[13]) : _unknown[51] "method" "primary method" "no doc"
  {
    unknown ret[539335] "RVV" "temp"
    unknown result[301315] "dead at end of block" "insert auto destroy"
    (549979 'init var' result[301315] 0)
    (301318 'end of statement')
    unknown call_tmp[746093] "expr temp" "maybe param" "maybe type" "temp"
    (746096 'move' call_tmp[746093](301323 call >= size[301310] 0))
    (301326 call _sanity call_tmp[746093])
    (491228 'end of statement')
    unknown call_tmp[746098] "expr temp" "maybe param" "maybe type" "temp"
    (746101 'move' call_tmp[746098](301330 call == size[301310] 0))
    unknown call_tmp[746103] "expr temp" "maybe param" "maybe type" "temp"
    (746106 'move' call_tmp[746103](301335 call _cond_test call_tmp[746098]))
    if call_tmp[746103]
    {
      (539341 'move' ret[539335](539340 'coerce' 1 bool[10]))
      gotoReturn _end__insertGenericKnownSize[539333] _end__insertGenericKnownSize[539333]
    }
    const tmp[301460] "const" "temp"
    unknown call_tmp[746108] "expr temp" "maybe param" "maybe type" "temp"
    (746111 'move' call_tmp[746108](301457 '_wide_get_locale' this[304380]))
    (301462 'move' tmp[301460](301458 'deref' call_tmp[746108]))
    {
      {
        unknown call_tmp[746115] "expr temp" "maybe param" "maybe type" "temp"
        (746118 'move' call_tmp[746115](406078 call _size _mt[243] this[304380]))
        unknown call_tmp[746120] "expr temp" "maybe param" "maybe type" "temp"
        (746123 'move' call_tmp[746120](301343 call == idx[301302] call_tmp[746115]))
        unknown call_tmp[746125] "expr temp" "maybe param" "maybe type" "temp"
        (746128 'move' call_tmp[746125](301451 call _cond_test call_tmp[746120]))
        if call_tmp[746125]
        {
          (301348 call(406082 call (partial) _extendGeneric _mt[243] this[304380]) items[301307])
          (491230 'end of statement')
          (301353 call = result[301315] 1)
          (491231 'end of statement' result[301315])
        }
        {
          unknown call_tmp[746134] "expr temp" "maybe param" "maybe type" "temp"
          (746137 'move' call_tmp[746134](301359 call(406088 call (partial) _withinBounds _mt[243] this[304380]) idx[301302]))
          unknown call_tmp[746139] "expr temp" "maybe param" "maybe type" "temp"
          (746142 'move' call_tmp[746139](301447 call _cond_test call_tmp[746134]))
          if call_tmp[746139]
          {
            (301364 call(406093 call (partial) _expand _mt[243] this[304380]) idx[301302] size[301310])
            (491233 'end of statement')
            unknown i[301368] "dead at end of block" "insert auto destroy"
            (549981 'init var' i[301368] idx[301302])
            (301371 'end of statement')
            {
              unknown _indexOfInterest[301409] "an _indexOfInterest or chpl__followIdx variable" "temp"
              unknown _iterator[301410] "expr temp" "temp"
              (301419 'move' _iterator[301410](301417 call _getIterator items[301307]))
              Defer
              {
                {
                  (301435 call _freeIterator _iterator[301410])
                }
              }
              { scopeless type
                (301424 'move' _indexOfInterest[301409](301421 call iteratorIndex _iterator[301410]))
              }
              ForLoop[301411]
              {
                unknown x[301428] "index var" "insert auto destroy"
                (491235 'end of statement')
                (301430 'move' x[301428] _indexOfInterest[301409])
                (491236 'end of statement' x[301428])
                {
                  unknown cpy[301375] "dead at end of block" "no auto destroy"
                  (549983 'init var' cpy[301375] x[301428])
                  (301378 'end of statement')
                  unknown src[301381] "dead at end of block" "ref var"
                  (549986 'move' src[301381](549985 'addr of' cpy[301375]))
                  (301384 'end of statement')
                  unknown dst[301389] "dead at end of block" "ref var"
                  unknown call_tmp[746148] "expr temp" "maybe param" "maybe type" "temp"
                  (746151 'move' call_tmp[746148](301388 call(406103 call (partial) _getRef _mt[243] this[304380]) i[301368]))
                  (549989 'move' dst[301389](549988 'addr of' call_tmp[746148]))
                  (301392 'end of statement' x[301428] cpy[301375] i[301368])
                  (301397 call(406108 call (partial) _move _mt[243] this[304380]) src[301381] dst[301389])
                  (491241 'end of statement' src[301381] dst[301389])
                  unknown call_tmp[746157] "expr temp" "maybe param" "maybe type" "temp"
                  (746160 'move' call_tmp[746157](406115 call _size _mt[243] this[304380]))
                  (301401 call += call_tmp[746157] 1)
                  (491244 'end of statement')
                  (301406 call += i[301368] 1)
                  (491245 'end of statement' i[301368])
                }
                label _continueLabel[301414]
                _indexOfInterest[301409]
                _iterator[301410]
              }
              label _breakLabel[301415]
            }
            (301444 call = result[301315] 1)
            (491247 'end of statement' result[301315])
          }
        }
      }
      (301465 'on block' 0 tmp[301460])
    }
    (539347 'move' ret[539335](539346 'coerce' result[301315] bool[10]))
    gotoReturn _end__insertGenericKnownSize[539333] _end__insertGenericKnownSize[539333]
    (491249 'end of statement' result[301315])
    label _end__insertGenericKnownSize[539333]
    (539337 return ret[539335])
  }
  { scopeless type
    bool[10]
  }
  function list[304222](?).insert[301480](arg _mt[304386]:_MT[238], ref arg this[304384]:list[304222](?), arg idx[301477]:int(64)[13], arg arr[301488]:_array[133594](?)) : _unknown[51] "compiler added where" "method" "primary method"
  {
    unknown ret[539353] "RVV" "temp"
    unknown result[301499] "dead at end of block" "insert auto destroy"
    (549991 'init var' result[301499] 0)
    (301502 'end of statement')
    const tmp[301530] "const" "temp"
    unknown call_tmp[746162] "expr temp" "maybe param" "maybe type" "temp"
    (746165 'move' call_tmp[746162](301527 '_wide_get_locale' this[304384]))
    (301532 'move' tmp[301530](301528 'deref' call_tmp[746162]))
    {
      {
        (301507 call(406130 call (partial) _enter _mt[243] this[304384]))
        (491251 'end of statement')
        unknown call_tmp[746173] "expr temp" "maybe param" "maybe type" "temp"
        (746176 'move' call_tmp[746173](301516 call size _mt[243] arr[301488]))
        unknown call_tmp[746178] "expr temp" "maybe param" "maybe type" "temp"
        (746181 'move' call_tmp[746178](301519 call(406137 call (partial) _insertGenericKnownSize _mt[243] this[304384]) idx[301477] arr[301488] call_tmp[746173]))
        (301520 call = result[301499] call_tmp[746178])
        (491252 'end of statement' result[301499])
        (301525 call(406143 call (partial) _leave _mt[243] this[304384]))
      }
      (301535 'on block' 0 tmp[301530])
    }
    (539359 'move' ret[539353](539358 'coerce' result[301499] bool[10]))
    gotoReturn _end_insert[539351] _end_insert[539351]
    (491255 'end of statement' result[301499])
    label _end_insert[539351]
    (539355 return ret[539353])
  }
  where {
    unknown call_tmp[746187] "expr temp" "maybe param" "maybe type" "temp"
    (746190 'move' call_tmp[746187](406123 call eltType _mt[243] this[304384]))
    unknown call_tmp[746194] "expr temp" "maybe param" "maybe type" "temp"
    (746197 'move' call_tmp[746194](467931 call eltType _mt[243] arr[301488]))
    unknown call_tmp[746199] "expr temp" "maybe param" "maybe type" "temp"
    (746202 'move' call_tmp[746199](467935 call == call_tmp[746187] call_tmp[746194]))
    (467929 call & 1 call_tmp[746199])
  }
  {
    (301496 call <(301493 'lifetime_of' this[304384])(301495 'lifetime_of' arr[301488]))
  }
  { scopeless type
    bool[10]
  }
  function list[304222](?).insert[301551](arg _mt[304390]:_MT[238], ref arg this[304388]:list[304222](?), arg idx[301548]:int(64)[13], arg lst[301557]:list[304222](?)) : _unknown[51] "compiler added where" "method" "primary method"
  {
    unknown ret[539365] "RVV" "temp"
    unknown result[301568] "dead at end of block" "insert auto destroy"
    (549993 'init var' result[301568] 0)
    (301571 'end of statement')
    unknown call_tmp[746206] "maybe param" "maybe type" "temp"
    (746209 'move' call_tmp[746206](301574 call size _mt[243] lst[301557]))
    const size[301577] "dead at end of block" "const" "insert auto destroy"
    (549995 'init var' size[301577] call_tmp[746206])
    (301580 'end of statement')
    const tmp[301604] "const" "temp"
    unknown call_tmp[746211] "expr temp" "maybe param" "maybe type" "temp"
    (746214 'move' call_tmp[746211](301601 '_wide_get_locale' this[304388]))
    (301606 'move' tmp[301604](301602 'deref' call_tmp[746211]))
    {
      {
        (301584 call(406157 call (partial) _enter _mt[243] this[304388]))
        (491257 'end of statement')
        unknown call_tmp[746220] "expr temp" "maybe param" "maybe type" "temp"
        (746223 'move' call_tmp[746220](301593 call(406162 call (partial) _insertGenericKnownSize _mt[243] this[304388]) idx[301548] lst[301557] size[301577]))
        (301594 call = result[301568] call_tmp[746220])
        (491258 'end of statement' result[301568] size[301577])
        (301599 call(406169 call (partial) _leave _mt[243] this[304388]))
      }
      (301609 'on block' 0 tmp[301604])
    }
    (539371 'move' ret[539365](539370 'coerce' result[301568] bool[10]))
    gotoReturn _end_insert[539363] _end_insert[539363]
    (491262 'end of statement' result[301568])
    label _end_insert[539363]
    (539367 return ret[539365])
  }
  where {
    unknown call_tmp[746229] "expr temp" "maybe param" "maybe type" "temp"
    (746232 'move' call_tmp[746229](467944 call eltType _mt[243] this[304388]))
    unknown call_tmp[746234] "expr temp" "maybe param" "maybe type" "temp"
    (746237 'move' call_tmp[746234](467940 'query' lst[301557] 1))
    unknown call_tmp[746239] "expr temp" "maybe param" "maybe type" "temp"
    (746242 'move' call_tmp[746239](467947 call == call_tmp[746229] call_tmp[746234]))
    (467951 call & 1 call_tmp[746239])
  }
  {
    (301565 call <(301562 'lifetime_of' this[304388])(301564 'lifetime_of' lst[301557]))
  }
  { scopeless type
    bool[10]
  }
  function list[304222](?).remove[301625](arg _mt[304394]:_MT[238], ref arg this[304392]:list[304222](?), arg x[301622] :
  (406175 call eltType _mt[243] this[304392]), arg count[301629]:int(64)[13] =
  1) : _unknown[51] "method" "primary method"
  {
    unknown ret[539377] "RVV" "temp"
    unknown result[301635] "dead at end of block" "insert auto destroy"
    (549997 'init var' result[301635] 0)
    (301638 'end of statement')
    const tmp[301875] "const" "temp"
    unknown call_tmp[746246] "expr temp" "maybe param" "maybe type" "temp"
    (746249 'move' call_tmp[746246](301872 '_wide_get_locale' this[304392]))
    (301877 'move' tmp[301875](301873 'deref' call_tmp[746246]))
    {
      {
        unknown src_i[301641] "dead at end of block" "insert auto destroy"
        (549999 'default init var' src_i[301641] int(64)[13])
        unknown dst_i[301645] "dead at end of block" "insert auto destroy"
        unknown call_tmp[746251] "expr temp" "maybe param" "maybe type" "temp" "type variable"
        (746254 'move' call_tmp[746251](301649 'typeof' src_i[301641]))
        (550001 'default init var' dst_i[301645] call_tmp[746251])
        (301650 'end of statement')
        unknown removed[301653] "dead at end of block" "insert auto destroy"
        (550003 'init var' removed[301653] 0)
        (301656 'end of statement' src_i[301641])
        (301659 call = src_i[301641] 0)
        (491265 'end of statement' src_i[301641])
        (301664 call(406182 call (partial) _enter _mt[243] this[304392]))
        (491267 'end of statement')
        {
          unknown tmp[301706] "temp"
          unknown call_tmp[746260] "expr temp" "maybe param" "maybe type" "temp"
          (746263 'move' call_tmp[746260](406208 call _size _mt[243] this[304392]))
          unknown call_tmp[746265] "expr temp" "maybe param" "maybe type" "temp"
          (746268 'move' call_tmp[746265](301727 call < dst_i[301645] call_tmp[746260]))
          (301730 'move' tmp[301706](301725 call _cond_test call_tmp[746265]))
          WhileDo[301711]
          {
            {
              unknown dst[301674] "dead at end of block" "ref var"
              unknown call_tmp[746272] "expr temp" "maybe param" "maybe type" "temp"
              (746275 'move' call_tmp[746272](301673 call(406186 call (partial) _getRef _mt[243] this[304392]) dst_i[301645]))
              (550006 'move' dst[301674](550005 'addr of' call_tmp[746272]))
              (301677 'end of statement' dst_i[301645])
              unknown call_tmp[746277] "expr temp" "maybe param" "maybe type" "temp"
              (746280 'move' call_tmp[746277](301681 call == dst[301674] x[301622]))
              unknown call_tmp[746282] "expr temp" "maybe param" "maybe type" "temp"
              (746285 'move' call_tmp[746282](301697 call _cond_test call_tmp[746277]))
              if call_tmp[746282]
              {
                (301686 call(406193 call (partial) _destroy _mt[243] this[304392]) dst[301674])
                (491269 'end of statement' dst[301674])
                (301691 call += removed[301653] 1)
                (491271 'end of statement' removed[301653])
                break _breakLabel[301710] _breakLabel[301710]
              }
              (301703 call += dst_i[301645] 1)
              (491273 'end of statement' dst_i[301645])
            }
            label _continueLabel[301709]
            unknown call_tmp[746291] "expr temp" "maybe param" "maybe type" "temp"
            (746294 'move' call_tmp[746291](406202 call _size _mt[243] this[304392]))
            unknown call_tmp[746296] "expr temp" "maybe param" "maybe type" "temp"
            (746299 'move' call_tmp[746296](301717 call < dst_i[301645] call_tmp[746291]))
            (301720 'move' tmp[301706](301715 call _cond_test call_tmp[746296]))
            tmp[301706]
          }
          label _breakLabel[301710]
        }
        unknown call_tmp[746301] "expr temp" "maybe param" "maybe type" "temp"
        (746304 'move' call_tmp[746301](301736 call + dst_i[301645] 1))
        (301738 call = src_i[301641] call_tmp[746301])
        (491275 'end of statement' src_i[301641] dst_i[301645])
        {
          unknown tmp[301817] "temp"
          unknown call_tmp[746308] "expr temp" "maybe param" "maybe type" "temp"
          (746311 'move' call_tmp[746308](406252 call _size _mt[243] this[304392]))
          unknown call_tmp[746313] "expr temp" "maybe param" "maybe type" "temp"
          (746316 'move' call_tmp[746313](301838 call < src_i[301641] call_tmp[746308]))
          (301841 'move' tmp[301817](301836 call _cond_test call_tmp[746313]))
          WhileDo[301822]
          {
            {
              unknown src[301749] "dead at end of block" "ref var"
              unknown call_tmp[746320] "expr temp" "maybe param" "maybe type" "temp"
              (746323 'move' call_tmp[746320](301748 call(406214 call (partial) _getRef _mt[243] this[304392]) src_i[301641]))
              (550009 'move' src[301749](550008 'addr of' call_tmp[746320]))
              (301752 'end of statement')
              unknown tmp[434944] "maybe param" "temp"
              unknown tmp[434965] "maybe param" "temp"
              (434976 'move' tmp[434965](301756 call == count[301629] 0))
              unknown call_tmp[746325] "expr temp" "maybe param" "maybe type" "temp"
              (746328 'move' call_tmp[746325](434978 call _cond_invalid tmp[434965]))
              if call_tmp[746325]
              {
                (434981 call compilerError "cannot promote short-circuiting || operator")
              }
              unknown tmp[581090] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
              unknown tmp[581091] "maybe param" "temp"
              unknown call_tmp[746330] "expr temp" "maybe param" "maybe type" "temp"
              (746333 'move' call_tmp[746330](434966 call isTrue tmp[434965]))
              (581096 'move' tmp[581091](581094 call _cond_test call_tmp[746330]))
              if tmp[581091]
              {
                (581101 'move' tmp[581090](581098 '_paramFoldLogical' tmp[581091] 1))
              }
              {
                unknown tmp[581103] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                unknown call_tmp[746335] "expr temp" "maybe param" "maybe type" "temp"
                (746338 'move' call_tmp[746335](301760 call < removed[301653] count[301629]))
                (581105 'move' tmp[581103](434970 call isTrue call_tmp[746335]))
                (581110 'move' tmp[581090](581107 '_paramFoldLogical' tmp[581091] tmp[581103]))
              }
              (434955 'move' tmp[434944] tmp[581090])
              unknown call_tmp[746340] "expr temp" "maybe param" "maybe type" "temp"
              (746343 'move' call_tmp[746340](434957 call _cond_invalid tmp[434944]))
              if call_tmp[746340]
              {
                (434960 call compilerError "cannot promote short-circuiting && operator")
              }
              unknown tmp[581117] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
              unknown tmp[581118] "maybe param" "temp"
              unknown call_tmp[746345] "expr temp" "maybe param" "maybe type" "temp"
              (746348 'move' call_tmp[746345](434945 call isTrue tmp[434944]))
              (581123 'move' tmp[581118](581121 call _cond_test call_tmp[746345]))
              if tmp[581118]
              {
                unknown tmp[581125] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                unknown call_tmp[746350] "expr temp" "maybe param" "maybe type" "temp"
                (746353 'move' call_tmp[746350](301766 call == src[301749] x[301622]))
                (581127 'move' tmp[581125](434948 call isTrue call_tmp[746350]))
                (581132 'move' tmp[581117](581129 '_paramFoldLogical' tmp[581118] tmp[581125]))
              }
              {
                (581137 'move' tmp[581117](581134 '_paramFoldLogical' tmp[581118] 0))
              }
              unknown call_tmp[746355] "expr temp" "maybe param" "maybe type" "temp"
              (746358 'move' call_tmp[746355](301789 call _cond_test tmp[581117]))
              if call_tmp[746355]
              {
                (301773 call(406224 call (partial) _destroy _mt[243] this[304392]) src[301749])
                (491281 'end of statement' src[301749])
                (301778 call += src_i[301641] 1)
                (491283 'end of statement' src_i[301641])
                (301783 call += removed[301653] 1)
                (491285 'end of statement' removed[301653])
                continue _continueLabel[301820] _continueLabel[301820]
              }
              unknown dst[301797] "dead at end of block" "ref var"
              unknown call_tmp[746364] "expr temp" "maybe param" "maybe type" "temp"
              (746367 'move' call_tmp[746364](301796 call(406231 call (partial) _getRef _mt[243] this[304392]) dst_i[301645]))
              (550012 'move' dst[301797](550011 'addr of' call_tmp[746364]))
              (301800 'end of statement' src_i[301641] dst_i[301645])
              (301805 call(406236 call (partial) _move _mt[243] this[304392]) src[301749] dst[301797])
              (491288 'end of statement' src[301749] dst[301797])
              (301809 call += src_i[301641] 1)
              (491291 'end of statement' src_i[301641])
              (301814 call += dst_i[301645] 1)
              (491293 'end of statement' dst_i[301645])
            }
            label _continueLabel[301820]
            unknown call_tmp[746373] "expr temp" "maybe param" "maybe type" "temp"
            (746376 'move' call_tmp[746373](406246 call _size _mt[243] this[304392]))
            unknown call_tmp[746378] "expr temp" "maybe param" "maybe type" "temp"
            (746381 'move' call_tmp[746378](301828 call < src_i[301641] call_tmp[746373]))
            (301831 'move' tmp[301817](301826 call _cond_test call_tmp[746378]))
            tmp[301817]
          }
          label _breakLabel[301821]
        }
        unknown call_tmp[746383] "expr temp" "maybe param" "maybe type" "temp"
        (746386 'move' call_tmp[746383](301859 call _cond_test removed[301653]))
        if call_tmp[746383]
        {
          (301848 call(406257 call (partial) _maybeReleaseMem _mt[243] this[304392]) removed[301653])
          (491295 'end of statement' removed[301653])
          unknown call_tmp[746392] "expr temp" "maybe param" "maybe type" "temp"
          (746395 'move' call_tmp[746392](406263 call _size _mt[243] this[304392]))
          unknown call_tmp[746399] "expr temp" "maybe param" "maybe type" "temp"
          (746402 'move' call_tmp[746399](406268 call _size _mt[243] this[304392]))
          unknown call_tmp[746404] "expr temp" "maybe param" "maybe type" "temp"
          (746407 'move' call_tmp[746404](301854 call - call_tmp[746399] removed[301653]))
          (301856 call = call_tmp[746392] call_tmp[746404])
          (491297 'end of statement' removed[301653])
        }
        (301865 call(406273 call (partial) _leave _mt[243] this[304392]))
        (491299 'end of statement')
        (301869 call = result[301635] removed[301653])
        (491300 'end of statement' result[301635] removed[301653])
      }
      (301880 'on block' 0 tmp[301875])
    }
    (539383 'move' ret[539377](539382 'coerce' result[301635] int(64)[13]))
    gotoReturn _end_remove[539375] _end_remove[539375]
    (491303 'end of statement' result[301635])
    label _end_remove[539375]
    (539379 return ret[539377])
  }
  { scopeless type
    int(64)[13]
  }
  function list[304222](?)._popAtIndex[301895](arg _mt[304398]:_MT[238], ref arg this[304396]:list[304222](?), arg idx[301892]:int(64)[13], arg unlockBeforeHalt[301898] :
  1 =
  1) : _unknown[51] "method" "primary method" "no doc"
  {
    unknown ret[539389] "RVV" "temp"
    unknown tmp[434986] "maybe param" "temp"
    (434997 'move' tmp[434986] 1)
    unknown call_tmp[746411] "expr temp" "maybe param" "maybe type" "temp"
    (746414 'move' call_tmp[746411](434999 call _cond_invalid tmp[434986]))
    if call_tmp[746411]
    {
      (435002 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[581144] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[581145] "maybe param" "temp"
    unknown call_tmp[746416] "expr temp" "maybe param" "maybe type" "temp"
    (746419 'move' call_tmp[746416](434987 call isTrue tmp[434986]))
    (581150 'move' tmp[581145](581148 call _cond_test call_tmp[746416]))
    if tmp[581145]
    {
      unknown tmp[581152] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[746423] "expr temp" "maybe param" "maybe type" "temp"
      (746426 'move' call_tmp[746423](406287 call _size _mt[243] this[304396]))
      unknown call_tmp[746428] "expr temp" "maybe param" "maybe type" "temp"
      (746431 'move' call_tmp[746428](301905 call <= call_tmp[746423] 0))
      (581154 'move' tmp[581152](434990 call isTrue call_tmp[746428]))
      (581159 'move' tmp[581144](581156 '_paramFoldLogical' tmp[581145] tmp[581152]))
    }
    {
      (581164 'move' tmp[581144](581161 '_paramFoldLogical' tmp[581145] 0))
    }
    unknown call_tmp[746433] "expr temp" "maybe param" "maybe type" "temp"
    (746436 'move' call_tmp[746433](301941 call _cond_test tmp[581144]))
    if call_tmp[746433]
    {
      unknown call_tmp[746438] "expr temp" "maybe param" "maybe type" "temp"
      (746441 'move' call_tmp[746438](301914 call _cond_test unlockBeforeHalt[301898]))
      if call_tmp[746438]
      {
        (301912 call(406292 call (partial) _leave _mt[243] this[304396]))
      }
      (301939 call boundsCheckHalt "Called \"list.pop\" on an empty list.")
    }
    unknown tmp[435007] "maybe param" "temp"
    (435018 'move' tmp[435007] 1)
    unknown call_tmp[746445] "expr temp" "maybe param" "maybe type" "temp"
    (746448 'move' call_tmp[746445](435020 call _cond_invalid tmp[435007]))
    if call_tmp[746445]
    {
      (435023 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[581171] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[581172] "maybe param" "temp"
    unknown call_tmp[746450] "expr temp" "maybe param" "maybe type" "temp"
    (746453 'move' call_tmp[746450](435008 call isTrue tmp[435007]))
    (581177 'move' tmp[581172](581175 call _cond_test call_tmp[746450]))
    if tmp[581172]
    {
      unknown tmp[581179] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[746457] "expr temp" "maybe param" "maybe type" "temp"
      (746460 'move' call_tmp[746457](301950 call(406297 call (partial) _withinBounds _mt[243] this[304396]) idx[301892]))
      unknown call_tmp[746462] "expr temp" "maybe param" "maybe type" "temp"
      (746465 'move' call_tmp[746462](301951 call ! call_tmp[746457]))
      (581181 'move' tmp[581179](435011 call isTrue call_tmp[746462]))
      (581186 'move' tmp[581171](581183 '_paramFoldLogical' tmp[581172] tmp[581179]))
    }
    {
      (581191 'move' tmp[581171](581188 '_paramFoldLogical' tmp[581172] 0))
    }
    unknown call_tmp[746467] "expr temp" "maybe param" "maybe type" "temp"
    (746470 'move' call_tmp[746467](301998 call _cond_test tmp[581171]))
    if call_tmp[746467]
    {
      unknown call_tmp[746472] "expr temp" "maybe param" "maybe type" "temp"
      (746475 'move' call_tmp[746472](301960 call _cond_test unlockBeforeHalt[301898]))
      if call_tmp[746472]
      {
        (301958 call(406303 call (partial) _leave _mt[243] this[304396]))
      }
      unknown call_tmp[746479] "expr temp" "maybe param" "maybe type" "temp"
      (746482 'move' call_tmp[746479](301985 call _cast string[26] idx[301892]))
      unknown call_tmp[746484] "maybe param" "maybe type" "temp"
      (746487 'move' call_tmp[746484](301987 call + "Index for \"list.pop\" out of bounds: " call_tmp[746479]))
      const msg[301989] "dead at end of block" "const" "insert auto destroy"
      (550014 'init var' msg[301989] call_tmp[746484])
      (301992 'end of statement')
      (301996 call boundsCheckHalt msg[301989])
      (491310 'end of statement' msg[301989])
    }
    unknown item[302006] "dead at end of block" "ref var"
    unknown call_tmp[746491] "expr temp" "maybe param" "maybe type" "temp"
    (746494 'move' call_tmp[746491](302005 call(406309 call (partial) _getRef _mt[243] this[304396]) idx[301892]))
    (550017 'move' item[302006](550016 'addr of' call_tmp[746491]))
    (302009 'end of statement')
    unknown result[302011] "dead at end of block" "insert auto destroy" "no init"
    unknown call_tmp[746498] "expr temp" "maybe param" "maybe type" "temp"
    (746501 'move' call_tmp[746498](406315 call eltType _mt[243] this[304396]))
    (550019 'default init var' result[302011] call_tmp[746498])
    (302014 'end of statement')
    (302019 call(406319 call (partial) _move _mt[243] this[304396]) item[302006] result[302011])
    (491312 'end of statement' item[302006] result[302011])
    (302024 call(406327 call (partial) _collapse _mt[243] this[304396]) idx[301892])
    (491315 'end of statement')
    unknown call_tmp[746509] "expr temp" "maybe param" "maybe type" "temp"
    (746512 'move' call_tmp[746509](406333 call _size _mt[243] this[304396]))
    (302028 call -= call_tmp[746509] 1)
    (491316 'end of statement')
    unknown call_tmp[746516] "expr temp" "maybe param" "maybe type" "temp"
    (746519 'move' call_tmp[746516](539394 call eltType _mt[243] this[304396]))
    (539398 'move' ret[539389](539397 'coerce' result[302011] call_tmp[746516]))
    gotoReturn _end__popAtIndex[539387] _end__popAtIndex[539387]
    (491317 'end of statement' result[302011])
    label _end__popAtIndex[539387]
    (539391 return ret[539389])
  }
  { scopeless type
    (406281 call eltType _mt[243] this[304396])
  }
  function list[304222](?).pop[302039](arg _mt[304402]:_MT[238], ref arg this[304400]:list[304222](?)) : _unknown[51] "method" "primary method"
  {
    unknown ret[539404] "RVV" "temp"
    (302044 call(406343 call (partial) _enter _mt[243] this[304400]))
    (491319 'end of statement')
    unknown call_tmp[746529] "expr temp" "maybe param" "maybe type" "temp"
    (746532 'move' call_tmp[746529](406354 call _size _mt[243] this[304400]))
    unknown call_tmp[746534] "expr temp" "maybe param" "maybe type" "temp"
    (746537 'move' call_tmp[746534](302050 call - call_tmp[746529] 1))
    unknown call_tmp[746539] "maybe param" "maybe type" "temp"
    (746542 'move' call_tmp[746539](302053 call(406349 call (partial) _popAtIndex _mt[243] this[304400]) call_tmp[746534]))
    unknown result[302054] "dead at end of block" "insert auto destroy"
    (550021 'init var' result[302054] call_tmp[746539])
    (302057 'end of statement')
    (302060 call(406358 call (partial) _leave _mt[243] this[304400]))
    (491320 'end of statement')
    unknown call_tmp[746548] "expr temp" "maybe param" "maybe type" "temp"
    (746551 'move' call_tmp[746548](539409 call eltType _mt[243] this[304400]))
    (539413 'move' ret[539404](539412 'coerce' result[302054] call_tmp[746548]))
    gotoReturn _end_pop[539402] _end_pop[539402]
    (491321 'end of statement' result[302054])
    label _end_pop[539402]
    (539406 return ret[539404])
  }
  { scopeless type
    (406339 call eltType _mt[243] this[304400])
  }
  function list[304222](?).pop[302074](arg _mt[304406]:_MT[238], ref arg this[304404]:list[304222](?), arg idx[302071]:int(64)[13]) : _unknown[51] "method" "primary method"
  {
    unknown ret[539419] "RVV" "temp"
    (302079 call(406368 call (partial) _enter _mt[243] this[304404]))
    (491323 'end of statement')
    unknown call_tmp[746559] "maybe param" "maybe type" "temp"
    (746562 'move' call_tmp[746559](302085 call(406372 call (partial) _popAtIndex _mt[243] this[304404]) idx[302071]))
    unknown result[302086] "dead at end of block" "insert auto destroy"
    (550023 'init var' result[302086] call_tmp[746559])
    (302089 'end of statement')
    (302092 call(406377 call (partial) _leave _mt[243] this[304404]))
    (491324 'end of statement')
    unknown call_tmp[746568] "expr temp" "maybe param" "maybe type" "temp"
    (746571 'move' call_tmp[746568](539424 call eltType _mt[243] this[304404]))
    (539428 'move' ret[539419](539427 'coerce' result[302086] call_tmp[746568]))
    gotoReturn _end_pop[539417] _end_pop[539417]
    (491325 'end of statement' result[302086])
    label _end_pop[539417]
    (539421 return ret[539419])
  }
  { scopeless type
    (406364 call eltType _mt[243] this[304404])
  }
  function list[304222](?)._fireAllDestructors[302102](arg _mt[304410]:_MT[238], arg this[304408]:list[304222](?)) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    const tmp[302175] "const" "temp"
    unknown call_tmp[746575] "expr temp" "maybe param" "maybe type" "temp"
    (746578 'move' call_tmp[746575](302172 '_wide_get_locale' this[304408]))
    (302177 'move' tmp[302175](302173 'deref' call_tmp[746575]))
    {
      {
        {
          unknown _indexOfInterest[302126] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[302127] "expr temp" "temp"
          unknown call_tmp[746582] "expr temp" "maybe param" "maybe type" "temp"
          (746585 'move' call_tmp[746582](406394 call _size _mt[243] this[304408]))
          unknown call_tmp[746587] "expr temp" "maybe param" "maybe type" "temp"
          (746590 'move' call_tmp[746587](302143 call chpl_direct_counted_range_iter 0 call_tmp[746582]))
          (302136 'move' _iterator[302127](302134 call _getIterator call_tmp[746587]))
          Defer
          {
            {
              (302159 call _freeIterator _iterator[302127])
            }
          }
          { scopeless type
            (302148 'move' _indexOfInterest[302126](302145 call iteratorIndex _iterator[302127]))
          }
          ForLoop[302128]
          {
            unknown i[302152] "index var" "insert auto destroy"
            (491328 'end of statement')
            (302154 'move' i[302152] _indexOfInterest[302126])
            (491329 'end of statement' i[302152])
            {
              unknown item[302116] "dead at end of block" "ref var"
              unknown call_tmp[746594] "expr temp" "maybe param" "maybe type" "temp"
              (746597 'move' call_tmp[746594](302115 call(406383 call (partial) _getRef _mt[243] this[304408]) i[302152]))
              (550026 'move' item[302116](550025 'addr of' call_tmp[746594]))
              (302119 'end of statement' i[302152])
              (302124 call(406388 call (partial) _destroy _mt[243] this[304408]) item[302116])
              (491332 'end of statement' item[302116])
            }
            label _continueLabel[302131]
            _indexOfInterest[302126]
            _iterator[302127]
          }
          label _breakLabel[302132]
        }
        unknown call_tmp[746603] "expr temp" "maybe param" "maybe type" "temp"
        (746606 'move' call_tmp[746603](406399 call _size _mt[243] this[304408]))
        (302169 call = call_tmp[746603] 0)
      }
      (302180 'on block' 0 tmp[302175])
    }
    (539434 return _void[55])
  }
  function list[304222](?)._freeAllArrays[302190](arg _mt[304414]:_MT[238], arg this[304412]:list[304222](?)) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[746610] "expr temp" "maybe param" "maybe type" "temp"
    (746613 'move' call_tmp[746610](406404 call _arrays _mt[243] this[304412]))
    unknown call_tmp[746615] "expr temp" "maybe param" "maybe type" "temp"
    (746618 'move' call_tmp[746615](302194 call == call_tmp[746610] nil[44]))
    unknown call_tmp[746620] "expr temp" "maybe param" "maybe type" "temp"
    (746623 'move' call_tmp[746620](302198 call _cond_test call_tmp[746615]))
    if call_tmp[746620]
    {
      gotoReturn _end__freeAllArrays[539436] _end__freeAllArrays[539436]
    }
    unknown call_tmp[746627] "expr temp" "maybe param" "maybe type" "temp"
    (746630 'move' call_tmp[746627](406409 call _totalCapacity _mt[243] this[304412]))
    unknown call_tmp[746632] "expr temp" "maybe param" "maybe type" "temp"
    (746635 'move' call_tmp[746632](302207 call != call_tmp[746627] 0))
    (302210 call _sanity call_tmp[746632])
    (491337 'end of statement')
    unknown call_tmp[746639] "expr temp" "maybe param" "maybe type" "temp"
    (746642 'move' call_tmp[746639](406414 call _arrayCapacity _mt[243] this[304412]))
    unknown call_tmp[746644] "expr temp" "maybe param" "maybe type" "temp"
    (746647 'move' call_tmp[746644](302215 call != call_tmp[746639] 0))
    (302218 call _sanity call_tmp[746644])
    (491338 'end of statement')
    const tmp[302341] "const" "temp"
    unknown call_tmp[746649] "expr temp" "maybe param" "maybe type" "temp"
    (746652 'move' call_tmp[746649](302338 '_wide_get_locale' this[304412]))
    (302343 'move' tmp[302341](302339 'deref' call_tmp[746649]))
    {
      {
        {
          unknown _indexOfInterest[302273] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[302274] "expr temp" "temp"
          unknown call_tmp[746656] "expr temp" "maybe param" "maybe type" "temp"
          (746659 'move' call_tmp[746656](406445 call _arrayCapacity _mt[243] this[304412]))
          unknown call_tmp[746661] "expr temp" "maybe param" "maybe type" "temp"
          (746664 'move' call_tmp[746661](302290 call chpl_direct_counted_range_iter 0 call_tmp[746656]))
          (302283 'move' _iterator[302274](302281 call _getIterator call_tmp[746661]))
          Defer
          {
            {
              (302306 call _freeIterator _iterator[302274])
            }
          }
          { scopeless type
            (302295 'move' _indexOfInterest[302273](302292 call iteratorIndex _iterator[302274]))
          }
          ForLoop[302275]
          {
            unknown i[302299] "index var" "insert auto destroy"
            (491340 'end of statement')
            (302301 'move' i[302299] _indexOfInterest[302273])
            (491341 'end of statement' i[302299])
            {
              unknown array[302232] "dead at end of block" "ref var"
              unknown call_tmp[746668] "expr temp" "maybe param" "maybe type" "temp"
              (746671 'move' call_tmp[746668](302231 call(406420 call (partial) _arrays _mt[243] this[304412]) i[302299]))
              (550029 'move' array[302232](550028 'addr of' call_tmp[746668]))
              (302235 'end of statement')
              unknown call_tmp[746673] "expr temp" "maybe param" "maybe type" "temp"
              (746676 'move' call_tmp[746673](302239 call == array[302232] nil[44]))
              unknown call_tmp[746678] "expr temp" "maybe param" "maybe type" "temp"
              (746681 'move' call_tmp[746678](302244 call _cond_test call_tmp[746673]))
              if call_tmp[746678]
              {
                continue _continueLabel[302278] _continueLabel[302278]
              }
              unknown call_tmp[746685] "maybe param" "maybe type" "temp"
              (746688 'move' call_tmp[746685](302252 call(406426 call (partial) _getArrayCapacity _mt[243] this[304412]) i[302299]))
              const capacity[302253] "dead at end of block" "const" "insert auto destroy"
              (550031 'init var' capacity[302253] call_tmp[746685])
              (302256 'end of statement' i[302299] i[302299])
              unknown call_tmp[746692] "expr temp" "maybe param" "maybe type" "temp"
              (746695 'move' call_tmp[746692](406432 call _totalCapacity _mt[243] this[304412]))
              (302259 call -= call_tmp[746692] capacity[302253])
              (491345 'end of statement' capacity[302253])
              (302266 call(406437 call (partial) _freeArray _mt[243] this[304412]) array[302232] capacity[302253])
              (491347 'end of statement' array[302232] capacity[302253])
              (302270 call = array[302232] nil[44])
              (491350 'end of statement' array[302232])
            }
            label _continueLabel[302278]
            _indexOfInterest[302273]
            _iterator[302274]
          }
          label _breakLabel[302279]
        }
        unknown call_tmp[746701] "expr temp" "maybe param" "maybe type" "temp"
        (746704 'move' call_tmp[746701](406450 call _totalCapacity _mt[243] this[304412]))
        unknown call_tmp[746706] "expr temp" "maybe param" "maybe type" "temp"
        (746709 'move' call_tmp[746706](302317 call == call_tmp[746701] 0))
        (302320 call _sanity call_tmp[746706])
        (491352 'end of statement')
        unknown call_tmp[746715] "expr temp" "maybe param" "maybe type" "temp"
        (746718 'move' call_tmp[746715](406459 call _arrays _mt[243] this[304412]))
        unknown call_tmp[746722] "expr temp" "maybe param" "maybe type" "temp"
        (746725 'move' call_tmp[746722](406464 call _arrayCapacity _mt[243] this[304412]))
        (302326 call(406454 call (partial) _freeBlockArray _mt[243] this[304412]) call_tmp[746715] call_tmp[746722])
        (491353 'end of statement')
        unknown call_tmp[746729] "expr temp" "maybe param" "maybe type" "temp"
        (746732 'move' call_tmp[746729](406469 call _arrays _mt[243] this[304412]))
        (302330 call = call_tmp[746729] nil[44])
        (491354 'end of statement')
        unknown call_tmp[746736] "expr temp" "maybe param" "maybe type" "temp"
        (746739 'move' call_tmp[746736](406474 call _size _mt[243] this[304412]))
        (302335 call = call_tmp[746736] 0)
      }
      (302346 'on block' 0 tmp[302341])
    }
    label _end__freeAllArrays[539436]
    (539438 return _void[55])
  }
  function list[304222](?).clear[302355](arg _mt[304418]:_MT[238], ref arg this[304416]:list[304222](?)) : _unknown[51] "method" "primary method" "no return value for void"
  {
    const tmp[302406] "const" "temp"
    unknown call_tmp[746741] "expr temp" "maybe param" "maybe type" "temp"
    (746744 'move' call_tmp[746741](302403 '_wide_get_locale' this[304416]))
    (302408 'move' tmp[302406](302404 'deref' call_tmp[746741]))
    {
      {
        (302360 call(406479 call (partial) _enter _mt[243] this[304416]))
        (491357 'end of statement')
        (302365 call(406483 call (partial) _fireAllDestructors _mt[243] this[304416]))
        (491358 'end of statement')
        (302369 call(406487 call (partial) _freeAllArrays _mt[243] this[304416]))
        (491359 'end of statement')
        unknown call_tmp[746754] "expr temp" "maybe param" "maybe type" "temp"
        (746757 'move' call_tmp[746754](406492 call _totalCapacity _mt[243] this[304416]))
        unknown call_tmp[746759] "expr temp" "maybe param" "maybe type" "temp"
        (746762 'move' call_tmp[746759](302374 call == call_tmp[746754] 0))
        (302377 call _sanity call_tmp[746759])
        (491360 'end of statement')
        unknown call_tmp[746766] "expr temp" "maybe param" "maybe type" "temp"
        (746769 'move' call_tmp[746766](406497 call _size _mt[243] this[304416]))
        unknown call_tmp[746771] "expr temp" "maybe param" "maybe type" "temp"
        (746774 'move' call_tmp[746771](302382 call == call_tmp[746766] 0))
        (302385 call _sanity call_tmp[746771])
        (491361 'end of statement')
        unknown call_tmp[746778] "expr temp" "maybe param" "maybe type" "temp"
        (746781 'move' call_tmp[746778](406502 call _arrays _mt[243] this[304416]))
        unknown call_tmp[746783] "expr temp" "maybe param" "maybe type" "temp"
        (746786 'move' call_tmp[746783](302390 call == call_tmp[746778] nil[44]))
        (302393 call _sanity call_tmp[746783])
        (491362 'end of statement')
        (302397 call(406506 call (partial) _firstTimeInitializeArrays _mt[243] this[304416]))
        (491363 'end of statement')
        (302401 call(406510 call (partial) _leave _mt[243] this[304416]))
      }
      (302411 'on block' 0 tmp[302406])
    }
    (539442 return _void[55])
  }
  function list[304222](?).indexOf[302423](arg _mt[304422]:_MT[238], const arg this[304420]:list[304222](?), arg x[302420] :
  (406515 call eltType _mt[243] this[304420]), arg start[302427]:int(64)[13] =
  0, arg end[302435]:int(64)[13] =
  (302433 call - 1)) : _unknown[51] "method" "primary method"
  {
    unknown ret[539446] "RVV" "temp"
    unknown call_tmp[746794] "expr temp" "maybe param" "maybe type" "temp"
    (746797 'move' call_tmp[746794](302551 call _cond_test 1))
    if call_tmp[746794]
    {
      const msg[302458] "dead at end of block" "const" "insert auto destroy"
      (550033 'init var' msg[302458] " index for \"list.indexOf\" out of bounds: ")
      (302461 'end of statement')
      unknown tmp[435028] "maybe param" "temp"
      (435039 'move' tmp[435028](302465 call >= end[302435] 0))
      unknown call_tmp[746799] "expr temp" "maybe param" "maybe type" "temp"
      (746802 'move' call_tmp[746799](435041 call _cond_invalid tmp[435028]))
      if call_tmp[746799]
      {
        (435044 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown tmp[581198] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[581199] "maybe param" "temp"
      unknown call_tmp[746804] "expr temp" "maybe param" "maybe type" "temp"
      (746807 'move' call_tmp[746804](435029 call isTrue tmp[435028]))
      (581204 'move' tmp[581199](581202 call _cond_test call_tmp[746804]))
      if tmp[581199]
      {
        unknown tmp[581206] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[746811] "expr temp" "maybe param" "maybe type" "temp"
        (746814 'move' call_tmp[746811](302470 call(406521 call (partial) _withinBounds _mt[243] this[304420]) end[302435]))
        unknown call_tmp[746816] "expr temp" "maybe param" "maybe type" "temp"
        (746819 'move' call_tmp[746816](302471 call ! call_tmp[746811]))
        (581208 'move' tmp[581206](435032 call isTrue call_tmp[746816]))
        (581213 'move' tmp[581198](581210 '_paramFoldLogical' tmp[581199] tmp[581206]))
      }
      {
        (581218 'move' tmp[581198](581215 '_paramFoldLogical' tmp[581199] 0))
      }
      unknown call_tmp[746821] "expr temp" "maybe param" "maybe type" "temp"
      (746824 'move' call_tmp[746821](302505 call _cond_test tmp[581198]))
      if call_tmp[746821]
      {
        unknown call_tmp[746826] "expr temp" "maybe param" "maybe type" "temp"
        (746829 'move' call_tmp[746826](302494 call + "End" msg[302458]))
        unknown call_tmp[746831] "expr temp" "maybe param" "maybe type" "temp"
        (746834 'move' call_tmp[746831](302498 call _cast string[26] end[302435]))
        unknown call_tmp[746836] "expr temp" "maybe param" "maybe type" "temp"
        (746839 'move' call_tmp[746836](302500 call + call_tmp[746826] call_tmp[746831]))
        (302503 call boundsCheckHalt call_tmp[746836])
        (491366 'end of statement' msg[302458])
      }
      unknown call_tmp[746843] "expr temp" "maybe param" "maybe type" "temp"
      (746846 'move' call_tmp[746843](302513 call(406528 call (partial) _withinBounds _mt[243] this[304420]) start[302427]))
      unknown call_tmp[746848] "expr temp" "maybe param" "maybe type" "temp"
      (746851 'move' call_tmp[746848](302514 call ! call_tmp[746843]))
      unknown call_tmp[746853] "expr temp" "maybe param" "maybe type" "temp"
      (746856 'move' call_tmp[746853](302546 call _cond_test call_tmp[746848]))
      if call_tmp[746853]
      {
        unknown call_tmp[746858] "expr temp" "maybe param" "maybe type" "temp"
        (746861 'move' call_tmp[746858](302535 call + "Start" msg[302458]))
        unknown call_tmp[746863] "expr temp" "maybe param" "maybe type" "temp"
        (746866 'move' call_tmp[746863](302539 call _cast string[26] start[302427]))
        unknown call_tmp[746868] "expr temp" "maybe param" "maybe type" "temp"
        (746871 'move' call_tmp[746868](302541 call + call_tmp[746858] call_tmp[746863]))
        (302544 call boundsCheckHalt call_tmp[746868])
        (491368 'end of statement' msg[302458])
      }
    }
    unknown call_tmp[746873] "maybe param" "maybe type" "temp"
    (746876 'move' call_tmp[746873](302557 call - 1))
    unknown error[302559] "dead at end of block" "param"
    (550035 'init var' error[302559] call_tmp[746873])
    (302562 'end of statement')
    unknown tmp[435049] "maybe param" "temp"
    (435060 'move' tmp[435049](302565 call >= end[302435] 0))
    unknown call_tmp[746878] "expr temp" "maybe param" "maybe type" "temp"
    (746881 'move' call_tmp[746878](435062 call _cond_invalid tmp[435049]))
    if call_tmp[746878]
    {
      (435065 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[581225] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[581226] "maybe param" "temp"
    unknown call_tmp[746883] "expr temp" "maybe param" "maybe type" "temp"
    (746886 'move' call_tmp[746883](435050 call isTrue tmp[435049]))
    (581231 'move' tmp[581226](581229 call _cond_test call_tmp[746883]))
    if tmp[581226]
    {
      unknown tmp[581233] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[746888] "expr temp" "maybe param" "maybe type" "temp"
      (746891 'move' call_tmp[746888](302569 call < end[302435] start[302427]))
      (581235 'move' tmp[581233](435053 call isTrue call_tmp[746888]))
      (581240 'move' tmp[581225](581237 '_paramFoldLogical' tmp[581226] tmp[581233]))
    }
    {
      (581245 'move' tmp[581225](581242 '_paramFoldLogical' tmp[581226] 0))
    }
    unknown call_tmp[746893] "expr temp" "maybe param" "maybe type" "temp"
    (746896 'move' call_tmp[746893](302576 call _cond_test tmp[581225]))
    if call_tmp[746893]
    {
      (539452 'move' ret[539446](539451 'coerce' error[302559] int(64)[13]))
      gotoReturn _end_indexOf[539444] _end_indexOf[539444]
    }
    unknown result[302582] "dead at end of block" "insert auto destroy"
    (550037 'init var' result[302582] error[302559])
    (302585 'end of statement')
    const tmp[302678] "const" "temp"
    unknown call_tmp[746898] "expr temp" "maybe param" "maybe type" "temp"
    (746901 'move' call_tmp[746898](302675 '_wide_get_locale' this[304420]))
    (302680 'move' tmp[302678](302676 'deref' call_tmp[746898]))
    {
      {
        (302589 call(406541 call (partial) _enter _mt[243] this[304420]))
        (491372 'end of statement')
        const stop[302604] "dead at end of block" "const" "insert auto destroy"
        unknown tmp[581252] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[581253] "maybe param" "temp"
        unknown call_tmp[746905] "expr temp" "maybe param" "maybe type" "temp"
        (746908 'move' call_tmp[746905](302594 call < end[302435] 0))
        (581258 'move' tmp[581253](581256 call _cond_test call_tmp[746905]))
        if tmp[581253]
        {
          unknown tmp[581260] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[746912] "expr temp" "maybe param" "maybe type" "temp"
          (746915 'move' call_tmp[746912](406547 call _size _mt[243] this[304420]))
          (581262 'move' tmp[581260](302598 call - call_tmp[746912] 1))
          (581267 'move' tmp[581252](581264 '_paramFoldLogical' tmp[581253] tmp[581260]))
        }
        {
          (581272 'move' tmp[581252](581269 '_paramFoldLogical' tmp[581253] end[302435]))
        }
        (550039 'init var' stop[302604] tmp[581252])
        (302607 'end of statement')
        {
          unknown _indexOfInterest[302633] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[302634] "expr temp" "temp"
          unknown call_tmp[746917] "expr temp" "maybe param" "maybe type" "temp"
          (746920 'move' call_tmp[746917](302648 call chpl_direct_range_iter start[302427] stop[302604] 1))
          (302643 'move' _iterator[302634](302641 call _getIterator call_tmp[746917]))
          Defer
          {
            {
              (302664 call _freeIterator _iterator[302634])
            }
          }
          { scopeless type
            (302653 'move' _indexOfInterest[302633](302650 call iteratorIndex _iterator[302634]))
          }
          ForLoop[302635]
          {
            unknown i[302657] "index var" "insert auto destroy"
            (491374 'end of statement')
            (302659 'move' i[302657] _indexOfInterest[302633])
            (491375 'end of statement' i[302657])
            unknown call_tmp[746924] "expr temp" "maybe param" "maybe type" "temp"
            (746927 'move' call_tmp[746924](302617 call(406553 call (partial) _getRef _mt[243] this[304420]) i[302657]))
            unknown call_tmp[746929] "expr temp" "maybe param" "maybe type" "temp"
            (746932 'move' call_tmp[746929](302618 call == x[302420] call_tmp[746924]))
            unknown call_tmp[746934] "expr temp" "maybe param" "maybe type" "temp"
            (746937 'move' call_tmp[746934](302629 call _cond_test call_tmp[746929]))
            if call_tmp[746934]
            {
              (302622 call = result[302582] i[302657])
              (491377 'end of statement' result[302582] i[302657])
              break _breakLabel[302639] _breakLabel[302639]
            }
            label _continueLabel[302638]
            _indexOfInterest[302633]
            _iterator[302634]
          }
          label _breakLabel[302639]
        }
        (302673 call(406562 call (partial) _leave _mt[243] this[304420]))
      }
      (302683 'on block' 0 tmp[302678])
    }
    (539458 'move' ret[539446](539457 'coerce' result[302582] int(64)[13]))
    gotoReturn _end_indexOf[539444] _end_indexOf[539444]
    (491381 'end of statement' result[302582])
    label _end_indexOf[539444]
    (539448 return ret[539446])
  }
  { scopeless type
    int(64)[13]
  }
  function list[304222](?).count[302698](arg _mt[304426]:_MT[238], const arg this[304424]:list[304222](?), arg x[302695] :
  (406568 call eltType _mt[243] this[304424])) : _unknown[51] "method" "primary method"
  {
    unknown ret[539464] "RVV" "temp"
    unknown result[302702] "dead at end of block" "insert auto destroy"
    (550041 'init var' result[302702] 0)
    (302705 'end of statement')
    const tmp[302779] "const" "temp"
    unknown call_tmp[746943] "expr temp" "maybe param" "maybe type" "temp"
    (746946 'move' call_tmp[746943](302776 '_wide_get_locale' this[304424]))
    (302781 'move' tmp[302779](302777 'deref' call_tmp[746943]))
    {
      {
        (302710 call(406573 call (partial) _enter _mt[243] this[304424]))
        (491383 'end of statement')
        unknown count[302714] "dead at end of block" "insert auto destroy"
        (550043 'init var' count[302714] 0)
        (302717 'end of statement')
        {
          unknown _indexOfInterest[302734] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[302735] "expr temp" "temp"
          (302744 'move' _iterator[302735](302742 call _getIterator this[304424]))
          Defer
          {
            {
              (302760 call _freeIterator _iterator[302735])
            }
          }
          { scopeless type
            (302749 'move' _indexOfInterest[302734](302746 call iteratorIndex _iterator[302735]))
          }
          ForLoop[302736]
          {
            unknown item[302753] "index var" "insert auto destroy"
            (491385 'end of statement')
            (302755 'move' item[302753] _indexOfInterest[302734])
            (491386 'end of statement' item[302753])
            unknown call_tmp[746950] "expr temp" "maybe param" "maybe type" "temp"
            (746953 'move' call_tmp[746950](302722 call == x[302695] item[302753]))
            unknown call_tmp[746955] "expr temp" "maybe param" "maybe type" "temp"
            (746958 'move' call_tmp[746955](302729 call _cond_test call_tmp[746950]))
            if call_tmp[746955]
            {
              (302726 call += count[302714] 1)
              (491388 'end of statement' count[302714])
            }
            label _continueLabel[302739]
            _indexOfInterest[302734]
            _iterator[302735]
          }
          label _breakLabel[302740]
        }
        (302769 call = result[302702] count[302714])
        (491390 'end of statement' result[302702] count[302714])
        (302774 call(406583 call (partial) _leave _mt[243] this[304424]))
      }
      (302784 'on block' 0 tmp[302779])
    }
    (539470 'move' ret[539464](539469 'coerce' result[302702] int(64)[13]))
    gotoReturn _end_count[539462] _end_count[539462]
    (491394 'end of statement' result[302702])
    label _end_count[539462]
    (539466 return ret[539464])
  }
  { scopeless type
    int(64)[13]
  }
  function list[304222](?).sort[302805](arg _mt[304430]:_MT[238], ref arg this[304428]:list[304222](?), arg comparator[302801]:_any[178](?) :
  defaultComparator[267998] =
  defaultComparator[267998]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    const tmp[302931] "const" "temp"
    unknown call_tmp[746962] "expr temp" "maybe param" "maybe type" "temp"
    (746965 'move' call_tmp[746962](302928 '_wide_get_locale' this[304428]))
    (302933 'move' tmp[302931](302929 'deref' call_tmp[746962]))
    {
      {
        (302810 call(406589 call (partial) _enter _mt[243] this[304428]))
        (491396 'end of statement')
        unknown call_tmp[746971] "expr temp" "maybe param" "maybe type" "temp"
        (746974 'move' call_tmp[746971](406594 call _size _mt[243] this[304428]))
        unknown call_tmp[746976] "expr temp" "maybe param" "maybe type" "temp"
        (746979 'move' call_tmp[746976](302815 call > call_tmp[746971] 1))
        unknown call_tmp[746981] "expr temp" "maybe param" "maybe type" "temp"
        (746984 'move' call_tmp[746981](302920 call _cond_test call_tmp[746976]))
        if call_tmp[746981]
        {
          unknown arr[302829] "dead at end of block" "insert auto destroy"
          unknown call_tmp[746986] "expr temp" "maybe param" "maybe type" "temp"
          (746989 'move' call_tmp[746986](302818 call chpl_build_low_bounded_range 0))
          unknown call_tmp[746993] "expr temp" "maybe param" "maybe type" "temp"
          (746996 'move' call_tmp[746993](406599 call _size _mt[243] this[304428]))
          unknown call_tmp[746998] "expr temp" "maybe param" "maybe type" "temp"
          (747001 'move' call_tmp[746998](302821 call # call_tmp[746986] call_tmp[746993]))
          unknown call_tmp[747003] "expr temp" "maybe param" "maybe type" "temp"
          (747006 'move' call_tmp[747003](302825 call chpl__ensureDomainExpr call_tmp[746998]))
          unknown call_tmp[747010] "expr temp" "maybe param" "maybe type" "temp"
          (747013 'move' call_tmp[747010](406604 call eltType _mt[243] this[304428]))
          unknown call_tmp[747015] "expr temp" "maybe param" "maybe type" "temp"
          (747018 'move' call_tmp[747015](302827 call chpl__buildArrayRuntimeType call_tmp[747003] call_tmp[747010]))
          (550045 'default init var' arr[302829] call_tmp[747015])
          (302832 'end of statement')
          {
            unknown _indexOfInterest[302852] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[302853] "expr temp" "temp"
            unknown call_tmp[747022] "expr temp" "maybe param" "maybe type" "temp"
            (747025 'move' call_tmp[747022](406613 call _size _mt[243] this[304428]))
            unknown call_tmp[747027] "expr temp" "maybe param" "maybe type" "temp"
            (747030 'move' call_tmp[747027](302869 call chpl_direct_counted_range_iter 0 call_tmp[747022]))
            (302862 'move' _iterator[302853](302860 call _getIterator call_tmp[747027]))
            Defer
            {
              {
                (302885 call _freeIterator _iterator[302853])
              }
            }
            { scopeless type
              (302874 'move' _indexOfInterest[302852](302871 call iteratorIndex _iterator[302853]))
            }
            ForLoop[302854]
            {
              unknown i[302878] "index var" "insert auto destroy"
              (491398 'end of statement')
              (302880 'move' i[302878] _indexOfInterest[302852])
              (491399 'end of statement' i[302878])
              unknown call_tmp[747032] "expr temp" "maybe param" "maybe type" "temp"
              (747035 'move' call_tmp[747032](302844 call arr[302829] i[302878]))
              unknown call_tmp[747037] "expr temp" "maybe param" "maybe type" "temp"
              (747040 'move' call_tmp[747037](302848 call this[304428] i[302878]))
              (302849 call = call_tmp[747032] call_tmp[747037])
              (491401 'end of statement' arr[302829] i[302878] i[302878])
              label _continueLabel[302857]
              _indexOfInterest[302852]
              _iterator[302853]
            }
            label _breakLabel[302858]
          }
          (302901 call sort module=[255] Sort[267989] arr[302829] comparator[302801])
          (491405 'end of statement' arr[302829])
          (302905 call(406619 call (partial) _fireAllDestructors _mt[243] this[304428]))
          (491407 'end of statement')
          (302909 call(406623 call (partial) _freeAllArrays _mt[243] this[304428]))
          (491408 'end of statement')
          (302913 call(406627 call (partial) _firstTimeInitializeArrays _mt[243] this[304428]))
          (491409 'end of statement')
          (302918 call(406631 call (partial) _extendGeneric _mt[243] this[304428]) arr[302829])
          (491410 'end of statement' arr[302829])
          (364993 'referenced modules list' Sort[267989])
        }
        (302926 call(406636 call (partial) _leave _mt[243] this[304428]))
      }
      (302936 'on block' 0 tmp[302931])
    }
    (539476 return _void[55])
  }
  function list[304222](?).this[302950](arg _mt[304434]:_MT[238], ref arg this[304432]:list[304222](?), arg i[302947]:int(64)[13]) ref : _unknown[51] "method" "primary method"
  {
    unknown ret[539480] "RVV" "temp"
    unknown tmp[435070] "maybe param" "temp"
    (435081 'move' tmp[435070] 1)
    unknown call_tmp[747052] "expr temp" "maybe param" "maybe type" "temp"
    (747055 'move' call_tmp[747052](435083 call _cond_invalid tmp[435070]))
    if call_tmp[747052]
    {
      (435086 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[581279] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[581280] "maybe param" "temp"
    unknown call_tmp[747057] "expr temp" "maybe param" "maybe type" "temp"
    (747060 'move' call_tmp[747057](435071 call isTrue tmp[435070]))
    (581285 'move' tmp[581280](581283 call _cond_test call_tmp[747057]))
    if tmp[581280]
    {
      unknown tmp[581287] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[747064] "expr temp" "maybe param" "maybe type" "temp"
      (747067 'move' call_tmp[747064](302956 call(406641 call (partial) _withinBounds _mt[243] this[304432]) i[302947]))
      unknown call_tmp[747069] "expr temp" "maybe param" "maybe type" "temp"
      (747072 'move' call_tmp[747069](302957 call ! call_tmp[747064]))
      (581289 'move' tmp[581287](435074 call isTrue call_tmp[747069]))
      (581294 'move' tmp[581279](581291 '_paramFoldLogical' tmp[581280] tmp[581287]))
    }
    {
      (581299 'move' tmp[581279](581296 '_paramFoldLogical' tmp[581280] 0))
    }
    unknown call_tmp[747074] "expr temp" "maybe param" "maybe type" "temp"
    (747077 'move' call_tmp[747074](302994 call _cond_test tmp[581279]))
    if call_tmp[747074]
    {
      unknown call_tmp[747079] "expr temp" "maybe param" "maybe type" "temp"
      (747082 'move' call_tmp[747079](302980 call _cast string[26] i[302947]))
      unknown call_tmp[747084] "maybe param" "maybe type" "temp"
      (747087 'move' call_tmp[747084](302982 call + "Invalid list index: " call_tmp[747079]))
      const msg[302984] "dead at end of block" "const" "insert auto destroy"
      (550047 'init var' msg[302984] call_tmp[747084])
      (302987 'end of statement')
      (302992 call boundsCheckHalt msg[302984])
      (491415 'end of statement' msg[302984])
    }
    unknown result[303003] "dead at end of block" "ref var"
    unknown call_tmp[747091] "expr temp" "maybe param" "maybe type" "temp"
    (747094 'move' call_tmp[747091](303002 call(406648 call (partial) _getRef _mt[243] this[304432]) i[302947]))
    (550050 'move' result[303003](550049 'addr of' call_tmp[747091]))
    (303006 'end of statement')
    (539485 'move' ret[539480](539484 'addr of' result[303003]))
    gotoReturn _end_this[539478] _end_this[539478]
    (491417 'end of statement' result[303003])
    label _end_this[539478]
    (539482 return ret[539480])
  }
  function list[304222](?).this[303018](arg _mt[304438]:_MT[238], const  ref arg this[304436]:list[304222](?), arg i[303015]:int(64)[13]) const ref : _unknown[51] "method" "primary method"
  {
    unknown ret[539491] "RVV" "temp"
    unknown tmp[435091] "maybe param" "temp"
    (435102 'move' tmp[435091] 1)
    unknown call_tmp[747096] "expr temp" "maybe param" "maybe type" "temp"
    (747099 'move' call_tmp[747096](435104 call _cond_invalid tmp[435091]))
    if call_tmp[747096]
    {
      (435107 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[581306] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[581307] "maybe param" "temp"
    unknown call_tmp[747101] "expr temp" "maybe param" "maybe type" "temp"
    (747104 'move' call_tmp[747101](435092 call isTrue tmp[435091]))
    (581312 'move' tmp[581307](581310 call _cond_test call_tmp[747101]))
    if tmp[581307]
    {
      unknown tmp[581314] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[747108] "expr temp" "maybe param" "maybe type" "temp"
      (747111 'move' call_tmp[747108](303024 call(406655 call (partial) _withinBounds _mt[243] this[304436]) i[303015]))
      unknown call_tmp[747113] "expr temp" "maybe param" "maybe type" "temp"
      (747116 'move' call_tmp[747113](303025 call ! call_tmp[747108]))
      (581316 'move' tmp[581314](435095 call isTrue call_tmp[747113]))
      (581321 'move' tmp[581306](581318 '_paramFoldLogical' tmp[581307] tmp[581314]))
    }
    {
      (581326 'move' tmp[581306](581323 '_paramFoldLogical' tmp[581307] 0))
    }
    unknown call_tmp[747118] "expr temp" "maybe param" "maybe type" "temp"
    (747121 'move' call_tmp[747118](303046 call _cond_test tmp[581306]))
    if call_tmp[747118]
    {
      unknown call_tmp[747123] "expr temp" "maybe param" "maybe type" "temp"
      (747126 'move' call_tmp[747123](303032 call _cast string[26] i[303015]))
      unknown call_tmp[747128] "maybe param" "maybe type" "temp"
      (747131 'move' call_tmp[747128](303034 call + "Invalid list index: " call_tmp[747123]))
      const msg[303036] "dead at end of block" "const" "insert auto destroy"
      (550052 'init var' msg[303036] call_tmp[747128])
      (303039 'end of statement')
      (303044 call halt msg[303036])
      (491420 'end of statement' msg[303036])
    }
    const result[303055] "dead at end of block" "const" "ref var"
    unknown call_tmp[747135] "expr temp" "maybe param" "maybe type" "temp"
    (747138 'move' call_tmp[747135](303054 call(406662 call (partial) _getRef _mt[243] this[304436]) i[303015]))
    (550055 'move' result[303055](550054 'addr of' call_tmp[747135]))
    (303058 'end of statement')
    (539496 'move' ret[539491](539495 'addr of' result[303055]))
    gotoReturn _end_this[539489] _end_this[539489]
    (491422 'end of statement' result[303055])
    label _end_this[539489]
    (539493 return ret[539491])
  }
  function list[304222](?).these[303066](arg _mt[304442]:_MT[238], arg this[304440]:list[304222](?)) ref : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[539502] "RVV" "temp"
    {
      unknown _indexOfInterest[303087] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[303088] "expr temp" "temp"
      unknown call_tmp[747142] "expr temp" "maybe param" "maybe type" "temp"
      (747145 'move' call_tmp[747142](406675 call _size _mt[243] this[304440]))
      unknown call_tmp[747147] "expr temp" "maybe param" "maybe type" "temp"
      (747150 'move' call_tmp[747147](303104 call chpl_direct_counted_range_iter 0 call_tmp[747142]))
      (303097 'move' _iterator[303088](303095 call _getIterator call_tmp[747147]))
      Defer
      {
        {
          (303120 call _freeIterator _iterator[303088])
        }
      }
      { scopeless type
        (303109 'move' _indexOfInterest[303087](303106 call iteratorIndex _iterator[303088]))
      }
      ForLoop[303089]
      {
        unknown i[303113] "index var" "insert auto destroy"
        (491425 'end of statement')
        (303115 'move' i[303113] _indexOfInterest[303087])
        (491426 'end of statement' i[303113])
        {
          unknown result[303079] "dead at end of block" "ref var"
          unknown call_tmp[747154] "expr temp" "maybe param" "maybe type" "temp"
          (747157 'move' call_tmp[747154](303078 call(406668 call (partial) _getRef _mt[243] this[304440]) i[303113]))
          (550058 'move' result[303079](550057 'addr of' call_tmp[747154]))
          (303082 'end of statement' i[303113])
          unknown yret[539506] "YVV" "temp"
          (539509 'move' yret[539506](539508 'addr of' result[303079]))
          (539511 yield yret[539506])
          (491429 'end of statement' result[303079])
        }
        label _continueLabel[303092]
        _indexOfInterest[303087]
        _iterator[303088]
      }
      label _breakLabel[303093]
    }
    (539504 return ret[539502])
  }
  function list[304222](?).these[303136](arg _mt[304446]:_MT[238], arg this[304444]:list[304222](?), param arg tag[303133]:iterKind[453]) ref : _unknown[51] "iterator fn" "method" "primary method" "no doc" "no return value for void"
  {
    unknown ret[539515] "RVV" "temp"
    unknown call_tmp[747161] "maybe param" "maybe type" "temp"
    (747164 'move' call_tmp[747161](406682 call _size _mt[243] this[304444]))
    const osz[303146] "dead at end of block" "const" "insert auto destroy"
    (550060 'init var' osz[303146] call_tmp[747161])
    (303149 'end of statement')
    const minChunkSize[303152] "dead at end of block" "const" "insert auto destroy"
    (550062 'init var' minChunkSize[303152] 64)
    (303155 'end of statement')
    unknown call_tmp[747166] "maybe param" "maybe type" "temp"
    (747169 'move' call_tmp[747166](303158 call <= osz[303146] minChunkSize[303152]))
    const hasOneChunk[303160] "dead at end of block" "const" "insert auto destroy"
    (550064 'init var' hasOneChunk[303160] call_tmp[747166])
    (303163 'end of statement')
    const numTasks[303173] "dead at end of block" "const" "insert auto destroy"
    unknown tmp[581333] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[581334] "maybe param" "temp"
    (581339 'move' tmp[581334](581337 call _cond_test hasOneChunk[303160]))
    if tmp[581334]
    {
      (581344 'move' tmp[581333](581341 '_paramFoldLogical' tmp[581334] 1))
    }
    {
      unknown tmp[581346] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[747171] "expr temp" "maybe param" "maybe type" "temp"
      (747174 'move' call_tmp[747171](364999 call here[90438]))
      (581348 'move' tmp[581346](303167 call maxTaskPar _mt[243] call_tmp[747171]))
      (581353 'move' tmp[581333](581350 '_paramFoldLogical' tmp[581334] tmp[581346]))
    }
    (550066 'init var' numTasks[303173] tmp[581333])
    (303176 'end of statement')
    unknown call_tmp[747178] "expr temp" "maybe param" "maybe type" "temp"
    (747181 'move' call_tmp[747178](303180 call / osz[303146] numTasks[303173]))
    unknown call_tmp[747183] "expr temp" "maybe param" "maybe type" "temp"
    (747186 'move' call_tmp[747183](303183 call floor call_tmp[747178]))
    unknown call_tmp[747188] "maybe param" "maybe type" "temp"
    (747191 'move' call_tmp[747188](303185 call _cast int(64)[13] call_tmp[747183]))
    const chunkSize[303187] "dead at end of block" "const" "insert auto destroy"
    (550068 'init var' chunkSize[303187] call_tmp[747188])
    (303190 'end of statement')
    unknown call_tmp[747193] "expr temp" "maybe param" "maybe type" "temp"
    (747196 'move' call_tmp[747193](303194 call * chunkSize[303187] numTasks[303173]))
    unknown call_tmp[747198] "maybe param" "maybe type" "temp"
    (747201 'move' call_tmp[747198](303196 call - osz[303146] call_tmp[747193]))
    const trailing[303198] "dead at end of block" "const" "insert auto destroy"
    (550070 'init var' trailing[303198] call_tmp[747198])
    (303201 'end of statement' osz[303146] minChunkSize[303152] hasOneChunk[303160] osz[303146] numTasks[303173] osz[303146] chunkSize[303187] numTasks[303173])
    {
      unknown tmpIter[303265] "expr temp" "maybe ref" "no copy" "temp"
      unknown call_tmp[747203] "expr temp" "maybe param" "maybe type" "temp"
      (747206 'move' call_tmp[747203](303204 call chpl_build_low_bounded_range 0))
      (303268 'move' tmpIter[303265](303207 call # call_tmp[747203] numTasks[303173]))
      unknown isRngDomArr[303454] "maybe param" "temp"
      unknown tmp[435112] "maybe param" "temp"
      (435123 'move' tmp[435112](303456 call isBoundedRange tmpIter[303265]))
      unknown call_tmp[747208] "expr temp" "maybe param" "maybe type" "temp"
      (747211 'move' call_tmp[747208](435125 call _cond_invalid tmp[435112]))
      if call_tmp[747208]
      {
        (435128 call compilerError "cannot promote short-circuiting || operator")
      }
      unknown tmp[581387] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[581388] "maybe param" "temp"
      unknown call_tmp[747213] "expr temp" "maybe param" "maybe type" "temp"
      (747216 'move' call_tmp[747213](435113 call isTrue tmp[435112]))
      (581393 'move' tmp[581388](581391 call _cond_test call_tmp[747213]))
      if tmp[581388]
      {
        (581398 'move' tmp[581387](581395 '_paramFoldLogical' tmp[581388] 1))
      }
      {
        unknown tmp[435133] "maybe param" "temp"
        (435144 'move' tmp[435133](303459 call isDomain tmpIter[303265]))
        unknown call_tmp[747218] "expr temp" "maybe param" "maybe type" "temp"
        (747221 'move' call_tmp[747218](435146 call _cond_invalid tmp[435133]))
        if call_tmp[747218]
        {
          (435149 call compilerError "cannot promote short-circuiting || operator")
        }
        unknown tmp[581360] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[581361] "maybe param" "temp"
        unknown call_tmp[747223] "expr temp" "maybe param" "maybe type" "temp"
        (747226 'move' call_tmp[747223](435134 call isTrue tmp[435133]))
        (581366 'move' tmp[581361](581364 call _cond_test call_tmp[747223]))
        if tmp[581361]
        {
          (581371 'move' tmp[581360](581368 '_paramFoldLogical' tmp[581361] 1))
        }
        {
          unknown tmp[581373] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[747228] "expr temp" "maybe param" "maybe type" "temp"
          (747231 'move' call_tmp[747228](303462 call isArray tmpIter[303265]))
          (581375 'move' tmp[581373](435138 call isTrue call_tmp[747228]))
          (581380 'move' tmp[581360](581377 '_paramFoldLogical' tmp[581361] tmp[581373]))
        }
        unknown tmp[581400] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (581402 'move' tmp[581400](435117 call isTrue tmp[581360]))
        (581407 'move' tmp[581387](581404 '_paramFoldLogical' tmp[581388] tmp[581400]))
      }
      (303469 'move' isRngDomArr[303454] tmp[581387])
      if isRngDomArr[303454]
      {
        const _coforallCount[303321] "const" "end count" "temp"
        (303390 'move' _coforallCount[303321](303387 call _endCountAlloc 1))
        unknown numTasks[303322] "temp"
        (303374 'move' numTasks[303322](303370 call size _mt[243] tmpIter[303265]))
        (303365 call _upEndCount _coforallCount[303321] 1 numTasks[303322])
        (491440 'end of statement')
        (303362 call chpl_resetTaskSpawn numTasks[303322])
        (491441 'end of statement')
        unknown _indexOfInterest[303329] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[303330] "expr temp" "temp"
        (303339 'move' _iterator[303330](303337 call _getIterator tmpIter[303265]))
        Defer
        {
          {
            (303355 call _freeIterator _iterator[303330])
          }
        }
        { scopeless type
          (303344 'move' _indexOfInterest[303329](303341 call iteratorIndex _iterator[303330]))
        }
        ForLoop[303331]
        {
          unknown tid[303348] "coforall index var" "index var" "insert auto destroy"
          (491443 'end of statement')
          (303350 'move' tid[303348] _indexOfInterest[303329])
          (491444 'end of statement' tid[303348])
          {
            {
              unknown call_tmp[747237] "maybe param" "maybe type" "temp"
              (747240 'move' call_tmp[747237](303274 call(406707 call (partial) _computeChunk _mt[243] this[304444]) tid[303348] chunkSize[303187] trailing[303198]))
              unknown chunk[303272] "dead at end of block" "insert auto destroy"
              (550072 'init var' chunk[303272] call_tmp[747237])
              (303279 'end of statement' tid[303348] chunkSize[303187] trailing[303198])
              {
                unknown _indexOfInterest[303281] "an _indexOfInterest or chpl__followIdx variable" "temp"
                unknown _iterator[303283] "expr temp" "temp"
                unknown call_tmp[747242] "expr temp" "maybe param" "maybe type" "temp"
                (747245 'move' call_tmp[747242](303290 call chunk[303272] 0))
                (303285 'move' _iterator[303283](303288 call _getIterator call_tmp[747242]))
                Defer
                {
                  {
                    (303294 call _freeIterator _iterator[303283])
                  }
                }
                { scopeless type
                  (303298 'move' _indexOfInterest[303281](303301 call iteratorIndex _iterator[303283]))
                }
                ForLoop[303303]
                {
                  unknown i[303306] "index var" "insert auto destroy"
                  (491450 'end of statement')
                  (303308 'move' i[303306] _indexOfInterest[303281])
                  (491451 'end of statement' i[303306])
                  unknown yret[539519] "YVV" "temp"
                  unknown call_tmp[747247] "expr temp" "maybe param" "maybe type" "temp"
                  (747250 'move' call_tmp[747247](303314 call this[304444] i[303306]))
                  (539522 'move' yret[539519](539521 'addr of' call_tmp[747247]))
                  (539524 yield yret[539519])
                  (491453 'end of statement' i[303306])
                  label _continueLabel[303316]
                  _indexOfInterest[303281]
                  _iterator[303283]
                }
                label _breakLabel[303318]
              }
            }
            (303324 call _downEndCount _coforallCount[303321] nil[44])
            (303323 'coforall loop')
          }
          label _continueLabel[303334]
          _indexOfInterest[303329]
          _iterator[303330]
        }
        label _breakLabel[303335]
        Defer
        {
          {
            (303377 call _endCountFree _coforallCount[303321])
          }
        }
        (303382 call _waitEndCount _coforallCount[303321] 1 numTasks[303322])
      }
      {
        const _coforallCount[303394] "const" "end count" "temp"
        (303451 'move' _coforallCount[303394](303448 call _endCountAlloc 1))
        unknown _indexOfInterest[303402] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[303403] "expr temp" "temp"
        (303412 'move' _iterator[303403](303410 call _getIterator tmpIter[303265]))
        Defer
        {
          {
            (303428 call _freeIterator _iterator[303403])
          }
        }
        { scopeless type
          (303417 'move' _indexOfInterest[303402](303414 call iteratorIndex _iterator[303403]))
        }
        ForLoop[303404]
        {
          unknown tid[303421] "coforall index var" "index var" "insert auto destroy"
          (491459 'end of statement')
          (303423 'move' tid[303421] _indexOfInterest[303402])
          (491460 'end of statement' tid[303421])
          (303435 call _upEndCount _coforallCount[303394] 1)
          (491462 'end of statement')
          {
            {
              unknown call_tmp[747254] "maybe param" "maybe type" "temp"
              (747257 'move' call_tmp[747254](303214 call(406697 call (partial) _computeChunk _mt[243] this[304444]) tid[303421] chunkSize[303187] trailing[303198]))
              unknown chunk[303215] "dead at end of block" "insert auto destroy"
              (550074 'init var' chunk[303215] call_tmp[747254])
              (303218 'end of statement' tid[303421] chunkSize[303187] trailing[303198])
              {
                unknown _indexOfInterest[303231] "an _indexOfInterest or chpl__followIdx variable" "temp"
                unknown _iterator[303232] "expr temp" "temp"
                unknown call_tmp[747259] "expr temp" "maybe param" "maybe type" "temp"
                (747262 'move' call_tmp[747259](303224 call chunk[303215] 0))
                (303241 'move' _iterator[303232](303239 call _getIterator call_tmp[747259]))
                Defer
                {
                  {
                    (303258 call _freeIterator _iterator[303232])
                  }
                }
                { scopeless type
                  (303247 'move' _indexOfInterest[303231](303244 call iteratorIndex _iterator[303232]))
                }
                ForLoop[303233]
                {
                  unknown i[303251] "index var" "insert auto destroy"
                  (491467 'end of statement')
                  (303253 'move' i[303251] _indexOfInterest[303231])
                  (491468 'end of statement' i[303251])
                  unknown yret[539526] "YVV" "temp"
                  unknown call_tmp[747264] "expr temp" "maybe param" "maybe type" "temp"
                  (747267 'move' call_tmp[747264](303228 call this[304444] i[303251]))
                  (539529 'move' yret[539526](539528 'addr of' call_tmp[747264]))
                  (539531 yield yret[539526])
                  (491470 'end of statement' i[303251])
                  label _continueLabel[303236]
                  _indexOfInterest[303231]
                  _iterator[303232]
                }
                label _breakLabel[303237]
              }
            }
            (303397 call _downEndCount _coforallCount[303394] nil[44])
            (303396 'coforall loop')
          }
          label _continueLabel[303407]
          _indexOfInterest[303402]
          _iterator[303403]
        }
        label _breakLabel[303408]
        Defer
        {
          {
            (303439 call _endCountFree _coforallCount[303394])
          }
        }
        (303444 call _waitEndCount _coforallCount[303394] 1)
      }
    }
    (539517 return ret[539515])
  }
  where {
    (303143 call == tag[303133] standalone[451])
  }
  function list[304222](?)._computeChunk[303480](arg _mt[304450]:_MT[238], arg this[304448]:list[304222](?), arg tid[303478]:_any[178](?), arg chunkSize[303482]:_any[178](?), arg trailing[303484]:_any[178](?)) : _unknown[51] "method" "primary method" "no doc"
  {
    unknown ret[539535] "RVV" "temp"
    unknown lo[303486] "dead at end of block" "insert auto destroy"
    (550076 'init var' lo[303486] 0)
    unknown hi[303490] "dead at end of block" "insert auto destroy"
    (550078 'init var' hi[303490] lo[303486])
    (303494 'end of statement' lo[303486])
    unknown call_tmp[747269] "expr temp" "maybe param" "maybe type" "temp"
    (747272 'move' call_tmp[747269](303498 call <= tid[303478] 0))
    unknown call_tmp[747274] "expr temp" "maybe param" "maybe type" "temp"
    (747277 'move' call_tmp[747274](303540 call _cond_test call_tmp[747269]))
    if call_tmp[747274]
    {
      (303502 call = lo[303486] 0)
      (491476 'end of statement' lo[303486])
      unknown call_tmp[747279] "expr temp" "maybe param" "maybe type" "temp"
      (747282 'move' call_tmp[747279](303509 call + chunkSize[303482] trailing[303484]))
      unknown call_tmp[747284] "expr temp" "maybe param" "maybe type" "temp"
      (747287 'move' call_tmp[747284](303512 call - call_tmp[747279] 1))
      (303514 call = hi[303490] call_tmp[747284])
      (491478 'end of statement' hi[303490])
    }
    {
      unknown call_tmp[747289] "expr temp" "maybe param" "maybe type" "temp"
      (747292 'move' call_tmp[747289](303520 call * chunkSize[303482] tid[303478]))
      unknown call_tmp[747294] "expr temp" "maybe param" "maybe type" "temp"
      (747297 'move' call_tmp[747294](303523 call + call_tmp[747289] trailing[303484]))
      (303525 call = lo[303486] call_tmp[747294])
      (491480 'end of statement' lo[303486])
      unknown call_tmp[747299] "expr temp" "maybe param" "maybe type" "temp"
      (747302 'move' call_tmp[747299](303532 call + lo[303486] chunkSize[303482]))
      unknown call_tmp[747304] "expr temp" "maybe param" "maybe type" "temp"
      (747307 'move' call_tmp[747304](303535 call - call_tmp[747299] 1))
      (303537 call = hi[303490] call_tmp[747304])
      (491482 'end of statement' hi[303490] lo[303486])
    }
    unknown call_tmp[747309] "expr temp" "maybe param" "maybe type" "temp"
    (747312 'move' call_tmp[747309](303546 call chpl_build_bounded_range lo[303486] hi[303490]))
    unknown call_tmp[747314] "expr temp" "maybe param" "maybe type" "temp"
    (747317 'move' call_tmp[747314](303548 call _build_tuple call_tmp[747309]))
    (539540 'move' ret[539535](539539 'deref' call_tmp[747314]))
    gotoReturn _end__computeChunk[539533] _end__computeChunk[539533]
    (491485 'end of statement' lo[303486] hi[303490])
    label _end__computeChunk[539533]
    (539537 return ret[539535])
  }
  function list[304222](?).these[303558](arg _mt[304454]:_MT[238], arg this[304452]:list[304222](?), param arg tag[303556]:_any[178](?)) ref : _unknown[51] "iterator fn" "method" "primary method" "no doc" "no return value for void"
  {
    unknown ret[539546] "RVV" "temp"
    unknown call_tmp[747321] "maybe param" "maybe type" "temp"
    (747324 'move' call_tmp[747321](406734 call _size _mt[243] this[304452]))
    const osz[303568] "dead at end of block" "const" "insert auto destroy"
    (550080 'init var' osz[303568] call_tmp[747321])
    (303571 'end of statement')
    const minChunkSize[303574] "dead at end of block" "const" "insert auto destroy"
    (550082 'init var' minChunkSize[303574] 32)
    (303577 'end of statement')
    unknown call_tmp[747326] "maybe param" "maybe type" "temp"
    (747329 'move' call_tmp[747326](303580 call <= osz[303568] minChunkSize[303574]))
    const hasOneChunk[303582] "dead at end of block" "const" "insert auto destroy"
    (550084 'init var' hasOneChunk[303582] call_tmp[747326])
    (303585 'end of statement')
    const numTasks[303592] "dead at end of block" "const" "insert auto destroy"
    unknown tmp[581414] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[581415] "maybe param" "temp"
    (581420 'move' tmp[581415](581418 call _cond_test hasOneChunk[303582]))
    if tmp[581415]
    {
      (581425 'move' tmp[581414](581422 '_paramFoldLogical' tmp[581415] 1))
    }
    {
      (581430 'move' tmp[581414](581427 '_paramFoldLogical' tmp[581415] dataParTasksPerLocale[93284]))
    }
    (550086 'init var' numTasks[303592] tmp[581414])
    (303595 'end of statement')
    unknown call_tmp[747331] "expr temp" "maybe param" "maybe type" "temp"
    (747334 'move' call_tmp[747331](303599 call / osz[303568] numTasks[303592]))
    unknown call_tmp[747336] "expr temp" "maybe param" "maybe type" "temp"
    (747339 'move' call_tmp[747336](303602 call floor call_tmp[747331]))
    unknown call_tmp[747341] "maybe param" "maybe type" "temp"
    (747344 'move' call_tmp[747341](303604 call _cast int(64)[13] call_tmp[747336]))
    const chunkSize[303606] "dead at end of block" "const" "insert auto destroy"
    (550088 'init var' chunkSize[303606] call_tmp[747341])
    (303609 'end of statement')
    unknown call_tmp[747346] "expr temp" "maybe param" "maybe type" "temp"
    (747349 'move' call_tmp[747346](303613 call * chunkSize[303606] numTasks[303592]))
    unknown call_tmp[747351] "maybe param" "maybe type" "temp"
    (747354 'move' call_tmp[747351](303615 call - osz[303568] call_tmp[747346]))
    const trailing[303617] "dead at end of block" "const" "insert auto destroy"
    (550090 'init var' trailing[303617] call_tmp[747351])
    (303620 'end of statement' osz[303568] minChunkSize[303574] hasOneChunk[303582] osz[303568] numTasks[303592] osz[303568] chunkSize[303606] numTasks[303592])
    {
      unknown tmpIter[303642] "expr temp" "maybe ref" "no copy" "temp"
      unknown call_tmp[747356] "expr temp" "maybe param" "maybe type" "temp"
      (747359 'move' call_tmp[747356](303623 call chpl_build_low_bounded_range 0))
      (303645 'move' tmpIter[303642](303626 call # call_tmp[747356] numTasks[303592]))
      unknown isRngDomArr[303793] "maybe param" "temp"
      unknown tmp[435154] "maybe param" "temp"
      (435165 'move' tmp[435154](303795 call isBoundedRange tmpIter[303642]))
      unknown call_tmp[747361] "expr temp" "maybe param" "maybe type" "temp"
      (747364 'move' call_tmp[747361](435167 call _cond_invalid tmp[435154]))
      if call_tmp[747361]
      {
        (435170 call compilerError "cannot promote short-circuiting || operator")
      }
      unknown tmp[581464] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[581465] "maybe param" "temp"
      unknown call_tmp[747366] "expr temp" "maybe param" "maybe type" "temp"
      (747369 'move' call_tmp[747366](435155 call isTrue tmp[435154]))
      (581470 'move' tmp[581465](581468 call _cond_test call_tmp[747366]))
      if tmp[581465]
      {
        (581475 'move' tmp[581464](581472 '_paramFoldLogical' tmp[581465] 1))
      }
      {
        unknown tmp[435175] "maybe param" "temp"
        (435186 'move' tmp[435175](303798 call isDomain tmpIter[303642]))
        unknown call_tmp[747371] "expr temp" "maybe param" "maybe type" "temp"
        (747374 'move' call_tmp[747371](435188 call _cond_invalid tmp[435175]))
        if call_tmp[747371]
        {
          (435191 call compilerError "cannot promote short-circuiting || operator")
        }
        unknown tmp[581437] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[581438] "maybe param" "temp"
        unknown call_tmp[747376] "expr temp" "maybe param" "maybe type" "temp"
        (747379 'move' call_tmp[747376](435176 call isTrue tmp[435175]))
        (581443 'move' tmp[581438](581441 call _cond_test call_tmp[747376]))
        if tmp[581438]
        {
          (581448 'move' tmp[581437](581445 '_paramFoldLogical' tmp[581438] 1))
        }
        {
          unknown tmp[581450] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[747381] "expr temp" "maybe param" "maybe type" "temp"
          (747384 'move' call_tmp[747381](303801 call isArray tmpIter[303642]))
          (581452 'move' tmp[581450](435180 call isTrue call_tmp[747381]))
          (581457 'move' tmp[581437](581454 '_paramFoldLogical' tmp[581438] tmp[581450]))
        }
        unknown tmp[581477] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (581479 'move' tmp[581477](435159 call isTrue tmp[581437]))
        (581484 'move' tmp[581464](581481 '_paramFoldLogical' tmp[581465] tmp[581477]))
      }
      (303808 'move' isRngDomArr[303793] tmp[581464])
      if isRngDomArr[303793]
      {
        const _coforallCount[303660] "const" "end count" "temp"
        (303729 'move' _coforallCount[303660](303726 call _endCountAlloc 1))
        unknown numTasks[303661] "temp"
        (303713 'move' numTasks[303661](303709 call size _mt[243] tmpIter[303642]))
        (303704 call _upEndCount _coforallCount[303660] 1 numTasks[303661])
        (491497 'end of statement')
        (303701 call chpl_resetTaskSpawn numTasks[303661])
        (491498 'end of statement')
        unknown _indexOfInterest[303668] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[303669] "expr temp" "temp"
        (303678 'move' _iterator[303669](303676 call _getIterator tmpIter[303642]))
        Defer
        {
          {
            (303694 call _freeIterator _iterator[303669])
          }
        }
        { scopeless type
          (303683 'move' _indexOfInterest[303668](303680 call iteratorIndex _iterator[303669]))
        }
        ForLoop[303670]
        {
          unknown tid[303687] "coforall index var" "index var" "insert auto destroy"
          (491500 'end of statement')
          (303689 'move' tid[303687] _indexOfInterest[303668])
          (491501 'end of statement' tid[303687])
          {
            {
              unknown call_tmp[747390] "maybe param" "maybe type" "temp"
              (747393 'move' call_tmp[747390](303651 call(406756 call (partial) _computeChunk _mt[243] this[304452]) tid[303687] chunkSize[303606] trailing[303617]))
              unknown chunk[303649] "dead at end of block" "insert auto destroy"
              (550092 'init var' chunk[303649] call_tmp[747390])
              (303656 'end of statement' tid[303687] chunkSize[303606] trailing[303617])
              unknown yret[539550] "YVV" "temp"
              (539553 'move' yret[539550](539552 'addr of' chunk[303649]))
              (539555 yield yret[539550])
              (491506 'end of statement' chunk[303649])
            }
            (303663 call _downEndCount _coforallCount[303660] nil[44])
            (303662 'coforall loop')
          }
          label _continueLabel[303673]
          _indexOfInterest[303668]
          _iterator[303669]
        }
        label _breakLabel[303674]
        Defer
        {
          {
            (303716 call _endCountFree _coforallCount[303660])
          }
        }
        (303721 call _waitEndCount _coforallCount[303660] 1 numTasks[303661])
      }
      {
        const _coforallCount[303733] "const" "end count" "temp"
        (303790 'move' _coforallCount[303733](303787 call _endCountAlloc 1))
        unknown _indexOfInterest[303741] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[303742] "expr temp" "temp"
        (303751 'move' _iterator[303742](303749 call _getIterator tmpIter[303642]))
        Defer
        {
          {
            (303767 call _freeIterator _iterator[303742])
          }
        }
        { scopeless type
          (303756 'move' _indexOfInterest[303741](303753 call iteratorIndex _iterator[303742]))
        }
        ForLoop[303743]
        {
          unknown tid[303760] "coforall index var" "index var" "insert auto destroy"
          (491512 'end of statement')
          (303762 'move' tid[303760] _indexOfInterest[303741])
          (491513 'end of statement' tid[303760])
          (303774 call _upEndCount _coforallCount[303733] 1)
          (491515 'end of statement')
          {
            {
              unknown call_tmp[747397] "maybe param" "maybe type" "temp"
              (747400 'move' call_tmp[747397](303633 call(406748 call (partial) _computeChunk _mt[243] this[304452]) tid[303760] chunkSize[303606] trailing[303617]))
              unknown chunk[303634] "dead at end of block" "insert auto destroy"
              (550094 'init var' chunk[303634] call_tmp[747397])
              (303637 'end of statement' tid[303760] chunkSize[303606] trailing[303617])
              unknown yret[539557] "YVV" "temp"
              (539560 'move' yret[539557](539559 'addr of' chunk[303634]))
              (539562 yield yret[539557])
              (491519 'end of statement' chunk[303634])
            }
            (303736 call _downEndCount _coforallCount[303733] nil[44])
            (303735 'coforall loop')
          }
          label _continueLabel[303746]
          _indexOfInterest[303741]
          _iterator[303742]
        }
        label _breakLabel[303747]
        Defer
        {
          {
            (303778 call _endCountFree _coforallCount[303733])
          }
        }
        (303783 call _waitEndCount _coforallCount[303733] 1)
      }
    }
    (539548 return ret[539546])
  }
  where {
    (303565 call == tag[303556] leader[447])
  }
  function list[304222](?).these[303819](arg _mt[304458]:_MT[238], arg this[304456]:list[304222](?), param arg tag[303817]:_any[178](?), arg followThis[303821]:_any[178](?)) ref : _unknown[51] "iterator fn" "method" "primary method" "no doc" "no return value for void"
  {
    unknown ret[539566] "RVV" "temp"
    {
      unknown _indexOfInterest[303841] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[303842] "expr temp" "temp"
      unknown call_tmp[747402] "expr temp" "maybe param" "maybe type" "temp"
      (747405 'move' call_tmp[747402](303834 call followThis[303821] 0))
      (303851 'move' _iterator[303842](303849 call _getIterator call_tmp[747402]))
      Defer
      {
        {
          (303868 call _freeIterator _iterator[303842])
        }
      }
      { scopeless type
        (303857 'move' _indexOfInterest[303841](303854 call iteratorIndex _iterator[303842]))
      }
      ForLoop[303843]
      {
        unknown i[303861] "index var" "insert auto destroy"
        (491525 'end of statement')
        (303863 'move' i[303861] _indexOfInterest[303841])
        (491526 'end of statement' i[303861])
        unknown yret[539570] "YVV" "temp"
        unknown call_tmp[747407] "expr temp" "maybe param" "maybe type" "temp"
        (747410 'move' call_tmp[747407](303838 call this[304456] i[303861]))
        (539573 'move' yret[539570](539572 'addr of' call_tmp[747407]))
        (539575 yield yret[539570])
        (491528 'end of statement' i[303861])
        label _continueLabel[303846]
        _indexOfInterest[303841]
        _iterator[303842]
      }
      label _breakLabel[303847]
    }
    (539568 return ret[539566])
  }
  where {
    (303828 call == tag[303817] follower[449])
  }
  function list[304222](?).readWriteThis[303885](arg _mt[304462]:_MT[238], arg this[304460]:list[304222](?), arg ch[303882]:channel[237751](?)) : _unknown[51] throws "method" "primary method" "no return value for void"
  {
    (303889 call(406769 call (partial) _enter _mt[243] this[304460]))
    (491530 'end of statement')
    (303894 call <~> ch[303882] "[")
    (491531 'end of statement')
    {
      unknown _indexOfInterest[303916] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[303917] "expr temp" "temp"
      unknown call_tmp[747416] "expr temp" "maybe param" "maybe type" "temp"
      (747419 'move' call_tmp[747416](406781 call _size _mt[243] this[304460]))
      unknown call_tmp[747421] "expr temp" "maybe param" "maybe type" "temp"
      (747424 'move' call_tmp[747421](303931 call - call_tmp[747416] 2))
      unknown call_tmp[747426] "expr temp" "maybe param" "maybe type" "temp"
      (747429 'move' call_tmp[747426](303934 call chpl_direct_range_iter 0 call_tmp[747421] 1))
      (303926 'move' _iterator[303917](303924 call _getIterator call_tmp[747426]))
      Defer
      {
        {
          (303950 call _freeIterator _iterator[303917])
        }
      }
      { scopeless type
        (303939 'move' _indexOfInterest[303916](303936 call iteratorIndex _iterator[303917]))
      }
      ForLoop[303918]
      {
        unknown i[303943] "index var" "insert auto destroy"
        (491533 'end of statement')
        (303945 'move' i[303943] _indexOfInterest[303916])
        (491534 'end of statement' i[303943])
        unknown call_tmp[747433] "expr temp" "maybe param" "maybe type" "temp"
        (747436 'move' call_tmp[747433](303909 call(406775 call (partial) _getRef _mt[243] this[304460]) i[303943]))
        unknown call_tmp[747438] "expr temp" "maybe param" "maybe type" "temp"
        (747441 'move' call_tmp[747438](303910 call <~> ch[303882] call_tmp[747433]))
        (303913 call <~> call_tmp[747438] ", ")
        (491536 'end of statement' i[303943])
        label _continueLabel[303921]
        _indexOfInterest[303916]
        _iterator[303917]
      }
      label _breakLabel[303922]
    }
    unknown call_tmp[747445] "expr temp" "maybe param" "maybe type" "temp"
    (747448 'move' call_tmp[747445](406786 call _size _mt[243] this[304460]))
    unknown call_tmp[747450] "expr temp" "maybe param" "maybe type" "temp"
    (747453 'move' call_tmp[747450](303959 call > call_tmp[747445] 0))
    unknown call_tmp[747455] "expr temp" "maybe param" "maybe type" "temp"
    (747458 'move' call_tmp[747455](303972 call _cond_test call_tmp[747450]))
    if call_tmp[747455]
    {
      unknown call_tmp[747464] "expr temp" "maybe param" "maybe type" "temp"
      (747467 'move' call_tmp[747464](406796 call _size _mt[243] this[304460]))
      unknown call_tmp[747469] "expr temp" "maybe param" "maybe type" "temp"
      (747472 'move' call_tmp[747469](303965 call - call_tmp[747464] 1))
      unknown call_tmp[747474] "expr temp" "maybe param" "maybe type" "temp"
      (747477 'move' call_tmp[747474](303968 call(406791 call (partial) _getRef _mt[243] this[304460]) call_tmp[747469]))
      (303969 call <~> ch[303882] call_tmp[747474])
    }
    (303979 call <~> ch[303882] "]")
    (491539 'end of statement')
    (303984 call(406801 call (partial) _leave _mt[243] this[304460]))
    (539577 return _void[55])
  }
  function list[304222](?).isEmpty[303990](arg _mt[304466]:_MT[238], const arg this[304464]:list[304222](?)) : _unknown[51] "method" "primary method"
  {
    unknown ret[539581] "RVV" "temp"
    (303995 call(406805 call (partial) _enter _mt[243] this[304464]))
    (491541 'end of statement')
    unknown call_tmp[747485] "expr temp" "maybe param" "maybe type" "temp"
    (747488 'move' call_tmp[747485](406810 call _size _mt[243] this[304464]))
    unknown call_tmp[747490] "maybe param" "maybe type" "temp"
    (747493 'move' call_tmp[747490](304000 call == call_tmp[747485] 0))
    unknown result[304002] "dead at end of block" "insert auto destroy"
    (550096 'init var' result[304002] call_tmp[747490])
    (304005 'end of statement')
    (304008 call(406814 call (partial) _leave _mt[243] this[304464]))
    (491542 'end of statement')
    (539587 'move' ret[539581](539586 'coerce' result[304002] bool[10]))
    gotoReturn _end_isEmpty[539579] _end_isEmpty[539579]
    (491543 'end of statement' result[304002])
    label _end_isEmpty[539579]
    (539583 return ret[539581])
  }
  { scopeless type
    bool[10]
  }
  function list[304222](?).size[304018](arg _mt[304470]:_MT[238], const arg this[304468]:list[304222](?)) : _unknown[51] "inline" "method" "primary method" "no parens"
  {
    unknown ret[539593] "RVV" "temp"
    unknown result[304021] "dead at end of block" "insert auto destroy"
    (550098 'init var' result[304021] 0)
    (304024 'end of statement')
    const tmp[304044] "const" "temp"
    unknown call_tmp[747497] "expr temp" "maybe param" "maybe type" "temp"
    (747500 'move' call_tmp[747497](304041 '_wide_get_locale' this[304468]))
    (304046 'move' tmp[304044](304042 'deref' call_tmp[747497]))
    {
      {
        (304029 call(406820 call (partial) _enter _mt[243] this[304468]))
        (491545 'end of statement')
        unknown call_tmp[747506] "expr temp" "maybe param" "maybe type" "temp"
        (747509 'move' call_tmp[747506](406826 call _size _mt[243] this[304468]))
        (304034 call = result[304021] call_tmp[747506])
        (491546 'end of statement' result[304021])
        (304039 call(406830 call (partial) _leave _mt[243] this[304468]))
      }
      (304049 'on block' 0 tmp[304044])
    }
    (539598 'move' ret[539593](539597 'deref' result[304021]))
    gotoReturn _end_size[539591] _end_size[539591]
    (491549 'end of statement' result[304021])
    label _end_size[539591]
    (539595 return ret[539593])
  }
  function list[304222](?).indices[304059](arg _mt[304474]:_MT[238], arg this[304472]:list[304222](?)) : _unknown[51] "method" "primary method" "no parens"
  {
    unknown ret[539604] "RVV" "temp"
    unknown call_tmp[747515] "expr temp" "maybe param" "maybe type" "temp"
    (747518 'move' call_tmp[747515](304063 call size _mt[243] this[304472]))
    unknown call_tmp[747520] "expr temp" "maybe param" "maybe type" "temp"
    (747523 'move' call_tmp[747520](304067 call - call_tmp[747515] 1))
    unknown call_tmp[747525] "expr temp" "maybe param" "maybe type" "temp"
    (747528 'move' call_tmp[747525](304069 call chpl_build_bounded_range 0 call_tmp[747520]))
    (539609 'move' ret[539604](539608 'deref' call_tmp[747525]))
    (539606 return ret[539604])
  }
  function list[304222](?).toArray[304078](arg _mt[304478]:_MT[238], const arg this[304476]:list[304222](?)) : _unknown[51] "method" "primary method"
  {
    unknown ret[539613] "RVV" "temp"
    unknown tmp[435196] "maybe param" "temp"
    unknown call_tmp[747532] "expr temp" "maybe param" "maybe type" "temp"
    (747535 'move' call_tmp[747532](406841 call eltType _mt[243] this[304476]))
    (435207 'move' tmp[435196](304087 call isNonNilableClass call_tmp[747532]))
    unknown call_tmp[747537] "expr temp" "maybe param" "maybe type" "temp"
    (747540 'move' call_tmp[747537](435209 call _cond_invalid tmp[435196]))
    if call_tmp[747537]
    {
      (435212 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[581491] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[581492] "maybe param" "temp"
    unknown call_tmp[747542] "expr temp" "maybe param" "maybe type" "temp"
    (747545 'move' call_tmp[747542](435197 call isTrue tmp[435196]))
    (581497 'move' tmp[581492](581495 call _cond_test call_tmp[747542]))
    if tmp[581492]
    {
      unknown tmp[581499] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[747549] "expr temp" "maybe param" "maybe type" "temp"
      (747552 'move' call_tmp[747549](406846 call eltType _mt[243] this[304476]))
      unknown call_tmp[747554] "expr temp" "maybe param" "maybe type" "temp"
      (747557 'move' call_tmp[747554](304091 call isOwnedClass call_tmp[747549]))
      (581501 'move' tmp[581499](435200 call isTrue call_tmp[747554]))
      (581506 'move' tmp[581491](581503 '_paramFoldLogical' tmp[581492] tmp[581499]))
    }
    {
      (581511 'move' tmp[581491](581508 '_paramFoldLogical' tmp[581492] 0))
    }
    unknown call_tmp[747559] "expr temp" "maybe param" "maybe type" "temp"
    (747562 'move' call_tmp[747559](304136 call _cond_test tmp[581491]))
    if call_tmp[747559]
    {
      unknown call_tmp[747566] "expr temp" "maybe param" "maybe type" "temp"
      (747569 'move' call_tmp[747566](406851 call eltType _mt[243] this[304476]))
      unknown call_tmp[747571] "expr temp" "maybe param" "maybe type" "temp"
      (747574 'move' call_tmp[747571](304132 call _cast string[26] call_tmp[747566]))
      (304134 call compilerError "toArray() method is not available on a 'list'" " with elements of a non-nilable owned type, here: " call_tmp[747571])
    }
    unknown result[304154] "dead at end of block" "insert auto destroy" "unsafe"
    unknown call_tmp[747576] "expr temp" "maybe param" "maybe type" "temp"
    (747579 'move' call_tmp[747576](304143 call chpl_build_low_bounded_range 0))
    unknown call_tmp[747583] "expr temp" "maybe param" "maybe type" "temp"
    (747586 'move' call_tmp[747583](406856 call _size _mt[243] this[304476]))
    unknown call_tmp[747588] "expr temp" "maybe param" "maybe type" "temp"
    (747591 'move' call_tmp[747588](304146 call # call_tmp[747576] call_tmp[747583]))
    unknown call_tmp[747593] "expr temp" "maybe param" "maybe type" "temp"
    (747596 'move' call_tmp[747593](304150 call chpl__ensureDomainExpr call_tmp[747588]))
    unknown call_tmp[747600] "expr temp" "maybe param" "maybe type" "temp"
    (747603 'move' call_tmp[747600](406861 call eltType _mt[243] this[304476]))
    unknown call_tmp[747605] "expr temp" "maybe param" "maybe type" "temp"
    (747608 'move' call_tmp[747605](304152 call chpl__buildArrayRuntimeType call_tmp[747593] call_tmp[747600]))
    (550100 'default init var' result[304154] call_tmp[747605])
    (304157 'end of statement')
    const tmp[304207] "const" "temp"
    unknown call_tmp[747610] "expr temp" "maybe param" "maybe type" "temp"
    (747613 'move' call_tmp[747610](304204 '_wide_get_locale' this[304476]))
    (304209 'move' tmp[304207](304205 'deref' call_tmp[747610]))
    {
      {
        (304161 call(406866 call (partial) _enter _mt[243] this[304476]))
        (491554 'end of statement')
        unknown tmp[304191] "dead at end of block" "insert auto destroy"
        function chpl__loopexpr_iter10[583257](arg iterator[583259]:_any[178](?), arg this[583395]:list[304222](?)) : _unknown[51] "iterator fn"
        {
          unknown ret[583406] "RVV" "temp"
          {
            unknown _indexOfInterest[583264] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[583265] "expr temp" "temp"
            (583274 'move' _iterator[583265](583272 call _getIterator iterator[583259]))
            Defer
            {
              {
                (583288 call _freeIterator _iterator[583265])
              }
            }
            { scopeless type
              (583279 'move' _indexOfInterest[583264](583276 call iteratorIndex _iterator[583265]))
            }
            ForLoop[583266] for-expr
            {
              unknown i[304189] "index var" "insert auto destroy" "no doc"
              (583399 'end of statement')
              (583283 'move' i[304189] _indexOfInterest[583264])
              (583400 'end of statement' i[304189])
              {
                {
                  unknown yret[583410] "YVV" "temp"
                  unknown call_tmp[583419] "expr temp" "maybe param" "maybe type" "temp"
                  (583422 'move' call_tmp[583419](304186 call(406886 call (partial) _getRef _mt[243] this[583395]) i[304189]))
                  (583413 'move' yret[583410](583412 'deref' call_tmp[583419]))
                  (583415 yield yret[583410])
                  (583402 'end of statement' i[304189])
                }
              }
              label _continueLabel[583269]
              _indexOfInterest[583264]
              _iterator[583265]
            }
            label _breakLabel[583270]
          }
          (583408 return ret[583406])
        }
        function chpl__loopexpr_iter10[583295](param arg tag[583299]:iterKind[453], arg iterator[583302]:_any[178](?), arg this[583323]:list[304222](?)) : _unknown[51] "fn returns iterator"
        {
          unknown ret[583449] "RVV" "temp"
          const _leaderIterator[583314] "const" "expr temp" "temp"
          (583319 'move' _leaderIterator[583314](583316 call _toLeader iterator[583302]))
          (583454 'move' ret[583449](583453 'deref' _leaderIterator[583314]))
          (583451 return ret[583449])
        }
        where {
          unknown tmp[583425] "maybe param" "temp"
          (583436 'move' tmp[583425](583304 call == tag[583299] leader[447]))
          unknown call_tmp[583483] "expr temp" "maybe param" "maybe type" "temp"
          (583486 'move' call_tmp[583483](583438 call _cond_invalid tmp[583425]))
          if call_tmp[583483]
          {
            (583441 call compilerError "cannot promote short-circuiting && operator")
          }
          unknown tmp[583456] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[583457] "maybe param" "temp"
          unknown call_tmp[583488] "expr temp" "maybe param" "maybe type" "temp"
          (583491 'move' call_tmp[583488](583426 call isTrue tmp[583425]))
          (583462 'move' tmp[583457](583460 call _cond_test call_tmp[583488]))
          if tmp[583457]
          {
            unknown tmp[583464] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[583493] "expr temp" "maybe param" "maybe type" "temp"
            (583496 'move' call_tmp[583493](583308 'call resolves' "_toLeader" iterator[583302]))
            (583466 'move' tmp[583464](583429 call isTrue call_tmp[583493]))
            (583471 'move' tmp[583456](583468 '_paramFoldLogical' tmp[583457] tmp[583464]))
          }
          {
            (583476 'move' tmp[583456](583473 '_paramFoldLogical' tmp[583457] 0))
          }
          (748489 call chpl_statementLevelSymbol tmp[583456])
        }
        function chpl__loopexpr_iter10[583325](param arg tag[583329]:iterKind[453], arg followThis[583332]:_any[178](?), arg iterator[583334]:_any[178](?), arg this[583393]:list[304222](?)) : _unknown[51] "iterator fn"
        {
          unknown ret[583507] "RVV" "temp"
          const _followerIterator[583341] "const" "expr temp" "temp"
          (583347 'move' _followerIterator[583341](583343 call _toFollower iterator[583334] followThis[583332]))
          {
            unknown _indexOfInterest[583362] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[583363] "expr temp" "temp"
            (583372 'move' _iterator[583363](583370 call _getIterator _followerIterator[583341]))
            Defer
            {
              {
                (583386 call _freeIterator _iterator[583363])
              }
            }
            { scopeless type
              (583377 'move' _indexOfInterest[583362](583374 call iteratorIndex _iterator[583363]))
            }
            ForLoop[583364] lowered-forall for-expr
            {
              unknown i[583349] "index var" "insert auto destroy" "no doc"
              (583500 'end of statement')
              (583381 'move' i[583349] _indexOfInterest[583362])
              (583501 'end of statement' i[583349])
              {
                {
                  unknown yret[583511] "YVV" "temp"
                  unknown call_tmp[583520] "expr temp" "maybe param" "maybe type" "temp"
                  (583523 'move' call_tmp[583520](583358 call(583355 call (partial) _getRef _mt[243] this[583393]) i[583349]))
                  (583514 'move' yret[583511](583513 'deref' call_tmp[583520]))
                  (583516 yield yret[583511])
                  (583503 'end of statement' i[583349])
                }
              }
              label _continueLabel[583367]
              _indexOfInterest[583362]
              _iterator[583363]
            }
            label _breakLabel[583368]
          }
          (583509 return ret[583507])
        }
        where {
          (583337 call == tag[583329] follower[449])
        }
        function chpl__forallexpr10[583237](arg iterExpr[583240]:_any[178](?), arg this[583244]:list[304222](?)) : _unknown[51] "compiler generated" "compiler nested function" "maybe array type" "fn returns iterator"
        {
          unknown ret[583528] "RVV" "temp"
          unknown _iterator[583247] "expr temp" "maybe ref" "temp"
          (583249 'move' _iterator[583247] iterExpr[583240])
          unknown call_tmp[583535] "expr temp" "maybe param" "maybe type" "temp"
          (583538 'move' call_tmp[583535](583252 call chpl__loopexpr_iter10 _iterator[583247] this[583244]))
          (583533 'move' ret[583528](583532 'deref' call_tmp[583535]))
          (583530 return ret[583528])
        }
        unknown call_tmp[583540] "expr temp" "maybe param" "maybe type" "temp"
        (583543 'move' call_tmp[583540](304178 call chpl_build_low_bounded_range 0))
        unknown call_tmp[583547] "expr temp" "maybe param" "maybe type" "temp"
        (583550 'move' call_tmp[583547](406882 call _size _mt[243] this[304476]))
        unknown call_tmp[583552] "expr temp" "maybe param" "maybe type" "temp"
        (583555 'move' call_tmp[583552](304181 call # call_tmp[583540] call_tmp[583547]))
        unknown call_tmp[583557] "maybe param" "maybe type" "temp"
        (583560 'move' call_tmp[583557](583242 call chpl__forallexpr10 call_tmp[583552] this[304476]))
        (583564 'iterator record set shape' call_tmp[583557] call_tmp[583552] 0)
        unknown call_tmp[747617] "expr temp" "maybe param" "maybe type" "temp"
        (747620 'move' call_tmp[747617](304165 call chpl_build_low_bounded_range 0))
        unknown call_tmp[747624] "expr temp" "maybe param" "maybe type" "temp"
        (747627 'move' call_tmp[747624](406871 call _size _mt[243] this[304476]))
        unknown call_tmp[747629] "expr temp" "maybe param" "maybe type" "temp"
        (747632 'move' call_tmp[747629](304168 call # call_tmp[747617] call_tmp[747624]))
        unknown call_tmp[747634] "expr temp" "maybe param" "maybe type" "temp"
        (747637 'move' call_tmp[747634](304172 call chpl__ensureDomainExpr call_tmp[747629]))
        unknown call_tmp[747641] "expr temp" "maybe param" "maybe type" "temp"
        (747644 'move' call_tmp[747641](406876 call eltType _mt[243] this[304476]))
        unknown call_tmp[747646] "maybe param" "maybe type" "temp"
        (747649 'move' call_tmp[747646](304174 call chpl__buildArrayRuntimeType call_tmp[747634] call_tmp[747641]))
        (550102 'init var' tmp[304191] call_tmp[583557] call_tmp[747646])
        (304194 'end of statement')
        (304197 call = result[304154] tmp[304191])
        (491555 'end of statement' result[304154] tmp[304191])
        (304202 call(406893 call (partial) _leave _mt[243] this[304476]))
      }
      (304212 'on block' 0 tmp[304207])
    }
    unknown call_tmp[747655] "expr temp" "maybe param" "maybe type" "temp"
    (747658 'move' call_tmp[747655](539619 call eltType _mt[243] this[304476]))
    (539622 call chpl__checkEltTypeMatch result[304154] call_tmp[747655])
    (539624 'move' ret[539613] result[304154])
    gotoReturn _end_toArray[539611] _end_toArray[539611]
    (491559 'end of statement' result[304154])
    label _end_toArray[539611]
    (539615 return ret[539613])
  }
  function list[304222](?).eltType[930204](arg _mt[930206]:_MT[238], arg this[930208]:list[304222](?)) type : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[930227] "RVV" "temp" "type variable"
    unknown call_tmp[930241] "expr temp" "maybe param" "maybe type" "temp"
    (930244 'move' call_tmp[930241](930213 'is bound' this[930208] c"eltType"))
    if call_tmp[930241]
    {
      unknown call_tmp[930246] "expr temp" "maybe param" "maybe type" "temp"
      (930249 'move' call_tmp[930246](930212 '.v' this[930208] c"eltType"))
      (930232 'move' ret[930227](930231 'deref' call_tmp[930246]))
      gotoReturn _end_eltType[930225] _end_eltType[930225]
    }
    {
      (930237 'move' ret[930227](930236 'deref' _uninstantiated[258]))
      gotoReturn _end_eltType[930225] _end_eltType[930225]
    }
    label _end_eltType[930225]
    (930229 return ret[930227])
  }
  function list[304222](?).eltType[930251](arg _mt[930253]:_MT[238], arg this[930255]:list[304222](?)) type : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[930274] "RVV" "temp" "type variable"
    unknown call_tmp[930288] "expr temp" "maybe param" "maybe type" "temp"
    (930291 'move' call_tmp[930288](930260 'is bound' this[930255] c"eltType"))
    if call_tmp[930288]
    {
      unknown call_tmp[930293] "expr temp" "maybe param" "maybe type" "temp"
      (930296 'move' call_tmp[930293](930259 '.v' this[930255] c"eltType"))
      (930279 'move' ret[930274](930278 'deref' call_tmp[930293]))
      gotoReturn _end_eltType[930272] _end_eltType[930272]
    }
    {
      (930284 'move' ret[930274](930283 'deref' _uninstantiated[258]))
      gotoReturn _end_eltType[930272] _end_eltType[930272]
    }
    label _end_eltType[930272]
    (930276 return ret[930274])
  }
  function list[304222](?).parSafe[930298](arg _mt[930300]:_MT[238], arg this[930302]:list[304222](?)) param : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[930321] "RVV" "param" "temp"
    unknown call_tmp[930335] "expr temp" "maybe param" "maybe type" "temp"
    (930338 'move' call_tmp[930335](930307 'is bound' this[930302] c"parSafe"))
    if call_tmp[930335]
    {
      unknown call_tmp[930340] "expr temp" "maybe param" "maybe type" "temp"
      (930343 'move' call_tmp[930340](930306 '.' this[930302] c"parSafe"))
      (930326 'move' ret[930321](930325 'deref' call_tmp[930340]))
      gotoReturn _end_parSafe[930319] _end_parSafe[930319]
    }
    {
      (930331 'move' ret[930321](930330 'deref' ?[260]))
      gotoReturn _end_parSafe[930319] _end_parSafe[930319]
    }
    label _end_parSafe[930319]
    (930323 return ret[930321])
  }
  function list[304222](?).parSafe[930345](arg _mt[930347]:_MT[238], arg this[930349]:list[304222](?)) param : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[930368] "RVV" "param" "temp"
    unknown call_tmp[930382] "expr temp" "maybe param" "maybe type" "temp"
    (930385 'move' call_tmp[930382](930354 'is bound' this[930349] c"parSafe"))
    if call_tmp[930382]
    {
      unknown call_tmp[930387] "expr temp" "maybe param" "maybe type" "temp"
      (930390 'move' call_tmp[930387](930353 '.' this[930349] c"parSafe"))
      (930373 'move' ret[930368](930372 'deref' call_tmp[930387]))
      gotoReturn _end_parSafe[930366] _end_parSafe[930366]
    }
    {
      (930378 'move' ret[930368](930377 'deref' ?[260]))
      gotoReturn _end_parSafe[930366] _end_parSafe[930366]
    }
    label _end_parSafe[930366]
    (930370 return ret[930368])
  }
  function list[304222](?)._size[930392](arg _mt[930394]:_MT[238], ref arg this[930396]:list[304222](?)) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[930406] "RVV" "temp"
    unknown call_tmp[930413] "expr temp" "maybe param" "maybe type" "temp"
    (930416 'move' call_tmp[930413](930400 '.' this[930396] c"_size"))
    (930411 'move' ret[930406](930410 'addr of' call_tmp[930413]))
    (930408 return ret[930406])
  }
  function list[304222](?)._lock$[930418](arg _mt[930420]:_MT[238], ref arg this[930422]:list[304222](?)) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[930432] "RVV" "temp"
    unknown call_tmp[930439] "expr temp" "maybe param" "maybe type" "temp"
    (930442 'move' call_tmp[930439](930426 '.' this[930422] c"_lock$"))
    (930437 'move' ret[930432](930436 'addr of' call_tmp[930439]))
    (930434 return ret[930432])
  }
  function list[304222](?)._arrays[930444](arg _mt[930446]:_MT[238], ref arg this[930448]:list[304222](?)) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[930458] "RVV" "temp"
    unknown call_tmp[930465] "expr temp" "maybe param" "maybe type" "temp"
    (930468 'move' call_tmp[930465](930452 '.' this[930448] c"_arrays"))
    (930463 'move' ret[930458](930462 'addr of' call_tmp[930465]))
    (930460 return ret[930458])
  }
  function list[304222](?)._arrayCapacity[930470](arg _mt[930472]:_MT[238], ref arg this[930474]:list[304222](?)) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[930484] "RVV" "temp"
    unknown call_tmp[930491] "expr temp" "maybe param" "maybe type" "temp"
    (930494 'move' call_tmp[930491](930478 '.' this[930474] c"_arrayCapacity"))
    (930489 'move' ret[930484](930488 'addr of' call_tmp[930491]))
    (930486 return ret[930484])
  }
  function list[304222](?)._totalCapacity[930496](arg _mt[930498]:_MT[238], ref arg this[930500]:list[304222](?)) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[930510] "RVV" "temp"
    unknown call_tmp[930517] "expr temp" "maybe param" "maybe type" "temp"
    (930520 'move' call_tmp[930517](930504 '.' this[930500] c"_totalCapacity"))
    (930515 'move' ret[930510](930514 'addr of' call_tmp[930517]))
    (930512 return ret[930510])
  }
  function list[304222](?)._dummyFieldToForceBorrowChecking[930522](arg _mt[930524]:_MT[238], ref arg this[930526]:list[304222](?)) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[930536] "RVV" "temp"
    unknown call_tmp[930543] "expr temp" "maybe param" "maybe type" "temp"
    (930546 'move' call_tmp[930543](930530 '.' this[930526] c"_dummyFieldToForceBorrowChecking"))
    (930541 'move' ret[930536](930540 'addr of' call_tmp[930543]))
    (930538 return ret[930536])
  }
  function list[304222](?).writeThis[930548](arg _mt[930552]:_MT[238], arg this[930550]:list[304222](?), arg f[930551]:_any[178](?)) : void[4] throws "compiler generated" "inline" "last resort" "method" "primary method"
  {
    (930561 call(930557 call (partial) readWriteThis _mt[243] this[930550]) f[930551])
    (930564 return _void[55])
  }
  function list[304222](?).readThis[930568](arg _mt[930572]:_MT[238], arg this[930570]:list[304222](?), arg f[930571]:_any[178](?)) : void[4] throws "compiler generated" "inline" "last resort" "method" "primary method"
  {
    (930580 call(930576 call (partial) readWriteThis _mt[243] this[930570]) f[930571])
    (930584 return _void[55])
  }
  function chpl_fields_are_comparable[930600](arg _arg1[930602]:list[304222](?), arg _arg2[930603]:list[304222](?)) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[930682]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[930689] "expr temp" "maybe param" "maybe type" "temp"
    (930692 'move' call_tmp[930689](930606 call parSafe _mt[243] _arg1[930602]))
    unknown call_tmp[930694] "expr temp" "maybe param" "maybe type" "temp"
    (930697 'move' call_tmp[930694](930610 call parSafe _mt[243] _arg2[930603]))
    unknown call_tmp[930699] "expr temp" "maybe param" "maybe type" "temp"
    (930702 'move' call_tmp[930699](930614 'call resolves' c"<" call_tmp[930689] call_tmp[930694]))
    unknown call_tmp[930704] "expr temp" "maybe param" "maybe type" "temp"
    (930707 'move' call_tmp[930704](930616 call _size _mt[243] _arg1[930602]))
    unknown call_tmp[930709] "expr temp" "maybe param" "maybe type" "temp"
    (930712 'move' call_tmp[930709](930620 call _size _mt[243] _arg2[930603]))
    unknown call_tmp[930714] "expr temp" "maybe param" "maybe type" "temp"
    (930717 'move' call_tmp[930714](930624 'call resolves' c"<" call_tmp[930704] call_tmp[930709]))
    unknown call_tmp[930719] "expr temp" "maybe param" "maybe type" "temp"
    (930722 'move' call_tmp[930719](930626 call _lock$ _mt[243] _arg1[930602]))
    unknown call_tmp[930724] "expr temp" "maybe param" "maybe type" "temp"
    (930727 'move' call_tmp[930724](930630 call _lock$ _mt[243] _arg2[930603]))
    unknown call_tmp[930729] "expr temp" "maybe param" "maybe type" "temp"
    (930732 'move' call_tmp[930729](930634 'call resolves' c"<" call_tmp[930719] call_tmp[930724]))
    unknown call_tmp[930734] "expr temp" "maybe param" "maybe type" "temp"
    (930737 'move' call_tmp[930734](930636 call _arrays _mt[243] _arg1[930602]))
    unknown call_tmp[930739] "expr temp" "maybe param" "maybe type" "temp"
    (930742 'move' call_tmp[930739](930640 call _arrays _mt[243] _arg2[930603]))
    unknown call_tmp[930744] "expr temp" "maybe param" "maybe type" "temp"
    (930747 'move' call_tmp[930744](930644 'call resolves' c"<" call_tmp[930734] call_tmp[930739]))
    unknown call_tmp[930749] "expr temp" "maybe param" "maybe type" "temp"
    (930752 'move' call_tmp[930749](930646 call _arrayCapacity _mt[243] _arg1[930602]))
    unknown call_tmp[930754] "expr temp" "maybe param" "maybe type" "temp"
    (930757 'move' call_tmp[930754](930650 call _arrayCapacity _mt[243] _arg2[930603]))
    unknown call_tmp[930759] "expr temp" "maybe param" "maybe type" "temp"
    (930762 'move' call_tmp[930759](930654 'call resolves' c"<" call_tmp[930749] call_tmp[930754]))
    unknown call_tmp[930764] "expr temp" "maybe param" "maybe type" "temp"
    (930767 'move' call_tmp[930764](930656 call _totalCapacity _mt[243] _arg1[930602]))
    unknown call_tmp[930769] "expr temp" "maybe param" "maybe type" "temp"
    (930772 'move' call_tmp[930769](930660 call _totalCapacity _mt[243] _arg2[930603]))
    unknown call_tmp[930774] "expr temp" "maybe param" "maybe type" "temp"
    (930777 'move' call_tmp[930774](930664 'call resolves' c"<" call_tmp[930764] call_tmp[930769]))
    unknown call_tmp[930779] "expr temp" "maybe param" "maybe type" "temp"
    (930782 'move' call_tmp[930779](930666 call _dummyFieldToForceBorrowChecking _mt[243] _arg1[930602]))
    unknown call_tmp[930784] "expr temp" "maybe param" "maybe type" "temp"
    (930787 'move' call_tmp[930784](930670 call _dummyFieldToForceBorrowChecking _mt[243] _arg2[930603]))
    unknown call_tmp[930789] "expr temp" "maybe param" "maybe type" "temp"
    (930792 'move' call_tmp[930789](930674 'call resolves' c"<" call_tmp[930779] call_tmp[930784]))
    unknown call_tmp[930794] "expr temp" "maybe param" "maybe type" "temp"
    (930797 'move' call_tmp[930794](930676 '&' call_tmp[930699] call_tmp[930714] call_tmp[930729] call_tmp[930744] call_tmp[930759] call_tmp[930774] call_tmp[930789]))
    (930687 'move' ret[930682](930686 'deref' call_tmp[930794]))
    (930684 return ret[930682])
  }
  function <[930588](arg _arg1[930590]:list[304222](?), arg _arg2[930591]:list[304222](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[931021]:bool[10] "RVV" "temp"
    unknown call_tmp[931098] "expr temp" "maybe param" "maybe type" "temp"
    (931101 'move' call_tmp[931098](930805 call parSafe _mt[243] _arg1[930590]))
    unknown call_tmp[931103] "expr temp" "maybe param" "maybe type" "temp"
    (931106 'move' call_tmp[931103](930809 call parSafe _mt[243] _arg2[930591]))
    unknown call_tmp[931108] "expr temp" "maybe param" "maybe type" "temp"
    (931111 'move' call_tmp[931108](930813 call < call_tmp[931098] call_tmp[931103]))
    if call_tmp[931108]
    {
      (931026 'move' ret[931021](931025 'deref' 1))
      gotoReturn _end_<[931019] _end_<[931019]
    }
    unknown call_tmp[931113] "expr temp" "maybe param" "maybe type" "temp"
    (931116 'move' call_tmp[931113](930819 call parSafe _mt[243] _arg1[930590]))
    unknown call_tmp[931118] "expr temp" "maybe param" "maybe type" "temp"
    (931121 'move' call_tmp[931118](930823 call parSafe _mt[243] _arg2[930591]))
    unknown call_tmp[931123] "expr temp" "maybe param" "maybe type" "temp"
    (931126 'move' call_tmp[931123](930827 call > call_tmp[931113] call_tmp[931118]))
    if call_tmp[931123]
    {
      (931031 'move' ret[931021](931030 'deref' 0))
      gotoReturn _end_<[931019] _end_<[931019]
    }
    unknown call_tmp[931128] "expr temp" "maybe param" "maybe type" "temp"
    (931131 'move' call_tmp[931128](930833 call _size _mt[243] _arg1[930590]))
    unknown call_tmp[931133] "expr temp" "maybe param" "maybe type" "temp"
    (931136 'move' call_tmp[931133](930837 call _size _mt[243] _arg2[930591]))
    unknown call_tmp[931138] "expr temp" "maybe param" "maybe type" "temp"
    (931141 'move' call_tmp[931138](930841 call < call_tmp[931128] call_tmp[931133]))
    if call_tmp[931138]
    {
      (931036 'move' ret[931021](931035 'deref' 1))
      gotoReturn _end_<[931019] _end_<[931019]
    }
    unknown call_tmp[931143] "expr temp" "maybe param" "maybe type" "temp"
    (931146 'move' call_tmp[931143](930847 call _size _mt[243] _arg1[930590]))
    unknown call_tmp[931148] "expr temp" "maybe param" "maybe type" "temp"
    (931151 'move' call_tmp[931148](930851 call _size _mt[243] _arg2[930591]))
    unknown call_tmp[931153] "expr temp" "maybe param" "maybe type" "temp"
    (931156 'move' call_tmp[931153](930855 call > call_tmp[931143] call_tmp[931148]))
    if call_tmp[931153]
    {
      (931041 'move' ret[931021](931040 'deref' 0))
      gotoReturn _end_<[931019] _end_<[931019]
    }
    unknown call_tmp[931158] "expr temp" "maybe param" "maybe type" "temp"
    (931161 'move' call_tmp[931158](930861 call _lock$ _mt[243] _arg1[930590]))
    unknown call_tmp[931163] "expr temp" "maybe param" "maybe type" "temp"
    (931166 'move' call_tmp[931163](930865 call _lock$ _mt[243] _arg2[930591]))
    unknown call_tmp[931168] "expr temp" "maybe param" "maybe type" "temp"
    (931171 'move' call_tmp[931168](930869 call < call_tmp[931158] call_tmp[931163]))
    if call_tmp[931168]
    {
      (931046 'move' ret[931021](931045 'deref' 1))
      gotoReturn _end_<[931019] _end_<[931019]
    }
    unknown call_tmp[931173] "expr temp" "maybe param" "maybe type" "temp"
    (931176 'move' call_tmp[931173](930875 call _lock$ _mt[243] _arg1[930590]))
    unknown call_tmp[931178] "expr temp" "maybe param" "maybe type" "temp"
    (931181 'move' call_tmp[931178](930879 call _lock$ _mt[243] _arg2[930591]))
    unknown call_tmp[931183] "expr temp" "maybe param" "maybe type" "temp"
    (931186 'move' call_tmp[931183](930883 call > call_tmp[931173] call_tmp[931178]))
    if call_tmp[931183]
    {
      (931051 'move' ret[931021](931050 'deref' 0))
      gotoReturn _end_<[931019] _end_<[931019]
    }
    unknown call_tmp[931188] "expr temp" "maybe param" "maybe type" "temp"
    (931191 'move' call_tmp[931188](930889 call _arrays _mt[243] _arg1[930590]))
    unknown call_tmp[931193] "expr temp" "maybe param" "maybe type" "temp"
    (931196 'move' call_tmp[931193](930893 call _arrays _mt[243] _arg2[930591]))
    unknown call_tmp[931198] "expr temp" "maybe param" "maybe type" "temp"
    (931201 'move' call_tmp[931198](930897 call < call_tmp[931188] call_tmp[931193]))
    if call_tmp[931198]
    {
      (931056 'move' ret[931021](931055 'deref' 1))
      gotoReturn _end_<[931019] _end_<[931019]
    }
    unknown call_tmp[931203] "expr temp" "maybe param" "maybe type" "temp"
    (931206 'move' call_tmp[931203](930903 call _arrays _mt[243] _arg1[930590]))
    unknown call_tmp[931208] "expr temp" "maybe param" "maybe type" "temp"
    (931211 'move' call_tmp[931208](930907 call _arrays _mt[243] _arg2[930591]))
    unknown call_tmp[931213] "expr temp" "maybe param" "maybe type" "temp"
    (931216 'move' call_tmp[931213](930911 call > call_tmp[931203] call_tmp[931208]))
    if call_tmp[931213]
    {
      (931061 'move' ret[931021](931060 'deref' 0))
      gotoReturn _end_<[931019] _end_<[931019]
    }
    unknown call_tmp[931218] "expr temp" "maybe param" "maybe type" "temp"
    (931221 'move' call_tmp[931218](930917 call _arrayCapacity _mt[243] _arg1[930590]))
    unknown call_tmp[931223] "expr temp" "maybe param" "maybe type" "temp"
    (931226 'move' call_tmp[931223](930921 call _arrayCapacity _mt[243] _arg2[930591]))
    unknown call_tmp[931228] "expr temp" "maybe param" "maybe type" "temp"
    (931231 'move' call_tmp[931228](930925 call < call_tmp[931218] call_tmp[931223]))
    if call_tmp[931228]
    {
      (931066 'move' ret[931021](931065 'deref' 1))
      gotoReturn _end_<[931019] _end_<[931019]
    }
    unknown call_tmp[931233] "expr temp" "maybe param" "maybe type" "temp"
    (931236 'move' call_tmp[931233](930931 call _arrayCapacity _mt[243] _arg1[930590]))
    unknown call_tmp[931238] "expr temp" "maybe param" "maybe type" "temp"
    (931241 'move' call_tmp[931238](930935 call _arrayCapacity _mt[243] _arg2[930591]))
    unknown call_tmp[931243] "expr temp" "maybe param" "maybe type" "temp"
    (931246 'move' call_tmp[931243](930939 call > call_tmp[931233] call_tmp[931238]))
    if call_tmp[931243]
    {
      (931071 'move' ret[931021](931070 'deref' 0))
      gotoReturn _end_<[931019] _end_<[931019]
    }
    unknown call_tmp[931248] "expr temp" "maybe param" "maybe type" "temp"
    (931251 'move' call_tmp[931248](930945 call _totalCapacity _mt[243] _arg1[930590]))
    unknown call_tmp[931253] "expr temp" "maybe param" "maybe type" "temp"
    (931256 'move' call_tmp[931253](930949 call _totalCapacity _mt[243] _arg2[930591]))
    unknown call_tmp[931258] "expr temp" "maybe param" "maybe type" "temp"
    (931261 'move' call_tmp[931258](930953 call < call_tmp[931248] call_tmp[931253]))
    if call_tmp[931258]
    {
      (931076 'move' ret[931021](931075 'deref' 1))
      gotoReturn _end_<[931019] _end_<[931019]
    }
    unknown call_tmp[931263] "expr temp" "maybe param" "maybe type" "temp"
    (931266 'move' call_tmp[931263](930959 call _totalCapacity _mt[243] _arg1[930590]))
    unknown call_tmp[931268] "expr temp" "maybe param" "maybe type" "temp"
    (931271 'move' call_tmp[931268](930963 call _totalCapacity _mt[243] _arg2[930591]))
    unknown call_tmp[931273] "expr temp" "maybe param" "maybe type" "temp"
    (931276 'move' call_tmp[931273](930967 call > call_tmp[931263] call_tmp[931268]))
    if call_tmp[931273]
    {
      (931081 'move' ret[931021](931080 'deref' 0))
      gotoReturn _end_<[931019] _end_<[931019]
    }
    unknown call_tmp[931278] "expr temp" "maybe param" "maybe type" "temp"
    (931281 'move' call_tmp[931278](930973 call _dummyFieldToForceBorrowChecking _mt[243] _arg1[930590]))
    unknown call_tmp[931283] "expr temp" "maybe param" "maybe type" "temp"
    (931286 'move' call_tmp[931283](930977 call _dummyFieldToForceBorrowChecking _mt[243] _arg2[930591]))
    unknown call_tmp[931288] "expr temp" "maybe param" "maybe type" "temp"
    (931291 'move' call_tmp[931288](930981 call < call_tmp[931278] call_tmp[931283]))
    if call_tmp[931288]
    {
      (931086 'move' ret[931021](931085 'deref' 1))
      gotoReturn _end_<[931019] _end_<[931019]
    }
    unknown call_tmp[931293] "expr temp" "maybe param" "maybe type" "temp"
    (931296 'move' call_tmp[931293](930987 call _dummyFieldToForceBorrowChecking _mt[243] _arg1[930590]))
    unknown call_tmp[931298] "expr temp" "maybe param" "maybe type" "temp"
    (931301 'move' call_tmp[931298](930991 call _dummyFieldToForceBorrowChecking _mt[243] _arg2[930591]))
    unknown call_tmp[931303] "expr temp" "maybe param" "maybe type" "temp"
    (931306 'move' call_tmp[931303](930995 call > call_tmp[931293] call_tmp[931298]))
    if call_tmp[931303]
    {
      (931091 'move' ret[931021](931090 'deref' 0))
      gotoReturn _end_<[931019] _end_<[931019]
    }
    (931096 'move' ret[931021](931095 'deref' 0))
    label _end_<[931019]
    (931023 return ret[931021])
  }
  where {
    unknown call_tmp[931308] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (931311 'move' call_tmp[931308](930594 'typeof' _arg1[930590]))
    unknown call_tmp[931313] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (931316 'move' call_tmp[931313](930596 'typeof' _arg2[930591]))
    unknown call_tmp[931318] "expr temp" "maybe param" "maybe type" "temp"
    (931321 'move' call_tmp[931318](930598 call == call_tmp[931308] call_tmp[931313]))
    unknown call_tmp[931323] "expr temp" "maybe param" "maybe type" "temp"
    (931326 'move' call_tmp[931323](930799 call chpl_fields_are_comparable[930600] _arg1[930590] _arg2[930591]))
    (930803 '&' call_tmp[931318] call_tmp[931323])
  }
  function chpl_fields_are_comparable[931340](arg _arg1[931342]:list[304222](?), arg _arg2[931343]:list[304222](?)) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[931422]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[931429] "expr temp" "maybe param" "maybe type" "temp"
    (931432 'move' call_tmp[931429](931346 call parSafe _mt[243] _arg1[931342]))
    unknown call_tmp[931434] "expr temp" "maybe param" "maybe type" "temp"
    (931437 'move' call_tmp[931434](931350 call parSafe _mt[243] _arg2[931343]))
    unknown call_tmp[931439] "expr temp" "maybe param" "maybe type" "temp"
    (931442 'move' call_tmp[931439](931354 'call resolves' c"<=" call_tmp[931429] call_tmp[931434]))
    unknown call_tmp[931444] "expr temp" "maybe param" "maybe type" "temp"
    (931447 'move' call_tmp[931444](931356 call _size _mt[243] _arg1[931342]))
    unknown call_tmp[931449] "expr temp" "maybe param" "maybe type" "temp"
    (931452 'move' call_tmp[931449](931360 call _size _mt[243] _arg2[931343]))
    unknown call_tmp[931454] "expr temp" "maybe param" "maybe type" "temp"
    (931457 'move' call_tmp[931454](931364 'call resolves' c"<=" call_tmp[931444] call_tmp[931449]))
    unknown call_tmp[931459] "expr temp" "maybe param" "maybe type" "temp"
    (931462 'move' call_tmp[931459](931366 call _lock$ _mt[243] _arg1[931342]))
    unknown call_tmp[931464] "expr temp" "maybe param" "maybe type" "temp"
    (931467 'move' call_tmp[931464](931370 call _lock$ _mt[243] _arg2[931343]))
    unknown call_tmp[931469] "expr temp" "maybe param" "maybe type" "temp"
    (931472 'move' call_tmp[931469](931374 'call resolves' c"<=" call_tmp[931459] call_tmp[931464]))
    unknown call_tmp[931474] "expr temp" "maybe param" "maybe type" "temp"
    (931477 'move' call_tmp[931474](931376 call _arrays _mt[243] _arg1[931342]))
    unknown call_tmp[931479] "expr temp" "maybe param" "maybe type" "temp"
    (931482 'move' call_tmp[931479](931380 call _arrays _mt[243] _arg2[931343]))
    unknown call_tmp[931484] "expr temp" "maybe param" "maybe type" "temp"
    (931487 'move' call_tmp[931484](931384 'call resolves' c"<=" call_tmp[931474] call_tmp[931479]))
    unknown call_tmp[931489] "expr temp" "maybe param" "maybe type" "temp"
    (931492 'move' call_tmp[931489](931386 call _arrayCapacity _mt[243] _arg1[931342]))
    unknown call_tmp[931494] "expr temp" "maybe param" "maybe type" "temp"
    (931497 'move' call_tmp[931494](931390 call _arrayCapacity _mt[243] _arg2[931343]))
    unknown call_tmp[931499] "expr temp" "maybe param" "maybe type" "temp"
    (931502 'move' call_tmp[931499](931394 'call resolves' c"<=" call_tmp[931489] call_tmp[931494]))
    unknown call_tmp[931504] "expr temp" "maybe param" "maybe type" "temp"
    (931507 'move' call_tmp[931504](931396 call _totalCapacity _mt[243] _arg1[931342]))
    unknown call_tmp[931509] "expr temp" "maybe param" "maybe type" "temp"
    (931512 'move' call_tmp[931509](931400 call _totalCapacity _mt[243] _arg2[931343]))
    unknown call_tmp[931514] "expr temp" "maybe param" "maybe type" "temp"
    (931517 'move' call_tmp[931514](931404 'call resolves' c"<=" call_tmp[931504] call_tmp[931509]))
    unknown call_tmp[931519] "expr temp" "maybe param" "maybe type" "temp"
    (931522 'move' call_tmp[931519](931406 call _dummyFieldToForceBorrowChecking _mt[243] _arg1[931342]))
    unknown call_tmp[931524] "expr temp" "maybe param" "maybe type" "temp"
    (931527 'move' call_tmp[931524](931410 call _dummyFieldToForceBorrowChecking _mt[243] _arg2[931343]))
    unknown call_tmp[931529] "expr temp" "maybe param" "maybe type" "temp"
    (931532 'move' call_tmp[931529](931414 'call resolves' c"<=" call_tmp[931519] call_tmp[931524]))
    unknown call_tmp[931534] "expr temp" "maybe param" "maybe type" "temp"
    (931537 'move' call_tmp[931534](931416 '&' call_tmp[931439] call_tmp[931454] call_tmp[931469] call_tmp[931484] call_tmp[931499] call_tmp[931514] call_tmp[931529]))
    (931427 'move' ret[931422](931426 'deref' call_tmp[931534]))
    (931424 return ret[931422])
  }
  function <=[931328](arg _arg1[931330]:list[304222](?), arg _arg2[931331]:list[304222](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[931761]:bool[10] "RVV" "temp"
    unknown call_tmp[931838] "expr temp" "maybe param" "maybe type" "temp"
    (931841 'move' call_tmp[931838](931545 call parSafe _mt[243] _arg1[931330]))
    unknown call_tmp[931843] "expr temp" "maybe param" "maybe type" "temp"
    (931846 'move' call_tmp[931843](931549 call parSafe _mt[243] _arg2[931331]))
    unknown call_tmp[931848] "expr temp" "maybe param" "maybe type" "temp"
    (931851 'move' call_tmp[931848](931553 call < call_tmp[931838] call_tmp[931843]))
    if call_tmp[931848]
    {
      (931766 'move' ret[931761](931765 'deref' 1))
      gotoReturn _end_<=[931759] _end_<=[931759]
    }
    unknown call_tmp[931853] "expr temp" "maybe param" "maybe type" "temp"
    (931856 'move' call_tmp[931853](931559 call parSafe _mt[243] _arg1[931330]))
    unknown call_tmp[931858] "expr temp" "maybe param" "maybe type" "temp"
    (931861 'move' call_tmp[931858](931563 call parSafe _mt[243] _arg2[931331]))
    unknown call_tmp[931863] "expr temp" "maybe param" "maybe type" "temp"
    (931866 'move' call_tmp[931863](931567 call > call_tmp[931853] call_tmp[931858]))
    if call_tmp[931863]
    {
      (931771 'move' ret[931761](931770 'deref' 0))
      gotoReturn _end_<=[931759] _end_<=[931759]
    }
    unknown call_tmp[931868] "expr temp" "maybe param" "maybe type" "temp"
    (931871 'move' call_tmp[931868](931573 call _size _mt[243] _arg1[931330]))
    unknown call_tmp[931873] "expr temp" "maybe param" "maybe type" "temp"
    (931876 'move' call_tmp[931873](931577 call _size _mt[243] _arg2[931331]))
    unknown call_tmp[931878] "expr temp" "maybe param" "maybe type" "temp"
    (931881 'move' call_tmp[931878](931581 call < call_tmp[931868] call_tmp[931873]))
    if call_tmp[931878]
    {
      (931776 'move' ret[931761](931775 'deref' 1))
      gotoReturn _end_<=[931759] _end_<=[931759]
    }
    unknown call_tmp[931883] "expr temp" "maybe param" "maybe type" "temp"
    (931886 'move' call_tmp[931883](931587 call _size _mt[243] _arg1[931330]))
    unknown call_tmp[931888] "expr temp" "maybe param" "maybe type" "temp"
    (931891 'move' call_tmp[931888](931591 call _size _mt[243] _arg2[931331]))
    unknown call_tmp[931893] "expr temp" "maybe param" "maybe type" "temp"
    (931896 'move' call_tmp[931893](931595 call > call_tmp[931883] call_tmp[931888]))
    if call_tmp[931893]
    {
      (931781 'move' ret[931761](931780 'deref' 0))
      gotoReturn _end_<=[931759] _end_<=[931759]
    }
    unknown call_tmp[931898] "expr temp" "maybe param" "maybe type" "temp"
    (931901 'move' call_tmp[931898](931601 call _lock$ _mt[243] _arg1[931330]))
    unknown call_tmp[931903] "expr temp" "maybe param" "maybe type" "temp"
    (931906 'move' call_tmp[931903](931605 call _lock$ _mt[243] _arg2[931331]))
    unknown call_tmp[931908] "expr temp" "maybe param" "maybe type" "temp"
    (931911 'move' call_tmp[931908](931609 call < call_tmp[931898] call_tmp[931903]))
    if call_tmp[931908]
    {
      (931786 'move' ret[931761](931785 'deref' 1))
      gotoReturn _end_<=[931759] _end_<=[931759]
    }
    unknown call_tmp[931913] "expr temp" "maybe param" "maybe type" "temp"
    (931916 'move' call_tmp[931913](931615 call _lock$ _mt[243] _arg1[931330]))
    unknown call_tmp[931918] "expr temp" "maybe param" "maybe type" "temp"
    (931921 'move' call_tmp[931918](931619 call _lock$ _mt[243] _arg2[931331]))
    unknown call_tmp[931923] "expr temp" "maybe param" "maybe type" "temp"
    (931926 'move' call_tmp[931923](931623 call > call_tmp[931913] call_tmp[931918]))
    if call_tmp[931923]
    {
      (931791 'move' ret[931761](931790 'deref' 0))
      gotoReturn _end_<=[931759] _end_<=[931759]
    }
    unknown call_tmp[931928] "expr temp" "maybe param" "maybe type" "temp"
    (931931 'move' call_tmp[931928](931629 call _arrays _mt[243] _arg1[931330]))
    unknown call_tmp[931933] "expr temp" "maybe param" "maybe type" "temp"
    (931936 'move' call_tmp[931933](931633 call _arrays _mt[243] _arg2[931331]))
    unknown call_tmp[931938] "expr temp" "maybe param" "maybe type" "temp"
    (931941 'move' call_tmp[931938](931637 call < call_tmp[931928] call_tmp[931933]))
    if call_tmp[931938]
    {
      (931796 'move' ret[931761](931795 'deref' 1))
      gotoReturn _end_<=[931759] _end_<=[931759]
    }
    unknown call_tmp[931943] "expr temp" "maybe param" "maybe type" "temp"
    (931946 'move' call_tmp[931943](931643 call _arrays _mt[243] _arg1[931330]))
    unknown call_tmp[931948] "expr temp" "maybe param" "maybe type" "temp"
    (931951 'move' call_tmp[931948](931647 call _arrays _mt[243] _arg2[931331]))
    unknown call_tmp[931953] "expr temp" "maybe param" "maybe type" "temp"
    (931956 'move' call_tmp[931953](931651 call > call_tmp[931943] call_tmp[931948]))
    if call_tmp[931953]
    {
      (931801 'move' ret[931761](931800 'deref' 0))
      gotoReturn _end_<=[931759] _end_<=[931759]
    }
    unknown call_tmp[931958] "expr temp" "maybe param" "maybe type" "temp"
    (931961 'move' call_tmp[931958](931657 call _arrayCapacity _mt[243] _arg1[931330]))
    unknown call_tmp[931963] "expr temp" "maybe param" "maybe type" "temp"
    (931966 'move' call_tmp[931963](931661 call _arrayCapacity _mt[243] _arg2[931331]))
    unknown call_tmp[931968] "expr temp" "maybe param" "maybe type" "temp"
    (931971 'move' call_tmp[931968](931665 call < call_tmp[931958] call_tmp[931963]))
    if call_tmp[931968]
    {
      (931806 'move' ret[931761](931805 'deref' 1))
      gotoReturn _end_<=[931759] _end_<=[931759]
    }
    unknown call_tmp[931973] "expr temp" "maybe param" "maybe type" "temp"
    (931976 'move' call_tmp[931973](931671 call _arrayCapacity _mt[243] _arg1[931330]))
    unknown call_tmp[931978] "expr temp" "maybe param" "maybe type" "temp"
    (931981 'move' call_tmp[931978](931675 call _arrayCapacity _mt[243] _arg2[931331]))
    unknown call_tmp[931983] "expr temp" "maybe param" "maybe type" "temp"
    (931986 'move' call_tmp[931983](931679 call > call_tmp[931973] call_tmp[931978]))
    if call_tmp[931983]
    {
      (931811 'move' ret[931761](931810 'deref' 0))
      gotoReturn _end_<=[931759] _end_<=[931759]
    }
    unknown call_tmp[931988] "expr temp" "maybe param" "maybe type" "temp"
    (931991 'move' call_tmp[931988](931685 call _totalCapacity _mt[243] _arg1[931330]))
    unknown call_tmp[931993] "expr temp" "maybe param" "maybe type" "temp"
    (931996 'move' call_tmp[931993](931689 call _totalCapacity _mt[243] _arg2[931331]))
    unknown call_tmp[931998] "expr temp" "maybe param" "maybe type" "temp"
    (932001 'move' call_tmp[931998](931693 call < call_tmp[931988] call_tmp[931993]))
    if call_tmp[931998]
    {
      (931816 'move' ret[931761](931815 'deref' 1))
      gotoReturn _end_<=[931759] _end_<=[931759]
    }
    unknown call_tmp[932003] "expr temp" "maybe param" "maybe type" "temp"
    (932006 'move' call_tmp[932003](931699 call _totalCapacity _mt[243] _arg1[931330]))
    unknown call_tmp[932008] "expr temp" "maybe param" "maybe type" "temp"
    (932011 'move' call_tmp[932008](931703 call _totalCapacity _mt[243] _arg2[931331]))
    unknown call_tmp[932013] "expr temp" "maybe param" "maybe type" "temp"
    (932016 'move' call_tmp[932013](931707 call > call_tmp[932003] call_tmp[932008]))
    if call_tmp[932013]
    {
      (931821 'move' ret[931761](931820 'deref' 0))
      gotoReturn _end_<=[931759] _end_<=[931759]
    }
    unknown call_tmp[932018] "expr temp" "maybe param" "maybe type" "temp"
    (932021 'move' call_tmp[932018](931713 call _dummyFieldToForceBorrowChecking _mt[243] _arg1[931330]))
    unknown call_tmp[932023] "expr temp" "maybe param" "maybe type" "temp"
    (932026 'move' call_tmp[932023](931717 call _dummyFieldToForceBorrowChecking _mt[243] _arg2[931331]))
    unknown call_tmp[932028] "expr temp" "maybe param" "maybe type" "temp"
    (932031 'move' call_tmp[932028](931721 call < call_tmp[932018] call_tmp[932023]))
    if call_tmp[932028]
    {
      (931826 'move' ret[931761](931825 'deref' 1))
      gotoReturn _end_<=[931759] _end_<=[931759]
    }
    unknown call_tmp[932033] "expr temp" "maybe param" "maybe type" "temp"
    (932036 'move' call_tmp[932033](931727 call _dummyFieldToForceBorrowChecking _mt[243] _arg1[931330]))
    unknown call_tmp[932038] "expr temp" "maybe param" "maybe type" "temp"
    (932041 'move' call_tmp[932038](931731 call _dummyFieldToForceBorrowChecking _mt[243] _arg2[931331]))
    unknown call_tmp[932043] "expr temp" "maybe param" "maybe type" "temp"
    (932046 'move' call_tmp[932043](931735 call > call_tmp[932033] call_tmp[932038]))
    if call_tmp[932043]
    {
      (931831 'move' ret[931761](931830 'deref' 0))
      gotoReturn _end_<=[931759] _end_<=[931759]
    }
    (931836 'move' ret[931761](931835 'deref' 1))
    label _end_<=[931759]
    (931763 return ret[931761])
  }
  where {
    unknown call_tmp[932048] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (932051 'move' call_tmp[932048](931334 'typeof' _arg1[931330]))
    unknown call_tmp[932053] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (932056 'move' call_tmp[932053](931336 'typeof' _arg2[931331]))
    unknown call_tmp[932058] "expr temp" "maybe param" "maybe type" "temp"
    (932061 'move' call_tmp[932058](931338 call == call_tmp[932048] call_tmp[932053]))
    unknown call_tmp[932063] "expr temp" "maybe param" "maybe type" "temp"
    (932066 'move' call_tmp[932063](931539 call chpl_fields_are_comparable[931340] _arg1[931330] _arg2[931331]))
    (931543 '&' call_tmp[932058] call_tmp[932063])
  }
  function chpl_fields_are_comparable[932080](arg _arg1[932082]:list[304222](?), arg _arg2[932083]:list[304222](?)) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[932162]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[932169] "expr temp" "maybe param" "maybe type" "temp"
    (932172 'move' call_tmp[932169](932086 call parSafe _mt[243] _arg1[932082]))
    unknown call_tmp[932174] "expr temp" "maybe param" "maybe type" "temp"
    (932177 'move' call_tmp[932174](932090 call parSafe _mt[243] _arg2[932083]))
    unknown call_tmp[932179] "expr temp" "maybe param" "maybe type" "temp"
    (932182 'move' call_tmp[932179](932094 'call resolves' c">" call_tmp[932169] call_tmp[932174]))
    unknown call_tmp[932184] "expr temp" "maybe param" "maybe type" "temp"
    (932187 'move' call_tmp[932184](932096 call _size _mt[243] _arg1[932082]))
    unknown call_tmp[932189] "expr temp" "maybe param" "maybe type" "temp"
    (932192 'move' call_tmp[932189](932100 call _size _mt[243] _arg2[932083]))
    unknown call_tmp[932194] "expr temp" "maybe param" "maybe type" "temp"
    (932197 'move' call_tmp[932194](932104 'call resolves' c">" call_tmp[932184] call_tmp[932189]))
    unknown call_tmp[932199] "expr temp" "maybe param" "maybe type" "temp"
    (932202 'move' call_tmp[932199](932106 call _lock$ _mt[243] _arg1[932082]))
    unknown call_tmp[932204] "expr temp" "maybe param" "maybe type" "temp"
    (932207 'move' call_tmp[932204](932110 call _lock$ _mt[243] _arg2[932083]))
    unknown call_tmp[932209] "expr temp" "maybe param" "maybe type" "temp"
    (932212 'move' call_tmp[932209](932114 'call resolves' c">" call_tmp[932199] call_tmp[932204]))
    unknown call_tmp[932214] "expr temp" "maybe param" "maybe type" "temp"
    (932217 'move' call_tmp[932214](932116 call _arrays _mt[243] _arg1[932082]))
    unknown call_tmp[932219] "expr temp" "maybe param" "maybe type" "temp"
    (932222 'move' call_tmp[932219](932120 call _arrays _mt[243] _arg2[932083]))
    unknown call_tmp[932224] "expr temp" "maybe param" "maybe type" "temp"
    (932227 'move' call_tmp[932224](932124 'call resolves' c">" call_tmp[932214] call_tmp[932219]))
    unknown call_tmp[932229] "expr temp" "maybe param" "maybe type" "temp"
    (932232 'move' call_tmp[932229](932126 call _arrayCapacity _mt[243] _arg1[932082]))
    unknown call_tmp[932234] "expr temp" "maybe param" "maybe type" "temp"
    (932237 'move' call_tmp[932234](932130 call _arrayCapacity _mt[243] _arg2[932083]))
    unknown call_tmp[932239] "expr temp" "maybe param" "maybe type" "temp"
    (932242 'move' call_tmp[932239](932134 'call resolves' c">" call_tmp[932229] call_tmp[932234]))
    unknown call_tmp[932244] "expr temp" "maybe param" "maybe type" "temp"
    (932247 'move' call_tmp[932244](932136 call _totalCapacity _mt[243] _arg1[932082]))
    unknown call_tmp[932249] "expr temp" "maybe param" "maybe type" "temp"
    (932252 'move' call_tmp[932249](932140 call _totalCapacity _mt[243] _arg2[932083]))
    unknown call_tmp[932254] "expr temp" "maybe param" "maybe type" "temp"
    (932257 'move' call_tmp[932254](932144 'call resolves' c">" call_tmp[932244] call_tmp[932249]))
    unknown call_tmp[932259] "expr temp" "maybe param" "maybe type" "temp"
    (932262 'move' call_tmp[932259](932146 call _dummyFieldToForceBorrowChecking _mt[243] _arg1[932082]))
    unknown call_tmp[932264] "expr temp" "maybe param" "maybe type" "temp"
    (932267 'move' call_tmp[932264](932150 call _dummyFieldToForceBorrowChecking _mt[243] _arg2[932083]))
    unknown call_tmp[932269] "expr temp" "maybe param" "maybe type" "temp"
    (932272 'move' call_tmp[932269](932154 'call resolves' c">" call_tmp[932259] call_tmp[932264]))
    unknown call_tmp[932274] "expr temp" "maybe param" "maybe type" "temp"
    (932277 'move' call_tmp[932274](932156 '&' call_tmp[932179] call_tmp[932194] call_tmp[932209] call_tmp[932224] call_tmp[932239] call_tmp[932254] call_tmp[932269]))
    (932167 'move' ret[932162](932166 'deref' call_tmp[932274]))
    (932164 return ret[932162])
  }
  function >[932068](arg _arg1[932070]:list[304222](?), arg _arg2[932071]:list[304222](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[932501]:bool[10] "RVV" "temp"
    unknown call_tmp[932578] "expr temp" "maybe param" "maybe type" "temp"
    (932581 'move' call_tmp[932578](932285 call parSafe _mt[243] _arg1[932070]))
    unknown call_tmp[932583] "expr temp" "maybe param" "maybe type" "temp"
    (932586 'move' call_tmp[932583](932289 call parSafe _mt[243] _arg2[932071]))
    unknown call_tmp[932588] "expr temp" "maybe param" "maybe type" "temp"
    (932591 'move' call_tmp[932588](932293 call > call_tmp[932578] call_tmp[932583]))
    if call_tmp[932588]
    {
      (932506 'move' ret[932501](932505 'deref' 1))
      gotoReturn _end_>[932499] _end_>[932499]
    }
    unknown call_tmp[932593] "expr temp" "maybe param" "maybe type" "temp"
    (932596 'move' call_tmp[932593](932299 call parSafe _mt[243] _arg1[932070]))
    unknown call_tmp[932598] "expr temp" "maybe param" "maybe type" "temp"
    (932601 'move' call_tmp[932598](932303 call parSafe _mt[243] _arg2[932071]))
    unknown call_tmp[932603] "expr temp" "maybe param" "maybe type" "temp"
    (932606 'move' call_tmp[932603](932307 call < call_tmp[932593] call_tmp[932598]))
    if call_tmp[932603]
    {
      (932511 'move' ret[932501](932510 'deref' 0))
      gotoReturn _end_>[932499] _end_>[932499]
    }
    unknown call_tmp[932608] "expr temp" "maybe param" "maybe type" "temp"
    (932611 'move' call_tmp[932608](932313 call _size _mt[243] _arg1[932070]))
    unknown call_tmp[932613] "expr temp" "maybe param" "maybe type" "temp"
    (932616 'move' call_tmp[932613](932317 call _size _mt[243] _arg2[932071]))
    unknown call_tmp[932618] "expr temp" "maybe param" "maybe type" "temp"
    (932621 'move' call_tmp[932618](932321 call > call_tmp[932608] call_tmp[932613]))
    if call_tmp[932618]
    {
      (932516 'move' ret[932501](932515 'deref' 1))
      gotoReturn _end_>[932499] _end_>[932499]
    }
    unknown call_tmp[932623] "expr temp" "maybe param" "maybe type" "temp"
    (932626 'move' call_tmp[932623](932327 call _size _mt[243] _arg1[932070]))
    unknown call_tmp[932628] "expr temp" "maybe param" "maybe type" "temp"
    (932631 'move' call_tmp[932628](932331 call _size _mt[243] _arg2[932071]))
    unknown call_tmp[932633] "expr temp" "maybe param" "maybe type" "temp"
    (932636 'move' call_tmp[932633](932335 call < call_tmp[932623] call_tmp[932628]))
    if call_tmp[932633]
    {
      (932521 'move' ret[932501](932520 'deref' 0))
      gotoReturn _end_>[932499] _end_>[932499]
    }
    unknown call_tmp[932638] "expr temp" "maybe param" "maybe type" "temp"
    (932641 'move' call_tmp[932638](932341 call _lock$ _mt[243] _arg1[932070]))
    unknown call_tmp[932643] "expr temp" "maybe param" "maybe type" "temp"
    (932646 'move' call_tmp[932643](932345 call _lock$ _mt[243] _arg2[932071]))
    unknown call_tmp[932648] "expr temp" "maybe param" "maybe type" "temp"
    (932651 'move' call_tmp[932648](932349 call > call_tmp[932638] call_tmp[932643]))
    if call_tmp[932648]
    {
      (932526 'move' ret[932501](932525 'deref' 1))
      gotoReturn _end_>[932499] _end_>[932499]
    }
    unknown call_tmp[932653] "expr temp" "maybe param" "maybe type" "temp"
    (932656 'move' call_tmp[932653](932355 call _lock$ _mt[243] _arg1[932070]))
    unknown call_tmp[932658] "expr temp" "maybe param" "maybe type" "temp"
    (932661 'move' call_tmp[932658](932359 call _lock$ _mt[243] _arg2[932071]))
    unknown call_tmp[932663] "expr temp" "maybe param" "maybe type" "temp"
    (932666 'move' call_tmp[932663](932363 call < call_tmp[932653] call_tmp[932658]))
    if call_tmp[932663]
    {
      (932531 'move' ret[932501](932530 'deref' 0))
      gotoReturn _end_>[932499] _end_>[932499]
    }
    unknown call_tmp[932668] "expr temp" "maybe param" "maybe type" "temp"
    (932671 'move' call_tmp[932668](932369 call _arrays _mt[243] _arg1[932070]))
    unknown call_tmp[932673] "expr temp" "maybe param" "maybe type" "temp"
    (932676 'move' call_tmp[932673](932373 call _arrays _mt[243] _arg2[932071]))
    unknown call_tmp[932678] "expr temp" "maybe param" "maybe type" "temp"
    (932681 'move' call_tmp[932678](932377 call > call_tmp[932668] call_tmp[932673]))
    if call_tmp[932678]
    {
      (932536 'move' ret[932501](932535 'deref' 1))
      gotoReturn _end_>[932499] _end_>[932499]
    }
    unknown call_tmp[932683] "expr temp" "maybe param" "maybe type" "temp"
    (932686 'move' call_tmp[932683](932383 call _arrays _mt[243] _arg1[932070]))
    unknown call_tmp[932688] "expr temp" "maybe param" "maybe type" "temp"
    (932691 'move' call_tmp[932688](932387 call _arrays _mt[243] _arg2[932071]))
    unknown call_tmp[932693] "expr temp" "maybe param" "maybe type" "temp"
    (932696 'move' call_tmp[932693](932391 call < call_tmp[932683] call_tmp[932688]))
    if call_tmp[932693]
    {
      (932541 'move' ret[932501](932540 'deref' 0))
      gotoReturn _end_>[932499] _end_>[932499]
    }
    unknown call_tmp[932698] "expr temp" "maybe param" "maybe type" "temp"
    (932701 'move' call_tmp[932698](932397 call _arrayCapacity _mt[243] _arg1[932070]))
    unknown call_tmp[932703] "expr temp" "maybe param" "maybe type" "temp"
    (932706 'move' call_tmp[932703](932401 call _arrayCapacity _mt[243] _arg2[932071]))
    unknown call_tmp[932708] "expr temp" "maybe param" "maybe type" "temp"
    (932711 'move' call_tmp[932708](932405 call > call_tmp[932698] call_tmp[932703]))
    if call_tmp[932708]
    {
      (932546 'move' ret[932501](932545 'deref' 1))
      gotoReturn _end_>[932499] _end_>[932499]
    }
    unknown call_tmp[932713] "expr temp" "maybe param" "maybe type" "temp"
    (932716 'move' call_tmp[932713](932411 call _arrayCapacity _mt[243] _arg1[932070]))
    unknown call_tmp[932718] "expr temp" "maybe param" "maybe type" "temp"
    (932721 'move' call_tmp[932718](932415 call _arrayCapacity _mt[243] _arg2[932071]))
    unknown call_tmp[932723] "expr temp" "maybe param" "maybe type" "temp"
    (932726 'move' call_tmp[932723](932419 call < call_tmp[932713] call_tmp[932718]))
    if call_tmp[932723]
    {
      (932551 'move' ret[932501](932550 'deref' 0))
      gotoReturn _end_>[932499] _end_>[932499]
    }
    unknown call_tmp[932728] "expr temp" "maybe param" "maybe type" "temp"
    (932731 'move' call_tmp[932728](932425 call _totalCapacity _mt[243] _arg1[932070]))
    unknown call_tmp[932733] "expr temp" "maybe param" "maybe type" "temp"
    (932736 'move' call_tmp[932733](932429 call _totalCapacity _mt[243] _arg2[932071]))
    unknown call_tmp[932738] "expr temp" "maybe param" "maybe type" "temp"
    (932741 'move' call_tmp[932738](932433 call > call_tmp[932728] call_tmp[932733]))
    if call_tmp[932738]
    {
      (932556 'move' ret[932501](932555 'deref' 1))
      gotoReturn _end_>[932499] _end_>[932499]
    }
    unknown call_tmp[932743] "expr temp" "maybe param" "maybe type" "temp"
    (932746 'move' call_tmp[932743](932439 call _totalCapacity _mt[243] _arg1[932070]))
    unknown call_tmp[932748] "expr temp" "maybe param" "maybe type" "temp"
    (932751 'move' call_tmp[932748](932443 call _totalCapacity _mt[243] _arg2[932071]))
    unknown call_tmp[932753] "expr temp" "maybe param" "maybe type" "temp"
    (932756 'move' call_tmp[932753](932447 call < call_tmp[932743] call_tmp[932748]))
    if call_tmp[932753]
    {
      (932561 'move' ret[932501](932560 'deref' 0))
      gotoReturn _end_>[932499] _end_>[932499]
    }
    unknown call_tmp[932758] "expr temp" "maybe param" "maybe type" "temp"
    (932761 'move' call_tmp[932758](932453 call _dummyFieldToForceBorrowChecking _mt[243] _arg1[932070]))
    unknown call_tmp[932763] "expr temp" "maybe param" "maybe type" "temp"
    (932766 'move' call_tmp[932763](932457 call _dummyFieldToForceBorrowChecking _mt[243] _arg2[932071]))
    unknown call_tmp[932768] "expr temp" "maybe param" "maybe type" "temp"
    (932771 'move' call_tmp[932768](932461 call > call_tmp[932758] call_tmp[932763]))
    if call_tmp[932768]
    {
      (932566 'move' ret[932501](932565 'deref' 1))
      gotoReturn _end_>[932499] _end_>[932499]
    }
    unknown call_tmp[932773] "expr temp" "maybe param" "maybe type" "temp"
    (932776 'move' call_tmp[932773](932467 call _dummyFieldToForceBorrowChecking _mt[243] _arg1[932070]))
    unknown call_tmp[932778] "expr temp" "maybe param" "maybe type" "temp"
    (932781 'move' call_tmp[932778](932471 call _dummyFieldToForceBorrowChecking _mt[243] _arg2[932071]))
    unknown call_tmp[932783] "expr temp" "maybe param" "maybe type" "temp"
    (932786 'move' call_tmp[932783](932475 call < call_tmp[932773] call_tmp[932778]))
    if call_tmp[932783]
    {
      (932571 'move' ret[932501](932570 'deref' 0))
      gotoReturn _end_>[932499] _end_>[932499]
    }
    (932576 'move' ret[932501](932575 'deref' 0))
    label _end_>[932499]
    (932503 return ret[932501])
  }
  where {
    unknown call_tmp[932788] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (932791 'move' call_tmp[932788](932074 'typeof' _arg1[932070]))
    unknown call_tmp[932793] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (932796 'move' call_tmp[932793](932076 'typeof' _arg2[932071]))
    unknown call_tmp[932798] "expr temp" "maybe param" "maybe type" "temp"
    (932801 'move' call_tmp[932798](932078 call == call_tmp[932788] call_tmp[932793]))
    unknown call_tmp[932803] "expr temp" "maybe param" "maybe type" "temp"
    (932806 'move' call_tmp[932803](932279 call chpl_fields_are_comparable[932080] _arg1[932070] _arg2[932071]))
    (932283 '&' call_tmp[932798] call_tmp[932803])
  }
  function chpl_fields_are_comparable[932820](arg _arg1[932822]:list[304222](?), arg _arg2[932823]:list[304222](?)) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[932902]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[932909] "expr temp" "maybe param" "maybe type" "temp"
    (932912 'move' call_tmp[932909](932826 call parSafe _mt[243] _arg1[932822]))
    unknown call_tmp[932914] "expr temp" "maybe param" "maybe type" "temp"
    (932917 'move' call_tmp[932914](932830 call parSafe _mt[243] _arg2[932823]))
    unknown call_tmp[932919] "expr temp" "maybe param" "maybe type" "temp"
    (932922 'move' call_tmp[932919](932834 'call resolves' c">=" call_tmp[932909] call_tmp[932914]))
    unknown call_tmp[932924] "expr temp" "maybe param" "maybe type" "temp"
    (932927 'move' call_tmp[932924](932836 call _size _mt[243] _arg1[932822]))
    unknown call_tmp[932929] "expr temp" "maybe param" "maybe type" "temp"
    (932932 'move' call_tmp[932929](932840 call _size _mt[243] _arg2[932823]))
    unknown call_tmp[932934] "expr temp" "maybe param" "maybe type" "temp"
    (932937 'move' call_tmp[932934](932844 'call resolves' c">=" call_tmp[932924] call_tmp[932929]))
    unknown call_tmp[932939] "expr temp" "maybe param" "maybe type" "temp"
    (932942 'move' call_tmp[932939](932846 call _lock$ _mt[243] _arg1[932822]))
    unknown call_tmp[932944] "expr temp" "maybe param" "maybe type" "temp"
    (932947 'move' call_tmp[932944](932850 call _lock$ _mt[243] _arg2[932823]))
    unknown call_tmp[932949] "expr temp" "maybe param" "maybe type" "temp"
    (932952 'move' call_tmp[932949](932854 'call resolves' c">=" call_tmp[932939] call_tmp[932944]))
    unknown call_tmp[932954] "expr temp" "maybe param" "maybe type" "temp"
    (932957 'move' call_tmp[932954](932856 call _arrays _mt[243] _arg1[932822]))
    unknown call_tmp[932959] "expr temp" "maybe param" "maybe type" "temp"
    (932962 'move' call_tmp[932959](932860 call _arrays _mt[243] _arg2[932823]))
    unknown call_tmp[932964] "expr temp" "maybe param" "maybe type" "temp"
    (932967 'move' call_tmp[932964](932864 'call resolves' c">=" call_tmp[932954] call_tmp[932959]))
    unknown call_tmp[932969] "expr temp" "maybe param" "maybe type" "temp"
    (932972 'move' call_tmp[932969](932866 call _arrayCapacity _mt[243] _arg1[932822]))
    unknown call_tmp[932974] "expr temp" "maybe param" "maybe type" "temp"
    (932977 'move' call_tmp[932974](932870 call _arrayCapacity _mt[243] _arg2[932823]))
    unknown call_tmp[932979] "expr temp" "maybe param" "maybe type" "temp"
    (932982 'move' call_tmp[932979](932874 'call resolves' c">=" call_tmp[932969] call_tmp[932974]))
    unknown call_tmp[932984] "expr temp" "maybe param" "maybe type" "temp"
    (932987 'move' call_tmp[932984](932876 call _totalCapacity _mt[243] _arg1[932822]))
    unknown call_tmp[932989] "expr temp" "maybe param" "maybe type" "temp"
    (932992 'move' call_tmp[932989](932880 call _totalCapacity _mt[243] _arg2[932823]))
    unknown call_tmp[932994] "expr temp" "maybe param" "maybe type" "temp"
    (932997 'move' call_tmp[932994](932884 'call resolves' c">=" call_tmp[932984] call_tmp[932989]))
    unknown call_tmp[932999] "expr temp" "maybe param" "maybe type" "temp"
    (933002 'move' call_tmp[932999](932886 call _dummyFieldToForceBorrowChecking _mt[243] _arg1[932822]))
    unknown call_tmp[933004] "expr temp" "maybe param" "maybe type" "temp"
    (933007 'move' call_tmp[933004](932890 call _dummyFieldToForceBorrowChecking _mt[243] _arg2[932823]))
    unknown call_tmp[933009] "expr temp" "maybe param" "maybe type" "temp"
    (933012 'move' call_tmp[933009](932894 'call resolves' c">=" call_tmp[932999] call_tmp[933004]))
    unknown call_tmp[933014] "expr temp" "maybe param" "maybe type" "temp"
    (933017 'move' call_tmp[933014](932896 '&' call_tmp[932919] call_tmp[932934] call_tmp[932949] call_tmp[932964] call_tmp[932979] call_tmp[932994] call_tmp[933009]))
    (932907 'move' ret[932902](932906 'deref' call_tmp[933014]))
    (932904 return ret[932902])
  }
  function >=[932808](arg _arg1[932810]:list[304222](?), arg _arg2[932811]:list[304222](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[933241]:bool[10] "RVV" "temp"
    unknown call_tmp[933318] "expr temp" "maybe param" "maybe type" "temp"
    (933321 'move' call_tmp[933318](933025 call parSafe _mt[243] _arg1[932810]))
    unknown call_tmp[933323] "expr temp" "maybe param" "maybe type" "temp"
    (933326 'move' call_tmp[933323](933029 call parSafe _mt[243] _arg2[932811]))
    unknown call_tmp[933328] "expr temp" "maybe param" "maybe type" "temp"
    (933331 'move' call_tmp[933328](933033 call > call_tmp[933318] call_tmp[933323]))
    if call_tmp[933328]
    {
      (933246 'move' ret[933241](933245 'deref' 1))
      gotoReturn _end_>=[933239] _end_>=[933239]
    }
    unknown call_tmp[933333] "expr temp" "maybe param" "maybe type" "temp"
    (933336 'move' call_tmp[933333](933039 call parSafe _mt[243] _arg1[932810]))
    unknown call_tmp[933338] "expr temp" "maybe param" "maybe type" "temp"
    (933341 'move' call_tmp[933338](933043 call parSafe _mt[243] _arg2[932811]))
    unknown call_tmp[933343] "expr temp" "maybe param" "maybe type" "temp"
    (933346 'move' call_tmp[933343](933047 call < call_tmp[933333] call_tmp[933338]))
    if call_tmp[933343]
    {
      (933251 'move' ret[933241](933250 'deref' 0))
      gotoReturn _end_>=[933239] _end_>=[933239]
    }
    unknown call_tmp[933348] "expr temp" "maybe param" "maybe type" "temp"
    (933351 'move' call_tmp[933348](933053 call _size _mt[243] _arg1[932810]))
    unknown call_tmp[933353] "expr temp" "maybe param" "maybe type" "temp"
    (933356 'move' call_tmp[933353](933057 call _size _mt[243] _arg2[932811]))
    unknown call_tmp[933358] "expr temp" "maybe param" "maybe type" "temp"
    (933361 'move' call_tmp[933358](933061 call > call_tmp[933348] call_tmp[933353]))
    if call_tmp[933358]
    {
      (933256 'move' ret[933241](933255 'deref' 1))
      gotoReturn _end_>=[933239] _end_>=[933239]
    }
    unknown call_tmp[933363] "expr temp" "maybe param" "maybe type" "temp"
    (933366 'move' call_tmp[933363](933067 call _size _mt[243] _arg1[932810]))
    unknown call_tmp[933368] "expr temp" "maybe param" "maybe type" "temp"
    (933371 'move' call_tmp[933368](933071 call _size _mt[243] _arg2[932811]))
    unknown call_tmp[933373] "expr temp" "maybe param" "maybe type" "temp"
    (933376 'move' call_tmp[933373](933075 call < call_tmp[933363] call_tmp[933368]))
    if call_tmp[933373]
    {
      (933261 'move' ret[933241](933260 'deref' 0))
      gotoReturn _end_>=[933239] _end_>=[933239]
    }
    unknown call_tmp[933378] "expr temp" "maybe param" "maybe type" "temp"
    (933381 'move' call_tmp[933378](933081 call _lock$ _mt[243] _arg1[932810]))
    unknown call_tmp[933383] "expr temp" "maybe param" "maybe type" "temp"
    (933386 'move' call_tmp[933383](933085 call _lock$ _mt[243] _arg2[932811]))
    unknown call_tmp[933388] "expr temp" "maybe param" "maybe type" "temp"
    (933391 'move' call_tmp[933388](933089 call > call_tmp[933378] call_tmp[933383]))
    if call_tmp[933388]
    {
      (933266 'move' ret[933241](933265 'deref' 1))
      gotoReturn _end_>=[933239] _end_>=[933239]
    }
    unknown call_tmp[933393] "expr temp" "maybe param" "maybe type" "temp"
    (933396 'move' call_tmp[933393](933095 call _lock$ _mt[243] _arg1[932810]))
    unknown call_tmp[933398] "expr temp" "maybe param" "maybe type" "temp"
    (933401 'move' call_tmp[933398](933099 call _lock$ _mt[243] _arg2[932811]))
    unknown call_tmp[933403] "expr temp" "maybe param" "maybe type" "temp"
    (933406 'move' call_tmp[933403](933103 call < call_tmp[933393] call_tmp[933398]))
    if call_tmp[933403]
    {
      (933271 'move' ret[933241](933270 'deref' 0))
      gotoReturn _end_>=[933239] _end_>=[933239]
    }
    unknown call_tmp[933408] "expr temp" "maybe param" "maybe type" "temp"
    (933411 'move' call_tmp[933408](933109 call _arrays _mt[243] _arg1[932810]))
    unknown call_tmp[933413] "expr temp" "maybe param" "maybe type" "temp"
    (933416 'move' call_tmp[933413](933113 call _arrays _mt[243] _arg2[932811]))
    unknown call_tmp[933418] "expr temp" "maybe param" "maybe type" "temp"
    (933421 'move' call_tmp[933418](933117 call > call_tmp[933408] call_tmp[933413]))
    if call_tmp[933418]
    {
      (933276 'move' ret[933241](933275 'deref' 1))
      gotoReturn _end_>=[933239] _end_>=[933239]
    }
    unknown call_tmp[933423] "expr temp" "maybe param" "maybe type" "temp"
    (933426 'move' call_tmp[933423](933123 call _arrays _mt[243] _arg1[932810]))
    unknown call_tmp[933428] "expr temp" "maybe param" "maybe type" "temp"
    (933431 'move' call_tmp[933428](933127 call _arrays _mt[243] _arg2[932811]))
    unknown call_tmp[933433] "expr temp" "maybe param" "maybe type" "temp"
    (933436 'move' call_tmp[933433](933131 call < call_tmp[933423] call_tmp[933428]))
    if call_tmp[933433]
    {
      (933281 'move' ret[933241](933280 'deref' 0))
      gotoReturn _end_>=[933239] _end_>=[933239]
    }
    unknown call_tmp[933438] "expr temp" "maybe param" "maybe type" "temp"
    (933441 'move' call_tmp[933438](933137 call _arrayCapacity _mt[243] _arg1[932810]))
    unknown call_tmp[933443] "expr temp" "maybe param" "maybe type" "temp"
    (933446 'move' call_tmp[933443](933141 call _arrayCapacity _mt[243] _arg2[932811]))
    unknown call_tmp[933448] "expr temp" "maybe param" "maybe type" "temp"
    (933451 'move' call_tmp[933448](933145 call > call_tmp[933438] call_tmp[933443]))
    if call_tmp[933448]
    {
      (933286 'move' ret[933241](933285 'deref' 1))
      gotoReturn _end_>=[933239] _end_>=[933239]
    }
    unknown call_tmp[933453] "expr temp" "maybe param" "maybe type" "temp"
    (933456 'move' call_tmp[933453](933151 call _arrayCapacity _mt[243] _arg1[932810]))
    unknown call_tmp[933458] "expr temp" "maybe param" "maybe type" "temp"
    (933461 'move' call_tmp[933458](933155 call _arrayCapacity _mt[243] _arg2[932811]))
    unknown call_tmp[933463] "expr temp" "maybe param" "maybe type" "temp"
    (933466 'move' call_tmp[933463](933159 call < call_tmp[933453] call_tmp[933458]))
    if call_tmp[933463]
    {
      (933291 'move' ret[933241](933290 'deref' 0))
      gotoReturn _end_>=[933239] _end_>=[933239]
    }
    unknown call_tmp[933468] "expr temp" "maybe param" "maybe type" "temp"
    (933471 'move' call_tmp[933468](933165 call _totalCapacity _mt[243] _arg1[932810]))
    unknown call_tmp[933473] "expr temp" "maybe param" "maybe type" "temp"
    (933476 'move' call_tmp[933473](933169 call _totalCapacity _mt[243] _arg2[932811]))
    unknown call_tmp[933478] "expr temp" "maybe param" "maybe type" "temp"
    (933481 'move' call_tmp[933478](933173 call > call_tmp[933468] call_tmp[933473]))
    if call_tmp[933478]
    {
      (933296 'move' ret[933241](933295 'deref' 1))
      gotoReturn _end_>=[933239] _end_>=[933239]
    }
    unknown call_tmp[933483] "expr temp" "maybe param" "maybe type" "temp"
    (933486 'move' call_tmp[933483](933179 call _totalCapacity _mt[243] _arg1[932810]))
    unknown call_tmp[933488] "expr temp" "maybe param" "maybe type" "temp"
    (933491 'move' call_tmp[933488](933183 call _totalCapacity _mt[243] _arg2[932811]))
    unknown call_tmp[933493] "expr temp" "maybe param" "maybe type" "temp"
    (933496 'move' call_tmp[933493](933187 call < call_tmp[933483] call_tmp[933488]))
    if call_tmp[933493]
    {
      (933301 'move' ret[933241](933300 'deref' 0))
      gotoReturn _end_>=[933239] _end_>=[933239]
    }
    unknown call_tmp[933498] "expr temp" "maybe param" "maybe type" "temp"
    (933501 'move' call_tmp[933498](933193 call _dummyFieldToForceBorrowChecking _mt[243] _arg1[932810]))
    unknown call_tmp[933503] "expr temp" "maybe param" "maybe type" "temp"
    (933506 'move' call_tmp[933503](933197 call _dummyFieldToForceBorrowChecking _mt[243] _arg2[932811]))
    unknown call_tmp[933508] "expr temp" "maybe param" "maybe type" "temp"
    (933511 'move' call_tmp[933508](933201 call > call_tmp[933498] call_tmp[933503]))
    if call_tmp[933508]
    {
      (933306 'move' ret[933241](933305 'deref' 1))
      gotoReturn _end_>=[933239] _end_>=[933239]
    }
    unknown call_tmp[933513] "expr temp" "maybe param" "maybe type" "temp"
    (933516 'move' call_tmp[933513](933207 call _dummyFieldToForceBorrowChecking _mt[243] _arg1[932810]))
    unknown call_tmp[933518] "expr temp" "maybe param" "maybe type" "temp"
    (933521 'move' call_tmp[933518](933211 call _dummyFieldToForceBorrowChecking _mt[243] _arg2[932811]))
    unknown call_tmp[933523] "expr temp" "maybe param" "maybe type" "temp"
    (933526 'move' call_tmp[933523](933215 call < call_tmp[933513] call_tmp[933518]))
    if call_tmp[933523]
    {
      (933311 'move' ret[933241](933310 'deref' 0))
      gotoReturn _end_>=[933239] _end_>=[933239]
    }
    (933316 'move' ret[933241](933315 'deref' 1))
    label _end_>=[933239]
    (933243 return ret[933241])
  }
  where {
    unknown call_tmp[933528] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (933531 'move' call_tmp[933528](932814 'typeof' _arg1[932810]))
    unknown call_tmp[933533] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (933536 'move' call_tmp[933533](932816 'typeof' _arg2[932811]))
    unknown call_tmp[933538] "expr temp" "maybe param" "maybe type" "temp"
    (933541 'move' call_tmp[933538](932818 call == call_tmp[933528] call_tmp[933533]))
    unknown call_tmp[933543] "expr temp" "maybe param" "maybe type" "temp"
    (933546 'move' call_tmp[933543](933019 call chpl_fields_are_comparable[932820] _arg1[932810] _arg2[932811]))
    (933023 '&' call_tmp[933538] call_tmp[933543])
  }
  function chpl__defaultHash[933548](arg r[933550]:list[304222](?)) : _unknown[51] "compiler generated" "last resort"
  {
    unknown ret[933626] "RVV" "temp"
    unknown call_tmp[933633] "expr temp" "maybe param" "maybe type" "temp"
    (933636 'move' call_tmp[933633](933612 call _dummyFieldToForceBorrowChecking _mt[243] r[933550]))
    unknown call_tmp[933638] "expr temp" "maybe param" "maybe type" "temp"
    (933641 'move' call_tmp[933638](933616 call chpl__defaultHash call_tmp[933633]))
    unknown call_tmp[933643] "expr temp" "maybe param" "maybe type" "temp"
    (933646 'move' call_tmp[933643](933603 call _totalCapacity _mt[243] r[933550]))
    unknown call_tmp[933648] "expr temp" "maybe param" "maybe type" "temp"
    (933651 'move' call_tmp[933648](933607 call chpl__defaultHash call_tmp[933643]))
    unknown call_tmp[933653] "expr temp" "maybe param" "maybe type" "temp"
    (933656 'move' call_tmp[933653](933594 call _arrayCapacity _mt[243] r[933550]))
    unknown call_tmp[933658] "expr temp" "maybe param" "maybe type" "temp"
    (933661 'move' call_tmp[933658](933598 call chpl__defaultHash call_tmp[933653]))
    unknown call_tmp[933663] "expr temp" "maybe param" "maybe type" "temp"
    (933666 'move' call_tmp[933663](933585 call _arrays _mt[243] r[933550]))
    unknown call_tmp[933668] "expr temp" "maybe param" "maybe type" "temp"
    (933671 'move' call_tmp[933668](933589 call chpl__defaultHash call_tmp[933663]))
    unknown call_tmp[933673] "expr temp" "maybe param" "maybe type" "temp"
    (933676 'move' call_tmp[933673](933576 call _lock$ _mt[243] r[933550]))
    unknown call_tmp[933678] "expr temp" "maybe param" "maybe type" "temp"
    (933681 'move' call_tmp[933678](933580 call chpl__defaultHash call_tmp[933673]))
    unknown call_tmp[933683] "expr temp" "maybe param" "maybe type" "temp"
    (933686 'move' call_tmp[933683](933567 call _size _mt[243] r[933550]))
    unknown call_tmp[933688] "expr temp" "maybe param" "maybe type" "temp"
    (933691 'move' call_tmp[933688](933571 call chpl__defaultHash call_tmp[933683]))
    unknown call_tmp[933693] "expr temp" "maybe param" "maybe type" "temp"
    (933696 'move' call_tmp[933693](933558 call parSafe _mt[243] r[933550]))
    unknown call_tmp[933698] "expr temp" "maybe param" "maybe type" "temp"
    (933701 'move' call_tmp[933698](933562 call chpl__defaultHash call_tmp[933693]))
    unknown call_tmp[933703] "expr temp" "maybe param" "maybe type" "temp"
    (933706 'move' call_tmp[933703](933552 call eltType _mt[243] r[933550]))
    unknown call_tmp[933708] "expr temp" "maybe param" "maybe type" "temp"
    (933711 'move' call_tmp[933708](933556 call chpl__defaultHash call_tmp[933703]))
    unknown call_tmp[933713] "expr temp" "maybe param" "maybe type" "temp"
    (933716 'move' call_tmp[933713](933564 call chpl__defaultHashCombine call_tmp[933698] call_tmp[933708] 2))
    unknown call_tmp[933718] "expr temp" "maybe param" "maybe type" "temp"
    (933721 'move' call_tmp[933718](933573 call chpl__defaultHashCombine call_tmp[933688] call_tmp[933713] 3))
    unknown call_tmp[933723] "expr temp" "maybe param" "maybe type" "temp"
    (933726 'move' call_tmp[933723](933582 call chpl__defaultHashCombine call_tmp[933678] call_tmp[933718] 4))
    unknown call_tmp[933728] "expr temp" "maybe param" "maybe type" "temp"
    (933731 'move' call_tmp[933728](933591 call chpl__defaultHashCombine call_tmp[933668] call_tmp[933723] 5))
    unknown call_tmp[933733] "expr temp" "maybe param" "maybe type" "temp"
    (933736 'move' call_tmp[933733](933600 call chpl__defaultHashCombine call_tmp[933658] call_tmp[933728] 6))
    unknown call_tmp[933738] "expr temp" "maybe param" "maybe type" "temp"
    (933741 'move' call_tmp[933738](933609 call chpl__defaultHashCombine call_tmp[933648] call_tmp[933733] 7))
    unknown call_tmp[933743] "expr temp" "maybe param" "maybe type" "temp"
    (933746 'move' call_tmp[933743](933618 call chpl__defaultHashCombine call_tmp[933638] call_tmp[933738] 8))
    (933631 'move' ret[933626](933630 'deref' call_tmp[933743]))
    (933628 return ret[933626])
  }
  type list[304222](?) unknown eltType[298470] "type variable" unknown parSafe[298474] "param" 0 val _size[298479]:int(64)[13] "no doc" 0 unknown _lock$[298492] "no doc"(298489 IfExpr  parSafe[298474] then
  { scopeless
    (748190 'new' _LockWrapper[405240](?))
  } else
  { scopeless
    none[57]
  } ) unknown _arrays[298504] "no doc" nil[44](298502 call _ddata[11696](?)(298500 call _ddata[11696](?) eltType[298470])) val _arrayCapacity[298509]:int(64)[13] "no doc" 0 val _totalCapacity[298514]:int(64)[13] "no doc" 0 unknown _dummyFieldToForceBorrowChecking[298522] "no doc"(298521 call _dummyFieldType eltType[298470])
  function =[304492](ref arg lhs[304489]:list[304222](?), arg rhs[304499]:list[304222](?)) : _unknown[51] "assignop" "compiler added where" "no return value for void"
  {
    (304507 call(304503 call (partial) clear _mt[243] lhs[304489]))
    (491561 'end of statement')
    (304518 call(304513 call (partial) extend _mt[243] lhs[304489]) rhs[304499])
    (539628 return _void[55])
  }
  where {
    unknown call_tmp[747664] "expr temp" "maybe param" "maybe type" "temp"
    (747667 'move' call_tmp[747664](467973 'query' lhs[304489] 1))
    unknown call_tmp[747669] "expr temp" "maybe param" "maybe type" "temp"
    (747672 'move' call_tmp[747669](467970 'query' rhs[304499] 1))
    unknown call_tmp[747674] "expr temp" "maybe param" "maybe type" "temp"
    (747677 'move' call_tmp[747674](467976 call == call_tmp[747664] call_tmp[747669]))
    (467980 call & 1 call_tmp[747674])
  }
  function ==[304533](arg a[304530]:list[304222](?), arg b[304540]:list[304222](?)) : _unknown[51] "compiler added where"
  {
    unknown ret[539632] "RVV" "temp"
    unknown call_tmp[747681] "expr temp" "maybe param" "maybe type" "temp"
    (747684 'move' call_tmp[747681](304545 call size _mt[243] a[304530]))
    unknown call_tmp[747688] "expr temp" "maybe param" "maybe type" "temp"
    (747691 'move' call_tmp[747688](304549 call size _mt[243] b[304540]))
    unknown call_tmp[747693] "expr temp" "maybe param" "maybe type" "temp"
    (747696 'move' call_tmp[747693](304552 call != call_tmp[747681] call_tmp[747688]))
    unknown call_tmp[747698] "expr temp" "maybe param" "maybe type" "temp"
    (747701 'move' call_tmp[747698](304557 call _cond_test call_tmp[747693]))
    if call_tmp[747698]
    {
      (539638 'move' ret[539632](539637 'coerce' 0 bool[10]))
      gotoReturn _end_==[539630] _end_==[539630]
    }
    {
      unknown _indexOfInterest[304591] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[304592] "expr temp" "temp"
      unknown call_tmp[747705] "expr temp" "maybe param" "maybe type" "temp"
      (747708 'move' call_tmp[747705](304607 call size _mt[243] a[304530]))
      unknown call_tmp[747710] "expr temp" "maybe param" "maybe type" "temp"
      (747713 'move' call_tmp[747710](304611 call chpl_direct_counted_range_iter 0 call_tmp[747705]))
      (304601 'move' _iterator[304592](304599 call _getIterator call_tmp[747710]))
      Defer
      {
        {
          (304627 call _freeIterator _iterator[304592])
        }
      }
      { scopeless type
        (304616 'move' _indexOfInterest[304591](304613 call iteratorIndex _iterator[304592]))
      }
      ForLoop[304593]
      {
        unknown i[304620] "index var" "insert auto destroy"
        (491565 'end of statement')
        (304622 'move' i[304620] _indexOfInterest[304591])
        (491566 'end of statement' i[304620])
        unknown call_tmp[747715] "expr temp" "maybe param" "maybe type" "temp"
        (747718 'move' call_tmp[747715](304576 call a[304530] i[304620]))
        unknown call_tmp[747720] "expr temp" "maybe param" "maybe type" "temp"
        (747723 'move' call_tmp[747720](304580 call b[304540] i[304620]))
        unknown call_tmp[747725] "expr temp" "maybe param" "maybe type" "temp"
        (747728 'move' call_tmp[747725](304581 call != call_tmp[747715] call_tmp[747720]))
        unknown call_tmp[747730] "expr temp" "maybe param" "maybe type" "temp"
        (747733 'move' call_tmp[747730](304586 call _cond_test call_tmp[747725]))
        if call_tmp[747730]
        {
          (539644 'move' ret[539632](539643 'coerce' 0 bool[10]))
          gotoReturn _end_==[539630] _end_==[539630]
        }
        label _continueLabel[304596]
        _indexOfInterest[304591]
        _iterator[304592]
      }
      label _breakLabel[304597]
    }
    (539650 'move' ret[539632](539649 'coerce' 1 bool[10]))
    label _end_==[539630]
    (539634 return ret[539632])
  }
  where {
    unknown call_tmp[747735] "expr temp" "maybe param" "maybe type" "temp"
    (747738 'move' call_tmp[747735](468005 'query' a[304530] 1))
    unknown call_tmp[747740] "expr temp" "maybe param" "maybe type" "temp"
    (747743 'move' call_tmp[747740](468002 'query' b[304540] 1))
    unknown call_tmp[747745] "expr temp" "maybe param" "maybe type" "temp"
    (747748 'move' call_tmp[747745](468008 call == call_tmp[747735] call_tmp[747740]))
    (468012 call & 1 call_tmp[747745])
  }
  { scopeless type
    bool[10]
  }
  function !=[304651](arg a[304648]:list[304222](?), arg b[304658]:list[304222](?)) : _unknown[51] "compiler added where"
  {
    unknown ret[539654] "RVV" "temp"
    unknown call_tmp[747750] "expr temp" "maybe param" "maybe type" "temp"
    (747753 'move' call_tmp[747750](304664 call == a[304648] b[304658]))
    unknown call_tmp[747755] "expr temp" "maybe param" "maybe type" "temp"
    (747758 'move' call_tmp[747755](304666 call ! call_tmp[747750]))
    (539660 'move' ret[539654](539659 'coerce' call_tmp[747755] bool[10]))
    (539656 return ret[539654])
  }
  where {
    unknown call_tmp[747760] "expr temp" "maybe param" "maybe type" "temp"
    (747763 'move' call_tmp[747760](468037 'query' a[304648] 1))
    unknown call_tmp[747765] "expr temp" "maybe param" "maybe type" "temp"
    (747768 'move' call_tmp[747765](468034 'query' b[304658] 1))
    unknown call_tmp[747770] "expr temp" "maybe param" "maybe type" "temp"
    (747773 'move' call_tmp[747770](468040 call == call_tmp[747760] call_tmp[747765]))
    (468044 call & 1 call_tmp[747770])
  }
  { scopeless type
    bool[10]
  }
  (355554 'used modules list'(353102 'use' ChapelStandard[20267])(298247 'import' ChapelLocks[187302])(298251 'use' HaltWrappers[210018])(298254 'use' Sort[267989])(298467 'use' IO[230912]))
  (364936 'referenced modules list' ChapelLocks[187302] Sort[267989])
}