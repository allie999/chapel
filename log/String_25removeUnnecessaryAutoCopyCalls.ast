AST dump for String after pass removeUnnecessaryAutoCopyCalls.
Module use list: ChapelStandard SysCTypes ByteBufferHelpers BytesStringCommon SysBasic CString StringCasts NVStringFactory 

{
  type _class_localson_fn[2056980] val _runtime_hdr[2056981]:chpl_comm_on_bundle_t[209359] val _0_tmp[2056983]:chpl_localeID_t[209352] val _1_needle_data[2056985]:__serializeHelper[28089] ref _2_this[2056987]:string[26] val _3_region[2056989]:range(byteIndex,boundedLow,false)[1143422] ref _4_ret[2056991]:int(64)[13]
  type _class_localson_fn[2056412] val _runtime_hdr[2056413]:chpl_comm_on_bundle_t[209359] val _0_tmp[2056415]:chpl_localeID_t[209352] val _1_needle_data[2056417]:__serializeHelper[28089] ref _2_this[2056419]:string[26] val _3_region[2056421]:range(byteIndex,bounded,false)[1025811] ref _4_ret[2056423]:int(64)[13]
  type _class_localson_fn[2050973] val _runtime_hdr[2050974]:chpl_comm_on_bundle_t[209359] val _0_tmp[2050976]:chpl_localeID_t[209352] ref _1_this[2050978]:string[26] ref _2_result[2050980]:bool[10]
  type _class_localson_fn[2050881] val _runtime_hdr[2050882]:chpl_comm_on_bundle_t[209359] val _0_tmp[2050884]:chpl_localeID_t[209352] ref _1_this[2050886]:string[26]
  function chpl__init_String[415956]() : void[4] "insert line file info" "module init" "resolved"
  {
    {
    }
    (505085 return _void[55])
  }
  def module NVStringFactory[30567]  
  const-val CHPL_SHORT_STRING_SIZE[28016]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  function _ref(chpl__inPlaceBuffer)[967459].deinit[752980](const  ref arg this[752984]:_ref(chpl__inPlaceBuffer)[967459]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved"
  {
    (752992 return _void[55])
  }
  type chpl__inPlaceBuffer[28022]
  function chpl__getInPlaceBufferData[28033](const  ref arg data[28030]:_ref(chpl__inPlaceBuffer)[967459]) : c_ptr(uint(8))[937442] "extern" "local args" "no fn body" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[502962]:c_ptr(uint(8))[937442] "RVV" "temp"
    (502964 return ret[502962])
  }
  function chpl__getInPlaceBufferDataForWrite[28045](ref arg data[28042]:_ref(chpl__inPlaceBuffer)[967459]) : c_ptr(uint(8))[937442] "extern" "local args" "no fn body" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[502968]:c_ptr(uint(8))[937442] "RVV" "temp"
    (502970 return ret[502968])
  }
  function _ref(__serializeHelper)[938036].buffLen[753493](ref arg this[753497]:_ref(__serializeHelper)[938036]) ref : _ref(int(64))[936591] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[753507]:_ref(int(64))[936591] "dead after last mention" "RVV" "temp"
    ref call_tmp[753514]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
    (753517 'move' call_tmp[753514](753501 '.' this[753497] buffLen[28058]))
    (753512 'move' ret[753507] call_tmp[753514])
    (753509 return ret[753507])
  }
  function _ref(__serializeHelper)[938036].buff[753519](ref arg this[753523]:_ref(__serializeHelper)[938036]) ref : _ref(c_ptr(uint(8)))[937451] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[753533]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "RVV" "temp"
    ref call_tmp[753540]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "maybe param" "temp"
    (753543 'move' call_tmp[753540](753527 '.' this[753523] buff[28063]))
    (753538 'move' ret[753533] call_tmp[753540])
    (753535 return ret[753533])
  }
  function _ref(__serializeHelper)[938036].size[753545](ref arg this[753549]:_ref(__serializeHelper)[938036]) ref : _ref(int(64))[936591] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[753559]:_ref(int(64))[936591] "dead after last mention" "RVV" "temp"
    ref call_tmp[753566]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
    (753569 'move' call_tmp[753566](753553 '.' this[753549] size[28068]))
    (753564 'move' ret[753559] call_tmp[753566])
    (753561 return ret[753559])
  }
  function _ref(__serializeHelper)[938036].locale_id[753571](ref arg this[753575]:_ref(__serializeHelper)[938036]) ref : _ref(int(32))[936645] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[753585]:_ref(int(32))[936645] "dead after last mention" "RVV" "temp"
    ref call_tmp[753592]:_ref(int(32))[936645] "dead after last mention" "maybe param" "temp"
    (753595 'move' call_tmp[753592](753579 '.' this[753575] locale_id[28074]))
    (753590 'move' ret[753585] call_tmp[753592])
    (753587 return ret[753585])
  }
  function _ref(__serializeHelper)[938036].shortData[753597](ref arg this[753601]:_ref(__serializeHelper)[938036]) ref : _ref(chpl__inPlaceBuffer)[967459] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[753611]:_ref(chpl__inPlaceBuffer)[967459] "dead after last mention" "RVV" "temp"
    ref call_tmp[753618]:_ref(chpl__inPlaceBuffer)[967459] "dead after last mention" "maybe param" "temp"
    (753621 'move' call_tmp[753618](753605 '.' this[753601] shortData[28079]))
    (753616 'move' ret[753611] call_tmp[753618])
    (753613 return ret[753611])
  }
  function _ref(__serializeHelper)[938036].cachedNumCodepoints[753623](ref arg this[753627]:_ref(__serializeHelper)[938036]) ref : _ref(int(64))[936591] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[753637]:_ref(int(64))[936591] "dead after last mention" "RVV" "temp"
    ref call_tmp[753644]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
    (753647 'move' call_tmp[753644](753631 '.' this[753627] cachedNumCodepoints[28084]))
    (753642 'move' ret[753637] call_tmp[753644])
    (753639 return ret[753637])
  }
  function _ref(__serializeHelper)[938036].init[753649](ref arg this[753652]:_ref(__serializeHelper)[938036], in arg buffLen[753655]:int(64)[13], in arg buff[753668]:c_ptr(uint(8))[937442], in arg size[753681]:int(64)[13], in arg locale_id[753694]:int(32)[95], in arg shortData[753708]:chpl__inPlaceBuffer[28022], in arg cachedNumCodepoints[753721]:int(64)[13]) : void[4] "compiler generated" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    (753735 '.=' this[753652] buffLen[28058] buffLen[753655])
    (753738 '.=' this[753652] buff[28063] buff[753668])
    (753741 '.=' this[753652] size[28068] size[753681])
    (753744 '.=' this[753652] locale_id[28074] locale_id[753694])
    (753747 '.=' this[753652] shortData[28079] shortData[753708])
    (753750 '.=' this[753652] cachedNumCodepoints[28084] cachedNumCodepoints[753721])
    (753756 return _void[55])
  }
  function _ref(__serializeHelper)[938036].deinit[753937](const  ref arg this[753941]:_ref(__serializeHelper)[938036]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved"
  {
    label _enddeinit[1788066]
    ref _field_destructor_tmp_[1788064]:_ref(chpl__inPlaceBuffer)[967459] "temp"
    (1788071 'move' _field_destructor_tmp_[1788064](1788068 '.' this[753941] shortData[28079]))
    (1788073 call deinit[752980] _field_destructor_tmp_[1788064])
    (753949 return _void[55])
  }
  type __serializeHelper[28089] val buffLen[28058]:int(64)[13] val buff[28063]:c_ptr(uint(8))[937442] val size[28068]:int(64)[13] val locale_id[28074]:int(32)[95] val shortData[28079]:chpl__inPlaceBuffer[28022] val cachedNumCodepoints[28084]:int(64)[13]
  function _ref(byteIndex)[948778].init[28100](ref arg this[28175]:_ref(byteIndex)[948778]) : void[4] "method" "primary method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    val tmp[453728]:int(64)[13] "dead after last mention" "temp"
    (1029764 'move' tmp[453728] 0)
    (453733 '.=' this[28175] _bindex[28094] tmp[453728])
    (502972 return _void[55])
  }
  function _ref(byteIndex)[948778].init=[28148](ref arg this[28187]:_ref(byteIndex)[948778], const in arg i[28145]:int(64)[13]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    val tmp[453755]:int(64)[13] "dead after last mention" "temp"
    (453758 'move' tmp[453755] i[28145])
    (453760 '.=' this[28187] _bindex[28094] tmp[453755])
    (502978 return _void[55])
  }
  function _ref(byteIndex)[948778].writeThis[1068639](const  ref arg this[1068643]:_ref(byteIndex)[948778], const  ref arg f[1068645]:channel(true,dynamic,false)[1060966], ref arg error_out[1784512]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    ref call_tmp[1068651]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
    (1068653 'move' call_tmp[1068651](1068656 call _bindex[757761] this[1068643]))
    const-val coerce_tmp[1068733]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1068737 'move' coerce_tmp[1068733](1068735 'deref' call_tmp[1068651]))
    ref _return_tmp_[1775041]:_ref(channel(true,dynamic,false))[1060975] "dead after last mention" "temp"
    val error[1784517]:Error[167984] "error variable" "temp"
    (1784519 'move' error[1784517] nil[44])
    (1775043 'move' _return_tmp_[1775041](1068660 call <~>[1068667] f[1068645] coerce_tmp[1068733] error[1784517]))
    val errorExists[2073265]:bool[10] "temp"
    (2073270 'move' errorExists[2073265](2073267 '!=' error[1784517] nil[44]))
    if errorExists[2073265]
    {
      (1784523 '=' error_out[1784512] error[1784517])
      gotoErrorHandlingReturn _endwriteThis[1784514] _endwriteThis[1784514]
    }
    label _endwriteThis[1784514]
    (1068663 return _void[55])
  }
  function _ref(byteIndex)[948778]._bindex[757761](ref arg this[757765]:_ref(byteIndex)[948778]) ref : _ref(int(64))[936591] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[757775]:_ref(int(64))[936591] "dead after last mention" "RVV" "temp"
    ref call_tmp[757782]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
    (757785 'move' call_tmp[757782](757769 '.' this[757765] _bindex[28094]))
    (757780 'move' ret[757775] call_tmp[757782])
    (757777 return ret[757775])
  }
  function _ref(byteIndex)[948778].deinit[757787](const  ref arg this[757791]:_ref(byteIndex)[948778]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free"
  {
    (757799 return _void[55])
  }
  type byteIndex[28173] val _bindex[28094]:int(64)[13] "no doc"
  function _ref(codepointIndex)[948788].init[28204](ref arg this[28279]:_ref(codepointIndex)[948788]) : void[4] "method" "primary method" "no doc" "resolved" "no return value for void"
  {
    val tmp[453765]:int(64)[13] "dead after last mention" "temp"
    (1157069 'move' tmp[453765] 0)
    (453770 '.=' this[28279] _cpindex[28198] tmp[453765])
    (502982 return _void[55])
  }
  function _ref(codepointIndex)[948788].writeThis[1175364](const  ref arg this[1175368]:_ref(codepointIndex)[948788], const  ref arg f[1175370]:channel(true,dynamic,false)[1060966], ref arg error_out[1785611]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    ref call_tmp[1175376]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
    (1175378 'move' call_tmp[1175376](1175381 call _cpindex[757833] this[1175368]))
    const-val coerce_tmp[1175392]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1175396 'move' coerce_tmp[1175392](1175394 'deref' call_tmp[1175376]))
    ref _return_tmp_[1775057]:_ref(channel(true,dynamic,false))[1060975] "dead after last mention" "temp"
    val error[1785616]:Error[167984] "error variable" "temp"
    (1785618 'move' error[1785616] nil[44])
    (1775059 'move' _return_tmp_[1775057](1175385 call <~>[1068667] f[1175370] coerce_tmp[1175392] error[1785616]))
    val errorExists[2073809]:bool[10] "temp"
    (2073814 'move' errorExists[2073809](2073811 '!=' error[1785616] nil[44]))
    if errorExists[2073809]
    {
      (1785622 '=' error_out[1785611] error[1785616])
      gotoErrorHandlingReturn _endwriteThis[1785613] _endwriteThis[1785613]
    }
    label _endwriteThis[1785613]
    (1175388 return _void[55])
  }
  function _ref(codepointIndex)[948788]._cpindex[757833](ref arg this[757837]:_ref(codepointIndex)[948788]) ref : _ref(int(64))[936591] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[757847]:_ref(int(64))[936591] "dead after last mention" "RVV" "temp"
    ref call_tmp[757854]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
    (757857 'move' call_tmp[757854](757841 '.' this[757837] _cpindex[28198]))
    (757852 'move' ret[757847] call_tmp[757854])
    (757849 return ret[757847])
  }
  function _ref(codepointIndex)[948788].deinit[757859](const  ref arg this[757863]:_ref(codepointIndex)[948788]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved"
  {
    (757871 return _void[55])
  }
  type codepointIndex[28277] val _cpindex[28198]:int(64)[13] "no doc"
  function chpl_build_bounded_range[1123273](const  ref arg low[1123275]:byteIndex[28173], const  ref arg high[1123280]:byteIndex[28173], ref arg _retArg[1807461]:_ref(range(byteIndex,bounded,false))[1025820]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1123364]:range(byteIndex,bounded,false)[1025811] "dead after last mention" "RVV" "temp"
    val call_tmp[1123387]:byteIndex[28173] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1123393]:range(byteIndex,bounded,false)[1025811] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1123412]:range(byteIndex,bounded,false)[1025811] "dead after last mention" "delay instantiation" "temp"
    const-val default_arg__stride[1123491]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (1123495 'move' default_arg__stride[1123491](1123493 call init_default__stride[1029831]))
    const-val default_arg__alignment[1123499]:byteIndex[28173] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val ret_tmp[1805994]:byteIndex[28173] "temp"
    (1123501 call init_default__alignment[1029871] ret_tmp[1805994])
    (1805997 'move' default_arg__alignment[1123499] ret_tmp[1805994])
    (1123415 call init[1028727] initTemp[1123412] low[1123275] high[1123280] default_arg__stride[1123491] default_arg__alignment[1123499] 0)
    (1123395 'move' call_tmp[1123393] initTemp[1123412])
    (1123404 'move' ret[1123364] call_tmp[1123393])
    (1807463 '=' _retArg[1807461] ret[1123364])
    (1817679 call chpl__autoDestroy[1435583] default_arg__alignment[1123499])
    (1807465 return _void[55])
  }
  function chpl_build_low_bounded_range[1142729](const  ref arg low[1142731]:byteIndex[28173], ref arg _retArg[1807689]:_ref(range(byteIndex,boundedLow,false))[1143466]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1142815]:range(byteIndex,boundedLow,false)[1143422] "dead after last mention" "RVV" "temp"
    val call_tmp[1142834]:byteIndex[28173] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1142840]:range(byteIndex,boundedLow,false)[1143422] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1142858]:range(byteIndex,boundedLow,false)[1143422] "dead after last mention" "delay instantiation" "temp"
    const-val default_arg__high[1143631]:byteIndex[28173] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val ret_tmp[1807695]:byteIndex[28173] "temp"
    (1143633 call init_default__high[1143607] ret_tmp[1807695])
    (1807698 'move' default_arg__high[1143631] ret_tmp[1807695])
    const-val default_arg__stride[1143672]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (1143676 'move' default_arg__stride[1143672](1143674 call init_default__stride[1143640]))
    const-val default_arg__alignment[1143704]:byteIndex[28173] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val ret_tmp[1807707]:byteIndex[28173] "temp"
    (1143706 call init_default__alignment[1143680] ret_tmp[1807707])
    (1807710 'move' default_arg__alignment[1143704] ret_tmp[1807707])
    (1142861 call init[1142869] initTemp[1142858] low[1142731] default_arg__high[1143631] default_arg__stride[1143672] default_arg__alignment[1143704] 0)
    (1142842 'move' call_tmp[1142840] initTemp[1142858])
    (1142850 'move' ret[1142815] call_tmp[1142840])
    (1807691 '=' _retArg[1807689] ret[1142815])
    (1817911 call chpl__autoDestroy[1435583] default_arg__alignment[1143704])
    (1817914 call chpl__autoDestroy[1435583] default_arg__high[1143631])
    (1807693 return _void[55])
  }
  function chpl_build_high_bounded_range[1184245](const  ref arg high[1184247]:byteIndex[28173], ref arg _retArg[1808041]:_ref(range(byteIndex,boundedHigh,false))[1184982]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1184331]:range(byteIndex,boundedHigh,false)[1184938] "dead after last mention" "RVV" "temp"
    val call_tmp[1184350]:byteIndex[28173] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1184356]:range(byteIndex,boundedHigh,false)[1184938] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1184374]:range(byteIndex,boundedHigh,false)[1184938] "dead after last mention" "delay instantiation" "temp"
    const-val default_arg__low[1185147]:byteIndex[28173] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val ret_tmp[1808047]:byteIndex[28173] "temp"
    (1185149 call init_default__low[1185123] ret_tmp[1808047])
    (1808050 'move' default_arg__low[1185147] ret_tmp[1808047])
    const-val default_arg__stride[1185188]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (1185192 'move' default_arg__stride[1185188](1185190 call init_default__stride[1185156]))
    const-val default_arg__alignment[1185220]:byteIndex[28173] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val ret_tmp[1808059]:byteIndex[28173] "temp"
    (1185222 call init_default__alignment[1185196] ret_tmp[1808059])
    (1808062 'move' default_arg__alignment[1185220] ret_tmp[1808059])
    (1184377 call init[1184385] initTemp[1184374] default_arg__low[1185147] high[1184247] default_arg__stride[1185188] default_arg__alignment[1185220] 0)
    (1184358 'move' call_tmp[1184356] initTemp[1184374])
    (1184366 'move' ret[1184331] call_tmp[1184356])
    (1808043 '=' _retArg[1808041] ret[1184331])
    (1820180 call chpl__autoDestroy[1435583] default_arg__alignment[1185220])
    (1820183 call chpl__autoDestroy[1435583] default_arg__low[1185147])
    (1808045 return _void[55])
  }
  function chpl__idxToInt[1029188](const  ref arg i[1029190]:byteIndex[28173]) : int(64)[13] "inline" "instantiated generic" "invisible fn" "no doc" "resolved" "fn synchronization free"
  {
    val ret[1029274]:int(64)[13] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1029286]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1029288 'move' call_tmp[1029286](1029291 call _cast[39465] i[1029190]))
    (1029294 'move' ret[1029274] call_tmp[1029286])
    (1029298 return ret[1029274])
  }
  function chpl__intToIdx[28505](const in arg i[28508]:int(64)[13], ref arg _retArg[1791540]:_ref(byteIndex)[948778]) : void[4] "fn returns via _retArg" "inline" "no doc" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1778836]:byteIndex[28173] "temp"
    const-val ret[503066]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    const-val call_tmp[597566]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1803734]:byteIndex[28173] "temp"
    (28513 call _cast[39486] i[28508] ret_tmp[1803734])
    (1803737 'move' call_tmp[597566] ret_tmp[1803734])
    (503071 'move' ret[503066] call_tmp[597566])
    (1791542 '=' _retArg[1791540] ret[503066])
    (1791544 return _void[55])
  }
  function >[28575](const  ref arg x[28572]:byteIndex[28173], const  ref arg y[28578]:byteIndex[28173]) : bool[10] "inline" "no doc" "resolved" "fn synchronization free"
  {
    val ret[503102]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[597576]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (597579 'move' call_tmp[597576](28583 call _cast[39465] x[28572]))
    const-val call_tmp[597581]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (597584 'move' call_tmp[597581](28587 call _cast[39465] y[28578]))
    const-val call_tmp[597586]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (597589 'move' call_tmp[597586](28589 call >[437710] call_tmp[597576] call_tmp[597581]))
    (503107 'move' ret[503102] call_tmp[597586])
    (503104 return ret[503102])
  }
  function +[28725](const  ref arg x[28722]:byteIndex[28173], const in arg y[28728]:int(64)[13], ref arg _retArg[1791582]:_ref(byteIndex)[948778]) : void[4] "fn returns via _retArg" "inline" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[503156]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    const-val call_tmp[597646]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (597649 'move' call_tmp[597646](28733 call _cast[39465] x[28722]))
    const-val call_tmp[597651]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (597654 'move' call_tmp[597651](28736 call +[439674] call_tmp[597646] y[28728]))
    const-val call_tmp[597656]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1803740]:byteIndex[28173] "temp"
    (28739 call _cast[39486] call_tmp[597651] ret_tmp[1803740])
    (1803743 'move' call_tmp[597656] ret_tmp[1803740])
    (503161 'move' ret[503156] call_tmp[597656])
    (1791584 '=' _retArg[1791582] ret[503156])
    (1791586 return _void[55])
  }
  function -[28857](const  ref arg x[28854]:byteIndex[28173], const in arg y[28860]:int(64)[13], ref arg _retArg[1791618]:_ref(byteIndex)[948778]) : void[4] "fn returns via _retArg" "inline" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[503201]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    const-val call_tmp[597716]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (597719 'move' call_tmp[597716](28865 call _cast[39465] x[28854]))
    const-val call_tmp[597721]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (597724 'move' call_tmp[597721](28868 call -[440454] call_tmp[597716] y[28860]))
    const-val call_tmp[597726]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1803746]:byteIndex[28173] "temp"
    (28871 call _cast[39486] call_tmp[597721] ret_tmp[1803746])
    (1803749 'move' call_tmp[597726] ret_tmp[1803746])
    (503206 'move' ret[503201] call_tmp[597726])
    (1791620 '=' _retArg[1791618] ret[503201])
    (1791622 return _void[55])
  }
  function <[29043](const  ref arg x[29040]:codepointIndex[28277], const in arg y[29046]:int(64)[13]) : bool[10] "inline" "no doc" "resolved"
  {
    val ret[503264]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[597816]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (597819 'move' call_tmp[597816](29051 call _cast[39517] x[29040]))
    const-val call_tmp[597821]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (597824 'move' call_tmp[597821](29054 call <[437490] call_tmp[597816] y[29046]))
    (503269 'move' ret[503264] call_tmp[597821])
    (503266 return ret[503264])
  }
  function >=[29193](const  ref arg x[29190]:codepointIndex[28277], const in arg y[29196]:int(64)[13]) : bool[10] "inline" "no doc" "resolved"
  {
    val ret[503318]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[597886]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (597889 'move' call_tmp[597886](29201 call _cast[39517] x[29190]))
    const-val call_tmp[597891]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (597894 'move' call_tmp[597891](29204 call >=[437270] call_tmp[597886] y[29196]))
    (503323 'move' ret[503318] call_tmp[597891])
    (503320 return ret[503318])
  }
  function ==[29469](const  ref arg x[29466]:byteIndex[28173], const in arg y[29472]:int(64)[13]) : bool[10] "inline" "no doc" "resolved" "fn synchronization free"
  {
    val ret[503417]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[598016]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (598019 'move' call_tmp[598016](29477 call _cast[39465] x[29466]))
    const-val call_tmp[598021]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (598024 'move' call_tmp[598021](29480 call ==[435666] call_tmp[598016] y[29472]))
    (503422 'move' ret[503417] call_tmp[598021])
    (503419 return ret[503417])
  }
  function ==[29541](const in arg x[29538]:int(64)[13], const  ref arg y[29544]:codepointIndex[28277]) : bool[10] "inline" "no doc" "resolved" "fn synchronization free"
  {
    val ret[503444]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[598046]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (598049 'move' call_tmp[598046](29550 call _cast[39517] y[29544]))
    const-val call_tmp[598051]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (598054 'move' call_tmp[598051](29552 call ==[435666] x[29538] call_tmp[598046]))
    (503449 'move' ret[503444] call_tmp[598051])
    (503446 return ret[503444])
  }
  function !=[29619](const  ref arg x[29616]:byteIndex[28173], const in arg y[29622]:int(64)[13]) : bool[10] "inline" "no doc" "resolved"
  {
    val ret[503471]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[598086]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (598089 'move' call_tmp[598086](29627 call _cast[39465] x[29616]))
    const-val call_tmp[598091]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (598094 'move' call_tmp[598091](29630 call !=[436050] call_tmp[598086] y[29622]))
    (503476 'move' ret[503471] call_tmp[598091])
    (503473 return ret[503471])
  }
  function validateEncoding[986659](const in arg buf[986661]:c_ptr(uint(8))[937442], const in arg len[986663]:int(64)[13], ref arg error_out[1783483]:Error[167984]) : int(64)[13] throws "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[986667]:int(64)[13] "dead after last mention" "RVV" "temp"
    val numCodepoints[986693]:int(64)[13] "dead at end of block" "insert auto destroy"
    (987024 'move' numCodepoints[986693] 0)
    const-val call_tmp[986699]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (986701 'move' call_tmp[986699](986704 call chpl_enc_validate_buf[986756] buf[986661] len[986663] numCodepoints[986693]))
    const-val call_tmp[986708]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[986781]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (986787 'move' coerce_tmp[986781](986783 'cast' int(32)[95] 0))
    (986710 'move' call_tmp[986708](986713 call !=[436028] call_tmp[986699] coerce_tmp[986781]))
    const-val call_tmp[986716]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (986718 'move' call_tmp[986716] call_tmp[986708])
    if call_tmp[986716]
    {
      const-val call_tmp[986725]:owned DecodeError[966300] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
      val new_temp[986806]:DecodeError[168140] "dead after last mention" "temp"
      (986808 'move' new_temp[986806](986794 call _new[965661]))
      const-val initTemp[986815]:owned DecodeError[966300] "dead after last mention" "delay instantiation" "temp"
      (986818 call init[965760] initTemp[986815] new_temp[986806])
      (986727 'move' call_tmp[986725] initTemp[986815])
      val call_tmp[986731]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[986832]:owned Error[966477] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1805432]:owned Error[966477] "temp"
      (986834 call _cast[966562] call_tmp[986725] ret_tmp[1805432])
      (1805435 'move' coerce_tmp[986832] ret_tmp[1805432])
      const-val _formal_tmp_in_err[987011]:owned Error[966477] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (987015 'move' _formal_tmp_in_err[987011] coerce_tmp[986832])
      (986733 'move' call_tmp[986731](986736 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[987011]))
      {
        val castedError[1783486]:Error[167984] "temp"
        (1783492 'move' castedError[1783486] call_tmp[986731])
        (1783494 '=' error_out[1783483] castedError[1783486])
        gotoErrorHandlingReturn _end_validateEncoding[986750] _end_validateEncoding[986750]
      }
    }
    (987021 'move' ret[986667] numCodepoints[986693])
    gotoReturn _end_validateEncoding[986750] _end_validateEncoding[986750]
    label _end_validateEncoding[986750]
    (986752 return ret[986667])
  }
  function createStringWithBorrowedBuffer[29902](const  ref arg x[29899]:string[26], ref arg _retArg[1791630]:_ref(string)[937958]) : void[4] "fn returns via _retArg" "inline" "resolved" "fn synchronization free"
  {
    const-val ret[503565]:string[26] "dead after last mention" "RVV" "temp"
    val ret[29905]:string[26] "dead at end of block" "insert auto destroy"
    (954304 call init[30763] ret[29905])
    ref call_tmp[598183]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
    (598186 'move' call_tmp[598183](29913 call cachedNumCodepoints[757957] ret[29905]))
    ref call_tmp[598190]:_ref(int(64))[936591] "dead after last mention" "maybe param" "reference to a const" "temp"
    (598193 'move' call_tmp[598190](29917 call cachedNumCodepoints[757957] x[29899]))
    const-val coerce_tmp[948886]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (948890 'move' coerce_tmp[948886](948888 'deref' call_tmp[598190]))
    (29920 call =[435365] call_tmp[598183] coerce_tmp[948886])
    (29927 call initWithBorrowedBuffer[948893] ret[29905] x[29899])
    (503570 'move' ret[503565] ret[29905])
    gotoReturn _end_createStringWithBorrowedBuffer[503563] _end_createStringWithBorrowedBuffer[503563]
    label _end_createStringWithBorrowedBuffer[503563]
    (1791632 '=' _retArg[1791630] ret[503565])
    (1791634 return _void[55])
  }
  function chpl_createStringWithLiteral[30032](const in arg x[30029]:c_string[19], const in arg length[30035]:int(64)[13], const in arg numCodepoints[30039]:int(64)[13], ref arg _retArg[1802370]:_ref(string)[937958]) : void[4] "fn returns via _retArg" "no doc" "resolved"
  {
    const-val ret[503603]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[598234]:uint(8)[100] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[598239]:c_ptr(uint(8))[937442] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[598244]:c_ptr(uint(8))[937442] "dead after last mention" "expr temp" "maybe param" "temp"
    (598247 'move' call_tmp[598244](30051 call _cast[39395] x[30029]))
    const-val call_tmp[598249]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (598252 'move' call_tmp[598249](30058 call +[949685] length[30035]))
    const-val call_tmp[598254]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1802550]:string[26] "temp"
    (30063 call chpl_createStringWithBorrowedBufferNV[30629] call_tmp[598244] length[30035] call_tmp[598249] numCodepoints[30039] ret_tmp[1802550])
    (1802553 'move' call_tmp[598254] ret_tmp[1802550])
    (503608 'move' ret[503603] call_tmp[598254])
    (1802372 '=' _retArg[1802370] ret[503603])
    (1802374 return _void[55])
  }
  function createStringWithOwnedBuffer[30210](const in arg x[30207]:c_string[19], const in arg length[30216]:int(64)[13], ref arg error_out[1782339]:Error[167984], ref arg _retArg[1802394]:_ref(string)[937958]) : void[4] throws "fn returns via _retArg" "inline" "resolved"
  {
    const-val ret[503643]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[598283]:c_ptr(uint(8))[937442] "dead after last mention" "expr temp" "maybe param" "temp"
    (598286 'move' call_tmp[598283](30222 call _cast[39395] x[30207]))
    const-val call_tmp[598288]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (598291 'move' call_tmp[598288](30229 call +[949685] length[30216]))
    const-val call_tmp[598293]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[1782344]:Error[167984] "error variable" "temp"
    (1782346 'move' error[1782344] nil[44])
    const-val ret_tmp[1802400]:string[26] "temp"
    (30232 call createStringWithOwnedBuffer[30274] call_tmp[598283] length[30216] call_tmp[598288] error[1782344] ret_tmp[1802400])
    (1802403 'move' call_tmp[598293] ret_tmp[1802400])
    val errorExists[2072169]:bool[10] "temp"
    (2072174 'move' errorExists[2072169](2072171 '!=' error[1782344] nil[44]))
    if errorExists[2072169]
    {
      (1782350 '=' error_out[1782339] error[1782344])
      gotoErrorHandlingReturn _endcreateStringWithOwnedBuffer[1782341] _endcreateStringWithOwnedBuffer[1782341]
    }
    (503648 'move' ret[503643] call_tmp[598293])
    label _endcreateStringWithOwnedBuffer[1782341]
    (1802396 '=' _retArg[1802394] ret[503643])
    (1802398 return _void[55])
  }
  function createStringWithOwnedBuffer_default_length[986621](const in arg x[986623]:c_string[19], ref arg error_out[1783479]:Error[167984]) : int(64)[13] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "resolved"
  {
    val ret[986625]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val length[986630]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (986637 'move' length[986630](986634 call size[22361] x[986623]))
    (986641 'move' ret[986625] length[986630])
    label _endcreateStringWithOwnedBuffer_default_length[1783481]
    (986628 return ret[986625])
  }
  function createStringWithOwnedBuffer[30274](const in arg x[30271]:c_ptr(uint(8))[937442], const in arg length[30277]:int(64)[13], const in arg size[30281]:int(64)[13], ref arg error_out[1782358]:Error[167984], ref arg _retArg[1802406]:_ref(string)[937958]) : void[4] throws "fn returns via _retArg" "inline" "resolved"
  {
    const-val ret[503661]:string[26] "dead after last mention" "RVV" "temp"
    val ret[30285]:string[26] "dead at end of block" "insert auto destroy"
    (987028 call init[30763] ret[30285])
    ref call_tmp[598307]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
    (598310 'move' call_tmp[598307](30291 call cachedNumCodepoints[757957] ret[30285]))
    const-val call_tmp[598312]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val error[1782361]:Error[167984] "error variable" "temp"
    (1782363 'move' error[1782361] nil[44])
    (598315 'move' call_tmp[598312](30298 call validateEncoding[986659] x[30271] length[30277] error[1782361]))
    val errorExists[2072177]:bool[10] "temp"
    (2072182 'move' errorExists[2072177](2072179 '!=' error[1782361] nil[44]))
    if errorExists[2072177]
    {
      (1782367 '=' error_out[1782358] error[1782361])
      (1814918 call chpl__autoDestroy[1435320] ret[30285])
      gotoErrorHandlingReturn _end_createStringWithOwnedBuffer[503659] _end_createStringWithOwnedBuffer[503659]
    }
    (30299 call =[435365] call_tmp[598307] call_tmp[598312])
    (30308 call initWithOwnedBuffer[978914] ret[30285] x[30271] length[30277] size[30281])
    (503666 'move' ret[503661] ret[30285])
    gotoReturn _end_createStringWithOwnedBuffer[503659] _end_createStringWithOwnedBuffer[503659]
    label _end_createStringWithOwnedBuffer[503659]
    (1802408 '=' _retArg[1802406] ret[503661])
    (1802410 return _void[55])
  }
  function createStringWithNewBuffer[30413](const in arg x[30410]:c_string[19], const in arg length[30419]:int(64)[13], const in arg policy[30426]:decodePolicy[173702], ref arg error_out[1782375]:Error[167984], ref arg _retArg[1802502]:_ref(string)[937958]) : void[4] throws "fn returns via _retArg" "inline" "resolved"
  {
    const-val ret[503701]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[598343]:c_ptr(uint(8))[937442] "dead after last mention" "expr temp" "maybe param" "temp"
    (598346 'move' call_tmp[598343](30432 call _cast[39395] x[30410]))
    const-val call_tmp[598348]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (598351 'move' call_tmp[598348](30439 call +[949685] length[30419]))
    const-val call_tmp[598353]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[1782380]:Error[167984] "error variable" "temp"
    (1782382 'move' error[1782380] nil[44])
    const-val ret_tmp[1802508]:string[26] "temp"
    (30443 call createStringWithNewBuffer[30493] call_tmp[598343] length[30419] call_tmp[598348] policy[30426] error[1782380] ret_tmp[1802508])
    (1802511 'move' call_tmp[598353] ret_tmp[1802508])
    val errorExists[2072185]:bool[10] "temp"
    (2072190 'move' errorExists[2072185](2072187 '!=' error[1782380] nil[44]))
    if errorExists[2072185]
    {
      (1782386 '=' error_out[1782375] error[1782380])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[1782377] _endcreateStringWithNewBuffer[1782377]
    }
    (503706 'move' ret[503701] call_tmp[598353])
    label _endcreateStringWithNewBuffer[1782377]
    (1802504 '=' _retArg[1802502] ret[503701])
    (1802506 return _void[55])
  }
  function createStringWithNewBuffer_default_length[964065](const in arg x[964067]:c_string[19], ref arg error_out[1783467]:Error[167984]) : int(64)[13] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "resolved" "fn synchronization free"
  {
    val ret[964069]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val length[964074]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (964081 'move' length[964074](964078 call size[22361] x[964067]))
    (964085 'move' ret[964069] length[964074])
    label _endcreateStringWithNewBuffer_default_length[1783469]
    (964072 return ret[964069])
  }
  function createStringWithNewBuffer[30493](const in arg x[30490]:c_ptr(uint(8))[937442], const in arg length[30496]:int(64)[13], const in arg size[30503]:int(64)[13], const in arg policy[30510]:decodePolicy[173702], ref arg error_out[1782394]:Error[167984], ref arg _retArg[1802532]:_ref(string)[937958]) : void[4] throws "fn returns via _retArg" "inline" "resolved"
  {
    const-val ret[503719]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[598365]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[1782399]:Error[167984] "error variable" "temp"
    (1782401 'move' error[1782399] nil[44])
    const-val ret_tmp[1804648]:string[26] "temp"
    (30518 call decodeByteBuffer[173938] x[30490] length[30496] policy[30510] error[1782399] ret_tmp[1804648])
    (1804651 'move' call_tmp[598365] ret_tmp[1804648])
    val errorExists[2072193]:bool[10] "temp"
    (2072198 'move' errorExists[2072193](2072195 '!=' error[1782399] nil[44]))
    if errorExists[2072193]
    {
      (1782405 '=' error_out[1782394] error[1782399])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[1782396] _endcreateStringWithNewBuffer[1782396]
    }
    (503724 'move' ret[503719] call_tmp[598365])
    label _endcreateStringWithNewBuffer[1782396]
    (1802534 '=' _retArg[1802532] ret[503719])
    (1802536 return _void[55])
  }
  function _ref(string)[937958].init[30763](ref arg this[32628]:_ref(string)[937958]) : void[4] "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val tmp[453827]:int(64)[13] "dead after last mention" "temp"
    (453830 'move' tmp[453827] 0)
    (453832 '.=' this[32628] buffLen[30722] tmp[453827])
    val tmp[453837]:int(64)[13] "dead after last mention" "temp"
    (453840 'move' tmp[453837] 0)
    (453842 '.=' this[32628] buffSize[30728] tmp[453837])
    val tmp[453847]:int(64)[13] "dead after last mention" "temp"
    (453850 'move' tmp[453847] 0)
    (453852 '.=' this[32628] cachedNumCodepoints[30734] tmp[453847])
    val tmp[453857]:c_ptr(uint(8))[937442] "dead after last mention" "temp"
    val init_coerce_tmp[954318]:c_ptr(uint(8))[937442] "dead after last mention" "temp"
    (954321 'move' init_coerce_tmp[954318](954328 'cast' c_ptr(uint(8))[937442] nil[44]))
    (453860 'move' tmp[453857] init_coerce_tmp[954318])
    (453862 '.=' this[32628] buff[30740] tmp[453857])
    val tmp[453867]:bool[10] "dead after last mention" "temp"
    (453870 'move' tmp[453867] 1)
    (453872 '.=' this[32628] isOwned[30746] tmp[453867])
    val tmp[453877]:bool[10] "dead after last mention" "temp"
    (453880 'move' tmp[453877] 0)
    (453882 '.=' this[32628] hasEscapes[30752] tmp[453877])
    val tmp[453887]:int(32)[95] "dead after last mention" "temp"
    (453889 'move' tmp[453887] chpl_nodeID[208207])
    (453891 '.=' this[32628] locale_id[30757] tmp[453887])
    (503735 return _void[55])
  }
  function _ref(string)[937958].init=[30774](ref arg this[32632]:_ref(string)[937958], const  ref arg s[30771]:string[26]) : void[4] "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val tmp[453896]:int(64)[13] "dead after last mention" "temp"
    (453899 'move' tmp[453896] 0)
    (453901 '.=' this[32632] buffLen[30722] tmp[453896])
    val tmp[453906]:int(64)[13] "dead after last mention" "temp"
    (453909 'move' tmp[453906] 0)
    (453911 '.=' this[32632] buffSize[30728] tmp[453906])
    val tmp[453916]:int(64)[13] "dead after last mention" "temp"
    (453919 'move' tmp[453916] 0)
    (453921 '.=' this[32632] cachedNumCodepoints[30734] tmp[453916])
    val tmp[453926]:c_ptr(uint(8))[937442] "dead after last mention" "temp"
    val init_coerce_tmp[954338]:c_ptr(uint(8))[937442] "dead after last mention" "temp"
    (954341 'move' init_coerce_tmp[954338](957292 'cast' c_ptr(uint(8))[937442] nil[44]))
    (453929 'move' tmp[453926] init_coerce_tmp[954338])
    (453931 '.=' this[32632] buff[30740] tmp[453926])
    val tmp[453936]:bool[10] "dead after last mention" "temp"
    (453939 'move' tmp[453936] 1)
    (453941 '.=' this[32632] isOwned[30746] tmp[453936])
    val tmp[453946]:bool[10] "dead after last mention" "temp"
    (453949 'move' tmp[453946] 0)
    (453951 '.=' this[32632] hasEscapes[30752] tmp[453946])
    val tmp[453956]:int(32)[95] "dead after last mention" "temp"
    (453958 'move' tmp[453956] chpl_nodeID[208207])
    (453960 '.=' this[32632] locale_id[30757] tmp[453956])
    (30788 call initWithNewBuffer[954348] this[32632] s[30771])
    (503737 return _void[55])
  }
  function _ref(string)[937958].deinit[30834](ref arg this[32640]:_ref(string)[937958]) : void[4] "destructor" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    ref tmp[417362]:_ref(bool)[937218] "dead after last mention" "maybe param" "temp"
    (417373 'move' tmp[417362](369703 call isOwned[758009] this[32640]))
    val tmp[552855]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[552856]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[598406]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[938023]:bool[10] "dead after last mention" "const" "temp"
    (938025 'move' tmp[938023](938027 'deref' tmp[417362]))
    (598409 'move' call_tmp[598406] tmp[938023])
    (552861 'move' tmp[552856] call_tmp[598406])
    if tmp[552856]
    {
      const-val tmp[552863]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      ref call_tmp[598413]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "maybe param" "temp"
      (598416 'move' call_tmp[598413](30838 call buff[757983] this[32640]))
      const-val call_tmp[598418]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[938127]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (938131 'move' coerce_tmp[938127](938129 'deref' call_tmp[598413]))
      (598421 'move' call_tmp[598418](30842 call !=[938050] coerce_tmp[938127] nil[44]))
      (552865 'move' tmp[552863] call_tmp[598418])
      (552870 'move' tmp[552855] tmp[552863])
    }
    {
      (552875 'move' tmp[552855] 0)
    }
    const-val call_tmp[598423]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (598426 'move' call_tmp[598423] tmp[552855])
    if call_tmp[598423]
    {
      const-val tmp[30868]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
      ref call_tmp[598430]:_ref(int(32))[936645] "dead after last mention" "maybe param" "temp"
      (598433 'move' call_tmp[598430](30850 call locale_id[758061] this[32640]))
      const-val call_tmp[598435]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val coerce_tmp[938145]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (938149 'move' coerce_tmp[938145](938147 'deref' call_tmp[598430]))
      (598438 'move' call_tmp[598435](30855 call chpl_buildLocaleID[209470] coerce_tmp[938145] c_sublocid_any[89878]))
      const-val call_tmp[598440]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
      (598443 'move' call_tmp[598440](30856 'chpl_on_locale_num' call_tmp[598435]))
      (30870 'move' tmp[30868] call_tmp[598440])
      val isdirect[2050865]:bool[10] "temp"
      (2050870 'move' isdirect[2050865](2050867 call chpl_doDirectExecuteOn[187469] tmp[30868]))
      if isdirect[2050865]
      {
        (2050874 call on_fn[933805] this[32640])
      }
      {
        val _args_foron_fn[2050889]:_class_localson_fn[2050881] "temp"
        (2050893 'move' _args_foron_fn[2050889](2050891 'stack allocate class' _class_localson_fn[2050881]))
        (2050895 '.=' _args_foron_fn[2050889] _0_tmp[2050884] tmp[30868])
        ref tmp[2050899]:string[26] "temp"
        (2050903 'move' tmp[2050899](2050901 'set reference' this[32640]))
        (2050905 '.=' _args_foron_fn[2050889] _1_this[2050886] tmp[2050899])
        val _args_vforon_fn[2050909]:c_void_ptr[149] "temp"
        (2050913 'move' _args_vforon_fn[2050909](2050911 'cast_to_void_star' _args_foron_fn[2050889]))
        val _args_sizeon_fn[2050915]:int(64)[13] "temp"
        (2050919 'move' _args_sizeon_fn[2050915](2050917 'sizeof_bundle' _class_localson_fn[2050881]))
        on(2050951 call wrapon_fn[2050921] tmp[30868] _args_vforon_fn[2050909] _args_sizeon_fn[2050915] _args_foron_fn[2050889])
      }
      {
      }
    }
    (503741 return _void[55])
  }
  function _ref(string)[937958].chpl__serialize[30886](const  ref arg this[32644]:_ref(string)[937958], ref arg _retArg[1802652]:_ref(__serializeHelper)[938036]) : void[4] "fn returns via _retArg" "method" "primary method" "resolved"
  {
    const-val ret[503745]:__serializeHelper[28089] "dead after last mention" "RVV" "temp"
    val data[30889]:chpl__inPlaceBuffer[28022] "dead at end of block" "insert auto destroy"
    ref call_tmp[598454]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
    (598457 'move' call_tmp[598454](369710 call buffLen[757905] this[32644]))
    const-val call_tmp[598459]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1766790]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1766794 'move' coerce_tmp[1766790](1766792 'deref' call_tmp[598454]))
    const-val coerce_tmp[1766796]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1766802 'move' coerce_tmp[1766796](1766798 'cast' int(64)[13] CHPL_SHORT_STRING_SIZE[28016]))
    (598462 'move' call_tmp[598459](30896 call <=[437050] coerce_tmp[1766790] coerce_tmp[1766796]))
    const-val call_tmp[598464]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (598467 'move' call_tmp[598464] call_tmp[598459])
    if call_tmp[598464]
    {
      val call_tmp[598469]:c_ptr(uint(8))[937442] "dead after last mention" "expr temp" "maybe param" "temp"
      (598472 'move' call_tmp[598469](30902 call chpl__getInPlaceBufferDataForWrite[28045] data[30889]))
      ref call_tmp[598476]:_ref(int(32))[936645] "dead after last mention" "maybe param" "temp"
      (598479 'move' call_tmp[598476](369717 call locale_id[758061] this[32644]))
      ref call_tmp[598483]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "maybe param" "temp"
      (598486 'move' call_tmp[598483](369722 call buff[757983] this[32644]))
      ref call_tmp[598490]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
      (598493 'move' call_tmp[598490](369727 call buffLen[757905] this[32644]))
      const-val coerce_tmp[1766809]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1766813 'move' coerce_tmp[1766809](1766811 'deref' call_tmp[598476]))
      const-val coerce_tmp[1766815]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1766821 'move' coerce_tmp[1766815](1766817 'cast' int(64)[13] coerce_tmp[1766809]))
      val coerce_tmp[1766823]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1766827 'move' coerce_tmp[1766823](1766825 'deref' call_tmp[598483]))
      const-val coerce_tmp[1766829]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1766833 'move' coerce_tmp[1766829](1766831 'deref' call_tmp[598490]))
      (30907 call chpl_string_comm_get[954069] call_tmp[598469] coerce_tmp[1766815] coerce_tmp[1766823] coerce_tmp[1766829])
    }
    ref call_tmp[598497]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
    (598500 'move' call_tmp[598497](369733 call buffLen[757905] this[32644]))
    ref call_tmp[598504]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "maybe param" "temp"
    (598507 'move' call_tmp[598504](369738 call buff[757983] this[32644]))
    ref call_tmp[598511]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
    (598514 'move' call_tmp[598511](369743 call buffSize[757931] this[32644]))
    ref call_tmp[598518]:_ref(int(32))[936645] "dead after last mention" "maybe param" "temp"
    (598521 'move' call_tmp[598518](369748 call locale_id[758061] this[32644]))
    ref call_tmp[598525]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
    (598528 'move' call_tmp[598525](369754 call cachedNumCodepoints[757957] this[32644]))
    const-val call_tmp[598530]:__serializeHelper[28089] "dead after last mention" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1766842]:__serializeHelper[28089] "dead after last mention" "temp"
    const-val coerce_tmp[1766869]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1766873 'move' coerce_tmp[1766869](1766871 'deref' call_tmp[598497]))
    val coerce_tmp[1766875]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1766879 'move' coerce_tmp[1766875](1766877 'deref' call_tmp[598504]))
    const-val coerce_tmp[1766881]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1766885 'move' coerce_tmp[1766881](1766883 'deref' call_tmp[598511]))
    const-val coerce_tmp[1766887]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1766891 'move' coerce_tmp[1766887](1766889 'deref' call_tmp[598518]))
    const-val coerce_tmp[1766893]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1766897 'move' coerce_tmp[1766893](1766895 'deref' call_tmp[598525]))
    (1766845 call init[753649] initTemp[1766842] coerce_tmp[1766869] coerce_tmp[1766875] coerce_tmp[1766881] coerce_tmp[1766887] data[30889] coerce_tmp[1766893])
    (598533 'move' call_tmp[598530] initTemp[1766842])
    (503750 'move' ret[503745] call_tmp[598530])
    gotoReturn _end_chpl__serialize[503743] _end_chpl__serialize[503743]
    label _end_chpl__serialize[503743]
    (1802654 '=' _retArg[1802652] ret[503745])
    (1802656 return _void[55])
  }
  function chpl__deserialize[1766908](const  ref arg data[1766914]:__serializeHelper[28089], ref arg _retArg[1814708]:_ref(string)[937958]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val _formal_type_tmp_[1779656]:string[26] "temp"
    val ret[1766916]:string[26] "dead after last mention" "RVV" "temp"
    ref call_tmp[1766924]:_ref(int(32))[936645] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1766926 'move' call_tmp[1766924](1766929 call locale_id[753571] data[1766914]))
    const-val call_tmp[1766932]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1767168]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1767172 'move' coerce_tmp[1767168](1767170 'deref' call_tmp[1766924]))
    (1766934 'move' call_tmp[1766932](1766937 call !=[436028] coerce_tmp[1767168] chpl_nodeID[208207]))
    const-val call_tmp[1766940]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1766942 'move' call_tmp[1766940] call_tmp[1766932])
    if call_tmp[1766940]
    {
      ref call_tmp[1766949]:_ref(int(64))[936591] "dead after last mention" "maybe param" "reference to a const" "temp"
      (1766951 'move' call_tmp[1766949](1766954 call buffLen[753493] data[1766914]))
      const-val call_tmp[1766957]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1767176]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1767180 'move' coerce_tmp[1767176](1767178 'deref' call_tmp[1766949]))
      const-val coerce_tmp[1767182]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1767188 'move' coerce_tmp[1767182](1767184 'cast' int(64)[13] CHPL_SHORT_STRING_SIZE[28016]))
      (1766959 'move' call_tmp[1766957](1766962 call <=[437050] coerce_tmp[1767176] coerce_tmp[1767182]))
      const-val call_tmp[1766965]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1766967 'move' call_tmp[1766965] call_tmp[1766957])
      if call_tmp[1766965]
      {
        ref call_tmp[1766974]:_ref(chpl__inPlaceBuffer)[967459] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1766976 'move' call_tmp[1766974](1766979 call shortData[753597] data[1766914]))
        val call_tmp[1766982]:c_ptr(uint(8))[937442] "dead after last mention" "expr temp" "maybe param" "temp"
        (1766984 'move' call_tmp[1766982](1766987 call chpl__getInPlaceBufferData[28033] call_tmp[1766974]))
        ref call_tmp[1766989]:_ref(int(64))[936591] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1766991 'move' call_tmp[1766989](1766994 call buffLen[753493] data[1766914]))
        ref call_tmp[1766997]:_ref(int(64))[936591] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1766999 'move' call_tmp[1766997](1767002 call size[753545] data[1766914]))
        ref call_tmp[1767005]:_ref(int(64))[936591] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1767007 'move' call_tmp[1767005](1767010 call cachedNumCodepoints[753623] data[1766914]))
        const-val call_tmp[1767013]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val coerce_tmp[1767196]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1767200 'move' coerce_tmp[1767196](1767198 'deref' call_tmp[1766989]))
        const-val coerce_tmp[1767202]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1767206 'move' coerce_tmp[1767202](1767204 'deref' call_tmp[1766997]))
        const-val coerce_tmp[1767208]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1767212 'move' coerce_tmp[1767208](1767210 'deref' call_tmp[1767005]))
        const-val ret_tmp[1802538]:string[26] "temp"
        (1767018 call chpl_createStringWithNewBufferNV[30582] call_tmp[1766982] coerce_tmp[1767196] coerce_tmp[1767202] coerce_tmp[1767208] ret_tmp[1802538])
        (1802541 'move' call_tmp[1767013] ret_tmp[1802538])
        (1767023 'move' ret[1766916] call_tmp[1767013])
        gotoReturn _end_chpl__deserialize[1767162] _end_chpl__deserialize[1767162]
      }
      {
        ref call_tmp[1767030]:_ref(int(32))[936645] "dead at end of block" "maybe param" "reference to a const" "temp"
        (1767032 'move' call_tmp[1767030](1767035 call locale_id[753571] data[1766914]))
        ref call_tmp[1767038]:_ref(c_ptr(uint(8)))[937451] "dead at end of block" "maybe param" "reference to a const" "temp"
        (1767040 'move' call_tmp[1767038](1767043 call buff[753519] data[1766914]))
        ref call_tmp[1767046]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
        (1767048 'move' call_tmp[1767046](1767051 call buffLen[753493] data[1766914]))
        val call_tmp[1767054]:c_ptr(uint(8))[937442] "dead at end of block" "maybe param" "temp"
        const-val coerce_tmp[1767486]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1767490 'move' coerce_tmp[1767486](1767488 'deref' call_tmp[1767030]))
        const-val coerce_tmp[1767492]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1767498 'move' coerce_tmp[1767492](1767494 'cast' int(64)[13] coerce_tmp[1767486]))
        val coerce_tmp[1767500]:c_ptr(uint(8))[937442] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1767504 'move' coerce_tmp[1767500](1767502 'deref' call_tmp[1767038]))
        const-val coerce_tmp[1767506]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1767510 'move' coerce_tmp[1767506](1767508 'deref' call_tmp[1767046]))
        (1767056 'move' call_tmp[1767054](1767059 call bufferCopyRemote[172830] coerce_tmp[1767492] coerce_tmp[1767500] coerce_tmp[1767506]))
        val localBuff[1767063]:c_ptr(uint(8))[937442] "dead at end of block" "insert auto destroy"
        (1767065 'move' localBuff[1767063] call_tmp[1767054])
        ref call_tmp[1767069]:_ref(int(64))[936591] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1767071 'move' call_tmp[1767069](1767074 call buffLen[753493] data[1766914]))
        ref call_tmp[1767077]:_ref(int(64))[936591] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1767079 'move' call_tmp[1767077](1767082 call size[753545] data[1766914]))
        ref call_tmp[1767085]:_ref(int(64))[936591] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1767087 'move' call_tmp[1767085](1767090 call cachedNumCodepoints[753623] data[1766914]))
        const-val call_tmp[1767093]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val coerce_tmp[1767519]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1767523 'move' coerce_tmp[1767519](1767521 'deref' call_tmp[1767069]))
        const-val coerce_tmp[1767525]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1767529 'move' coerce_tmp[1767525](1767527 'deref' call_tmp[1767077]))
        const-val coerce_tmp[1767531]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1767535 'move' coerce_tmp[1767531](1767533 'deref' call_tmp[1767085]))
        const-val ret_tmp[1802634]:string[26] "temp"
        (1767098 call chpl_createStringWithOwnedBufferNV[30676] localBuff[1767063] coerce_tmp[1767519] coerce_tmp[1767525] coerce_tmp[1767531] ret_tmp[1802634])
        (1802637 'move' call_tmp[1767093] ret_tmp[1802634])
        (1767103 'move' ret[1766916] call_tmp[1767093])
        gotoReturn _end_chpl__deserialize[1767162] _end_chpl__deserialize[1767162]
      }
    }
    {
      ref call_tmp[1767113]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "maybe param" "reference to a const" "temp"
      (1767115 'move' call_tmp[1767113](1767118 call buff[753519] data[1766914]))
      ref call_tmp[1767121]:_ref(int(64))[936591] "dead after last mention" "maybe param" "reference to a const" "temp"
      (1767123 'move' call_tmp[1767121](1767126 call buffLen[753493] data[1766914]))
      ref call_tmp[1767129]:_ref(int(64))[936591] "dead after last mention" "maybe param" "reference to a const" "temp"
      (1767131 'move' call_tmp[1767129](1767134 call size[753545] data[1766914]))
      ref call_tmp[1767137]:_ref(int(64))[936591] "dead after last mention" "maybe param" "reference to a const" "temp"
      (1767139 'move' call_tmp[1767137](1767142 call cachedNumCodepoints[753623] data[1766914]))
      const-val call_tmp[1767145]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val coerce_tmp[1767542]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1767546 'move' coerce_tmp[1767542](1767544 'deref' call_tmp[1767113]))
      const-val coerce_tmp[1767548]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1767552 'move' coerce_tmp[1767548](1767550 'deref' call_tmp[1767121]))
      const-val coerce_tmp[1767554]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1767558 'move' coerce_tmp[1767554](1767556 'deref' call_tmp[1767129]))
      const-val coerce_tmp[1767560]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1767564 'move' coerce_tmp[1767560](1767562 'deref' call_tmp[1767137]))
      const-val ret_tmp[1802556]:string[26] "temp"
      (1767150 call chpl_createStringWithBorrowedBufferNV[30629] coerce_tmp[1767542] coerce_tmp[1767548] coerce_tmp[1767554] coerce_tmp[1767560] ret_tmp[1802556])
      (1802559 'move' call_tmp[1767145] ret_tmp[1802556])
      (1767155 'move' ret[1766916] call_tmp[1767145])
      gotoReturn _end_chpl__deserialize[1767162] _end_chpl__deserialize[1767162]
    }
    label _end_chpl__deserialize[1767162]
    (1814710 '=' _retArg[1814708] ret[1766916])
    (1814712 return _void[55])
  }
  function _ref(string)[937958].isASCII[31049](const  ref arg this[32652]:_ref(string)[937958]) : bool[10] "inline" "method" "primary method" "resolved" "fn synchronization free"
  {
    val ret[503777]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[598694]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (598697 'move' call_tmp[598694](31052 call numCodepoints[32826] this[32652]))
    const-val call_tmp[598701]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (598704 'move' call_tmp[598701](31056 call numBytes[32810] this[32652]))
    const-val call_tmp[598706]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (598709 'move' call_tmp[598706](31059 call ==[435666] call_tmp[598694] call_tmp[598701]))
    (503782 'move' ret[503777] call_tmp[598706])
    (503779 return ret[503777])
  }
  function _ref(string)[937958].byteIndices[31068](const  ref arg this[32656]:_ref(string)[937958], ref arg _retArg[1802736]:_ref(range(int(64),bounded,false))[1026877]) : void[4] "fn returns via _retArg" "inline" "method" "primary method" "no parens" "resolved" "fn synchronization free"
  {
    const-val ret[503786]:range(int(64),bounded,false)[1026833] "dead after last mention" "RVV" "temp"
    const-val call_tmp[598713]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (598716 'move' call_tmp[598713](31072 call numBytes[32810] this[32656]))
    const-val call_tmp[598718]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (598721 'move' call_tmp[598718](31076 call -[962245] call_tmp[598713]))
    const-val call_tmp[598723]:range(int(64),bounded,false)[1026833] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1804900]:range(int(64),bounded,false)[1026833] "temp"
    (31078 call chpl_build_bounded_range[455175] 0 call_tmp[598718] ret_tmp[1804900])
    (1804903 'move' call_tmp[598723] ret_tmp[1804900])
    (503791 'move' ret[503786] call_tmp[598723])
    (1802738 '=' _retArg[1802736] ret[503786])
    (1802740 return _void[55])
  }
  function _ref(string)[937958]._cpIndexLen[31109](const  ref arg this[32664]:_ref(string)[937958], const  ref arg start[31106]:byteIndex[28173], ref arg _retArg[1802766]:_ref(_ir__cpIndexLen__ref_string)[1122521]) : void[4] "fn returns via _retArg" "inline" "iterator fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _ir[1964431]:_ir__cpIndexLen__ref_string[1122410] "temp"
    (1964433 '.=' _ir[1964431] F0_this[1963572] this[32664])
    (1964437 '.=' _ir[1964431] F1_start[1963576] start[31106])
    (1964441 '=' _retArg[1802766] _ir[1964431])
    (1964444 return _void[55])
  }
  type _ic__cpIndexLen__ref_string[1122404] val super[1122405]:object[22] "super class" val more[1122407]:int(64)[13] ref F0_this[1963570]:_ref(string)[937958] ref F1_start[1963574]:_ref(byteIndex)[948778] val F2_localThis[1963578]:string[26] val F3__iterator[1963580]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108585] val F4_call_tmp[1963582]:range(int(64),bounded,false)[1026833] val F5__iterator[1963584]:_ic_these_range_int64_t_bounded_F[1096722] val F6__iterator[1963586]:_ic_chpl_bytes__ref_string[1108275] val F7__indexOfInterest[1963588]:(int(64),uint(8))[1111059] val F8_call_tmp[1963590]:byteIndex[28173] const-val F9_ret_tmp[1963592]:byteIndex[28173] const-val F10_ret_tmp[1963594]:(int(32),byteIndex,int(64))[1122161] val F11_i[1963596]:int(64)[13] const-val F12_ret_tmp[1963598]:(syserr,int(32),int(32))[964639] const F13_tmp[1963600]:(syserr,int(32),int(32))[964639] const F14_nBytes[1963602]:int(32)[95] val F15_call_tmp[1963604]:byteIndex[28173] const-val F16_ret_tmp[1963606]:byteIndex[28173] const-val F17_ret_tmp[1963608]:(int(32),byteIndex,int(64))[1122161] val F18_call_tmp[1963610]:(int(32),byteIndex,int(64))[1122161] val F19_call_tmp[1963612]:(int(32),byteIndex,int(64))[1122161] val value[1963614]:(int(32),byteIndex,int(64))[1122161]
  type _ir__cpIndexLen__ref_string[1122410] ref F0_this[1963572]:_ref(string)[937958] ref F1_start[1963576]:_ref(byteIndex)[948778]
  function _getIterator[1122419](const  ref arg ir[1122421]:_ir__cpIndexLen__ref_string[1122410]) : _ic__cpIndexLen__ref_string[1122404] "auto ii" "inline" "resolved" "unsafe"
  {
    val ret[1122528]:_ic__cpIndexLen__ref_string[1122404] "dead after last mention" "RVV" "temp"
    val _ic_[1122411]:_ic__cpIndexLen__ref_string[1122404] "dead after last mention" "temp"
    const-val call_tmp[1122535]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1122538 'move' call_tmp[1122535](1122550 'sizeof_bundle' _ic__cpIndexLen__ref_string[1122404]))
    const-val cast_tmp[1122553]:c_void_ptr[149] "dead after last mention" "temp"
    (1122555 'move' cast_tmp[1122553](1122416 call chpl_here_alloc[187788] call_tmp[1122535] 33))
    (1122424 'move' _ic_[1122411](1122557 'cast' _ic__cpIndexLen__ref_string[1122404] cast_tmp[1122553]))
    (1122426 'setcid' _ic_[1122411])
    (1122533 'move' ret[1122528] _ic_[1122411])
    (1964447 '.=' ret[1122528] more[1122407] 1)
    ref tmp[1964451]:_ref(string)[937958] "temp"
    (1964456 'move' tmp[1964451](1964452 '.v' ir[1122421] F0_this[1963572]))
    (1964458 '.=' ret[1122528] F0_this[1963570] tmp[1964451])
    ref tmp[1964462]:_ref(byteIndex)[948778] "temp"
    (1964467 'move' tmp[1964462](1964463 '.v' ir[1122421] F1_start[1963576]))
    (1964469 '.=' ret[1122528] F1_start[1963574] tmp[1964462])
    (1122530 return ret[1122528])
  }
  function _ref(string)[937958]._cpIndexLen_default_start[1122050](const  ref arg this[1122053]:_ref(string)[937958], ref arg _retArg[1807413]:_ref(byteIndex)[948778]) : void[4] "compiler generated" "default actual function" "fn returns via _retArg" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved"
  {
    const-val ret[1122056]:byteIndex[28173] "dead after last mention" "RVV" "maybe param" "temp"
    const-val start[1122061]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    const-val ret_tmp[1803788]:byteIndex[28173] "temp"
    (1122065 call _cast[39486] 0 ret_tmp[1803788])
    (1803791 'move' start[1122061] ret_tmp[1803788])
    (1122072 'move' ret[1122056] start[1122061])
    (1807415 '=' _retArg[1807413] ret[1122056])
    (1807417 return _void[55])
  }
  function _ref(string)[937958]._indexLen[31454](const  ref arg this[32668]:_ref(string)[937958], const  ref arg start[31451]:byteIndex[28173], ref arg _retArg[1802782]:_ref(_ir__indexLen__ref_string)[1121441]) : void[4] "fn returns via _retArg" "inline" "iterator fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val _ir[1964880]:_ir__indexLen__ref_string[1121330] "temp"
    (1964882 '.=' _ir[1964880] F0_this[1964475] this[32668])
    (1964886 '.=' _ir[1964880] F1_start[1964479] start[31451])
    (1964890 '=' _retArg[1802782] _ir[1964880])
    (1964893 return _void[55])
  }
  type _ic__indexLen__ref_string[1121324] val super[1121325]:object[22] "super class" val more[1121327]:int(64)[13] ref F0_this[1964473]:_ref(string)[937958] ref F1_start[1964477]:_ref(byteIndex)[948778] val F2_localThis[1964481]:string[26] val F3_i[1964483]:int(64)[13] val F4_j[1964485]:int(64)[13] val F5_call_tmp[1964487]:byteIndex[28173] const-val F6_ret_tmp[1964489]:byteIndex[28173] const-val F7_ret_tmp[1964491]:(byteIndex,int(64))[1121252] val value[1964493]:(byteIndex,int(64))[1121252]
  type _ir__indexLen__ref_string[1121330] ref F0_this[1964475]:_ref(string)[937958] ref F1_start[1964479]:_ref(byteIndex)[948778]
  function _getIterator[1121339](const  ref arg ir[1121341]:_ir__indexLen__ref_string[1121330]) : _ic__indexLen__ref_string[1121324] "auto ii" "inline" "resolved" "fn synchronization free" "unsafe"
  {
    val ret[1121448]:_ic__indexLen__ref_string[1121324] "dead after last mention" "RVV" "temp"
    val _ic_[1121331]:_ic__indexLen__ref_string[1121324] "dead after last mention" "temp"
    const-val call_tmp[1121455]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1121458 'move' call_tmp[1121455](1121470 'sizeof_bundle' _ic__indexLen__ref_string[1121324]))
    const-val cast_tmp[1121473]:c_void_ptr[149] "dead after last mention" "temp"
    (1121475 'move' cast_tmp[1121473](1121336 call chpl_here_alloc[187788] call_tmp[1121455] 32))
    (1121344 'move' _ic_[1121331](1121477 'cast' _ic__indexLen__ref_string[1121324] cast_tmp[1121473]))
    (1121346 'setcid' _ic_[1121331])
    (1121453 'move' ret[1121448] _ic_[1121331])
    (1964896 '.=' ret[1121448] more[1121327] 1)
    ref tmp[1964900]:_ref(string)[937958] "temp"
    (1964905 'move' tmp[1964900](1964901 '.v' ir[1121341] F0_this[1964475]))
    (1964907 '.=' ret[1121448] F0_this[1964473] tmp[1964900])
    ref tmp[1964911]:_ref(byteIndex)[948778] "temp"
    (1964916 'move' tmp[1964911](1964912 '.v' ir[1121341] F1_start[1964479]))
    (1964918 '.=' ret[1121448] F1_start[1964477] tmp[1964911])
    (1121450 return ret[1121448])
  }
  function _ref(string)[937958]._indexLen_default_start[1121022](const  ref arg this[1121025]:_ref(string)[937958], ref arg _retArg[1807365]:_ref(byteIndex)[948778]) : void[4] "compiler generated" "default actual function" "fn returns via _retArg" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "fn synchronization free"
  {
    const-val ret[1121028]:byteIndex[28173] "dead after last mention" "RVV" "maybe param" "temp"
    const-val start[1121033]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    const-val ret_tmp[1803782]:byteIndex[28173] "temp"
    (1121037 call _cast[39486] 0 ret_tmp[1803782])
    (1803785 'move' start[1121033] ret_tmp[1803782])
    (1121044 'move' ret[1121028] start[1121033])
    (1807367 '=' _retArg[1807365] ret[1121028])
    (1807369 return _void[55])
  }
  function _ref(string)[937958].doSearchUTF8[1106130](const  ref arg this[1106134]:_ref(string)[937958], const  ref arg needle[1106136]:string[26], const in arg region[1106138]:range(byteIndex,bounded,false)[1025811]) : int(64)[13] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[1106146]:int(64)[13] "dead after last mention" "RVV" "temp"
    val ret[1106163]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1106165 'move' ret[1106163] -1)
    const-val tmp[1106170]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1106172]:_ref(int(32))[936645] "dead after last mention" "maybe param" "temp"
    (1106174 'move' call_tmp[1106172](1106177 call locale_id[758061] this[1106134]))
    const-val call_tmp[1106180]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1107369]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1107373 'move' coerce_tmp[1107369](1107371 'deref' call_tmp[1106172]))
    (1106182 'move' call_tmp[1106180](1106185 call chpl_buildLocaleID[209470] coerce_tmp[1107369] c_sublocid_any[89878]))
    const-val call_tmp[1106188]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    (1106190 'move' call_tmp[1106188](1106192 'chpl_on_locale_num' call_tmp[1106180]))
    (1106194 'move' tmp[1106170] call_tmp[1106188])
    val needle_data[2049402]:__serializeHelper[28089] "temp"
    (2049404 call chpl__serialize[30886] needle[1106136] needle_data[2049402])
    val isdirect[2056393]:bool[10] "temp"
    (2056398 'move' isdirect[2056393](2056395 call chpl_doDirectExecuteOn[187469] tmp[1106170]))
    if isdirect[2056393]
    {
      (2056402 call on_fn[1106201] needle_data[2049402] this[1106134] region[1106138] ret[1106163])
    }
    {
      val _args_foron_fn[2056426]:_class_localson_fn[2056412] "temp"
      (2056430 'move' _args_foron_fn[2056426](2056428 'stack allocate class' _class_localson_fn[2056412]))
      (2056432 '.=' _args_foron_fn[2056426] _0_tmp[2056415] tmp[1106170])
      (2056436 '.=' _args_foron_fn[2056426] _1_needle_data[2056417] needle_data[2049402])
      ref tmp[2056440]:string[26] "temp"
      (2056444 'move' tmp[2056440](2056442 'set reference' this[1106134]))
      (2056446 '.=' _args_foron_fn[2056426] _2_this[2056419] tmp[2056440])
      (2056450 '.=' _args_foron_fn[2056426] _3_region[2056421] region[1106138])
      ref tmp[2056454]:int(64)[13] "temp"
      (2056458 'move' tmp[2056454](2056456 'set reference' ret[1106163]))
      (2056460 '.=' _args_foron_fn[2056426] _4_ret[2056423] tmp[2056454])
      val _args_vforon_fn[2056464]:c_void_ptr[149] "temp"
      (2056468 'move' _args_vforon_fn[2056464](2056466 'cast_to_void_star' _args_foron_fn[2056426]))
      val _args_sizeon_fn[2056470]:int(64)[13] "temp"
      (2056474 'move' _args_sizeon_fn[2056470](2056472 'sizeof_bundle' _class_localson_fn[2056412]))
      on(2056530 call wrapon_fn[2056476] tmp[1106170] _args_vforon_fn[2056464] _args_sizeon_fn[2056470] _args_foron_fn[2056426])
    }
    {
    }
    (1107314 'move' ret[1106146] ret[1106163])
    gotoReturn _end_doSearchUTF8[1107322] _end_doSearchUTF8[1107322]
    label _end_doSearchUTF8[1107322]
    (1107324 return ret[1106146])
  }
  function _ref(string)[937958].doSearchUTF8[1182826](const  ref arg this[1182830]:_ref(string)[937958], const  ref arg needle[1182832]:string[26], const in arg region[1182834]:range(byteIndex,boundedLow,false)[1143422]) : int(64)[13] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[1182842]:int(64)[13] "dead after last mention" "RVV" "temp"
    val ret[1182859]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1182861 'move' ret[1182859] -1)
    const-val tmp[1182866]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1182868]:_ref(int(32))[936645] "dead after last mention" "maybe param" "temp"
    (1182870 'move' call_tmp[1182868](1182873 call locale_id[758061] this[1182830]))
    const-val call_tmp[1182876]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1184065]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1184069 'move' coerce_tmp[1184065](1184067 'deref' call_tmp[1182868]))
    (1182878 'move' call_tmp[1182876](1182881 call chpl_buildLocaleID[209470] coerce_tmp[1184065] c_sublocid_any[89878]))
    const-val call_tmp[1182884]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    (1182886 'move' call_tmp[1182884](1182888 'chpl_on_locale_num' call_tmp[1182876]))
    (1182890 'move' tmp[1182866] call_tmp[1182884])
    val needle_data[2049658]:__serializeHelper[28089] "temp"
    (2049660 call chpl__serialize[30886] needle[1182832] needle_data[2049658])
    val isdirect[2056961]:bool[10] "temp"
    (2056966 'move' isdirect[2056961](2056963 call chpl_doDirectExecuteOn[187469] tmp[1182866]))
    if isdirect[2056961]
    {
      (2056970 call on_fn[1182897] needle_data[2049658] this[1182830] region[1182834] ret[1182859])
    }
    {
      val _args_foron_fn[2056994]:_class_localson_fn[2056980] "temp"
      (2056998 'move' _args_foron_fn[2056994](2056996 'stack allocate class' _class_localson_fn[2056980]))
      (2057000 '.=' _args_foron_fn[2056994] _0_tmp[2056983] tmp[1182866])
      (2057004 '.=' _args_foron_fn[2056994] _1_needle_data[2056985] needle_data[2049658])
      ref tmp[2057008]:string[26] "temp"
      (2057012 'move' tmp[2057008](2057010 'set reference' this[1182830]))
      (2057014 '.=' _args_foron_fn[2056994] _2_this[2056987] tmp[2057008])
      (2057018 '.=' _args_foron_fn[2056994] _3_region[2056989] region[1182834])
      ref tmp[2057022]:int(64)[13] "temp"
      (2057026 'move' tmp[2057022](2057024 'set reference' ret[1182859]))
      (2057028 '.=' _args_foron_fn[2056994] _4_ret[2056991] tmp[2057022])
      val _args_vforon_fn[2057032]:c_void_ptr[149] "temp"
      (2057036 'move' _args_vforon_fn[2057032](2057034 'cast_to_void_star' _args_foron_fn[2056994]))
      val _args_sizeon_fn[2057038]:int(64)[13] "temp"
      (2057042 'move' _args_sizeon_fn[2057038](2057040 'sizeof_bundle' _class_localson_fn[2056980]))
      on(2057098 call wrapon_fn[2057044] tmp[1182866] _args_vforon_fn[2057032] _args_sizeon_fn[2057038] _args_foron_fn[2056994])
    }
    {
    }
    (1184010 'move' ret[1182842] ret[1182859])
    gotoReturn _end_doSearchUTF8[1184018] _end_doSearchUTF8[1184018]
    label _end_doSearchUTF8[1184018]
    (1184020 return ret[1182842])
  }
  function _ref(string)[937958].buffLen[757905](ref arg this[757909]:_ref(string)[937958]) ref : _ref(int(64))[936591] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[757919]:_ref(int(64))[936591] "dead after last mention" "RVV" "temp"
    ref call_tmp[757926]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
    (757929 'move' call_tmp[757926](757913 '.' this[757909] buffLen[30722]))
    (757924 'move' ret[757919] call_tmp[757926])
    (757921 return ret[757919])
  }
  function _ref(string)[937958].buffSize[757931](ref arg this[757935]:_ref(string)[937958]) ref : _ref(int(64))[936591] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[757945]:_ref(int(64))[936591] "dead after last mention" "RVV" "temp"
    ref call_tmp[757952]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
    (757955 'move' call_tmp[757952](757939 '.' this[757935] buffSize[30728]))
    (757950 'move' ret[757945] call_tmp[757952])
    (757947 return ret[757945])
  }
  function _ref(string)[937958].cachedNumCodepoints[757957](ref arg this[757961]:_ref(string)[937958]) ref : _ref(int(64))[936591] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[757971]:_ref(int(64))[936591] "dead after last mention" "RVV" "temp"
    ref call_tmp[757978]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
    (757981 'move' call_tmp[757978](757965 '.' this[757961] cachedNumCodepoints[30734]))
    (757976 'move' ret[757971] call_tmp[757978])
    (757973 return ret[757971])
  }
  function _ref(string)[937958].buff[757983](ref arg this[757987]:_ref(string)[937958]) ref : _ref(c_ptr(uint(8)))[937451] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[757997]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "RVV" "temp"
    ref call_tmp[758004]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "maybe param" "temp"
    (758007 'move' call_tmp[758004](757991 '.' this[757987] buff[30740]))
    (758002 'move' ret[757997] call_tmp[758004])
    (757999 return ret[757997])
  }
  function _ref(string)[937958].isOwned[758009](ref arg this[758013]:_ref(string)[937958]) ref : _ref(bool)[937218] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[758023]:_ref(bool)[937218] "dead after last mention" "RVV" "temp"
    ref call_tmp[758030]:_ref(bool)[937218] "dead after last mention" "maybe param" "temp"
    (758033 'move' call_tmp[758030](758017 '.' this[758013] isOwned[30746]))
    (758028 'move' ret[758023] call_tmp[758030])
    (758025 return ret[758023])
  }
  function _ref(string)[937958].hasEscapes[758035](ref arg this[758039]:_ref(string)[937958]) ref : _ref(bool)[937218] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[758049]:_ref(bool)[937218] "dead after last mention" "RVV" "temp"
    ref call_tmp[758056]:_ref(bool)[937218] "dead after last mention" "maybe param" "temp"
    (758059 'move' call_tmp[758056](758043 '.' this[758039] hasEscapes[30752]))
    (758054 'move' ret[758049] call_tmp[758056])
    (758051 return ret[758049])
  }
  function _ref(string)[937958].locale_id[758061](ref arg this[758065]:_ref(string)[937958]) ref : _ref(int(32))[936645] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[758075]:_ref(int(32))[936645] "dead after last mention" "RVV" "temp"
    ref call_tmp[758082]:_ref(int(32))[936645] "dead after last mention" "maybe param" "temp"
    (758085 'move' call_tmp[758082](758069 '.' this[758065] locale_id[30757]))
    (758080 'move' ret[758075] call_tmp[758082])
    (758077 return ret[758075])
  }
  type string[26] val buffLen[30722]:int(64)[13] val buffSize[30728]:int(64)[13] val cachedNumCodepoints[30734]:int(64)[13] val buff[30740]:c_ptr(uint(8))[937442] val isOwned[30746]:bool[10] val hasEscapes[30752]:bool[10] val locale_id[30757]:int(32)[95]
  function _ref(string)[937958].size[32772](const  ref arg this[32774]:_ref(string)[937958]) : int(64)[13] "inline" "method" "no parens" "resolved" "fn synchronization free"
  {
    val ret[503924]:int(64)[13] "dead after last mention" "RVV" "temp"
    const-val call_tmp[599697]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (599700 'move' call_tmp[599697](369892 call numCodepoints[32826] this[32774]))
    (503929 'move' ret[503924] call_tmp[599697])
    (503926 return ret[503924])
  }
  function _ref(string)[937958].indices[32788](const  ref arg this[32790]:_ref(string)[937958], ref arg _retArg[1802828]:_ref(range(int(64),bounded,false))[1026877]) : void[4] "fn returns via _retArg" "inline" "method" "no parens" "resolved" "fn synchronization free"
  {
    const-val ret[503933]:range(int(64),bounded,false)[1026833] "dead after last mention" "RVV" "temp"
    const-val call_tmp[599704]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (599707 'move' call_tmp[599704](369896 call size[32772] this[32790]))
    const-val call_tmp[599709]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (599712 'move' call_tmp[599709](32798 call -[962245] call_tmp[599704]))
    const-val call_tmp[599714]:range(int(64),bounded,false)[1026833] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1804906]:range(int(64),bounded,false)[1026833] "temp"
    (32800 call chpl_build_bounded_range[455175] 0 call_tmp[599709] ret_tmp[1804906])
    (1804909 'move' call_tmp[599714] ret_tmp[1804906])
    (503938 'move' ret[503933] call_tmp[599714])
    (1802830 '=' _retArg[1802828] ret[503933])
    (1802832 return _void[55])
  }
  function _ref(string)[937958].numBytes[32810](const  ref arg this[32812]:_ref(string)[937958]) : int(64)[13] "inline" "method" "no parens" "resolved" "fn synchronization free"
  {
    val ret[503942]:int(64)[13] "dead after last mention" "RVV" "temp"
    ref call_tmp[599721]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
    (599724 'move' call_tmp[599721](369901 call buffLen[757905] this[32812]))
    (503947 'move' ret[503942](503946 'deref' call_tmp[599721]))
    (503944 return ret[503942])
  }
  function _ref(string)[937958].numCodepoints[32826](const  ref arg this[32828]:_ref(string)[937958]) : int(64)[13] "inline" "method" "no parens" "resolved" "fn synchronization free"
  {
    val ret[503951]:int(64)[13] "dead after last mention" "RVV" "temp"
    ref call_tmp[599728]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    (599731 'move' call_tmp[599728](32834 call cachedNumCodepoints[757957] this[32828]))
    const-val n[32837]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1019780]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1019784 'move' coerce_tmp[1019780](1019782 'deref' call_tmp[599728]))
    (1814984 '=' n[32837] coerce_tmp[1019780])
    (540336 'noop')
    {
      const-val call_tmp[599738]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (599741 'move' call_tmp[599738](32847 call countNumCodepoints[181380] this[32828]))
      const-val call_tmp[599743]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (599746 'move' call_tmp[599743](32848 call !=[436050] n[32837] call_tmp[599738]))
      const-val call_tmp[599748]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (599751 'move' call_tmp[599748] call_tmp[599743])
      if call_tmp[599748]
      {
        (32869 call halt[154111] "Encountered corrupt string metadata")
      }
    }
    (503956 'move' ret[503951] n[32837])
    gotoReturn _end_numCodepoints[503949] _end_numCodepoints[503949]
    label _end_numCodepoints[503949]
    (503953 return ret[503951])
  }
  function _ref(string)[937958].localize[32889](const  ref arg this[32891]:_ref(string)[937958], ref arg _retArg[1802978]:_ref(string)[937958]) : void[4] "fn returns via _retArg" "inline" "method" "resolved" "fn synchronization free"
  {
    val ret[503962]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[553264]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[553277]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    ref call_tmp[599765]:_ref(int(32))[936645] "dead after last mention" "maybe param" "temp"
    (599768 'move' call_tmp[599765](32899 call locale_id[758061] this[32891]))
    const-val call_tmp[599770]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[948739]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (948743 'move' coerce_tmp[948739](948741 'deref' call_tmp[599765]))
    (599773 'move' call_tmp[599770](32903 call ==[435644] coerce_tmp[948739] chpl_nodeID[208207]))
    (553279 'move' tmp[553277] call_tmp[599770])
    (553284 'move' tmp[553264] tmp[553277])
    const-val call_tmp[599775]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (599778 'move' call_tmp[599775] tmp[553264])
    if call_tmp[599775]
    {
      const-val call_tmp[599780]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1791624]:string[26] "temp"
      (32910 call createStringWithBorrowedBuffer[29902] this[32891] ret_tmp[1791624])
      (1791627 'move' call_tmp[599780] ret_tmp[1791624])
      (957297 'move' ret[503962] call_tmp[599780])
      gotoReturn _end_localize[503960] _end_localize[503960]
    }
    {
      const-val x[32916]:string[26] "dead at end of block" "const" "insert auto destroy"
      (540338 call init=[30774] x[32916] this[32891])
      (957300 'move' ret[503962] x[32916])
      gotoReturn _end_localize[503960] _end_localize[503960]
    }
    label _end_localize[503960]
    (1802980 '=' _retArg[1802978] ret[503962])
    (1802982 return _void[55])
  }
  function _ref(string)[937958].c_str[32935](const  ref arg this[32937]:_ref(string)[937958]) : c_string[19] "inline" "method" "resolved"
  {
    val ret[503980]:c_string[19] "dead after last mention" "RVV" "temp"
    const-val call_tmp[599785]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (599788 'move' call_tmp[599785](32946 call getCStr[957303] this[32937]))
    (958088 'move' ret[503980] call_tmp[599785])
    (503982 return ret[503980])
  }
  function _ic_chpl_bytes__ref_string[1108275].advance[1108301](const in arg this[1108303]:_ic_chpl_bytes__ref_string[1108275]) : void[4] "auto ii" "method" "resolved"
  {
    const-val more[1966939]:int(64)[13]
    (1966967 'move' more[1966939](1966964 '.v' this[1108303] more[1108278]))
    const-val tmp[1966942]:bool[10] "temp"
    (1966949 'move' tmp[1966942](1966946 '==' more[1966939] 2))
    if tmp[1966942]
    {
      gotoIterResume _jump_2[1966931] _jump_2[1966931]
    }
    const-val tmp[1966954]:bool[10] "temp"
    (1966959 'move' tmp[1966954](1966956 '==' more[1966939] -2))
    if tmp[1966954]
    {
      gotoIterResume _jump_break_2[1966933] _jump_break_2[1966933]
    }
    val ret[504044]:_ir_chpl_bytes__ref_string[1108281] "dead at end of block" "RVV" "temp"
    const-val call_tmp[600157]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1802846]:string[26] "temp"
    ref tmp[1964942]:_ref(string)[937958] "temp"
    (1964947 'move' tmp[1964942](1964944 '.v' this[1108303] F0_this[1964922]))
    (33591 call localize[32889] tmp[1964942] ret_tmp[1802846])
    (1802849 'move' call_tmp[600157] ret_tmp[1802846])
    val tmp[1964949]:string[26] "temp"
    (540388 'move' tmp[1964949] call_tmp[600157])
    (1964951 '.=' this[1108303] F1_localThis[1964926] tmp[1964949])
    val _indexOfInterest[33617]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    ref call_tmp[600164]:_ref(int(64))[936591] "dead at end of block" "maybe param" "temp"
    ref tmp[1964955]:_ref(string)[937958] "temp"
    (1964960 'move' tmp[1964955](1964957 '.' this[1108303] F1_localThis[1964926]))
    (600167 'move' call_tmp[600164](33633 call buffLen[757905] tmp[1964955]))
    const-val call_tmp[600169]:_ir_chpl_direct_counted_range_iter[1103815] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1108434]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1108438 'move' coerce_tmp[1108434](1108436 'deref' call_tmp[600164]))
    const-val ret_tmp[1805174]:_ir_chpl_direct_counted_range_iter[1103815] "temp"
    (33637 call chpl_direct_counted_range_iter[458034] 0 coerce_tmp[1108434] ret_tmp[1805174])
    (1805177 'move' call_tmp[600169] ret_tmp[1805174])
    val tmp[1964962]:_ic_chpl_direct_counted_range_iter[1103809] "temp"
    (33627 'move' tmp[1964962](33625 call _getIterator[1103824] call_tmp[600169]))
    (1964964 '.=' this[1108303] F2__iterator[1964928] tmp[1964962])
    val ret[1863081]:_ir_chpl_direct_counted_range_iter[1103815] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[1863083]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    const-val call_tmp[1863087]:_ir_chpl_direct_counted_range_iter_helper[1103565] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[1863089]:_ir_chpl_direct_counted_range_iter_helper[1103565] "temp"
    const-val low[1863194]:int(64)[13] "temp"
    ref tmp[1964968]:_ref(_ic_chpl_direct_counted_range_iter)[1103952] "temp"
    (1964973 'move' tmp[1964968](1964970 '.' this[1108303] F2__iterator[1964928]))
    (1863199 'move' low[1863194](1863196 '.v' tmp[1964968] F0_low[1976900]))
    const-val count[1863201]:int(64)[13] "temp"
    ref tmp[1964975]:_ref(_ic_chpl_direct_counted_range_iter)[1103952] "temp"
    (1964980 'move' tmp[1964975](1964977 '.' this[1108303] F2__iterator[1964928]))
    (1863206 'move' count[1863201](1863203 '.v' tmp[1964975] F1_count[1976904]))
    (1863092 call chpl_direct_counted_range_iter_helper[1102117] low[1863194] count[1863201] ret_tmp[1863089])
    (1863096 'move' call_tmp[1863087] ret_tmp[1863089])
    val tmp[1964982]:_ic_chpl_direct_counted_range_iter_helper[1103559] "temp"
    (1863099 'move' tmp[1964982](1863102 call _getIterator[1103574] call_tmp[1863087]))
    (1964984 '.=' this[1108303] F3__iterator[1964930] tmp[1964982])
    val ret[1926179]:_ir_chpl_direct_counted_range_iter_helper[1103565] "dead after last mention" "RVV" "temp"
    val call_tmp[1926181]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val tmp[1926183]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[1926185]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    const-val call_tmp[1926187]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[1926604]:int(64)[13] "temp"
    ref tmp[1964988]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103702] "temp"
    (1964993 'move' tmp[1964988](1964990 '.' this[1108303] F3__iterator[1964930]))
    (1926609 'move' count[1926604](1926606 '.v' tmp[1964988] F1_count[1981376]))
    (1926189 'move' call_tmp[1926187](1926192 call <[948417] count[1926604]))
    (1926194 'move' tmp[1926185] call_tmp[1926187])
    (1926197 'move' tmp[1926183] call_tmp[1926187])
    const-val call_tmp[1926200]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1926202 'move' call_tmp[1926200] call_tmp[1926187])
    if call_tmp[1926187]
    {
      (1926208 call boundsCheckHalt[210185] "With a negative count, the range must have a last index.")
    }
    val tmp[1926213]:2*int(64)[1040075] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
    const-val tmp[1926215]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1926217]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[1926611]:int(64)[13] "temp"
    ref tmp[1964995]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103702] "temp"
    (1965000 'move' tmp[1964995](1964997 '.' this[1108303] F3__iterator[1964930]))
    (1926616 'move' count[1926611](1926613 '.v' tmp[1964995] F1_count[1981376]))
    (1926219 'move' call_tmp[1926217](1926222 call ==[435666] count[1926611] 0))
    (1926225 'move' tmp[1926215] call_tmp[1926217])
    if call_tmp[1926217]
    {
      const-val tmp[1926230]:2*int(64)[1040075] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      val call_tmp[1926232]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[1926234]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val low[1926618]:int(64)[13] "temp"
      ref tmp[1965002]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103702] "temp"
      (1965007 'move' tmp[1965002](1965004 '.' this[1108303] F3__iterator[1964930]))
      (1926623 'move' low[1926618](1926620 '.v' tmp[1965002] F0_low[1981372]))
      (1926236 'move' call_tmp[1926234](1926239 call _cast[956053] low[1926618]))
      const-val call_tmp[1926241]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1926243]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1926245 'move' coerce_tmp[1926243](1926247 'cast' uint(64)[115] 1))
      (1926250 'move' call_tmp[1926241](1926253 call -[962212] call_tmp[1926234]))
      const-val call_tmp[1926255]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (1926257 'move' call_tmp[1926255](1926260 call _cast[953562] call_tmp[1926241]))
      const-val ret_tmp[1926262]:2*int(64)[1040075] "temp"
      const-val low[1926625]:int(64)[13] "temp"
      ref tmp[1965009]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103702] "temp"
      (1965014 'move' tmp[1965009](1965011 '.' this[1108303] F3__iterator[1964930]))
      (1926630 'move' low[1926625](1926627 '.v' tmp[1965009] F0_low[1981372]))
      (1926265 call _build_tuple[1040033] low[1926625] call_tmp[1926255] ret_tmp[1926262])
      (1926269 'move' tmp[1926230] ret_tmp[1926262])
      (1926272 'move' tmp[1926213] tmp[1926230])
    }
    {
      const-val tmp[1926276]:2*int(64)[1040075] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      val call_tmp[1926278]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[1926280]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val count[1926632]:int(64)[13] "temp"
      ref tmp[1965016]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103702] "temp"
      (1965021 'move' tmp[1965016](1965018 '.' this[1108303] F3__iterator[1964930]))
      (1926637 'move' count[1926632](1926634 '.v' tmp[1965016] F1_count[1981376]))
      (1926282 'move' call_tmp[1926280] count[1926632])
      const-val call_tmp[1926285]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val count[1926639]:int(64)[13] "temp"
      ref tmp[1965023]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103702] "temp"
      (1965028 'move' tmp[1965023](1965025 '.' this[1108303] F3__iterator[1964930]))
      (1926644 'move' count[1926639](1926641 '.v' tmp[1965023] F1_count[1981376]))
      (1926287 'move' call_tmp[1926285](1926290 call -[962245] count[1926639]))
      const-val call_tmp[1926292]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val low[1926646]:int(64)[13] "temp"
      ref tmp[1965030]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103702] "temp"
      (1965035 'move' tmp[1965030](1965032 '.' this[1108303] F3__iterator[1964930]))
      (1926651 'move' low[1926646](1926648 '.v' tmp[1965030] F0_low[1981372]))
      (1926294 'move' call_tmp[1926292](1926297 call +[439674] low[1926646] call_tmp[1926285]))
      const-val ret_tmp[1926300]:2*int(64)[1040075] "temp"
      const-val low[1926653]:int(64)[13] "temp"
      ref tmp[1965037]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103702] "temp"
      (1965042 'move' tmp[1965037](1965039 '.' this[1108303] F3__iterator[1964930]))
      (1926658 'move' low[1926653](1926655 '.v' tmp[1965037] F0_low[1981372]))
      (1926303 call _build_tuple[1040033] low[1926653] call_tmp[1926292] ret_tmp[1926300])
      (1926307 'move' tmp[1926276] ret_tmp[1926300])
      (1926310 'move' tmp[1926213] tmp[1926276])
    }
    const tmp[1965044]:2*int(64)[1040075] "temp"
    (1926314 '=' tmp[1965044] tmp[1926213])
    (1965046 '.=' this[1108303] F4_tmp[1964932] tmp[1965044])
    (1926317 'noop')
    1
    ref call_tmp[1926319]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
    ref tmp[1965050]:_ref(2*int(64))[1040148] "temp"
    (1965055 'move' tmp[1965050](1965052 '.' this[1108303] F4_tmp[1964932]))
    (1926321 'move' call_tmp[1926319](1926323 '.' tmp[1965050] x0[1040071]))
    const-val start[1926326]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1926328]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1926330 'move' coerce_tmp[1926328](1926332 'deref' call_tmp[1926319]))
    (1926334 '=' start[1926326] coerce_tmp[1926328])
    (1926337 'noop')
    ref call_tmp[1926338]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
    ref tmp[1965057]:_ref(2*int(64))[1040148] "temp"
    (1965062 'move' tmp[1965057](1965059 '.' this[1108303] F4_tmp[1964932]))
    (1926340 'move' call_tmp[1926338](1926342 '.' tmp[1965057] x1[1040073]))
    const-val end[1926345]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1926347]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1926349 'move' coerce_tmp[1926347](1926351 'deref' call_tmp[1926338]))
    (1926353 '=' end[1926345] coerce_tmp[1926347])
    (1926356 'noop')
    val _indexOfInterest[1926357]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    const-val call_tmp[1926361]:_ir_chpl_direct_param_stride_range_iter[1103311] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[1926363]:_ir_chpl_direct_param_stride_range_iter[1103311] "temp"
    (1926366 call chpl_direct_param_stride_range_iter[1102543] coerce_tmp[1926328] coerce_tmp[1926347] ret_tmp[1926363])
    (1926370 'move' call_tmp[1926361] ret_tmp[1926363])
    val tmp[1965064]:_ic_chpl_direct_param_stride_range_iter[1103305] "temp"
    (1926373 'move' tmp[1965064](1926376 call _getIterator[1103320] call_tmp[1926361]))
    (1965066 '.=' this[1108303] F5__iterator[1964934] tmp[1965064])
    val ret[1926379]:_ir_chpl_direct_param_stride_range_iter[1103311] "dead after last mention" "RVV" "temp"
    val call_tmp[1926381]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1926384 call chpl_range_check_stride[1102863])
    val call_tmp[1926387]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[1965070]:int(64)[13] "temp"
    (1926389 'move' tmp[1965070] 0)
    (1965072 '.=' this[1108303] F6_i[1964936] tmp[1965070])
    val call_tmp[1926392]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val default_arg_first[1926394]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val low[1926396]:int(64)[13] "temp"
    ref tmp[1965076]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103448] "temp"
    (1965081 'move' tmp[1965076](1965078 '.' this[1108303] F5__iterator[1964934]))
    (1926398 'move' low[1926396](1926400 '.v' tmp[1965076] F0_low[1982870]))
    (1926403 'move' default_arg_first[1926394](1926406 call chpl_checkIfRangeIterWillOverflow_default_first[1103217] low[1926396]))
    const-val default_arg_last[1926408]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val high[1926410]:int(64)[13] "temp"
    ref tmp[1965083]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103448] "temp"
    (1965088 'move' tmp[1965083](1965085 '.' this[1108303] F5__iterator[1964934]))
    (1926412 'move' high[1926410](1926414 '.v' tmp[1965083] F1_high[1982874]))
    (1926417 'move' default_arg_last[1926408](1926420 call chpl_checkIfRangeIterWillOverflow_default_last[1103245] high[1926410]))
    const-val _return_tmp_[1926422]:bool[10] "dead after last mention" "temp"
    const-val low[1926424]:int(64)[13] "temp"
    ref tmp[1965090]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103448] "temp"
    (1965095 'move' tmp[1965090](1965092 '.' this[1108303] F5__iterator[1964934]))
    (1926426 'move' low[1926424](1926428 '.v' tmp[1965090] F0_low[1982870]))
    const-val high[1926431]:int(64)[13] "temp"
    ref tmp[1965097]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103448] "temp"
    (1965102 'move' tmp[1965097](1965099 '.' this[1108303] F5__iterator[1964934]))
    (1926433 'move' high[1926431](1926435 '.v' tmp[1965097] F1_high[1982874]))
    (1926438 'move' _return_tmp_[1926422](1926441 call chpl_checkIfRangeIterWillOverflow[1096095] low[1926424] high[1926431] 1 default_arg_first[1926394] default_arg_last[1926408] 1))
    CForLoop[1926448]
    {
      const-val yret[1926477]:int(64)[13] "dead after last mention" "YVV" "temp"
      const-val tmp[1965104]:int(64)[13] "temp"
      (1965109 'move' tmp[1965104](1965106 '.v' this[1108303] F6_i[1964936]))
      (1926479 'move' yret[1926477] tmp[1965104])
      const-val _yieldedIndex[1926482]:int(64)[13] "temp"
      const-val tmp[1965111]:int(64)[13] "temp"
      (1965116 'move' tmp[1965111](1965113 '.v' this[1108303] F6_i[1964936]))
      (1926484 'move' _yieldedIndex[1926482] tmp[1965111])
      const-val i[1926488]:int(64)[13] "const" "index var" "insert auto destroy"
      (1926490 'move' i[1926488] _yieldedIndex[1926482])
      const-val yret[1926493]:int(64)[13] "dead after last mention" "YVV" "temp"
      (1926495 'move' yret[1926493] _yieldedIndex[1926482])
      const-val _yieldedIndex[1926523]:int(64)[13] "temp"
      (1926602 'move' _yieldedIndex[1926523] _yieldedIndex[1926482])
      const-val i[1926525]:int(64)[13] "const" "index var" "insert auto destroy"
      (1926527 'move' i[1926525] _yieldedIndex[1926523])
      const-val yret[1926530]:int(64)[13] "dead after last mention" "YVV" "temp"
      (1926532 'move' yret[1926530] _yieldedIndex[1926523])
      const-val _yieldedIndex[1926535]:int(64)[13] "temp"
      (1926537 'move' _yieldedIndex[1926535] _yieldedIndex[1926523])
      const-val i[1926540]:int(64)[13] "const" "index var" "insert auto destroy"
      (1926542 'move' i[1926540] _yieldedIndex[1926535])
      const-val yret[1926545]:uint(8)[100] "dead after last mention" "YVV" "temp"
      ref call_tmp[1926547]:_ref(uint(8))[936927] "dead after last mention" "maybe param" "temp"
      ref _this_tmp_[1926549]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "temp"
      ref tmp[1965118]:_ref(string)[937958] "temp"
      (1965123 'move' tmp[1965118](1965120 '.' this[1108303] F1_localThis[1964926]))
      (1926551 'move' _this_tmp_[1926549](1926554 call buff[757983] tmp[1965118]))
      val coerce_tmp[1926556]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1926558 'move' coerce_tmp[1926556](1926560 'deref' _this_tmp_[1926549]))
      (1926562 'move' call_tmp[1926547](1926565 call this[954110] coerce_tmp[1926556] _yieldedIndex[1926535]))
      val tmp[1965125]:uint(8)[100] "temp"
      (1926570 'move' tmp[1965125](1926572 'deref' call_tmp[1926547]))
      (1965127 '.=' this[1108303] value[1964940] tmp[1965125])
      const-val tmp[1965131]:uint(8)[100] "temp"
      (1965136 'move' tmp[1965131](1965133 '.v' this[1108303] value[1964940]))
      (1926574 '=' yret[1926545] tmp[1965131])
      (1926577 'noop')
      (1966925 '.=' this[1108303] more[1108278] 2)
      gotoIterEnd _end[1966923] _end[1966923]
      label _jump_break_2[1966933]
      val tmp[1965138]:_ic_chpl_direct_param_stride_range_iter[1103305] "temp"
      (1965143 'move' tmp[1965138](1965140 '.v' this[1108303] F5__iterator[1964934]))
      (1926596 call _freeIterator[1103493] tmp[1965138])
      ref tmp[1965145]:_ref(2*int(64))[1040148] "temp"
      (1965150 'move' tmp[1965145](1965147 '.' this[1108303] F4_tmp[1964932]))
      (1926599 call chpl__autoDestroy[1508492] tmp[1965145])
      val tmp[1965152]:_ic_chpl_direct_counted_range_iter_helper[1103559] "temp"
      (1965157 'move' tmp[1965152](1965154 '.v' this[1108303] F3__iterator[1964930]))
      (1926583 call _freeIterator[1103743] tmp[1965152])
      val tmp[1965159]:_ic_chpl_direct_counted_range_iter[1103809] "temp"
      (1965164 'move' tmp[1965159](1965161 '.v' this[1108303] F2__iterator[1964928]))
      (1926586 call _freeIterator[1103993] tmp[1965159])
      ref tmp[1965166]:_ref(string)[937958] "temp"
      (1965171 'move' tmp[1965166](1965168 '.' this[1108303] F1_localThis[1964926]))
      (1926589 call chpl__autoDestroy[1435320] tmp[1965166])
      gotoReturn _endchpl_bytes[1787346] _endchpl_bytes[1787346]
      label _jump_2[1966931]
      {
        const-val tmp[1965173]:int(64)[13] "temp"
        ref tmp[1965179]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103448] "temp"
        (1965184 'move' tmp[1965179](1965181 '.' this[1108303] F5__iterator[1964934]))
        (1926452 'move' tmp[1965173](1926454 '.v' tmp[1965179] F0_low[1982870]))
        (1965175 '.=' this[1108303] F7_low[1964938] tmp[1965173])
        val tmp[1965186]:int(64)[13] "temp"
        const-val tmp[1965192]:int(64)[13] "temp"
        (1965197 'move' tmp[1965192](1965194 '.v' this[1108303] F7_low[1964938]))
        (1926457 '=' tmp[1965186] tmp[1965192])
        (1965188 '.=' this[1108303] F6_i[1964936] tmp[1965186])
      }
      {
        const-val high[1926461]:int(64)[13] "temp"
        ref tmp[1965199]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103448] "temp"
        (1965204 'move' tmp[1965199](1965201 '.' this[1108303] F5__iterator[1964934]))
        (1926463 'move' high[1926461](1926465 '.v' tmp[1965199] F1_high[1982874]))
        val tmp[1965206]:int(64)[13] "temp"
        (1965211 'move' tmp[1965206](1965208 '.v' this[1108303] F6_i[1964936]))
        (1926468 '<=' tmp[1965206] high[1926461])
      }
      {
        val call_tmp[1926472]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val tmp[1965213]:int(64)[13] "temp"
        (1965218 'move' tmp[1965213](1965215 '.v' this[1108303] F6_i[1964936]))
        (1926474 '+=' tmp[1965213] 1)
        (1965220 '.=' this[1108303] F6_i[1964936] tmp[1965213])
      }
    }
    label _endchpl_direct_param_stride_range_iter[1926511]
    val tmp[1965224]:_ic_chpl_direct_param_stride_range_iter[1103305] "temp"
    (1965229 'move' tmp[1965224](1965226 '.v' this[1108303] F5__iterator[1964934]))
    (1926514 call _freeIterator[1103493] tmp[1965224])
    ref tmp[1965231]:_ref(2*int(64))[1040148] "temp"
    (1965236 'move' tmp[1965231](1965233 '.' this[1108303] F4_tmp[1964932]))
    (1926517 call chpl__autoDestroy[1508492] tmp[1965231])
    label _endchpl_direct_counted_range_iter_helper[1926519]
    val tmp[1965238]:_ic_chpl_direct_counted_range_iter_helper[1103559] "temp"
    (1965243 'move' tmp[1965238](1965240 '.v' this[1108303] F3__iterator[1964930]))
    (1863128 call _freeIterator[1103743] tmp[1965238])
    label _endchpl_direct_counted_range_iter[1863130]
    val tmp[1965245]:_ic_chpl_direct_counted_range_iter[1103809] "temp"
    (1965250 'move' tmp[1965245](1965247 '.v' this[1108303] F2__iterator[1964928]))
    (1815000 call _freeIterator[1103993] tmp[1965245])
    ref tmp[1965252]:_ref(string)[937958] "temp"
    (1965257 'move' tmp[1965252](1965254 '.' this[1108303] F1_localThis[1964926]))
    (1815002 call chpl__autoDestroy[1435320] tmp[1965252])
    label _endchpl_bytes[1787346]
    (1966935 '.=' this[1108303] more[1108278] 0)
    label _end[1966923]
    (1966970 return _void[55])
  }
  function _ic_chpl_bytes__ref_string[1108275].zip1[1108310](const in arg this[1108312]:_ic_chpl_bytes__ref_string[1108275]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    val ret[1965260]:_ir_chpl_bytes__ref_string[1108281] "dead at end of block" "RVV" "temp"
    const-val call_tmp[1965262]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1965264]:string[26] "temp"
    val localThis[1965266]:string[26] "dead at end of block" "insert auto destroy"
    val _indexOfInterest[1965268]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[1965270]:_ic_chpl_direct_counted_range_iter[1103809] "dead at end of block" "expr temp" "temp"
    ref call_tmp[1965272]:_ref(int(64))[936591] "dead at end of block" "maybe param" "temp"
    const-val call_tmp[1965274]:_ir_chpl_direct_counted_range_iter[1103815] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1965276]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    const-val ret_tmp[1965278]:_ir_chpl_direct_counted_range_iter[1103815] "temp"
    val ret[1965280]:_ir_chpl_direct_counted_range_iter[1103815] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[1965282]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[1965284]:_ic_chpl_direct_counted_range_iter_helper[1103559] "dead at end of block" "expr temp" "temp"
    const-val call_tmp[1965286]:_ir_chpl_direct_counted_range_iter_helper[1103565] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[1965288]:_ir_chpl_direct_counted_range_iter_helper[1103565] "temp"
    const-val low[1965290]:int(64)[13] "temp"
    const-val count[1965292]:int(64)[13] "temp"
    val ret[1965294]:_ir_chpl_direct_counted_range_iter_helper[1103565] "dead after last mention" "RVV" "temp"
    val call_tmp[1965296]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val tmp[1965298]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[1965300]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    const-val call_tmp[1965302]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[1965304]:int(64)[13] "temp"
    const-val call_tmp[1965306]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const tmp[1965308]:2*int(64)[1040075] "dead at end of block" "const" "insert auto destroy" "temp"
    val tmp[1965310]:2*int(64)[1040075] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
    const-val tmp[1965312]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1965314]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[1965316]:int(64)[13] "temp"
    val tmp[1965318]:2*int(64)[1040075] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
    val call_tmp[1965320]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1965322]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val low[1965324]:int(64)[13] "temp"
    val call_tmp[1965326]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
    val coerce_tmp[1965328]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val call_tmp[1965330]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    val ret_tmp[1965332]:2*int(64)[1040075] "temp"
    const-val low[1965334]:int(64)[13] "temp"
    val tmp[1965336]:2*int(64)[1040075] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
    val call_tmp[1965338]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1965340]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val count[1965342]:int(64)[13] "temp"
    val call_tmp[1965344]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val count[1965346]:int(64)[13] "temp"
    val call_tmp[1965348]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val low[1965350]:int(64)[13] "temp"
    val ret_tmp[1965352]:2*int(64)[1040075] "temp"
    const-val low[1965354]:int(64)[13] "temp"
    ref call_tmp[1965356]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
    const-val start[1965358]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1965360]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    ref call_tmp[1965362]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
    const-val end[1965364]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1965366]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    val _indexOfInterest[1965368]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[1965370]:_ic_chpl_direct_param_stride_range_iter[1103305] "dead at end of block" "expr temp" "temp"
    const-val call_tmp[1965372]:_ir_chpl_direct_param_stride_range_iter[1103311] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[1965374]:_ir_chpl_direct_param_stride_range_iter[1103311] "temp"
    val ret[1965376]:_ir_chpl_direct_param_stride_range_iter[1103311] "dead after last mention" "RVV" "temp"
    val call_tmp[1965378]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val i[1965380]:int(64)[13] "dead at end of block" "insert auto destroy"
    val call_tmp[1965382]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1965384]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val default_arg_first[1965386]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val low[1965388]:int(64)[13] "temp"
    const-val default_arg_last[1965390]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val high[1965392]:int(64)[13] "temp"
    const-val _return_tmp_[1965394]:bool[10] "dead after last mention" "temp"
    const-val low[1965396]:int(64)[13] "temp"
    const-val high[1965398]:int(64)[13] "temp"
    val yret[1965400]:int(64)[13] "dead after last mention" "YVV" "temp"
    val _yieldedIndex[1965402]:int(64)[13] "temp"
    const i[1965404]:int(64)[13] "const" "index var" "insert auto destroy"
    val yret[1965406]:int(64)[13] "dead after last mention" "YVV" "temp"
    val _yieldedIndex[1965408]:int(64)[13] "temp"
    const i[1965410]:int(64)[13] "const" "index var" "insert auto destroy"
    val yret[1965412]:int(64)[13] "dead after last mention" "YVV" "temp"
    val _yieldedIndex[1965414]:int(64)[13] "temp"
    const i[1965416]:int(64)[13] "const" "index var" "insert auto destroy"
    val yret[1965418]:uint(8)[100] "dead after last mention" "YVV" "temp"
    ref call_tmp[1965420]:_ref(uint(8))[936927] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[1965422]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "temp"
    val coerce_tmp[1965424]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val coerce_tmp[1965426]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    const-val low[1965428]:int(64)[13] "temp"
    const-val high[1965430]:int(64)[13] "temp"
    val call_tmp[1965432]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    label _endchpl_direct_param_stride_range_iter[1965434]
    label _endchpl_direct_counted_range_iter_helper[1965436]
    label _endchpl_direct_counted_range_iter[1965438]
    label _endchpl_bytes[1965440]
    ref tmp[1965442]:_ref(string)[937958] "temp"
    val tmp[1965444]:string[26] "temp"
    ref tmp[1965446]:_ref(string)[937958] "temp"
    val tmp[1965448]:_ic_chpl_direct_counted_range_iter[1103809] "temp"
    ref tmp[1965450]:_ref(_ic_chpl_direct_counted_range_iter)[1103952] "temp"
    ref tmp[1965452]:_ref(_ic_chpl_direct_counted_range_iter)[1103952] "temp"
    val tmp[1965454]:_ic_chpl_direct_counted_range_iter_helper[1103559] "temp"
    ref tmp[1965456]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103702] "temp"
    ref tmp[1965458]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103702] "temp"
    ref tmp[1965460]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103702] "temp"
    ref tmp[1965462]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103702] "temp"
    ref tmp[1965464]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103702] "temp"
    ref tmp[1965466]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103702] "temp"
    ref tmp[1965468]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103702] "temp"
    ref tmp[1965470]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103702] "temp"
    const tmp[1965472]:2*int(64)[1040075] "temp"
    ref tmp[1965474]:_ref(2*int(64))[1040148] "temp"
    ref tmp[1965476]:_ref(2*int(64))[1040148] "temp"
    val tmp[1965478]:_ic_chpl_direct_param_stride_range_iter[1103305] "temp"
    val tmp[1965480]:int(64)[13] "temp"
    ref tmp[1965482]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103448] "temp"
    ref tmp[1965484]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103448] "temp"
    ref tmp[1965486]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103448] "temp"
    ref tmp[1965488]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103448] "temp"
    val tmp[1965490]:int(64)[13] "temp"
    val tmp[1965492]:int(64)[13] "temp"
    ref tmp[1965494]:_ref(string)[937958] "temp"
    val tmp[1965496]:uint(8)[100] "temp"
    val tmp[1965498]:uint(8)[100] "temp"
    val tmp[1965500]:_ic_chpl_direct_param_stride_range_iter[1103305] "temp"
    ref tmp[1965502]:_ref(2*int(64))[1040148] "temp"
    val tmp[1965504]:_ic_chpl_direct_counted_range_iter_helper[1103559] "temp"
    val tmp[1965506]:_ic_chpl_direct_counted_range_iter[1103809] "temp"
    ref tmp[1965508]:_ref(string)[937958] "temp"
    const-val tmp[1965510]:int(64)[13] "temp"
    ref tmp[1965512]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103448] "temp"
    val tmp[1965514]:int(64)[13] "temp"
    const-val tmp[1965516]:int(64)[13] "temp"
    ref tmp[1965518]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103448] "temp"
    val tmp[1965520]:int(64)[13] "temp"
    val tmp[1965522]:int(64)[13] "temp"
    val tmp[1965524]:_ic_chpl_direct_param_stride_range_iter[1103305] "temp"
    ref tmp[1965526]:_ref(2*int(64))[1040148] "temp"
    val tmp[1965528]:_ic_chpl_direct_counted_range_iter_helper[1103559] "temp"
    val tmp[1965530]:_ic_chpl_direct_counted_range_iter[1103809] "temp"
    ref tmp[1965532]:_ref(string)[937958] "temp"
    (1965534 'move' tmp[1965442](1965536 '.v' this[1108312] F0_this[1964922]))
    (1965540 call localize[32889] tmp[1965442] ret_tmp[1965264])
    (1965543 'move' call_tmp[1965262] ret_tmp[1965264])
    (1965546 'move' tmp[1965444] call_tmp[1965262])
    (1965549 '.=' this[1108312] F1_localThis[1964926] tmp[1965444])
    (1965553 'move' tmp[1965446](1965555 '.' this[1108312] F1_localThis[1964926]))
    (1965558 'move' call_tmp[1965272](1965561 call buffLen[757905] tmp[1965446]))
    (1965563 'move' coerce_tmp[1965276](1965565 'deref' call_tmp[1965272]))
    (1965568 call chpl_direct_counted_range_iter[458034] 0 coerce_tmp[1965276] ret_tmp[1965278])
    (1965572 'move' call_tmp[1965274] ret_tmp[1965278])
    (1965575 'move' tmp[1965448](1965578 call _getIterator[1103824] call_tmp[1965274]))
    (1965580 '.=' this[1108312] F2__iterator[1964928] tmp[1965448])
    (1965584 'move' tmp[1965450](1965586 '.' this[1108312] F2__iterator[1964928]))
    (1965589 'move' low[1965290](1965591 '.v' tmp[1965450] F0_low[1976900]))
    (1965594 'move' tmp[1965452](1965596 '.' this[1108312] F2__iterator[1964928]))
    (1965599 'move' count[1965292](1965601 '.v' tmp[1965452] F1_count[1976904]))
    (1965605 call chpl_direct_counted_range_iter_helper[1102117] low[1965290] count[1965292] ret_tmp[1965288])
    (1965609 'move' call_tmp[1965286] ret_tmp[1965288])
    (1965612 'move' tmp[1965454](1965615 call _getIterator[1103574] call_tmp[1965286]))
    (1965617 '.=' this[1108312] F3__iterator[1964930] tmp[1965454])
    (1965621 'move' tmp[1965456](1965623 '.' this[1108312] F3__iterator[1964930]))
    (1965626 'move' count[1965304](1965628 '.v' tmp[1965456] F1_count[1981376]))
    (1965631 'move' call_tmp[1965302](1965634 call <[948417] count[1965304]))
    (1965636 'move' tmp[1965300] call_tmp[1965302])
    (1965639 'move' tmp[1965298] call_tmp[1965302])
    (1965642 'move' call_tmp[1965306] call_tmp[1965302])
    if call_tmp[1965302]
    {
      (1965648 call boundsCheckHalt[210185] "With a negative count, the range must have a last index.")
    }
    (1965651 'move' tmp[1965458](1965653 '.' this[1108312] F3__iterator[1964930]))
    (1965656 'move' count[1965316](1965658 '.v' tmp[1965458] F1_count[1981376]))
    (1965661 'move' call_tmp[1965314](1965664 call ==[435666] count[1965316] 0))
    (1965667 'move' tmp[1965312] call_tmp[1965314])
    if call_tmp[1965314]
    {
      const-val tmp[1965672]:2*int(64)[1040075] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      val call_tmp[1965674]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[1965676]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val low[1965678]:int(64)[13] "temp"
      ref tmp[1965680]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103702] "temp"
      (1965682 'move' tmp[1965680](1965684 '.' this[1108312] F3__iterator[1964930]))
      (1965687 'move' low[1965678](1965689 '.v' tmp[1965680] F0_low[1981372]))
      (1965692 'move' call_tmp[1965676](1965695 call _cast[956053] low[1965678]))
      const-val call_tmp[1965697]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1965699]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1965701 'move' coerce_tmp[1965699](1965703 'cast' uint(64)[115] 1))
      (1965706 'move' call_tmp[1965697](1965709 call -[962212] call_tmp[1965676]))
      const-val call_tmp[1965711]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (1965713 'move' call_tmp[1965711](1965716 call _cast[953562] call_tmp[1965697]))
      const-val ret_tmp[1965718]:2*int(64)[1040075] "temp"
      const-val low[1965720]:int(64)[13] "temp"
      ref tmp[1965722]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103702] "temp"
      (1965724 'move' tmp[1965722](1965726 '.' this[1108312] F3__iterator[1964930]))
      (1965729 'move' low[1965720](1965731 '.v' tmp[1965722] F0_low[1981372]))
      (1965735 call _build_tuple[1040033] low[1965720] call_tmp[1965711] ret_tmp[1965718])
      (1965739 'move' tmp[1965672] ret_tmp[1965718])
      (1965742 'move' tmp[1965310] tmp[1965672])
    }
    {
      const-val tmp[1965746]:2*int(64)[1040075] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      val call_tmp[1965748]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[1965750]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val count[1965752]:int(64)[13] "temp"
      ref tmp[1965754]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103702] "temp"
      (1965756 'move' tmp[1965754](1965758 '.' this[1108312] F3__iterator[1964930]))
      (1965761 'move' count[1965752](1965763 '.v' tmp[1965754] F1_count[1981376]))
      (1965766 'move' call_tmp[1965750] count[1965752])
      const-val call_tmp[1965769]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val count[1965771]:int(64)[13] "temp"
      ref tmp[1965773]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103702] "temp"
      (1965775 'move' tmp[1965773](1965777 '.' this[1108312] F3__iterator[1964930]))
      (1965780 'move' count[1965771](1965782 '.v' tmp[1965773] F1_count[1981376]))
      (1965785 'move' call_tmp[1965769](1965788 call -[962245] count[1965771]))
      const-val call_tmp[1965790]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val low[1965792]:int(64)[13] "temp"
      ref tmp[1965794]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103702] "temp"
      (1965796 'move' tmp[1965794](1965798 '.' this[1108312] F3__iterator[1964930]))
      (1965801 'move' low[1965792](1965803 '.v' tmp[1965794] F0_low[1981372]))
      (1965806 'move' call_tmp[1965790](1965809 call +[439674] low[1965792] call_tmp[1965769]))
      const-val ret_tmp[1965812]:2*int(64)[1040075] "temp"
      const-val low[1965814]:int(64)[13] "temp"
      ref tmp[1965816]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103702] "temp"
      (1965818 'move' tmp[1965816](1965820 '.' this[1108312] F3__iterator[1964930]))
      (1965823 'move' low[1965814](1965825 '.v' tmp[1965816] F0_low[1981372]))
      (1965829 call _build_tuple[1040033] low[1965814] call_tmp[1965790] ret_tmp[1965812])
      (1965833 'move' tmp[1965746] ret_tmp[1965812])
      (1965836 'move' tmp[1965310] tmp[1965746])
    }
    (1965840 '=' tmp[1965472] tmp[1965310])
    (1965843 '.=' this[1108312] F4_tmp[1964932] tmp[1965472])
    (1965847 'noop')
    1
    (1965849 'move' tmp[1965474](1965851 '.' this[1108312] F4_tmp[1964932]))
    (1965854 'move' call_tmp[1965356](1965856 '.' tmp[1965474] x0[1040071]))
    (1965859 'move' coerce_tmp[1965360](1965861 'deref' call_tmp[1965356]))
    (1965863 '=' start[1965358] coerce_tmp[1965360])
    (1965866 'noop')
    (1965867 'move' tmp[1965476](1965869 '.' this[1108312] F4_tmp[1964932]))
    (1965872 'move' call_tmp[1965362](1965874 '.' tmp[1965476] x1[1040073]))
    (1965877 'move' coerce_tmp[1965366](1965879 'deref' call_tmp[1965362]))
    (1965881 '=' end[1965364] coerce_tmp[1965366])
    (1965884 'noop')
    (1965886 call chpl_direct_param_stride_range_iter[1102543] coerce_tmp[1965360] coerce_tmp[1965366] ret_tmp[1965374])
    (1965890 'move' call_tmp[1965372] ret_tmp[1965374])
    (1965893 'move' tmp[1965478](1965896 call _getIterator[1103320] call_tmp[1965372]))
    (1965898 '.=' this[1108312] F5__iterator[1964934] tmp[1965478])
    (1965903 call chpl_range_check_stride[1102863])
    (1965904 'move' tmp[1965480] 0)
    (1965907 '.=' this[1108312] F6_i[1964936] tmp[1965480])
    (1965911 'move' tmp[1965482](1965913 '.' this[1108312] F5__iterator[1964934]))
    (1965916 'move' low[1965388](1965918 '.v' tmp[1965482] F0_low[1982870]))
    (1965921 'move' default_arg_first[1965386](1965924 call chpl_checkIfRangeIterWillOverflow_default_first[1103217] low[1965388]))
    (1965926 'move' tmp[1965484](1965928 '.' this[1108312] F5__iterator[1964934]))
    (1965931 'move' high[1965392](1965933 '.v' tmp[1965484] F1_high[1982874]))
    (1965936 'move' default_arg_last[1965390](1965939 call chpl_checkIfRangeIterWillOverflow_default_last[1103245] high[1965392]))
    (1965941 'move' tmp[1965486](1965943 '.' this[1108312] F5__iterator[1964934]))
    (1965946 'move' low[1965396](1965948 '.v' tmp[1965486] F0_low[1982870]))
    (1965951 'move' tmp[1965488](1965953 '.' this[1108312] F5__iterator[1964934]))
    (1965956 'move' high[1965398](1965958 '.v' tmp[1965488] F1_high[1982874]))
    (1965961 'move' _return_tmp_[1965394](1965964 call chpl_checkIfRangeIterWillOverflow[1096095] low[1965396] high[1965398] 1 default_arg_first[1965386] default_arg_last[1965390] 1))
    (1965971 return _void[55])
  }
  function _ic_chpl_bytes__ref_string[1108275].zip2[1108319](const in arg this[1108321]:_ic_chpl_bytes__ref_string[1108275]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    val ret[1965974]:_ir_chpl_bytes__ref_string[1108281] "dead at end of block" "RVV" "temp"
    val call_tmp[1965976]:string[26] "dead at end of block" "maybe param" "temp"
    val ret_tmp[1965978]:string[26] "temp"
    val localThis[1965980]:string[26] "dead at end of block" "insert auto destroy"
    val _indexOfInterest[1965982]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[1965984]:_ic_chpl_direct_counted_range_iter[1103809] "dead at end of block" "expr temp" "temp"
    ref call_tmp[1965986]:_ref(int(64))[936591] "dead at end of block" "maybe param" "temp"
    val call_tmp[1965988]:_ir_chpl_direct_counted_range_iter[1103815] "dead at end of block" "expr temp" "maybe param" "temp"
    val coerce_tmp[1965990]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val ret_tmp[1965992]:_ir_chpl_direct_counted_range_iter[1103815] "temp"
    val ret[1965994]:_ir_chpl_direct_counted_range_iter[1103815] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[1965996]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[1965998]:_ic_chpl_direct_counted_range_iter_helper[1103559] "dead at end of block" "expr temp" "temp"
    val call_tmp[1966000]:_ir_chpl_direct_counted_range_iter_helper[1103565] "dead at end of block" "expr temp" "maybe param" "temp"
    val ret_tmp[1966002]:_ir_chpl_direct_counted_range_iter_helper[1103565] "temp"
    const-val low[1966004]:int(64)[13] "temp"
    const-val count[1966006]:int(64)[13] "temp"
    val ret[1966008]:_ir_chpl_direct_counted_range_iter_helper[1103565] "dead after last mention" "RVV" "temp"
    val call_tmp[1966010]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[1966012]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val tmp[1966014]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    val call_tmp[1966016]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[1966018]:int(64)[13] "temp"
    val call_tmp[1966020]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const tmp[1966022]:2*int(64)[1040075] "dead at end of block" "const" "insert auto destroy" "temp"
    val tmp[1966024]:2*int(64)[1040075] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
    val tmp[1966026]:bool[10] "dead after last mention" "maybe param" "temp"
    val call_tmp[1966028]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[1966030]:int(64)[13] "temp"
    val tmp[1966032]:2*int(64)[1040075] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
    val call_tmp[1966034]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1966036]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val low[1966038]:int(64)[13] "temp"
    val call_tmp[1966040]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
    val coerce_tmp[1966042]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val call_tmp[1966044]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    val ret_tmp[1966046]:2*int(64)[1040075] "temp"
    const-val low[1966048]:int(64)[13] "temp"
    val tmp[1966050]:2*int(64)[1040075] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
    val call_tmp[1966052]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1966054]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val count[1966056]:int(64)[13] "temp"
    val call_tmp[1966058]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val count[1966060]:int(64)[13] "temp"
    val call_tmp[1966062]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val low[1966064]:int(64)[13] "temp"
    val ret_tmp[1966066]:2*int(64)[1040075] "temp"
    const-val low[1966068]:int(64)[13] "temp"
    ref call_tmp[1966070]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
    const start[1966072]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[1966074]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    ref call_tmp[1966076]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
    const end[1966078]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[1966080]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    val _indexOfInterest[1966082]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[1966084]:_ic_chpl_direct_param_stride_range_iter[1103305] "dead at end of block" "expr temp" "temp"
    val call_tmp[1966086]:_ir_chpl_direct_param_stride_range_iter[1103311] "dead at end of block" "expr temp" "maybe param" "temp"
    val ret_tmp[1966088]:_ir_chpl_direct_param_stride_range_iter[1103311] "temp"
    val ret[1966090]:_ir_chpl_direct_param_stride_range_iter[1103311] "dead after last mention" "RVV" "temp"
    val call_tmp[1966092]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val i[1966094]:int(64)[13] "dead at end of block" "insert auto destroy"
    val call_tmp[1966096]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1966098]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val default_arg_first[1966100]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val low[1966102]:int(64)[13] "temp"
    val default_arg_last[1966104]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val high[1966106]:int(64)[13] "temp"
    val _return_tmp_[1966108]:bool[10] "dead after last mention" "temp"
    const-val low[1966110]:int(64)[13] "temp"
    const-val high[1966112]:int(64)[13] "temp"
    const-val yret[1966114]:int(64)[13] "dead after last mention" "YVV" "temp"
    const-val _yieldedIndex[1966116]:int(64)[13] "temp"
    const-val i[1966118]:int(64)[13] "const" "index var" "insert auto destroy"
    const-val yret[1966120]:int(64)[13] "dead after last mention" "YVV" "temp"
    const-val _yieldedIndex[1966122]:int(64)[13] "temp"
    const-val i[1966124]:int(64)[13] "const" "index var" "insert auto destroy"
    const-val yret[1966126]:int(64)[13] "dead after last mention" "YVV" "temp"
    const-val _yieldedIndex[1966128]:int(64)[13] "temp"
    const-val i[1966130]:int(64)[13] "const" "index var" "insert auto destroy"
    const-val yret[1966132]:uint(8)[100] "dead after last mention" "YVV" "temp"
    ref call_tmp[1966134]:_ref(uint(8))[936927] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[1966136]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "temp"
    val coerce_tmp[1966138]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val coerce_tmp[1966140]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    const-val low[1966142]:int(64)[13] "temp"
    const-val high[1966144]:int(64)[13] "temp"
    val call_tmp[1966146]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    label _endchpl_direct_param_stride_range_iter[1966148]
    label _endchpl_direct_counted_range_iter_helper[1966150]
    label _endchpl_direct_counted_range_iter[1966152]
    label _endchpl_bytes[1966154]
    ref tmp[1966156]:_ref(string)[937958] "temp"
    val tmp[1966158]:string[26] "temp"
    ref tmp[1966160]:_ref(string)[937958] "temp"
    val tmp[1966162]:_ic_chpl_direct_counted_range_iter[1103809] "temp"
    ref tmp[1966164]:_ref(_ic_chpl_direct_counted_range_iter)[1103952] "temp"
    ref tmp[1966166]:_ref(_ic_chpl_direct_counted_range_iter)[1103952] "temp"
    val tmp[1966168]:_ic_chpl_direct_counted_range_iter_helper[1103559] "temp"
    ref tmp[1966170]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103702] "temp"
    ref tmp[1966172]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103702] "temp"
    ref tmp[1966174]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103702] "temp"
    ref tmp[1966176]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103702] "temp"
    ref tmp[1966178]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103702] "temp"
    ref tmp[1966180]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103702] "temp"
    ref tmp[1966182]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103702] "temp"
    ref tmp[1966184]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103702] "temp"
    const tmp[1966186]:2*int(64)[1040075] "temp"
    ref tmp[1966188]:_ref(2*int(64))[1040148] "temp"
    ref tmp[1966190]:_ref(2*int(64))[1040148] "temp"
    val tmp[1966192]:_ic_chpl_direct_param_stride_range_iter[1103305] "temp"
    val tmp[1966194]:int(64)[13] "temp"
    ref tmp[1966196]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103448] "temp"
    ref tmp[1966198]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103448] "temp"
    ref tmp[1966200]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103448] "temp"
    ref tmp[1966202]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103448] "temp"
    const-val tmp[1966204]:int(64)[13] "temp"
    const-val tmp[1966206]:int(64)[13] "temp"
    ref tmp[1966208]:_ref(string)[937958] "temp"
    val tmp[1966210]:uint(8)[100] "temp"
    const-val tmp[1966212]:uint(8)[100] "temp"
    val tmp[1966214]:_ic_chpl_direct_param_stride_range_iter[1103305] "temp"
    ref tmp[1966216]:_ref(2*int(64))[1040148] "temp"
    val tmp[1966218]:_ic_chpl_direct_counted_range_iter_helper[1103559] "temp"
    val tmp[1966220]:_ic_chpl_direct_counted_range_iter[1103809] "temp"
    ref tmp[1966222]:_ref(string)[937958] "temp"
    const-val tmp[1966224]:int(64)[13] "temp"
    ref tmp[1966226]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103448] "temp"
    val tmp[1966228]:int(64)[13] "temp"
    const-val tmp[1966230]:int(64)[13] "temp"
    ref tmp[1966232]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103448] "temp"
    val tmp[1966234]:int(64)[13] "temp"
    val tmp[1966236]:int(64)[13] "temp"
    val tmp[1966238]:_ic_chpl_direct_param_stride_range_iter[1103305] "temp"
    ref tmp[1966240]:_ref(2*int(64))[1040148] "temp"
    val tmp[1966242]:_ic_chpl_direct_counted_range_iter_helper[1103559] "temp"
    val tmp[1966244]:_ic_chpl_direct_counted_range_iter[1103809] "temp"
    ref tmp[1966246]:_ref(string)[937958] "temp"
    (1966248 'move' tmp[1966204](1966250 '.v' this[1108321] F6_i[1964936]))
    (1966253 'move' yret[1966114] tmp[1966204])
    (1966256 'move' tmp[1966206](1966258 '.v' this[1108321] F6_i[1964936]))
    (1966261 'move' _yieldedIndex[1966116] tmp[1966206])
    (1966264 'move' i[1966118] _yieldedIndex[1966116])
    (1966267 'move' yret[1966120] _yieldedIndex[1966116])
    (1966270 'move' _yieldedIndex[1966122] _yieldedIndex[1966116])
    (1966273 'move' i[1966124] _yieldedIndex[1966122])
    (1966276 'move' yret[1966126] _yieldedIndex[1966122])
    (1966279 'move' _yieldedIndex[1966128] _yieldedIndex[1966122])
    (1966282 'move' i[1966130] _yieldedIndex[1966128])
    (1966285 'move' tmp[1966208](1966287 '.' this[1108321] F1_localThis[1964926]))
    (1966290 'move' _this_tmp_[1966136](1966293 call buff[757983] tmp[1966208]))
    (1966295 'move' coerce_tmp[1966138](1966297 'deref' _this_tmp_[1966136]))
    (1966299 'move' call_tmp[1966134](1966302 call this[954110] coerce_tmp[1966138] _yieldedIndex[1966128]))
    (1966305 'move' tmp[1966210](1966307 'deref' call_tmp[1966134]))
    (1966309 '.=' this[1108321] value[1964940] tmp[1966210])
    (1966313 'move' tmp[1966212](1966315 '.v' this[1108321] value[1964940]))
    (1966318 '=' yret[1966132] tmp[1966212])
    (1966321 'noop')
    (1966322 '.=' this[1108321] more[1108278] 2)
    (1966326 return _void[55])
  }
  function _ic_chpl_bytes__ref_string[1108275].zip3[1108328](const in arg this[1108330]:_ic_chpl_bytes__ref_string[1108275]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    val ret[1966329]:_ir_chpl_bytes__ref_string[1108281] "dead at end of block" "RVV" "temp"
    val call_tmp[1966331]:string[26] "dead at end of block" "maybe param" "temp"
    val ret_tmp[1966333]:string[26] "temp"
    val localThis[1966335]:string[26] "dead at end of block" "insert auto destroy"
    val _indexOfInterest[1966337]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[1966339]:_ic_chpl_direct_counted_range_iter[1103809] "dead at end of block" "expr temp" "temp"
    ref call_tmp[1966341]:_ref(int(64))[936591] "dead at end of block" "maybe param" "temp"
    val call_tmp[1966343]:_ir_chpl_direct_counted_range_iter[1103815] "dead at end of block" "expr temp" "maybe param" "temp"
    val coerce_tmp[1966345]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val ret_tmp[1966347]:_ir_chpl_direct_counted_range_iter[1103815] "temp"
    val ret[1966349]:_ir_chpl_direct_counted_range_iter[1103815] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[1966351]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[1966353]:_ic_chpl_direct_counted_range_iter_helper[1103559] "dead at end of block" "expr temp" "temp"
    val call_tmp[1966355]:_ir_chpl_direct_counted_range_iter_helper[1103565] "dead at end of block" "expr temp" "maybe param" "temp"
    val ret_tmp[1966357]:_ir_chpl_direct_counted_range_iter_helper[1103565] "temp"
    const-val low[1966359]:int(64)[13] "temp"
    const-val count[1966361]:int(64)[13] "temp"
    val ret[1966363]:_ir_chpl_direct_counted_range_iter_helper[1103565] "dead after last mention" "RVV" "temp"
    val call_tmp[1966365]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[1966367]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val tmp[1966369]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    val call_tmp[1966371]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[1966373]:int(64)[13] "temp"
    val call_tmp[1966375]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const tmp[1966377]:2*int(64)[1040075] "dead at end of block" "const" "insert auto destroy" "temp"
    val tmp[1966379]:2*int(64)[1040075] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
    val tmp[1966381]:bool[10] "dead after last mention" "maybe param" "temp"
    val call_tmp[1966383]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[1966385]:int(64)[13] "temp"
    val tmp[1966387]:2*int(64)[1040075] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
    val call_tmp[1966389]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1966391]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val low[1966393]:int(64)[13] "temp"
    val call_tmp[1966395]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
    val coerce_tmp[1966397]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val call_tmp[1966399]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    val ret_tmp[1966401]:2*int(64)[1040075] "temp"
    const-val low[1966403]:int(64)[13] "temp"
    val tmp[1966405]:2*int(64)[1040075] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
    val call_tmp[1966407]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1966409]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val count[1966411]:int(64)[13] "temp"
    val call_tmp[1966413]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val count[1966415]:int(64)[13] "temp"
    val call_tmp[1966417]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val low[1966419]:int(64)[13] "temp"
    val ret_tmp[1966421]:2*int(64)[1040075] "temp"
    const-val low[1966423]:int(64)[13] "temp"
    ref call_tmp[1966425]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
    const start[1966427]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[1966429]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    ref call_tmp[1966431]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
    const end[1966433]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[1966435]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    val _indexOfInterest[1966437]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[1966439]:_ic_chpl_direct_param_stride_range_iter[1103305] "dead at end of block" "expr temp" "temp"
    val call_tmp[1966441]:_ir_chpl_direct_param_stride_range_iter[1103311] "dead at end of block" "expr temp" "maybe param" "temp"
    val ret_tmp[1966443]:_ir_chpl_direct_param_stride_range_iter[1103311] "temp"
    val ret[1966445]:_ir_chpl_direct_param_stride_range_iter[1103311] "dead after last mention" "RVV" "temp"
    val call_tmp[1966447]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val i[1966449]:int(64)[13] "dead at end of block" "insert auto destroy"
    val call_tmp[1966451]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1966453]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val default_arg_first[1966455]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val low[1966457]:int(64)[13] "temp"
    val default_arg_last[1966459]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val high[1966461]:int(64)[13] "temp"
    val _return_tmp_[1966463]:bool[10] "dead after last mention" "temp"
    const-val low[1966465]:int(64)[13] "temp"
    const-val high[1966467]:int(64)[13] "temp"
    val yret[1966469]:int(64)[13] "dead after last mention" "YVV" "temp"
    val _yieldedIndex[1966471]:int(64)[13] "temp"
    const i[1966473]:int(64)[13] "const" "index var" "insert auto destroy"
    val yret[1966475]:int(64)[13] "dead after last mention" "YVV" "temp"
    val _yieldedIndex[1966477]:int(64)[13] "temp"
    const i[1966479]:int(64)[13] "const" "index var" "insert auto destroy"
    val yret[1966481]:int(64)[13] "dead after last mention" "YVV" "temp"
    val _yieldedIndex[1966483]:int(64)[13] "temp"
    const i[1966485]:int(64)[13] "const" "index var" "insert auto destroy"
    val yret[1966487]:uint(8)[100] "dead after last mention" "YVV" "temp"
    ref call_tmp[1966489]:_ref(uint(8))[936927] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[1966491]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "temp"
    val coerce_tmp[1966493]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val coerce_tmp[1966495]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    const-val low[1966497]:int(64)[13] "temp"
    const-val high[1966499]:int(64)[13] "temp"
    val call_tmp[1966501]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    label _endchpl_direct_param_stride_range_iter[1966503]
    label _endchpl_direct_counted_range_iter_helper[1966505]
    label _endchpl_direct_counted_range_iter[1966507]
    label _endchpl_bytes[1966509]
    ref tmp[1966511]:_ref(string)[937958] "temp"
    val tmp[1966513]:string[26] "temp"
    ref tmp[1966515]:_ref(string)[937958] "temp"
    val tmp[1966517]:_ic_chpl_direct_counted_range_iter[1103809] "temp"
    ref tmp[1966519]:_ref(_ic_chpl_direct_counted_range_iter)[1103952] "temp"
    ref tmp[1966521]:_ref(_ic_chpl_direct_counted_range_iter)[1103952] "temp"
    val tmp[1966523]:_ic_chpl_direct_counted_range_iter_helper[1103559] "temp"
    ref tmp[1966525]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103702] "temp"
    ref tmp[1966527]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103702] "temp"
    ref tmp[1966529]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103702] "temp"
    ref tmp[1966531]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103702] "temp"
    ref tmp[1966533]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103702] "temp"
    ref tmp[1966535]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103702] "temp"
    ref tmp[1966537]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103702] "temp"
    ref tmp[1966539]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103702] "temp"
    const tmp[1966541]:2*int(64)[1040075] "temp"
    ref tmp[1966543]:_ref(2*int(64))[1040148] "temp"
    ref tmp[1966545]:_ref(2*int(64))[1040148] "temp"
    val tmp[1966547]:_ic_chpl_direct_param_stride_range_iter[1103305] "temp"
    val tmp[1966549]:int(64)[13] "temp"
    ref tmp[1966551]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103448] "temp"
    ref tmp[1966553]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103448] "temp"
    ref tmp[1966555]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103448] "temp"
    ref tmp[1966557]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103448] "temp"
    val tmp[1966559]:int(64)[13] "temp"
    val tmp[1966561]:int(64)[13] "temp"
    ref tmp[1966563]:_ref(string)[937958] "temp"
    val tmp[1966565]:uint(8)[100] "temp"
    val tmp[1966567]:uint(8)[100] "temp"
    val tmp[1966569]:_ic_chpl_direct_param_stride_range_iter[1103305] "temp"
    ref tmp[1966571]:_ref(2*int(64))[1040148] "temp"
    val tmp[1966573]:_ic_chpl_direct_counted_range_iter_helper[1103559] "temp"
    val tmp[1966575]:_ic_chpl_direct_counted_range_iter[1103809] "temp"
    ref tmp[1966577]:_ref(string)[937958] "temp"
    const-val tmp[1966579]:int(64)[13] "temp"
    ref tmp[1966581]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103448] "temp"
    val tmp[1966583]:int(64)[13] "temp"
    const-val tmp[1966585]:int(64)[13] "temp"
    ref tmp[1966587]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103448] "temp"
    val tmp[1966589]:int(64)[13] "temp"
    val tmp[1966591]:int(64)[13] "temp"
    val tmp[1966593]:_ic_chpl_direct_param_stride_range_iter[1103305] "temp"
    ref tmp[1966595]:_ref(2*int(64))[1040148] "temp"
    val tmp[1966597]:_ic_chpl_direct_counted_range_iter_helper[1103559] "temp"
    val tmp[1966599]:_ic_chpl_direct_counted_range_iter[1103809] "temp"
    ref tmp[1966601]:_ref(string)[937958] "temp"
    (1966603 return _void[55])
  }
  function _ic_chpl_bytes__ref_string[1108275].zip4[1108337](const in arg this[1108339]:_ic_chpl_bytes__ref_string[1108275]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    val ret[1966606]:_ir_chpl_bytes__ref_string[1108281] "dead at end of block" "RVV" "temp"
    val call_tmp[1966608]:string[26] "dead at end of block" "maybe param" "temp"
    val ret_tmp[1966610]:string[26] "temp"
    val localThis[1966612]:string[26] "dead at end of block" "insert auto destroy"
    val _indexOfInterest[1966614]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[1966616]:_ic_chpl_direct_counted_range_iter[1103809] "dead at end of block" "expr temp" "temp"
    ref call_tmp[1966618]:_ref(int(64))[936591] "dead at end of block" "maybe param" "temp"
    val call_tmp[1966620]:_ir_chpl_direct_counted_range_iter[1103815] "dead at end of block" "expr temp" "maybe param" "temp"
    val coerce_tmp[1966622]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val ret_tmp[1966624]:_ir_chpl_direct_counted_range_iter[1103815] "temp"
    val ret[1966626]:_ir_chpl_direct_counted_range_iter[1103815] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[1966628]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[1966630]:_ic_chpl_direct_counted_range_iter_helper[1103559] "dead at end of block" "expr temp" "temp"
    val call_tmp[1966632]:_ir_chpl_direct_counted_range_iter_helper[1103565] "dead at end of block" "expr temp" "maybe param" "temp"
    val ret_tmp[1966634]:_ir_chpl_direct_counted_range_iter_helper[1103565] "temp"
    const-val low[1966636]:int(64)[13] "temp"
    const-val count[1966638]:int(64)[13] "temp"
    val ret[1966640]:_ir_chpl_direct_counted_range_iter_helper[1103565] "dead after last mention" "RVV" "temp"
    val call_tmp[1966642]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[1966644]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val tmp[1966646]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    val call_tmp[1966648]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[1966650]:int(64)[13] "temp"
    val call_tmp[1966652]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const tmp[1966654]:2*int(64)[1040075] "dead at end of block" "const" "insert auto destroy" "temp"
    val tmp[1966656]:2*int(64)[1040075] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
    val tmp[1966658]:bool[10] "dead after last mention" "maybe param" "temp"
    val call_tmp[1966660]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[1966662]:int(64)[13] "temp"
    val tmp[1966664]:2*int(64)[1040075] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
    val call_tmp[1966666]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1966668]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val low[1966670]:int(64)[13] "temp"
    val call_tmp[1966672]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
    val coerce_tmp[1966674]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val call_tmp[1966676]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    val ret_tmp[1966678]:2*int(64)[1040075] "temp"
    const-val low[1966680]:int(64)[13] "temp"
    val tmp[1966682]:2*int(64)[1040075] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
    val call_tmp[1966684]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1966686]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val count[1966688]:int(64)[13] "temp"
    val call_tmp[1966690]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val count[1966692]:int(64)[13] "temp"
    val call_tmp[1966694]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val low[1966696]:int(64)[13] "temp"
    val ret_tmp[1966698]:2*int(64)[1040075] "temp"
    const-val low[1966700]:int(64)[13] "temp"
    ref call_tmp[1966702]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
    const start[1966704]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[1966706]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    ref call_tmp[1966708]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
    const end[1966710]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[1966712]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    val _indexOfInterest[1966714]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[1966716]:_ic_chpl_direct_param_stride_range_iter[1103305] "dead at end of block" "expr temp" "temp"
    val call_tmp[1966718]:_ir_chpl_direct_param_stride_range_iter[1103311] "dead at end of block" "expr temp" "maybe param" "temp"
    val ret_tmp[1966720]:_ir_chpl_direct_param_stride_range_iter[1103311] "temp"
    val ret[1966722]:_ir_chpl_direct_param_stride_range_iter[1103311] "dead after last mention" "RVV" "temp"
    val call_tmp[1966724]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val i[1966726]:int(64)[13] "dead at end of block" "insert auto destroy"
    val call_tmp[1966728]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1966730]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val default_arg_first[1966732]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val low[1966734]:int(64)[13] "temp"
    val default_arg_last[1966736]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val high[1966738]:int(64)[13] "temp"
    val _return_tmp_[1966740]:bool[10] "dead after last mention" "temp"
    const-val low[1966742]:int(64)[13] "temp"
    const-val high[1966744]:int(64)[13] "temp"
    val yret[1966746]:int(64)[13] "dead after last mention" "YVV" "temp"
    val _yieldedIndex[1966748]:int(64)[13] "temp"
    const i[1966750]:int(64)[13] "const" "index var" "insert auto destroy"
    val yret[1966752]:int(64)[13] "dead after last mention" "YVV" "temp"
    val _yieldedIndex[1966754]:int(64)[13] "temp"
    const i[1966756]:int(64)[13] "const" "index var" "insert auto destroy"
    val yret[1966758]:int(64)[13] "dead after last mention" "YVV" "temp"
    val _yieldedIndex[1966760]:int(64)[13] "temp"
    const i[1966762]:int(64)[13] "const" "index var" "insert auto destroy"
    val yret[1966764]:uint(8)[100] "dead after last mention" "YVV" "temp"
    ref call_tmp[1966766]:_ref(uint(8))[936927] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[1966768]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "temp"
    val coerce_tmp[1966770]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val coerce_tmp[1966772]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    const-val low[1966774]:int(64)[13] "temp"
    const-val high[1966776]:int(64)[13] "temp"
    val call_tmp[1966778]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    label _endchpl_direct_param_stride_range_iter[1966780]
    label _endchpl_direct_counted_range_iter_helper[1966782]
    label _endchpl_direct_counted_range_iter[1966784]
    label _endchpl_bytes[1966786]
    ref tmp[1966788]:_ref(string)[937958] "temp"
    val tmp[1966790]:string[26] "temp"
    ref tmp[1966792]:_ref(string)[937958] "temp"
    val tmp[1966794]:_ic_chpl_direct_counted_range_iter[1103809] "temp"
    ref tmp[1966796]:_ref(_ic_chpl_direct_counted_range_iter)[1103952] "temp"
    ref tmp[1966798]:_ref(_ic_chpl_direct_counted_range_iter)[1103952] "temp"
    val tmp[1966800]:_ic_chpl_direct_counted_range_iter_helper[1103559] "temp"
    ref tmp[1966802]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103702] "temp"
    ref tmp[1966804]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103702] "temp"
    ref tmp[1966806]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103702] "temp"
    ref tmp[1966808]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103702] "temp"
    ref tmp[1966810]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103702] "temp"
    ref tmp[1966812]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103702] "temp"
    ref tmp[1966814]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103702] "temp"
    ref tmp[1966816]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103702] "temp"
    const tmp[1966818]:2*int(64)[1040075] "temp"
    ref tmp[1966820]:_ref(2*int(64))[1040148] "temp"
    ref tmp[1966822]:_ref(2*int(64))[1040148] "temp"
    val tmp[1966824]:_ic_chpl_direct_param_stride_range_iter[1103305] "temp"
    val tmp[1966826]:int(64)[13] "temp"
    ref tmp[1966828]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103448] "temp"
    ref tmp[1966830]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103448] "temp"
    ref tmp[1966832]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103448] "temp"
    ref tmp[1966834]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103448] "temp"
    val tmp[1966836]:int(64)[13] "temp"
    val tmp[1966838]:int(64)[13] "temp"
    ref tmp[1966840]:_ref(string)[937958] "temp"
    val tmp[1966842]:uint(8)[100] "temp"
    val tmp[1966844]:uint(8)[100] "temp"
    val tmp[1966846]:_ic_chpl_direct_param_stride_range_iter[1103305] "temp"
    ref tmp[1966848]:_ref(2*int(64))[1040148] "temp"
    val tmp[1966850]:_ic_chpl_direct_counted_range_iter_helper[1103559] "temp"
    val tmp[1966852]:_ic_chpl_direct_counted_range_iter[1103809] "temp"
    ref tmp[1966854]:_ref(string)[937958] "temp"
    const-val tmp[1966856]:int(64)[13] "temp"
    ref tmp[1966858]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103448] "temp"
    val tmp[1966860]:int(64)[13] "temp"
    const-val tmp[1966862]:int(64)[13] "temp"
    ref tmp[1966864]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103448] "temp"
    val tmp[1966866]:int(64)[13] "temp"
    val tmp[1966868]:int(64)[13] "temp"
    val tmp[1966870]:_ic_chpl_direct_param_stride_range_iter[1103305] "temp"
    ref tmp[1966872]:_ref(2*int(64))[1040148] "temp"
    val tmp[1966874]:_ic_chpl_direct_counted_range_iter_helper[1103559] "temp"
    val tmp[1966876]:_ic_chpl_direct_counted_range_iter[1103809] "temp"
    ref tmp[1966878]:_ref(string)[937958] "temp"
    (1966880 'move' tmp[1966870](1966882 '.v' this[1108339] F5__iterator[1964934]))
    (1966886 call _freeIterator[1103493] tmp[1966870])
    (1966888 'move' tmp[1966872](1966890 '.' this[1108339] F4_tmp[1964932]))
    (1966894 call chpl__autoDestroy[1508492] tmp[1966872])
    (1966896 'move' tmp[1966874](1966898 '.v' this[1108339] F3__iterator[1964930]))
    (1966902 call _freeIterator[1103743] tmp[1966874])
    (1966904 'move' tmp[1966876](1966906 '.v' this[1108339] F2__iterator[1964928]))
    (1966910 call _freeIterator[1103993] tmp[1966876])
    (1966912 'move' tmp[1966878](1966914 '.' this[1108339] F1_localThis[1964926]))
    (1966918 call chpl__autoDestroy[1435320] tmp[1966878])
    (1966920 return _void[55])
  }
  function _ic_chpl_bytes__ref_string[1108275].hasMore[1108346](const in arg this[1108348]:_ic_chpl_bytes__ref_string[1108275]) : int(64)[13] "auto ii" "inline" "method" "resolved"
  {
    val tmp[1966973]:int(64)[13] "temp"
    const-val high[1966975]:int(64)[13] "temp"
    ref tmp[1966977]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103448] "temp"
    (1966979 'move' tmp[1966977](1966981 '.' this[1108348] F5__iterator[1964934]))
    (1966984 'move' high[1966975](1966986 '.v' tmp[1966977] F1_high[1982874]))
    const-val tmp[1966989]:int(64)[13] "temp"
    (1966991 'move' tmp[1966989](1966993 '.v' this[1108348] F6_i[1964936]))
    (1966999 'move' tmp[1966973](1966996 '<=' tmp[1966989] high[1966975]))
    (1967001 return tmp[1966973])
  }
  function _ic_chpl_bytes__ref_string[1108275].getValue[1108355](const in arg this[1108357]:_ic_chpl_bytes__ref_string[1108275]) : uint(8)[100] "auto ii" "inline" "method" "resolved"
  {
    val tmp[1967004]:uint(8)[100] "temp"
    (1967009 'move' tmp[1967004](1967006 '.v' this[1108357] value[1964940]))
    (1967011 return tmp[1967004])
  }
  function _ref(string)[937958].chpl_bytes[33577](const  ref arg this[33579]:_ref(string)[937958], ref arg _retArg[1803026]:_ref(_ir_chpl_bytes__ref_string)[1108392]) : void[4] "fn returns via _retArg" "inline" "iterator fn" "method" "resolved" "fn synchronization free" "no return value for void"
  {
    val _ir[1967069]:_ir_chpl_bytes__ref_string[1108281] "temp"
    (1967071 '.=' _ir[1967069] F0_this[1964924] this[33579])
    (1967075 '=' _retArg[1803026] _ir[1967069])
    (1967078 return _void[55])
  }
  function _ic_chpl_bytes__ref_string[1108275].init[1108364](const in arg this[1108366]:_ic_chpl_bytes__ref_string[1108275]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    const-val tmp[1967014]:int(64)[13] "temp"
    ref tmp[1967016]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103448] "temp"
    (1967018 'move' tmp[1967016](1967020 '.' this[1108366] F5__iterator[1964934]))
    (1967023 'move' tmp[1967014](1967025 '.v' tmp[1967016] F0_low[1982870]))
    (1967028 '.=' this[1108366] F7_low[1964938] tmp[1967014])
    val tmp[1967032]:int(64)[13] "temp"
    const-val tmp[1967034]:int(64)[13] "temp"
    (1967036 'move' tmp[1967034](1967038 '.v' this[1108366] F7_low[1964938]))
    (1967041 '=' tmp[1967032] tmp[1967034])
    (1967044 '.=' this[1108366] F6_i[1964936] tmp[1967032])
    (1967048 return _void[55])
  }
  function _ic_chpl_bytes__ref_string[1108275].incr[1108373](const in arg this[1108375]:_ic_chpl_bytes__ref_string[1108275]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    val call_tmp[1967051]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[1967053]:int(64)[13] "temp"
    (1967055 'move' tmp[1967053](1967057 '.v' this[1108375] F6_i[1964936]))
    (1967060 '+=' tmp[1967053] 1)
    (1967063 '.=' this[1108375] F6_i[1964936] tmp[1967053])
    (1967067 return _void[55])
  }
  type _ic_chpl_bytes__ref_string[1108275] val super[1108276]:object[22] "super class" val more[1108278]:int(64)[13] ref F0_this[1964922]:_ref(string)[937958] val F1_localThis[1964926]:string[26] val F2__iterator[1964928]:_ic_chpl_direct_counted_range_iter[1103809] val F3__iterator[1964930]:_ic_chpl_direct_counted_range_iter_helper[1103559] const F4_tmp[1964932]:2*int(64)[1040075] val F5__iterator[1964934]:_ic_chpl_direct_param_stride_range_iter[1103305] val F6_i[1964936]:int(64)[13] const-val F7_low[1964938]:int(64)[13] val value[1964940]:uint(8)[100]
  type _ir_chpl_bytes__ref_string[1108281] ref F0_this[1964924]:_ref(string)[937958]
  function _getIterator[1108290](const  ref arg ir[1108292]:_ir_chpl_bytes__ref_string[1108281]) : _ic_chpl_bytes__ref_string[1108275] "auto ii" "inline" "resolved" "fn synchronization free" "unsafe"
  {
    val ret[1108399]:_ic_chpl_bytes__ref_string[1108275] "dead after last mention" "RVV" "temp"
    val _ic_[1108282]:_ic_chpl_bytes__ref_string[1108275] "dead after last mention" "temp"
    const-val call_tmp[1108406]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1108409 'move' call_tmp[1108406](1108421 'sizeof_bundle' _ic_chpl_bytes__ref_string[1108275]))
    const-val cast_tmp[1108424]:c_void_ptr[149] "dead after last mention" "temp"
    (1108426 'move' cast_tmp[1108424](1108287 call chpl_here_alloc[187788] call_tmp[1108406] 31))
    (1108295 'move' _ic_[1108282](1108428 'cast' _ic_chpl_bytes__ref_string[1108275] cast_tmp[1108424]))
    (1108297 'setcid' _ic_[1108282])
    (1108404 'move' ret[1108399] _ic_[1108282])
    (1967081 '.=' ret[1108399] more[1108278] 1)
    ref tmp[1967085]:_ref(string)[937958] "temp"
    (1967090 'move' tmp[1967085](1967086 '.v' ir[1108292] F0_this[1964924]))
    (1967092 '.=' ret[1108399] F0_this[1964922] tmp[1967085])
    (1108401 return ret[1108399])
  }
  function _ref(string)[937958].codepoints[33666](const  ref arg this[33668]:_ref(string)[937958], ref arg _retArg[1803048]:_ref(_ir_codepoints__ref_string)[1122985]) : void[4] "fn returns via _retArg" "inline" "iterator fn" "method" "resolved" "fn synchronization free" "no return value for void"
  {
    val _ir[1967769]:_ir_codepoints__ref_string[1122874] "temp"
    (1967771 '.=' _ir[1967769] F0_this[1967098] this[33668])
    (1967775 '=' _retArg[1803048] _ir[1967769])
    (1967778 return _void[55])
  }
  type _ic_codepoints__ref_string[1122868] val super[1122869]:object[22] "super class" val more[1122871]:int(64)[13] ref F0_this[1967096]:_ref(string)[937958] val F1_localThis[1967100]:string[26] val F2__iterator[1967102]:_ic_chpl_bytes__ref_string[1108275] val F3_localThis[1967104]:string[26] val F4__iterator[1967106]:_ic_chpl_direct_counted_range_iter[1103809] val F5__iterator[1967108]:_ic_chpl_direct_counted_range_iter_helper[1103559] const F6_tmp[1967110]:2*int(64)[1040075] val F7__iterator[1967112]:_ic_chpl_direct_param_stride_range_iter[1103305] val F8_i[1967114]:int(64)[13] val F9_i[1967116]:int(64)[13] const-val F10_ret_tmp[1967118]:(syserr,int(32),int(32))[964639] const F11_tmp[1967120]:(syserr,int(32),int(32))[964639] const F12_nBytes[1967122]:int(32)[95] val F13_yret[1967124]:int(32)[95] const F14_cp[1967126]:int(32)[95] val value[1967128]:int(32)[95]
  type _ir_codepoints__ref_string[1122874] ref F0_this[1967098]:_ref(string)[937958]
  function _getIterator[1122883](const  ref arg ir[1122885]:_ir_codepoints__ref_string[1122874]) : _ic_codepoints__ref_string[1122868] "auto ii" "inline" "resolved" "fn synchronization free" "unsafe"
  {
    val ret[1122992]:_ic_codepoints__ref_string[1122868] "dead after last mention" "RVV" "temp"
    val _ic_[1122875]:_ic_codepoints__ref_string[1122868] "dead after last mention" "temp"
    const-val call_tmp[1122999]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1123002 'move' call_tmp[1122999](1123014 'sizeof_bundle' _ic_codepoints__ref_string[1122868]))
    const-val cast_tmp[1123017]:c_void_ptr[149] "dead after last mention" "temp"
    (1123019 'move' cast_tmp[1123017](1122880 call chpl_here_alloc[187788] call_tmp[1122999] 34))
    (1122888 'move' _ic_[1122875](1123021 'cast' _ic_codepoints__ref_string[1122868] cast_tmp[1123017]))
    (1122890 'setcid' _ic_[1122875])
    (1122997 'move' ret[1122992] _ic_[1122875])
    (1967781 '.=' ret[1122992] more[1122871] 1)
    ref tmp[1967785]:_ref(string)[937958] "temp"
    (1967790 'move' tmp[1967785](1967786 '.v' ir[1122885] F0_this[1967098]))
    (1967792 '.=' ret[1122992] F0_this[1967096] tmp[1967785])
    (1122994 return ret[1122992])
  }
  function _ref(string)[937958].this[34635](const  ref arg this[34637]:_ref(string)[937958], const  ref arg i[34632]:codepointIndex[28277], ref arg _retArg[1803058]:_ref(string)[937958]) : void[4] "fn returns via _retArg" "method" "resolved"
  {
    const-val ret[504178]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[600830]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1803082]:string[26] "temp"
    (34649 call item[34691] this[34637] i[34632] ret_tmp[1803082])
    (1803085 'move' call_tmp[600830] ret_tmp[1803082])
    (1180978 'move' ret[504178] call_tmp[600830])
    (1803060 '=' _retArg[1803058] ret[504178])
    (1803062 return _void[55])
  }
  function _ref(string)[937958].this[34663](const  ref arg this[34665]:_ref(string)[937958], const in arg i[34660]:int(64)[13], ref arg _retArg[1803076]:_ref(string)[937958]) : void[4] "fn returns via _retArg" "inline" "method" "resolved"
  {
    const-val ret[504188]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[600837]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1803098]:string[26] "temp"
    (34677 call item[35011] this[34665] i[34660] ret_tmp[1803098])
    (1803101 'move' call_tmp[600837] ret_tmp[1803098])
    (1180984 'move' ret[504188] call_tmp[600837])
    (1803078 '=' _retArg[1803076] ret[504188])
    (1803080 return _void[55])
  }
  function _ref(string)[937958].item[34691](const  ref arg this[34693]:_ref(string)[937958], const  ref arg i[34688]:codepointIndex[28277], ref arg _retArg[1803088]:_ref(string)[937958]) : void[4] "fn returns via _retArg" "method" "resolved"
  {
    val ret[504198]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[553534]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[553542]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    const-val call_tmp[600852]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (600855 'move' call_tmp[600852](34702 call <[29043] i[34688] 0))
    (553544 'move' tmp[553542] call_tmp[600852])
    (553549 'move' tmp[553534] tmp[553542])
    const-val call_tmp[600857]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (600860 'move' call_tmp[600857] tmp[553534])
    if call_tmp[600857]
    {
      (34711 call halt[1157147] "index " i[34688] " out of bounds for string")
    }
    const-val call_tmp[600864]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (600867 'move' call_tmp[600864](34724 call isEmpty[35064] this[34693]))
    const-val call_tmp[600869]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (600872 'move' call_tmp[600869] call_tmp[600864])
    if call_tmp[600869]
    {
      (504204 'move' ret[504198](1803092 call chpl__initCopy[981367] ""))
      gotoReturn _end_item[504196] _end_item[504196]
    }
    const-val call_tmp[600876]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (600879 'move' call_tmp[600876](34754 call isASCII[31049] this[34693]))
    const-val call_tmp[600881]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (600884 'move' call_tmp[600881] call_tmp[600876])
    if call_tmp[600881]
    {
      const-val tmp[553561]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val tmp[553569]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[600898]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (600901 'move' call_tmp[600898](34758 call numBytes[32810] this[34693]))
      const-val call_tmp[600903]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (600906 'move' call_tmp[600903](34761 call >=[29193] i[34688] call_tmp[600898]))
      (553571 'move' tmp[553569] call_tmp[600903])
      (553576 'move' tmp[553561] tmp[553569])
      const-val call_tmp[600908]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (600911 'move' call_tmp[600908] tmp[553561])
      if call_tmp[600908]
      {
        const-val call_tmp[600915]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (600918 'move' call_tmp[600915](34771 call size[32772] this[34693]))
        (34774 call halt[1175780] "index " i[34688] " out of bounds for string with length " call_tmp[600915])
      }
      ref call_tmp[600922]:_ref(c_ptr(uint(8)))[937451] "dead at end of block" "maybe param" "temp"
      (600925 'move' call_tmp[600922](34789 call buff[757983] this[34693]))
      const-val call_tmp[600927]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (600930 'move' call_tmp[600927](34796 call _cast[39517] i[34688]))
      ref call_tmp[600934]:_ref(int(32))[936645] "dead at end of block" "maybe param" "temp"
      (600937 'move' call_tmp[600934](34802 call locale_id[758061] this[34693]))
      const-val call_tmp[600939]:(c_ptr(uint(8)),int(64))[955227] "dead at end of block" "maybe param" "temp"
      val coerce_tmp[1180830]:c_ptr(uint(8))[937442] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1180834 'move' coerce_tmp[1180830](1180832 'deref' call_tmp[600922]))
      const-val coerce_tmp[1180836]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1180840 'move' coerce_tmp[1180836](1180838 'deref' call_tmp[600934]))
      const-val ret_tmp[1804600]:(c_ptr(uint(8)),int(64))[955227] "temp"
      (34806 call bufferCopy[172974] coerce_tmp[1180830] call_tmp[600927] 1 coerce_tmp[1180836] ret_tmp[1804600])
      (1804603 'move' call_tmp[600939] ret_tmp[1804600])
      const-val tmp[34807]:(c_ptr(uint(8)),int(64))[955227] "dead at end of block" "insert auto destroy" "temp"
      (540440 'move' tmp[34807] call_tmp[600939])
      1
      ref call_tmp[600944]:_ref(c_ptr(uint(8)))[937451] "dead at end of block" "maybe param" "temp"
      (600947 'move' call_tmp[600944](1180850 '.' tmp[34807] x0[955223]))
      val newBuff[34782]:c_ptr(uint(8))[937442] "dead at end of block" "insert auto destroy"
      val coerce_tmp[1180855]:c_ptr(uint(8))[937442] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1180859 'move' coerce_tmp[1180855](1180857 'deref' call_tmp[600944]))
      (1815030 '=' newBuff[34782] coerce_tmp[1180855])
      (540442 'noop')
      ref call_tmp[600949]:_ref(int(64))[936591] "dead at end of block" "maybe param" "temp"
      (600952 'move' call_tmp[600949](1180864 '.' tmp[34807] x1[955225]))
      const-val allocSize[34784]:int(64)[13] "dead at end of block" "insert auto destroy"
      const-val coerce_tmp[1180869]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1180873 'move' coerce_tmp[1180869](1180871 'deref' call_tmp[600949]))
      (1815033 '=' allocSize[34784] coerce_tmp[1180869])
      (540444 'noop')
      const-val call_tmp[600954]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1802568]:string[26] "temp"
      (34826 call chpl_createStringWithOwnedBufferNV[30676] newBuff[34782] 1 allocSize[34784] 1 ret_tmp[1802568])
      (1802571 'move' call_tmp[600954] ret_tmp[1802568])
      (1180972 'move' ret[504198] call_tmp[600954])
      (1815042 call chpl__autoDestroy[1438961] tmp[34807])
      gotoReturn _end_item[504196] _end_item[504196]
    }
    {
      val charCount[34830]:int(64)[13] "dead at end of block" "insert auto destroy"
      (540446 'move' charCount[34830] 0)
      {
        val _indexOfInterest[34906]:(int(32),byteIndex,int(64))[1122161] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[34907]:_ic__cpIndexLen__ref_string[1122404] "dead at end of block" "expr temp" "temp"
        const-val call_tmp[600961]:_ir__cpIndexLen__ref_string[1122410] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val default_arg_start[1180881]:byteIndex[28173] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
        const-val ret_tmp[1807407]:byteIndex[28173] "temp"
        (1180883 call _cpIndexLen_default_start[1122050] this[34693] ret_tmp[1807407])
        (1807410 'move' default_arg_start[1180881] ret_tmp[1807407])
        const-val ret_tmp[1802742]:_ir__cpIndexLen__ref_string[1122410] "temp"
        (34843 call _cpIndexLen[31109] this[34693] default_arg_start[1180881] ret_tmp[1802742])
        (1802745 'move' call_tmp[600961] ret_tmp[1802742])
        (34916 'move' _iterator[34907](34914 call _getIterator[1122419] call_tmp[600961]))
        {
          val ret[1863437]:_ir__cpIndexLen__ref_string[1122410] "dead after last mention" "RVV" "temp"
          const-val call_tmp[1863439]:string[26] "dead at end of block" "maybe param" "temp"
          const-val ret_tmp[1863441]:string[26] "temp"
          ref this[1864666]:_ref(string)[937958] "temp"
          (1864671 'move' this[1864666](1864668 '.v' _iterator[34907] F0_this[1963570]))
          (1863444 call localize[32889] this[1864666] ret_tmp[1863441])
          (1863447 'move' call_tmp[1863439] ret_tmp[1863441])
          val localThis[1863450]:string[26] "dead at end of block" "insert auto destroy"
          (1863452 'move' localThis[1863450] call_tmp[1863439])
          const-val call_tmp[1863455]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1863457 'move' call_tmp[1863455](1863460 call isASCII[31049] localThis[1863450]))
          const-val call_tmp[1863462]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1863464 'move' call_tmp[1863462] call_tmp[1863455])
          if call_tmp[1863455]
          {
            const-val _iterator[1863469]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108585] "dead at end of block" "expr temp" "insert auto destroy" "temp"
            const-val call_tmp[1863471]:range(int(64),bounded,false)[1026833] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[1863473]:range(int(64),bounded,false)[1026833] "temp"
            ref this[1864673]:_ref(string)[937958] "temp"
            (1864678 'move' this[1864673](1864675 '.v' _iterator[34907] F0_this[1963570]))
            (1863476 call byteIndices[31068] this[1864673] ret_tmp[1863473])
            (1863479 'move' call_tmp[1863471] ret_tmp[1863473])
            val call_tmp[1863482]:_ic_these_range_int64_t_bounded_F[1096722] "dead at end of block" "expr temp" "maybe param" "temp"
            (1863484 'move' call_tmp[1863482](1863487 call _getIterator[1095339] call_tmp[1863471]))
            const-val call_tmp[1863489]:_ir_chpl_bytes__ref_string[1108281] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[1863491]:_ir_chpl_bytes__ref_string[1108281] "temp"
            ref this[1864680]:_ref(string)[937958] "temp"
            (1864685 'move' this[1864680](1864682 '.v' _iterator[34907] F0_this[1963570]))
            (1863494 call chpl_bytes[33577] this[1864680] ret_tmp[1863491])
            (1863497 'move' call_tmp[1863489] ret_tmp[1863491])
            val call_tmp[1863500]:_ic_chpl_bytes__ref_string[1108275] "dead at end of block" "expr temp" "maybe param" "temp"
            (1863502 'move' call_tmp[1863500](1863505 call _getIterator[1108290] call_tmp[1863489]))
            const-val ret_tmp[1863507]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108585] "temp"
            (1863510 call _build_tuple[1108543] call_tmp[1863482] call_tmp[1863500] ret_tmp[1863507])
            (1863514 'move' _iterator[1863469] ret_tmp[1863507])
            val _iterator[1863517]:_ic_these_range_int64_t_bounded_F[1096722] "temp"
            (1863519 'move' _iterator[1863517](1863521 '.v' _iterator[1863469] x0[1108581]))
            val _iterator[1863524]:_ic_chpl_bytes__ref_string[1108275] "temp"
            (1863526 'move' _iterator[1863524](1863528 '.v' _iterator[1863469] x1[1108583]))
            {
              (1863533 call zip1[1096757] _iterator[1863517])
            }
            {
              (1863537 call zip1[1108310] _iterator[1863524])
            }
            const-val isFinished[1863539]:bool[10] "temp"
            val hasMore[1863541]:bool[10] "temp"
            CForLoop[1863543]
            {
              val _indexOfInterest[1863566]:(int(64),uint(8))[1111059] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              {
                (1863570 call zip2[1108319] _iterator[1863524])
              }
              {
                const-val retTmp[1863573]:int(64)[13] "temp"
                (1863575 'move' retTmp[1863573](1863578 call hasMore[1108346] _iterator[1863524]))
                (1863580 'move' hasMore[1863541](1863582 'cast' bool[10] retTmp[1863573]))
              }
              (1863585 'move' isFinished[1863539](1863587 '!' hasMore[1863541]))
              if isFinished[1863539]
              {
                (1863591 'chpl_error' c"zippered iterations have non-equal lengths")
              }
              {
                (1863595 'move' _index[1863610](1863598 call getValue[1108355] _iterator[1863524]))
              }
              {
                (1863602 call zip2[1096766] _iterator[1863517])
              }
              {
                (1863605 'move' _index[1863616](1863608 call getValue[1096802] _iterator[1863517]))
              }
              val _index[1863610]:uint(8)[100] "temp"
              (1863612 '.=' _indexOfInterest[1863566] x1[1111057] _index[1863610])
              val _index[1863616]:int(64)[13] "temp"
              (1863618 '.=' _indexOfInterest[1863566] x0[1111055] _index[1863616])
              1
              const-val i[1863623]:int(64)[13] "const" "index var" "insert auto destroy"
              (1863625 'move' i[1863623](1863627 '.v' _indexOfInterest[1863566] x0[1111055]))
              const-val b[1863630]:uint(8)[100] "const" "index var" "insert auto destroy"
              (1863632 'move' b[1863630](1863634 '.v' _indexOfInterest[1863566] x1[1111057]))
              const-val yret[1863637]:(int(32),byteIndex,int(64))[1122161] "dead after last mention" "YVV" "temp"
              val call_tmp[1863639]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val call_tmp[1863641]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
              (1863643 'move' call_tmp[1863641](1863645 'cast' int(32)[95] b[1863630]))
              const-val call_tmp[1863648]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
              const-val ret_tmp[1863650]:byteIndex[28173] "temp"
              (1863653 call _cast[39486] i[1863623] ret_tmp[1863650])
              (1863656 'move' call_tmp[1863648] ret_tmp[1863650])
              const-val call_tmp[1863659]:(int(32),byteIndex,int(64))[1122161] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
              const-val ret_tmp[1863661]:(int(32),byteIndex,int(64))[1122161] "temp"
              (1863664 call _build_tuple[1122111] call_tmp[1863641] call_tmp[1863648] 1 ret_tmp[1863661])
              (1863669 'move' call_tmp[1863659] ret_tmp[1863661])
              (1863672 'move' yret[1863637] call_tmp[1863659])
              const-val _yieldedIndex[1864254]:(int(32),byteIndex,int(64))[1122161] "temp"
              (1864485 'move' _yieldedIndex[1864254] call_tmp[1863659])
              {
                1
                const-val cp[1864257]:int(32)[95] "const" "index var" "insert auto destroy"
                (1864259 'move' cp[1864257](1864261 '.v' _yieldedIndex[1864254] x0[1122155]))
                ref byteIdx[1864264]:_ref(byteIndex)[948778] "index var" "insert auto destroy"
                (1864266 'move' byteIdx[1864264](1864268 '.v' _yieldedIndex[1864254] x1[1122157]))
                const-val nBytes[1864271]:int(64)[13] "const" "index var" "insert auto destroy"
                (1864273 'move' nBytes[1864271](1864275 '.v' _yieldedIndex[1864254] x2[1122159]))
                {
                  const-val call_tmp[1864279]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1864281 'move' call_tmp[1864279](1864284 call ==[29541] charCount[34830] i[34688]))
                  const-val call_tmp[1864287]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1864289 'move' call_tmp[1864287] call_tmp[1864279])
                  if call_tmp[1864287]
                  {
                    ref call_tmp[1864294]:_ref(c_ptr(uint(8)))[937451] "dead at end of block" "maybe param" "temp"
                    (1864296 'move' call_tmp[1864294](1864299 call buff[757983] this[34693]))
                    const-val call_tmp[1864301]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                    (1864303 'move' call_tmp[1864301](1864306 call _cast[39465] byteIdx[1864264]))
                    ref call_tmp[1864308]:_ref(int(32))[936645] "dead at end of block" "maybe param" "temp"
                    (1864310 'move' call_tmp[1864308](1864313 call locale_id[758061] this[34693]))
                    const-val call_tmp[1864315]:(c_ptr(uint(8)),int(64))[955227] "dead at end of block" "maybe param" "temp"
                    val coerce_tmp[1864317]:c_ptr(uint(8))[937442] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                    (1864319 'move' coerce_tmp[1864317](1864321 'deref' call_tmp[1864294]))
                    const-val coerce_tmp[1864323]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                    (1864325 'move' coerce_tmp[1864323](1864327 'deref' call_tmp[1864308]))
                    const-val ret_tmp[1864329]:(c_ptr(uint(8)),int(64))[955227] "temp"
                    (1864332 call bufferCopy[172974] coerce_tmp[1864317] call_tmp[1864301] nBytes[1864271] coerce_tmp[1864323] ret_tmp[1864329])
                    (1864338 'move' call_tmp[1864315] ret_tmp[1864329])
                    const-val tmp[1864341]:(c_ptr(uint(8)),int(64))[955227] "dead at end of block" "insert auto destroy" "temp"
                    (1864343 'move' tmp[1864341] call_tmp[1864315])
                    1
                    ref call_tmp[1864347]:_ref(c_ptr(uint(8)))[937451] "dead at end of block" "maybe param" "temp"
                    (1864349 'move' call_tmp[1864347](1864351 '.' tmp[1864341] x0[955223]))
                    val newBuff[1864354]:c_ptr(uint(8))[937442] "dead at end of block" "insert auto destroy"
                    val coerce_tmp[1864356]:c_ptr(uint(8))[937442] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                    (1864358 'move' coerce_tmp[1864356](1864360 'deref' call_tmp[1864347]))
                    (1864362 '=' newBuff[1864354] coerce_tmp[1864356])
                    (1864365 'noop')
                    ref call_tmp[1864366]:_ref(int(64))[936591] "dead at end of block" "maybe param" "temp"
                    (1864368 'move' call_tmp[1864366](1864370 '.' tmp[1864341] x1[955225]))
                    const-val allocSize[1864373]:int(64)[13] "dead at end of block" "insert auto destroy"
                    const-val coerce_tmp[1864375]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                    (1864377 'move' coerce_tmp[1864375](1864379 'deref' call_tmp[1864366]))
                    (1864381 '=' allocSize[1864373] coerce_tmp[1864375])
                    (1864384 'noop')
                    const-val call_tmp[1864385]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[1864387]:string[26] "temp"
                    (1864390 call chpl_createStringWithOwnedBufferNV[30676] newBuff[1864354] nBytes[1864271] allocSize[1864373] 1 ret_tmp[1864387])
                    (1864396 'move' call_tmp[1864385] ret_tmp[1864387])
                    (1864399 'move' ret[504198] call_tmp[1864385])
                    (1864403 call chpl__autoDestroy[1438961] tmp[1864341])
                    ref moreRef1[1864421]:_ref(int(64))[936591] "temp"
                    (1864423 'move' moreRef1[1864421](1864425 '.' _iterator[1863517] more[1096725]))
                    const-val moreVal1[1864428]:int(64)[13] "const" "temp"
                    (1864430 '=' moreVal1[1864428] moreRef1[1864421])
                    const-val moreValNeg1[1864433]:int(64)[13] "const" "temp"
                    (1864435 'move' moreValNeg1[1864433](1864437 'u-' moreVal1[1864428]))
                    (1864439 '=' moreRef1[1864421] moreValNeg1[1864433])
                    (1864443 call advance[1096748] _iterator[1863517])
                    ref moreRef2[1864445]:_ref(int(64))[936591] "temp"
                    (1864447 'move' moreRef2[1864445](1864449 '.' _iterator[1863524] more[1108278]))
                    const-val moreVal2[1864452]:int(64)[13] "const" "temp"
                    (1864454 '=' moreVal2[1864452] moreRef2[1864445])
                    const-val moreValNeg2[1864457]:int(64)[13] "const" "temp"
                    (1864459 'move' moreValNeg2[1864457](1864461 'u-' moreVal2[1864452]))
                    (1864463 '=' moreRef2[1864445] moreValNeg2[1864457])
                    (1864467 call advance[1108301] _iterator[1863524])
                    (1864470 call chpl__autoDestroy[1435583] call_tmp[1863648])
                    (1864473 call _freeIterator[1108743] _iterator[1863469])
                    (1864476 call chpl__autoDestroy[1515237] _iterator[1863469])
                    (1864479 call chpl__autoDestroy[1508195] call_tmp[1863471])
                    (1864482 call chpl__autoDestroy[1435320] localThis[1863450])
                    (1864406 call _freeIterator[1122592] _iterator[34907])
                    (1864409 call chpl__autoDestroy[1435583] default_arg_start[1180881])
                    gotoReturn _end_item[504196] _end_item[504196]
                  }
                  (1864415 call +=[451353] charCount[34830] 1)
                }
                label _continueLabel[1864418]
              }
              (1863746 call chpl__autoDestroy[1435583] call_tmp[1863648])
              {
                (1863750 call zip3[1096775] _iterator[1863517])
              }
              {
                (1863754 call zip3[1108328] _iterator[1863524])
              }
              {
                {
                  (1863547 call init[1096811] _iterator[1863517])
                }
                {
                  (1863551 call init[1108364] _iterator[1863524])
                }
              }
              {
                (1863555 call hasMore[1096793] _iterator[1863517])
              }
              {
                {
                  (1863560 call incr[1096820] _iterator[1863517])
                }
                {
                  (1863564 call incr[1108373] _iterator[1863524])
                }
              }
            }
            {
              const-val retTmp[1863757]:int(64)[13] "temp"
              (1863759 'move' retTmp[1863757](1863762 call hasMore[1108346] _iterator[1863524]))
              (1863764 'move' hasMore[1863541](1863766 'cast' bool[10] retTmp[1863757]))
            }
            if hasMore[1863541]
            {
              (1863771 'chpl_error' c"zippered iterations have non-equal lengths")
            }
            {
              (1863776 call zip4[1108337] _iterator[1863524])
            }
            {
              (1863780 call zip4[1096784] _iterator[1863517])
            }
            (1863783 call _freeIterator[1108743] _iterator[1863469])
            (1863786 call chpl__autoDestroy[1515237] _iterator[1863469])
            (1863789 call chpl__autoDestroy[1508195] call_tmp[1863471])
          }
          {
            const-val call_tmp[1863792]:int(64)[13] "dead at end of block" "maybe param" "temp"
            ref start[1864687]:_ref(byteIndex)[948778] "temp"
            (1864692 'move' start[1864687](1864689 '.v' _iterator[34907] F1_start[1963574]))
            (1863794 'move' call_tmp[1863792](1863797 call _cast[39465] start[1864687]))
            val i[1863799]:int(64)[13] "dead at end of block" "insert auto destroy"
            (1863801 'move' i[1863799] call_tmp[1863792])
            const-val call_tmp[1863804]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1863806 'move' call_tmp[1863804](1863809 call >[437710] call_tmp[1863792] 0))
            const-val call_tmp[1863812]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1863814 'move' call_tmp[1863812] call_tmp[1863804])
            if call_tmp[1863804]
            {
              val tmp[1863819]:bool[10] "dead after last mention" "temp"
              const-val tmp[1863821]:bool[10] "dead after last mention" "maybe param" "temp"
              ref call_tmp[1863823]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
              (1863825 'move' call_tmp[1863823](1863828 call buffLen[757905] localThis[1863450]))
              const-val coerce_tmp[1863830]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1863832 'move' coerce_tmp[1863830](1863834 'deref' call_tmp[1863823]))
              (1863836 'move' tmp[1863821](1863839 call <[437490] i[1863799] coerce_tmp[1863830]))
              val tmp[1863842]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
              const-val tmp[1863844]:bool[10] "dead after last mention" "maybe param" "temp"
              const-val call_tmp[1863846]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1863848 'move' call_tmp[1863846] tmp[1863821])
              (1863851 'move' tmp[1863844] tmp[1863821])
              if tmp[1863821]
              {
                const-val tmp[1863856]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                ref call_tmp[1863858]:_ref(uint(8))[936927] "dead after last mention" "maybe param" "temp"
                ref _this_tmp_[1863860]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "temp"
                (1863862 'move' _this_tmp_[1863860](1863865 call buff[757983] localThis[1863450]))
                val coerce_tmp[1863867]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1863869 'move' coerce_tmp[1863867](1863871 'deref' _this_tmp_[1863860]))
                (1863873 'move' call_tmp[1863858](1863876 call this[954110] coerce_tmp[1863867] i[1863799]))
                const-val call_tmp[1863879]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[1863881]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1863883 'move' coerce_tmp[1863881](1863885 'deref' call_tmp[1863858]))
                (1863887 'move' call_tmp[1863879](1863890 call isInitialByte[181574] coerce_tmp[1863881]))
                const-val call_tmp[1863892]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1863894 'move' call_tmp[1863892](1863897 call ![7494] call_tmp[1863879]))
                (1863899 'move' tmp[1863856] call_tmp[1863892])
                (1863902 'move' tmp[1863842] call_tmp[1863892])
              }
              {
                (1863906 'move' tmp[1863842] 0)
              }
              (1863910 'move' tmp[1863819] tmp[1863842])
              WhileDo[1863913]
              {
                (1863916 call +=[451353] i[1863799] 1)
                const-val tmp[1863919]:bool[10] "dead after last mention" "maybe param" "temp"
                ref call_tmp[1863921]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
                (1863923 'move' call_tmp[1863921](1863926 call buffLen[757905] localThis[1863450]))
                const-val coerce_tmp[1863928]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1863930 'move' coerce_tmp[1863928](1863932 'deref' call_tmp[1863921]))
                (1863934 'move' tmp[1863919](1863937 call <[437490] i[1863799] coerce_tmp[1863928]))
                val tmp[1863940]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val tmp[1863942]:bool[10] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[1863944]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1863946 'move' call_tmp[1863944] tmp[1863919])
                (1863949 'move' tmp[1863942] tmp[1863919])
                if tmp[1863919]
                {
                  const-val tmp[1863954]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  ref call_tmp[1863956]:_ref(uint(8))[936927] "dead after last mention" "maybe param" "temp"
                  ref _this_tmp_[1863958]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "temp"
                  (1863960 'move' _this_tmp_[1863958](1863963 call buff[757983] localThis[1863450]))
                  val coerce_tmp[1863965]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1863967 'move' coerce_tmp[1863965](1863969 'deref' _this_tmp_[1863958]))
                  (1863971 'move' call_tmp[1863956](1863974 call this[954110] coerce_tmp[1863965] i[1863799]))
                  const-val call_tmp[1863977]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[1863979]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1863981 'move' coerce_tmp[1863979](1863983 'deref' call_tmp[1863956]))
                  (1863985 'move' call_tmp[1863977](1863988 call isInitialByte[181574] coerce_tmp[1863979]))
                  const-val call_tmp[1863990]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1863992 'move' call_tmp[1863990](1863995 call ![7494] call_tmp[1863977]))
                  (1863997 'move' tmp[1863954] call_tmp[1863990])
                  (1864000 'move' tmp[1863940] call_tmp[1863990])
                }
                {
                  (1864004 'move' tmp[1863940] 0)
                }
                (1864008 'move' tmp[1863819] tmp[1863940])
                tmp[1863819]
              }
            }
            val tmp[1864012]:bool[10] "dead after last mention" "temp"
            ref call_tmp[1864014]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
            (1864016 'move' call_tmp[1864014](1864019 call buffLen[757905] localThis[1863450]))
            const-val call_tmp[1864021]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val coerce_tmp[1864023]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (1864025 'move' coerce_tmp[1864023](1864027 'deref' call_tmp[1864014]))
            (1864029 'move' call_tmp[1864021](1864032 call <[437490] i[1863799] coerce_tmp[1864023]))
            (1864035 'move' tmp[1864012] call_tmp[1864021])
            WhileDo[1864038]
            {
              ref call_tmp[1864040]:_ref(c_ptr(uint(8)))[937451] "dead at end of block" "maybe param" "temp"
              (1864042 'move' call_tmp[1864040](1864045 call buff[757983] localThis[1863450]))
              ref call_tmp[1864047]:_ref(int(64))[936591] "dead at end of block" "maybe param" "temp"
              (1864049 'move' call_tmp[1864047](1864052 call buffLen[757905] localThis[1863450]))
              const-val call_tmp[1864054]:(syserr,int(32),int(32))[964639] "dead at end of block" "maybe param" "temp"
              val coerce_tmp[1864056]:c_ptr(uint(8))[937442] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1864058 'move' coerce_tmp[1864056](1864060 'deref' call_tmp[1864040]))
              const-val coerce_tmp[1864062]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1864064 'move' coerce_tmp[1864062](1864066 'deref' call_tmp[1864047]))
              const-val ret_tmp[1864068]:(syserr,int(32),int(32))[964639] "temp"
              (1864071 call decodeHelp[174452] coerce_tmp[1864056] coerce_tmp[1864062] i[1863799] 1 ret_tmp[1864068])
              (1864077 'move' call_tmp[1864054] ret_tmp[1864068])
              const-val tmp[1864080]:(syserr,int(32),int(32))[964639] "dead at end of block" "const" "insert auto destroy" "temp"
              (1864082 'move' tmp[1864080] call_tmp[1864054])
              1
              ref call_tmp[1864086]:_ref(syserr)[948851] "dead at end of block" "maybe param" "reference to a const" "temp"
              (1864088 'move' call_tmp[1864086](1864090 '.' tmp[1864080] x0[964633]))
              const-val decodeRet[1864093]:syserr[223603] "dead at end of block" "const" "insert auto destroy"
              const-val coerce_tmp[1864095]:syserr[223603] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1864097 'move' coerce_tmp[1864095](1864099 'deref' call_tmp[1864086]))
              (1864101 'move' decodeRet[1864093] coerce_tmp[1864095])
              ref call_tmp[1864106]:_ref(int(32))[936645] "dead at end of block" "maybe param" "reference to a const" "temp"
              (1864108 'move' call_tmp[1864106](1864110 '.' tmp[1864080] x1[964635]))
              const-val cp[1864113]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
              const-val coerce_tmp[1864115]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1864117 'move' coerce_tmp[1864115](1864119 'deref' call_tmp[1864106]))
              (1864121 'move' cp[1864113] coerce_tmp[1864115])
              ref call_tmp[1864126]:_ref(int(32))[936645] "dead at end of block" "maybe param" "reference to a const" "temp"
              (1864128 'move' call_tmp[1864126](1864130 '.' tmp[1864080] x2[964637]))
              const-val nBytes[1864133]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
              const-val coerce_tmp[1864135]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1864137 'move' coerce_tmp[1864135](1864139 'deref' call_tmp[1864126]))
              (1864141 'move' nBytes[1864133] coerce_tmp[1864135])
              const-val yret[1864146]:(int(32),byteIndex,int(64))[1122161] "dead after last mention" "YVV" "temp"
              val call_tmp[1864148]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val call_tmp[1864150]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
              (1864152 'move' call_tmp[1864150] cp[1864113])
              const-val call_tmp[1864155]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
              const-val ret_tmp[1864157]:byteIndex[28173] "temp"
              (1864160 call _cast[39486] i[1863799] ret_tmp[1864157])
              (1864163 'move' call_tmp[1864155] ret_tmp[1864157])
              const-val call_tmp[1864166]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (1864168 'move' call_tmp[1864166](1864170 'cast' int(64)[13] nBytes[1864133]))
              const-val call_tmp[1864173]:(int(32),byteIndex,int(64))[1122161] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
              const-val ret_tmp[1864175]:(int(32),byteIndex,int(64))[1122161] "temp"
              (1864178 call _build_tuple[1122111] cp[1864113] call_tmp[1864155] call_tmp[1864166] ret_tmp[1864175])
              (1864183 'move' call_tmp[1864173] ret_tmp[1864175])
              (1864186 'move' yret[1864146] call_tmp[1864173])
              const-val _yieldedIndex[1864487]:(int(32),byteIndex,int(64))[1122161] "temp"
              (1864664 'move' _yieldedIndex[1864487] call_tmp[1864173])
              {
                1
                const-val cp[1864490]:int(32)[95] "const" "index var" "insert auto destroy"
                (1864492 'move' cp[1864490](1864494 '.v' _yieldedIndex[1864487] x0[1122155]))
                ref byteIdx[1864497]:_ref(byteIndex)[948778] "index var" "insert auto destroy"
                (1864499 'move' byteIdx[1864497](1864501 '.v' _yieldedIndex[1864487] x1[1122157]))
                const-val nBytes[1864504]:int(64)[13] "const" "index var" "insert auto destroy"
                (1864506 'move' nBytes[1864504](1864508 '.v' _yieldedIndex[1864487] x2[1122159]))
                {
                  const-val call_tmp[1864512]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1864514 'move' call_tmp[1864512](1864517 call ==[29541] charCount[34830] i[34688]))
                  const-val call_tmp[1864520]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1864522 'move' call_tmp[1864520] call_tmp[1864512])
                  if call_tmp[1864520]
                  {
                    ref call_tmp[1864527]:_ref(c_ptr(uint(8)))[937451] "dead at end of block" "maybe param" "temp"
                    (1864529 'move' call_tmp[1864527](1864532 call buff[757983] this[34693]))
                    const-val call_tmp[1864534]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                    (1864536 'move' call_tmp[1864534](1864539 call _cast[39465] byteIdx[1864497]))
                    ref call_tmp[1864541]:_ref(int(32))[936645] "dead at end of block" "maybe param" "temp"
                    (1864543 'move' call_tmp[1864541](1864546 call locale_id[758061] this[34693]))
                    const-val call_tmp[1864548]:(c_ptr(uint(8)),int(64))[955227] "dead at end of block" "maybe param" "temp"
                    val coerce_tmp[1864550]:c_ptr(uint(8))[937442] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                    (1864552 'move' coerce_tmp[1864550](1864554 'deref' call_tmp[1864527]))
                    const-val coerce_tmp[1864556]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                    (1864558 'move' coerce_tmp[1864556](1864560 'deref' call_tmp[1864541]))
                    const-val ret_tmp[1864562]:(c_ptr(uint(8)),int(64))[955227] "temp"
                    (1864565 call bufferCopy[172974] coerce_tmp[1864550] call_tmp[1864534] nBytes[1864504] coerce_tmp[1864556] ret_tmp[1864562])
                    (1864571 'move' call_tmp[1864548] ret_tmp[1864562])
                    const-val tmp[1864574]:(c_ptr(uint(8)),int(64))[955227] "dead at end of block" "insert auto destroy" "temp"
                    (1864576 'move' tmp[1864574] call_tmp[1864548])
                    1
                    ref call_tmp[1864580]:_ref(c_ptr(uint(8)))[937451] "dead at end of block" "maybe param" "temp"
                    (1864582 'move' call_tmp[1864580](1864584 '.' tmp[1864574] x0[955223]))
                    val newBuff[1864587]:c_ptr(uint(8))[937442] "dead at end of block" "insert auto destroy"
                    val coerce_tmp[1864589]:c_ptr(uint(8))[937442] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                    (1864591 'move' coerce_tmp[1864589](1864593 'deref' call_tmp[1864580]))
                    (1864595 '=' newBuff[1864587] coerce_tmp[1864589])
                    (1864598 'noop')
                    ref call_tmp[1864599]:_ref(int(64))[936591] "dead at end of block" "maybe param" "temp"
                    (1864601 'move' call_tmp[1864599](1864603 '.' tmp[1864574] x1[955225]))
                    const-val allocSize[1864606]:int(64)[13] "dead at end of block" "insert auto destroy"
                    const-val coerce_tmp[1864608]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                    (1864610 'move' coerce_tmp[1864608](1864612 'deref' call_tmp[1864599]))
                    (1864614 '=' allocSize[1864606] coerce_tmp[1864608])
                    (1864617 'noop')
                    const-val call_tmp[1864618]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[1864620]:string[26] "temp"
                    (1864623 call chpl_createStringWithOwnedBufferNV[30676] newBuff[1864587] nBytes[1864504] allocSize[1864606] 1 ret_tmp[1864620])
                    (1864629 'move' call_tmp[1864618] ret_tmp[1864620])
                    (1864632 'move' ret[504198] call_tmp[1864618])
                    (1864636 call chpl__autoDestroy[1438961] tmp[1864574])
                    (1864655 call chpl__autoDestroy[1435583] call_tmp[1864155])
                    (1864658 call chpl__autoDestroy[1439223] tmp[1864080])
                    (1864661 call chpl__autoDestroy[1435320] localThis[1863450])
                    (1864639 call _freeIterator[1122592] _iterator[34907])
                    (1864642 call chpl__autoDestroy[1435583] default_arg_start[1180881])
                    gotoReturn _end_item[504196] _end_item[504196]
                  }
                  (1864648 call +=[451353] charCount[34830] 1)
                }
                label _continueLabel[1864651]
              }
              (1864206 call chpl__autoDestroy[1435583] call_tmp[1864155])
              const-val coerce_tmp[1864208]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1864210 'move' coerce_tmp[1864208](1864212 'cast' int(64)[13] nBytes[1864133]))
              (1864216 call +=[451353] i[1863799] coerce_tmp[1864208])
              (1864220 call chpl__autoDestroy[1439223] tmp[1864080])
              ref call_tmp[1864222]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
              (1864224 'move' call_tmp[1864222](1864227 call buffLen[757905] localThis[1863450]))
              const-val call_tmp[1864229]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1864231]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1864233 'move' coerce_tmp[1864231](1864235 'deref' call_tmp[1864222]))
              (1864237 'move' call_tmp[1864229](1864240 call <[437490] i[1863799] coerce_tmp[1864231]))
              (1864243 'move' tmp[1864012] call_tmp[1864229])
              tmp[1864012]
            }
          }
          (1864248 call chpl__autoDestroy[1435320] localThis[1863450])
          label _end_cpIndexLen[1864250]
        }
        label _breakLabel[34912]
        (1815058 call _freeIterator[1122592] _iterator[34907])
        (1815060 call chpl__autoDestroy[1435583] default_arg_start[1180881])
      }
      {
        const-val call_tmp[601022]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (601025 'move' call_tmp[601022](34968 call size[32772] this[34693]))
        (34971 call halt[1175780] "index " i[34688] " out of bounds for string with length " call_tmp[601022])
      }
      (504222 'move' ret[504198](1803094 call chpl__initCopy[981367] ""))
      gotoReturn _end_item[504196] _end_item[504196]
    }
    label _end_item[504196]
    (1803090 '=' _retArg[1803088] ret[504198])
    (1803096 return _void[55])
  }
  function _ref(string)[937958].item[35011](const  ref arg this[35013]:_ref(string)[937958], const in arg i[35008]:int(64)[13], ref arg _retArg[1803104]:_ref(string)[937958]) : void[4] "fn returns via _retArg" "inline" "method" "resolved"
  {
    const-val ret[504228]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[601027]:codepointIndex[28277] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1803812]:codepointIndex[28277] "temp"
    (35022 call _cast[39538] i[35008] ret_tmp[1803812])
    (1803815 'move' call_tmp[601027] ret_tmp[1803812])
    const-val call_tmp[601032]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1803052]:string[26] "temp"
    (35025 call this[34635] this[35013] call_tmp[601027] ret_tmp[1803052])
    (1803055 'move' call_tmp[601032] ret_tmp[1803052])
    (1180981 'move' ret[504228] call_tmp[601032])
    (1803106 '=' _retArg[1803104] ret[504228])
    (1815063 call chpl__autoDestroy[1435650] call_tmp[601027])
    (1803108 return _void[55])
  }
  function _ref(string)[937958].this[1111385](const  ref arg this[1111391]:_ref(string)[937958], const in arg r[1111393]:range(int(64),bounded,false)[1026833], ref arg _retArg[1807245]:_ref(string)[937958]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free"
  {
    const-val ret[1111397]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1111405]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1807251]:string[26] "temp"
    (1111410 call getSlice[1111421] this[1111391] r[1111393] ret_tmp[1807251])
    (1807254 'move' call_tmp[1111405] ret_tmp[1807251])
    (1121987 'move' ret[1111397] call_tmp[1111405])
    (1807247 '=' _retArg[1807245] ret[1111397])
    (1807249 return _void[55])
  }
  function _ref(string)[937958].this[1123519](const  ref arg this[1123525]:_ref(string)[937958], const in arg r[1123527]:range(byteIndex,bounded,false)[1025811], ref arg _retArg[1807479]:_ref(string)[937958]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free"
  {
    const-val ret[1123531]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1123539]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1807485]:string[26] "temp"
    (1123544 call getSlice[1123555] this[1123525] r[1123527] ret_tmp[1807485])
    (1807488 'move' call_tmp[1123539] ret_tmp[1807485])
    (1124401 'move' ret[1123531] call_tmp[1123539])
    (1807481 '=' _retArg[1807479] ret[1123531])
    (1807483 return _void[55])
  }
  function _ref(string)[937958].this[1125581](const  ref arg this[1125587]:_ref(string)[937958], const in arg r[1125589]:range(int(64),boundedLow,false)[1087584], ref arg _retArg[1807539]:_ref(string)[937958]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free"
  {
    const-val ret[1125593]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1125601]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1807545]:string[26] "temp"
    (1125606 call getSlice[1125617] this[1125587] r[1125589] ret_tmp[1807545])
    (1807548 'move' call_tmp[1125601] ret_tmp[1807545])
    (1142521 'move' ret[1125593] call_tmp[1125601])
    (1807541 '=' _retArg[1807539] ret[1125593])
    (1807543 return _void[55])
  }
  function _ref(string)[937958].this[1143742](const  ref arg this[1143748]:_ref(string)[937958], const in arg r[1143750]:range(byteIndex,boundedLow,false)[1143422], ref arg _retArg[1807743]:_ref(string)[937958]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free"
  {
    const-val ret[1143754]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1143762]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1807749]:string[26] "temp"
    (1143767 call getSlice[1143778] this[1143748] r[1143750] ret_tmp[1807749])
    (1807752 'move' call_tmp[1143762] ret_tmp[1807749])
    (1156476 'move' ret[1143754] call_tmp[1143762])
    (1807745 '=' _retArg[1807743] ret[1143754])
    (1807747 return _void[55])
  }
  function _ref(string)[937958].this[1185258](const  ref arg this[1185264]:_ref(string)[937958], const in arg r[1185266]:range(byteIndex,boundedHigh,false)[1184938], ref arg _retArg[1808077]:_ref(string)[937958]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free"
  {
    const-val ret[1185270]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1185278]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1808083]:string[26] "temp"
    (1185283 call getSlice[1185294] this[1185264] r[1185266] ret_tmp[1808083])
    (1808086 'move' call_tmp[1185278] ret_tmp[1808083])
    (1203779 'move' ret[1185270] call_tmp[1185278])
    (1808079 '=' _retArg[1808077] ret[1185270])
    (1808081 return _void[55])
  }
  function _ref(string)[937958].isEmpty[35064](const  ref arg this[35066]:_ref(string)[937958]) : bool[10] "inline" "method" "resolved" "fn synchronization free"
  {
    val ret[504248]:bool[10] "dead after last mention" "RVV" "temp"
    ref call_tmp[601044]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
    (601047 'move' call_tmp[601044](35073 call buffLen[757905] this[35066]))
    const-val call_tmp[601049]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1020551]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1020555 'move' coerce_tmp[1020551](1020553 'deref' call_tmp[601044]))
    (601052 'move' call_tmp[601049](35077 call ==[435666] coerce_tmp[1020551] 0))
    (1020559 'move' ret[504248] call_tmp[601049])
    (504250 return ret[504248])
  }
  function _ref(string)[937958].find[1025606](const  ref arg this[1025612]:_ref(string)[937958], const  ref arg needle[1025614]:string[26], const in arg region[1025636]:range(byteIndex,bounded,false)[1025811], ref arg _retArg[1805946]:_ref(byteIndex)[948778]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "resolved"
  {
    val ret[1025640]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1029934]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1029936 'move' call_tmp[1029934](1029942 call isASCII[31049] this[1025612]))
    const-val call_tmp[1029943]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1029945 'move' call_tmp[1029943] call_tmp[1029934])
    if call_tmp[1029943]
    {
      const-val call_tmp[1029952]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1029954 'move' call_tmp[1029952](1029957 call doSearchNoEnc[1030072] this[1025612] needle[1025614] region[1025636]))
      const-val call_tmp[1029963]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1803770]:byteIndex[28173] "temp"
      (1029968 call _cast[39486] call_tmp[1029952] ret_tmp[1803770])
      (1803773 'move' call_tmp[1029963] ret_tmp[1803770])
      (1107537 'move' ret[1025640] call_tmp[1029963])
      gotoReturn _end_find[1030008] _end_find[1030008]
    }
    {
      const-val call_tmp[1029979]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1029981 'move' call_tmp[1029979](1029987 call doSearchUTF8[1106130] this[1025612] needle[1025614] region[1025636]))
      const-val call_tmp[1029992]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1803776]:byteIndex[28173] "temp"
      (1029997 call _cast[39486] call_tmp[1029979] ret_tmp[1803776])
      (1803779 'move' call_tmp[1029992] ret_tmp[1803776])
      (1107540 'move' ret[1025640] call_tmp[1029992])
      gotoReturn _end_find[1030008] _end_find[1030008]
    }
    label _end_find[1030008]
    (1805948 '=' _retArg[1805946] ret[1025640])
    (1805950 return _void[55])
  }
  function _ref(string)[937958].find_default_region[1030017](const  ref arg this[1030020]:_ref(string)[937958], ref arg _retArg[1806018]:_ref(range(byteIndex,bounded,false))[1025820]) : void[4] "compiler generated" "default actual function" "fn returns via _retArg" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    const-val ret[1030023]:range(byteIndex,bounded,false)[1025811] "dead after last mention" "RVV" "maybe param" "temp"
    const-val region[1030028]:range(byteIndex,bounded,false)[1025811] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val call_tmp[1030031]:range(byteIndex,bounded,false)[1025811] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1030036]:range(int(64),bounded,false)[1026833] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1802664]:range(int(64),bounded,false)[1026833] "temp"
    (1030041 call byteIndices[31068] this[1030020] ret_tmp[1802664])
    (1802667 'move' call_tmp[1030036] ret_tmp[1802664])
    const-val ret_tmp[1805952]:range(byteIndex,bounded,false)[1025811] "temp"
    (1030045 call _cast[1027581] call_tmp[1030036] ret_tmp[1805952])
    (1805955 'move' region[1030028] ret_tmp[1805952])
    (1030053 'move' ret[1030023] region[1030028])
    (1806020 '=' _retArg[1806018] ret[1030023])
    (1816094 call chpl__autoDestroy[1508195] call_tmp[1030036])
    (1806022 return _void[55])
  }
  function _ref(string)[937958].find[1181665](const  ref arg this[1181671]:_ref(string)[937958], const  ref arg needle[1181673]:string[26], const in arg region[1181695]:range(byteIndex,boundedLow,false)[1143422], ref arg _retArg[1808029]:_ref(byteIndex)[948778]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "resolved"
  {
    val ret[1181699]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1181705]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1181707 'move' call_tmp[1181705](1181713 call isASCII[31049] this[1181671]))
    const-val call_tmp[1181714]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1181716 'move' call_tmp[1181714] call_tmp[1181705])
    if call_tmp[1181714]
    {
      const-val call_tmp[1181723]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1181725 'move' call_tmp[1181723](1181728 call doSearchNoEnc[1181785] this[1181671] needle[1181673] region[1181695]))
      const-val call_tmp[1181734]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1803794]:byteIndex[28173] "temp"
      (1181739 call _cast[39486] call_tmp[1181723] ret_tmp[1803794])
      (1803797 'move' call_tmp[1181734] ret_tmp[1803794])
      (1184233 'move' ret[1181699] call_tmp[1181734])
      gotoReturn _end_find[1181779] _end_find[1181779]
    }
    {
      const-val call_tmp[1181750]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1181752 'move' call_tmp[1181750](1181758 call doSearchUTF8[1182826] this[1181671] needle[1181673] region[1181695]))
      const-val call_tmp[1181763]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1803800]:byteIndex[28173] "temp"
      (1181768 call _cast[39486] call_tmp[1181750] ret_tmp[1803800])
      (1803803 'move' call_tmp[1181763] ret_tmp[1803800])
      (1184236 'move' ret[1181699] call_tmp[1181763])
      gotoReturn _end_find[1181779] _end_find[1181779]
    }
    label _end_find[1181779]
    (1808031 '=' _retArg[1808029] ret[1181699])
    (1808033 return _void[55])
  }
  function _ref(string)[937958].replace[35366](const  ref arg this[35380]:_ref(string)[937958], const  ref arg needle[35363]:string[26], const  ref arg replacement[35369]:string[26], const in arg count[35376]:int(64)[13], ref arg _retArg[1803122]:_ref(string)[937958]) : void[4] "fn returns via _retArg" "inline" "method" "resolved"
  {
    const-val ret[504332]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[601182]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1808011]:string[26] "temp"
    (35392 call doReplace[1181033] this[35380] needle[35363] replacement[35369] count[35376] ret_tmp[1808011])
    (1808014 'move' call_tmp[601182] ret_tmp[1808011])
    (1203802 'move' ret[504332] call_tmp[601182])
    (1803124 '=' _retArg[1803122] ret[504332])
    (1803126 return _void[55])
  }
  function _ref(string)[937958].split[35486](const  ref arg this[35488]:_ref(string)[937958], const in arg maxsplit[35482]:int(64)[13], ref arg _retArg[1803140]:_ref(_ir_split__ref_string)[1156640]) : void[4] "fn returns via _retArg" "inline" "iterator fn" "method" "resolved" "no return value for void"
  {
    val _ir[1971149]:_ir_split__ref_string[1156529] "temp"
    (1971151 '.=' _ir[1971149] F0_this[1967798] this[35488])
    (1971155 '.=' _ir[1971149] F1_maxsplit[1967802] maxsplit[35482])
    (1971159 '=' _retArg[1803140] _ir[1971149])
    (1971162 return _void[55])
  }
  type _ic_split__ref_string[1156523] val super[1156524]:object[22] "super class" val more[1156526]:int(64)[13] ref F0_this[1967796]:_ref(string)[937958] const-val F1_maxsplit[1967800]:int(64)[13] val F2__iterator[1967804]:_ic_doSplitWSNoEnc[1124494] const F3_localx[1967806]:string[26] val F4_done[1967808]:bool[10] val F5_yieldChunk[1967810]:bool[10] const-val F6_chunk[1967812]:string[26] const F7_noSplits[1967814]:bool[10] const F8_limitSplits[1967816]:bool[10] val F9_splitCount[1967818]:int(64)[13] const F10_iEnd[1967820]:int(64)[13] val F11_inChunk[1967822]:bool[10] val F12_chunkStart[1967824]:int(64)[13] val F13__iterator[1967826]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108585] val F14_call_tmp[1967828]:range(int(64),bounded,false)[1026833] val F15__iterator[1967830]:_ic_these_range_int64_t_bounded_F[1096722] val F16__iterator[1967832]:_ic_chpl_bytes__ref_string[1108275] val F17__indexOfInterest[1967834]:(int(64),uint(8))[1111059] const-val F18_ret_tmp[1967836]:range(int(64),boundedLow,false)[1087584] const-val F19_ret_tmp[1967838]:string[26] const-val F20_ret_tmp[1967840]:range(int(64),boundedLow,false)[1087584] const-val F21_ret_tmp[1967842]:string[26] const-val F22_ret_tmp[1967844]:range(int(64),bounded,false)[1026833] const-val F23_ret_tmp[1967846]:string[26] const-val F24_ret_tmp[1967848]:range(int(64),boundedLow,false)[1087584] const-val F25_ret_tmp[1967850]:string[26] const F26_s[1967852]:string[26] const F27_localThis[1967854]:string[26] val F28_done[1967856]:bool[10] val F29_yieldChunk[1967858]:bool[10] const-val F30_chunk[1967860]:string[26] const F31_noSplits[1967862]:bool[10] const F32_limitSplits[1967864]:bool[10] val F33_splitCount[1967866]:int(64)[13] const-val F34_iEnd[1967868]:byteIndex[28173] val F35_inChunk[1967870]:bool[10] const-val F36_chunkStart[1967872]:byteIndex[28173] val F37__iterator[1967874]:_ic__cpIndexLen__ref_string[1122404] val F38_default_arg_start[1967876]:byteIndex[28173] val F39_localThis[1967878]:string[26] val F40__iterator[1967880]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108585] val F41_call_tmp[1967882]:range(int(64),bounded,false)[1026833] val F42__iterator[1967884]:_ic_these_range_int64_t_bounded_F[1096722] val F43__iterator[1967886]:_ic_chpl_bytes__ref_string[1108275] val F44__indexOfInterest[1967888]:(int(64),uint(8))[1111059] val F45_call_tmp[1967890]:byteIndex[28173] const-val F46_ret_tmp[1967892]:byteIndex[28173] const-val F47_ret_tmp[1967894]:(int(32),byteIndex,int(64))[1122161] const-val F48_ret_tmp[1967896]:byteIndex[28173] const-val F49_ret_tmp[1967898]:byteIndex[28173] const-val F50_ret_tmp[1967900]:range(byteIndex,boundedLow,false)[1143422] const-val F51_ret_tmp[1967902]:string[26] const-val F52_ret_tmp[1967904]:range(byteIndex,boundedLow,false)[1143422] const-val F53_ret_tmp[1967906]:string[26] const-val F54_ret_tmp[1967908]:byteIndex[28173] const-val F55_ret_tmp[1967910]:range(byteIndex,bounded,false)[1025811] const-val F56_ret_tmp[1967912]:string[26] const-val F57_ret_tmp[1967914]:byteIndex[28173] const-val F58_ret_tmp[1967916]:byteIndex[28173] const-val F59_ret_tmp[1967918]:range(byteIndex,boundedLow,false)[1143422] const-val F60_ret_tmp[1967920]:string[26] val F61_i[1967922]:int(64)[13] const-val F62_ret_tmp[1967924]:(syserr,int(32),int(32))[964639] const F63_tmp[1967926]:(syserr,int(32),int(32))[964639] const F64_nBytes[1967928]:int(32)[95] val F65_call_tmp[1967930]:byteIndex[28173] const-val F66_ret_tmp[1967932]:byteIndex[28173] const-val F67_ret_tmp[1967934]:(int(32),byteIndex,int(64))[1122161] const-val F68_ret_tmp[1967936]:byteIndex[28173] const-val F69_ret_tmp[1967938]:byteIndex[28173] const-val F70_ret_tmp[1967940]:range(byteIndex,boundedLow,false)[1143422] const-val F71_ret_tmp[1967942]:string[26] const-val F72_ret_tmp[1967944]:range(byteIndex,boundedLow,false)[1143422] const-val F73_ret_tmp[1967946]:string[26] const-val F74_ret_tmp[1967948]:byteIndex[28173] const-val F75_ret_tmp[1967950]:range(byteIndex,bounded,false)[1025811] const-val F76_ret_tmp[1967952]:string[26] const-val F77_ret_tmp[1967954]:byteIndex[28173] const-val F78_ret_tmp[1967956]:byteIndex[28173] const-val F79_ret_tmp[1967958]:range(byteIndex,boundedLow,false)[1143422] const-val F80_ret_tmp[1967960]:string[26] val F81__yield_expr_tmp_[1967962]:string[26] val F82__yield_expr_tmp_[1967964]:string[26] val F83__yield_expr_tmp_[1967966]:string[26] val value[1967968]:string[26]
  type _ir_split__ref_string[1156529] ref F0_this[1967798]:_ref(string)[937958] const-val F1_maxsplit[1967802]:int(64)[13]
  function _getIterator[1156538](const  ref arg ir[1156540]:_ir_split__ref_string[1156529]) : _ic_split__ref_string[1156523] "auto ii" "inline" "resolved" "unsafe"
  {
    val ret[1156647]:_ic_split__ref_string[1156523] "dead after last mention" "RVV" "temp"
    val _ic_[1156530]:_ic_split__ref_string[1156523] "dead after last mention" "temp"
    const-val call_tmp[1156654]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1156657 'move' call_tmp[1156654](1156669 'sizeof_bundle' _ic_split__ref_string[1156523]))
    const-val cast_tmp[1156672]:c_void_ptr[149] "dead after last mention" "temp"
    (1156674 'move' cast_tmp[1156672](1156535 call chpl_here_alloc[187788] call_tmp[1156654] 36))
    (1156543 'move' _ic_[1156530](1156676 'cast' _ic_split__ref_string[1156523] cast_tmp[1156672]))
    (1156545 'setcid' _ic_[1156530])
    (1156652 'move' ret[1156647] _ic_[1156530])
    (1971165 '.=' ret[1156647] more[1156526] 1)
    ref tmp[1971169]:_ref(string)[937958] "temp"
    (1971174 'move' tmp[1971169](1971170 '.v' ir[1156540] F0_this[1967798]))
    (1971176 '.=' ret[1156647] F0_this[1967796] tmp[1971169])
    const-val tmp[1971180]:int(64)[13] "temp"
    (1971185 'move' tmp[1971180](1971181 '.v' ir[1156540] F1_maxsplit[1967802]))
    (1971187 '.=' ret[1156647] F1_maxsplit[1967800] tmp[1971180])
    (1156649 return ret[1156647])
  }
  function _ref(string)[937958].strip[36095](const  ref arg this[36105]:_ref(string)[937958], const  ref arg chars[36091]:string[26], const in arg leading[36098]:bool[10], const in arg trailing[36102]:bool[10], ref arg _retArg[1803162]:_ref(string)[937958]) : void[4] "fn returns via _retArg" "method" "resolved"
  {
    val ret[504405]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[601504]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (601507 'move' call_tmp[601504](36116 call isASCII[31049] this[36105]))
    const-val call_tmp[601509]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (601512 'move' call_tmp[601509] call_tmp[601504])
    if call_tmp[601509]
    {
      const-val call_tmp[601514]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1807105]:string[26] "temp"
      (36123 call doStripNoEnc[1107653] this[36105] chars[36091] leading[36098] trailing[36102] ret_tmp[1807105])
      (1807108 'move' call_tmp[601514] ret_tmp[1807105])
      (1124404 'move' ret[504405] call_tmp[601514])
      gotoReturn _end_strip[504403] _end_strip[504403]
    }
    {
      const-val call_tmp[601521]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (601524 'move' call_tmp[601521](36132 call isEmpty[35064] this[36105]))
      const-val call_tmp[601526]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (601529 'move' call_tmp[601526] call_tmp[601521])
      if call_tmp[601526]
      {
        (504417 'move' ret[504405](1803166 call chpl__initCopy[981367] ""))
        gotoReturn _end_strip[504403] _end_strip[504403]
      }
      const-val call_tmp[601533]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (601536 'move' call_tmp[601533](36163 call isEmpty[35064] chars[36091]))
      const-val call_tmp[601538]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (601541 'move' call_tmp[601538] call_tmp[601533])
      if call_tmp[601538]
      {
        (1124409 'move' ret[504405](1124407 call chpl__autoCopy[1121994] this[36105]))
        gotoReturn _end_strip[504403] _end_strip[504403]
      }
      const-val call_tmp[601545]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1802864]:string[26] "temp"
      (36178 call localize[32889] this[36105] ret_tmp[1802864])
      (1802867 'move' call_tmp[601545] ret_tmp[1802864])
      const localThis[36179]:string[26] "dead at end of block" "const" "insert auto destroy"
      (540476 'move' localThis[36179] call_tmp[601545])
      const-val call_tmp[601552]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1802870]:string[26] "temp"
      (36189 call localize[32889] chars[36091] ret_tmp[1802870])
      (1802873 'move' call_tmp[601552] ret_tmp[1802870])
      const-val localChars[36190]:string[26] "dead at end of block" "const" "insert auto destroy"
      (540478 'move' localChars[36190] call_tmp[601552])
      val start[36196]:byteIndex[28173] "dead at end of block" "insert auto destroy"
      (540480 call init=[28148] start[36196] 0)
      ref call_tmp[601559]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
      (601562 'move' call_tmp[601559](36202 call buffLen[757905] localThis[36179]))
      const-val call_tmp[601564]:int(64)[13] "dead at end of block" "insert auto destroy" "maybe param" "temp"
      const-val coerce_tmp[1122035]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1122039 'move' coerce_tmp[1122035](1122037 'deref' call_tmp[601559]))
      (601567 'move' call_tmp[601564](36206 call -[962245] coerce_tmp[1122035]))
      val end[36208]:byteIndex[28173] "dead at end of block" "insert auto destroy"
      (540482 call init=[28148] end[36208] call_tmp[601564])
      const-val call_tmp[601569]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (601572 'move' call_tmp[601569] leading[36098])
      if call_tmp[601569]
      {
        {
          val _indexOfInterest[36291]:(int(32),byteIndex,int(64))[1122161] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[36292]:_ic__cpIndexLen__ref_string[1122404] "dead at end of block" "expr temp" "temp"
          const-val call_tmp[601576]:_ir__cpIndexLen__ref_string[1122410] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val default_arg_start[1122076]:byteIndex[28173] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
          const-val ret_tmp[1807395]:byteIndex[28173] "temp"
          (1122078 call _cpIndexLen_default_start[1122050] localThis[36179] ret_tmp[1807395])
          (1807398 'move' default_arg_start[1122076] ret_tmp[1807395])
          const-val ret_tmp[1802754]:_ir__cpIndexLen__ref_string[1122410] "temp"
          (36224 call _cpIndexLen[31109] localThis[36179] default_arg_start[1122076] ret_tmp[1802754])
          (1802757 'move' call_tmp[601576] ret_tmp[1802754])
          (36301 'move' _iterator[36292](36299 call _getIterator[1122419] call_tmp[601576]))
          {
            val ret[1868143]:_ir__cpIndexLen__ref_string[1122410] "dead after last mention" "RVV" "temp"
            const-val call_tmp[1868145]:string[26] "dead at end of block" "maybe param" "temp"
            const-val ret_tmp[1868147]:string[26] "temp"
            ref this[1870314]:_ref(string)[937958] "temp"
            (1870319 'move' this[1870314](1870316 '.v' _iterator[36292] F0_this[1963570]))
            (1868150 call localize[32889] this[1870314] ret_tmp[1868147])
            (1868153 'move' call_tmp[1868145] ret_tmp[1868147])
            val localThis[1868156]:string[26] "dead at end of block" "insert auto destroy"
            (1868158 'move' localThis[1868156] call_tmp[1868145])
            const-val call_tmp[1868161]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1868163 'move' call_tmp[1868161](1868166 call isASCII[31049] localThis[1868156]))
            const-val call_tmp[1868168]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1868170 'move' call_tmp[1868168] call_tmp[1868161])
            if call_tmp[1868161]
            {
              const-val _iterator[1868175]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108585] "dead at end of block" "expr temp" "insert auto destroy" "temp"
              const-val call_tmp[1868177]:range(int(64),bounded,false)[1026833] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
              const-val ret_tmp[1868179]:range(int(64),bounded,false)[1026833] "temp"
              ref this[1870321]:_ref(string)[937958] "temp"
              (1870326 'move' this[1870321](1870323 '.v' _iterator[36292] F0_this[1963570]))
              (1868182 call byteIndices[31068] this[1870321] ret_tmp[1868179])
              (1868185 'move' call_tmp[1868177] ret_tmp[1868179])
              val call_tmp[1868188]:_ic_these_range_int64_t_bounded_F[1096722] "dead at end of block" "expr temp" "maybe param" "temp"
              (1868190 'move' call_tmp[1868188](1868193 call _getIterator[1095339] call_tmp[1868177]))
              const-val call_tmp[1868195]:_ir_chpl_bytes__ref_string[1108281] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[1868197]:_ir_chpl_bytes__ref_string[1108281] "temp"
              ref this[1870328]:_ref(string)[937958] "temp"
              (1870333 'move' this[1870328](1870330 '.v' _iterator[36292] F0_this[1963570]))
              (1868200 call chpl_bytes[33577] this[1870328] ret_tmp[1868197])
              (1868203 'move' call_tmp[1868195] ret_tmp[1868197])
              val call_tmp[1868206]:_ic_chpl_bytes__ref_string[1108275] "dead at end of block" "expr temp" "maybe param" "temp"
              (1868208 'move' call_tmp[1868206](1868211 call _getIterator[1108290] call_tmp[1868195]))
              const-val ret_tmp[1868213]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108585] "temp"
              (1868216 call _build_tuple[1108543] call_tmp[1868188] call_tmp[1868206] ret_tmp[1868213])
              (1868220 'move' _iterator[1868175] ret_tmp[1868213])
              val _iterator[1868223]:_ic_these_range_int64_t_bounded_F[1096722] "temp"
              (1868225 'move' _iterator[1868223](1868227 '.v' _iterator[1868175] x0[1108581]))
              val _iterator[1868230]:_ic_chpl_bytes__ref_string[1108275] "temp"
              (1868232 'move' _iterator[1868230](1868234 '.v' _iterator[1868175] x1[1108583]))
              {
                (1868239 call zip1[1096757] _iterator[1868223])
              }
              {
                (1868243 call zip1[1108310] _iterator[1868230])
              }
              const-val isFinished[1868245]:bool[10] "temp"
              val hasMore[1868247]:bool[10] "temp"
              CForLoop[1868249]
              {
                val _indexOfInterest[1868272]:(int(64),uint(8))[1111059] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                {
                  (1868276 call zip2[1108319] _iterator[1868230])
                }
                {
                  const-val retTmp[1868279]:int(64)[13] "temp"
                  (1868281 'move' retTmp[1868279](1868284 call hasMore[1108346] _iterator[1868230]))
                  (1868286 'move' hasMore[1868247](1868288 'cast' bool[10] retTmp[1868279]))
                }
                (1868291 'move' isFinished[1868245](1868293 '!' hasMore[1868247]))
                if isFinished[1868245]
                {
                  (1868297 'chpl_error' c"zippered iterations have non-equal lengths")
                }
                {
                  (1868301 'move' _index[1868316](1868304 call getValue[1108355] _iterator[1868230]))
                }
                {
                  (1868308 call zip2[1096766] _iterator[1868223])
                }
                {
                  (1868311 'move' _index[1868322](1868314 call getValue[1096802] _iterator[1868223]))
                }
                val _index[1868316]:uint(8)[100] "temp"
                (1868318 '.=' _indexOfInterest[1868272] x1[1111057] _index[1868316])
                val _index[1868322]:int(64)[13] "temp"
                (1868324 '.=' _indexOfInterest[1868272] x0[1111055] _index[1868322])
                1
                const-val i[1868329]:int(64)[13] "const" "index var" "insert auto destroy"
                (1868331 'move' i[1868329](1868333 '.v' _indexOfInterest[1868272] x0[1111055]))
                const-val b[1868336]:uint(8)[100] "const" "index var" "insert auto destroy"
                (1868338 'move' b[1868336](1868340 '.v' _indexOfInterest[1868272] x1[1111057]))
                const-val yret[1868343]:(int(32),byteIndex,int(64))[1122161] "dead after last mention" "YVV" "temp"
                val call_tmp[1868345]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val call_tmp[1868347]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                (1868349 'move' call_tmp[1868347](1868351 'cast' int(32)[95] b[1868336]))
                const-val call_tmp[1868354]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1868356]:byteIndex[28173] "temp"
                (1868359 call _cast[39486] i[1868329] ret_tmp[1868356])
                (1868362 'move' call_tmp[1868354] ret_tmp[1868356])
                const-val call_tmp[1868365]:(int(32),byteIndex,int(64))[1122161] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1868367]:(int(32),byteIndex,int(64))[1122161] "temp"
                (1868370 call _build_tuple[1122111] call_tmp[1868347] call_tmp[1868354] 1 ret_tmp[1868367])
                (1868375 'move' call_tmp[1868365] ret_tmp[1868367])
                (1868378 'move' yret[1868343] call_tmp[1868365])
                const-val _yieldedIndex[1868960]:(int(32),byteIndex,int(64))[1122161] "temp"
                (1869662 'move' _yieldedIndex[1868960] call_tmp[1868365])
                {
                  1
                  const-val thisChar[1868963]:int(32)[95] "const" "index var" "insert auto destroy"
                  (1868965 'move' thisChar[1868963](1868967 '.v' _yieldedIndex[1868960] x0[1122155]))
                  ref i[1868970]:_ref(byteIndex)[948778] "index var" "insert auto destroy"
                  (1868972 'move' i[1868970](1868974 '.v' _yieldedIndex[1868960] x1[1122157]))
                  const-val nBytes[1868977]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1868979 'move' nBytes[1868977](1868981 '.v' _yieldedIndex[1868960] x2[1122159]))
                  {
                    {
                      val _indexOfInterest[1868986]:int(32)[95] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      val _iterator[1868988]:_ic_codepoints__ref_string[1122868] "dead at end of block" "expr temp" "temp"
                      const-val call_tmp[1868990]:_ir_codepoints__ref_string[1122874] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val ret_tmp[1868992]:_ir_codepoints__ref_string[1122874] "temp"
                      (1868995 call codepoints[33666] localChars[36190] ret_tmp[1868992])
                      (1868998 'move' call_tmp[1868990] ret_tmp[1868992])
                      (1869001 'move' _iterator[1868988](1869004 call _getIterator[1122883] call_tmp[1868990]))
                      {
                        val ret[1869007]:_ir_codepoints__ref_string[1122874] "dead at end of block" "RVV" "temp"
                        const-val call_tmp[1869009]:string[26] "dead at end of block" "maybe param" "temp"
                        const-val ret_tmp[1869011]:string[26] "temp"
                        ref this[1869013]:_ref(string)[937958] "temp"
                        (1869015 'move' this[1869013](1869017 '.v' _iterator[1868988] F0_this[1967096]))
                        (1869021 call localize[32889] this[1869013] ret_tmp[1869011])
                        (1869024 'move' call_tmp[1869009] ret_tmp[1869011])
                        val localThis[1869027]:string[26] "dead at end of block" "insert auto destroy"
                        (1869029 'move' localThis[1869027] call_tmp[1869009])
                        const-val call_tmp[1869032]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        ref this[1869034]:_ref(string)[937958] "temp"
                        (1869036 'move' this[1869034](1869038 '.v' _iterator[1868988] F0_this[1967096]))
                        (1869041 'move' call_tmp[1869032](1869044 call isASCII[31049] this[1869034]))
                        const-val call_tmp[1869046]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1869048 'move' call_tmp[1869046] call_tmp[1869032])
                        if call_tmp[1869032]
                        {
                          val _indexOfInterest[1869053]:uint(8)[100] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                          val _iterator[1869055]:_ic_chpl_bytes__ref_string[1108275] "dead at end of block" "expr temp" "temp"
                          const-val call_tmp[1869057]:_ir_chpl_bytes__ref_string[1108281] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val ret_tmp[1869059]:_ir_chpl_bytes__ref_string[1108281] "temp"
                          ref this[1869061]:_ref(string)[937958] "temp"
                          (1869063 'move' this[1869061](1869065 '.v' _iterator[1868988] F0_this[1967096]))
                          (1869069 call chpl_bytes[33577] this[1869061] ret_tmp[1869059])
                          (1869072 'move' call_tmp[1869057] ret_tmp[1869059])
                          (1869075 'move' _iterator[1869055](1869078 call _getIterator[1108290] call_tmp[1869057]))
                          {
                            val ret[1869081]:_ir_chpl_bytes__ref_string[1108281] "dead at end of block" "RVV" "temp"
                            const-val call_tmp[1869083]:string[26] "dead at end of block" "maybe param" "temp"
                            const-val ret_tmp[1869085]:string[26] "temp"
                            ref this[1869087]:_ref(string)[937958] "temp"
                            (1869089 'move' this[1869087](1869091 '.v' _iterator[1869055] F0_this[1964922]))
                            (1869095 call localize[32889] this[1869087] ret_tmp[1869085])
                            (1869098 'move' call_tmp[1869083] ret_tmp[1869085])
                            val localThis[1869101]:string[26] "dead at end of block" "insert auto destroy"
                            (1869103 'move' localThis[1869101] call_tmp[1869083])
                            val _indexOfInterest[1869106]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                            val _iterator[1869108]:_ic_chpl_direct_counted_range_iter[1103809] "dead at end of block" "expr temp" "temp"
                            ref call_tmp[1869110]:_ref(int(64))[936591] "dead at end of block" "maybe param" "temp"
                            (1869112 'move' call_tmp[1869110](1869115 call buffLen[757905] localThis[1869101]))
                            const-val call_tmp[1869117]:_ir_chpl_direct_counted_range_iter[1103815] "dead at end of block" "expr temp" "maybe param" "temp"
                            const-val coerce_tmp[1869119]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1869121 'move' coerce_tmp[1869119](1869123 'deref' call_tmp[1869110]))
                            const-val ret_tmp[1869125]:_ir_chpl_direct_counted_range_iter[1103815] "temp"
                            (1869128 call chpl_direct_counted_range_iter[458034] 0 coerce_tmp[1869119] ret_tmp[1869125])
                            (1869132 'move' call_tmp[1869117] ret_tmp[1869125])
                            (1869135 'move' _iterator[1869108](1869138 call _getIterator[1103824] call_tmp[1869117]))
                            {
                              val ret[1869141]:_ir_chpl_direct_counted_range_iter[1103815] "dead after last mention" "RVV" "temp"
                              val _indexOfInterest[1869143]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                              val _iterator[1869145]:_ic_chpl_direct_counted_range_iter_helper[1103559] "dead at end of block" "expr temp" "temp"
                              const-val call_tmp[1869147]:_ir_chpl_direct_counted_range_iter_helper[1103565] "dead at end of block" "expr temp" "maybe param" "temp"
                              const-val ret_tmp[1869149]:_ir_chpl_direct_counted_range_iter_helper[1103565] "temp"
                              const-val low[1869151]:int(64)[13] "temp"
                              (1869153 'move' low[1869151](1869155 '.v' _iterator[1869108] F0_low[1976900]))
                              const-val count[1869158]:int(64)[13] "temp"
                              (1869160 'move' count[1869158](1869162 '.v' _iterator[1869108] F1_count[1976904]))
                              (1869166 call chpl_direct_counted_range_iter_helper[1102117] low[1869151] count[1869158] ret_tmp[1869149])
                              (1869170 'move' call_tmp[1869147] ret_tmp[1869149])
                              (1869173 'move' _iterator[1869145](1869176 call _getIterator[1103574] call_tmp[1869147]))
                              {
                                val ret[1928017]:_ir_chpl_direct_counted_range_iter_helper[1103565] "dead after last mention" "RVV" "temp"
                                val call_tmp[1928019]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                const-val tmp[1928021]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val tmp[1928023]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                                const-val call_tmp[1928025]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                const-val count[1928513]:int(64)[13] "temp"
                                (1928518 'move' count[1928513](1928515 '.v' _iterator[1869145] F1_count[1981376]))
                                (1928027 'move' call_tmp[1928025](1928030 call <[948417] count[1928513]))
                                (1928032 'move' tmp[1928023] call_tmp[1928025])
                                (1928035 'move' tmp[1928021] call_tmp[1928025])
                                const-val call_tmp[1928038]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1928040 'move' call_tmp[1928038] call_tmp[1928025])
                                if call_tmp[1928025]
                                {
                                  (1928046 call boundsCheckHalt[210185] "With a negative count, the range must have a last index.")
                                }
                                const-val tmp[1928049]:2*int(64)[1040075] "dead at end of block" "const" "insert auto destroy" "temp"
                                val tmp[1928051]:2*int(64)[1040075] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                                const-val tmp[1928053]:bool[10] "dead after last mention" "maybe param" "temp"
                                const-val call_tmp[1928055]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                const-val count[1928520]:int(64)[13] "temp"
                                (1928525 'move' count[1928520](1928522 '.v' _iterator[1869145] F1_count[1981376]))
                                (1928057 'move' call_tmp[1928055](1928060 call ==[435666] count[1928520] 0))
                                (1928063 'move' tmp[1928053] call_tmp[1928055])
                                if call_tmp[1928055]
                                {
                                  const-val tmp[1928068]:2*int(64)[1040075] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                                  val call_tmp[1928070]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                                  const-val call_tmp[1928072]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val low[1928527]:int(64)[13] "temp"
                                  (1928532 'move' low[1928527](1928529 '.v' _iterator[1869145] F0_low[1981372]))
                                  (1928074 'move' call_tmp[1928072](1928077 call _cast[956053] low[1928527]))
                                  const-val call_tmp[1928079]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val coerce_tmp[1928081]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                                  (1928083 'move' coerce_tmp[1928081](1928085 'cast' uint(64)[115] 1))
                                  (1928088 'move' call_tmp[1928079](1928091 call -[962212] call_tmp[1928072]))
                                  const-val call_tmp[1928093]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  (1928095 'move' call_tmp[1928093](1928098 call _cast[953562] call_tmp[1928079]))
                                  const-val ret_tmp[1928100]:2*int(64)[1040075] "temp"
                                  const-val low[1928534]:int(64)[13] "temp"
                                  (1928539 'move' low[1928534](1928536 '.v' _iterator[1869145] F0_low[1981372]))
                                  (1928103 call _build_tuple[1040033] low[1928534] call_tmp[1928093] ret_tmp[1928100])
                                  (1928107 'move' tmp[1928068] ret_tmp[1928100])
                                  (1928110 'move' tmp[1928051] tmp[1928068])
                                }
                                {
                                  const-val tmp[1928114]:2*int(64)[1040075] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                                  val call_tmp[1928116]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  const-val call_tmp[1928118]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val count[1928541]:int(64)[13] "temp"
                                  (1928546 'move' count[1928541](1928543 '.v' _iterator[1869145] F1_count[1981376]))
                                  (1928120 'move' call_tmp[1928118] count[1928541])
                                  const-val call_tmp[1928123]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val count[1928548]:int(64)[13] "temp"
                                  (1928553 'move' count[1928548](1928550 '.v' _iterator[1869145] F1_count[1981376]))
                                  (1928125 'move' call_tmp[1928123](1928128 call -[962245] count[1928548]))
                                  const-val call_tmp[1928130]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val low[1928555]:int(64)[13] "temp"
                                  (1928560 'move' low[1928555](1928557 '.v' _iterator[1869145] F0_low[1981372]))
                                  (1928132 'move' call_tmp[1928130](1928135 call +[439674] low[1928555] call_tmp[1928123]))
                                  const-val ret_tmp[1928138]:2*int(64)[1040075] "temp"
                                  const-val low[1928562]:int(64)[13] "temp"
                                  (1928567 'move' low[1928562](1928564 '.v' _iterator[1869145] F0_low[1981372]))
                                  (1928141 call _build_tuple[1040033] low[1928562] call_tmp[1928130] ret_tmp[1928138])
                                  (1928145 'move' tmp[1928114] ret_tmp[1928138])
                                  (1928148 'move' tmp[1928051] tmp[1928114])
                                }
                                (1928152 '=' tmp[1928049] tmp[1928051])
                                (1928155 'noop')
                                1
                                ref call_tmp[1928157]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
                                (1928159 'move' call_tmp[1928157](1928161 '.' tmp[1928049] x0[1040071]))
                                const-val start[1928164]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                const-val coerce_tmp[1928166]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                (1928168 'move' coerce_tmp[1928166](1928170 'deref' call_tmp[1928157]))
                                (1928172 '=' start[1928164] coerce_tmp[1928166])
                                (1928175 'noop')
                                ref call_tmp[1928176]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
                                (1928178 'move' call_tmp[1928176](1928180 '.' tmp[1928049] x1[1040073]))
                                const-val end[1928183]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                const-val coerce_tmp[1928185]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                (1928187 'move' coerce_tmp[1928185](1928189 'deref' call_tmp[1928176]))
                                (1928191 '=' end[1928183] coerce_tmp[1928185])
                                (1928194 'noop')
                                val _indexOfInterest[1928195]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                                val _iterator[1928197]:_ic_chpl_direct_param_stride_range_iter[1103305] "dead at end of block" "expr temp" "temp"
                                const-val call_tmp[1928199]:_ir_chpl_direct_param_stride_range_iter[1103311] "dead at end of block" "expr temp" "maybe param" "temp"
                                const-val ret_tmp[1928201]:_ir_chpl_direct_param_stride_range_iter[1103311] "temp"
                                (1928204 call chpl_direct_param_stride_range_iter[1102543] coerce_tmp[1928166] coerce_tmp[1928185] ret_tmp[1928201])
                                (1928208 'move' call_tmp[1928199] ret_tmp[1928201])
                                (1928211 'move' _iterator[1928197](1928214 call _getIterator[1103320] call_tmp[1928199]))
                                {
                                  val ret[1928217]:_ir_chpl_direct_param_stride_range_iter[1103311] "dead after last mention" "RVV" "temp"
                                  val call_tmp[1928219]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  (1928222 call chpl_range_check_stride[1102863])
                                  val i[1928223]:int(64)[13] "dead at end of block" "insert auto destroy"
                                  val call_tmp[1928225]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  (1928227 'move' i[1928223] 0)
                                  val call_tmp[1928230]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  const-val default_arg_first[1928232]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                                  const-val low[1928234]:int(64)[13] "temp"
                                  (1928236 'move' low[1928234](1928238 '.v' _iterator[1928197] F0_low[1982870]))
                                  (1928241 'move' default_arg_first[1928232](1928244 call chpl_checkIfRangeIterWillOverflow_default_first[1103217] low[1928234]))
                                  const-val default_arg_last[1928246]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                                  const-val high[1928248]:int(64)[13] "temp"
                                  (1928250 'move' high[1928248](1928252 '.v' _iterator[1928197] F1_high[1982874]))
                                  (1928255 'move' default_arg_last[1928246](1928258 call chpl_checkIfRangeIterWillOverflow_default_last[1103245] high[1928248]))
                                  const-val _return_tmp_[1928260]:bool[10] "dead after last mention" "temp"
                                  const-val low[1928262]:int(64)[13] "temp"
                                  (1928264 'move' low[1928262](1928266 '.v' _iterator[1928197] F0_low[1982870]))
                                  const-val high[1928269]:int(64)[13] "temp"
                                  (1928271 'move' high[1928269](1928273 '.v' _iterator[1928197] F1_high[1982874]))
                                  (1928276 'move' _return_tmp_[1928260](1928279 call chpl_checkIfRangeIterWillOverflow[1096095] low[1928262] high[1928269] 1 default_arg_first[1928232] default_arg_last[1928246] 1))
                                  CForLoop[1928286]
                                  {
                                    const-val yret[1928315]:int(64)[13] "dead after last mention" "YVV" "temp"
                                    (1928317 'move' yret[1928315] i[1928223])
                                    const-val _yieldedIndex[1928320]:int(64)[13] "temp"
                                    (1928322 'move' _yieldedIndex[1928320] i[1928223])
                                    {
                                      const-val i[1928326]:int(64)[13] "const" "index var" "insert auto destroy"
                                      (1928328 'move' i[1928326] _yieldedIndex[1928320])
                                      const-val yret[1928331]:int(64)[13] "dead after last mention" "YVV" "temp"
                                      (1928333 'move' yret[1928331] _yieldedIndex[1928320])
                                      const-val _yieldedIndex[1928361]:int(64)[13] "temp"
                                      (1928511 'move' _yieldedIndex[1928361] _yieldedIndex[1928320])
                                      {
                                        const-val i[1928363]:int(64)[13] "const" "index var" "insert auto destroy"
                                        (1928365 'move' i[1928363] _yieldedIndex[1928361])
                                        const-val yret[1928368]:int(64)[13] "dead after last mention" "YVV" "temp"
                                        (1928370 'move' yret[1928368] _yieldedIndex[1928361])
                                        const-val _yieldedIndex[1928373]:int(64)[13] "temp"
                                        (1928375 'move' _yieldedIndex[1928373] _yieldedIndex[1928361])
                                        {
                                          const-val i[1928379]:int(64)[13] "const" "index var" "insert auto destroy"
                                          (1928381 'move' i[1928379] _yieldedIndex[1928373])
                                          const-val yret[1928384]:uint(8)[100] "dead after last mention" "YVV" "temp"
                                          ref call_tmp[1928386]:_ref(uint(8))[936927] "dead after last mention" "maybe param" "temp"
                                          ref _this_tmp_[1928388]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "temp"
                                          (1928390 'move' _this_tmp_[1928388](1928393 call buff[757983] localThis[1869101]))
                                          val coerce_tmp[1928395]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                          (1928397 'move' coerce_tmp[1928395](1928399 'deref' _this_tmp_[1928388]))
                                          (1928401 'move' call_tmp[1928386](1928404 call this[954110] coerce_tmp[1928395] _yieldedIndex[1928373]))
                                          const-val coerce_tmp[1928407]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                          (1928409 'move' coerce_tmp[1928407](1928411 'deref' call_tmp[1928386]))
                                          (1928413 '=' yret[1928384] coerce_tmp[1928407])
                                          (1928416 'noop')
                                          const-val _yieldedIndex[1928417]:uint(8)[100] "temp"
                                          (1928419 'move' _yieldedIndex[1928417] coerce_tmp[1928407])
                                          {
                                            const-val b[1928423]:uint(8)[100] "const" "index var" "insert auto destroy"
                                            (1928425 'move' b[1928423] _yieldedIndex[1928417])
                                            val yret[1928428]:int(32)[95] "dead after last mention" "YVV" "temp"
                                            val call_tmp[1928430]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                            const-val _yieldedIndex[1928432]:int(32)[95] "temp"
                                            (1928434 'move' _yieldedIndex[1928432](1928436 'cast' int(32)[95] _yieldedIndex[1928417]))
                                            {
                                              const-val removeChar[1928440]:int(32)[95] "const" "index var" "insert auto destroy"
                                              (1928442 'move' removeChar[1928440] _yieldedIndex[1928432])
                                              {
                                                const-val call_tmp[1928446]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                                (1928448 'move' call_tmp[1928446](1928451 call ==[435644] thisChar[1868963] removeChar[1928440]))
                                                const-val call_tmp[1928454]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                                (1928456 'move' call_tmp[1928454] call_tmp[1928446])
                                                if call_tmp[1928454]
                                                {
                                                  const-val call_tmp[1928461]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                                  const-val ret_tmp[1928463]:byteIndex[28173] "temp"
                                                  (1928466 call +[28725] i[1868970] nBytes[1868977] ret_tmp[1928463])
                                                  (1928470 'move' call_tmp[1928461] ret_tmp[1928463])
                                                  (1928474 call =[38194] start[36196] call_tmp[1928461])
                                                  (1928478 call chpl__autoDestroy[1435583] call_tmp[1928461])
                                                  (1928505 call _freeIterator[1103493] _iterator[1928197])
                                                  (1928508 call chpl__autoDestroy[1508492] tmp[1928049])
                                                  (1928481 call _freeIterator[1103743] _iterator[1869145])
                                                  (1928484 call _freeIterator[1103993] _iterator[1869108])
                                                  (1928487 call chpl__autoDestroy[1435320] localThis[1869101])
                                                  (1928490 call _freeIterator[1109588] _iterator[1869055])
                                                  (1928493 call chpl__autoDestroy[1435320] localThis[1869027])
                                                  (1928496 call _freeIterator[1123155] _iterator[1868988])
                                                  continue _continueLabel[1869595] _continueLabel[1869595]
                                                }
                                              }
                                              label _continueLabel[1928501]
                                            }
                                          }
                                        }
                                      }
                                    }
                                    {
                                      const-val low[1928288]:int(64)[13] "temp"
                                      (1928290 'move' low[1928288](1928292 '.v' _iterator[1928197] F0_low[1982870]))
                                      (1928295 '=' i[1928223] low[1928288])
                                    }
                                    {
                                      const-val high[1928299]:int(64)[13] "temp"
                                      (1928301 'move' high[1928299](1928303 '.v' _iterator[1928197] F1_high[1982874]))
                                      (1928306 '<=' i[1928223] high[1928299])
                                    }
                                    {
                                      val call_tmp[1928310]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                      (1928312 '+=' i[1928223] 1)
                                    }
                                  }
                                  label _endchpl_direct_param_stride_range_iter[1928349]
                                }
                                (1928352 call _freeIterator[1103493] _iterator[1928197])
                                (1928355 call chpl__autoDestroy[1508492] tmp[1928049])
                                label _endchpl_direct_counted_range_iter_helper[1928357]
                              }
                              (1869322 call _freeIterator[1103743] _iterator[1869145])
                              label _endchpl_direct_counted_range_iter[1869324]
                            }
                            (1869327 call _freeIterator[1103993] _iterator[1869108])
                            (1869330 call chpl__autoDestroy[1435320] localThis[1869101])
                            label _endchpl_bytes[1869332]
                          }
                          (1869335 call _freeIterator[1109588] _iterator[1869055])
                        }
                        {
                          val i[1869338]:int(64)[13] "dead at end of block" "insert auto destroy"
                          (1869340 'move' i[1869338] 0)
                          val tmp[1869343]:bool[10] "dead after last mention" "temp"
                          ref call_tmp[1869345]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
                          (1869347 'move' call_tmp[1869345](1869350 call buffLen[757905] localThis[1869027]))
                          const-val call_tmp[1869352]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val coerce_tmp[1869354]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (1869356 'move' coerce_tmp[1869354](1869358 'deref' call_tmp[1869345]))
                          (1869360 'move' call_tmp[1869352](1869363 call <[437490] 0 coerce_tmp[1869354]))
                          (1869366 'move' tmp[1869343] call_tmp[1869352])
                          WhileDo[1869369]
                          {
                            ref call_tmp[1869371]:_ref(c_ptr(uint(8)))[937451] "dead at end of block" "maybe param" "temp"
                            (1869373 'move' call_tmp[1869371](1869376 call buff[757983] localThis[1869027]))
                            ref call_tmp[1869378]:_ref(int(64))[936591] "dead at end of block" "maybe param" "temp"
                            (1869380 'move' call_tmp[1869378](1869383 call buffLen[757905] localThis[1869027]))
                            const-val call_tmp[1869385]:(syserr,int(32),int(32))[964639] "dead at end of block" "maybe param" "temp"
                            val coerce_tmp[1869387]:c_ptr(uint(8))[937442] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1869389 'move' coerce_tmp[1869387](1869391 'deref' call_tmp[1869371]))
                            const-val coerce_tmp[1869393]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1869395 'move' coerce_tmp[1869393](1869397 'deref' call_tmp[1869378]))
                            const-val ret_tmp[1869399]:(syserr,int(32),int(32))[964639] "temp"
                            (1869402 call decodeHelp[174452] coerce_tmp[1869387] coerce_tmp[1869393] i[1869338] 1 ret_tmp[1869399])
                            (1869408 'move' call_tmp[1869385] ret_tmp[1869399])
                            const-val tmp[1869411]:(syserr,int(32),int(32))[964639] "dead at end of block" "const" "insert auto destroy" "temp"
                            (1869413 'move' tmp[1869411] call_tmp[1869385])
                            1
                            ref call_tmp[1869417]:_ref(syserr)[948851] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1869419 'move' call_tmp[1869417](1869421 '.' tmp[1869411] x0[964633]))
                            const-val decodeRet[1869424]:syserr[223603] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1869426]:syserr[223603] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1869428 'move' coerce_tmp[1869426](1869430 'deref' call_tmp[1869417]))
                            (1869432 'move' decodeRet[1869424] coerce_tmp[1869426])
                            ref call_tmp[1869437]:_ref(int(32))[936645] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1869439 'move' call_tmp[1869437](1869441 '.' tmp[1869411] x1[964635]))
                            const-val cp[1869444]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1869446]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1869448 'move' coerce_tmp[1869446](1869450 'deref' call_tmp[1869437]))
                            (1869452 'move' cp[1869444] coerce_tmp[1869446])
                            ref call_tmp[1869457]:_ref(int(32))[936645] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1869459 'move' call_tmp[1869457](1869461 '.' tmp[1869411] x2[964637]))
                            const-val nBytes[1869464]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1869466]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1869468 'move' coerce_tmp[1869466](1869470 'deref' call_tmp[1869457]))
                            (1869472 'move' nBytes[1869464] coerce_tmp[1869466])
                            const-val yret[1869477]:int(32)[95] "dead after last mention" "YVV" "temp"
                            val call_tmp[1869479]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                            (1869481 'move' yret[1869477] cp[1869444])
                            const-val _yieldedIndex[1869484]:int(32)[95] "temp"
                            (1869486 'move' _yieldedIndex[1869484] cp[1869444])
                            {
                              const-val removeChar[1869490]:int(32)[95] "const" "index var" "insert auto destroy"
                              (1869492 'move' removeChar[1869490] _yieldedIndex[1869484])
                              {
                                const-val call_tmp[1869496]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1869498 'move' call_tmp[1869496](1869501 call ==[435644] thisChar[1868963] removeChar[1869490]))
                                const-val call_tmp[1869504]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1869506 'move' call_tmp[1869504] call_tmp[1869496])
                                if call_tmp[1869504]
                                {
                                  const-val call_tmp[1869511]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                  const-val ret_tmp[1869513]:byteIndex[28173] "temp"
                                  (1869516 call +[28725] i[1868970] nBytes[1868977] ret_tmp[1869513])
                                  (1869520 'move' call_tmp[1869511] ret_tmp[1869513])
                                  (1869524 call =[38194] start[36196] call_tmp[1869511])
                                  (1869528 call chpl__autoDestroy[1435583] call_tmp[1869511])
                                  (1869531 call chpl__autoDestroy[1439223] tmp[1869411])
                                  (1869534 call chpl__autoDestroy[1435320] localThis[1869027])
                                  (1869537 call _freeIterator[1123155] _iterator[1868988])
                                  continue _continueLabel[1869595] _continueLabel[1869595]
                                }
                              }
                              label _continueLabel[1869542]
                            }
                            const-val coerce_tmp[1869544]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (1869546 'move' coerce_tmp[1869544](1869548 'cast' int(64)[13] nBytes[1869464]))
                            (1869552 call +=[451353] i[1869338] coerce_tmp[1869544])
                            (1869556 call chpl__autoDestroy[1439223] tmp[1869411])
                            ref call_tmp[1869558]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
                            (1869560 'move' call_tmp[1869558](1869563 call buffLen[757905] localThis[1869027]))
                            const-val call_tmp[1869565]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            const-val coerce_tmp[1869567]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (1869569 'move' coerce_tmp[1869567](1869571 'deref' call_tmp[1869558]))
                            (1869573 'move' call_tmp[1869565](1869576 call <[437490] i[1869338] coerce_tmp[1869567]))
                            (1869579 'move' tmp[1869343] call_tmp[1869565])
                            tmp[1869343]
                          }
                        }
                        (1869584 call chpl__autoDestroy[1435320] localThis[1869027])
                        label _endcodepoints[1869586]
                      }
                      label _breakLabel[1869588]
                      (1869591 call _freeIterator[1123155] _iterator[1868988])
                    }
                    ref moreRef1[1869598]:_ref(int(64))[936591] "temp"
                    (1869600 'move' moreRef1[1869598](1869602 '.' _iterator[1868223] more[1096725]))
                    const-val moreVal1[1869605]:int(64)[13] "const" "temp"
                    (1869607 '=' moreVal1[1869605] moreRef1[1869598])
                    const-val moreValNeg1[1869610]:int(64)[13] "const" "temp"
                    (1869612 'move' moreValNeg1[1869610](1869614 'u-' moreVal1[1869605]))
                    (1869616 '=' moreRef1[1869598] moreValNeg1[1869610])
                    (1869620 call advance[1096748] _iterator[1868223])
                    ref moreRef2[1869622]:_ref(int(64))[936591] "temp"
                    (1869624 'move' moreRef2[1869622](1869626 '.' _iterator[1868230] more[1108278]))
                    const-val moreVal2[1869629]:int(64)[13] "const" "temp"
                    (1869631 '=' moreVal2[1869629] moreRef2[1869622])
                    const-val moreValNeg2[1869634]:int(64)[13] "const" "temp"
                    (1869636 'move' moreValNeg2[1869634](1869638 'u-' moreVal2[1869629]))
                    (1869640 '=' moreRef2[1869622] moreValNeg2[1869634])
                    (1869644 call advance[1108301] _iterator[1868230])
                    (1869647 call chpl__autoDestroy[1435583] call_tmp[1868354])
                    (1869650 call _freeIterator[1108743] _iterator[1868175])
                    (1869653 call chpl__autoDestroy[1515237] _iterator[1868175])
                    (1869656 call chpl__autoDestroy[1508195] call_tmp[1868177])
                    (1869659 call chpl__autoDestroy[1435320] localThis[1868156])
                    break _breakLabel[36297] _breakLabel[36297]
                  }
                  label _continueLabel[1869595]
                }
                (1868452 call chpl__autoDestroy[1435583] call_tmp[1868354])
                {
                  (1868456 call zip3[1096775] _iterator[1868223])
                }
                {
                  (1868460 call zip3[1108328] _iterator[1868230])
                }
                {
                  {
                    (1868253 call init[1096811] _iterator[1868223])
                  }
                  {
                    (1868257 call init[1108364] _iterator[1868230])
                  }
                }
                {
                  (1868261 call hasMore[1096793] _iterator[1868223])
                }
                {
                  {
                    (1868266 call incr[1096820] _iterator[1868223])
                  }
                  {
                    (1868270 call incr[1108373] _iterator[1868230])
                  }
                }
              }
              {
                const-val retTmp[1868463]:int(64)[13] "temp"
                (1868465 'move' retTmp[1868463](1868468 call hasMore[1108346] _iterator[1868230]))
                (1868470 'move' hasMore[1868247](1868472 'cast' bool[10] retTmp[1868463]))
              }
              if hasMore[1868247]
              {
                (1868477 'chpl_error' c"zippered iterations have non-equal lengths")
              }
              {
                (1868482 call zip4[1108337] _iterator[1868230])
              }
              {
                (1868486 call zip4[1096784] _iterator[1868223])
              }
              (1868489 call _freeIterator[1108743] _iterator[1868175])
              (1868492 call chpl__autoDestroy[1515237] _iterator[1868175])
              (1868495 call chpl__autoDestroy[1508195] call_tmp[1868177])
            }
            {
              const-val call_tmp[1868498]:int(64)[13] "dead at end of block" "maybe param" "temp"
              ref start[1870335]:_ref(byteIndex)[948778] "temp"
              (1870340 'move' start[1870335](1870337 '.v' _iterator[36292] F1_start[1963574]))
              (1868500 'move' call_tmp[1868498](1868503 call _cast[39465] start[1870335]))
              val i[1868505]:int(64)[13] "dead at end of block" "insert auto destroy"
              (1868507 'move' i[1868505] call_tmp[1868498])
              const-val call_tmp[1868510]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1868512 'move' call_tmp[1868510](1868515 call >[437710] call_tmp[1868498] 0))
              const-val call_tmp[1868518]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1868520 'move' call_tmp[1868518] call_tmp[1868510])
              if call_tmp[1868510]
              {
                val tmp[1868525]:bool[10] "dead after last mention" "temp"
                const-val tmp[1868527]:bool[10] "dead after last mention" "maybe param" "temp"
                ref call_tmp[1868529]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
                (1868531 'move' call_tmp[1868529](1868534 call buffLen[757905] localThis[1868156]))
                const-val coerce_tmp[1868536]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1868538 'move' coerce_tmp[1868536](1868540 'deref' call_tmp[1868529]))
                (1868542 'move' tmp[1868527](1868545 call <[437490] i[1868505] coerce_tmp[1868536]))
                val tmp[1868548]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val tmp[1868550]:bool[10] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[1868552]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1868554 'move' call_tmp[1868552] tmp[1868527])
                (1868557 'move' tmp[1868550] tmp[1868527])
                if tmp[1868527]
                {
                  const-val tmp[1868562]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  ref call_tmp[1868564]:_ref(uint(8))[936927] "dead after last mention" "maybe param" "temp"
                  ref _this_tmp_[1868566]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "temp"
                  (1868568 'move' _this_tmp_[1868566](1868571 call buff[757983] localThis[1868156]))
                  val coerce_tmp[1868573]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1868575 'move' coerce_tmp[1868573](1868577 'deref' _this_tmp_[1868566]))
                  (1868579 'move' call_tmp[1868564](1868582 call this[954110] coerce_tmp[1868573] i[1868505]))
                  const-val call_tmp[1868585]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[1868587]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1868589 'move' coerce_tmp[1868587](1868591 'deref' call_tmp[1868564]))
                  (1868593 'move' call_tmp[1868585](1868596 call isInitialByte[181574] coerce_tmp[1868587]))
                  const-val call_tmp[1868598]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1868600 'move' call_tmp[1868598](1868603 call ![7494] call_tmp[1868585]))
                  (1868605 'move' tmp[1868562] call_tmp[1868598])
                  (1868608 'move' tmp[1868548] call_tmp[1868598])
                }
                {
                  (1868612 'move' tmp[1868548] 0)
                }
                (1868616 'move' tmp[1868525] tmp[1868548])
                WhileDo[1868619]
                {
                  (1868622 call +=[451353] i[1868505] 1)
                  const-val tmp[1868625]:bool[10] "dead after last mention" "maybe param" "temp"
                  ref call_tmp[1868627]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
                  (1868629 'move' call_tmp[1868627](1868632 call buffLen[757905] localThis[1868156]))
                  const-val coerce_tmp[1868634]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1868636 'move' coerce_tmp[1868634](1868638 'deref' call_tmp[1868627]))
                  (1868640 'move' tmp[1868625](1868643 call <[437490] i[1868505] coerce_tmp[1868634]))
                  val tmp[1868646]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                  const-val tmp[1868648]:bool[10] "dead after last mention" "maybe param" "temp"
                  const-val call_tmp[1868650]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1868652 'move' call_tmp[1868650] tmp[1868625])
                  (1868655 'move' tmp[1868648] tmp[1868625])
                  if tmp[1868625]
                  {
                    const-val tmp[1868660]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                    ref call_tmp[1868662]:_ref(uint(8))[936927] "dead after last mention" "maybe param" "temp"
                    ref _this_tmp_[1868664]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "temp"
                    (1868666 'move' _this_tmp_[1868664](1868669 call buff[757983] localThis[1868156]))
                    val coerce_tmp[1868671]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1868673 'move' coerce_tmp[1868671](1868675 'deref' _this_tmp_[1868664]))
                    (1868677 'move' call_tmp[1868662](1868680 call this[954110] coerce_tmp[1868671] i[1868505]))
                    const-val call_tmp[1868683]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[1868685]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1868687 'move' coerce_tmp[1868685](1868689 'deref' call_tmp[1868662]))
                    (1868691 'move' call_tmp[1868683](1868694 call isInitialByte[181574] coerce_tmp[1868685]))
                    const-val call_tmp[1868696]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1868698 'move' call_tmp[1868696](1868701 call ![7494] call_tmp[1868683]))
                    (1868703 'move' tmp[1868660] call_tmp[1868696])
                    (1868706 'move' tmp[1868646] call_tmp[1868696])
                  }
                  {
                    (1868710 'move' tmp[1868646] 0)
                  }
                  (1868714 'move' tmp[1868525] tmp[1868646])
                  tmp[1868525]
                }
              }
              val tmp[1868718]:bool[10] "dead after last mention" "temp"
              ref call_tmp[1868720]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
              (1868722 'move' call_tmp[1868720](1868725 call buffLen[757905] localThis[1868156]))
              const-val call_tmp[1868727]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1868729]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1868731 'move' coerce_tmp[1868729](1868733 'deref' call_tmp[1868720]))
              (1868735 'move' call_tmp[1868727](1868738 call <[437490] i[1868505] coerce_tmp[1868729]))
              (1868741 'move' tmp[1868718] call_tmp[1868727])
              WhileDo[1868744]
              {
                ref call_tmp[1868746]:_ref(c_ptr(uint(8)))[937451] "dead at end of block" "maybe param" "temp"
                (1868748 'move' call_tmp[1868746](1868751 call buff[757983] localThis[1868156]))
                ref call_tmp[1868753]:_ref(int(64))[936591] "dead at end of block" "maybe param" "temp"
                (1868755 'move' call_tmp[1868753](1868758 call buffLen[757905] localThis[1868156]))
                const-val call_tmp[1868760]:(syserr,int(32),int(32))[964639] "dead at end of block" "maybe param" "temp"
                val coerce_tmp[1868762]:c_ptr(uint(8))[937442] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1868764 'move' coerce_tmp[1868762](1868766 'deref' call_tmp[1868746]))
                const-val coerce_tmp[1868768]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1868770 'move' coerce_tmp[1868768](1868772 'deref' call_tmp[1868753]))
                const-val ret_tmp[1868774]:(syserr,int(32),int(32))[964639] "temp"
                (1868777 call decodeHelp[174452] coerce_tmp[1868762] coerce_tmp[1868768] i[1868505] 1 ret_tmp[1868774])
                (1868783 'move' call_tmp[1868760] ret_tmp[1868774])
                const-val tmp[1868786]:(syserr,int(32),int(32))[964639] "dead at end of block" "const" "insert auto destroy" "temp"
                (1868788 'move' tmp[1868786] call_tmp[1868760])
                1
                ref call_tmp[1868792]:_ref(syserr)[948851] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1868794 'move' call_tmp[1868792](1868796 '.' tmp[1868786] x0[964633]))
                const-val decodeRet[1868799]:syserr[223603] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1868801]:syserr[223603] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1868803 'move' coerce_tmp[1868801](1868805 'deref' call_tmp[1868792]))
                (1868807 'move' decodeRet[1868799] coerce_tmp[1868801])
                ref call_tmp[1868812]:_ref(int(32))[936645] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1868814 'move' call_tmp[1868812](1868816 '.' tmp[1868786] x1[964635]))
                const-val cp[1868819]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1868821]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1868823 'move' coerce_tmp[1868821](1868825 'deref' call_tmp[1868812]))
                (1868827 'move' cp[1868819] coerce_tmp[1868821])
                ref call_tmp[1868832]:_ref(int(32))[936645] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1868834 'move' call_tmp[1868832](1868836 '.' tmp[1868786] x2[964637]))
                const-val nBytes[1868839]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1868841]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1868843 'move' coerce_tmp[1868841](1868845 'deref' call_tmp[1868832]))
                (1868847 'move' nBytes[1868839] coerce_tmp[1868841])
                const-val yret[1868852]:(int(32),byteIndex,int(64))[1122161] "dead after last mention" "YVV" "temp"
                val call_tmp[1868854]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val call_tmp[1868856]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                (1868858 'move' call_tmp[1868856] cp[1868819])
                const-val call_tmp[1868861]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1868863]:byteIndex[28173] "temp"
                (1868866 call _cast[39486] i[1868505] ret_tmp[1868863])
                (1868869 'move' call_tmp[1868861] ret_tmp[1868863])
                const-val call_tmp[1868872]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                (1868874 'move' call_tmp[1868872](1868876 'cast' int(64)[13] nBytes[1868839]))
                const-val call_tmp[1868879]:(int(32),byteIndex,int(64))[1122161] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1868881]:(int(32),byteIndex,int(64))[1122161] "temp"
                (1868884 call _build_tuple[1122111] cp[1868819] call_tmp[1868861] call_tmp[1868872] ret_tmp[1868881])
                (1868889 'move' call_tmp[1868879] ret_tmp[1868881])
                (1868892 'move' yret[1868852] call_tmp[1868879])
                const-val _yieldedIndex[1869664]:(int(32),byteIndex,int(64))[1122161] "temp"
                (1870312 'move' _yieldedIndex[1869664] call_tmp[1868879])
                {
                  1
                  const-val thisChar[1869667]:int(32)[95] "const" "index var" "insert auto destroy"
                  (1869669 'move' thisChar[1869667](1869671 '.v' _yieldedIndex[1869664] x0[1122155]))
                  ref i[1869674]:_ref(byteIndex)[948778] "index var" "insert auto destroy"
                  (1869676 'move' i[1869674](1869678 '.v' _yieldedIndex[1869664] x1[1122157]))
                  const-val nBytes[1869681]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1869683 'move' nBytes[1869681](1869685 '.v' _yieldedIndex[1869664] x2[1122159]))
                  {
                    {
                      val _indexOfInterest[1869690]:int(32)[95] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      val _iterator[1869692]:_ic_codepoints__ref_string[1122868] "dead at end of block" "expr temp" "temp"
                      const-val call_tmp[1869694]:_ir_codepoints__ref_string[1122874] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val ret_tmp[1869696]:_ir_codepoints__ref_string[1122874] "temp"
                      (1869699 call codepoints[33666] localChars[36190] ret_tmp[1869696])
                      (1869702 'move' call_tmp[1869694] ret_tmp[1869696])
                      (1869705 'move' _iterator[1869692](1869708 call _getIterator[1122883] call_tmp[1869694]))
                      {
                        val ret[1869711]:_ir_codepoints__ref_string[1122874] "dead at end of block" "RVV" "temp"
                        const-val call_tmp[1869713]:string[26] "dead at end of block" "maybe param" "temp"
                        const-val ret_tmp[1869715]:string[26] "temp"
                        ref this[1869717]:_ref(string)[937958] "temp"
                        (1869719 'move' this[1869717](1869721 '.v' _iterator[1869692] F0_this[1967096]))
                        (1869725 call localize[32889] this[1869717] ret_tmp[1869715])
                        (1869728 'move' call_tmp[1869713] ret_tmp[1869715])
                        val localThis[1869731]:string[26] "dead at end of block" "insert auto destroy"
                        (1869733 'move' localThis[1869731] call_tmp[1869713])
                        const-val call_tmp[1869736]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        ref this[1869738]:_ref(string)[937958] "temp"
                        (1869740 'move' this[1869738](1869742 '.v' _iterator[1869692] F0_this[1967096]))
                        (1869745 'move' call_tmp[1869736](1869748 call isASCII[31049] this[1869738]))
                        const-val call_tmp[1869750]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1869752 'move' call_tmp[1869750] call_tmp[1869736])
                        if call_tmp[1869736]
                        {
                          val _indexOfInterest[1869757]:uint(8)[100] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                          val _iterator[1869759]:_ic_chpl_bytes__ref_string[1108275] "dead at end of block" "expr temp" "temp"
                          const-val call_tmp[1869761]:_ir_chpl_bytes__ref_string[1108281] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val ret_tmp[1869763]:_ir_chpl_bytes__ref_string[1108281] "temp"
                          ref this[1869765]:_ref(string)[937958] "temp"
                          (1869767 'move' this[1869765](1869769 '.v' _iterator[1869692] F0_this[1967096]))
                          (1869773 call chpl_bytes[33577] this[1869765] ret_tmp[1869763])
                          (1869776 'move' call_tmp[1869761] ret_tmp[1869763])
                          (1869779 'move' _iterator[1869759](1869782 call _getIterator[1108290] call_tmp[1869761]))
                          {
                            val ret[1869785]:_ir_chpl_bytes__ref_string[1108281] "dead at end of block" "RVV" "temp"
                            const-val call_tmp[1869787]:string[26] "dead at end of block" "maybe param" "temp"
                            const-val ret_tmp[1869789]:string[26] "temp"
                            ref this[1869791]:_ref(string)[937958] "temp"
                            (1869793 'move' this[1869791](1869795 '.v' _iterator[1869759] F0_this[1964922]))
                            (1869799 call localize[32889] this[1869791] ret_tmp[1869789])
                            (1869802 'move' call_tmp[1869787] ret_tmp[1869789])
                            val localThis[1869805]:string[26] "dead at end of block" "insert auto destroy"
                            (1869807 'move' localThis[1869805] call_tmp[1869787])
                            val _indexOfInterest[1869810]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                            val _iterator[1869812]:_ic_chpl_direct_counted_range_iter[1103809] "dead at end of block" "expr temp" "temp"
                            ref call_tmp[1869814]:_ref(int(64))[936591] "dead at end of block" "maybe param" "temp"
                            (1869816 'move' call_tmp[1869814](1869819 call buffLen[757905] localThis[1869805]))
                            const-val call_tmp[1869821]:_ir_chpl_direct_counted_range_iter[1103815] "dead at end of block" "expr temp" "maybe param" "temp"
                            const-val coerce_tmp[1869823]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1869825 'move' coerce_tmp[1869823](1869827 'deref' call_tmp[1869814]))
                            const-val ret_tmp[1869829]:_ir_chpl_direct_counted_range_iter[1103815] "temp"
                            (1869832 call chpl_direct_counted_range_iter[458034] 0 coerce_tmp[1869823] ret_tmp[1869829])
                            (1869836 'move' call_tmp[1869821] ret_tmp[1869829])
                            (1869839 'move' _iterator[1869812](1869842 call _getIterator[1103824] call_tmp[1869821]))
                            {
                              val ret[1869845]:_ir_chpl_direct_counted_range_iter[1103815] "dead after last mention" "RVV" "temp"
                              val _indexOfInterest[1869847]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                              val _iterator[1869849]:_ic_chpl_direct_counted_range_iter_helper[1103559] "dead at end of block" "expr temp" "temp"
                              const-val call_tmp[1869851]:_ir_chpl_direct_counted_range_iter_helper[1103565] "dead at end of block" "expr temp" "maybe param" "temp"
                              const-val ret_tmp[1869853]:_ir_chpl_direct_counted_range_iter_helper[1103565] "temp"
                              const-val low[1869855]:int(64)[13] "temp"
                              (1869857 'move' low[1869855](1869859 '.v' _iterator[1869812] F0_low[1976900]))
                              const-val count[1869862]:int(64)[13] "temp"
                              (1869864 'move' count[1869862](1869866 '.v' _iterator[1869812] F1_count[1976904]))
                              (1869870 call chpl_direct_counted_range_iter_helper[1102117] low[1869855] count[1869862] ret_tmp[1869853])
                              (1869874 'move' call_tmp[1869851] ret_tmp[1869853])
                              (1869877 'move' _iterator[1869849](1869880 call _getIterator[1103574] call_tmp[1869851]))
                              {
                                val ret[1928570]:_ir_chpl_direct_counted_range_iter_helper[1103565] "dead after last mention" "RVV" "temp"
                                val call_tmp[1928572]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                const-val tmp[1928574]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val tmp[1928576]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                                const-val call_tmp[1928578]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                const-val count[1929066]:int(64)[13] "temp"
                                (1929071 'move' count[1929066](1929068 '.v' _iterator[1869849] F1_count[1981376]))
                                (1928580 'move' call_tmp[1928578](1928583 call <[948417] count[1929066]))
                                (1928585 'move' tmp[1928576] call_tmp[1928578])
                                (1928588 'move' tmp[1928574] call_tmp[1928578])
                                const-val call_tmp[1928591]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1928593 'move' call_tmp[1928591] call_tmp[1928578])
                                if call_tmp[1928578]
                                {
                                  (1928599 call boundsCheckHalt[210185] "With a negative count, the range must have a last index.")
                                }
                                const-val tmp[1928602]:2*int(64)[1040075] "dead at end of block" "const" "insert auto destroy" "temp"
                                val tmp[1928604]:2*int(64)[1040075] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                                const-val tmp[1928606]:bool[10] "dead after last mention" "maybe param" "temp"
                                const-val call_tmp[1928608]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                const-val count[1929073]:int(64)[13] "temp"
                                (1929078 'move' count[1929073](1929075 '.v' _iterator[1869849] F1_count[1981376]))
                                (1928610 'move' call_tmp[1928608](1928613 call ==[435666] count[1929073] 0))
                                (1928616 'move' tmp[1928606] call_tmp[1928608])
                                if call_tmp[1928608]
                                {
                                  const-val tmp[1928621]:2*int(64)[1040075] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                                  val call_tmp[1928623]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                                  const-val call_tmp[1928625]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val low[1929080]:int(64)[13] "temp"
                                  (1929085 'move' low[1929080](1929082 '.v' _iterator[1869849] F0_low[1981372]))
                                  (1928627 'move' call_tmp[1928625](1928630 call _cast[956053] low[1929080]))
                                  const-val call_tmp[1928632]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val coerce_tmp[1928634]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                                  (1928636 'move' coerce_tmp[1928634](1928638 'cast' uint(64)[115] 1))
                                  (1928641 'move' call_tmp[1928632](1928644 call -[962212] call_tmp[1928625]))
                                  const-val call_tmp[1928646]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  (1928648 'move' call_tmp[1928646](1928651 call _cast[953562] call_tmp[1928632]))
                                  const-val ret_tmp[1928653]:2*int(64)[1040075] "temp"
                                  const-val low[1929087]:int(64)[13] "temp"
                                  (1929092 'move' low[1929087](1929089 '.v' _iterator[1869849] F0_low[1981372]))
                                  (1928656 call _build_tuple[1040033] low[1929087] call_tmp[1928646] ret_tmp[1928653])
                                  (1928660 'move' tmp[1928621] ret_tmp[1928653])
                                  (1928663 'move' tmp[1928604] tmp[1928621])
                                }
                                {
                                  const-val tmp[1928667]:2*int(64)[1040075] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                                  val call_tmp[1928669]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  const-val call_tmp[1928671]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val count[1929094]:int(64)[13] "temp"
                                  (1929099 'move' count[1929094](1929096 '.v' _iterator[1869849] F1_count[1981376]))
                                  (1928673 'move' call_tmp[1928671] count[1929094])
                                  const-val call_tmp[1928676]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val count[1929101]:int(64)[13] "temp"
                                  (1929106 'move' count[1929101](1929103 '.v' _iterator[1869849] F1_count[1981376]))
                                  (1928678 'move' call_tmp[1928676](1928681 call -[962245] count[1929101]))
                                  const-val call_tmp[1928683]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val low[1929108]:int(64)[13] "temp"
                                  (1929113 'move' low[1929108](1929110 '.v' _iterator[1869849] F0_low[1981372]))
                                  (1928685 'move' call_tmp[1928683](1928688 call +[439674] low[1929108] call_tmp[1928676]))
                                  const-val ret_tmp[1928691]:2*int(64)[1040075] "temp"
                                  const-val low[1929115]:int(64)[13] "temp"
                                  (1929120 'move' low[1929115](1929117 '.v' _iterator[1869849] F0_low[1981372]))
                                  (1928694 call _build_tuple[1040033] low[1929115] call_tmp[1928683] ret_tmp[1928691])
                                  (1928698 'move' tmp[1928667] ret_tmp[1928691])
                                  (1928701 'move' tmp[1928604] tmp[1928667])
                                }
                                (1928705 '=' tmp[1928602] tmp[1928604])
                                (1928708 'noop')
                                1
                                ref call_tmp[1928710]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
                                (1928712 'move' call_tmp[1928710](1928714 '.' tmp[1928602] x0[1040071]))
                                const-val start[1928717]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                const-val coerce_tmp[1928719]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                (1928721 'move' coerce_tmp[1928719](1928723 'deref' call_tmp[1928710]))
                                (1928725 '=' start[1928717] coerce_tmp[1928719])
                                (1928728 'noop')
                                ref call_tmp[1928729]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
                                (1928731 'move' call_tmp[1928729](1928733 '.' tmp[1928602] x1[1040073]))
                                const-val end[1928736]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                const-val coerce_tmp[1928738]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                (1928740 'move' coerce_tmp[1928738](1928742 'deref' call_tmp[1928729]))
                                (1928744 '=' end[1928736] coerce_tmp[1928738])
                                (1928747 'noop')
                                val _indexOfInterest[1928748]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                                val _iterator[1928750]:_ic_chpl_direct_param_stride_range_iter[1103305] "dead at end of block" "expr temp" "temp"
                                const-val call_tmp[1928752]:_ir_chpl_direct_param_stride_range_iter[1103311] "dead at end of block" "expr temp" "maybe param" "temp"
                                const-val ret_tmp[1928754]:_ir_chpl_direct_param_stride_range_iter[1103311] "temp"
                                (1928757 call chpl_direct_param_stride_range_iter[1102543] coerce_tmp[1928719] coerce_tmp[1928738] ret_tmp[1928754])
                                (1928761 'move' call_tmp[1928752] ret_tmp[1928754])
                                (1928764 'move' _iterator[1928750](1928767 call _getIterator[1103320] call_tmp[1928752]))
                                {
                                  val ret[1928770]:_ir_chpl_direct_param_stride_range_iter[1103311] "dead after last mention" "RVV" "temp"
                                  val call_tmp[1928772]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  (1928775 call chpl_range_check_stride[1102863])
                                  val i[1928776]:int(64)[13] "dead at end of block" "insert auto destroy"
                                  val call_tmp[1928778]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  (1928780 'move' i[1928776] 0)
                                  val call_tmp[1928783]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  const-val default_arg_first[1928785]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                                  const-val low[1928787]:int(64)[13] "temp"
                                  (1928789 'move' low[1928787](1928791 '.v' _iterator[1928750] F0_low[1982870]))
                                  (1928794 'move' default_arg_first[1928785](1928797 call chpl_checkIfRangeIterWillOverflow_default_first[1103217] low[1928787]))
                                  const-val default_arg_last[1928799]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                                  const-val high[1928801]:int(64)[13] "temp"
                                  (1928803 'move' high[1928801](1928805 '.v' _iterator[1928750] F1_high[1982874]))
                                  (1928808 'move' default_arg_last[1928799](1928811 call chpl_checkIfRangeIterWillOverflow_default_last[1103245] high[1928801]))
                                  const-val _return_tmp_[1928813]:bool[10] "dead after last mention" "temp"
                                  const-val low[1928815]:int(64)[13] "temp"
                                  (1928817 'move' low[1928815](1928819 '.v' _iterator[1928750] F0_low[1982870]))
                                  const-val high[1928822]:int(64)[13] "temp"
                                  (1928824 'move' high[1928822](1928826 '.v' _iterator[1928750] F1_high[1982874]))
                                  (1928829 'move' _return_tmp_[1928813](1928832 call chpl_checkIfRangeIterWillOverflow[1096095] low[1928815] high[1928822] 1 default_arg_first[1928785] default_arg_last[1928799] 1))
                                  CForLoop[1928839]
                                  {
                                    const-val yret[1928868]:int(64)[13] "dead after last mention" "YVV" "temp"
                                    (1928870 'move' yret[1928868] i[1928776])
                                    const-val _yieldedIndex[1928873]:int(64)[13] "temp"
                                    (1928875 'move' _yieldedIndex[1928873] i[1928776])
                                    {
                                      const-val i[1928879]:int(64)[13] "const" "index var" "insert auto destroy"
                                      (1928881 'move' i[1928879] _yieldedIndex[1928873])
                                      const-val yret[1928884]:int(64)[13] "dead after last mention" "YVV" "temp"
                                      (1928886 'move' yret[1928884] _yieldedIndex[1928873])
                                      const-val _yieldedIndex[1928914]:int(64)[13] "temp"
                                      (1929064 'move' _yieldedIndex[1928914] _yieldedIndex[1928873])
                                      {
                                        const-val i[1928916]:int(64)[13] "const" "index var" "insert auto destroy"
                                        (1928918 'move' i[1928916] _yieldedIndex[1928914])
                                        const-val yret[1928921]:int(64)[13] "dead after last mention" "YVV" "temp"
                                        (1928923 'move' yret[1928921] _yieldedIndex[1928914])
                                        const-val _yieldedIndex[1928926]:int(64)[13] "temp"
                                        (1928928 'move' _yieldedIndex[1928926] _yieldedIndex[1928914])
                                        {
                                          const-val i[1928932]:int(64)[13] "const" "index var" "insert auto destroy"
                                          (1928934 'move' i[1928932] _yieldedIndex[1928926])
                                          const-val yret[1928937]:uint(8)[100] "dead after last mention" "YVV" "temp"
                                          ref call_tmp[1928939]:_ref(uint(8))[936927] "dead after last mention" "maybe param" "temp"
                                          ref _this_tmp_[1928941]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "temp"
                                          (1928943 'move' _this_tmp_[1928941](1928946 call buff[757983] localThis[1869805]))
                                          val coerce_tmp[1928948]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                          (1928950 'move' coerce_tmp[1928948](1928952 'deref' _this_tmp_[1928941]))
                                          (1928954 'move' call_tmp[1928939](1928957 call this[954110] coerce_tmp[1928948] _yieldedIndex[1928926]))
                                          const-val coerce_tmp[1928960]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                          (1928962 'move' coerce_tmp[1928960](1928964 'deref' call_tmp[1928939]))
                                          (1928966 '=' yret[1928937] coerce_tmp[1928960])
                                          (1928969 'noop')
                                          const-val _yieldedIndex[1928970]:uint(8)[100] "temp"
                                          (1928972 'move' _yieldedIndex[1928970] coerce_tmp[1928960])
                                          {
                                            const-val b[1928976]:uint(8)[100] "const" "index var" "insert auto destroy"
                                            (1928978 'move' b[1928976] _yieldedIndex[1928970])
                                            val yret[1928981]:int(32)[95] "dead after last mention" "YVV" "temp"
                                            val call_tmp[1928983]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                            const-val _yieldedIndex[1928985]:int(32)[95] "temp"
                                            (1928987 'move' _yieldedIndex[1928985](1928989 'cast' int(32)[95] _yieldedIndex[1928970]))
                                            {
                                              const-val removeChar[1928993]:int(32)[95] "const" "index var" "insert auto destroy"
                                              (1928995 'move' removeChar[1928993] _yieldedIndex[1928985])
                                              {
                                                const-val call_tmp[1928999]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                                (1929001 'move' call_tmp[1928999](1929004 call ==[435644] thisChar[1869667] removeChar[1928993]))
                                                const-val call_tmp[1929007]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                                (1929009 'move' call_tmp[1929007] call_tmp[1928999])
                                                if call_tmp[1929007]
                                                {
                                                  const-val call_tmp[1929014]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                                  const-val ret_tmp[1929016]:byteIndex[28173] "temp"
                                                  (1929019 call +[28725] i[1869674] nBytes[1869681] ret_tmp[1929016])
                                                  (1929023 'move' call_tmp[1929014] ret_tmp[1929016])
                                                  (1929027 call =[38194] start[36196] call_tmp[1929014])
                                                  (1929031 call chpl__autoDestroy[1435583] call_tmp[1929014])
                                                  (1929058 call _freeIterator[1103493] _iterator[1928750])
                                                  (1929061 call chpl__autoDestroy[1508492] tmp[1928602])
                                                  (1929034 call _freeIterator[1103743] _iterator[1869849])
                                                  (1929037 call _freeIterator[1103993] _iterator[1869812])
                                                  (1929040 call chpl__autoDestroy[1435320] localThis[1869805])
                                                  (1929043 call _freeIterator[1109588] _iterator[1869759])
                                                  (1929046 call chpl__autoDestroy[1435320] localThis[1869731])
                                                  (1929049 call _freeIterator[1123155] _iterator[1869692])
                                                  continue _continueLabel[1870299] _continueLabel[1870299]
                                                }
                                              }
                                              label _continueLabel[1929054]
                                            }
                                          }
                                        }
                                      }
                                    }
                                    {
                                      const-val low[1928841]:int(64)[13] "temp"
                                      (1928843 'move' low[1928841](1928845 '.v' _iterator[1928750] F0_low[1982870]))
                                      (1928848 '=' i[1928776] low[1928841])
                                    }
                                    {
                                      const-val high[1928852]:int(64)[13] "temp"
                                      (1928854 'move' high[1928852](1928856 '.v' _iterator[1928750] F1_high[1982874]))
                                      (1928859 '<=' i[1928776] high[1928852])
                                    }
                                    {
                                      val call_tmp[1928863]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                      (1928865 '+=' i[1928776] 1)
                                    }
                                  }
                                  label _endchpl_direct_param_stride_range_iter[1928902]
                                }
                                (1928905 call _freeIterator[1103493] _iterator[1928750])
                                (1928908 call chpl__autoDestroy[1508492] tmp[1928602])
                                label _endchpl_direct_counted_range_iter_helper[1928910]
                              }
                              (1870026 call _freeIterator[1103743] _iterator[1869849])
                              label _endchpl_direct_counted_range_iter[1870028]
                            }
                            (1870031 call _freeIterator[1103993] _iterator[1869812])
                            (1870034 call chpl__autoDestroy[1435320] localThis[1869805])
                            label _endchpl_bytes[1870036]
                          }
                          (1870039 call _freeIterator[1109588] _iterator[1869759])
                        }
                        {
                          val i[1870042]:int(64)[13] "dead at end of block" "insert auto destroy"
                          (1870044 'move' i[1870042] 0)
                          val tmp[1870047]:bool[10] "dead after last mention" "temp"
                          ref call_tmp[1870049]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
                          (1870051 'move' call_tmp[1870049](1870054 call buffLen[757905] localThis[1869731]))
                          const-val call_tmp[1870056]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val coerce_tmp[1870058]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (1870060 'move' coerce_tmp[1870058](1870062 'deref' call_tmp[1870049]))
                          (1870064 'move' call_tmp[1870056](1870067 call <[437490] 0 coerce_tmp[1870058]))
                          (1870070 'move' tmp[1870047] call_tmp[1870056])
                          WhileDo[1870073]
                          {
                            ref call_tmp[1870075]:_ref(c_ptr(uint(8)))[937451] "dead at end of block" "maybe param" "temp"
                            (1870077 'move' call_tmp[1870075](1870080 call buff[757983] localThis[1869731]))
                            ref call_tmp[1870082]:_ref(int(64))[936591] "dead at end of block" "maybe param" "temp"
                            (1870084 'move' call_tmp[1870082](1870087 call buffLen[757905] localThis[1869731]))
                            const-val call_tmp[1870089]:(syserr,int(32),int(32))[964639] "dead at end of block" "maybe param" "temp"
                            val coerce_tmp[1870091]:c_ptr(uint(8))[937442] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1870093 'move' coerce_tmp[1870091](1870095 'deref' call_tmp[1870075]))
                            const-val coerce_tmp[1870097]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1870099 'move' coerce_tmp[1870097](1870101 'deref' call_tmp[1870082]))
                            const-val ret_tmp[1870103]:(syserr,int(32),int(32))[964639] "temp"
                            (1870106 call decodeHelp[174452] coerce_tmp[1870091] coerce_tmp[1870097] i[1870042] 1 ret_tmp[1870103])
                            (1870112 'move' call_tmp[1870089] ret_tmp[1870103])
                            const-val tmp[1870115]:(syserr,int(32),int(32))[964639] "dead at end of block" "const" "insert auto destroy" "temp"
                            (1870117 'move' tmp[1870115] call_tmp[1870089])
                            1
                            ref call_tmp[1870121]:_ref(syserr)[948851] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1870123 'move' call_tmp[1870121](1870125 '.' tmp[1870115] x0[964633]))
                            const-val decodeRet[1870128]:syserr[223603] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1870130]:syserr[223603] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1870132 'move' coerce_tmp[1870130](1870134 'deref' call_tmp[1870121]))
                            (1870136 'move' decodeRet[1870128] coerce_tmp[1870130])
                            ref call_tmp[1870141]:_ref(int(32))[936645] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1870143 'move' call_tmp[1870141](1870145 '.' tmp[1870115] x1[964635]))
                            const-val cp[1870148]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1870150]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1870152 'move' coerce_tmp[1870150](1870154 'deref' call_tmp[1870141]))
                            (1870156 'move' cp[1870148] coerce_tmp[1870150])
                            ref call_tmp[1870161]:_ref(int(32))[936645] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1870163 'move' call_tmp[1870161](1870165 '.' tmp[1870115] x2[964637]))
                            const-val nBytes[1870168]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1870170]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1870172 'move' coerce_tmp[1870170](1870174 'deref' call_tmp[1870161]))
                            (1870176 'move' nBytes[1870168] coerce_tmp[1870170])
                            const-val yret[1870181]:int(32)[95] "dead after last mention" "YVV" "temp"
                            val call_tmp[1870183]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                            (1870185 'move' yret[1870181] cp[1870148])
                            const-val _yieldedIndex[1870188]:int(32)[95] "temp"
                            (1870190 'move' _yieldedIndex[1870188] cp[1870148])
                            {
                              const-val removeChar[1870194]:int(32)[95] "const" "index var" "insert auto destroy"
                              (1870196 'move' removeChar[1870194] _yieldedIndex[1870188])
                              {
                                const-val call_tmp[1870200]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1870202 'move' call_tmp[1870200](1870205 call ==[435644] thisChar[1869667] removeChar[1870194]))
                                const-val call_tmp[1870208]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1870210 'move' call_tmp[1870208] call_tmp[1870200])
                                if call_tmp[1870208]
                                {
                                  const-val call_tmp[1870215]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                  const-val ret_tmp[1870217]:byteIndex[28173] "temp"
                                  (1870220 call +[28725] i[1869674] nBytes[1869681] ret_tmp[1870217])
                                  (1870224 'move' call_tmp[1870215] ret_tmp[1870217])
                                  (1870228 call =[38194] start[36196] call_tmp[1870215])
                                  (1870232 call chpl__autoDestroy[1435583] call_tmp[1870215])
                                  (1870235 call chpl__autoDestroy[1439223] tmp[1870115])
                                  (1870238 call chpl__autoDestroy[1435320] localThis[1869731])
                                  (1870241 call _freeIterator[1123155] _iterator[1869692])
                                  continue _continueLabel[1870299] _continueLabel[1870299]
                                }
                              }
                              label _continueLabel[1870246]
                            }
                            const-val coerce_tmp[1870248]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (1870250 'move' coerce_tmp[1870248](1870252 'cast' int(64)[13] nBytes[1870168]))
                            (1870256 call +=[451353] i[1870042] coerce_tmp[1870248])
                            (1870260 call chpl__autoDestroy[1439223] tmp[1870115])
                            ref call_tmp[1870262]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
                            (1870264 'move' call_tmp[1870262](1870267 call buffLen[757905] localThis[1869731]))
                            const-val call_tmp[1870269]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            const-val coerce_tmp[1870271]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (1870273 'move' coerce_tmp[1870271](1870275 'deref' call_tmp[1870262]))
                            (1870277 'move' call_tmp[1870269](1870280 call <[437490] i[1870042] coerce_tmp[1870271]))
                            (1870283 'move' tmp[1870047] call_tmp[1870269])
                            tmp[1870047]
                          }
                        }
                        (1870288 call chpl__autoDestroy[1435320] localThis[1869731])
                        label _endcodepoints[1870290]
                      }
                      label _breakLabel[1870292]
                      (1870295 call _freeIterator[1123155] _iterator[1869692])
                    }
                    (1870303 call chpl__autoDestroy[1435583] call_tmp[1868861])
                    (1870306 call chpl__autoDestroy[1439223] tmp[1868786])
                    (1870309 call chpl__autoDestroy[1435320] localThis[1868156])
                    break _breakLabel[36297] _breakLabel[36297]
                  }
                  label _continueLabel[1870299]
                }
                (1868912 call chpl__autoDestroy[1435583] call_tmp[1868861])
                const-val coerce_tmp[1868914]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1868916 'move' coerce_tmp[1868914](1868918 'cast' int(64)[13] nBytes[1868839]))
                (1868922 call +=[451353] i[1868505] coerce_tmp[1868914])
                (1868926 call chpl__autoDestroy[1439223] tmp[1868786])
                ref call_tmp[1868928]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
                (1868930 'move' call_tmp[1868928](1868933 call buffLen[757905] localThis[1868156]))
                const-val call_tmp[1868935]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[1868937]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1868939 'move' coerce_tmp[1868937](1868941 'deref' call_tmp[1868928]))
                (1868943 'move' call_tmp[1868935](1868946 call <[437490] i[1868505] coerce_tmp[1868937]))
                (1868949 'move' tmp[1868718] call_tmp[1868935])
                tmp[1868718]
              }
            }
            (1868954 call chpl__autoDestroy[1435320] localThis[1868156])
            label _end_cpIndexLen[1868956]
          }
          label _breakLabel[36297]
          (1815182 call _freeIterator[1122592] _iterator[36292])
          (1815184 call chpl__autoDestroy[1435583] default_arg_start[1122076])
        }
      }
      const-val call_tmp[601603]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (601606 'move' call_tmp[601603] trailing[36102])
      if call_tmp[601603]
      {
        (36356 call =[38168] end[36208] -1)
        {
          val _indexOfInterest[36439]:(int(32),byteIndex,int(64))[1122161] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[36440]:_ic__cpIndexLen__ref_string[1122404] "dead at end of block" "expr temp" "temp"
          const-val call_tmp[601615]:_ir__cpIndexLen__ref_string[1122410] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val ret_tmp[1802760]:_ir__cpIndexLen__ref_string[1122410] "temp"
          (36372 call _cpIndexLen[31109] localThis[36179] start[36196] ret_tmp[1802760])
          (1802763 'move' call_tmp[601615] ret_tmp[1802760])
          (36449 'move' _iterator[36440](36447 call _getIterator[1122419] call_tmp[601615]))
          {
            val ret[1870925]:_ir__cpIndexLen__ref_string[1122410] "dead after last mention" "RVV" "temp"
            const-val call_tmp[1870927]:string[26] "dead at end of block" "maybe param" "temp"
            const-val ret_tmp[1870929]:string[26] "temp"
            ref this[1873010]:_ref(string)[937958] "temp"
            (1873015 'move' this[1873010](1873012 '.v' _iterator[36440] F0_this[1963570]))
            (1870932 call localize[32889] this[1873010] ret_tmp[1870929])
            (1870935 'move' call_tmp[1870927] ret_tmp[1870929])
            val localThis[1870938]:string[26] "dead at end of block" "insert auto destroy"
            (1870940 'move' localThis[1870938] call_tmp[1870927])
            const-val call_tmp[1870943]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1870945 'move' call_tmp[1870943](1870948 call isASCII[31049] localThis[1870938]))
            const-val call_tmp[1870950]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1870952 'move' call_tmp[1870950] call_tmp[1870943])
            if call_tmp[1870943]
            {
              const-val _iterator[1870957]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108585] "dead at end of block" "expr temp" "insert auto destroy" "temp"
              const-val call_tmp[1870959]:range(int(64),bounded,false)[1026833] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
              const-val ret_tmp[1870961]:range(int(64),bounded,false)[1026833] "temp"
              ref this[1873017]:_ref(string)[937958] "temp"
              (1873022 'move' this[1873017](1873019 '.v' _iterator[36440] F0_this[1963570]))
              (1870964 call byteIndices[31068] this[1873017] ret_tmp[1870961])
              (1870967 'move' call_tmp[1870959] ret_tmp[1870961])
              val call_tmp[1870970]:_ic_these_range_int64_t_bounded_F[1096722] "dead at end of block" "expr temp" "maybe param" "temp"
              (1870972 'move' call_tmp[1870970](1870975 call _getIterator[1095339] call_tmp[1870959]))
              const-val call_tmp[1870977]:_ir_chpl_bytes__ref_string[1108281] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[1870979]:_ir_chpl_bytes__ref_string[1108281] "temp"
              ref this[1873024]:_ref(string)[937958] "temp"
              (1873029 'move' this[1873024](1873026 '.v' _iterator[36440] F0_this[1963570]))
              (1870982 call chpl_bytes[33577] this[1873024] ret_tmp[1870979])
              (1870985 'move' call_tmp[1870977] ret_tmp[1870979])
              val call_tmp[1870988]:_ic_chpl_bytes__ref_string[1108275] "dead at end of block" "expr temp" "maybe param" "temp"
              (1870990 'move' call_tmp[1870988](1870993 call _getIterator[1108290] call_tmp[1870977]))
              const-val ret_tmp[1870995]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108585] "temp"
              (1870998 call _build_tuple[1108543] call_tmp[1870970] call_tmp[1870988] ret_tmp[1870995])
              (1871002 'move' _iterator[1870957] ret_tmp[1870995])
              val _iterator[1871005]:_ic_these_range_int64_t_bounded_F[1096722] "temp"
              (1871007 'move' _iterator[1871005](1871009 '.v' _iterator[1870957] x0[1108581]))
              val _iterator[1871012]:_ic_chpl_bytes__ref_string[1108275] "temp"
              (1871014 'move' _iterator[1871012](1871016 '.v' _iterator[1870957] x1[1108583]))
              {
                (1871021 call zip1[1096757] _iterator[1871005])
              }
              {
                (1871025 call zip1[1108310] _iterator[1871012])
              }
              const-val isFinished[1871027]:bool[10] "temp"
              val hasMore[1871029]:bool[10] "temp"
              CForLoop[1871031]
              {
                val _indexOfInterest[1871054]:(int(64),uint(8))[1111059] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                {
                  (1871058 call zip2[1108319] _iterator[1871012])
                }
                {
                  const-val retTmp[1871061]:int(64)[13] "temp"
                  (1871063 'move' retTmp[1871061](1871066 call hasMore[1108346] _iterator[1871012]))
                  (1871068 'move' hasMore[1871029](1871070 'cast' bool[10] retTmp[1871061]))
                }
                (1871073 'move' isFinished[1871027](1871075 '!' hasMore[1871029]))
                if isFinished[1871027]
                {
                  (1871079 'chpl_error' c"zippered iterations have non-equal lengths")
                }
                {
                  (1871083 'move' _index[1871098](1871086 call getValue[1108355] _iterator[1871012]))
                }
                {
                  (1871090 call zip2[1096766] _iterator[1871005])
                }
                {
                  (1871093 'move' _index[1871104](1871096 call getValue[1096802] _iterator[1871005]))
                }
                val _index[1871098]:uint(8)[100] "temp"
                (1871100 '.=' _indexOfInterest[1871054] x1[1111057] _index[1871098])
                val _index[1871104]:int(64)[13] "temp"
                (1871106 '.=' _indexOfInterest[1871054] x0[1111055] _index[1871104])
                1
                const-val i[1871111]:int(64)[13] "const" "index var" "insert auto destroy"
                (1871113 'move' i[1871111](1871115 '.v' _indexOfInterest[1871054] x0[1111055]))
                const-val b[1871118]:uint(8)[100] "const" "index var" "insert auto destroy"
                (1871120 'move' b[1871118](1871122 '.v' _indexOfInterest[1871054] x1[1111057]))
                const-val yret[1871125]:(int(32),byteIndex,int(64))[1122161] "dead after last mention" "YVV" "temp"
                val call_tmp[1871127]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val call_tmp[1871129]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                (1871131 'move' call_tmp[1871129](1871133 'cast' int(32)[95] b[1871118]))
                const-val call_tmp[1871136]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1871138]:byteIndex[28173] "temp"
                (1871141 call _cast[39486] i[1871111] ret_tmp[1871138])
                (1871144 'move' call_tmp[1871136] ret_tmp[1871138])
                const-val call_tmp[1871147]:(int(32),byteIndex,int(64))[1122161] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1871149]:(int(32),byteIndex,int(64))[1122161] "temp"
                (1871152 call _build_tuple[1122111] call_tmp[1871129] call_tmp[1871136] 1 ret_tmp[1871149])
                (1871157 'move' call_tmp[1871147] ret_tmp[1871149])
                (1871160 'move' yret[1871125] call_tmp[1871147])
                const-val _yieldedIndex[1871742]:(int(32),byteIndex,int(64))[1122161] "temp"
                (1872374 'move' _yieldedIndex[1871742] call_tmp[1871147])
                {
                  1
                  const-val thisChar[1871745]:int(32)[95] "const" "index var" "insert auto destroy"
                  (1871747 'move' thisChar[1871745](1871749 '.v' _yieldedIndex[1871742] x0[1122155]))
                  ref i[1871752]:_ref(byteIndex)[948778] "index var" "insert auto destroy"
                  (1871754 'move' i[1871752](1871756 '.v' _yieldedIndex[1871742] x1[1122157]))
                  const-val nBytes[1871759]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1871761 'move' nBytes[1871759](1871763 '.v' _yieldedIndex[1871742] x2[1122159]))
                  {
                    {
                      val _indexOfInterest[1871768]:int(32)[95] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      val _iterator[1871770]:_ic_codepoints__ref_string[1122868] "dead at end of block" "expr temp" "temp"
                      const-val call_tmp[1871772]:_ir_codepoints__ref_string[1122874] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val ret_tmp[1871774]:_ir_codepoints__ref_string[1122874] "temp"
                      (1871777 call codepoints[33666] localChars[36190] ret_tmp[1871774])
                      (1871780 'move' call_tmp[1871772] ret_tmp[1871774])
                      (1871783 'move' _iterator[1871770](1871786 call _getIterator[1122883] call_tmp[1871772]))
                      {
                        val ret[1871789]:_ir_codepoints__ref_string[1122874] "dead at end of block" "RVV" "temp"
                        const-val call_tmp[1871791]:string[26] "dead at end of block" "maybe param" "temp"
                        const-val ret_tmp[1871793]:string[26] "temp"
                        ref this[1871795]:_ref(string)[937958] "temp"
                        (1871797 'move' this[1871795](1871799 '.v' _iterator[1871770] F0_this[1967096]))
                        (1871803 call localize[32889] this[1871795] ret_tmp[1871793])
                        (1871806 'move' call_tmp[1871791] ret_tmp[1871793])
                        val localThis[1871809]:string[26] "dead at end of block" "insert auto destroy"
                        (1871811 'move' localThis[1871809] call_tmp[1871791])
                        const-val call_tmp[1871814]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        ref this[1871816]:_ref(string)[937958] "temp"
                        (1871818 'move' this[1871816](1871820 '.v' _iterator[1871770] F0_this[1967096]))
                        (1871823 'move' call_tmp[1871814](1871826 call isASCII[31049] this[1871816]))
                        const-val call_tmp[1871828]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1871830 'move' call_tmp[1871828] call_tmp[1871814])
                        if call_tmp[1871814]
                        {
                          val _indexOfInterest[1871835]:uint(8)[100] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                          val _iterator[1871837]:_ic_chpl_bytes__ref_string[1108275] "dead at end of block" "expr temp" "temp"
                          const-val call_tmp[1871839]:_ir_chpl_bytes__ref_string[1108281] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val ret_tmp[1871841]:_ir_chpl_bytes__ref_string[1108281] "temp"
                          ref this[1871843]:_ref(string)[937958] "temp"
                          (1871845 'move' this[1871843](1871847 '.v' _iterator[1871770] F0_this[1967096]))
                          (1871851 call chpl_bytes[33577] this[1871843] ret_tmp[1871841])
                          (1871854 'move' call_tmp[1871839] ret_tmp[1871841])
                          (1871857 'move' _iterator[1871837](1871860 call _getIterator[1108290] call_tmp[1871839]))
                          {
                            val ret[1871863]:_ir_chpl_bytes__ref_string[1108281] "dead at end of block" "RVV" "temp"
                            const-val call_tmp[1871865]:string[26] "dead at end of block" "maybe param" "temp"
                            const-val ret_tmp[1871867]:string[26] "temp"
                            ref this[1871869]:_ref(string)[937958] "temp"
                            (1871871 'move' this[1871869](1871873 '.v' _iterator[1871837] F0_this[1964922]))
                            (1871877 call localize[32889] this[1871869] ret_tmp[1871867])
                            (1871880 'move' call_tmp[1871865] ret_tmp[1871867])
                            val localThis[1871883]:string[26] "dead at end of block" "insert auto destroy"
                            (1871885 'move' localThis[1871883] call_tmp[1871865])
                            val _indexOfInterest[1871888]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                            val _iterator[1871890]:_ic_chpl_direct_counted_range_iter[1103809] "dead at end of block" "expr temp" "temp"
                            ref call_tmp[1871892]:_ref(int(64))[936591] "dead at end of block" "maybe param" "temp"
                            (1871894 'move' call_tmp[1871892](1871897 call buffLen[757905] localThis[1871883]))
                            const-val call_tmp[1871899]:_ir_chpl_direct_counted_range_iter[1103815] "dead at end of block" "expr temp" "maybe param" "temp"
                            const-val coerce_tmp[1871901]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1871903 'move' coerce_tmp[1871901](1871905 'deref' call_tmp[1871892]))
                            const-val ret_tmp[1871907]:_ir_chpl_direct_counted_range_iter[1103815] "temp"
                            (1871910 call chpl_direct_counted_range_iter[458034] 0 coerce_tmp[1871901] ret_tmp[1871907])
                            (1871914 'move' call_tmp[1871899] ret_tmp[1871907])
                            (1871917 'move' _iterator[1871890](1871920 call _getIterator[1103824] call_tmp[1871899]))
                            {
                              val ret[1871923]:_ir_chpl_direct_counted_range_iter[1103815] "dead after last mention" "RVV" "temp"
                              val _indexOfInterest[1871925]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                              val _iterator[1871927]:_ic_chpl_direct_counted_range_iter_helper[1103559] "dead at end of block" "expr temp" "temp"
                              const-val call_tmp[1871929]:_ir_chpl_direct_counted_range_iter_helper[1103565] "dead at end of block" "expr temp" "maybe param" "temp"
                              const-val ret_tmp[1871931]:_ir_chpl_direct_counted_range_iter_helper[1103565] "temp"
                              const-val low[1871933]:int(64)[13] "temp"
                              (1871935 'move' low[1871933](1871937 '.v' _iterator[1871890] F0_low[1976900]))
                              const-val count[1871940]:int(64)[13] "temp"
                              (1871942 'move' count[1871940](1871944 '.v' _iterator[1871890] F1_count[1976904]))
                              (1871948 call chpl_direct_counted_range_iter_helper[1102117] low[1871933] count[1871940] ret_tmp[1871931])
                              (1871952 'move' call_tmp[1871929] ret_tmp[1871931])
                              (1871955 'move' _iterator[1871927](1871958 call _getIterator[1103574] call_tmp[1871929]))
                              {
                                val ret[1929123]:_ir_chpl_direct_counted_range_iter_helper[1103565] "dead after last mention" "RVV" "temp"
                                val call_tmp[1929125]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                const-val tmp[1929127]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val tmp[1929129]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                                const-val call_tmp[1929131]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                const-val count[1929600]:int(64)[13] "temp"
                                (1929605 'move' count[1929600](1929602 '.v' _iterator[1871927] F1_count[1981376]))
                                (1929133 'move' call_tmp[1929131](1929136 call <[948417] count[1929600]))
                                (1929138 'move' tmp[1929129] call_tmp[1929131])
                                (1929141 'move' tmp[1929127] call_tmp[1929131])
                                const-val call_tmp[1929144]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1929146 'move' call_tmp[1929144] call_tmp[1929131])
                                if call_tmp[1929131]
                                {
                                  (1929152 call boundsCheckHalt[210185] "With a negative count, the range must have a last index.")
                                }
                                const-val tmp[1929155]:2*int(64)[1040075] "dead at end of block" "const" "insert auto destroy" "temp"
                                val tmp[1929157]:2*int(64)[1040075] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                                const-val tmp[1929159]:bool[10] "dead after last mention" "maybe param" "temp"
                                const-val call_tmp[1929161]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                const-val count[1929607]:int(64)[13] "temp"
                                (1929612 'move' count[1929607](1929609 '.v' _iterator[1871927] F1_count[1981376]))
                                (1929163 'move' call_tmp[1929161](1929166 call ==[435666] count[1929607] 0))
                                (1929169 'move' tmp[1929159] call_tmp[1929161])
                                if call_tmp[1929161]
                                {
                                  const-val tmp[1929174]:2*int(64)[1040075] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                                  val call_tmp[1929176]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                                  const-val call_tmp[1929178]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val low[1929614]:int(64)[13] "temp"
                                  (1929619 'move' low[1929614](1929616 '.v' _iterator[1871927] F0_low[1981372]))
                                  (1929180 'move' call_tmp[1929178](1929183 call _cast[956053] low[1929614]))
                                  const-val call_tmp[1929185]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val coerce_tmp[1929187]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                                  (1929189 'move' coerce_tmp[1929187](1929191 'cast' uint(64)[115] 1))
                                  (1929194 'move' call_tmp[1929185](1929197 call -[962212] call_tmp[1929178]))
                                  const-val call_tmp[1929199]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  (1929201 'move' call_tmp[1929199](1929204 call _cast[953562] call_tmp[1929185]))
                                  const-val ret_tmp[1929206]:2*int(64)[1040075] "temp"
                                  const-val low[1929621]:int(64)[13] "temp"
                                  (1929626 'move' low[1929621](1929623 '.v' _iterator[1871927] F0_low[1981372]))
                                  (1929209 call _build_tuple[1040033] low[1929621] call_tmp[1929199] ret_tmp[1929206])
                                  (1929213 'move' tmp[1929174] ret_tmp[1929206])
                                  (1929216 'move' tmp[1929157] tmp[1929174])
                                }
                                {
                                  const-val tmp[1929220]:2*int(64)[1040075] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                                  val call_tmp[1929222]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  const-val call_tmp[1929224]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val count[1929628]:int(64)[13] "temp"
                                  (1929633 'move' count[1929628](1929630 '.v' _iterator[1871927] F1_count[1981376]))
                                  (1929226 'move' call_tmp[1929224] count[1929628])
                                  const-val call_tmp[1929229]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val count[1929635]:int(64)[13] "temp"
                                  (1929640 'move' count[1929635](1929637 '.v' _iterator[1871927] F1_count[1981376]))
                                  (1929231 'move' call_tmp[1929229](1929234 call -[962245] count[1929635]))
                                  const-val call_tmp[1929236]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val low[1929642]:int(64)[13] "temp"
                                  (1929647 'move' low[1929642](1929644 '.v' _iterator[1871927] F0_low[1981372]))
                                  (1929238 'move' call_tmp[1929236](1929241 call +[439674] low[1929642] call_tmp[1929229]))
                                  const-val ret_tmp[1929244]:2*int(64)[1040075] "temp"
                                  const-val low[1929649]:int(64)[13] "temp"
                                  (1929654 'move' low[1929649](1929651 '.v' _iterator[1871927] F0_low[1981372]))
                                  (1929247 call _build_tuple[1040033] low[1929649] call_tmp[1929236] ret_tmp[1929244])
                                  (1929251 'move' tmp[1929220] ret_tmp[1929244])
                                  (1929254 'move' tmp[1929157] tmp[1929220])
                                }
                                (1929258 '=' tmp[1929155] tmp[1929157])
                                (1929261 'noop')
                                1
                                ref call_tmp[1929263]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
                                (1929265 'move' call_tmp[1929263](1929267 '.' tmp[1929155] x0[1040071]))
                                const-val start[1929270]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                const-val coerce_tmp[1929272]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                (1929274 'move' coerce_tmp[1929272](1929276 'deref' call_tmp[1929263]))
                                (1929278 '=' start[1929270] coerce_tmp[1929272])
                                (1929281 'noop')
                                ref call_tmp[1929282]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
                                (1929284 'move' call_tmp[1929282](1929286 '.' tmp[1929155] x1[1040073]))
                                const-val end[1929289]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                const-val coerce_tmp[1929291]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                (1929293 'move' coerce_tmp[1929291](1929295 'deref' call_tmp[1929282]))
                                (1929297 '=' end[1929289] coerce_tmp[1929291])
                                (1929300 'noop')
                                val _indexOfInterest[1929301]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                                val _iterator[1929303]:_ic_chpl_direct_param_stride_range_iter[1103305] "dead at end of block" "expr temp" "temp"
                                const-val call_tmp[1929305]:_ir_chpl_direct_param_stride_range_iter[1103311] "dead at end of block" "expr temp" "maybe param" "temp"
                                const-val ret_tmp[1929307]:_ir_chpl_direct_param_stride_range_iter[1103311] "temp"
                                (1929310 call chpl_direct_param_stride_range_iter[1102543] coerce_tmp[1929272] coerce_tmp[1929291] ret_tmp[1929307])
                                (1929314 'move' call_tmp[1929305] ret_tmp[1929307])
                                (1929317 'move' _iterator[1929303](1929320 call _getIterator[1103320] call_tmp[1929305]))
                                {
                                  val ret[1929323]:_ir_chpl_direct_param_stride_range_iter[1103311] "dead after last mention" "RVV" "temp"
                                  val call_tmp[1929325]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  (1929328 call chpl_range_check_stride[1102863])
                                  val i[1929329]:int(64)[13] "dead at end of block" "insert auto destroy"
                                  val call_tmp[1929331]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  (1929333 'move' i[1929329] 0)
                                  val call_tmp[1929336]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  const-val default_arg_first[1929338]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                                  const-val low[1929340]:int(64)[13] "temp"
                                  (1929342 'move' low[1929340](1929344 '.v' _iterator[1929303] F0_low[1982870]))
                                  (1929347 'move' default_arg_first[1929338](1929350 call chpl_checkIfRangeIterWillOverflow_default_first[1103217] low[1929340]))
                                  const-val default_arg_last[1929352]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                                  const-val high[1929354]:int(64)[13] "temp"
                                  (1929356 'move' high[1929354](1929358 '.v' _iterator[1929303] F1_high[1982874]))
                                  (1929361 'move' default_arg_last[1929352](1929364 call chpl_checkIfRangeIterWillOverflow_default_last[1103245] high[1929354]))
                                  const-val _return_tmp_[1929366]:bool[10] "dead after last mention" "temp"
                                  const-val low[1929368]:int(64)[13] "temp"
                                  (1929370 'move' low[1929368](1929372 '.v' _iterator[1929303] F0_low[1982870]))
                                  const-val high[1929375]:int(64)[13] "temp"
                                  (1929377 'move' high[1929375](1929379 '.v' _iterator[1929303] F1_high[1982874]))
                                  (1929382 'move' _return_tmp_[1929366](1929385 call chpl_checkIfRangeIterWillOverflow[1096095] low[1929368] high[1929375] 1 default_arg_first[1929338] default_arg_last[1929352] 1))
                                  CForLoop[1929392]
                                  {
                                    const-val yret[1929421]:int(64)[13] "dead after last mention" "YVV" "temp"
                                    (1929423 'move' yret[1929421] i[1929329])
                                    const-val _yieldedIndex[1929426]:int(64)[13] "temp"
                                    (1929428 'move' _yieldedIndex[1929426] i[1929329])
                                    {
                                      const-val i[1929432]:int(64)[13] "const" "index var" "insert auto destroy"
                                      (1929434 'move' i[1929432] _yieldedIndex[1929426])
                                      const-val yret[1929437]:int(64)[13] "dead after last mention" "YVV" "temp"
                                      (1929439 'move' yret[1929437] _yieldedIndex[1929426])
                                      const-val _yieldedIndex[1929467]:int(64)[13] "temp"
                                      (1929598 'move' _yieldedIndex[1929467] _yieldedIndex[1929426])
                                      {
                                        const-val i[1929469]:int(64)[13] "const" "index var" "insert auto destroy"
                                        (1929471 'move' i[1929469] _yieldedIndex[1929467])
                                        const-val yret[1929474]:int(64)[13] "dead after last mention" "YVV" "temp"
                                        (1929476 'move' yret[1929474] _yieldedIndex[1929467])
                                        const-val _yieldedIndex[1929479]:int(64)[13] "temp"
                                        (1929481 'move' _yieldedIndex[1929479] _yieldedIndex[1929467])
                                        {
                                          const-val i[1929485]:int(64)[13] "const" "index var" "insert auto destroy"
                                          (1929487 'move' i[1929485] _yieldedIndex[1929479])
                                          const-val yret[1929490]:uint(8)[100] "dead after last mention" "YVV" "temp"
                                          ref call_tmp[1929492]:_ref(uint(8))[936927] "dead after last mention" "maybe param" "temp"
                                          ref _this_tmp_[1929494]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "temp"
                                          (1929496 'move' _this_tmp_[1929494](1929499 call buff[757983] localThis[1871883]))
                                          val coerce_tmp[1929501]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                          (1929503 'move' coerce_tmp[1929501](1929505 'deref' _this_tmp_[1929494]))
                                          (1929507 'move' call_tmp[1929492](1929510 call this[954110] coerce_tmp[1929501] _yieldedIndex[1929479]))
                                          const-val coerce_tmp[1929513]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                          (1929515 'move' coerce_tmp[1929513](1929517 'deref' call_tmp[1929492]))
                                          (1929519 '=' yret[1929490] coerce_tmp[1929513])
                                          (1929522 'noop')
                                          const-val _yieldedIndex[1929523]:uint(8)[100] "temp"
                                          (1929525 'move' _yieldedIndex[1929523] coerce_tmp[1929513])
                                          {
                                            const-val b[1929529]:uint(8)[100] "const" "index var" "insert auto destroy"
                                            (1929531 'move' b[1929529] _yieldedIndex[1929523])
                                            val yret[1929534]:int(32)[95] "dead after last mention" "YVV" "temp"
                                            val call_tmp[1929536]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                            const-val _yieldedIndex[1929538]:int(32)[95] "temp"
                                            (1929540 'move' _yieldedIndex[1929538](1929542 'cast' int(32)[95] _yieldedIndex[1929523]))
                                            {
                                              const-val removeChar[1929546]:int(32)[95] "const" "index var" "insert auto destroy"
                                              (1929548 'move' removeChar[1929546] _yieldedIndex[1929538])
                                              {
                                                const-val call_tmp[1929552]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                                (1929554 'move' call_tmp[1929552](1929557 call ==[435644] thisChar[1871745] removeChar[1929546]))
                                                const-val call_tmp[1929560]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                                (1929562 'move' call_tmp[1929560] call_tmp[1929552])
                                                if call_tmp[1929560]
                                                {
                                                  (1929592 call _freeIterator[1103493] _iterator[1929303])
                                                  (1929595 call chpl__autoDestroy[1508492] tmp[1929155])
                                                  (1929568 call _freeIterator[1103743] _iterator[1871927])
                                                  (1929571 call _freeIterator[1103993] _iterator[1871890])
                                                  (1929574 call chpl__autoDestroy[1435320] localThis[1871883])
                                                  (1929577 call _freeIterator[1109588] _iterator[1871837])
                                                  (1929580 call chpl__autoDestroy[1435320] localThis[1871809])
                                                  (1929583 call _freeIterator[1123155] _iterator[1871770])
                                                  continue _continueLabel[1872371] _continueLabel[1872371]
                                                }
                                              }
                                              label _continueLabel[1929588]
                                            }
                                          }
                                        }
                                      }
                                    }
                                    {
                                      const-val low[1929394]:int(64)[13] "temp"
                                      (1929396 'move' low[1929394](1929398 '.v' _iterator[1929303] F0_low[1982870]))
                                      (1929401 '=' i[1929329] low[1929394])
                                    }
                                    {
                                      const-val high[1929405]:int(64)[13] "temp"
                                      (1929407 'move' high[1929405](1929409 '.v' _iterator[1929303] F1_high[1982874]))
                                      (1929412 '<=' i[1929329] high[1929405])
                                    }
                                    {
                                      val call_tmp[1929416]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                      (1929418 '+=' i[1929329] 1)
                                    }
                                  }
                                  label _endchpl_direct_param_stride_range_iter[1929455]
                                }
                                (1929458 call _freeIterator[1103493] _iterator[1929303])
                                (1929461 call chpl__autoDestroy[1508492] tmp[1929155])
                                label _endchpl_direct_counted_range_iter_helper[1929463]
                              }
                              (1872085 call _freeIterator[1103743] _iterator[1871927])
                              label _endchpl_direct_counted_range_iter[1872087]
                            }
                            (1872090 call _freeIterator[1103993] _iterator[1871890])
                            (1872093 call chpl__autoDestroy[1435320] localThis[1871883])
                            label _endchpl_bytes[1872095]
                          }
                          (1872098 call _freeIterator[1109588] _iterator[1871837])
                        }
                        {
                          val i[1872101]:int(64)[13] "dead at end of block" "insert auto destroy"
                          (1872103 'move' i[1872101] 0)
                          val tmp[1872106]:bool[10] "dead after last mention" "temp"
                          ref call_tmp[1872108]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
                          (1872110 'move' call_tmp[1872108](1872113 call buffLen[757905] localThis[1871809]))
                          const-val call_tmp[1872115]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val coerce_tmp[1872117]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (1872119 'move' coerce_tmp[1872117](1872121 'deref' call_tmp[1872108]))
                          (1872123 'move' call_tmp[1872115](1872126 call <[437490] 0 coerce_tmp[1872117]))
                          (1872129 'move' tmp[1872106] call_tmp[1872115])
                          WhileDo[1872132]
                          {
                            ref call_tmp[1872134]:_ref(c_ptr(uint(8)))[937451] "dead at end of block" "maybe param" "temp"
                            (1872136 'move' call_tmp[1872134](1872139 call buff[757983] localThis[1871809]))
                            ref call_tmp[1872141]:_ref(int(64))[936591] "dead at end of block" "maybe param" "temp"
                            (1872143 'move' call_tmp[1872141](1872146 call buffLen[757905] localThis[1871809]))
                            const-val call_tmp[1872148]:(syserr,int(32),int(32))[964639] "dead at end of block" "maybe param" "temp"
                            val coerce_tmp[1872150]:c_ptr(uint(8))[937442] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1872152 'move' coerce_tmp[1872150](1872154 'deref' call_tmp[1872134]))
                            const-val coerce_tmp[1872156]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1872158 'move' coerce_tmp[1872156](1872160 'deref' call_tmp[1872141]))
                            const-val ret_tmp[1872162]:(syserr,int(32),int(32))[964639] "temp"
                            (1872165 call decodeHelp[174452] coerce_tmp[1872150] coerce_tmp[1872156] i[1872101] 1 ret_tmp[1872162])
                            (1872171 'move' call_tmp[1872148] ret_tmp[1872162])
                            const-val tmp[1872174]:(syserr,int(32),int(32))[964639] "dead at end of block" "const" "insert auto destroy" "temp"
                            (1872176 'move' tmp[1872174] call_tmp[1872148])
                            1
                            ref call_tmp[1872180]:_ref(syserr)[948851] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1872182 'move' call_tmp[1872180](1872184 '.' tmp[1872174] x0[964633]))
                            const-val decodeRet[1872187]:syserr[223603] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1872189]:syserr[223603] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1872191 'move' coerce_tmp[1872189](1872193 'deref' call_tmp[1872180]))
                            (1872195 'move' decodeRet[1872187] coerce_tmp[1872189])
                            ref call_tmp[1872200]:_ref(int(32))[936645] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1872202 'move' call_tmp[1872200](1872204 '.' tmp[1872174] x1[964635]))
                            const-val cp[1872207]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1872209]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1872211 'move' coerce_tmp[1872209](1872213 'deref' call_tmp[1872200]))
                            (1872215 'move' cp[1872207] coerce_tmp[1872209])
                            ref call_tmp[1872220]:_ref(int(32))[936645] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1872222 'move' call_tmp[1872220](1872224 '.' tmp[1872174] x2[964637]))
                            const-val nBytes[1872227]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1872229]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1872231 'move' coerce_tmp[1872229](1872233 'deref' call_tmp[1872220]))
                            (1872235 'move' nBytes[1872227] coerce_tmp[1872229])
                            const-val yret[1872240]:int(32)[95] "dead after last mention" "YVV" "temp"
                            val call_tmp[1872242]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                            (1872244 'move' yret[1872240] cp[1872207])
                            const-val _yieldedIndex[1872247]:int(32)[95] "temp"
                            (1872249 'move' _yieldedIndex[1872247] cp[1872207])
                            {
                              const-val removeChar[1872253]:int(32)[95] "const" "index var" "insert auto destroy"
                              (1872255 'move' removeChar[1872253] _yieldedIndex[1872247])
                              {
                                const-val call_tmp[1872259]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1872261 'move' call_tmp[1872259](1872264 call ==[435644] thisChar[1871745] removeChar[1872253]))
                                const-val call_tmp[1872267]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1872269 'move' call_tmp[1872267] call_tmp[1872259])
                                if call_tmp[1872267]
                                {
                                  (1872275 call chpl__autoDestroy[1439223] tmp[1872174])
                                  (1872278 call chpl__autoDestroy[1435320] localThis[1871809])
                                  (1872281 call _freeIterator[1123155] _iterator[1871770])
                                  continue _continueLabel[1872371] _continueLabel[1872371]
                                }
                              }
                              label _continueLabel[1872286]
                            }
                            const-val coerce_tmp[1872288]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (1872290 'move' coerce_tmp[1872288](1872292 'cast' int(64)[13] nBytes[1872227]))
                            (1872296 call +=[451353] i[1872101] coerce_tmp[1872288])
                            (1872300 call chpl__autoDestroy[1439223] tmp[1872174])
                            ref call_tmp[1872302]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
                            (1872304 'move' call_tmp[1872302](1872307 call buffLen[757905] localThis[1871809]))
                            const-val call_tmp[1872309]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            const-val coerce_tmp[1872311]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (1872313 'move' coerce_tmp[1872311](1872315 'deref' call_tmp[1872302]))
                            (1872317 'move' call_tmp[1872309](1872320 call <[437490] i[1872101] coerce_tmp[1872311]))
                            (1872323 'move' tmp[1872106] call_tmp[1872309])
                            tmp[1872106]
                          }
                        }
                        (1872328 call chpl__autoDestroy[1435320] localThis[1871809])
                        label _endcodepoints[1872330]
                      }
                      label _breakLabel[1872332]
                      (1872335 call _freeIterator[1123155] _iterator[1871770])
                    }
                    const-val call_tmp[1872337]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[1872339]:byteIndex[28173] "temp"
                    (1872342 call +[28725] i[1871752] nBytes[1871759] ret_tmp[1872339])
                    (1872346 'move' call_tmp[1872337] ret_tmp[1872339])
                    const-val call_tmp[1872349]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[1872351]:byteIndex[28173] "temp"
                    (1872354 call -[28857] call_tmp[1872337] 1 ret_tmp[1872351])
                    (1872358 'move' call_tmp[1872349] ret_tmp[1872351])
                    (1872362 call =[38194] end[36208] call_tmp[1872349])
                    (1872366 call chpl__autoDestroy[1435583] call_tmp[1872349])
                    (1872369 call chpl__autoDestroy[1435583] call_tmp[1872337])
                  }
                  label _continueLabel[1872371]
                }
                (1871234 call chpl__autoDestroy[1435583] call_tmp[1871136])
                {
                  (1871238 call zip3[1096775] _iterator[1871005])
                }
                {
                  (1871242 call zip3[1108328] _iterator[1871012])
                }
                {
                  {
                    (1871035 call init[1096811] _iterator[1871005])
                  }
                  {
                    (1871039 call init[1108364] _iterator[1871012])
                  }
                }
                {
                  (1871043 call hasMore[1096793] _iterator[1871005])
                }
                {
                  {
                    (1871048 call incr[1096820] _iterator[1871005])
                  }
                  {
                    (1871052 call incr[1108373] _iterator[1871012])
                  }
                }
              }
              {
                const-val retTmp[1871245]:int(64)[13] "temp"
                (1871247 'move' retTmp[1871245](1871250 call hasMore[1108346] _iterator[1871012]))
                (1871252 'move' hasMore[1871029](1871254 'cast' bool[10] retTmp[1871245]))
              }
              if hasMore[1871029]
              {
                (1871259 'chpl_error' c"zippered iterations have non-equal lengths")
              }
              {
                (1871264 call zip4[1108337] _iterator[1871012])
              }
              {
                (1871268 call zip4[1096784] _iterator[1871005])
              }
              (1871271 call _freeIterator[1108743] _iterator[1870957])
              (1871274 call chpl__autoDestroy[1515237] _iterator[1870957])
              (1871277 call chpl__autoDestroy[1508195] call_tmp[1870959])
            }
            {
              const-val call_tmp[1871280]:int(64)[13] "dead at end of block" "maybe param" "temp"
              ref start[1873031]:_ref(byteIndex)[948778] "temp"
              (1873036 'move' start[1873031](1873033 '.v' _iterator[36440] F1_start[1963574]))
              (1871282 'move' call_tmp[1871280](1871285 call _cast[39465] start[1873031]))
              val i[1871287]:int(64)[13] "dead at end of block" "insert auto destroy"
              (1871289 'move' i[1871287] call_tmp[1871280])
              const-val call_tmp[1871292]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1871294 'move' call_tmp[1871292](1871297 call >[437710] call_tmp[1871280] 0))
              const-val call_tmp[1871300]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1871302 'move' call_tmp[1871300] call_tmp[1871292])
              if call_tmp[1871292]
              {
                val tmp[1871307]:bool[10] "dead after last mention" "temp"
                const-val tmp[1871309]:bool[10] "dead after last mention" "maybe param" "temp"
                ref call_tmp[1871311]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
                (1871313 'move' call_tmp[1871311](1871316 call buffLen[757905] localThis[1870938]))
                const-val coerce_tmp[1871318]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1871320 'move' coerce_tmp[1871318](1871322 'deref' call_tmp[1871311]))
                (1871324 'move' tmp[1871309](1871327 call <[437490] i[1871287] coerce_tmp[1871318]))
                val tmp[1871330]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val tmp[1871332]:bool[10] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[1871334]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1871336 'move' call_tmp[1871334] tmp[1871309])
                (1871339 'move' tmp[1871332] tmp[1871309])
                if tmp[1871309]
                {
                  const-val tmp[1871344]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  ref call_tmp[1871346]:_ref(uint(8))[936927] "dead after last mention" "maybe param" "temp"
                  ref _this_tmp_[1871348]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "temp"
                  (1871350 'move' _this_tmp_[1871348](1871353 call buff[757983] localThis[1870938]))
                  val coerce_tmp[1871355]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1871357 'move' coerce_tmp[1871355](1871359 'deref' _this_tmp_[1871348]))
                  (1871361 'move' call_tmp[1871346](1871364 call this[954110] coerce_tmp[1871355] i[1871287]))
                  const-val call_tmp[1871367]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[1871369]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1871371 'move' coerce_tmp[1871369](1871373 'deref' call_tmp[1871346]))
                  (1871375 'move' call_tmp[1871367](1871378 call isInitialByte[181574] coerce_tmp[1871369]))
                  const-val call_tmp[1871380]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1871382 'move' call_tmp[1871380](1871385 call ![7494] call_tmp[1871367]))
                  (1871387 'move' tmp[1871344] call_tmp[1871380])
                  (1871390 'move' tmp[1871330] call_tmp[1871380])
                }
                {
                  (1871394 'move' tmp[1871330] 0)
                }
                (1871398 'move' tmp[1871307] tmp[1871330])
                WhileDo[1871401]
                {
                  (1871404 call +=[451353] i[1871287] 1)
                  const-val tmp[1871407]:bool[10] "dead after last mention" "maybe param" "temp"
                  ref call_tmp[1871409]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
                  (1871411 'move' call_tmp[1871409](1871414 call buffLen[757905] localThis[1870938]))
                  const-val coerce_tmp[1871416]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1871418 'move' coerce_tmp[1871416](1871420 'deref' call_tmp[1871409]))
                  (1871422 'move' tmp[1871407](1871425 call <[437490] i[1871287] coerce_tmp[1871416]))
                  val tmp[1871428]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                  const-val tmp[1871430]:bool[10] "dead after last mention" "maybe param" "temp"
                  const-val call_tmp[1871432]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1871434 'move' call_tmp[1871432] tmp[1871407])
                  (1871437 'move' tmp[1871430] tmp[1871407])
                  if tmp[1871407]
                  {
                    const-val tmp[1871442]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                    ref call_tmp[1871444]:_ref(uint(8))[936927] "dead after last mention" "maybe param" "temp"
                    ref _this_tmp_[1871446]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "temp"
                    (1871448 'move' _this_tmp_[1871446](1871451 call buff[757983] localThis[1870938]))
                    val coerce_tmp[1871453]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1871455 'move' coerce_tmp[1871453](1871457 'deref' _this_tmp_[1871446]))
                    (1871459 'move' call_tmp[1871444](1871462 call this[954110] coerce_tmp[1871453] i[1871287]))
                    const-val call_tmp[1871465]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[1871467]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1871469 'move' coerce_tmp[1871467](1871471 'deref' call_tmp[1871444]))
                    (1871473 'move' call_tmp[1871465](1871476 call isInitialByte[181574] coerce_tmp[1871467]))
                    const-val call_tmp[1871478]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1871480 'move' call_tmp[1871478](1871483 call ![7494] call_tmp[1871465]))
                    (1871485 'move' tmp[1871442] call_tmp[1871478])
                    (1871488 'move' tmp[1871428] call_tmp[1871478])
                  }
                  {
                    (1871492 'move' tmp[1871428] 0)
                  }
                  (1871496 'move' tmp[1871307] tmp[1871428])
                  tmp[1871307]
                }
              }
              val tmp[1871500]:bool[10] "dead after last mention" "temp"
              ref call_tmp[1871502]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
              (1871504 'move' call_tmp[1871502](1871507 call buffLen[757905] localThis[1870938]))
              const-val call_tmp[1871509]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1871511]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1871513 'move' coerce_tmp[1871511](1871515 'deref' call_tmp[1871502]))
              (1871517 'move' call_tmp[1871509](1871520 call <[437490] i[1871287] coerce_tmp[1871511]))
              (1871523 'move' tmp[1871500] call_tmp[1871509])
              WhileDo[1871526]
              {
                ref call_tmp[1871528]:_ref(c_ptr(uint(8)))[937451] "dead at end of block" "maybe param" "temp"
                (1871530 'move' call_tmp[1871528](1871533 call buff[757983] localThis[1870938]))
                ref call_tmp[1871535]:_ref(int(64))[936591] "dead at end of block" "maybe param" "temp"
                (1871537 'move' call_tmp[1871535](1871540 call buffLen[757905] localThis[1870938]))
                const-val call_tmp[1871542]:(syserr,int(32),int(32))[964639] "dead at end of block" "maybe param" "temp"
                val coerce_tmp[1871544]:c_ptr(uint(8))[937442] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1871546 'move' coerce_tmp[1871544](1871548 'deref' call_tmp[1871528]))
                const-val coerce_tmp[1871550]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1871552 'move' coerce_tmp[1871550](1871554 'deref' call_tmp[1871535]))
                const-val ret_tmp[1871556]:(syserr,int(32),int(32))[964639] "temp"
                (1871559 call decodeHelp[174452] coerce_tmp[1871544] coerce_tmp[1871550] i[1871287] 1 ret_tmp[1871556])
                (1871565 'move' call_tmp[1871542] ret_tmp[1871556])
                const-val tmp[1871568]:(syserr,int(32),int(32))[964639] "dead at end of block" "const" "insert auto destroy" "temp"
                (1871570 'move' tmp[1871568] call_tmp[1871542])
                1
                ref call_tmp[1871574]:_ref(syserr)[948851] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1871576 'move' call_tmp[1871574](1871578 '.' tmp[1871568] x0[964633]))
                const-val decodeRet[1871581]:syserr[223603] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1871583]:syserr[223603] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1871585 'move' coerce_tmp[1871583](1871587 'deref' call_tmp[1871574]))
                (1871589 'move' decodeRet[1871581] coerce_tmp[1871583])
                ref call_tmp[1871594]:_ref(int(32))[936645] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1871596 'move' call_tmp[1871594](1871598 '.' tmp[1871568] x1[964635]))
                const-val cp[1871601]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1871603]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1871605 'move' coerce_tmp[1871603](1871607 'deref' call_tmp[1871594]))
                (1871609 'move' cp[1871601] coerce_tmp[1871603])
                ref call_tmp[1871614]:_ref(int(32))[936645] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1871616 'move' call_tmp[1871614](1871618 '.' tmp[1871568] x2[964637]))
                const-val nBytes[1871621]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1871623]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1871625 'move' coerce_tmp[1871623](1871627 'deref' call_tmp[1871614]))
                (1871629 'move' nBytes[1871621] coerce_tmp[1871623])
                const-val yret[1871634]:(int(32),byteIndex,int(64))[1122161] "dead after last mention" "YVV" "temp"
                val call_tmp[1871636]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val call_tmp[1871638]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                (1871640 'move' call_tmp[1871638] cp[1871601])
                const-val call_tmp[1871643]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1871645]:byteIndex[28173] "temp"
                (1871648 call _cast[39486] i[1871287] ret_tmp[1871645])
                (1871651 'move' call_tmp[1871643] ret_tmp[1871645])
                const-val call_tmp[1871654]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                (1871656 'move' call_tmp[1871654](1871658 'cast' int(64)[13] nBytes[1871621]))
                const-val call_tmp[1871661]:(int(32),byteIndex,int(64))[1122161] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1871663]:(int(32),byteIndex,int(64))[1122161] "temp"
                (1871666 call _build_tuple[1122111] cp[1871601] call_tmp[1871643] call_tmp[1871654] ret_tmp[1871663])
                (1871671 'move' call_tmp[1871661] ret_tmp[1871663])
                (1871674 'move' yret[1871634] call_tmp[1871661])
                const-val _yieldedIndex[1872376]:(int(32),byteIndex,int(64))[1122161] "temp"
                (1873008 'move' _yieldedIndex[1872376] call_tmp[1871661])
                {
                  1
                  const-val thisChar[1872379]:int(32)[95] "const" "index var" "insert auto destroy"
                  (1872381 'move' thisChar[1872379](1872383 '.v' _yieldedIndex[1872376] x0[1122155]))
                  ref i[1872386]:_ref(byteIndex)[948778] "index var" "insert auto destroy"
                  (1872388 'move' i[1872386](1872390 '.v' _yieldedIndex[1872376] x1[1122157]))
                  const-val nBytes[1872393]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1872395 'move' nBytes[1872393](1872397 '.v' _yieldedIndex[1872376] x2[1122159]))
                  {
                    {
                      val _indexOfInterest[1872402]:int(32)[95] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      val _iterator[1872404]:_ic_codepoints__ref_string[1122868] "dead at end of block" "expr temp" "temp"
                      const-val call_tmp[1872406]:_ir_codepoints__ref_string[1122874] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val ret_tmp[1872408]:_ir_codepoints__ref_string[1122874] "temp"
                      (1872411 call codepoints[33666] localChars[36190] ret_tmp[1872408])
                      (1872414 'move' call_tmp[1872406] ret_tmp[1872408])
                      (1872417 'move' _iterator[1872404](1872420 call _getIterator[1122883] call_tmp[1872406]))
                      {
                        val ret[1872423]:_ir_codepoints__ref_string[1122874] "dead at end of block" "RVV" "temp"
                        const-val call_tmp[1872425]:string[26] "dead at end of block" "maybe param" "temp"
                        const-val ret_tmp[1872427]:string[26] "temp"
                        ref this[1872429]:_ref(string)[937958] "temp"
                        (1872431 'move' this[1872429](1872433 '.v' _iterator[1872404] F0_this[1967096]))
                        (1872437 call localize[32889] this[1872429] ret_tmp[1872427])
                        (1872440 'move' call_tmp[1872425] ret_tmp[1872427])
                        val localThis[1872443]:string[26] "dead at end of block" "insert auto destroy"
                        (1872445 'move' localThis[1872443] call_tmp[1872425])
                        const-val call_tmp[1872448]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        ref this[1872450]:_ref(string)[937958] "temp"
                        (1872452 'move' this[1872450](1872454 '.v' _iterator[1872404] F0_this[1967096]))
                        (1872457 'move' call_tmp[1872448](1872460 call isASCII[31049] this[1872450]))
                        const-val call_tmp[1872462]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1872464 'move' call_tmp[1872462] call_tmp[1872448])
                        if call_tmp[1872448]
                        {
                          val _indexOfInterest[1872469]:uint(8)[100] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                          val _iterator[1872471]:_ic_chpl_bytes__ref_string[1108275] "dead at end of block" "expr temp" "temp"
                          const-val call_tmp[1872473]:_ir_chpl_bytes__ref_string[1108281] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val ret_tmp[1872475]:_ir_chpl_bytes__ref_string[1108281] "temp"
                          ref this[1872477]:_ref(string)[937958] "temp"
                          (1872479 'move' this[1872477](1872481 '.v' _iterator[1872404] F0_this[1967096]))
                          (1872485 call chpl_bytes[33577] this[1872477] ret_tmp[1872475])
                          (1872488 'move' call_tmp[1872473] ret_tmp[1872475])
                          (1872491 'move' _iterator[1872471](1872494 call _getIterator[1108290] call_tmp[1872473]))
                          {
                            val ret[1872497]:_ir_chpl_bytes__ref_string[1108281] "dead at end of block" "RVV" "temp"
                            const-val call_tmp[1872499]:string[26] "dead at end of block" "maybe param" "temp"
                            const-val ret_tmp[1872501]:string[26] "temp"
                            ref this[1872503]:_ref(string)[937958] "temp"
                            (1872505 'move' this[1872503](1872507 '.v' _iterator[1872471] F0_this[1964922]))
                            (1872511 call localize[32889] this[1872503] ret_tmp[1872501])
                            (1872514 'move' call_tmp[1872499] ret_tmp[1872501])
                            val localThis[1872517]:string[26] "dead at end of block" "insert auto destroy"
                            (1872519 'move' localThis[1872517] call_tmp[1872499])
                            val _indexOfInterest[1872522]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                            val _iterator[1872524]:_ic_chpl_direct_counted_range_iter[1103809] "dead at end of block" "expr temp" "temp"
                            ref call_tmp[1872526]:_ref(int(64))[936591] "dead at end of block" "maybe param" "temp"
                            (1872528 'move' call_tmp[1872526](1872531 call buffLen[757905] localThis[1872517]))
                            const-val call_tmp[1872533]:_ir_chpl_direct_counted_range_iter[1103815] "dead at end of block" "expr temp" "maybe param" "temp"
                            const-val coerce_tmp[1872535]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1872537 'move' coerce_tmp[1872535](1872539 'deref' call_tmp[1872526]))
                            const-val ret_tmp[1872541]:_ir_chpl_direct_counted_range_iter[1103815] "temp"
                            (1872544 call chpl_direct_counted_range_iter[458034] 0 coerce_tmp[1872535] ret_tmp[1872541])
                            (1872548 'move' call_tmp[1872533] ret_tmp[1872541])
                            (1872551 'move' _iterator[1872524](1872554 call _getIterator[1103824] call_tmp[1872533]))
                            {
                              val ret[1872557]:_ir_chpl_direct_counted_range_iter[1103815] "dead after last mention" "RVV" "temp"
                              val _indexOfInterest[1872559]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                              val _iterator[1872561]:_ic_chpl_direct_counted_range_iter_helper[1103559] "dead at end of block" "expr temp" "temp"
                              const-val call_tmp[1872563]:_ir_chpl_direct_counted_range_iter_helper[1103565] "dead at end of block" "expr temp" "maybe param" "temp"
                              const-val ret_tmp[1872565]:_ir_chpl_direct_counted_range_iter_helper[1103565] "temp"
                              const-val low[1872567]:int(64)[13] "temp"
                              (1872569 'move' low[1872567](1872571 '.v' _iterator[1872524] F0_low[1976900]))
                              const-val count[1872574]:int(64)[13] "temp"
                              (1872576 'move' count[1872574](1872578 '.v' _iterator[1872524] F1_count[1976904]))
                              (1872582 call chpl_direct_counted_range_iter_helper[1102117] low[1872567] count[1872574] ret_tmp[1872565])
                              (1872586 'move' call_tmp[1872563] ret_tmp[1872565])
                              (1872589 'move' _iterator[1872561](1872592 call _getIterator[1103574] call_tmp[1872563]))
                              {
                                val ret[1929657]:_ir_chpl_direct_counted_range_iter_helper[1103565] "dead after last mention" "RVV" "temp"
                                val call_tmp[1929659]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                const-val tmp[1929661]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val tmp[1929663]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                                const-val call_tmp[1929665]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                const-val count[1930134]:int(64)[13] "temp"
                                (1930139 'move' count[1930134](1930136 '.v' _iterator[1872561] F1_count[1981376]))
                                (1929667 'move' call_tmp[1929665](1929670 call <[948417] count[1930134]))
                                (1929672 'move' tmp[1929663] call_tmp[1929665])
                                (1929675 'move' tmp[1929661] call_tmp[1929665])
                                const-val call_tmp[1929678]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1929680 'move' call_tmp[1929678] call_tmp[1929665])
                                if call_tmp[1929665]
                                {
                                  (1929686 call boundsCheckHalt[210185] "With a negative count, the range must have a last index.")
                                }
                                const-val tmp[1929689]:2*int(64)[1040075] "dead at end of block" "const" "insert auto destroy" "temp"
                                val tmp[1929691]:2*int(64)[1040075] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                                const-val tmp[1929693]:bool[10] "dead after last mention" "maybe param" "temp"
                                const-val call_tmp[1929695]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                const-val count[1930141]:int(64)[13] "temp"
                                (1930146 'move' count[1930141](1930143 '.v' _iterator[1872561] F1_count[1981376]))
                                (1929697 'move' call_tmp[1929695](1929700 call ==[435666] count[1930141] 0))
                                (1929703 'move' tmp[1929693] call_tmp[1929695])
                                if call_tmp[1929695]
                                {
                                  const-val tmp[1929708]:2*int(64)[1040075] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                                  val call_tmp[1929710]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                                  const-val call_tmp[1929712]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val low[1930148]:int(64)[13] "temp"
                                  (1930153 'move' low[1930148](1930150 '.v' _iterator[1872561] F0_low[1981372]))
                                  (1929714 'move' call_tmp[1929712](1929717 call _cast[956053] low[1930148]))
                                  const-val call_tmp[1929719]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val coerce_tmp[1929721]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                                  (1929723 'move' coerce_tmp[1929721](1929725 'cast' uint(64)[115] 1))
                                  (1929728 'move' call_tmp[1929719](1929731 call -[962212] call_tmp[1929712]))
                                  const-val call_tmp[1929733]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  (1929735 'move' call_tmp[1929733](1929738 call _cast[953562] call_tmp[1929719]))
                                  const-val ret_tmp[1929740]:2*int(64)[1040075] "temp"
                                  const-val low[1930155]:int(64)[13] "temp"
                                  (1930160 'move' low[1930155](1930157 '.v' _iterator[1872561] F0_low[1981372]))
                                  (1929743 call _build_tuple[1040033] low[1930155] call_tmp[1929733] ret_tmp[1929740])
                                  (1929747 'move' tmp[1929708] ret_tmp[1929740])
                                  (1929750 'move' tmp[1929691] tmp[1929708])
                                }
                                {
                                  const-val tmp[1929754]:2*int(64)[1040075] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                                  val call_tmp[1929756]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  const-val call_tmp[1929758]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val count[1930162]:int(64)[13] "temp"
                                  (1930167 'move' count[1930162](1930164 '.v' _iterator[1872561] F1_count[1981376]))
                                  (1929760 'move' call_tmp[1929758] count[1930162])
                                  const-val call_tmp[1929763]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val count[1930169]:int(64)[13] "temp"
                                  (1930174 'move' count[1930169](1930171 '.v' _iterator[1872561] F1_count[1981376]))
                                  (1929765 'move' call_tmp[1929763](1929768 call -[962245] count[1930169]))
                                  const-val call_tmp[1929770]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val low[1930176]:int(64)[13] "temp"
                                  (1930181 'move' low[1930176](1930178 '.v' _iterator[1872561] F0_low[1981372]))
                                  (1929772 'move' call_tmp[1929770](1929775 call +[439674] low[1930176] call_tmp[1929763]))
                                  const-val ret_tmp[1929778]:2*int(64)[1040075] "temp"
                                  const-val low[1930183]:int(64)[13] "temp"
                                  (1930188 'move' low[1930183](1930185 '.v' _iterator[1872561] F0_low[1981372]))
                                  (1929781 call _build_tuple[1040033] low[1930183] call_tmp[1929770] ret_tmp[1929778])
                                  (1929785 'move' tmp[1929754] ret_tmp[1929778])
                                  (1929788 'move' tmp[1929691] tmp[1929754])
                                }
                                (1929792 '=' tmp[1929689] tmp[1929691])
                                (1929795 'noop')
                                1
                                ref call_tmp[1929797]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
                                (1929799 'move' call_tmp[1929797](1929801 '.' tmp[1929689] x0[1040071]))
                                const-val start[1929804]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                const-val coerce_tmp[1929806]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                (1929808 'move' coerce_tmp[1929806](1929810 'deref' call_tmp[1929797]))
                                (1929812 '=' start[1929804] coerce_tmp[1929806])
                                (1929815 'noop')
                                ref call_tmp[1929816]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
                                (1929818 'move' call_tmp[1929816](1929820 '.' tmp[1929689] x1[1040073]))
                                const-val end[1929823]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                const-val coerce_tmp[1929825]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                (1929827 'move' coerce_tmp[1929825](1929829 'deref' call_tmp[1929816]))
                                (1929831 '=' end[1929823] coerce_tmp[1929825])
                                (1929834 'noop')
                                val _indexOfInterest[1929835]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                                val _iterator[1929837]:_ic_chpl_direct_param_stride_range_iter[1103305] "dead at end of block" "expr temp" "temp"
                                const-val call_tmp[1929839]:_ir_chpl_direct_param_stride_range_iter[1103311] "dead at end of block" "expr temp" "maybe param" "temp"
                                const-val ret_tmp[1929841]:_ir_chpl_direct_param_stride_range_iter[1103311] "temp"
                                (1929844 call chpl_direct_param_stride_range_iter[1102543] coerce_tmp[1929806] coerce_tmp[1929825] ret_tmp[1929841])
                                (1929848 'move' call_tmp[1929839] ret_tmp[1929841])
                                (1929851 'move' _iterator[1929837](1929854 call _getIterator[1103320] call_tmp[1929839]))
                                {
                                  val ret[1929857]:_ir_chpl_direct_param_stride_range_iter[1103311] "dead after last mention" "RVV" "temp"
                                  val call_tmp[1929859]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  (1929862 call chpl_range_check_stride[1102863])
                                  val i[1929863]:int(64)[13] "dead at end of block" "insert auto destroy"
                                  val call_tmp[1929865]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  (1929867 'move' i[1929863] 0)
                                  val call_tmp[1929870]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  const-val default_arg_first[1929872]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                                  const-val low[1929874]:int(64)[13] "temp"
                                  (1929876 'move' low[1929874](1929878 '.v' _iterator[1929837] F0_low[1982870]))
                                  (1929881 'move' default_arg_first[1929872](1929884 call chpl_checkIfRangeIterWillOverflow_default_first[1103217] low[1929874]))
                                  const-val default_arg_last[1929886]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                                  const-val high[1929888]:int(64)[13] "temp"
                                  (1929890 'move' high[1929888](1929892 '.v' _iterator[1929837] F1_high[1982874]))
                                  (1929895 'move' default_arg_last[1929886](1929898 call chpl_checkIfRangeIterWillOverflow_default_last[1103245] high[1929888]))
                                  const-val _return_tmp_[1929900]:bool[10] "dead after last mention" "temp"
                                  const-val low[1929902]:int(64)[13] "temp"
                                  (1929904 'move' low[1929902](1929906 '.v' _iterator[1929837] F0_low[1982870]))
                                  const-val high[1929909]:int(64)[13] "temp"
                                  (1929911 'move' high[1929909](1929913 '.v' _iterator[1929837] F1_high[1982874]))
                                  (1929916 'move' _return_tmp_[1929900](1929919 call chpl_checkIfRangeIterWillOverflow[1096095] low[1929902] high[1929909] 1 default_arg_first[1929872] default_arg_last[1929886] 1))
                                  CForLoop[1929926]
                                  {
                                    const-val yret[1929955]:int(64)[13] "dead after last mention" "YVV" "temp"
                                    (1929957 'move' yret[1929955] i[1929863])
                                    const-val _yieldedIndex[1929960]:int(64)[13] "temp"
                                    (1929962 'move' _yieldedIndex[1929960] i[1929863])
                                    {
                                      const-val i[1929966]:int(64)[13] "const" "index var" "insert auto destroy"
                                      (1929968 'move' i[1929966] _yieldedIndex[1929960])
                                      const-val yret[1929971]:int(64)[13] "dead after last mention" "YVV" "temp"
                                      (1929973 'move' yret[1929971] _yieldedIndex[1929960])
                                      const-val _yieldedIndex[1930001]:int(64)[13] "temp"
                                      (1930132 'move' _yieldedIndex[1930001] _yieldedIndex[1929960])
                                      {
                                        const-val i[1930003]:int(64)[13] "const" "index var" "insert auto destroy"
                                        (1930005 'move' i[1930003] _yieldedIndex[1930001])
                                        const-val yret[1930008]:int(64)[13] "dead after last mention" "YVV" "temp"
                                        (1930010 'move' yret[1930008] _yieldedIndex[1930001])
                                        const-val _yieldedIndex[1930013]:int(64)[13] "temp"
                                        (1930015 'move' _yieldedIndex[1930013] _yieldedIndex[1930001])
                                        {
                                          const-val i[1930019]:int(64)[13] "const" "index var" "insert auto destroy"
                                          (1930021 'move' i[1930019] _yieldedIndex[1930013])
                                          const-val yret[1930024]:uint(8)[100] "dead after last mention" "YVV" "temp"
                                          ref call_tmp[1930026]:_ref(uint(8))[936927] "dead after last mention" "maybe param" "temp"
                                          ref _this_tmp_[1930028]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "temp"
                                          (1930030 'move' _this_tmp_[1930028](1930033 call buff[757983] localThis[1872517]))
                                          val coerce_tmp[1930035]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                          (1930037 'move' coerce_tmp[1930035](1930039 'deref' _this_tmp_[1930028]))
                                          (1930041 'move' call_tmp[1930026](1930044 call this[954110] coerce_tmp[1930035] _yieldedIndex[1930013]))
                                          const-val coerce_tmp[1930047]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                          (1930049 'move' coerce_tmp[1930047](1930051 'deref' call_tmp[1930026]))
                                          (1930053 '=' yret[1930024] coerce_tmp[1930047])
                                          (1930056 'noop')
                                          const-val _yieldedIndex[1930057]:uint(8)[100] "temp"
                                          (1930059 'move' _yieldedIndex[1930057] coerce_tmp[1930047])
                                          {
                                            const-val b[1930063]:uint(8)[100] "const" "index var" "insert auto destroy"
                                            (1930065 'move' b[1930063] _yieldedIndex[1930057])
                                            val yret[1930068]:int(32)[95] "dead after last mention" "YVV" "temp"
                                            val call_tmp[1930070]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                            const-val _yieldedIndex[1930072]:int(32)[95] "temp"
                                            (1930074 'move' _yieldedIndex[1930072](1930076 'cast' int(32)[95] _yieldedIndex[1930057]))
                                            {
                                              const-val removeChar[1930080]:int(32)[95] "const" "index var" "insert auto destroy"
                                              (1930082 'move' removeChar[1930080] _yieldedIndex[1930072])
                                              {
                                                const-val call_tmp[1930086]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                                (1930088 'move' call_tmp[1930086](1930091 call ==[435644] thisChar[1872379] removeChar[1930080]))
                                                const-val call_tmp[1930094]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                                (1930096 'move' call_tmp[1930094] call_tmp[1930086])
                                                if call_tmp[1930094]
                                                {
                                                  (1930126 call _freeIterator[1103493] _iterator[1929837])
                                                  (1930129 call chpl__autoDestroy[1508492] tmp[1929689])
                                                  (1930102 call _freeIterator[1103743] _iterator[1872561])
                                                  (1930105 call _freeIterator[1103993] _iterator[1872524])
                                                  (1930108 call chpl__autoDestroy[1435320] localThis[1872517])
                                                  (1930111 call _freeIterator[1109588] _iterator[1872471])
                                                  (1930114 call chpl__autoDestroy[1435320] localThis[1872443])
                                                  (1930117 call _freeIterator[1123155] _iterator[1872404])
                                                  continue _continueLabel[1873005] _continueLabel[1873005]
                                                }
                                              }
                                              label _continueLabel[1930122]
                                            }
                                          }
                                        }
                                      }
                                    }
                                    {
                                      const-val low[1929928]:int(64)[13] "temp"
                                      (1929930 'move' low[1929928](1929932 '.v' _iterator[1929837] F0_low[1982870]))
                                      (1929935 '=' i[1929863] low[1929928])
                                    }
                                    {
                                      const-val high[1929939]:int(64)[13] "temp"
                                      (1929941 'move' high[1929939](1929943 '.v' _iterator[1929837] F1_high[1982874]))
                                      (1929946 '<=' i[1929863] high[1929939])
                                    }
                                    {
                                      val call_tmp[1929950]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                      (1929952 '+=' i[1929863] 1)
                                    }
                                  }
                                  label _endchpl_direct_param_stride_range_iter[1929989]
                                }
                                (1929992 call _freeIterator[1103493] _iterator[1929837])
                                (1929995 call chpl__autoDestroy[1508492] tmp[1929689])
                                label _endchpl_direct_counted_range_iter_helper[1929997]
                              }
                              (1872719 call _freeIterator[1103743] _iterator[1872561])
                              label _endchpl_direct_counted_range_iter[1872721]
                            }
                            (1872724 call _freeIterator[1103993] _iterator[1872524])
                            (1872727 call chpl__autoDestroy[1435320] localThis[1872517])
                            label _endchpl_bytes[1872729]
                          }
                          (1872732 call _freeIterator[1109588] _iterator[1872471])
                        }
                        {
                          val i[1872735]:int(64)[13] "dead at end of block" "insert auto destroy"
                          (1872737 'move' i[1872735] 0)
                          val tmp[1872740]:bool[10] "dead after last mention" "temp"
                          ref call_tmp[1872742]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
                          (1872744 'move' call_tmp[1872742](1872747 call buffLen[757905] localThis[1872443]))
                          const-val call_tmp[1872749]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val coerce_tmp[1872751]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (1872753 'move' coerce_tmp[1872751](1872755 'deref' call_tmp[1872742]))
                          (1872757 'move' call_tmp[1872749](1872760 call <[437490] 0 coerce_tmp[1872751]))
                          (1872763 'move' tmp[1872740] call_tmp[1872749])
                          WhileDo[1872766]
                          {
                            ref call_tmp[1872768]:_ref(c_ptr(uint(8)))[937451] "dead at end of block" "maybe param" "temp"
                            (1872770 'move' call_tmp[1872768](1872773 call buff[757983] localThis[1872443]))
                            ref call_tmp[1872775]:_ref(int(64))[936591] "dead at end of block" "maybe param" "temp"
                            (1872777 'move' call_tmp[1872775](1872780 call buffLen[757905] localThis[1872443]))
                            const-val call_tmp[1872782]:(syserr,int(32),int(32))[964639] "dead at end of block" "maybe param" "temp"
                            val coerce_tmp[1872784]:c_ptr(uint(8))[937442] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1872786 'move' coerce_tmp[1872784](1872788 'deref' call_tmp[1872768]))
                            const-val coerce_tmp[1872790]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1872792 'move' coerce_tmp[1872790](1872794 'deref' call_tmp[1872775]))
                            const-val ret_tmp[1872796]:(syserr,int(32),int(32))[964639] "temp"
                            (1872799 call decodeHelp[174452] coerce_tmp[1872784] coerce_tmp[1872790] i[1872735] 1 ret_tmp[1872796])
                            (1872805 'move' call_tmp[1872782] ret_tmp[1872796])
                            const-val tmp[1872808]:(syserr,int(32),int(32))[964639] "dead at end of block" "const" "insert auto destroy" "temp"
                            (1872810 'move' tmp[1872808] call_tmp[1872782])
                            1
                            ref call_tmp[1872814]:_ref(syserr)[948851] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1872816 'move' call_tmp[1872814](1872818 '.' tmp[1872808] x0[964633]))
                            const-val decodeRet[1872821]:syserr[223603] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1872823]:syserr[223603] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1872825 'move' coerce_tmp[1872823](1872827 'deref' call_tmp[1872814]))
                            (1872829 'move' decodeRet[1872821] coerce_tmp[1872823])
                            ref call_tmp[1872834]:_ref(int(32))[936645] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1872836 'move' call_tmp[1872834](1872838 '.' tmp[1872808] x1[964635]))
                            const-val cp[1872841]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1872843]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1872845 'move' coerce_tmp[1872843](1872847 'deref' call_tmp[1872834]))
                            (1872849 'move' cp[1872841] coerce_tmp[1872843])
                            ref call_tmp[1872854]:_ref(int(32))[936645] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1872856 'move' call_tmp[1872854](1872858 '.' tmp[1872808] x2[964637]))
                            const-val nBytes[1872861]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1872863]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1872865 'move' coerce_tmp[1872863](1872867 'deref' call_tmp[1872854]))
                            (1872869 'move' nBytes[1872861] coerce_tmp[1872863])
                            const-val yret[1872874]:int(32)[95] "dead after last mention" "YVV" "temp"
                            val call_tmp[1872876]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                            (1872878 'move' yret[1872874] cp[1872841])
                            const-val _yieldedIndex[1872881]:int(32)[95] "temp"
                            (1872883 'move' _yieldedIndex[1872881] cp[1872841])
                            {
                              const-val removeChar[1872887]:int(32)[95] "const" "index var" "insert auto destroy"
                              (1872889 'move' removeChar[1872887] _yieldedIndex[1872881])
                              {
                                const-val call_tmp[1872893]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1872895 'move' call_tmp[1872893](1872898 call ==[435644] thisChar[1872379] removeChar[1872887]))
                                const-val call_tmp[1872901]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1872903 'move' call_tmp[1872901] call_tmp[1872893])
                                if call_tmp[1872901]
                                {
                                  (1872909 call chpl__autoDestroy[1439223] tmp[1872808])
                                  (1872912 call chpl__autoDestroy[1435320] localThis[1872443])
                                  (1872915 call _freeIterator[1123155] _iterator[1872404])
                                  continue _continueLabel[1873005] _continueLabel[1873005]
                                }
                              }
                              label _continueLabel[1872920]
                            }
                            const-val coerce_tmp[1872922]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (1872924 'move' coerce_tmp[1872922](1872926 'cast' int(64)[13] nBytes[1872861]))
                            (1872930 call +=[451353] i[1872735] coerce_tmp[1872922])
                            (1872934 call chpl__autoDestroy[1439223] tmp[1872808])
                            ref call_tmp[1872936]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
                            (1872938 'move' call_tmp[1872936](1872941 call buffLen[757905] localThis[1872443]))
                            const-val call_tmp[1872943]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            const-val coerce_tmp[1872945]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (1872947 'move' coerce_tmp[1872945](1872949 'deref' call_tmp[1872936]))
                            (1872951 'move' call_tmp[1872943](1872954 call <[437490] i[1872735] coerce_tmp[1872945]))
                            (1872957 'move' tmp[1872740] call_tmp[1872943])
                            tmp[1872740]
                          }
                        }
                        (1872962 call chpl__autoDestroy[1435320] localThis[1872443])
                        label _endcodepoints[1872964]
                      }
                      label _breakLabel[1872966]
                      (1872969 call _freeIterator[1123155] _iterator[1872404])
                    }
                    const-val call_tmp[1872971]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[1872973]:byteIndex[28173] "temp"
                    (1872976 call +[28725] i[1872386] nBytes[1872393] ret_tmp[1872973])
                    (1872980 'move' call_tmp[1872971] ret_tmp[1872973])
                    const-val call_tmp[1872983]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[1872985]:byteIndex[28173] "temp"
                    (1872988 call -[28857] call_tmp[1872971] 1 ret_tmp[1872985])
                    (1872992 'move' call_tmp[1872983] ret_tmp[1872985])
                    (1872996 call =[38194] end[36208] call_tmp[1872983])
                    (1873000 call chpl__autoDestroy[1435583] call_tmp[1872983])
                    (1873003 call chpl__autoDestroy[1435583] call_tmp[1872971])
                  }
                  label _continueLabel[1873005]
                }
                (1871694 call chpl__autoDestroy[1435583] call_tmp[1871643])
                const-val coerce_tmp[1871696]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1871698 'move' coerce_tmp[1871696](1871700 'cast' int(64)[13] nBytes[1871621]))
                (1871704 call +=[451353] i[1871287] coerce_tmp[1871696])
                (1871708 call chpl__autoDestroy[1439223] tmp[1871568])
                ref call_tmp[1871710]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
                (1871712 'move' call_tmp[1871710](1871715 call buffLen[757905] localThis[1870938]))
                const-val call_tmp[1871717]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[1871719]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1871721 'move' coerce_tmp[1871719](1871723 'deref' call_tmp[1871710]))
                (1871725 'move' call_tmp[1871717](1871728 call <[437490] i[1871287] coerce_tmp[1871719]))
                (1871731 'move' tmp[1871500] call_tmp[1871717])
                tmp[1871500]
              }
            }
            (1871736 call chpl__autoDestroy[1435320] localThis[1870938])
            label _end_cpIndexLen[1871738]
          }
          label _breakLabel[36445]
          (1815206 call _freeIterator[1122592] _iterator[36440])
        }
      }
      const-val call_tmp[601647]:range(byteIndex,bounded,false)[1025811] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1807455]:range(byteIndex,bounded,false)[1025811] "temp"
      (36501 call chpl_build_bounded_range[1123273] start[36196] end[36208] ret_tmp[1807455])
      (1807458 'move' call_tmp[601647] ret_tmp[1807455])
      const-val call_tmp[601652]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1807473]:string[26] "temp"
      (36504 call this[1123519] localThis[36179] call_tmp[601647] ret_tmp[1807473])
      (1807476 'move' call_tmp[601652] ret_tmp[1807473])
      (1124413 'move' ret[504405] call_tmp[601652])
      (1815208 call chpl__autoDestroy[1508150] call_tmp[601647])
      (1815211 call chpl__autoDestroy[1435583] end[36208])
      (1815214 call chpl__autoDestroy[1435583] start[36196])
      (1815217 call chpl__autoDestroy[1435320] localChars[36190])
      (1815220 call chpl__autoDestroy[1435320] localThis[36179])
      gotoReturn _end_strip[504403] _end_strip[504403]
    }
    label _end_strip[504403]
    (1803164 '=' _retArg[1803162] ret[504405])
    (1803168 return _void[55])
  }
  function _ref(string)[937958].isSpace[36843](const  ref arg this[36845]:_ref(string)[937958]) : bool[10] "method" "resolved" "fn synchronization free"
  {
    val ret[504484]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[601801]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (601804 'move' call_tmp[601801](36856 call isEmpty[35064] this[36845]))
    const-val call_tmp[601806]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (601809 'move' call_tmp[601806] call_tmp[601801])
    if call_tmp[601806]
    {
      (504490 'move' ret[504484] 0)
      gotoReturn _end_isSpace[504482] _end_isSpace[504482]
    }
    val result[36868]:bool[10] "dead at end of block" "insert auto destroy"
    (540492 'move' result[36868] 1)
    const-val tmp[36947]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[601813]:_ref(int(32))[936645] "dead after last mention" "maybe param" "temp"
    (601816 'move' call_tmp[601813](36876 call locale_id[758061] this[36845]))
    const-val call_tmp[601818]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1125521]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1125525 'move' coerce_tmp[1125521](1125523 'deref' call_tmp[601813]))
    (601821 'move' call_tmp[601818](36881 call chpl_buildLocaleID[209470] coerce_tmp[1125521] c_sublocid_any[89878]))
    const-val call_tmp[601823]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    (601826 'move' call_tmp[601823](36882 'chpl_on_locale_num' call_tmp[601818]))
    (36949 'move' tmp[36947] call_tmp[601823])
    val isdirect[2050956]:bool[10] "temp"
    (2050961 'move' isdirect[2050956](2050958 call chpl_doDirectExecuteOn[187469] tmp[36947]))
    if isdirect[2050956]
    {
      (2050965 call on_fn[933841] this[36845] result[36868])
    }
    {
      val _args_foron_fn[2050983]:_class_localson_fn[2050973] "temp"
      (2050987 'move' _args_foron_fn[2050983](2050985 'stack allocate class' _class_localson_fn[2050973]))
      (2050989 '.=' _args_foron_fn[2050983] _0_tmp[2050976] tmp[36947])
      ref tmp[2050993]:string[26] "temp"
      (2050997 'move' tmp[2050993](2050995 'set reference' this[36845]))
      (2050999 '.=' _args_foron_fn[2050983] _1_this[2050978] tmp[2050993])
      ref tmp[2051003]:bool[10] "temp"
      (2051007 'move' tmp[2051003](2051005 'set reference' result[36868]))
      (2051009 '.=' _args_foron_fn[2050983] _2_result[2050980] tmp[2051003])
      val _args_vforon_fn[2051013]:c_void_ptr[149] "temp"
      (2051017 'move' _args_vforon_fn[2051013](2051015 'cast_to_void_star' _args_foron_fn[2050983]))
      val _args_sizeon_fn[2051019]:int(64)[13] "temp"
      (2051023 'move' _args_sizeon_fn[2051019](2051021 'sizeof_bundle' _class_localson_fn[2050973]))
      on(2051063 call wrapon_fn[2051025] tmp[36947] _args_vforon_fn[2051013] _args_sizeon_fn[2051019] _args_foron_fn[2050983])
    }
    {
    }
    (1125551 'move' ret[504484] result[36868])
    gotoReturn _end_isSpace[504482] _end_isSpace[504482]
    label _end_isSpace[504482]
    (504486 return ret[504484])
  }
  function =[38168](ref arg lhs[38165]:_ref(byteIndex)[948778], const in arg rhs[38171]:int(64)[13]) : void[4] "assignop" "resolved" "no return value for void"
  {
    ref call_tmp[602397]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
    (602400 'move' call_tmp[602397](38175 call _bindex[757761] lhs[38165]))
    const-val call_tmp[602402]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (602405 'move' call_tmp[602402] rhs[38171])
    (38182 call =[435365] call_tmp[602397] call_tmp[602402])
    (504644 return _void[55])
  }
  function =[38194](ref arg lhs[38191]:_ref(byteIndex)[948778], const  ref arg rhs[38197]:_ref(byteIndex)[948778]) : void[4] "assignop" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (2076152 '=' lhs[38191] rhs[38197])
    (2076153 return _void[55])
  }
  function =[38272](ref arg lhs[38269]:_ref(string)[937958], const  ref arg rhs[38275]:string[26]) : void[4] "assignop" "resolved" "fn synchronization free" "no return value for void"
  {
    (38282 call doAssign[1019187] lhs[38269] rhs[38275])
    (504652 return _void[55])
  }
  function +[38345](const  ref arg s0[38342]:string[26], const  ref arg s1[38348]:string[26], ref arg _retArg[1803728]:_ref(string)[937958]) : void[4] "fn returns via _retArg" "resolved" "fn synchronization free"
  {
    const-val ret[504658]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[602467]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1805494]:string[26] "temp"
    (38355 call doConcat[980882] s0[38342] s1[38348] ret_tmp[1805494])
    (1805497 'move' call_tmp[602467] ret_tmp[1805494])
    (504663 'move' ret[504658] call_tmp[602467])
    (1803730 '=' _retArg[1803728] ret[504658])
    (1803732 return _void[55])
  }
  function +=[38800](ref arg lhs[38797]:_ref(string)[937958], const  ref arg rhs[38803]:_ref(string)[937958]) : void[4] "assignop" "resolved" "no return value for void"
  {
    val ret[504808]:void[4] "dead after last mention" "RVV" "temp"
    (38811 call doAppend[979089] lhs[38797] rhs[38803])
    (504810 return ret[504808])
  }
  function ==[38823](const  ref arg a[38820]:string[26], const  ref arg b[38826]:string[26]) : bool[10] "no doc" "resolved" "fn synchronization free"
  {
    val ret[504814]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[602682]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (602685 'move' call_tmp[602682](38834 call doEq[1206235] a[38820] b[38826]))
    (1207996 'move' ret[504814] call_tmp[602682])
    (504816 return ret[504814])
  }
  function !=[38847](const  ref arg a[38844]:string[26], const  ref arg b[38850]:string[26]) : bool[10] "inline" "no doc" "resolved"
  {
    val ret[504824]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[602687]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (602690 'move' call_tmp[602687](38858 call doEq[1206235] a[38844] b[38850]))
    const-val call_tmp[602692]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (602695 'move' call_tmp[602692](38859 call ![7494] call_tmp[602687]))
    (1744444 'move' ret[504824] call_tmp[602692])
    (504826 return ret[504824])
  }
  function <[38873](const  ref arg a[38870]:string[26], const  ref arg b[38876]:string[26]) : bool[10] "inline" "no doc" "resolved" "fn synchronization free"
  {
    val ret[504834]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[602697]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (602700 'move' call_tmp[602697](38884 call doLessThan[1744064] a[38870] b[38876]))
    (1744226 'move' ret[504834] call_tmp[602697])
    (504836 return ret[504834])
  }
  function >[38897](const  ref arg a[38894]:string[26], const  ref arg b[38900]:string[26]) : bool[10] "inline" "no doc" "resolved" "fn synchronization free"
  {
    val ret[504844]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[602702]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (602705 'move' call_tmp[602702](38908 call doGreaterThan[1744236] a[38894] b[38900]))
    (1744398 'move' ret[504844] call_tmp[602702])
    (504846 return ret[504844])
  }
  val wint_t[38987]:int(32)[95] "dead at end of block" "extern" "insert auto destroy" "no doc" "type variable"
  function codepoint_isWhitespace[39156](const in arg c[39153]:int(32)[95]) : bool[10] "inline" "private" "resolved" "fn synchronization free"
  {
    val ret[504944]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[602772]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (602775 'move' call_tmp[602772](39175 call iswspace[39165] c[39153]))
    const-val call_tmp[602777]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1125536]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1125542 'move' coerce_tmp[1125536](1125538 'cast' int(32)[95] 0))
    (602780 'move' call_tmp[602777](39177 call !=[436028] call_tmp[602772] coerce_tmp[1125536]))
    (1125546 'move' ret[504944] call_tmp[602777])
    (504946 return ret[504944])
  }
  function _cast[39395](const in arg cs[39398]:c_string[19]) : c_ptr(uint(8))[937442] "inline" "no doc" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1778838]:c_ptr(uint(8))[937442] "temp"
    val ret[505017]:c_ptr(uint(8))[937442] "dead after last mention" "RVV" "temp"
    val call_tmp[602882]:c_ptr(uint(8))[937442] "dead after last mention" "expr temp" "maybe param" "temp"
    (602885 'move' call_tmp[602882](39405 'cast' c_ptr(uint(8))[937442] cs[39398]))
    (505022 'move' ret[505017] call_tmp[602882])
    (505019 return ret[505017])
  }
  function _cast[39465](const  ref arg cpi[39468]:byteIndex[28173]) : int(64)[13] "inline" "no doc" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1778840]:int(64)[13] "temp"
    val ret[505037]:int(64)[13] "dead after last mention" "RVV" "temp"
    ref call_tmp[602909]:_ref(int(64))[936591] "dead after last mention" "maybe param" "reference to a const" "temp"
    (602912 'move' call_tmp[602909](39472 call _bindex[757761] cpi[39468]))
    (505042 'move' ret[505037](505041 'deref' call_tmp[602909]))
    (505039 return ret[505037])
  }
  function _cast[39486](const in arg i[39489]:int(64)[13], ref arg _retArg[1803806]:_ref(byteIndex)[948778]) : void[4] "fn returns via _retArg" "inline" "no doc" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1778842]:byteIndex[28173] "temp"
    const-val ret[505046]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    val cpi[39493]:byteIndex[28173] "dead at end of block" "insert auto destroy"
    (1029750 call init[28100] cpi[39493])
    ref call_tmp[602916]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
    (602919 'move' call_tmp[602916](39499 call _bindex[757761] cpi[39493]))
    (39503 call =[435365] call_tmp[602916] i[39489])
    (505051 'move' ret[505046] cpi[39493])
    gotoReturn _end__cast[505044] _end__cast[505044]
    label _end__cast[505044]
    (1803808 '=' _retArg[1803806] ret[505046])
    (1803810 return _void[55])
  }
  function _cast[39517](const  ref arg cpi[39520]:codepointIndex[28277]) : int(64)[13] "inline" "no doc" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1778844]:int(64)[13] "temp"
    val ret[505057]:int(64)[13] "dead after last mention" "RVV" "temp"
    ref call_tmp[602923]:_ref(int(64))[936591] "dead after last mention" "maybe param" "reference to a const" "temp"
    (602926 'move' call_tmp[602923](39524 call _cpindex[757833] cpi[39520]))
    (505062 'move' ret[505057](505061 'deref' call_tmp[602923]))
    (505059 return ret[505057])
  }
  function _cast[39538](const in arg i[39541]:int(64)[13], ref arg _retArg[1803818]:_ref(codepointIndex)[948788]) : void[4] "fn returns via _retArg" "inline" "no doc" "resolved"
  {
    val _formal_type_tmp_[1778846]:codepointIndex[28277] "temp"
    const-val ret[505066]:codepointIndex[28277] "dead after last mention" "RVV" "temp"
    val cpi[39545]:codepointIndex[28277] "dead at end of block" "insert auto destroy"
    (1157055 call init[28204] cpi[39545])
    ref call_tmp[602930]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
    (602933 'move' call_tmp[602930](39551 call _cpindex[757833] cpi[39545]))
    (39555 call =[435365] call_tmp[602930] i[39541])
    (505071 'move' ret[505066] cpi[39545])
    gotoReturn _end__cast[505064] _end__cast[505064]
    label _end__cast[505064]
    (1803820 '=' _retArg[1803818] ret[505066])
    (1803822 return _void[55])
  }
  function iswspace[39165](const in arg wc[39162]:int(32)[95]) : int(32)[95] "extern" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[504938]:int(32)[95] "RVV" "temp"
    (504940 return ret[504938])
  }
  function on_fn[933805](const  ref arg this[1781211]:_ref(string)[937958]) : void[4] "on" "resolved" "fn synchronization free"
  {
    {
      ref call_tmp[598447]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "maybe param" "temp"
      (598450 'move' call_tmp[598447](30859 call buff[757983] this[1781211]))
      val coerce_tmp[938178]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (938182 'move' coerce_tmp[938178](938180 'deref' call_tmp[598447]))
      const-val coerce_tmp[938184]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (938190 'move' coerce_tmp[938184](938186 'cast' c_void_ptr[149] coerce_tmp[938178]))
      (30863 call chpl_here_free[188127] coerce_tmp[938184])
    }
    (933812 return _void[55])
  }
  function on_fn[933841](const  ref arg this[1781213]:_ref(string)[937958], ref arg result[1781215]:_ref(bool)[937218]) : void[4] "on" "resolved" "fn synchronization free"
  {
    {
      {
        val _indexOfInterest[36910]:int(32)[95] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[36911]:_ic_codepoints__ref_string[1122868] "dead at end of block" "expr temp" "temp"
        const-val call_tmp[601830]:_ir_codepoints__ref_string[1122874] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val ret_tmp[1803042]:_ir_codepoints__ref_string[1122874] "temp"
        (36889 call codepoints[33666] this[1781213] ret_tmp[1803042])
        (1803045 'move' call_tmp[601830] ret_tmp[1803042])
        (36920 'move' _iterator[36911](36918 call _getIterator[1122883] call_tmp[601830]))
        {
          val ret[1873039]:_ir_codepoints__ref_string[1122874] "dead at end of block" "RVV" "temp"
          const-val call_tmp[1873041]:string[26] "dead at end of block" "maybe param" "temp"
          const-val ret_tmp[1873043]:string[26] "temp"
          ref this[1873613]:_ref(string)[937958] "temp"
          (1873618 'move' this[1873613](1873615 '.v' _iterator[36911] F0_this[1967096]))
          (1873046 call localize[32889] this[1873613] ret_tmp[1873043])
          (1873049 'move' call_tmp[1873041] ret_tmp[1873043])
          val localThis[1873052]:string[26] "dead at end of block" "insert auto destroy"
          (1873054 'move' localThis[1873052] call_tmp[1873041])
          const-val call_tmp[1873057]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          ref this[1873620]:_ref(string)[937958] "temp"
          (1873625 'move' this[1873620](1873622 '.v' _iterator[36911] F0_this[1967096]))
          (1873059 'move' call_tmp[1873057](1873062 call isASCII[31049] this[1873620]))
          const-val call_tmp[1873064]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1873066 'move' call_tmp[1873064] call_tmp[1873057])
          if call_tmp[1873057]
          {
            val _indexOfInterest[1873071]:uint(8)[100] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1873073]:_ic_chpl_bytes__ref_string[1108275] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[1873075]:_ir_chpl_bytes__ref_string[1108281] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[1873077]:_ir_chpl_bytes__ref_string[1108281] "temp"
            ref this[1873627]:_ref(string)[937958] "temp"
            (1873632 'move' this[1873627](1873629 '.v' _iterator[36911] F0_this[1967096]))
            (1873080 call chpl_bytes[33577] this[1873627] ret_tmp[1873077])
            (1873083 'move' call_tmp[1873075] ret_tmp[1873077])
            (1873086 'move' _iterator[1873073](1873089 call _getIterator[1108290] call_tmp[1873075]))
            {
              val ret[1873092]:_ir_chpl_bytes__ref_string[1108281] "dead at end of block" "RVV" "temp"
              const-val call_tmp[1873094]:string[26] "dead at end of block" "maybe param" "temp"
              const-val ret_tmp[1873096]:string[26] "temp"
              ref this[1873098]:_ref(string)[937958] "temp"
              (1873100 'move' this[1873098](1873102 '.v' _iterator[1873073] F0_this[1964922]))
              (1873106 call localize[32889] this[1873098] ret_tmp[1873096])
              (1873109 'move' call_tmp[1873094] ret_tmp[1873096])
              val localThis[1873112]:string[26] "dead at end of block" "insert auto destroy"
              (1873114 'move' localThis[1873112] call_tmp[1873094])
              val _indexOfInterest[1873117]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[1873119]:_ic_chpl_direct_counted_range_iter[1103809] "dead at end of block" "expr temp" "temp"
              ref call_tmp[1873121]:_ref(int(64))[936591] "dead at end of block" "maybe param" "temp"
              (1873123 'move' call_tmp[1873121](1873126 call buffLen[757905] localThis[1873112]))
              const-val call_tmp[1873128]:_ir_chpl_direct_counted_range_iter[1103815] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1873130]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1873132 'move' coerce_tmp[1873130](1873134 'deref' call_tmp[1873121]))
              const-val ret_tmp[1873136]:_ir_chpl_direct_counted_range_iter[1103815] "temp"
              (1873139 call chpl_direct_counted_range_iter[458034] 0 coerce_tmp[1873130] ret_tmp[1873136])
              (1873143 'move' call_tmp[1873128] ret_tmp[1873136])
              (1873146 'move' _iterator[1873119](1873149 call _getIterator[1103824] call_tmp[1873128]))
              {
                val ret[1873152]:_ir_chpl_direct_counted_range_iter[1103815] "dead after last mention" "RVV" "temp"
                val _indexOfInterest[1873154]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[1873156]:_ic_chpl_direct_counted_range_iter_helper[1103559] "dead at end of block" "expr temp" "temp"
                const-val call_tmp[1873158]:_ir_chpl_direct_counted_range_iter_helper[1103565] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val ret_tmp[1873160]:_ir_chpl_direct_counted_range_iter_helper[1103565] "temp"
                const-val low[1873162]:int(64)[13] "temp"
                (1873164 'move' low[1873162](1873166 '.v' _iterator[1873119] F0_low[1976900]))
                const-val count[1873169]:int(64)[13] "temp"
                (1873171 'move' count[1873169](1873173 '.v' _iterator[1873119] F1_count[1976904]))
                (1873177 call chpl_direct_counted_range_iter_helper[1102117] low[1873162] count[1873169] ret_tmp[1873160])
                (1873181 'move' call_tmp[1873158] ret_tmp[1873160])
                (1873184 'move' _iterator[1873156](1873187 call _getIterator[1103574] call_tmp[1873158]))
                {
                  val ret[1930191]:_ir_chpl_direct_counted_range_iter_helper[1103565] "dead after last mention" "RVV" "temp"
                  val call_tmp[1930193]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val tmp[1930195]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  const-val tmp[1930197]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  const-val call_tmp[1930199]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val count[1930675]:int(64)[13] "temp"
                  (1930680 'move' count[1930675](1930677 '.v' _iterator[1873156] F1_count[1981376]))
                  (1930201 'move' call_tmp[1930199](1930204 call <[948417] count[1930675]))
                  (1930206 'move' tmp[1930197] call_tmp[1930199])
                  (1930209 'move' tmp[1930195] call_tmp[1930199])
                  const-val call_tmp[1930212]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1930214 'move' call_tmp[1930212] call_tmp[1930199])
                  if call_tmp[1930199]
                  {
                    (1930220 call boundsCheckHalt[210185] "With a negative count, the range must have a last index.")
                  }
                  const-val tmp[1930223]:2*int(64)[1040075] "dead at end of block" "const" "insert auto destroy" "temp"
                  val tmp[1930225]:2*int(64)[1040075] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                  const-val tmp[1930227]:bool[10] "dead after last mention" "maybe param" "temp"
                  const-val call_tmp[1930229]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val count[1930682]:int(64)[13] "temp"
                  (1930687 'move' count[1930682](1930684 '.v' _iterator[1873156] F1_count[1981376]))
                  (1930231 'move' call_tmp[1930229](1930234 call ==[435666] count[1930682] 0))
                  (1930237 'move' tmp[1930227] call_tmp[1930229])
                  if call_tmp[1930229]
                  {
                    const-val tmp[1930242]:2*int(64)[1040075] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                    val call_tmp[1930244]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                    const-val call_tmp[1930246]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val low[1930689]:int(64)[13] "temp"
                    (1930694 'move' low[1930689](1930691 '.v' _iterator[1873156] F0_low[1981372]))
                    (1930248 'move' call_tmp[1930246](1930251 call _cast[956053] low[1930689]))
                    const-val call_tmp[1930253]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[1930255]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                    (1930257 'move' coerce_tmp[1930255](1930259 'cast' uint(64)[115] 1))
                    (1930262 'move' call_tmp[1930253](1930265 call -[962212] call_tmp[1930246]))
                    const-val call_tmp[1930267]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                    (1930269 'move' call_tmp[1930267](1930272 call _cast[953562] call_tmp[1930253]))
                    const-val ret_tmp[1930274]:2*int(64)[1040075] "temp"
                    const-val low[1930696]:int(64)[13] "temp"
                    (1930701 'move' low[1930696](1930698 '.v' _iterator[1873156] F0_low[1981372]))
                    (1930277 call _build_tuple[1040033] low[1930696] call_tmp[1930267] ret_tmp[1930274])
                    (1930281 'move' tmp[1930242] ret_tmp[1930274])
                    (1930284 'move' tmp[1930225] tmp[1930242])
                  }
                  {
                    const-val tmp[1930288]:2*int(64)[1040075] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                    val call_tmp[1930290]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    const-val call_tmp[1930292]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val count[1930703]:int(64)[13] "temp"
                    (1930708 'move' count[1930703](1930705 '.v' _iterator[1873156] F1_count[1981376]))
                    (1930294 'move' call_tmp[1930292] count[1930703])
                    const-val call_tmp[1930297]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val count[1930710]:int(64)[13] "temp"
                    (1930715 'move' count[1930710](1930712 '.v' _iterator[1873156] F1_count[1981376]))
                    (1930299 'move' call_tmp[1930297](1930302 call -[962245] count[1930710]))
                    const-val call_tmp[1930304]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val low[1930717]:int(64)[13] "temp"
                    (1930722 'move' low[1930717](1930719 '.v' _iterator[1873156] F0_low[1981372]))
                    (1930306 'move' call_tmp[1930304](1930309 call +[439674] low[1930717] call_tmp[1930297]))
                    const-val ret_tmp[1930312]:2*int(64)[1040075] "temp"
                    const-val low[1930724]:int(64)[13] "temp"
                    (1930729 'move' low[1930724](1930726 '.v' _iterator[1873156] F0_low[1981372]))
                    (1930315 call _build_tuple[1040033] low[1930724] call_tmp[1930304] ret_tmp[1930312])
                    (1930319 'move' tmp[1930288] ret_tmp[1930312])
                    (1930322 'move' tmp[1930225] tmp[1930288])
                  }
                  (1930326 '=' tmp[1930223] tmp[1930225])
                  (1930329 'noop')
                  1
                  ref call_tmp[1930331]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
                  (1930333 'move' call_tmp[1930331](1930335 '.' tmp[1930223] x0[1040071]))
                  const-val start[1930338]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                  const-val coerce_tmp[1930340]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                  (1930342 'move' coerce_tmp[1930340](1930344 'deref' call_tmp[1930331]))
                  (1930346 '=' start[1930338] coerce_tmp[1930340])
                  (1930349 'noop')
                  ref call_tmp[1930350]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
                  (1930352 'move' call_tmp[1930350](1930354 '.' tmp[1930223] x1[1040073]))
                  const-val end[1930357]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                  const-val coerce_tmp[1930359]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                  (1930361 'move' coerce_tmp[1930359](1930363 'deref' call_tmp[1930350]))
                  (1930365 '=' end[1930357] coerce_tmp[1930359])
                  (1930368 'noop')
                  val _indexOfInterest[1930369]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                  val _iterator[1930371]:_ic_chpl_direct_param_stride_range_iter[1103305] "dead at end of block" "expr temp" "temp"
                  const-val call_tmp[1930373]:_ir_chpl_direct_param_stride_range_iter[1103311] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val ret_tmp[1930375]:_ir_chpl_direct_param_stride_range_iter[1103311] "temp"
                  (1930378 call chpl_direct_param_stride_range_iter[1102543] coerce_tmp[1930340] coerce_tmp[1930359] ret_tmp[1930375])
                  (1930382 'move' call_tmp[1930373] ret_tmp[1930375])
                  (1930385 'move' _iterator[1930371](1930388 call _getIterator[1103320] call_tmp[1930373]))
                  {
                    val ret[1930391]:_ir_chpl_direct_param_stride_range_iter[1103311] "dead after last mention" "RVV" "temp"
                    val call_tmp[1930393]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    (1930396 call chpl_range_check_stride[1102863])
                    val i[1930397]:int(64)[13] "dead at end of block" "insert auto destroy"
                    val call_tmp[1930399]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    (1930401 'move' i[1930397] 0)
                    val call_tmp[1930404]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    const-val default_arg_first[1930406]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                    const-val low[1930408]:int(64)[13] "temp"
                    (1930410 'move' low[1930408](1930412 '.v' _iterator[1930371] F0_low[1982870]))
                    (1930415 'move' default_arg_first[1930406](1930418 call chpl_checkIfRangeIterWillOverflow_default_first[1103217] low[1930408]))
                    const-val default_arg_last[1930420]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                    const-val high[1930422]:int(64)[13] "temp"
                    (1930424 'move' high[1930422](1930426 '.v' _iterator[1930371] F1_high[1982874]))
                    (1930429 'move' default_arg_last[1930420](1930432 call chpl_checkIfRangeIterWillOverflow_default_last[1103245] high[1930422]))
                    const-val _return_tmp_[1930434]:bool[10] "dead after last mention" "temp"
                    const-val low[1930436]:int(64)[13] "temp"
                    (1930438 'move' low[1930436](1930440 '.v' _iterator[1930371] F0_low[1982870]))
                    const-val high[1930443]:int(64)[13] "temp"
                    (1930445 'move' high[1930443](1930447 '.v' _iterator[1930371] F1_high[1982874]))
                    (1930450 'move' _return_tmp_[1930434](1930453 call chpl_checkIfRangeIterWillOverflow[1096095] low[1930436] high[1930443] 1 default_arg_first[1930406] default_arg_last[1930420] 1))
                    CForLoop[1930460]
                    {
                      const-val yret[1930489]:int(64)[13] "dead after last mention" "YVV" "temp"
                      (1930491 'move' yret[1930489] i[1930397])
                      const-val _yieldedIndex[1930494]:int(64)[13] "temp"
                      (1930496 'move' _yieldedIndex[1930494] i[1930397])
                      {
                        const-val i[1930500]:int(64)[13] "const" "index var" "insert auto destroy"
                        (1930502 'move' i[1930500] _yieldedIndex[1930494])
                        const-val yret[1930505]:int(64)[13] "dead after last mention" "YVV" "temp"
                        (1930507 'move' yret[1930505] _yieldedIndex[1930494])
                        const-val _yieldedIndex[1930535]:int(64)[13] "temp"
                        (1930673 'move' _yieldedIndex[1930535] _yieldedIndex[1930494])
                        {
                          const-val i[1930537]:int(64)[13] "const" "index var" "insert auto destroy"
                          (1930539 'move' i[1930537] _yieldedIndex[1930535])
                          const-val yret[1930542]:int(64)[13] "dead after last mention" "YVV" "temp"
                          (1930544 'move' yret[1930542] _yieldedIndex[1930535])
                          const-val _yieldedIndex[1930547]:int(64)[13] "temp"
                          (1930549 'move' _yieldedIndex[1930547] _yieldedIndex[1930535])
                          {
                            const-val i[1930553]:int(64)[13] "const" "index var" "insert auto destroy"
                            (1930555 'move' i[1930553] _yieldedIndex[1930547])
                            const-val yret[1930558]:uint(8)[100] "dead after last mention" "YVV" "temp"
                            ref call_tmp[1930560]:_ref(uint(8))[936927] "dead after last mention" "maybe param" "temp"
                            ref _this_tmp_[1930562]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "temp"
                            (1930564 'move' _this_tmp_[1930562](1930567 call buff[757983] localThis[1873112]))
                            val coerce_tmp[1930569]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (1930571 'move' coerce_tmp[1930569](1930573 'deref' _this_tmp_[1930562]))
                            (1930575 'move' call_tmp[1930560](1930578 call this[954110] coerce_tmp[1930569] _yieldedIndex[1930547]))
                            const-val coerce_tmp[1930581]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                            (1930583 'move' coerce_tmp[1930581](1930585 'deref' call_tmp[1930560]))
                            (1930587 '=' yret[1930558] coerce_tmp[1930581])
                            (1930590 'noop')
                            const-val _yieldedIndex[1930591]:uint(8)[100] "temp"
                            (1930593 'move' _yieldedIndex[1930591] coerce_tmp[1930581])
                            {
                              const-val b[1930597]:uint(8)[100] "const" "index var" "insert auto destroy"
                              (1930599 'move' b[1930597] _yieldedIndex[1930591])
                              val yret[1930602]:int(32)[95] "dead after last mention" "YVV" "temp"
                              val call_tmp[1930604]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                              const-val _yieldedIndex[1930606]:int(32)[95] "temp"
                              (1930608 'move' _yieldedIndex[1930606](1930610 'cast' int(32)[95] _yieldedIndex[1930591]))
                              {
                                const-val cp[1930614]:int(32)[95] "const" "index var" "insert auto destroy"
                                (1930616 'move' cp[1930614] _yieldedIndex[1930606])
                                {
                                  const-val call_tmp[1930620]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                  (1930622 'move' call_tmp[1930620](1930625 call codepoint_isWhitespace[39156] cp[1930614]))
                                  const-val call_tmp[1930627]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                  (1930629 'move' call_tmp[1930627](1930632 call ![7494] call_tmp[1930620]))
                                  const-val call_tmp[1930634]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                  (1930636 'move' call_tmp[1930634] call_tmp[1930627])
                                  if call_tmp[1930634]
                                  {
                                    (1930642 call =[435212] result[1781215] 0)
                                    (1930667 call _freeIterator[1103493] _iterator[1930371])
                                    (1930670 call chpl__autoDestroy[1508492] tmp[1930223])
                                    (1930646 call _freeIterator[1103743] _iterator[1873156])
                                    (1930649 call _freeIterator[1103993] _iterator[1873119])
                                    (1930652 call chpl__autoDestroy[1435320] localThis[1873112])
                                    (1930655 call _freeIterator[1109588] _iterator[1873073])
                                    (1930658 call chpl__autoDestroy[1435320] localThis[1873052])
                                    break _breakLabel[36916] _breakLabel[36916]
                                  }
                                }
                                label _continueLabel[1930663]
                              }
                            }
                          }
                        }
                      }
                      {
                        const-val low[1930462]:int(64)[13] "temp"
                        (1930464 'move' low[1930462](1930466 '.v' _iterator[1930371] F0_low[1982870]))
                        (1930469 '=' i[1930397] low[1930462])
                      }
                      {
                        const-val high[1930473]:int(64)[13] "temp"
                        (1930475 'move' high[1930473](1930477 '.v' _iterator[1930371] F1_high[1982874]))
                        (1930480 '<=' i[1930397] high[1930473])
                      }
                      {
                        val call_tmp[1930484]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                        (1930486 '+=' i[1930397] 1)
                      }
                    }
                    label _endchpl_direct_param_stride_range_iter[1930523]
                  }
                  (1930526 call _freeIterator[1103493] _iterator[1930371])
                  (1930529 call chpl__autoDestroy[1508492] tmp[1930223])
                  label _endchpl_direct_counted_range_iter_helper[1930531]
                }
                (1873289 call _freeIterator[1103743] _iterator[1873156])
                label _endchpl_direct_counted_range_iter[1873291]
              }
              (1873294 call _freeIterator[1103993] _iterator[1873119])
              (1873297 call chpl__autoDestroy[1435320] localThis[1873112])
              label _endchpl_bytes[1873299]
            }
            (1873302 call _freeIterator[1109588] _iterator[1873073])
          }
          {
            val i[1873305]:int(64)[13] "dead at end of block" "insert auto destroy"
            (1873307 'move' i[1873305] 0)
            val tmp[1873310]:bool[10] "dead after last mention" "temp"
            ref call_tmp[1873312]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
            (1873314 'move' call_tmp[1873312](1873317 call buffLen[757905] localThis[1873052]))
            const-val call_tmp[1873319]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val coerce_tmp[1873321]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (1873323 'move' coerce_tmp[1873321](1873325 'deref' call_tmp[1873312]))
            (1873327 'move' call_tmp[1873319](1873330 call <[437490] 0 coerce_tmp[1873321]))
            (1873333 'move' tmp[1873310] call_tmp[1873319])
            WhileDo[1873336]
            {
              ref call_tmp[1873338]:_ref(c_ptr(uint(8)))[937451] "dead at end of block" "maybe param" "temp"
              (1873340 'move' call_tmp[1873338](1873343 call buff[757983] localThis[1873052]))
              ref call_tmp[1873345]:_ref(int(64))[936591] "dead at end of block" "maybe param" "temp"
              (1873347 'move' call_tmp[1873345](1873350 call buffLen[757905] localThis[1873052]))
              const-val call_tmp[1873352]:(syserr,int(32),int(32))[964639] "dead at end of block" "maybe param" "temp"
              val coerce_tmp[1873354]:c_ptr(uint(8))[937442] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1873356 'move' coerce_tmp[1873354](1873358 'deref' call_tmp[1873338]))
              const-val coerce_tmp[1873360]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1873362 'move' coerce_tmp[1873360](1873364 'deref' call_tmp[1873345]))
              const-val ret_tmp[1873366]:(syserr,int(32),int(32))[964639] "temp"
              (1873369 call decodeHelp[174452] coerce_tmp[1873354] coerce_tmp[1873360] i[1873305] 1 ret_tmp[1873366])
              (1873375 'move' call_tmp[1873352] ret_tmp[1873366])
              const-val tmp[1873378]:(syserr,int(32),int(32))[964639] "dead at end of block" "const" "insert auto destroy" "temp"
              (1873380 'move' tmp[1873378] call_tmp[1873352])
              1
              ref call_tmp[1873384]:_ref(syserr)[948851] "dead at end of block" "maybe param" "reference to a const" "temp"
              (1873386 'move' call_tmp[1873384](1873388 '.' tmp[1873378] x0[964633]))
              const-val decodeRet[1873391]:syserr[223603] "dead at end of block" "const" "insert auto destroy"
              const-val coerce_tmp[1873393]:syserr[223603] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1873395 'move' coerce_tmp[1873393](1873397 'deref' call_tmp[1873384]))
              (1873399 'move' decodeRet[1873391] coerce_tmp[1873393])
              ref call_tmp[1873404]:_ref(int(32))[936645] "dead at end of block" "maybe param" "reference to a const" "temp"
              (1873406 'move' call_tmp[1873404](1873408 '.' tmp[1873378] x1[964635]))
              const-val cp[1873411]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
              const-val coerce_tmp[1873413]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1873415 'move' coerce_tmp[1873413](1873417 'deref' call_tmp[1873404]))
              (1873419 'move' cp[1873411] coerce_tmp[1873413])
              ref call_tmp[1873424]:_ref(int(32))[936645] "dead at end of block" "maybe param" "reference to a const" "temp"
              (1873426 'move' call_tmp[1873424](1873428 '.' tmp[1873378] x2[964637]))
              const-val nBytes[1873431]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
              const-val coerce_tmp[1873433]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1873435 'move' coerce_tmp[1873433](1873437 'deref' call_tmp[1873424]))
              (1873439 'move' nBytes[1873431] coerce_tmp[1873433])
              const-val yret[1873444]:int(32)[95] "dead after last mention" "YVV" "temp"
              val call_tmp[1873446]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (1873448 'move' yret[1873444] cp[1873411])
              const-val _yieldedIndex[1873565]:int(32)[95] "temp"
              (1873611 'move' _yieldedIndex[1873565] cp[1873411])
              {
                const-val cp[1873567]:int(32)[95] "const" "index var" "insert auto destroy"
                (1873569 'move' cp[1873567] _yieldedIndex[1873565])
                {
                  const-val call_tmp[1873573]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1873575 'move' call_tmp[1873573](1873578 call codepoint_isWhitespace[39156] cp[1873567]))
                  const-val call_tmp[1873580]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1873582 'move' call_tmp[1873580](1873585 call ![7494] call_tmp[1873573]))
                  const-val call_tmp[1873587]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1873589 'move' call_tmp[1873587] call_tmp[1873580])
                  if call_tmp[1873587]
                  {
                    (1873595 call =[435212] result[1781215] 0)
                    (1873605 call chpl__autoDestroy[1439223] tmp[1873378])
                    (1873608 call chpl__autoDestroy[1435320] localThis[1873052])
                    break _breakLabel[36916] _breakLabel[36916]
                  }
                }
                label _continueLabel[1873601]
              }
              const-val coerce_tmp[1873464]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1873466 'move' coerce_tmp[1873464](1873468 'cast' int(64)[13] nBytes[1873431]))
              (1873472 call +=[451353] i[1873305] coerce_tmp[1873464])
              (1873476 call chpl__autoDestroy[1439223] tmp[1873378])
              ref call_tmp[1873478]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
              (1873480 'move' call_tmp[1873478](1873483 call buffLen[757905] localThis[1873052]))
              const-val call_tmp[1873485]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1873487]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1873489 'move' coerce_tmp[1873487](1873491 'deref' call_tmp[1873478]))
              (1873493 'move' call_tmp[1873485](1873496 call <[437490] i[1873305] coerce_tmp[1873487]))
              (1873499 'move' tmp[1873310] call_tmp[1873485])
              tmp[1873310]
            }
          }
          (1873504 call chpl__autoDestroy[1435320] localThis[1873052])
          label _endcodepoints[1873506]
        }
        label _breakLabel[36916]
        (1815765 call _freeIterator[1123155] _iterator[36911])
      }
    }
    (933848 return _void[55])
  }
  function chpl_enc_validate_buf[986756](const in arg buf[986758]:c_ptr(uint(8))[937442], const in arg len[986760]:int(64)[13], ref arg numCodepoints[986762]:_ref(int(64))[936591]) : int(32)[95] "extern" "instantiated generic" "invisible fn" "local args" "no fn body" "resolved" "no return value for void"
  {
    val ret[986766]:int(32)[95] "RVV" "temp"
    (986778 return ret[986766])
  }
  function on_fn[1106201](const in arg needle[1781467]:__serializeHelper[28089], const  ref arg this[1781469]:_ref(string)[937958], const in arg region[1781471]:range(byteIndex,bounded,false)[1025811], ref arg ret[1781473]:_ref(int(64))[936591]) : void[4] "on" "resolved"
  {
    val needle[2049409]:string[26] "temp"
    ref needle[2049410]:string[26] "temp"
    ref tmp[2049416]:string[26] "temp"
    (2049420 'move' tmp[2049416](2049418 'set reference' needle[2049409]))
    (2049413 call chpl__deserialize[1766908] needle[1781467] tmp[2049416])
    (2049425 'move' needle[2049410](2049423 'set reference' needle[2049409]))
    {
      val localRet[1106214]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1106216 'move' localRet[1106214] -2)
      ref call_tmp[1106221]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1106223 'move' call_tmp[1106221](1106226 call buffLen[757905] needle[2049410]))
      const-val nLen[1106229]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[1107382]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1107386 'move' coerce_tmp[1107382](1107384 'deref' call_tmp[1106221]))
      (1817484 '=' nLen[1106229] coerce_tmp[1107382])
      (1106231 'noop')
      const-val call_tmp[1106235]:(range(int(64),bounded,false),int(64))[1084943] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1806030]:(range(int(64),bounded,false),int(64))[1084943] "temp"
      (1106240 call getView[1031173] this[1781469] region[1781471] ret_tmp[1806030])
      (1806033 'move' call_tmp[1106235] ret_tmp[1806030])
      const-val tmp[1106243]:(range(int(64),bounded,false),int(64))[1084943] "dead at end of block" "const" "insert auto destroy" "temp"
      (1106245 'move' tmp[1106243] call_tmp[1106235])
      1
      ref call_tmp[1106253]:_ref(range(int(64),bounded,false))[1026877] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1106255 'move' call_tmp[1106253](1107397 '.' tmp[1106243] x0[1084939]))
      const-val view[1106260]:range(int(64),bounded,false)[1026833] "dead at end of block" "const" "insert auto destroy"
      (1106262 'move' view[1106260](1107400 'deref' call_tmp[1106253]))
      const-val call_tmp[1106266]:int(64)[13] "dead at end of block" "maybe param" "temp"
      (1106268 'move' call_tmp[1106266](1106271 call size[1035808] view[1106260]))
      const-val thisLen[1106274]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      (1106276 'move' thisLen[1106274] call_tmp[1106266])
      {
        const-val call_tmp[1106719]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1106721 'move' call_tmp[1106719](1106724 call ==[435666] nLen[1106229] 0))
        const-val call_tmp[1106727]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1106729 'move' call_tmp[1106727] call_tmp[1106719])
        if call_tmp[1106727]
        {
          {
            (1106753 call =[435365] localRet[1106214] -1)
          }
        }
      }
      const-val call_tmp[1106808]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1106810 'move' call_tmp[1106808](1106813 call >[437710] nLen[1106229] thisLen[1106274]))
      const-val call_tmp[1106816]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1106818 'move' call_tmp[1106816] call_tmp[1106808])
      if call_tmp[1106816]
      {
        (1106833 call =[435365] localRet[1106214] -1)
      }
      const-val call_tmp[1106846]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1106848 'move' call_tmp[1106846](1106851 call ==[435666] localRet[1106214] -2))
      const-val call_tmp[1106854]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1106856 'move' call_tmp[1106854] call_tmp[1106846])
      if call_tmp[1106854]
      {
        (1106871 call =[435365] localRet[1106214] -1)
        const-val call_tmp[1106876]:string[26] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[1802900]:string[26] "temp"
        (1106884 call localize[32889] needle[2049410] ret_tmp[1802900])
        (1802903 'move' call_tmp[1106876] ret_tmp[1802900])
        const localNeedle[1106885]:string[26] "dead at end of block" "const" "insert auto destroy"
        (1106887 'move' localNeedle[1106885] call_tmp[1106876])
        const-val call_tmp[1106892]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (1106894 'move' call_tmp[1106892](1106897 call -[440454] thisLen[1106274] nLen[1106229]))
        const-val call_tmp[1106900]:int(64)[13] "dead at end of block" "maybe param" "temp"
        (1106902 'move' call_tmp[1106900](1106905 call +[949685] call_tmp[1106892]))
        const-val numPossible[1106908]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        (1106910 'move' numPossible[1106908] call_tmp[1106900])
        const-val searchSpace[1106914]:range(int(64),bounded,false)[1026833] "dead at end of block" "const" "insert auto destroy"
        const-val tmp[1106916]:range(int(64),bounded,false)[1026833] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        const-val tmp[1106927]:range(int(64),bounded,false)[1026833] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1106929]:range(int(64),boundedLow,false)[1087584] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1806862]:range(int(64),boundedLow,false)[1087584] "temp"
        (1106934 call chpl_build_low_bounded_range[1086977] 0 ret_tmp[1806862])
        (1806865 'move' call_tmp[1106929] ret_tmp[1806862])
        const-val ret_tmp[1806976]:range(int(64),bounded,false)[1026833] "temp"
        (1106939 call #[1087944] call_tmp[1106929] numPossible[1106908] ret_tmp[1806976])
        (1806979 'move' tmp[1106927] ret_tmp[1806976])
        (1106942 'move' tmp[1106916] tmp[1106927])
        (1106984 'move' searchSpace[1106914] tmp[1106916])
        {
          val _indexOfInterest[1106993]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1106995]:_ic_these_range_int64_t_bounded_F[1096722] "dead at end of block" "expr temp" "temp"
          (1106997 'move' _iterator[1106995](1107000 call _getIterator[1095339] searchSpace[1106914]))
          {
            val ret[1881147]:_ir_these_range_int64_t_bounded_F[1096728] "dead after last mention" "RVV" "temp"
            const-val _return_tmp_[1881149]:bool[10] "dead after last mention" "temp"
            const-val this[1881450]:range(int(64),bounded,false)[1026833] "temp"
            (1881455 'move' this[1881450](1881452 '.v' _iterator[1106995] F0_this[1980749]))
            (1881151 'move' _return_tmp_[1881149](1881154 call checkIfIterWillOverflow[1095833] this[1881450] 1))
            val i[1881157]:int(64)[13] "dead at end of block" "insert auto destroy"
            val call_tmp[1881159]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (1881161 'move' i[1881157] 0)
            ref call_tmp[1881164]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[1881457]:range(int(64),bounded,false)[1026833] "temp"
            (1881462 'move' this[1881457](1881459 '.v' _iterator[1106995] F0_this[1980749]))
            (1881166 'move' call_tmp[1881164](1881169 call _low[1028471] this[1881457]))
            const-val start[1881171]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1881173]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1881175 'move' coerce_tmp[1881173](1881177 'deref' call_tmp[1881164]))
            (1881179 '=' start[1881171] coerce_tmp[1881173])
            (1881182 'noop')
            ref call_tmp[1881183]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[1881464]:range(int(64),bounded,false)[1026833] "temp"
            (1881469 'move' this[1881464](1881466 '.v' _iterator[1106995] F0_this[1980749]))
            (1881185 'move' call_tmp[1881183](1881188 call _high[1028679] this[1881464]))
            const end[1881190]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1881192]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1881194 'move' coerce_tmp[1881192](1881196 'deref' call_tmp[1881183]))
            (1881198 '=' end[1881190] coerce_tmp[1881192])
            (1881201 'noop')
            CForLoop[1881202] hazard
            {
              const-val yret[1881217]:int(64)[13] "dead after last mention" "YVV" "temp"
              const-val call_tmp[1881219]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val this[1881471]:range(int(64),bounded,false)[1026833] "temp"
              (1881476 'move' this[1881471](1881473 '.v' _iterator[1106995] F0_this[1980749]))
              (1881221 'move' call_tmp[1881219](1881224 call chpl_intToIdx[1028499] this[1881471] i[1881157]))
              (1881227 'move' yret[1881217] call_tmp[1881219])
              const-val _yieldedIndex[1881241]:int(64)[13] "temp"
              (1881448 'move' _yieldedIndex[1881241] call_tmp[1881219])
              {
                const-val i[1881243]:int(64)[13] "const" "index var" "insert auto destroy"
                (1881245 'move' i[1881243] _yieldedIndex[1881241])
                {
                  {
                    val _indexOfInterest[1881250]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    val _iterator[1881252]:_ic_chpl_direct_counted_range_iter[1103809] "dead at end of block" "expr temp" "temp"
                    const-val call_tmp[1881254]:_ir_chpl_direct_counted_range_iter[1103815] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val ret_tmp[1881256]:_ir_chpl_direct_counted_range_iter[1103815] "temp"
                    (1881259 call chpl_direct_counted_range_iter[458034] 0 nLen[1106229] ret_tmp[1881256])
                    (1881263 'move' call_tmp[1881254] ret_tmp[1881256])
                    (1881266 'move' _iterator[1881252](1881269 call _getIterator[1103824] call_tmp[1881254]))
                    {
                      val ret[1939009]:_ir_chpl_direct_counted_range_iter[1103815] "dead after last mention" "RVV" "temp"
                      val _indexOfInterest[1939011]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      val _iterator[1939013]:_ic_chpl_direct_counted_range_iter_helper[1103559] "dead at end of block" "expr temp" "temp"
                      const-val call_tmp[1939015]:_ir_chpl_direct_counted_range_iter_helper[1103565] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val ret_tmp[1939017]:_ir_chpl_direct_counted_range_iter_helper[1103565] "temp"
                      const-val low[1939609]:int(64)[13] "temp"
                      (1939614 'move' low[1939609](1939611 '.v' _iterator[1881252] F0_low[1976900]))
                      const-val count[1939616]:int(64)[13] "temp"
                      (1939621 'move' count[1939616](1939618 '.v' _iterator[1881252] F1_count[1976904]))
                      (1939020 call chpl_direct_counted_range_iter_helper[1102117] low[1939609] count[1939616] ret_tmp[1939017])
                      (1939024 'move' call_tmp[1939015] ret_tmp[1939017])
                      (1939027 'move' _iterator[1939013](1939030 call _getIterator[1103574] call_tmp[1939015]))
                      {
                        val ret[1939033]:_ir_chpl_direct_counted_range_iter_helper[1103565] "dead after last mention" "RVV" "temp"
                        val call_tmp[1939035]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                        const-val tmp[1939037]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        const-val tmp[1939039]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                        const-val call_tmp[1939041]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val count[1939043]:int(64)[13] "temp"
                        (1939045 'move' count[1939043](1939047 '.v' _iterator[1939013] F1_count[1981376]))
                        (1939050 'move' call_tmp[1939041](1939053 call <[948417] count[1939043]))
                        (1939055 'move' tmp[1939039] call_tmp[1939041])
                        (1939058 'move' tmp[1939037] call_tmp[1939041])
                        const-val call_tmp[1939061]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1939063 'move' call_tmp[1939061] call_tmp[1939041])
                        if call_tmp[1939041]
                        {
                          (1939069 call boundsCheckHalt[210185] "With a negative count, the range must have a last index.")
                        }
                        const-val tmp[1939072]:2*int(64)[1040075] "dead at end of block" "const" "insert auto destroy" "temp"
                        val tmp[1939074]:2*int(64)[1040075] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                        const-val tmp[1939076]:bool[10] "dead after last mention" "maybe param" "temp"
                        const-val call_tmp[1939078]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val count[1939080]:int(64)[13] "temp"
                        (1939082 'move' count[1939080](1939084 '.v' _iterator[1939013] F1_count[1981376]))
                        (1939087 'move' call_tmp[1939078](1939090 call ==[435666] count[1939080] 0))
                        (1939093 'move' tmp[1939076] call_tmp[1939078])
                        if call_tmp[1939078]
                        {
                          const-val tmp[1939098]:2*int(64)[1040075] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                          val call_tmp[1939100]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                          const-val call_tmp[1939102]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val low[1939104]:int(64)[13] "temp"
                          (1939106 'move' low[1939104](1939108 '.v' _iterator[1939013] F0_low[1981372]))
                          (1939111 'move' call_tmp[1939102](1939114 call _cast[956053] low[1939104]))
                          const-val call_tmp[1939116]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val coerce_tmp[1939118]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                          (1939120 'move' coerce_tmp[1939118](1939122 'cast' uint(64)[115] 1))
                          (1939125 'move' call_tmp[1939116](1939128 call -[962212] call_tmp[1939102]))
                          const-val call_tmp[1939130]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          (1939132 'move' call_tmp[1939130](1939135 call _cast[953562] call_tmp[1939116]))
                          const-val ret_tmp[1939137]:2*int(64)[1040075] "temp"
                          const-val low[1939139]:int(64)[13] "temp"
                          (1939141 'move' low[1939139](1939143 '.v' _iterator[1939013] F0_low[1981372]))
                          (1939147 call _build_tuple[1040033] low[1939139] call_tmp[1939130] ret_tmp[1939137])
                          (1939151 'move' tmp[1939098] ret_tmp[1939137])
                          (1939154 'move' tmp[1939074] tmp[1939098])
                        }
                        {
                          const-val tmp[1939158]:2*int(64)[1040075] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                          val call_tmp[1939160]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val call_tmp[1939162]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val count[1939164]:int(64)[13] "temp"
                          (1939166 'move' count[1939164](1939168 '.v' _iterator[1939013] F1_count[1981376]))
                          (1939171 'move' call_tmp[1939162] count[1939164])
                          const-val call_tmp[1939174]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val count[1939176]:int(64)[13] "temp"
                          (1939178 'move' count[1939176](1939180 '.v' _iterator[1939013] F1_count[1981376]))
                          (1939183 'move' call_tmp[1939174](1939186 call -[962245] count[1939176]))
                          const-val call_tmp[1939188]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val low[1939190]:int(64)[13] "temp"
                          (1939192 'move' low[1939190](1939194 '.v' _iterator[1939013] F0_low[1981372]))
                          (1939197 'move' call_tmp[1939188](1939200 call +[439674] low[1939190] call_tmp[1939174]))
                          const-val ret_tmp[1939203]:2*int(64)[1040075] "temp"
                          const-val low[1939205]:int(64)[13] "temp"
                          (1939207 'move' low[1939205](1939209 '.v' _iterator[1939013] F0_low[1981372]))
                          (1939213 call _build_tuple[1040033] low[1939205] call_tmp[1939188] ret_tmp[1939203])
                          (1939217 'move' tmp[1939158] ret_tmp[1939203])
                          (1939220 'move' tmp[1939074] tmp[1939158])
                        }
                        (1939224 '=' tmp[1939072] tmp[1939074])
                        (1939227 'noop')
                        1
                        ref call_tmp[1939229]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
                        (1939231 'move' call_tmp[1939229](1939233 '.' tmp[1939072] x0[1040071]))
                        const-val start[1939236]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                        const-val coerce_tmp[1939238]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                        (1939240 'move' coerce_tmp[1939238](1939242 'deref' call_tmp[1939229]))
                        (1939244 '=' start[1939236] coerce_tmp[1939238])
                        (1939247 'noop')
                        ref call_tmp[1939248]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
                        (1939250 'move' call_tmp[1939248](1939252 '.' tmp[1939072] x1[1040073]))
                        const-val end[1939255]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                        const-val coerce_tmp[1939257]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                        (1939259 'move' coerce_tmp[1939257](1939261 'deref' call_tmp[1939248]))
                        (1939263 '=' end[1939255] coerce_tmp[1939257])
                        (1939266 'noop')
                        val _indexOfInterest[1939267]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                        val _iterator[1939269]:_ic_chpl_direct_param_stride_range_iter[1103305] "dead at end of block" "expr temp" "temp"
                        const-val call_tmp[1939271]:_ir_chpl_direct_param_stride_range_iter[1103311] "dead at end of block" "expr temp" "maybe param" "temp"
                        const-val ret_tmp[1939273]:_ir_chpl_direct_param_stride_range_iter[1103311] "temp"
                        (1939276 call chpl_direct_param_stride_range_iter[1102543] coerce_tmp[1939238] coerce_tmp[1939257] ret_tmp[1939273])
                        (1939280 'move' call_tmp[1939271] ret_tmp[1939273])
                        (1939283 'move' _iterator[1939269](1939286 call _getIterator[1103320] call_tmp[1939271]))
                        {
                          val ret[1939289]:_ir_chpl_direct_param_stride_range_iter[1103311] "dead after last mention" "RVV" "temp"
                          val call_tmp[1939291]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (1939294 call chpl_range_check_stride[1102863])
                          val i[1939295]:int(64)[13] "dead at end of block" "insert auto destroy"
                          val call_tmp[1939297]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (1939299 'move' i[1939295] 0)
                          val call_tmp[1939302]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val default_arg_first[1939304]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                          const-val low[1939306]:int(64)[13] "temp"
                          (1939308 'move' low[1939306](1939310 '.v' _iterator[1939269] F0_low[1982870]))
                          (1939313 'move' default_arg_first[1939304](1939316 call chpl_checkIfRangeIterWillOverflow_default_first[1103217] low[1939306]))
                          const-val default_arg_last[1939318]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                          const-val high[1939320]:int(64)[13] "temp"
                          (1939322 'move' high[1939320](1939324 '.v' _iterator[1939269] F1_high[1982874]))
                          (1939327 'move' default_arg_last[1939318](1939330 call chpl_checkIfRangeIterWillOverflow_default_last[1103245] high[1939320]))
                          const-val _return_tmp_[1939332]:bool[10] "dead after last mention" "temp"
                          const-val low[1939334]:int(64)[13] "temp"
                          (1939336 'move' low[1939334](1939338 '.v' _iterator[1939269] F0_low[1982870]))
                          const-val high[1939341]:int(64)[13] "temp"
                          (1939343 'move' high[1939341](1939345 '.v' _iterator[1939269] F1_high[1982874]))
                          (1939348 'move' _return_tmp_[1939332](1939351 call chpl_checkIfRangeIterWillOverflow[1096095] low[1939334] high[1939341] 1 default_arg_first[1939304] default_arg_last[1939318] 1))
                          CForLoop[1939358]
                          {
                            const-val yret[1939387]:int(64)[13] "dead after last mention" "YVV" "temp"
                            (1939389 'move' yret[1939387] i[1939295])
                            const-val _yieldedIndex[1939392]:int(64)[13] "temp"
                            (1939394 'move' _yieldedIndex[1939392] i[1939295])
                            {
                              const-val i[1939398]:int(64)[13] "const" "index var" "insert auto destroy"
                              (1939400 'move' i[1939398] _yieldedIndex[1939392])
                              const-val yret[1939403]:int(64)[13] "dead after last mention" "YVV" "temp"
                              (1939405 'move' yret[1939403] _yieldedIndex[1939392])
                              const-val _yieldedIndex[1939408]:int(64)[13] "temp"
                              (1939410 'move' _yieldedIndex[1939408] _yieldedIndex[1939392])
                              {
                                const-val i[1939414]:int(64)[13] "const" "index var" "insert auto destroy"
                                (1939416 'move' i[1939414] _yieldedIndex[1939408])
                                const-val yret[1939419]:int(64)[13] "dead after last mention" "YVV" "temp"
                                (1939421 'move' yret[1939419] _yieldedIndex[1939408])
                                const-val _yieldedIndex[1939457]:int(64)[13] "temp"
                                (1939607 'move' _yieldedIndex[1939457] _yieldedIndex[1939408])
                                {
                                  const-val j[1939459]:int(64)[13] "const" "index var" "insert auto destroy"
                                  (1939461 'move' j[1939459] _yieldedIndex[1939457])
                                  {
                                    const-val call_tmp[1939465]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                    (1939467 'move' call_tmp[1939465](1939470 call +[439674] i[1881243] j[1939459]))
                                    const-val call_tmp[1939473]:int(64)[13] "dead at end of block" "maybe param" "temp"
                                    (1939475 'move' call_tmp[1939473](1939478 call orderToIndex[1104059] view[1106260] call_tmp[1939465]))
                                    const-val idx[1939481]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                    (1939483 'move' idx[1939481] call_tmp[1939473])
                                    ref call_tmp[1939486]:_ref(uint(8))[936927] "dead after last mention" "maybe param" "temp"
                                    ref _this_tmp_[1939488]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "temp"
                                    (1939490 'move' _this_tmp_[1939488](1939493 call buff[757983] this[1781469]))
                                    val coerce_tmp[1939495]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1939497 'move' coerce_tmp[1939495](1939499 'deref' _this_tmp_[1939488]))
                                    (1939501 'move' call_tmp[1939486](1939504 call this[954110] coerce_tmp[1939495] idx[1939481]))
                                    ref call_tmp[1939507]:_ref(uint(8))[936927] "dead after last mention" "maybe param" "temp"
                                    ref _this_tmp_[1939509]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "reference to a const" "temp"
                                    (1939511 'move' _this_tmp_[1939509](1939514 call buff[757983] localNeedle[1106885]))
                                    val coerce_tmp[1939516]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1939518 'move' coerce_tmp[1939516](1939520 'deref' _this_tmp_[1939509]))
                                    (1939522 'move' call_tmp[1939507](1939525 call this[954110] coerce_tmp[1939516] j[1939459]))
                                    const-val call_tmp[1939528]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    const-val coerce_tmp[1939530]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1939532 'move' coerce_tmp[1939530](1939534 'deref' call_tmp[1939486]))
                                    const-val coerce_tmp[1939536]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1939538 'move' coerce_tmp[1939536](1939540 'deref' call_tmp[1939507]))
                                    (1939542 'move' call_tmp[1939528](1939545 call !=[436072] coerce_tmp[1939530] coerce_tmp[1939536]))
                                    const-val call_tmp[1939548]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1939550 'move' call_tmp[1939548] call_tmp[1939528])
                                    if call_tmp[1939548]
                                    {
                                      (1939598 call _freeIterator[1103493] _iterator[1939269])
                                      (1939601 call chpl__autoDestroy[1508492] tmp[1939072])
                                      (1939604 call _freeIterator[1103743] _iterator[1939013])
                                      break _breakLabel[1881411] _breakLabel[1881411]
                                    }
                                    const-val call_tmp[1939558]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1939560 'move' call_tmp[1939558](1939563 call -[962245] nLen[1106229]))
                                    const-val call_tmp[1939565]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1939567 'move' call_tmp[1939565](1939570 call ==[435666] j[1939459] call_tmp[1939558]))
                                    const-val call_tmp[1939573]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1939575 'move' call_tmp[1939573] call_tmp[1939565])
                                    if call_tmp[1939573]
                                    {
                                      {
                                        const-val call_tmp[1939581]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                                        (1939583 'move' call_tmp[1939581](1939586 call orderToIndex[1104059] view[1106260] i[1881243]))
                                        (1939590 call =[435365] localRet[1106214] call_tmp[1939581])
                                      }
                                    }
                                  }
                                  label _continueLabel[1939594]
                                }
                              }
                            }
                            {
                              const-val low[1939360]:int(64)[13] "temp"
                              (1939362 'move' low[1939360](1939364 '.v' _iterator[1939269] F0_low[1982870]))
                              (1939367 '=' i[1939295] low[1939360])
                            }
                            {
                              const-val high[1939371]:int(64)[13] "temp"
                              (1939373 'move' high[1939371](1939375 '.v' _iterator[1939269] F1_high[1982874]))
                              (1939378 '<=' i[1939295] high[1939371])
                            }
                            {
                              val call_tmp[1939382]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                              (1939384 '+=' i[1939295] 1)
                            }
                          }
                          label _endchpl_direct_param_stride_range_iter[1939440]
                        }
                        (1939443 call _freeIterator[1103493] _iterator[1939269])
                        (1939446 call chpl__autoDestroy[1508492] tmp[1939072])
                        label _endchpl_direct_counted_range_iter_helper[1939448]
                      }
                      (1939451 call _freeIterator[1103743] _iterator[1939013])
                      label _endchpl_direct_counted_range_iter[1939453]
                    }
                    label _breakLabel[1881411]
                    (1881414 call _freeIterator[1103993] _iterator[1881252])
                  }
                  const-val tmp[1881416]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  const-val tmp[1881418]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  const-val call_tmp[1881420]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1881422 'move' call_tmp[1881420](1881425 call !=[436050] localRet[1106214] -1))
                  (1881428 'move' tmp[1881418] call_tmp[1881420])
                  (1881431 'move' tmp[1881416] tmp[1881418])
                  const-val call_tmp[1881434]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1881436 'move' call_tmp[1881434] tmp[1881416])
                  if call_tmp[1881434]
                  {
                    break _breakLabel[1107284] _breakLabel[1107284]
                  }
                }
                label _continueLabel[1881444]
              }
              {
                (1881204 '=' i[1881157] coerce_tmp[1881173])
              }
              {
                (1881208 '<=' i[1881157] end[1881190])
              }
              {
                val call_tmp[1881212]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (1881214 '+=' i[1881157] 1)
              }
            }
            label _endthese[1881237]
          }
          label _breakLabel[1107284]
          (1817495 call _freeIterator[1102025] _iterator[1106995])
        }
        (1817498 call chpl__autoDestroy[1508195] searchSpace[1106914])
        (1817501 call chpl__autoDestroy[1514564] call_tmp[1106929])
        (1817504 call chpl__autoDestroy[1435320] localNeedle[1106885])
      }
      (1107304 call =[435365] ret[1781473] localRet[1106214])
      (1817508 call chpl__autoDestroy[1508195] view[1106260])
      (1817511 call chpl__autoDestroy[1514519] tmp[1106243])
    }
    (2049427 call chpl__autoDestroy[1435507] needle[1781467])
    (2049430 call chpl__autoDestroy[1435320] needle[2049409])
    (1107310 return _void[55])
  }
  function on_fn[1182897](const in arg needle[1781507]:__serializeHelper[28089], const  ref arg this[1781509]:_ref(string)[937958], const in arg region[1781511]:range(byteIndex,boundedLow,false)[1143422], ref arg ret[1781513]:_ref(int(64))[936591]) : void[4] "on" "resolved"
  {
    val needle[2049665]:string[26] "temp"
    ref needle[2049666]:string[26] "temp"
    ref tmp[2049672]:string[26] "temp"
    (2049676 'move' tmp[2049672](2049674 'set reference' needle[2049665]))
    (2049669 call chpl__deserialize[1766908] needle[1781507] tmp[2049672])
    (2049681 'move' needle[2049666](2049679 'set reference' needle[2049665]))
    {
      val localRet[1182910]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1182912 'move' localRet[1182910] -2)
      ref call_tmp[1182917]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1182919 'move' call_tmp[1182917](1182922 call buffLen[757905] needle[2049666]))
      const-val nLen[1182925]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[1184078]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1184082 'move' coerce_tmp[1184078](1184080 'deref' call_tmp[1182917]))
      (1820150 '=' nLen[1182925] coerce_tmp[1184078])
      (1182927 'noop')
      const-val call_tmp[1182931]:(range(int(64),bounded,false),int(64))[1084943] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1807775]:(range(int(64),bounded,false),int(64))[1084943] "temp"
      (1182936 call getView[1144460] this[1781509] region[1781511] ret_tmp[1807775])
      (1807778 'move' call_tmp[1182931] ret_tmp[1807775])
      const-val tmp[1182939]:(range(int(64),bounded,false),int(64))[1084943] "dead at end of block" "const" "insert auto destroy" "temp"
      (1182941 'move' tmp[1182939] call_tmp[1182931])
      1
      ref call_tmp[1182949]:_ref(range(int(64),bounded,false))[1026877] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1182951 'move' call_tmp[1182949](1184093 '.' tmp[1182939] x0[1084939]))
      const-val view[1182956]:range(int(64),bounded,false)[1026833] "dead at end of block" "const" "insert auto destroy"
      (1182958 'move' view[1182956](1184096 'deref' call_tmp[1182949]))
      const-val call_tmp[1182962]:int(64)[13] "dead at end of block" "maybe param" "temp"
      (1182964 'move' call_tmp[1182962](1182967 call size[1035808] view[1182956]))
      const-val thisLen[1182970]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      (1182972 'move' thisLen[1182970] call_tmp[1182962])
      {
        const-val call_tmp[1183415]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1183417 'move' call_tmp[1183415](1183420 call ==[435666] nLen[1182925] 0))
        const-val call_tmp[1183423]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1183425 'move' call_tmp[1183423] call_tmp[1183415])
        if call_tmp[1183423]
        {
          {
            (1183449 call =[435365] localRet[1182910] -1)
          }
        }
      }
      const-val call_tmp[1183504]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1183506 'move' call_tmp[1183504](1183509 call >[437710] nLen[1182925] thisLen[1182970]))
      const-val call_tmp[1183512]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1183514 'move' call_tmp[1183512] call_tmp[1183504])
      if call_tmp[1183512]
      {
        (1183529 call =[435365] localRet[1182910] -1)
      }
      const-val call_tmp[1183542]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1183544 'move' call_tmp[1183542](1183547 call ==[435666] localRet[1182910] -2))
      const-val call_tmp[1183550]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1183552 'move' call_tmp[1183550] call_tmp[1183542])
      if call_tmp[1183550]
      {
        (1183567 call =[435365] localRet[1182910] -1)
        const-val call_tmp[1183572]:string[26] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[1802966]:string[26] "temp"
        (1183580 call localize[32889] needle[2049666] ret_tmp[1802966])
        (1802969 'move' call_tmp[1183572] ret_tmp[1802966])
        const localNeedle[1183581]:string[26] "dead at end of block" "const" "insert auto destroy"
        (1183583 'move' localNeedle[1183581] call_tmp[1183572])
        const-val call_tmp[1183588]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (1183590 'move' call_tmp[1183588](1183593 call -[440454] thisLen[1182970] nLen[1182925]))
        const-val call_tmp[1183596]:int(64)[13] "dead at end of block" "maybe param" "temp"
        (1183598 'move' call_tmp[1183596](1183601 call +[949685] call_tmp[1183588]))
        const-val numPossible[1183604]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        (1183606 'move' numPossible[1183604] call_tmp[1183596])
        const-val searchSpace[1183610]:range(int(64),bounded,false)[1026833] "dead at end of block" "const" "insert auto destroy"
        const-val tmp[1183612]:range(int(64),bounded,false)[1026833] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        const-val tmp[1183623]:range(int(64),bounded,false)[1026833] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1183625]:range(int(64),boundedLow,false)[1087584] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1806892]:range(int(64),boundedLow,false)[1087584] "temp"
        (1183630 call chpl_build_low_bounded_range[1086977] 0 ret_tmp[1806892])
        (1806895 'move' call_tmp[1183625] ret_tmp[1806892])
        const-val ret_tmp[1806988]:range(int(64),bounded,false)[1026833] "temp"
        (1183635 call #[1087944] call_tmp[1183625] numPossible[1183604] ret_tmp[1806988])
        (1806991 'move' tmp[1183623] ret_tmp[1806988])
        (1183638 'move' tmp[1183612] tmp[1183623])
        (1183680 'move' searchSpace[1183610] tmp[1183612])
        {
          val _indexOfInterest[1183689]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1183691]:_ic_these_range_int64_t_bounded_F[1096722] "dead at end of block" "expr temp" "temp"
          (1183693 'move' _iterator[1183691](1183696 call _getIterator[1095339] searchSpace[1183610]))
          {
            val ret[1884705]:_ir_these_range_int64_t_bounded_F[1096728] "dead after last mention" "RVV" "temp"
            const-val _return_tmp_[1884707]:bool[10] "dead after last mention" "temp"
            const-val this[1885008]:range(int(64),bounded,false)[1026833] "temp"
            (1885013 'move' this[1885008](1885010 '.v' _iterator[1183691] F0_this[1980749]))
            (1884709 'move' _return_tmp_[1884707](1884712 call checkIfIterWillOverflow[1095833] this[1885008] 1))
            val i[1884715]:int(64)[13] "dead at end of block" "insert auto destroy"
            val call_tmp[1884717]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (1884719 'move' i[1884715] 0)
            ref call_tmp[1884722]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[1885015]:range(int(64),bounded,false)[1026833] "temp"
            (1885020 'move' this[1885015](1885017 '.v' _iterator[1183691] F0_this[1980749]))
            (1884724 'move' call_tmp[1884722](1884727 call _low[1028471] this[1885015]))
            const-val start[1884729]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1884731]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1884733 'move' coerce_tmp[1884731](1884735 'deref' call_tmp[1884722]))
            (1884737 '=' start[1884729] coerce_tmp[1884731])
            (1884740 'noop')
            ref call_tmp[1884741]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[1885022]:range(int(64),bounded,false)[1026833] "temp"
            (1885027 'move' this[1885022](1885024 '.v' _iterator[1183691] F0_this[1980749]))
            (1884743 'move' call_tmp[1884741](1884746 call _high[1028679] this[1885022]))
            const end[1884748]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1884750]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1884752 'move' coerce_tmp[1884750](1884754 'deref' call_tmp[1884741]))
            (1884756 '=' end[1884748] coerce_tmp[1884750])
            (1884759 'noop')
            CForLoop[1884760] hazard
            {
              const-val yret[1884775]:int(64)[13] "dead after last mention" "YVV" "temp"
              const-val call_tmp[1884777]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val this[1885029]:range(int(64),bounded,false)[1026833] "temp"
              (1885034 'move' this[1885029](1885031 '.v' _iterator[1183691] F0_this[1980749]))
              (1884779 'move' call_tmp[1884777](1884782 call chpl_intToIdx[1028499] this[1885029] i[1884715]))
              (1884785 'move' yret[1884775] call_tmp[1884777])
              const-val _yieldedIndex[1884799]:int(64)[13] "temp"
              (1885006 'move' _yieldedIndex[1884799] call_tmp[1884777])
              {
                const-val i[1884801]:int(64)[13] "const" "index var" "insert auto destroy"
                (1884803 'move' i[1884801] _yieldedIndex[1884799])
                {
                  {
                    val _indexOfInterest[1884808]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    val _iterator[1884810]:_ic_chpl_direct_counted_range_iter[1103809] "dead at end of block" "expr temp" "temp"
                    const-val call_tmp[1884812]:_ir_chpl_direct_counted_range_iter[1103815] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val ret_tmp[1884814]:_ir_chpl_direct_counted_range_iter[1103815] "temp"
                    (1884817 call chpl_direct_counted_range_iter[458034] 0 nLen[1182925] ret_tmp[1884814])
                    (1884821 'move' call_tmp[1884812] ret_tmp[1884814])
                    (1884824 'move' _iterator[1884810](1884827 call _getIterator[1103824] call_tmp[1884812]))
                    {
                      val ret[1941500]:_ir_chpl_direct_counted_range_iter[1103815] "dead after last mention" "RVV" "temp"
                      val _indexOfInterest[1941502]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      val _iterator[1941504]:_ic_chpl_direct_counted_range_iter_helper[1103559] "dead at end of block" "expr temp" "temp"
                      const-val call_tmp[1941506]:_ir_chpl_direct_counted_range_iter_helper[1103565] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val ret_tmp[1941508]:_ir_chpl_direct_counted_range_iter_helper[1103565] "temp"
                      const-val low[1942100]:int(64)[13] "temp"
                      (1942105 'move' low[1942100](1942102 '.v' _iterator[1884810] F0_low[1976900]))
                      const-val count[1942107]:int(64)[13] "temp"
                      (1942112 'move' count[1942107](1942109 '.v' _iterator[1884810] F1_count[1976904]))
                      (1941511 call chpl_direct_counted_range_iter_helper[1102117] low[1942100] count[1942107] ret_tmp[1941508])
                      (1941515 'move' call_tmp[1941506] ret_tmp[1941508])
                      (1941518 'move' _iterator[1941504](1941521 call _getIterator[1103574] call_tmp[1941506]))
                      {
                        val ret[1941524]:_ir_chpl_direct_counted_range_iter_helper[1103565] "dead after last mention" "RVV" "temp"
                        val call_tmp[1941526]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                        const-val tmp[1941528]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        const-val tmp[1941530]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                        const-val call_tmp[1941532]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val count[1941534]:int(64)[13] "temp"
                        (1941536 'move' count[1941534](1941538 '.v' _iterator[1941504] F1_count[1981376]))
                        (1941541 'move' call_tmp[1941532](1941544 call <[948417] count[1941534]))
                        (1941546 'move' tmp[1941530] call_tmp[1941532])
                        (1941549 'move' tmp[1941528] call_tmp[1941532])
                        const-val call_tmp[1941552]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1941554 'move' call_tmp[1941552] call_tmp[1941532])
                        if call_tmp[1941532]
                        {
                          (1941560 call boundsCheckHalt[210185] "With a negative count, the range must have a last index.")
                        }
                        const-val tmp[1941563]:2*int(64)[1040075] "dead at end of block" "const" "insert auto destroy" "temp"
                        val tmp[1941565]:2*int(64)[1040075] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                        const-val tmp[1941567]:bool[10] "dead after last mention" "maybe param" "temp"
                        const-val call_tmp[1941569]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val count[1941571]:int(64)[13] "temp"
                        (1941573 'move' count[1941571](1941575 '.v' _iterator[1941504] F1_count[1981376]))
                        (1941578 'move' call_tmp[1941569](1941581 call ==[435666] count[1941571] 0))
                        (1941584 'move' tmp[1941567] call_tmp[1941569])
                        if call_tmp[1941569]
                        {
                          const-val tmp[1941589]:2*int(64)[1040075] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                          val call_tmp[1941591]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                          const-val call_tmp[1941593]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val low[1941595]:int(64)[13] "temp"
                          (1941597 'move' low[1941595](1941599 '.v' _iterator[1941504] F0_low[1981372]))
                          (1941602 'move' call_tmp[1941593](1941605 call _cast[956053] low[1941595]))
                          const-val call_tmp[1941607]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val coerce_tmp[1941609]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                          (1941611 'move' coerce_tmp[1941609](1941613 'cast' uint(64)[115] 1))
                          (1941616 'move' call_tmp[1941607](1941619 call -[962212] call_tmp[1941593]))
                          const-val call_tmp[1941621]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          (1941623 'move' call_tmp[1941621](1941626 call _cast[953562] call_tmp[1941607]))
                          const-val ret_tmp[1941628]:2*int(64)[1040075] "temp"
                          const-val low[1941630]:int(64)[13] "temp"
                          (1941632 'move' low[1941630](1941634 '.v' _iterator[1941504] F0_low[1981372]))
                          (1941638 call _build_tuple[1040033] low[1941630] call_tmp[1941621] ret_tmp[1941628])
                          (1941642 'move' tmp[1941589] ret_tmp[1941628])
                          (1941645 'move' tmp[1941565] tmp[1941589])
                        }
                        {
                          const-val tmp[1941649]:2*int(64)[1040075] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                          val call_tmp[1941651]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val call_tmp[1941653]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val count[1941655]:int(64)[13] "temp"
                          (1941657 'move' count[1941655](1941659 '.v' _iterator[1941504] F1_count[1981376]))
                          (1941662 'move' call_tmp[1941653] count[1941655])
                          const-val call_tmp[1941665]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val count[1941667]:int(64)[13] "temp"
                          (1941669 'move' count[1941667](1941671 '.v' _iterator[1941504] F1_count[1981376]))
                          (1941674 'move' call_tmp[1941665](1941677 call -[962245] count[1941667]))
                          const-val call_tmp[1941679]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val low[1941681]:int(64)[13] "temp"
                          (1941683 'move' low[1941681](1941685 '.v' _iterator[1941504] F0_low[1981372]))
                          (1941688 'move' call_tmp[1941679](1941691 call +[439674] low[1941681] call_tmp[1941665]))
                          const-val ret_tmp[1941694]:2*int(64)[1040075] "temp"
                          const-val low[1941696]:int(64)[13] "temp"
                          (1941698 'move' low[1941696](1941700 '.v' _iterator[1941504] F0_low[1981372]))
                          (1941704 call _build_tuple[1040033] low[1941696] call_tmp[1941679] ret_tmp[1941694])
                          (1941708 'move' tmp[1941649] ret_tmp[1941694])
                          (1941711 'move' tmp[1941565] tmp[1941649])
                        }
                        (1941715 '=' tmp[1941563] tmp[1941565])
                        (1941718 'noop')
                        1
                        ref call_tmp[1941720]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
                        (1941722 'move' call_tmp[1941720](1941724 '.' tmp[1941563] x0[1040071]))
                        const-val start[1941727]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                        const-val coerce_tmp[1941729]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                        (1941731 'move' coerce_tmp[1941729](1941733 'deref' call_tmp[1941720]))
                        (1941735 '=' start[1941727] coerce_tmp[1941729])
                        (1941738 'noop')
                        ref call_tmp[1941739]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
                        (1941741 'move' call_tmp[1941739](1941743 '.' tmp[1941563] x1[1040073]))
                        const-val end[1941746]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                        const-val coerce_tmp[1941748]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                        (1941750 'move' coerce_tmp[1941748](1941752 'deref' call_tmp[1941739]))
                        (1941754 '=' end[1941746] coerce_tmp[1941748])
                        (1941757 'noop')
                        val _indexOfInterest[1941758]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                        val _iterator[1941760]:_ic_chpl_direct_param_stride_range_iter[1103305] "dead at end of block" "expr temp" "temp"
                        const-val call_tmp[1941762]:_ir_chpl_direct_param_stride_range_iter[1103311] "dead at end of block" "expr temp" "maybe param" "temp"
                        const-val ret_tmp[1941764]:_ir_chpl_direct_param_stride_range_iter[1103311] "temp"
                        (1941767 call chpl_direct_param_stride_range_iter[1102543] coerce_tmp[1941729] coerce_tmp[1941748] ret_tmp[1941764])
                        (1941771 'move' call_tmp[1941762] ret_tmp[1941764])
                        (1941774 'move' _iterator[1941760](1941777 call _getIterator[1103320] call_tmp[1941762]))
                        {
                          val ret[1941780]:_ir_chpl_direct_param_stride_range_iter[1103311] "dead after last mention" "RVV" "temp"
                          val call_tmp[1941782]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (1941785 call chpl_range_check_stride[1102863])
                          val i[1941786]:int(64)[13] "dead at end of block" "insert auto destroy"
                          val call_tmp[1941788]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (1941790 'move' i[1941786] 0)
                          val call_tmp[1941793]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val default_arg_first[1941795]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                          const-val low[1941797]:int(64)[13] "temp"
                          (1941799 'move' low[1941797](1941801 '.v' _iterator[1941760] F0_low[1982870]))
                          (1941804 'move' default_arg_first[1941795](1941807 call chpl_checkIfRangeIterWillOverflow_default_first[1103217] low[1941797]))
                          const-val default_arg_last[1941809]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                          const-val high[1941811]:int(64)[13] "temp"
                          (1941813 'move' high[1941811](1941815 '.v' _iterator[1941760] F1_high[1982874]))
                          (1941818 'move' default_arg_last[1941809](1941821 call chpl_checkIfRangeIterWillOverflow_default_last[1103245] high[1941811]))
                          const-val _return_tmp_[1941823]:bool[10] "dead after last mention" "temp"
                          const-val low[1941825]:int(64)[13] "temp"
                          (1941827 'move' low[1941825](1941829 '.v' _iterator[1941760] F0_low[1982870]))
                          const-val high[1941832]:int(64)[13] "temp"
                          (1941834 'move' high[1941832](1941836 '.v' _iterator[1941760] F1_high[1982874]))
                          (1941839 'move' _return_tmp_[1941823](1941842 call chpl_checkIfRangeIterWillOverflow[1096095] low[1941825] high[1941832] 1 default_arg_first[1941795] default_arg_last[1941809] 1))
                          CForLoop[1941849]
                          {
                            const-val yret[1941878]:int(64)[13] "dead after last mention" "YVV" "temp"
                            (1941880 'move' yret[1941878] i[1941786])
                            const-val _yieldedIndex[1941883]:int(64)[13] "temp"
                            (1941885 'move' _yieldedIndex[1941883] i[1941786])
                            {
                              const-val i[1941889]:int(64)[13] "const" "index var" "insert auto destroy"
                              (1941891 'move' i[1941889] _yieldedIndex[1941883])
                              const-val yret[1941894]:int(64)[13] "dead after last mention" "YVV" "temp"
                              (1941896 'move' yret[1941894] _yieldedIndex[1941883])
                              const-val _yieldedIndex[1941899]:int(64)[13] "temp"
                              (1941901 'move' _yieldedIndex[1941899] _yieldedIndex[1941883])
                              {
                                const-val i[1941905]:int(64)[13] "const" "index var" "insert auto destroy"
                                (1941907 'move' i[1941905] _yieldedIndex[1941899])
                                const-val yret[1941910]:int(64)[13] "dead after last mention" "YVV" "temp"
                                (1941912 'move' yret[1941910] _yieldedIndex[1941899])
                                const-val _yieldedIndex[1941948]:int(64)[13] "temp"
                                (1942098 'move' _yieldedIndex[1941948] _yieldedIndex[1941899])
                                {
                                  const-val j[1941950]:int(64)[13] "const" "index var" "insert auto destroy"
                                  (1941952 'move' j[1941950] _yieldedIndex[1941948])
                                  {
                                    const-val call_tmp[1941956]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                    (1941958 'move' call_tmp[1941956](1941961 call +[439674] i[1884801] j[1941950]))
                                    const-val call_tmp[1941964]:int(64)[13] "dead at end of block" "maybe param" "temp"
                                    (1941966 'move' call_tmp[1941964](1941969 call orderToIndex[1104059] view[1182956] call_tmp[1941956]))
                                    const-val idx[1941972]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                    (1941974 'move' idx[1941972] call_tmp[1941964])
                                    ref call_tmp[1941977]:_ref(uint(8))[936927] "dead after last mention" "maybe param" "temp"
                                    ref _this_tmp_[1941979]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "temp"
                                    (1941981 'move' _this_tmp_[1941979](1941984 call buff[757983] this[1781509]))
                                    val coerce_tmp[1941986]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1941988 'move' coerce_tmp[1941986](1941990 'deref' _this_tmp_[1941979]))
                                    (1941992 'move' call_tmp[1941977](1941995 call this[954110] coerce_tmp[1941986] idx[1941972]))
                                    ref call_tmp[1941998]:_ref(uint(8))[936927] "dead after last mention" "maybe param" "temp"
                                    ref _this_tmp_[1942000]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "reference to a const" "temp"
                                    (1942002 'move' _this_tmp_[1942000](1942005 call buff[757983] localNeedle[1183581]))
                                    val coerce_tmp[1942007]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1942009 'move' coerce_tmp[1942007](1942011 'deref' _this_tmp_[1942000]))
                                    (1942013 'move' call_tmp[1941998](1942016 call this[954110] coerce_tmp[1942007] j[1941950]))
                                    const-val call_tmp[1942019]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    const-val coerce_tmp[1942021]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1942023 'move' coerce_tmp[1942021](1942025 'deref' call_tmp[1941977]))
                                    const-val coerce_tmp[1942027]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1942029 'move' coerce_tmp[1942027](1942031 'deref' call_tmp[1941998]))
                                    (1942033 'move' call_tmp[1942019](1942036 call !=[436072] coerce_tmp[1942021] coerce_tmp[1942027]))
                                    const-val call_tmp[1942039]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1942041 'move' call_tmp[1942039] call_tmp[1942019])
                                    if call_tmp[1942039]
                                    {
                                      (1942089 call _freeIterator[1103493] _iterator[1941760])
                                      (1942092 call chpl__autoDestroy[1508492] tmp[1941563])
                                      (1942095 call _freeIterator[1103743] _iterator[1941504])
                                      break _breakLabel[1884969] _breakLabel[1884969]
                                    }
                                    const-val call_tmp[1942049]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1942051 'move' call_tmp[1942049](1942054 call -[962245] nLen[1182925]))
                                    const-val call_tmp[1942056]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1942058 'move' call_tmp[1942056](1942061 call ==[435666] j[1941950] call_tmp[1942049]))
                                    const-val call_tmp[1942064]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1942066 'move' call_tmp[1942064] call_tmp[1942056])
                                    if call_tmp[1942064]
                                    {
                                      {
                                        const-val call_tmp[1942072]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                                        (1942074 'move' call_tmp[1942072](1942077 call orderToIndex[1104059] view[1182956] i[1884801]))
                                        (1942081 call =[435365] localRet[1182910] call_tmp[1942072])
                                      }
                                    }
                                  }
                                  label _continueLabel[1942085]
                                }
                              }
                            }
                            {
                              const-val low[1941851]:int(64)[13] "temp"
                              (1941853 'move' low[1941851](1941855 '.v' _iterator[1941760] F0_low[1982870]))
                              (1941858 '=' i[1941786] low[1941851])
                            }
                            {
                              const-val high[1941862]:int(64)[13] "temp"
                              (1941864 'move' high[1941862](1941866 '.v' _iterator[1941760] F1_high[1982874]))
                              (1941869 '<=' i[1941786] high[1941862])
                            }
                            {
                              val call_tmp[1941873]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                              (1941875 '+=' i[1941786] 1)
                            }
                          }
                          label _endchpl_direct_param_stride_range_iter[1941931]
                        }
                        (1941934 call _freeIterator[1103493] _iterator[1941760])
                        (1941937 call chpl__autoDestroy[1508492] tmp[1941563])
                        label _endchpl_direct_counted_range_iter_helper[1941939]
                      }
                      (1941942 call _freeIterator[1103743] _iterator[1941504])
                      label _endchpl_direct_counted_range_iter[1941944]
                    }
                    label _breakLabel[1884969]
                    (1884972 call _freeIterator[1103993] _iterator[1884810])
                  }
                  const-val tmp[1884974]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  const-val tmp[1884976]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  const-val call_tmp[1884978]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1884980 'move' call_tmp[1884978](1884983 call !=[436050] localRet[1182910] -1))
                  (1884986 'move' tmp[1884976] call_tmp[1884978])
                  (1884989 'move' tmp[1884974] tmp[1884976])
                  const-val call_tmp[1884992]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1884994 'move' call_tmp[1884992] tmp[1884974])
                  if call_tmp[1884992]
                  {
                    break _breakLabel[1183980] _breakLabel[1183980]
                  }
                }
                label _continueLabel[1885002]
              }
              {
                (1884762 '=' i[1884715] coerce_tmp[1884731])
              }
              {
                (1884766 '<=' i[1884715] end[1884748])
              }
              {
                val call_tmp[1884770]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (1884772 '+=' i[1884715] 1)
              }
            }
            label _endthese[1884795]
          }
          label _breakLabel[1183980]
          (1820161 call _freeIterator[1102025] _iterator[1183691])
        }
        (1820164 call chpl__autoDestroy[1508195] searchSpace[1183610])
        (1820167 call chpl__autoDestroy[1514564] call_tmp[1183625])
        (1820170 call chpl__autoDestroy[1435320] localNeedle[1183581])
      }
      (1184000 call =[435365] ret[1781513] localRet[1182910])
      (1820174 call chpl__autoDestroy[1508195] view[1182956])
      (1820177 call chpl__autoDestroy[1514519] tmp[1182939])
    }
    (2049683 call chpl__autoDestroy[1435507] needle[1781507])
    (2049686 call chpl__autoDestroy[1435320] needle[2049665])
    (1184006 return _void[55])
  }
  function wrapon_fn[2050921](const in arg dummy_locale_arg[2050923]:chpl_localeID_t[209352], in arg buf[2050925]:c_void_ptr[149], in arg buf_size[2050927]:int(64)[13], in arg c[2050929]:_class_localson_fn[2050881]) : void[4] "on block"
  {
    val _0_tmp[2050934]:chpl_localeID_t[209352] "temp"
    (2050939 'move' _0_tmp[2050934](2050936 '.v' c[2050929] _0_tmp[2050884]))
    ref _1_this[2050941]:string[26] "temp"
    (2050946 'move' _1_this[2050941](2050943 '.v' c[2050929] _1_this[2050886]))
    (2050932 call on_fn[933805] _1_this[2050941])
    (2050949 return _void[55])
  }
  function wrapon_fn[2051025](const in arg dummy_locale_arg[2051027]:chpl_localeID_t[209352], in arg buf[2051029]:c_void_ptr[149], in arg buf_size[2051031]:int(64)[13], in arg c[2051033]:_class_localson_fn[2050973]) : void[4] "on block"
  {
    val _0_tmp[2051038]:chpl_localeID_t[209352] "temp"
    (2051043 'move' _0_tmp[2051038](2051040 '.v' c[2051033] _0_tmp[2050976]))
    ref _1_this[2051045]:string[26] "temp"
    (2051050 'move' _1_this[2051045](2051047 '.v' c[2051033] _1_this[2050978]))
    ref _2_result[2051053]:bool[10] "temp"
    (2051058 'move' _2_result[2051053](2051055 '.v' c[2051033] _2_result[2050980]))
    (2051036 call on_fn[933841] _1_this[2051045] _2_result[2051053])
    (2051061 return _void[55])
  }
  function wrapon_fn[2056476](const in arg dummy_locale_arg[2056478]:chpl_localeID_t[209352], in arg buf[2056480]:c_void_ptr[149], in arg buf_size[2056482]:int(64)[13], in arg c[2056484]:_class_localson_fn[2056412]) : void[4] "on block"
  {
    val _0_tmp[2056489]:chpl_localeID_t[209352] "temp"
    (2056494 'move' _0_tmp[2056489](2056491 '.v' c[2056484] _0_tmp[2056415]))
    val _1_needle_data[2056496]:__serializeHelper[28089] "temp"
    (2056501 'move' _1_needle_data[2056496](2056498 '.v' c[2056484] _1_needle_data[2056417]))
    ref _2_this[2056504]:string[26] "temp"
    (2056509 'move' _2_this[2056504](2056506 '.v' c[2056484] _2_this[2056419]))
    val _3_region[2056512]:range(byteIndex,bounded,false)[1025811] "temp"
    (2056517 'move' _3_region[2056512](2056514 '.v' c[2056484] _3_region[2056421]))
    ref _4_ret[2056520]:int(64)[13] "temp"
    (2056525 'move' _4_ret[2056520](2056522 '.v' c[2056484] _4_ret[2056423]))
    (2056487 call on_fn[1106201] _1_needle_data[2056496] _2_this[2056504] _3_region[2056512] _4_ret[2056520])
    (2056528 return _void[55])
  }
  function wrapon_fn[2057044](const in arg dummy_locale_arg[2057046]:chpl_localeID_t[209352], in arg buf[2057048]:c_void_ptr[149], in arg buf_size[2057050]:int(64)[13], in arg c[2057052]:_class_localson_fn[2056980]) : void[4] "on block"
  {
    val _0_tmp[2057057]:chpl_localeID_t[209352] "temp"
    (2057062 'move' _0_tmp[2057057](2057059 '.v' c[2057052] _0_tmp[2056983]))
    val _1_needle_data[2057064]:__serializeHelper[28089] "temp"
    (2057069 'move' _1_needle_data[2057064](2057066 '.v' c[2057052] _1_needle_data[2056985]))
    ref _2_this[2057072]:string[26] "temp"
    (2057077 'move' _2_this[2057072](2057074 '.v' c[2057052] _2_this[2056987]))
    val _3_region[2057080]:range(byteIndex,boundedLow,false)[1143422] "temp"
    (2057085 'move' _3_region[2057080](2057082 '.v' c[2057052] _3_region[2056989]))
    ref _4_ret[2057088]:int(64)[13] "temp"
    (2057093 'move' _4_ret[2057088](2057090 '.v' c[2057052] _4_ret[2056991]))
    (2057055 call on_fn[1182897] _1_needle_data[2057064] _2_this[2057072] _3_region[2057080] _4_ret[2057088])
    (2057096 return _void[55])
  }
}