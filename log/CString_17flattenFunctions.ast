AST dump for CString after pass flattenFunctions.
Module use list: ChapelStandard SysCTypes 

{
  function chpl__init_CString[416028]() : void[4] "insert line file info" "module init" "resolved"
  {
    (501926 return _void[55])
  }
  function chpl__initCopy[21698](const in arg x[21695]:c_string[19]) : c_string[19] "init copy fn" "inline" "resolved"
  {
    val ret[501659]:c_string[19] "dead after last mention" "RVV" "temp"
    (964657 'move' ret[501659] x[21695])
    (501661 return ret[501659])
  }
  function chpl__autoCopy[21714](const in arg x[21711]:c_string[19]) : c_string[19] "auto copy fn" "inline" "resolved"
  {
    val ret[501669]:c_string[19] "dead after last mention" "RVV" "temp"
    (959703 'move' ret[501669] x[21711])
    (501671 return ret[501669])
  }
  function ==[21730](const in arg s0[21727]:c_string[19], const in arg s1[21733]:c_string[19]) : bool[10] "inline" "resolved"
  {
    val ret[501679]:bool[10] "dead after last mention" "RVV" "temp"
    val call_tmp[595300]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (595303 'move' call_tmp[595300](21756 'string_compare' s0[21727] s1[21733]))
    val call_tmp[595305]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (595308 'move' call_tmp[595305](21758 call ==[435744] call_tmp[595300] 0))
    (501684 'move' ret[501679] call_tmp[595305])
    (501681 return ret[501679])
  }
  function !=[21771](const in arg s0[21768]:c_string[19], const in arg s1[21774]:c_string[19]) : bool[10] "inline" "resolved"
  {
    val ret[501688]:bool[10] "dead after last mention" "RVV" "temp"
    val call_tmp[595310]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (595313 'move' call_tmp[595310](21781 'string_compare' s0[21768] s1[21774]))
    val call_tmp[595315]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (595318 'move' call_tmp[595315](21783 call !=[436128] call_tmp[595310] 0))
    (501693 'move' ret[501688] call_tmp[595315])
    (501690 return ret[501688])
  }
  function =[21896](ref arg a[21893]:_ref(c_string)[937416], const in arg b[21899]:c_string[19]) : void[4] "assignop" "inline" "resolved" "no return value for void"
  {
    (21906 '=' a[21893] b[21899])
    (501731 return _void[55])
  }
  function =[21917](ref arg a[21914]:_ref(c_string)[937416], const in arg b[21920]:nil[42]) : void[4] "assignop" "inline" "resolved" "no return value for void"
  {
    val call_tmp[595360]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (595363 'move' call_tmp[595360](368955 call c_nil[205006]))
    val call_tmp[595365]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (595368 'move' call_tmp[595365](21926 call _cast[22012] call_tmp[595360]))
    (21928 call =[21896] a[21914] call_tmp[595365])
    (501733 return _void[55])
  }
  function _cast[22012](const in arg x[22015]:c_void_ptr[149]) : c_string[19] "inline" "resolved"
  {
    val _formal_type_tmp_[1879480]:c_string[19] "temp"
    val ret[501757]:c_string[19] "dead after last mention" "RVV" "temp"
    val call_tmp[595387]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (595390 'move' call_tmp[595387](22022 'cast' c_string[19] x[22015]))
    (501762 'move' ret[501757] call_tmp[595387])
    (501759 return ret[501757])
  }
  function _cast[957995](const in arg x[957999]:c_ptr(uint(8))[937612]) : c_string[19] "inline" "instantiated generic" "invisible fn" "resolved"
  {
    val _formal_type_tmp_[1879546]:c_string[19] "temp"
    val ret[958172]:c_string[19] "dead after last mention" "RVV" "temp"
    val call_tmp[964638]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (964640 'move' call_tmp[964638](964642 'cast' c_string[19] x[957999]))
    (964645 'move' ret[958172] call_tmp[964638])
    (964649 return ret[958172])
  }
  function c_string[19].size[22361](const in arg this[22363]:c_string[19]) : int(64)[13] "inline" "method" "no parens" "resolved"
  {
    val ret[501839]:int(64)[13] "dead after last mention" "RVV" "temp"
    val call_tmp[595609]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (595612 'move' call_tmp[595609](22387 'string_length_bytes' this[22363]))
    (501844 'move' ret[501839] call_tmp[595609])
    (501841 return ret[501839])
  }
  function chpl_free_c_string[22709](ref arg cs[22706]:_ref(c_string)[937416]) : void[4] "inline" "resolved" "no return value for void"
  {
    val call_tmp[595699]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (595702 'move' call_tmp[595699](369029 call c_nil[205006]))
    val call_tmp[595704]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (595707 'move' call_tmp[595704](22725 call _cast[22012] call_tmp[595699]))
    val call_tmp[595709]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1019333]:c_string[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1019337 'move' coerce_tmp[1019333](1019335 'deref' cs[22706]))
    (595712 'move' call_tmp[595709](22727 call !=[21771] coerce_tmp[1019333] call_tmp[595704]))
    val call_tmp[595714]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (595717 'move' call_tmp[595714] call_tmp[595709])
    if call_tmp[595714]
    {
      (22732 call chpl_rt_free_c_string[22717] cs[22706])
    }
    (501920 return _void[55])
  }
  function chpl_rt_free_c_string[22717](ref arg cs[22714]:_ref(c_string)[937416]) : void[4] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    (501918 return _void[55])
  }
}