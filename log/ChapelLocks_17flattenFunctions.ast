AST dump for ChapelLocks after pass flattenFunctions.
Module use list: Atomics ChapelBase MemConsistency 

{
  function chpl__init_ChapelLocks[416047]() : void[4] "insert line file info" "module init" "resolved"
  {
    (524012 return _void[55])
  }
  function _ref(chpl_LocalSpinlock)[941071].lock[187277](const?  ref arg this[187388]:_ref(chpl_LocalSpinlock)[941071]) : void[4] "inline" "method" "primary method" "resolved" "no return value for void"
  {
    const tmp[187356]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    val call_tmp[690481]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    (690484 'move' call_tmp[690481](187353 '_wide_get_locale' this[187388]))
    (187358 'move' tmp[187356] call_tmp[690481])
    (935477 call on_fn[935473] tmp[187356] this[187388])
    {
    }
    (524008 return _void[55])
  }
  function _ref(chpl_LocalSpinlock)[941071].unlock[187369](const?  ref arg this[187392]:_ref(chpl_LocalSpinlock)[941071]) : void[4] "inline" "method" "primary method" "resolved" "no return value for void"
  {
    ref call_tmp[690554]:_ref(AtomicBool)[941182] "dead after last mention" "maybe param" "temp"
    (690557 'move' call_tmp[690554](361891 call l[820295] this[187392]))
    (187380 call clear[1232495] call_tmp[690554])
    (524010 return _void[55])
  }
  function _ref(chpl_LocalSpinlock)[941071].l[820295](ref arg this[820299]:_ref(chpl_LocalSpinlock)[941071]) ref : _ref(AtomicBool)[941182] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[820309]:_ref(AtomicBool)[941182] "dead after last mention" "RVV" "temp"
    ref call_tmp[820316]:_ref(AtomicBool)[941182] "dead after last mention" "maybe param" "temp"
    (820319 'move' call_tmp[820316](820303 '.' this[820299] l[187271]))
    (820314 'move' ret[820309] call_tmp[820316])
    (820311 return ret[820309])
  }
  function _ref(chpl_LocalSpinlock)[941071].init[820321](ref arg this[820324]:_ref(chpl_LocalSpinlock)[941071], ref arg l[820327]:AtomicBool[45874]) : void[4] "compiler generated" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_tmp_l[945155]:AtomicBool[45874] "dead at end of block" "no auto destroy" "no copy" "temp"
    (945158 'move' _formal_tmp_l[945155] l[820327])
    (820343 '.=' this[820324] l[187271] _formal_tmp_l[945155])
    (820347 return _void[55])
  }
  function init_default_l[944828]() : AtomicBool[45874] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[944830]:AtomicBool[45874] "dead after last mention" "RVV" "maybe param" "temp"
    val l[944835]:AtomicBool[45874] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val _formal_type[944837]:AtomicBool[45874] "dead after last mention" "temp" "type variable"
    (944852 call init[44785] l[944835])
    (944848 'move' ret[944830] l[944835])
    (944833 return ret[944830])
  }
  function _ref(chpl_LocalSpinlock)[941071].init=[820349](ref arg this[820353]:_ref(chpl_LocalSpinlock)[941071], ref arg other[820354]:chpl_LocalSpinlock[187386]) : void[4] "compiler generated" "copy initializer" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    ref call_tmp[820384]:_ref(AtomicBool)[941182] "dead after last mention" "insert auto destroy" "maybe param" "temp"
    (820387 'move' call_tmp[820384](820362 call l[820295] other[820354]))
    val call_tmp[820389]:AtomicBool[45874] "dead after last mention" "maybe param" "temp" "type variable"
    val tmp[820368]:AtomicBool[45874] "dead after last mention" "temp"
    (820373 call init=[44813] tmp[820368] call_tmp[820384])
    (820375 '.=' this[820353] l[187271] tmp[820368])
    (820379 'end of statement')
    (820380 return _void[55])
  }
  function _ref(chpl_LocalSpinlock)[941071].deinit[820394](const?  ref arg this[820398]:_ref(chpl_LocalSpinlock)[941071]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved"
  {
    (820406 return _void[55])
  }
  type chpl_LocalSpinlock[187386] val l[187271]:AtomicBool[45874]
  function on_fn[935473](const in arg dummy_locale_arg[935475]:chpl_localeID_t[209294], const?  ref arg this[1806908]:_ref(chpl_LocalSpinlock)[941071]) : void[4] "on" "resolved"
  {
    {
      val tmp[187302]:bool[10] "dead after last mention" "temp"
      val tmp[429525]:bool[10] "dead after last mention" "maybe param" "temp"
      ref call_tmp[690488]:_ref(AtomicBool)[941182] "dead after last mention" "maybe param" "temp"
      (690491 'move' call_tmp[690488](361880 call l[820295] this[1806908]))
      (429536 'move' tmp[429525](187340 call read[1230769] call_tmp[690488]))
      (1231643 'end of statement')
      val tmp[572077]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      val tmp[572078]:bool[10] "dead after last mention" "maybe param" "temp"
      val call_tmp[690500]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (690503 'move' call_tmp[690500] tmp[429525])
      (572083 'move' tmp[572078] call_tmp[690500])
      if tmp[572078]
      {
        (572088 'move' tmp[572077] 1)
      }
      {
        val tmp[572090]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        ref call_tmp[690507]:_ref(AtomicBool)[941182] "dead after last mention" "maybe param" "temp"
        (690510 'move' call_tmp[690507](361885 call l[820295] this[1806908]))
        val call_tmp[690514]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (690517 'move' call_tmp[690514](187345 call testAndSet[1231645] call_tmp[690507]))
        (572092 'move' tmp[572090] call_tmp[690514])
        (572097 'move' tmp[572077] tmp[572090])
      }
      (187350 'move' tmp[187302] tmp[572077])
      WhileDo[187307]
      {
        (187300 call chpl_task_yield[209642])
        (484496 'end of statement')
        label _continueLabel[187305]
        val tmp[429504]:bool[10] "dead after last mention" "maybe param" "temp"
        ref call_tmp[690521]:_ref(AtomicBool)[941182] "dead after last mention" "maybe param" "temp"
        (690524 'move' call_tmp[690521](361869 call l[820295] this[1806908]))
        (429515 'move' tmp[429504](187318 call read[1230769] call_tmp[690521]))
        (1232397 'end of statement')
        val tmp[572104]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        val tmp[572105]:bool[10] "dead after last mention" "maybe param" "temp"
        val call_tmp[690533]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (690536 'move' call_tmp[690533] tmp[429504])
        (572110 'move' tmp[572105] call_tmp[690533])
        if tmp[572105]
        {
          (572115 'move' tmp[572104] 1)
        }
        {
          val tmp[572117]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
          ref call_tmp[690540]:_ref(AtomicBool)[941182] "dead after last mention" "maybe param" "temp"
          (690543 'move' call_tmp[690540](361874 call l[820295] this[1806908]))
          val call_tmp[690547]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (690550 'move' call_tmp[690547](187323 call testAndSet[1231645] call_tmp[690540]))
          (572119 'move' tmp[572117] call_tmp[690547])
          (572124 'move' tmp[572104] tmp[572117])
        }
        (187328 'move' tmp[187302] tmp[572104])
        tmp[187302]
      }
      label _breakLabel[187306]
    }
    (935480 return _void[55])
  }
}