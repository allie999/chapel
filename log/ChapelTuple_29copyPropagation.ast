AST dump for ChapelTuple after pass copyPropagation.
Module use list: ChapelStandard DSIUtil 

{
  function chpl__init_ChapelTuple[415859]() : void[4] "insert line file info" "module init" "resolved"
  {
    (508883 return _void[55])
  }
  function 57*int(64)[1210396].this[1211514](ref arg this[1211520]:57*int(64)[1210396], const in arg i[1211522]:int(64)[13]) ref : _ref(int(64))[936483] "instantiated generic" "invisible fn" "method" "no doc" "reference to const when const this" "resolved" "star tuple accessor"
  {
    const-val call_tmp[2062285]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2062287 'move' call_tmp[2062285](2062289 '<' i[1211522] 0))
    val tmp[1211591]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2062285]
    {
      (1211609 'move' tmp[1211591] 1)
    }
    {
      const-val call_tmp[2070779]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2070781 'move' call_tmp[2070779](2070783 '>' i[1211522] 56))
      (1211646 'move' tmp[1211591] call_tmp[2070779])
    }
    if tmp[1211591]
    {
      (1211662 call halt[1212163] "tuple access out of bounds: " i[1211522])
    }
    ref call_tmp[1211667]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (1211669 'move' call_tmp[1211667](1211671 'get svec member' this[1211520] i[1211522]))
    (1211678 return call_tmp[1211667])
  }
  function 1*range(int(64),bounded,false)[1244607].this[1382570](ref arg this[1382576]:1*range(int(64),bounded,false)[1244607], const in arg i[1382578]:int(64)[13]) ref : _ref(range(int(64),bounded,false))[1026769] "instantiated generic" "invisible fn" "method" "no doc" "reference to const when const this" "resolved" "fn synchronization free" "star tuple accessor"
  {
    const-val call_tmp[2062335]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2062337 'move' call_tmp[2062335](2062339 '<' i[1382578] 0))
    val tmp[1382647]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2062335]
    {
      (1382665 'move' tmp[1382647] 1)
    }
    {
      const-val call_tmp[2071139]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2071141 'move' call_tmp[2071139](2071143 '>' i[1382578] 0))
      (1382702 'move' tmp[1382647] call_tmp[2071139])
    }
    if tmp[1382647]
    {
      (1382718 call halt[1212163] "tuple access out of bounds: " i[1382578])
    }
    ref call_tmp[1382723]:range(int(64),bounded,false)[1026725] "dead after last mention" "maybe param" "temp"
    (1382725 'move' call_tmp[1382723](1382727 'get svec member' this[1382576] i[1382578]))
    (1382734 return call_tmp[1382723])
  }
  function 1*int(64)[1256436].this[1414951](ref arg this[1414957]:1*int(64)[1256436], const in arg i[1414959]:int(64)[13]) ref : _ref(int(64))[936483] "instantiated generic" "invisible fn" "method" "no doc" "reference to const when const this" "resolved" "fn synchronization free" "star tuple accessor"
  {
    const-val call_tmp[2062345]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2062347 'move' call_tmp[2062345](2062349 '<' i[1414959] 0))
    val tmp[1415028]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2062345]
    {
      (1415046 'move' tmp[1415028] 1)
    }
    {
      const-val call_tmp[2071154]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2071156 'move' call_tmp[2071154](2071158 '>' i[1414959] 0))
      (1415083 'move' tmp[1415028] call_tmp[2071154])
    }
    if tmp[1415028]
    {
      (1415099 call halt[1212163] "tuple access out of bounds: " i[1414959])
    }
    ref call_tmp[1415104]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (1415106 'move' call_tmp[1415104](1415108 'get svec member' this[1414957] i[1414959]))
    (1415115 return call_tmp[1415104])
  }
  function 1*range(int(64),bounded,false)[1244607].indices[1730315](const  ref arg this[1730321]:1*range(int(64),bounded,false)[1244607], ref arg _retArg[1797991]:range(int(64),bounded,false)[1026725]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no parens" "resolved"
  {
    const-val call_tmp[1730347]:range(int(64),bounded,false)[1026725] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1788661]:range(int(64),bounded,false)[1026725] "temp"
    (1730352 call chpl_build_bounded_range[455048] 0 0 ret_tmp[1788661])
    (1788664 'move' call_tmp[1730347] ret_tmp[1788661])
    (1797993 '=' _retArg[1797991] call_tmp[1730347])
    (1797995 return _void[55])
  }
  type (c_ptr(uint(8)),int(64))[955119] val x0[955115]:c_ptr(uint(8))[937334] val x1[955117]:int(64)[13]
  type 1*c_string[959373] val x0[959371]:c_string[19]
  type (syserr,int(32),int(32))[964531] val x0[964525]:syserr[223496] val x1[964527]:int(32)[95] val x2[964529]:int(32)[95]
  type 2*int(32)[971589] val x0[971585]:int(32)[95] val x1[971587]:int(32)[95]
  type 6*string[984962] const-ref x0[984950]:string[26] const-ref x1[984952]:string[26] const-ref x2[984954]:string[26] const-ref x3[984956]:string[26] const-ref x4[984958]:string[26] const-ref x5[984960]:string[26]
  type 6*string[985128] val x0[985116]:string[26] val x1[985118]:string[26] val x2[985120]:string[26] val x3[985122]:string[26] val x4[985124]:string[26] val x5[985126]:string[26]
  type 2*int(64)[1039967] val x0[1039963]:int(64)[13] val x1[1039965]:int(64)[13]
  type (string,range(byteIndex,bounded,false),string,int(64))[1044312] const-ref x0[1044304]:string[26] val x1[1044306]:range(byteIndex,bounded,false)[1025703] const-ref x2[1044308]:string[26] val x3[1044310]:int(64)[13]
  type 1*byteIndex[1056992] const-ref x0[1056990]:byteIndex[28170]
  type (range(int(64),bounded,false),int(64))[1084835] val x0[1084831]:range(int(64),bounded,false)[1026725] val x1[1084833]:int(64)[13]
  type (_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108477] val x0[1108473]:_ic_these_range_int64_t_bounded_F[1096614] val x1[1108475]:_ic_chpl_bytes__ref_string[1108167]
  type (int(64),uint(8))[1110951] val x0[1110947]:int(64)[13] val x1[1110949]:uint(8)[100]
  type (string,range(int(64),bounded,false),string,int(64))[1114130] const-ref x0[1114122]:string[26] val x1[1114124]:range(int(64),bounded,false)[1026725] const-ref x2[1114126]:string[26] val x3[1114128]:int(64)[13]
  type (byteIndex,int(64))[1121144] const-ref x0[1121140]:byteIndex[28170] val x1[1121142]:int(64)[13]
  type (int(32),byteIndex,int(64))[1122053] val x0[1122047]:int(32)[95] const-ref x1[1122049]:byteIndex[28170] val x2[1122051]:int(64)[13]
  type (string,range(int(64),boundedLow,false),string,int(64))[1128954] const-ref x0[1128946]:string[26] val x1[1128948]:range(int(64),boundedLow,false)[1087476] const-ref x2[1128950]:string[26] val x3[1128952]:int(64)[13]
  type (string,range(byteIndex,boundedLow,false),string,int(64))[1147125] const-ref x0[1147117]:string[26] val x1[1147119]:range(byteIndex,boundedLow,false)[1143314] const-ref x2[1147121]:string[26] val x3[1147123]:int(64)[13]
  type (string,codepointIndex,string)[1158466] const-ref x0[1158460]:string[26] const-ref x1[1158462]:codepointIndex[28274] const-ref x2[1158464]:string[26]
  type (string,codepointIndex,string,int(64))[1176431] const-ref x0[1176423]:string[26] const-ref x1[1176425]:codepointIndex[28274] const-ref x2[1176427]:string[26] val x3[1176429]:int(64)[13]
  type (string,range(byteIndex,boundedHigh,false),string,int(64))[1191330] const-ref x0[1191322]:string[26] val x1[1191324]:range(byteIndex,boundedHigh,false)[1184830] const-ref x2[1191326]:string[26] val x3[1191328]:int(64)[13]
  type 57*int(64)[1210396] val x0[1210282]:int(64)[13] val x1[1210284]:int(64)[13] val x2[1210286]:int(64)[13] val x3[1210288]:int(64)[13] val x4[1210290]:int(64)[13] val x5[1210292]:int(64)[13] val x6[1210294]:int(64)[13] val x7[1210296]:int(64)[13] val x8[1210298]:int(64)[13] val x9[1210300]:int(64)[13] val x10[1210302]:int(64)[13] val x11[1210304]:int(64)[13] val x12[1210306]:int(64)[13] val x13[1210308]:int(64)[13] val x14[1210310]:int(64)[13] val x15[1210312]:int(64)[13] val x16[1210314]:int(64)[13] val x17[1210316]:int(64)[13] val x18[1210318]:int(64)[13] val x19[1210320]:int(64)[13] val x20[1210322]:int(64)[13] val x21[1210324]:int(64)[13] val x22[1210326]:int(64)[13] val x23[1210328]:int(64)[13] val x24[1210330]:int(64)[13] val x25[1210332]:int(64)[13] val x26[1210334]:int(64)[13] val x27[1210336]:int(64)[13] val x28[1210338]:int(64)[13] val x29[1210340]:int(64)[13] val x30[1210342]:int(64)[13] val x31[1210344]:int(64)[13] val x32[1210346]:int(64)[13] val x33[1210348]:int(64)[13] val x34[1210350]:int(64)[13] val x35[1210352]:int(64)[13] val x36[1210354]:int(64)[13] val x37[1210356]:int(64)[13] val x38[1210358]:int(64)[13] val x39[1210360]:int(64)[13] val x40[1210362]:int(64)[13] val x41[1210364]:int(64)[13] val x42[1210366]:int(64)[13] val x43[1210368]:int(64)[13] val x44[1210370]:int(64)[13] val x45[1210372]:int(64)[13] val x46[1210374]:int(64)[13] val x47[1210376]:int(64)[13] val x48[1210378]:int(64)[13] val x49[1210380]:int(64)[13] val x50[1210382]:int(64)[13] val x51[1210384]:int(64)[13] val x52[1210386]:int(64)[13] val x53[1210388]:int(64)[13] val x54[1210390]:int(64)[13] val x55[1210392]:int(64)[13] val x56[1210394]:int(64)[13]
  type (string,int(64))[1213572] const-ref x0[1213568]:string[26] val x1[1213570]:int(64)[13]
  type 1*range(int(64),bounded,false)[1244607] val x0[1244605]:range(int(64),bounded,false)[1026725]
  type 1*int(64)[1256436] val x0[1256434]:int(64)[13]
  type (bool,int(64))[1265043] val x0[1265039]:bool[10] val x1[1265041]:int(64)[13]
  type (string,int(64),string)[1273095] const-ref x0[1273089]:string[26] val x1[1273091]:int(64)[13] const-ref x2[1273093]:string[26]
  type (string,int(64),string,int(64),string)[1279608] const-ref x0[1279598]:string[26] val x1[1279600]:int(64)[13] const-ref x2[1279602]:string[26] val x3[1279604]:int(64)[13] const-ref x4[1279606]:string[26]
  type 4*string[1291748] const-ref x0[1291740]:string[26] const-ref x1[1291742]:string[26] const-ref x2[1291744]:string[26] const-ref x3[1291746]:string[26]
  type (string,string,int(64),string,range(int(64),bounded,false))[1338406] const-ref x0[1338396]:string[26] const-ref x1[1338398]:string[26] val x2[1338400]:int(64)[13] const-ref x3[1338402]:string[26] val x4[1338404]:range(int(64),bounded,false)[1026725]
  type (string,int(64),string,int(64),string,int(64))[1398988] const-ref x0[1398976]:string[26] val x1[1398978]:int(64)[13] const-ref x2[1398980]:string[26] val x3[1398982]:int(64)[13] const-ref x4[1398984]:string[26] val x5[1398986]:int(64)[13]
  type (1*int(64),1*int(64),int(64))[1415269] const-ref x0[1415263]:1*int(64)[1256436] const-ref x1[1415265]:1*int(64)[1256436] val x2[1415267]:int(64)[13]
  type (1*int(64),1*int(64),int(64))[1415447] val x0[1415441]:1*int(64)[1256436] val x1[1415443]:1*int(64)[1256436] val x2[1415445]:int(64)[13]
  type 1*string[1416881] const-ref x0[1416879]:string[26]
  type (string,uint(64),string,int(64))[1440457] const-ref x0[1440449]:string[26] val x1[1440451]:uint(64)[115] const-ref x2[1440453]:string[26] val x3[1440455]:int(64)[13]
  type 2*[domain(1,int(64),false)] real(64)[1455184] val x0[1455180]:[domain(1,int(64),false)] real(64)[1365751] val x1[1455182]:[domain(1,int(64),false)] real(64)[1365751]
  type 1*_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1464156] val x0[1464154]:_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1463597]
  type 2*_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1464296] val x0[1464292]:_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1463597] val x1[1464294]:_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1463597]
  type 1*_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1465380] val x0[1465378]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1463591]
  type 2*_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1465548] val x0[1465544]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1463591] val x1[1465546]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1463591]
  type 2*real(64)[1466451] ref x0[1466447]:real(64)[16] const-ref x1[1466449]:real(64)[16]
  type (BaseArr,unmanaged BaseDom?)[1469273] val x0[1469269]:BaseArr[149541] val x1[1469271]:BaseDom[146725]
  type (unmanaged BaseDom?,unmanaged BaseDist?)[1470067] val x0[1470063]:BaseDom[146725] val x1[1470065]:BaseDist[145926]
}