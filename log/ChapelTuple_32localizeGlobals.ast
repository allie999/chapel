AST dump for ChapelTuple after pass localizeGlobals.
Module use list: ChapelStandard DSIUtil 

{
  function chpl__init_ChapelTuple[416006]() : void[4] "insert line file info" "module init" "resolved"
  {
    (509038 return _void[55])
  }
  function 57*int(64)[1207351].this[1208469](ref arg this[1208475]:57*int(64)[1207351], const in arg i[1208477]:int(64)[13]) ref : _ref(int(64))[934535] "instantiated generic" "invisible fn" "method" "no doc" "reference to const when const this" "resolved" "star tuple accessor"
  {
    const-val local__str_literal_779[2279055]:string[26] "temp"
    (2279056 'move' "tuple access out of bounds: " "tuple access out of bounds: ")
    const-val call_tmp[2036226]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2036228 'move' call_tmp[2036226](2036230 '<' i[1208477] 0))
    val tmp[1208546]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2036226]
    {
      (1208564 'move' tmp[1208546] 1)
    }
    {
      const-val call_tmp[2042372]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2042374 'move' call_tmp[2042372](2042376 '>' i[1208477] 56))
      (1208601 'move' tmp[1208546] call_tmp[2042372])
    }
    if tmp[1208546]
    {
      (1208617 call halt[1209118] "tuple access out of bounds: " i[1208477])
    }
    ref call_tmp[1208622]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (1208624 'move' call_tmp[1208622](1208626 'get svec member' this[1208475] i[1208477]))
    (1208633 return call_tmp[1208622])
  }
  function 1*range(int(64),bounded,false)[1241311].this[1364411](ref arg this[1364417]:1*range(int(64),bounded,false)[1241311], const in arg i[1364419]:int(64)[13]) ref : _ref(range(int(64),bounded,false))[1023990] "instantiated generic" "invisible fn" "method" "no doc" "reference to const when const this" "resolved" "fn synchronization free" "star tuple accessor"
  {
    const-val local__str_literal_779[2279570]:string[26] "temp"
    (2279571 'move' "tuple access out of bounds: " "tuple access out of bounds: ")
    const-val call_tmp[2036276]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2036278 'move' call_tmp[2036276](2036280 '<' i[1364419] 0))
    val tmp[1364488]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2036276]
    {
      (1364506 'move' tmp[1364488] 1)
    }
    {
      const-val call_tmp[2042702]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2042704 'move' call_tmp[2042702](2042706 '>' i[1364419] 0))
      (1364543 'move' tmp[1364488] call_tmp[2042702])
    }
    if tmp[1364488]
    {
      (1364559 call halt[1209118] "tuple access out of bounds: " i[1364419])
    }
    ref call_tmp[1364564]:range(int(64),bounded,false)[1023946] "dead after last mention" "maybe param" "temp"
    (1364566 'move' call_tmp[1364564](1364568 'get svec member' this[1364417] i[1364419]))
    (1364575 return call_tmp[1364564])
  }
  function 1*range(int(64),bounded,false)[1241311].indices[1726332](const  ref arg this[1726338]:1*range(int(64),bounded,false)[1241311], ref arg _retArg[1793620]:range(int(64),bounded,false)[1023946]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no parens" "resolved"
  {
    const-val call_tmp[1726364]:range(int(64),bounded,false)[1023946] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1784314]:range(int(64),bounded,false)[1023946] "temp"
    (1726369 call chpl_build_bounded_range[455195] 0 0 ret_tmp[1784314])
    (1784317 'move' call_tmp[1726364] ret_tmp[1784314])
    (1793622 '=' _retArg[1793620] call_tmp[1726364])
    (1793624 return _void[55])
  }
  type 1*c_string[954344] val x0[954342]:c_string[19]
  type (c_ptr(uint(8)),int(64))[959411] val x0[959407]:c_ptr(uint(8))[935386] val x1[959409]:int(64)[13]
  type (syserr,int(32),int(32))[960390] val x0[960384]:syserr[223501] val x1[960386]:int(32)[95] val x2[960388]:int(32)[95]
  type 2*int(32)[967477] val x0[967473]:int(32)[95] val x1[967475]:int(32)[95]
  type 6*string[982845] const-ref x0[982833]:string[26] const-ref x1[982835]:string[26] const-ref x2[982837]:string[26] const-ref x3[982839]:string[26] const-ref x4[982841]:string[26] const-ref x5[982843]:string[26]
  type 6*string[983011] val x0[982999]:string[26] val x1[983001]:string[26] val x2[983003]:string[26] val x3[983005]:string[26] val x4[983007]:string[26] val x5[983009]:string[26]
  type 2*int(64)[1037179] val x0[1037175]:int(64)[13] val x1[1037177]:int(64)[13]
  type (string,range(byteIndex,bounded,false),string,int(64))[1041540] const-ref x0[1041532]:string[26] val x1[1041534]:range(byteIndex,bounded,false)[1022924] const-ref x2[1041536]:string[26] val x3[1041538]:int(64)[13]
  type 1*byteIndex[1054220] const-ref x0[1054218]:byteIndex[28170]
  type (range(int(64),bounded,false),int(64))[1081903] val x0[1081899]:range(int(64),bounded,false)[1023946] val x1[1081901]:int(64)[13]
  type (_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1105514] val x0[1105510]:_ic_these_range_int64_t_bounded_F[1093682] val x1[1105512]:_ic_chpl_bytes__ref_string[1105204]
  type (int(64),uint(8))[1107988] val x0[1107984]:int(64)[13] val x1[1107986]:uint(8)[100]
  type (string,range(int(64),bounded,false),string,int(64))[1111167] const-ref x0[1111159]:string[26] val x1[1111161]:range(int(64),bounded,false)[1023946] const-ref x2[1111163]:string[26] val x3[1111165]:int(64)[13]
  type (byteIndex,int(64))[1118181] const-ref x0[1118177]:byteIndex[28170] val x1[1118179]:int(64)[13]
  type (int(32),byteIndex,int(64))[1119077] val x0[1119071]:int(32)[95] const-ref x1[1119073]:byteIndex[28170] val x2[1119075]:int(64)[13]
  type (string,range(int(64),boundedLow,false),string,int(64))[1125977] const-ref x0[1125969]:string[26] val x1[1125971]:range(int(64),boundedLow,false)[1084544] const-ref x2[1125973]:string[26] val x3[1125975]:int(64)[13]
  type (string,range(byteIndex,boundedLow,false),string,int(64))[1144148] const-ref x0[1144140]:string[26] val x1[1144142]:range(byteIndex,boundedLow,false)[1140337] const-ref x2[1144144]:string[26] val x3[1144146]:int(64)[13]
  type (string,codepointIndex,string)[1155489] const-ref x0[1155483]:string[26] const-ref x1[1155485]:codepointIndex[28274] const-ref x2[1155487]:string[26]
  type (string,codepointIndex,string,int(64))[1173429] const-ref x0[1173421]:string[26] const-ref x1[1173423]:codepointIndex[28274] const-ref x2[1173425]:string[26] val x3[1173427]:int(64)[13]
  type (string,range(byteIndex,boundedHigh,false),string,int(64))[1188285] const-ref x0[1188277]:string[26] val x1[1188279]:range(byteIndex,boundedHigh,false)[1181785] const-ref x2[1188281]:string[26] val x3[1188283]:int(64)[13]
  type 57*int(64)[1207351] val x0[1207237]:int(64)[13] val x1[1207239]:int(64)[13] val x2[1207241]:int(64)[13] val x3[1207243]:int(64)[13] val x4[1207245]:int(64)[13] val x5[1207247]:int(64)[13] val x6[1207249]:int(64)[13] val x7[1207251]:int(64)[13] val x8[1207253]:int(64)[13] val x9[1207255]:int(64)[13] val x10[1207257]:int(64)[13] val x11[1207259]:int(64)[13] val x12[1207261]:int(64)[13] val x13[1207263]:int(64)[13] val x14[1207265]:int(64)[13] val x15[1207267]:int(64)[13] val x16[1207269]:int(64)[13] val x17[1207271]:int(64)[13] val x18[1207273]:int(64)[13] val x19[1207275]:int(64)[13] val x20[1207277]:int(64)[13] val x21[1207279]:int(64)[13] val x22[1207281]:int(64)[13] val x23[1207283]:int(64)[13] val x24[1207285]:int(64)[13] val x25[1207287]:int(64)[13] val x26[1207289]:int(64)[13] val x27[1207291]:int(64)[13] val x28[1207293]:int(64)[13] val x29[1207295]:int(64)[13] val x30[1207297]:int(64)[13] val x31[1207299]:int(64)[13] val x32[1207301]:int(64)[13] val x33[1207303]:int(64)[13] val x34[1207305]:int(64)[13] val x35[1207307]:int(64)[13] val x36[1207309]:int(64)[13] val x37[1207311]:int(64)[13] val x38[1207313]:int(64)[13] val x39[1207315]:int(64)[13] val x40[1207317]:int(64)[13] val x41[1207319]:int(64)[13] val x42[1207321]:int(64)[13] val x43[1207323]:int(64)[13] val x44[1207325]:int(64)[13] val x45[1207327]:int(64)[13] val x46[1207329]:int(64)[13] val x47[1207331]:int(64)[13] val x48[1207333]:int(64)[13] val x49[1207335]:int(64)[13] val x50[1207337]:int(64)[13] val x51[1207339]:int(64)[13] val x52[1207341]:int(64)[13] val x53[1207343]:int(64)[13] val x54[1207345]:int(64)[13] val x55[1207347]:int(64)[13] val x56[1207349]:int(64)[13]
  type (string,int(64))[1210527] const-ref x0[1210523]:string[26] val x1[1210525]:int(64)[13]
  type 1*range(int(64),bounded,false)[1241311] val x0[1241309]:range(int(64),bounded,false)[1023946]
  type 1*int(64)[1253023] val x0[1253021]:int(64)[13]
  type (bool,int(64))[1261621] val x0[1261617]:bool[10] val x1[1261619]:int(64)[13]
  type (string,int(64),string)[1269673] const-ref x0[1269667]:string[26] val x1[1269669]:int(64)[13] const-ref x2[1269671]:string[26]
  type (string,int(64),string,int(64),string)[1276186] const-ref x0[1276176]:string[26] val x1[1276178]:int(64)[13] const-ref x2[1276180]:string[26] val x3[1276182]:int(64)[13] const-ref x4[1276184]:string[26]
  type 4*string[1288192] const-ref x0[1288184]:string[26] const-ref x1[1288186]:string[26] const-ref x2[1288188]:string[26] const-ref x3[1288190]:string[26]
  type (string,string,int(64),string,range(int(64),bounded,false))[1334565] const-ref x0[1334555]:string[26] const-ref x1[1334557]:string[26] val x2[1334559]:int(64)[13] const-ref x3[1334561]:string[26] val x4[1334563]:range(int(64),bounded,false)[1023946]
  type (int(64),ioNewline)[1372905] val x0[1372901]:int(64)[13] const-ref x1[1372903]:ioNewline[238618]
  type (BaseArr,unmanaged BaseDom?)[1384489] val x0[1384485]:BaseArr[149545] val x1[1384487]:BaseDom[146729]
  type (unmanaged BaseDom?,unmanaged BaseDist?)[1385283] val x0[1385279]:BaseDom[146729] val x1[1385281]:BaseDist[145934]
}