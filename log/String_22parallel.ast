AST dump for String after pass parallel.
Module use list: ChapelStandard SysCTypes ByteBufferHelpers BytesStringCommon SysBasic CString StringCasts NVStringFactory 

{
  type _class_localson_fn[2203919] val _runtime_hdr[2203920]:chpl_comm_on_bundle_t[209359] val _0_tmp[2203922]:chpl_localeID_t[209352] val _1_needle_data[2203924]:__serializeHelper[28089] ref _2_this[2203926]:string[26] val _3_region[2203928]:range(byteIndex,boundedLow,false)[1143592] ref _4_ret[2203930]:int(64)[13]
  type _class_localson_fn[2203351] val _runtime_hdr[2203352]:chpl_comm_on_bundle_t[209359] val _0_tmp[2203354]:chpl_localeID_t[209352] val _1_needle_data[2203356]:__serializeHelper[28089] ref _2_this[2203358]:string[26] val _3_region[2203360]:range(byteIndex,bounded,false)[1025981] ref _4_ret[2203362]:int(64)[13]
  type _class_localson_fn[2197882] val _runtime_hdr[2197883]:chpl_comm_on_bundle_t[209359] val _0_tmp[2197885]:chpl_localeID_t[209352] ref _1_this[2197887]:string[26] ref _2_result[2197889]:bool[10]
  type _class_localson_fn[2197790] val _runtime_hdr[2197791]:chpl_comm_on_bundle_t[209359] val _0_tmp[2197793]:chpl_localeID_t[209352] ref _1_this[2197795]:string[26]
  function chpl__init_String[416034]() : void[4] "insert line file info" "module init" "resolved"
  {
    {
    }
    (505168 return _void[55])
  }
  def module NVStringFactory[30567]  
  const-val CHPL_SHORT_STRING_SIZE[28016]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  function _ref(chpl__inPlaceBuffer)[967629].deinit[753150](const  ref arg this[753154]:_ref(chpl__inPlaceBuffer)[967629]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved"
  {
    (753162 return _void[55])
  }
  type chpl__inPlaceBuffer[28022]
  function chpl__getInPlaceBufferData[28033](const  ref arg data[28030]:_ref(chpl__inPlaceBuffer)[967629]) : c_ptr(uint(8))[937612] "extern" "local args" "no fn body" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[503045]:c_ptr(uint(8))[937612] "RVV" "temp"
    (503047 return ret[503045])
  }
  function chpl__getInPlaceBufferDataForWrite[28045](ref arg data[28042]:_ref(chpl__inPlaceBuffer)[967629]) : c_ptr(uint(8))[937612] "extern" "local args" "no fn body" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[503051]:c_ptr(uint(8))[937612] "RVV" "temp"
    (503053 return ret[503051])
  }
  function _ref(__serializeHelper)[938206].buffLen[753663](ref arg this[753667]:_ref(__serializeHelper)[938206]) ref : _ref(int(64))[936761] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[753677]:_ref(int(64))[936761] "dead after last mention" "RVV" "temp"
    ref call_tmp[753684]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (753687 'move' call_tmp[753684](753671 '.' this[753667] buffLen[28058]))
    (753682 'move' ret[753677] call_tmp[753684])
    (753679 return ret[753677])
  }
  function _ref(__serializeHelper)[938206].buff[753689](ref arg this[753693]:_ref(__serializeHelper)[938206]) ref : _ref(c_ptr(uint(8)))[937621] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[753703]:_ref(c_ptr(uint(8)))[937621] "dead after last mention" "RVV" "temp"
    ref call_tmp[753710]:_ref(c_ptr(uint(8)))[937621] "dead after last mention" "maybe param" "temp"
    (753713 'move' call_tmp[753710](753697 '.' this[753693] buff[28063]))
    (753708 'move' ret[753703] call_tmp[753710])
    (753705 return ret[753703])
  }
  function _ref(__serializeHelper)[938206].size[753715](ref arg this[753719]:_ref(__serializeHelper)[938206]) ref : _ref(int(64))[936761] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[753729]:_ref(int(64))[936761] "dead after last mention" "RVV" "temp"
    ref call_tmp[753736]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (753739 'move' call_tmp[753736](753723 '.' this[753719] size[28068]))
    (753734 'move' ret[753729] call_tmp[753736])
    (753731 return ret[753729])
  }
  function _ref(__serializeHelper)[938206].locale_id[753741](ref arg this[753745]:_ref(__serializeHelper)[938206]) ref : _ref(int(32))[936815] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[753755]:_ref(int(32))[936815] "dead after last mention" "RVV" "temp"
    ref call_tmp[753762]:_ref(int(32))[936815] "dead after last mention" "maybe param" "temp"
    (753765 'move' call_tmp[753762](753749 '.' this[753745] locale_id[28074]))
    (753760 'move' ret[753755] call_tmp[753762])
    (753757 return ret[753755])
  }
  function _ref(__serializeHelper)[938206].shortData[753767](ref arg this[753771]:_ref(__serializeHelper)[938206]) ref : _ref(chpl__inPlaceBuffer)[967629] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[753781]:_ref(chpl__inPlaceBuffer)[967629] "dead after last mention" "RVV" "temp"
    ref call_tmp[753788]:_ref(chpl__inPlaceBuffer)[967629] "dead after last mention" "maybe param" "temp"
    (753791 'move' call_tmp[753788](753775 '.' this[753771] shortData[28079]))
    (753786 'move' ret[753781] call_tmp[753788])
    (753783 return ret[753781])
  }
  function _ref(__serializeHelper)[938206].cachedNumCodepoints[753793](ref arg this[753797]:_ref(__serializeHelper)[938206]) ref : _ref(int(64))[936761] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[753807]:_ref(int(64))[936761] "dead after last mention" "RVV" "temp"
    ref call_tmp[753814]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (753817 'move' call_tmp[753814](753801 '.' this[753797] cachedNumCodepoints[28084]))
    (753812 'move' ret[753807] call_tmp[753814])
    (753809 return ret[753807])
  }
  function _ref(__serializeHelper)[938206].init[753819](ref arg this[753822]:_ref(__serializeHelper)[938206], in arg buffLen[753825]:int(64)[13], in arg buff[753838]:c_ptr(uint(8))[937612], in arg size[753851]:int(64)[13], in arg locale_id[753864]:int(32)[95], in arg shortData[753878]:chpl__inPlaceBuffer[28022], in arg cachedNumCodepoints[753891]:int(64)[13]) : void[4] "compiler generated" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    (753905 '.=' this[753822] buffLen[28058] buffLen[753825])
    (753908 '.=' this[753822] buff[28063] buff[753838])
    (753911 '.=' this[753822] size[28068] size[753851])
    (753914 '.=' this[753822] locale_id[28074] locale_id[753864])
    (753917 '.=' this[753822] shortData[28079] shortData[753878])
    (753920 '.=' this[753822] cachedNumCodepoints[28084] cachedNumCodepoints[753891])
    (753926 return _void[55])
  }
  function _ref(__serializeHelper)[938206].init=[753928](ref arg this[753932]:_ref(__serializeHelper)[938206], const  ref arg other[753933]:__serializeHelper[28089]) : void[4] "compiler generated" "copy initializer" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    ref call_tmp[754062]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const" "temp"
    (754065 'move' call_tmp[754062](753941 call buffLen[753663] other[753933]))
    val tmp[753997]:int(64)[13] "dead after last mention" "temp"
    (754000 'move' tmp[753997](1601803 'deref' call_tmp[754062]))
    (754002 '.=' this[753932] buffLen[28058] tmp[753997])
    ref call_tmp[754069]:_ref(c_ptr(uint(8)))[937621] "dead after last mention" "maybe param" "reference to a const" "temp"
    (754072 'move' call_tmp[754069](753951 call buff[753689] other[753933]))
    val tmp[754006]:c_ptr(uint(8))[937612] "dead after last mention" "temp"
    val coerce_tmp[1601808]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1601812 'move' coerce_tmp[1601808](1601810 'deref' call_tmp[754069]))
    (1919968 '=' tmp[754006] coerce_tmp[1601808])
    (754009 'noop')
    (754011 '.=' this[753932] buff[28063] tmp[754006])
    ref call_tmp[754076]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const" "temp"
    (754079 'move' call_tmp[754076](753961 call size[753715] other[753933]))
    val tmp[754015]:int(64)[13] "dead after last mention" "temp"
    (754018 'move' tmp[754015](1601817 'deref' call_tmp[754076]))
    (754020 '.=' this[753932] size[28068] tmp[754015])
    ref call_tmp[754083]:_ref(int(32))[936815] "dead after last mention" "maybe param" "reference to a const" "temp"
    (754086 'move' call_tmp[754083](753971 call locale_id[753741] other[753933]))
    val call_tmp[754088]:int(32)[95] "dead after last mention" "maybe param" "temp" "type variable"
    val tmp[754024]:int(32)[95] "dead after last mention" "temp"
    (754028 'move' tmp[754024](1601820 'deref' call_tmp[754083]))
    (754030 '.=' this[753932] locale_id[28074] tmp[754024])
    ref call_tmp[754095]:_ref(chpl__inPlaceBuffer)[967629] "dead after last mention" "maybe param" "reference to a const" "temp"
    (754098 'move' call_tmp[754095](753981 call shortData[753767] other[753933]))
    val tmp[754034]:chpl__inPlaceBuffer[28022] "dead after last mention" "temp"
    (754037 'move' tmp[754034](1601836 'deref' call_tmp[754095]))
    (754039 '.=' this[753932] shortData[28079] tmp[754034])
    ref call_tmp[754102]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const" "temp"
    (754105 'move' call_tmp[754102](753991 call cachedNumCodepoints[753793] other[753933]))
    val tmp[754043]:int(64)[13] "dead after last mention" "temp"
    (754046 'move' tmp[754043](1601839 'deref' call_tmp[754102]))
    (754048 '.=' this[753932] cachedNumCodepoints[28084] tmp[754043])
    (754058 return _void[55])
  }
  function _ref(__serializeHelper)[938206].deinit[754107](const  ref arg this[754111]:_ref(__serializeHelper)[938206]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved"
  {
    label _enddeinit[1890234]
    ref _field_destructor_tmp_[1890232]:_ref(chpl__inPlaceBuffer)[967629] "temp"
    (1890239 'move' _field_destructor_tmp_[1890232](1890236 '.' this[754111] shortData[28079]))
    (1890241 call deinit[753150] _field_destructor_tmp_[1890232])
    (754119 return _void[55])
  }
  type __serializeHelper[28089] val buffLen[28058]:int(64)[13] val buff[28063]:c_ptr(uint(8))[937612] val size[28068]:int(64)[13] val locale_id[28074]:int(32)[95] val shortData[28079]:chpl__inPlaceBuffer[28022] val cachedNumCodepoints[28084]:int(64)[13]
  function _ref(byteIndex)[948948].init[28100](ref arg this[28175]:_ref(byteIndex)[948948]) : void[4] "method" "primary method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    val tmp[453806]:int(64)[13] "dead after last mention" "temp"
    (1029934 'move' tmp[453806] 0)
    (453811 '.=' this[28175] _bindex[28094] tmp[453806])
    (503055 return _void[55])
  }
  function _ref(byteIndex)[948948].init=[28127](ref arg this[28183]:_ref(byteIndex)[948948], const  ref arg other[28124]:byteIndex[28173]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    ref call_tmp[597508]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const" "temp"
    (597511 'move' call_tmp[597508](28133 call _bindex[757931] other[28124]))
    val tmp[453824]:int(64)[13] "dead after last mention" "temp"
    (453827 'move' tmp[453824](1601915 'deref' call_tmp[597508]))
    (453829 '.=' this[28183] _bindex[28094] tmp[453824])
    (503059 return _void[55])
  }
  function _ref(byteIndex)[948948].init=[28148](ref arg this[28187]:_ref(byteIndex)[948948], const in arg i[28145]:int(64)[13]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    val tmp[453833]:int(64)[13] "dead after last mention" "temp"
    (453836 'move' tmp[453833] i[28145])
    (453838 '.=' this[28187] _bindex[28094] tmp[453833])
    (503061 return _void[55])
  }
  function _ref(byteIndex)[948948].writeThis[1068809](const  ref arg this[1068813]:_ref(byteIndex)[948948], const  ref arg f[1068815]:channel(true,dynamic,false)[1061136], ref arg error_out[1885654]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    ref call_tmp[1068821]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (1068823 'move' call_tmp[1068821](1068826 call _bindex[757931] this[1068813]))
    const-val coerce_tmp[1068903]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1068907 'move' coerce_tmp[1068903](1068905 'deref' call_tmp[1068821]))
    ref _return_tmp_[1875476]:_ref(channel(true,dynamic,false))[1061145] "dead after last mention" "temp"
    val error[1885659]:Error[167984] "error variable" "temp"
    (1885661 'move' error[1885659] nil[44])
    (1875478 'move' _return_tmp_[1875476](1068830 call <~>[1068837] f[1068815] coerce_tmp[1068903] error[1885659]))
    val errorExists[2222816]:bool[10] "temp"
    (2222821 'move' errorExists[2222816](2222818 '!=' error[1885659] nil[44]))
    if errorExists[2222816]
    {
      (1885665 '=' error_out[1885654] error[1885659])
      gotoErrorHandlingReturn _endwriteThis[1885656] _endwriteThis[1885656]
    }
    label _endwriteThis[1885656]
    (1068833 return _void[55])
  }
  function _ref(byteIndex)[948948]._bindex[757931](ref arg this[757935]:_ref(byteIndex)[948948]) ref : _ref(int(64))[936761] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[757945]:_ref(int(64))[936761] "dead after last mention" "RVV" "temp"
    ref call_tmp[757952]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (757955 'move' call_tmp[757952](757939 '.' this[757935] _bindex[28094]))
    (757950 'move' ret[757945] call_tmp[757952])
    (757947 return ret[757945])
  }
  function _ref(byteIndex)[948948].deinit[757957](const  ref arg this[757961]:_ref(byteIndex)[948948]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free"
  {
    (757969 return _void[55])
  }
  type byteIndex[28173] val _bindex[28094]:int(64)[13] "no doc"
  function _ref(codepointIndex)[948958].init[28204](ref arg this[28279]:_ref(codepointIndex)[948958]) : void[4] "method" "primary method" "no doc" "resolved" "no return value for void"
  {
    val tmp[453843]:int(64)[13] "dead after last mention" "temp"
    (1157239 'move' tmp[453843] 0)
    (453848 '.=' this[28279] _cpindex[28198] tmp[453843])
    (503065 return _void[55])
  }
  function _ref(codepointIndex)[948958].init=[28247](ref arg this[28291]:_ref(codepointIndex)[948958], const  ref arg cpi[28244]:codepointIndex[28277]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    ref call_tmp[597522]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const" "temp"
    (597525 'move' call_tmp[597522](28253 call _cpindex[758003] cpi[28244]))
    val tmp[453870]:int(64)[13] "dead after last mention" "temp"
    (453873 'move' tmp[453870](1601982 'deref' call_tmp[597522]))
    (453875 '.=' this[28291] _cpindex[28198] tmp[453870])
    (503071 return _void[55])
  }
  function _ref(codepointIndex)[948958].writeThis[1175534](const  ref arg this[1175538]:_ref(codepointIndex)[948958], const  ref arg f[1175540]:channel(true,dynamic,false)[1061136], ref arg error_out[1886753]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    ref call_tmp[1175546]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (1175548 'move' call_tmp[1175546](1175551 call _cpindex[758003] this[1175538]))
    const-val coerce_tmp[1175562]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1175566 'move' coerce_tmp[1175562](1175564 'deref' call_tmp[1175546]))
    ref _return_tmp_[1875492]:_ref(channel(true,dynamic,false))[1061145] "dead after last mention" "temp"
    val error[1886758]:Error[167984] "error variable" "temp"
    (1886760 'move' error[1886758] nil[44])
    (1875494 'move' _return_tmp_[1875492](1175555 call <~>[1068837] f[1175540] coerce_tmp[1175562] error[1886758]))
    val errorExists[2223360]:bool[10] "temp"
    (2223365 'move' errorExists[2223360](2223362 '!=' error[1886758] nil[44]))
    if errorExists[2223360]
    {
      (1886764 '=' error_out[1886753] error[1886758])
      gotoErrorHandlingReturn _endwriteThis[1886755] _endwriteThis[1886755]
    }
    label _endwriteThis[1886755]
    (1175558 return _void[55])
  }
  function _ref(codepointIndex)[948958]._cpindex[758003](ref arg this[758007]:_ref(codepointIndex)[948958]) ref : _ref(int(64))[936761] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[758017]:_ref(int(64))[936761] "dead after last mention" "RVV" "temp"
    ref call_tmp[758024]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (758027 'move' call_tmp[758024](758011 '.' this[758007] _cpindex[28198]))
    (758022 'move' ret[758017] call_tmp[758024])
    (758019 return ret[758017])
  }
  function _ref(codepointIndex)[948958].deinit[758029](const  ref arg this[758033]:_ref(codepointIndex)[948958]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved"
  {
    (758041 return _void[55])
  }
  type codepointIndex[28277] val _cpindex[28198]:int(64)[13] "no doc"
  function chpl_build_bounded_range[1123443](const  ref arg low[1123445]:byteIndex[28173], const  ref arg high[1123450]:byteIndex[28173], ref arg _retArg[1910104]:_ref(range(byteIndex,bounded,false))[1025990]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1123534]:range(byteIndex,bounded,false)[1025981] "dead after last mention" "RVV" "temp"
    val call_tmp[1123557]:byteIndex[28173] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1123563]:range(byteIndex,bounded,false)[1025981] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1123582]:range(byteIndex,bounded,false)[1025981] "dead after last mention" "delay instantiation" "temp"
    const-val default_arg__stride[1123661]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (1123665 'move' default_arg__stride[1123661](1123663 call init_default__stride[1030001]))
    const-val default_arg__alignment[1123669]:byteIndex[28173] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val ret_tmp[1908558]:byteIndex[28173] "temp"
    (1123671 call init_default__alignment[1030041] ret_tmp[1908558])
    (1908561 'move' default_arg__alignment[1123669] ret_tmp[1908558])
    (1123585 call init[1028897] initTemp[1123582] low[1123445] high[1123450] default_arg__stride[1123661] default_arg__alignment[1123669] 0)
    (1123565 'move' call_tmp[1123563] initTemp[1123582])
    (1123574 'move' ret[1123534] call_tmp[1123563])
    (1910106 '=' _retArg[1910104] ret[1123534])
    (1921897 call chpl__autoDestroy[1601936] default_arg__alignment[1123669])
    (1910108 return _void[55])
  }
  function chpl_build_low_bounded_range[1142899](const  ref arg low[1142901]:byteIndex[28173], ref arg _retArg[1910332]:_ref(range(byteIndex,boundedLow,false))[1143636]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1142985]:range(byteIndex,boundedLow,false)[1143592] "dead after last mention" "RVV" "temp"
    val call_tmp[1143004]:byteIndex[28173] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1143010]:range(byteIndex,boundedLow,false)[1143592] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1143028]:range(byteIndex,boundedLow,false)[1143592] "dead after last mention" "delay instantiation" "temp"
    const-val default_arg__high[1143801]:byteIndex[28173] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val ret_tmp[1910338]:byteIndex[28173] "temp"
    (1143803 call init_default__high[1143777] ret_tmp[1910338])
    (1910341 'move' default_arg__high[1143801] ret_tmp[1910338])
    const-val default_arg__stride[1143842]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (1143846 'move' default_arg__stride[1143842](1143844 call init_default__stride[1143810]))
    const-val default_arg__alignment[1143874]:byteIndex[28173] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val ret_tmp[1910350]:byteIndex[28173] "temp"
    (1143876 call init_default__alignment[1143850] ret_tmp[1910350])
    (1910353 'move' default_arg__alignment[1143874] ret_tmp[1910350])
    (1143031 call init[1143039] initTemp[1143028] low[1142901] default_arg__high[1143801] default_arg__stride[1143842] default_arg__alignment[1143874] 0)
    (1143012 'move' call_tmp[1143010] initTemp[1143028])
    (1143020 'move' ret[1142985] call_tmp[1143010])
    (1910334 '=' _retArg[1910332] ret[1142985])
    (1922129 call chpl__autoDestroy[1601936] default_arg__alignment[1143874])
    (1922132 call chpl__autoDestroy[1601936] default_arg__high[1143801])
    (1910336 return _void[55])
  }
  function chpl_build_high_bounded_range[1184415](const  ref arg high[1184417]:byteIndex[28173], ref arg _retArg[1910684]:_ref(range(byteIndex,boundedHigh,false))[1185152]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1184501]:range(byteIndex,boundedHigh,false)[1185108] "dead after last mention" "RVV" "temp"
    val call_tmp[1184520]:byteIndex[28173] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1184526]:range(byteIndex,boundedHigh,false)[1185108] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1184544]:range(byteIndex,boundedHigh,false)[1185108] "dead after last mention" "delay instantiation" "temp"
    const-val default_arg__low[1185317]:byteIndex[28173] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val ret_tmp[1910690]:byteIndex[28173] "temp"
    (1185319 call init_default__low[1185293] ret_tmp[1910690])
    (1910693 'move' default_arg__low[1185317] ret_tmp[1910690])
    const-val default_arg__stride[1185358]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (1185362 'move' default_arg__stride[1185358](1185360 call init_default__stride[1185326]))
    const-val default_arg__alignment[1185390]:byteIndex[28173] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val ret_tmp[1910702]:byteIndex[28173] "temp"
    (1185392 call init_default__alignment[1185366] ret_tmp[1910702])
    (1910705 'move' default_arg__alignment[1185390] ret_tmp[1910702])
    (1184547 call init[1184555] initTemp[1184544] default_arg__low[1185317] high[1184417] default_arg__stride[1185358] default_arg__alignment[1185390] 0)
    (1184528 'move' call_tmp[1184526] initTemp[1184544])
    (1184536 'move' ret[1184501] call_tmp[1184526])
    (1910686 '=' _retArg[1910684] ret[1184501])
    (1924398 call chpl__autoDestroy[1601936] default_arg__alignment[1185390])
    (1924401 call chpl__autoDestroy[1601936] default_arg__low[1185317])
    (1910688 return _void[55])
  }
  function chpl__idxToInt[1029358](const  ref arg i[1029360]:byteIndex[28173]) : int(64)[13] "inline" "instantiated generic" "invisible fn" "no doc" "resolved" "fn synchronization free"
  {
    val ret[1029444]:int(64)[13] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1029456]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1029458 'move' call_tmp[1029456](1029461 call _cast[39465] i[1029360]))
    (1029464 'move' ret[1029444] call_tmp[1029456])
    (1029468 return ret[1029444])
  }
  function chpl__intToIdx[28505](const in arg i[28508]:int(64)[13], ref arg _retArg[1893900]:_ref(byteIndex)[948948]) : void[4] "fn returns via _retArg" "inline" "no doc" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1879482]:byteIndex[28173] "temp"
    const-val ret[503149]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    const-val call_tmp[597669]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1906142]:byteIndex[28173] "temp"
    (28513 call _cast[39486] i[28508] ret_tmp[1906142])
    (1906145 'move' call_tmp[597669] ret_tmp[1906142])
    (503154 'move' ret[503149] call_tmp[597669])
    (1893902 '=' _retArg[1893900] ret[503149])
    (1893904 return _void[55])
  }
  function >[28575](const  ref arg x[28572]:byteIndex[28173], const  ref arg y[28578]:byteIndex[28173]) : bool[10] "inline" "no doc" "resolved" "fn synchronization free"
  {
    val ret[503185]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[597679]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (597682 'move' call_tmp[597679](28583 call _cast[39465] x[28572]))
    const-val call_tmp[597684]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (597687 'move' call_tmp[597684](28587 call _cast[39465] y[28578]))
    const-val call_tmp[597689]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (597692 'move' call_tmp[597689](28589 call >[437788] call_tmp[597679] call_tmp[597684]))
    (503190 'move' ret[503185] call_tmp[597689])
    (503187 return ret[503185])
  }
  function +[28725](const  ref arg x[28722]:byteIndex[28173], const in arg y[28728]:int(64)[13], ref arg _retArg[1893942]:_ref(byteIndex)[948948]) : void[4] "fn returns via _retArg" "inline" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[503239]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    const-val call_tmp[597749]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (597752 'move' call_tmp[597749](28733 call _cast[39465] x[28722]))
    const-val call_tmp[597754]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (597757 'move' call_tmp[597754](28736 call +[439752] call_tmp[597749] y[28728]))
    const-val call_tmp[597759]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1906148]:byteIndex[28173] "temp"
    (28739 call _cast[39486] call_tmp[597754] ret_tmp[1906148])
    (1906151 'move' call_tmp[597759] ret_tmp[1906148])
    (503244 'move' ret[503239] call_tmp[597759])
    (1893944 '=' _retArg[1893942] ret[503239])
    (1893946 return _void[55])
  }
  function -[28857](const  ref arg x[28854]:byteIndex[28173], const in arg y[28860]:int(64)[13], ref arg _retArg[1893978]:_ref(byteIndex)[948948]) : void[4] "fn returns via _retArg" "inline" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[503284]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    const-val call_tmp[597819]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (597822 'move' call_tmp[597819](28865 call _cast[39465] x[28854]))
    const-val call_tmp[597824]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (597827 'move' call_tmp[597824](28868 call -[440532] call_tmp[597819] y[28860]))
    const-val call_tmp[597829]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1906154]:byteIndex[28173] "temp"
    (28871 call _cast[39486] call_tmp[597824] ret_tmp[1906154])
    (1906157 'move' call_tmp[597829] ret_tmp[1906154])
    (503289 'move' ret[503284] call_tmp[597829])
    (1893980 '=' _retArg[1893978] ret[503284])
    (1893982 return _void[55])
  }
  function <[29043](const  ref arg x[29040]:codepointIndex[28277], const in arg y[29046]:int(64)[13]) : bool[10] "inline" "no doc" "resolved"
  {
    val ret[503347]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[597919]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (597922 'move' call_tmp[597919](29051 call _cast[39517] x[29040]))
    const-val call_tmp[597924]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (597927 'move' call_tmp[597924](29054 call <[437568] call_tmp[597919] y[29046]))
    (503352 'move' ret[503347] call_tmp[597924])
    (503349 return ret[503347])
  }
  function >=[29193](const  ref arg x[29190]:codepointIndex[28277], const in arg y[29196]:int(64)[13]) : bool[10] "inline" "no doc" "resolved"
  {
    val ret[503401]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[597989]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (597992 'move' call_tmp[597989](29201 call _cast[39517] x[29190]))
    const-val call_tmp[597994]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (597997 'move' call_tmp[597994](29204 call >=[437348] call_tmp[597989] y[29196]))
    (503406 'move' ret[503401] call_tmp[597994])
    (503403 return ret[503401])
  }
  function ==[29469](const  ref arg x[29466]:byteIndex[28173], const in arg y[29472]:int(64)[13]) : bool[10] "inline" "no doc" "resolved" "fn synchronization free"
  {
    val ret[503500]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[598119]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (598122 'move' call_tmp[598119](29477 call _cast[39465] x[29466]))
    const-val call_tmp[598124]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (598127 'move' call_tmp[598124](29480 call ==[435744] call_tmp[598119] y[29472]))
    (503505 'move' ret[503500] call_tmp[598124])
    (503502 return ret[503500])
  }
  function ==[29541](const in arg x[29538]:int(64)[13], const  ref arg y[29544]:codepointIndex[28277]) : bool[10] "inline" "no doc" "resolved" "fn synchronization free"
  {
    val ret[503527]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[598149]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (598152 'move' call_tmp[598149](29550 call _cast[39517] y[29544]))
    const-val call_tmp[598154]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (598157 'move' call_tmp[598154](29552 call ==[435744] x[29538] call_tmp[598149]))
    (503532 'move' ret[503527] call_tmp[598154])
    (503529 return ret[503527])
  }
  function !=[29619](const  ref arg x[29616]:byteIndex[28173], const in arg y[29622]:int(64)[13]) : bool[10] "inline" "no doc" "resolved"
  {
    val ret[503554]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[598189]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (598192 'move' call_tmp[598189](29627 call _cast[39465] x[29616]))
    const-val call_tmp[598194]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (598197 'move' call_tmp[598194](29630 call !=[436128] call_tmp[598189] y[29622]))
    (503559 'move' ret[503554] call_tmp[598194])
    (503556 return ret[503554])
  }
  function validateEncoding[986829](const in arg buf[986831]:c_ptr(uint(8))[937612], const in arg len[986833]:int(64)[13], ref arg error_out[1884625]:Error[167984]) : int(64)[13] throws "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[986837]:int(64)[13] "dead after last mention" "RVV" "temp"
    val numCodepoints[986863]:int(64)[13] "dead at end of block" "insert auto destroy"
    (987194 'move' numCodepoints[986863] 0)
    const-val call_tmp[986869]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (986871 'move' call_tmp[986869](986874 call chpl_enc_validate_buf[986926] buf[986831] len[986833] numCodepoints[986863]))
    const-val call_tmp[986878]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[986951]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (986957 'move' coerce_tmp[986951](986953 'cast' int(32)[95] 0))
    (986880 'move' call_tmp[986878](986883 call !=[436106] call_tmp[986869] coerce_tmp[986951]))
    const-val call_tmp[986886]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (986888 'move' call_tmp[986886] call_tmp[986878])
    if call_tmp[986886]
    {
      const-val call_tmp[986895]:owned DecodeError[966470] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
      val new_temp[986976]:DecodeError[168140] "dead after last mention" "temp"
      (986978 'move' new_temp[986976](986964 call _new[965831]))
      const-val initTemp[986985]:owned DecodeError[966470] "dead after last mention" "delay instantiation" "temp"
      (986988 call init[965930] initTemp[986985] new_temp[986976])
      (986897 'move' call_tmp[986895] initTemp[986985])
      val call_tmp[986901]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[987002]:owned Error[966647] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1907996]:owned Error[966647] "temp"
      (987004 call _cast[966732] call_tmp[986895] ret_tmp[1907996])
      (1907999 'move' coerce_tmp[987002] ret_tmp[1907996])
      const-val _formal_tmp_in_err[987181]:owned Error[966647] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (987185 'move' _formal_tmp_in_err[987181] coerce_tmp[987002])
      (986903 'move' call_tmp[986901](986906 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[987181]))
      {
        val castedError[1884628]:Error[167984] "temp"
        (1884634 'move' castedError[1884628] call_tmp[986901])
        (1884636 '=' error_out[1884625] castedError[1884628])
        gotoErrorHandlingReturn _end_validateEncoding[986920] _end_validateEncoding[986920]
      }
    }
    (987191 'move' ret[986837] numCodepoints[986863])
    gotoReturn _end_validateEncoding[986920] _end_validateEncoding[986920]
    label _end_validateEncoding[986920]
    (986922 return ret[986837])
  }
  function createStringWithBorrowedBuffer[29902](const  ref arg x[29899]:string[26], ref arg _retArg[1893990]:_ref(string)[938128]) : void[4] "fn returns via _retArg" "inline" "resolved" "fn synchronization free"
  {
    const-val ret[503648]:string[26] "dead after last mention" "RVV" "temp"
    val ret[29905]:string[26] "dead at end of block" "insert auto destroy"
    (954474 call init[30763] ret[29905])
    ref call_tmp[598286]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (598289 'move' call_tmp[598286](29913 call cachedNumCodepoints[758127] ret[29905]))
    ref call_tmp[598293]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const" "temp"
    (598296 'move' call_tmp[598293](29917 call cachedNumCodepoints[758127] x[29899]))
    const-val coerce_tmp[949056]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (949060 'move' coerce_tmp[949056](949058 'deref' call_tmp[598293]))
    (29920 call =[435443] call_tmp[598286] coerce_tmp[949056])
    (29927 call initWithBorrowedBuffer[949063] ret[29905] x[29899])
    (503653 'move' ret[503648] ret[29905])
    gotoReturn _end_createStringWithBorrowedBuffer[503646] _end_createStringWithBorrowedBuffer[503646]
    label _end_createStringWithBorrowedBuffer[503646]
    (1893992 '=' _retArg[1893990] ret[503648])
    (1893994 return _void[55])
  }
  function chpl_createStringWithLiteral[30032](const in arg x[30029]:c_string[19], const in arg length[30035]:int(64)[13], const in arg numCodepoints[30039]:int(64)[13], ref arg _retArg[1904742]:_ref(string)[938128]) : void[4] "fn returns via _retArg" "no doc" "resolved"
  {
    const-val ret[503686]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[598337]:uint(8)[100] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[598342]:c_ptr(uint(8))[937612] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[598347]:c_ptr(uint(8))[937612] "dead after last mention" "expr temp" "maybe param" "temp"
    (598350 'move' call_tmp[598347](30051 call _cast[39395] x[30029]))
    const-val call_tmp[598352]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (598355 'move' call_tmp[598352](30058 call +[949855] length[30035]))
    const-val call_tmp[598357]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1904922]:string[26] "temp"
    (30063 call chpl_createStringWithBorrowedBufferNV[30629] call_tmp[598347] length[30035] call_tmp[598352] numCodepoints[30039] ret_tmp[1904922])
    (1904925 'move' call_tmp[598357] ret_tmp[1904922])
    (503691 'move' ret[503686] call_tmp[598357])
    (1904744 '=' _retArg[1904742] ret[503686])
    (1904746 return _void[55])
  }
  function createStringWithOwnedBuffer[30210](const in arg x[30207]:c_string[19], const in arg length[30216]:int(64)[13], ref arg error_out[1883464]:Error[167984], ref arg _retArg[1904766]:_ref(string)[938128]) : void[4] throws "fn returns via _retArg" "inline" "resolved"
  {
    const-val ret[503726]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[598386]:c_ptr(uint(8))[937612] "dead after last mention" "expr temp" "maybe param" "temp"
    (598389 'move' call_tmp[598386](30222 call _cast[39395] x[30207]))
    const-val call_tmp[598391]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (598394 'move' call_tmp[598391](30229 call +[949855] length[30216]))
    const-val call_tmp[598396]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[1883469]:Error[167984] "error variable" "temp"
    (1883471 'move' error[1883469] nil[44])
    const-val ret_tmp[1904772]:string[26] "temp"
    (30232 call createStringWithOwnedBuffer[30274] call_tmp[598386] length[30216] call_tmp[598391] error[1883469] ret_tmp[1904772])
    (1904775 'move' call_tmp[598396] ret_tmp[1904772])
    val errorExists[2221720]:bool[10] "temp"
    (2221725 'move' errorExists[2221720](2221722 '!=' error[1883469] nil[44]))
    if errorExists[2221720]
    {
      (1883475 '=' error_out[1883464] error[1883469])
      gotoErrorHandlingReturn _endcreateStringWithOwnedBuffer[1883466] _endcreateStringWithOwnedBuffer[1883466]
    }
    (503731 'move' ret[503726] call_tmp[598396])
    label _endcreateStringWithOwnedBuffer[1883466]
    (1904768 '=' _retArg[1904766] ret[503726])
    (1904770 return _void[55])
  }
  function createStringWithOwnedBuffer_default_length[986791](const in arg x[986793]:c_string[19], ref arg error_out[1884621]:Error[167984]) : int(64)[13] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "resolved" "fn synchronization free"
  {
    val ret[986795]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val length[986800]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (986807 'move' length[986800](986804 call size[22361] x[986793]))
    (986811 'move' ret[986795] length[986800])
    label _endcreateStringWithOwnedBuffer_default_length[1884623]
    (986798 return ret[986795])
  }
  function createStringWithOwnedBuffer[30274](const in arg x[30271]:c_ptr(uint(8))[937612], const in arg length[30277]:int(64)[13], const in arg size[30281]:int(64)[13], ref arg error_out[1883483]:Error[167984], ref arg _retArg[1904778]:_ref(string)[938128]) : void[4] throws "fn returns via _retArg" "inline" "resolved"
  {
    const-val ret[503744]:string[26] "dead after last mention" "RVV" "temp"
    val ret[30285]:string[26] "dead at end of block" "insert auto destroy"
    (987198 call init[30763] ret[30285])
    ref call_tmp[598410]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (598413 'move' call_tmp[598410](30291 call cachedNumCodepoints[758127] ret[30285]))
    const-val call_tmp[598415]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val error[1883486]:Error[167984] "error variable" "temp"
    (1883488 'move' error[1883486] nil[44])
    (598418 'move' call_tmp[598415](30298 call validateEncoding[986829] x[30271] length[30277] error[1883486]))
    val errorExists[2221728]:bool[10] "temp"
    (2221733 'move' errorExists[2221728](2221730 '!=' error[1883486] nil[44]))
    if errorExists[2221728]
    {
      (1883492 '=' error_out[1883483] error[1883486])
      (1919118 call chpl__autoDestroy[1601673] ret[30285])
      gotoErrorHandlingReturn _end_createStringWithOwnedBuffer[503742] _end_createStringWithOwnedBuffer[503742]
    }
    (30299 call =[435443] call_tmp[598410] call_tmp[598415])
    (30308 call initWithOwnedBuffer[979084] ret[30285] x[30271] length[30277] size[30281])
    (503749 'move' ret[503744] ret[30285])
    gotoReturn _end_createStringWithOwnedBuffer[503742] _end_createStringWithOwnedBuffer[503742]
    label _end_createStringWithOwnedBuffer[503742]
    (1904780 '=' _retArg[1904778] ret[503744])
    (1904782 return _void[55])
  }
  function createStringWithNewBuffer[30413](const in arg x[30410]:c_string[19], const in arg length[30419]:int(64)[13], const in arg policy[30426]:decodePolicy[173702], ref arg error_out[1883500]:Error[167984], ref arg _retArg[1904874]:_ref(string)[938128]) : void[4] throws "fn returns via _retArg" "inline" "resolved"
  {
    const-val ret[503784]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[598446]:c_ptr(uint(8))[937612] "dead after last mention" "expr temp" "maybe param" "temp"
    (598449 'move' call_tmp[598446](30432 call _cast[39395] x[30410]))
    const-val call_tmp[598451]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (598454 'move' call_tmp[598451](30439 call +[949855] length[30419]))
    const-val call_tmp[598456]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[1883505]:Error[167984] "error variable" "temp"
    (1883507 'move' error[1883505] nil[44])
    const-val ret_tmp[1904880]:string[26] "temp"
    (30443 call createStringWithNewBuffer[30493] call_tmp[598446] length[30419] call_tmp[598451] policy[30426] error[1883505] ret_tmp[1904880])
    (1904883 'move' call_tmp[598456] ret_tmp[1904880])
    val errorExists[2221736]:bool[10] "temp"
    (2221741 'move' errorExists[2221736](2221738 '!=' error[1883505] nil[44]))
    if errorExists[2221736]
    {
      (1883511 '=' error_out[1883500] error[1883505])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[1883502] _endcreateStringWithNewBuffer[1883502]
    }
    (503789 'move' ret[503784] call_tmp[598456])
    label _endcreateStringWithNewBuffer[1883502]
    (1904876 '=' _retArg[1904874] ret[503784])
    (1904878 return _void[55])
  }
  function createStringWithNewBuffer_default_length[964235](const in arg x[964237]:c_string[19], ref arg error_out[1884609]:Error[167984]) : int(64)[13] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "resolved" "fn synchronization free"
  {
    val ret[964239]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val length[964244]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (964251 'move' length[964244](964248 call size[22361] x[964237]))
    (964255 'move' ret[964239] length[964244])
    label _endcreateStringWithNewBuffer_default_length[1884611]
    (964242 return ret[964239])
  }
  function createStringWithNewBuffer[30493](const in arg x[30490]:c_ptr(uint(8))[937612], const in arg length[30496]:int(64)[13], const in arg size[30503]:int(64)[13], const in arg policy[30510]:decodePolicy[173702], ref arg error_out[1883519]:Error[167984], ref arg _retArg[1904904]:_ref(string)[938128]) : void[4] throws "fn returns via _retArg" "inline" "resolved"
  {
    const-val ret[503802]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[598468]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[1883524]:Error[167984] "error variable" "temp"
    (1883526 'move' error[1883524] nil[44])
    const-val ret_tmp[1907116]:string[26] "temp"
    (30518 call decodeByteBuffer[173938] x[30490] length[30496] policy[30510] error[1883524] ret_tmp[1907116])
    (1907119 'move' call_tmp[598468] ret_tmp[1907116])
    val errorExists[2221744]:bool[10] "temp"
    (2221749 'move' errorExists[2221744](2221746 '!=' error[1883524] nil[44]))
    if errorExists[2221744]
    {
      (1883530 '=' error_out[1883519] error[1883524])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[1883521] _endcreateStringWithNewBuffer[1883521]
    }
    (503807 'move' ret[503802] call_tmp[598468])
    label _endcreateStringWithNewBuffer[1883521]
    (1904906 '=' _retArg[1904904] ret[503802])
    (1904908 return _void[55])
  }
  function _ref(string)[938128].init[30763](ref arg this[32628]:_ref(string)[938128]) : void[4] "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val tmp[453905]:int(64)[13] "dead after last mention" "temp"
    (453908 'move' tmp[453905] 0)
    (453910 '.=' this[32628] buffLen[30722] tmp[453905])
    val tmp[453915]:int(64)[13] "dead after last mention" "temp"
    (453918 'move' tmp[453915] 0)
    (453920 '.=' this[32628] buffSize[30728] tmp[453915])
    val tmp[453925]:int(64)[13] "dead after last mention" "temp"
    (453928 'move' tmp[453925] 0)
    (453930 '.=' this[32628] cachedNumCodepoints[30734] tmp[453925])
    val tmp[453935]:c_ptr(uint(8))[937612] "dead after last mention" "temp"
    val init_coerce_tmp[954488]:c_ptr(uint(8))[937612] "dead after last mention" "temp"
    (954491 'move' init_coerce_tmp[954488](954498 'cast' c_ptr(uint(8))[937612] nil[44]))
    (453938 'move' tmp[453935] init_coerce_tmp[954488])
    (453940 '.=' this[32628] buff[30740] tmp[453935])
    val tmp[453945]:bool[10] "dead after last mention" "temp"
    (453948 'move' tmp[453945] 1)
    (453950 '.=' this[32628] isOwned[30746] tmp[453945])
    val tmp[453955]:bool[10] "dead after last mention" "temp"
    (453958 'move' tmp[453955] 0)
    (453960 '.=' this[32628] hasEscapes[30752] tmp[453955])
    val tmp[453965]:int(32)[95] "dead after last mention" "temp"
    (453967 'move' tmp[453965] chpl_nodeID[208207])
    (453969 '.=' this[32628] locale_id[30757] tmp[453965])
    (503818 return _void[55])
  }
  function _ref(string)[938128].init=[30774](ref arg this[32632]:_ref(string)[938128], const  ref arg s[30771]:string[26]) : void[4] "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val tmp[453974]:int(64)[13] "dead after last mention" "temp"
    (453977 'move' tmp[453974] 0)
    (453979 '.=' this[32632] buffLen[30722] tmp[453974])
    val tmp[453984]:int(64)[13] "dead after last mention" "temp"
    (453987 'move' tmp[453984] 0)
    (453989 '.=' this[32632] buffSize[30728] tmp[453984])
    val tmp[453994]:int(64)[13] "dead after last mention" "temp"
    (453997 'move' tmp[453994] 0)
    (453999 '.=' this[32632] cachedNumCodepoints[30734] tmp[453994])
    val tmp[454004]:c_ptr(uint(8))[937612] "dead after last mention" "temp"
    val init_coerce_tmp[954508]:c_ptr(uint(8))[937612] "dead after last mention" "temp"
    (954511 'move' init_coerce_tmp[954508](957462 'cast' c_ptr(uint(8))[937612] nil[44]))
    (454007 'move' tmp[454004] init_coerce_tmp[954508])
    (454009 '.=' this[32632] buff[30740] tmp[454004])
    val tmp[454014]:bool[10] "dead after last mention" "temp"
    (454017 'move' tmp[454014] 1)
    (454019 '.=' this[32632] isOwned[30746] tmp[454014])
    val tmp[454024]:bool[10] "dead after last mention" "temp"
    (454027 'move' tmp[454024] 0)
    (454029 '.=' this[32632] hasEscapes[30752] tmp[454024])
    val tmp[454034]:int(32)[95] "dead after last mention" "temp"
    (454036 'move' tmp[454034] chpl_nodeID[208207])
    (454038 '.=' this[32632] locale_id[30757] tmp[454034])
    (30788 call initWithNewBuffer[954518] this[32632] s[30771])
    (503820 return _void[55])
  }
  function _ref(string)[938128].deinit[30834](ref arg this[32640]:_ref(string)[938128]) : void[4] "destructor" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    ref tmp[417440]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (417451 'move' tmp[417440](369774 call isOwned[758179] this[32640]))
    val tmp[552958]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[552959]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[598509]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[938193]:bool[10] "dead after last mention" "const" "temp"
    (938195 'move' tmp[938193](938197 'deref' tmp[417440]))
    (598512 'move' call_tmp[598509] tmp[938193])
    (552964 'move' tmp[552959] call_tmp[598509])
    if tmp[552959]
    {
      const-val tmp[552966]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      ref call_tmp[598516]:_ref(c_ptr(uint(8)))[937621] "dead after last mention" "maybe param" "temp"
      (598519 'move' call_tmp[598516](30838 call buff[758153] this[32640]))
      const-val call_tmp[598521]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[938297]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (938301 'move' coerce_tmp[938297](938299 'deref' call_tmp[598516]))
      (598524 'move' call_tmp[598521](30842 call !=[938220] coerce_tmp[938297] nil[44]))
      (552968 'move' tmp[552966] call_tmp[598521])
      (552973 'move' tmp[552958] tmp[552966])
    }
    {
      (552978 'move' tmp[552958] 0)
    }
    const-val call_tmp[598526]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (598529 'move' call_tmp[598526] tmp[552958])
    if call_tmp[598526]
    {
      const-val tmp[30868]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
      ref call_tmp[598533]:_ref(int(32))[936815] "dead after last mention" "maybe param" "temp"
      (598536 'move' call_tmp[598533](30850 call locale_id[758231] this[32640]))
      const-val call_tmp[598538]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val coerce_tmp[938315]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (938319 'move' coerce_tmp[938315](938317 'deref' call_tmp[598533]))
      (598541 'move' call_tmp[598538](30855 call chpl_buildLocaleID[209470] coerce_tmp[938315] c_sublocid_any[89878]))
      const-val call_tmp[598543]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
      (598546 'move' call_tmp[598543](30856 'chpl_on_locale_num' call_tmp[598538]))
      (30870 'move' tmp[30868] call_tmp[598543])
      val isdirect[2197774]:bool[10] "temp"
      (2197779 'move' isdirect[2197774](2197776 call chpl_doDirectExecuteOn[187469] tmp[30868]))
      if isdirect[2197774]
      {
        (2197783 call on_fn[933975] this[32640])
      }
      {
        val _args_foron_fn[2197798]:_class_localson_fn[2197790] "temp"
        (2197802 'move' _args_foron_fn[2197798](2197800 'stack allocate class' _class_localson_fn[2197790]))
        (2197804 '.=' _args_foron_fn[2197798] _0_tmp[2197793] tmp[30868])
        ref tmp[2197808]:string[26] "temp"
        (2197812 'move' tmp[2197808](2197810 'set reference' this[32640]))
        (2197814 '.=' _args_foron_fn[2197798] _1_this[2197795] tmp[2197808])
        val _args_vforon_fn[2197818]:c_void_ptr[149] "temp"
        (2197822 'move' _args_vforon_fn[2197818](2197820 'cast_to_void_star' _args_foron_fn[2197798]))
        val _args_sizeon_fn[2197824]:int(64)[13] "temp"
        (2197828 'move' _args_sizeon_fn[2197824](2197826 'sizeof_bundle' _class_localson_fn[2197790]))
        on(2197860 call wrapon_fn[2197830] tmp[30868] _args_vforon_fn[2197818] _args_sizeon_fn[2197824] _args_foron_fn[2197798])
      }
      {
      }
    }
    (503824 return _void[55])
  }
  function _ref(string)[938128].chpl__serialize[30886](const  ref arg this[32644]:_ref(string)[938128], ref arg _retArg[1905024]:_ref(__serializeHelper)[938206]) : void[4] "fn returns via _retArg" "method" "primary method" "resolved"
  {
    const-val ret[503828]:__serializeHelper[28089] "dead after last mention" "RVV" "temp"
    val data[30889]:chpl__inPlaceBuffer[28022] "dead at end of block" "insert auto destroy"
    ref call_tmp[598557]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (598560 'move' call_tmp[598557](369781 call buffLen[758075] this[32644]))
    const-val call_tmp[598562]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1867010]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1867014 'move' coerce_tmp[1867010](1867012 'deref' call_tmp[598557]))
    const-val coerce_tmp[1867016]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1867022 'move' coerce_tmp[1867016](1867018 'cast' int(64)[13] CHPL_SHORT_STRING_SIZE[28016]))
    (598565 'move' call_tmp[598562](30896 call <=[437128] coerce_tmp[1867010] coerce_tmp[1867016]))
    const-val call_tmp[598567]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (598570 'move' call_tmp[598567] call_tmp[598562])
    if call_tmp[598567]
    {
      val call_tmp[598572]:c_ptr(uint(8))[937612] "dead after last mention" "expr temp" "maybe param" "temp"
      (598575 'move' call_tmp[598572](30902 call chpl__getInPlaceBufferDataForWrite[28045] data[30889]))
      ref call_tmp[598579]:_ref(int(32))[936815] "dead after last mention" "maybe param" "temp"
      (598582 'move' call_tmp[598579](369788 call locale_id[758231] this[32644]))
      ref call_tmp[598586]:_ref(c_ptr(uint(8)))[937621] "dead after last mention" "maybe param" "temp"
      (598589 'move' call_tmp[598586](369793 call buff[758153] this[32644]))
      ref call_tmp[598593]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
      (598596 'move' call_tmp[598593](369798 call buffLen[758075] this[32644]))
      const-val coerce_tmp[1867029]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1867033 'move' coerce_tmp[1867029](1867031 'deref' call_tmp[598579]))
      const-val coerce_tmp[1867035]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1867041 'move' coerce_tmp[1867035](1867037 'cast' int(64)[13] coerce_tmp[1867029]))
      val coerce_tmp[1867043]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1867047 'move' coerce_tmp[1867043](1867045 'deref' call_tmp[598586]))
      const-val coerce_tmp[1867049]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1867053 'move' coerce_tmp[1867049](1867051 'deref' call_tmp[598593]))
      (30907 call chpl_string_comm_get[954239] call_tmp[598572] coerce_tmp[1867035] coerce_tmp[1867043] coerce_tmp[1867049])
    }
    ref call_tmp[598600]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (598603 'move' call_tmp[598600](369804 call buffLen[758075] this[32644]))
    ref call_tmp[598607]:_ref(c_ptr(uint(8)))[937621] "dead after last mention" "maybe param" "temp"
    (598610 'move' call_tmp[598607](369809 call buff[758153] this[32644]))
    ref call_tmp[598614]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (598617 'move' call_tmp[598614](369814 call buffSize[758101] this[32644]))
    ref call_tmp[598621]:_ref(int(32))[936815] "dead after last mention" "maybe param" "temp"
    (598624 'move' call_tmp[598621](369819 call locale_id[758231] this[32644]))
    ref call_tmp[598628]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (598631 'move' call_tmp[598628](369825 call cachedNumCodepoints[758127] this[32644]))
    const-val call_tmp[598633]:__serializeHelper[28089] "dead after last mention" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1867062]:__serializeHelper[28089] "dead after last mention" "temp"
    const-val coerce_tmp[1867089]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1867093 'move' coerce_tmp[1867089](1867091 'deref' call_tmp[598600]))
    val coerce_tmp[1867095]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1867099 'move' coerce_tmp[1867095](1867097 'deref' call_tmp[598607]))
    const-val coerce_tmp[1867101]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1867105 'move' coerce_tmp[1867101](1867103 'deref' call_tmp[598614]))
    const-val coerce_tmp[1867107]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1867111 'move' coerce_tmp[1867107](1867109 'deref' call_tmp[598621]))
    const-val coerce_tmp[1867113]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1867117 'move' coerce_tmp[1867113](1867115 'deref' call_tmp[598628]))
    (1867065 call init[753819] initTemp[1867062] coerce_tmp[1867089] coerce_tmp[1867095] coerce_tmp[1867101] coerce_tmp[1867107] data[30889] coerce_tmp[1867113])
    (598636 'move' call_tmp[598633] initTemp[1867062])
    (503833 'move' ret[503828] call_tmp[598633])
    gotoReturn _end_chpl__serialize[503826] _end_chpl__serialize[503826]
    label _end_chpl__serialize[503826]
    (1905026 '=' _retArg[1905024] ret[503828])
    (1905028 return _void[55])
  }
  function chpl__deserialize[1867128](const  ref arg data[1867134]:__serializeHelper[28089], ref arg _retArg[1918884]:_ref(string)[938128]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val _formal_type_tmp_[1880386]:string[26] "temp"
    val ret[1867136]:string[26] "dead after last mention" "RVV" "temp"
    ref call_tmp[1867144]:_ref(int(32))[936815] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1867146 'move' call_tmp[1867144](1867149 call locale_id[753741] data[1867134]))
    const-val call_tmp[1867152]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1867388]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1867392 'move' coerce_tmp[1867388](1867390 'deref' call_tmp[1867144]))
    (1867154 'move' call_tmp[1867152](1867157 call !=[436106] coerce_tmp[1867388] chpl_nodeID[208207]))
    const-val call_tmp[1867160]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1867162 'move' call_tmp[1867160] call_tmp[1867152])
    if call_tmp[1867160]
    {
      ref call_tmp[1867169]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const" "temp"
      (1867171 'move' call_tmp[1867169](1867174 call buffLen[753663] data[1867134]))
      const-val call_tmp[1867177]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1867396]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1867400 'move' coerce_tmp[1867396](1867398 'deref' call_tmp[1867169]))
      const-val coerce_tmp[1867402]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1867408 'move' coerce_tmp[1867402](1867404 'cast' int(64)[13] CHPL_SHORT_STRING_SIZE[28016]))
      (1867179 'move' call_tmp[1867177](1867182 call <=[437128] coerce_tmp[1867396] coerce_tmp[1867402]))
      const-val call_tmp[1867185]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1867187 'move' call_tmp[1867185] call_tmp[1867177])
      if call_tmp[1867185]
      {
        ref call_tmp[1867194]:_ref(chpl__inPlaceBuffer)[967629] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1867196 'move' call_tmp[1867194](1867199 call shortData[753767] data[1867134]))
        val call_tmp[1867202]:c_ptr(uint(8))[937612] "dead after last mention" "expr temp" "maybe param" "temp"
        (1867204 'move' call_tmp[1867202](1867207 call chpl__getInPlaceBufferData[28033] call_tmp[1867194]))
        ref call_tmp[1867209]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1867211 'move' call_tmp[1867209](1867214 call buffLen[753663] data[1867134]))
        ref call_tmp[1867217]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1867219 'move' call_tmp[1867217](1867222 call size[753715] data[1867134]))
        ref call_tmp[1867225]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1867227 'move' call_tmp[1867225](1867230 call cachedNumCodepoints[753793] data[1867134]))
        const-val call_tmp[1867233]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val coerce_tmp[1867416]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1867420 'move' coerce_tmp[1867416](1867418 'deref' call_tmp[1867209]))
        const-val coerce_tmp[1867422]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1867426 'move' coerce_tmp[1867422](1867424 'deref' call_tmp[1867217]))
        const-val coerce_tmp[1867428]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1867432 'move' coerce_tmp[1867428](1867430 'deref' call_tmp[1867225]))
        const-val ret_tmp[1904910]:string[26] "temp"
        (1867238 call chpl_createStringWithNewBufferNV[30582] call_tmp[1867202] coerce_tmp[1867416] coerce_tmp[1867422] coerce_tmp[1867428] ret_tmp[1904910])
        (1904913 'move' call_tmp[1867233] ret_tmp[1904910])
        (1867243 'move' ret[1867136] call_tmp[1867233])
        gotoReturn _end_chpl__deserialize[1867382] _end_chpl__deserialize[1867382]
      }
      {
        ref call_tmp[1867250]:_ref(int(32))[936815] "dead at end of block" "maybe param" "reference to a const" "temp"
        (1867252 'move' call_tmp[1867250](1867255 call locale_id[753741] data[1867134]))
        ref call_tmp[1867258]:_ref(c_ptr(uint(8)))[937621] "dead at end of block" "maybe param" "reference to a const" "temp"
        (1867260 'move' call_tmp[1867258](1867263 call buff[753689] data[1867134]))
        ref call_tmp[1867266]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
        (1867268 'move' call_tmp[1867266](1867271 call buffLen[753663] data[1867134]))
        val call_tmp[1867274]:c_ptr(uint(8))[937612] "dead at end of block" "maybe param" "temp"
        const-val coerce_tmp[1867706]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1867710 'move' coerce_tmp[1867706](1867708 'deref' call_tmp[1867250]))
        const-val coerce_tmp[1867712]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1867718 'move' coerce_tmp[1867712](1867714 'cast' int(64)[13] coerce_tmp[1867706]))
        val coerce_tmp[1867720]:c_ptr(uint(8))[937612] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1867724 'move' coerce_tmp[1867720](1867722 'deref' call_tmp[1867258]))
        const-val coerce_tmp[1867726]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1867730 'move' coerce_tmp[1867726](1867728 'deref' call_tmp[1867266]))
        (1867276 'move' call_tmp[1867274](1867279 call bufferCopyRemote[172830] coerce_tmp[1867712] coerce_tmp[1867720] coerce_tmp[1867726]))
        val localBuff[1867283]:c_ptr(uint(8))[937612] "dead at end of block" "insert auto destroy"
        (1867285 'move' localBuff[1867283](1867733 call chpl__initCopy[954219] call_tmp[1867274]))
        ref call_tmp[1867289]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1867291 'move' call_tmp[1867289](1867294 call buffLen[753663] data[1867134]))
        ref call_tmp[1867297]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1867299 'move' call_tmp[1867297](1867302 call size[753715] data[1867134]))
        ref call_tmp[1867305]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1867307 'move' call_tmp[1867305](1867310 call cachedNumCodepoints[753793] data[1867134]))
        const-val call_tmp[1867313]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val coerce_tmp[1867739]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1867743 'move' coerce_tmp[1867739](1867741 'deref' call_tmp[1867289]))
        const-val coerce_tmp[1867745]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1867749 'move' coerce_tmp[1867745](1867747 'deref' call_tmp[1867297]))
        const-val coerce_tmp[1867751]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1867755 'move' coerce_tmp[1867751](1867753 'deref' call_tmp[1867305]))
        const-val ret_tmp[1905006]:string[26] "temp"
        (1867318 call chpl_createStringWithOwnedBufferNV[30676] localBuff[1867283] coerce_tmp[1867739] coerce_tmp[1867745] coerce_tmp[1867751] ret_tmp[1905006])
        (1905009 'move' call_tmp[1867313] ret_tmp[1905006])
        (1867323 'move' ret[1867136] call_tmp[1867313])
        gotoReturn _end_chpl__deserialize[1867382] _end_chpl__deserialize[1867382]
      }
    }
    {
      ref call_tmp[1867333]:_ref(c_ptr(uint(8)))[937621] "dead after last mention" "maybe param" "reference to a const" "temp"
      (1867335 'move' call_tmp[1867333](1867338 call buff[753689] data[1867134]))
      ref call_tmp[1867341]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const" "temp"
      (1867343 'move' call_tmp[1867341](1867346 call buffLen[753663] data[1867134]))
      ref call_tmp[1867349]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const" "temp"
      (1867351 'move' call_tmp[1867349](1867354 call size[753715] data[1867134]))
      ref call_tmp[1867357]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const" "temp"
      (1867359 'move' call_tmp[1867357](1867362 call cachedNumCodepoints[753793] data[1867134]))
      const-val call_tmp[1867365]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val coerce_tmp[1867762]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1867766 'move' coerce_tmp[1867762](1867764 'deref' call_tmp[1867333]))
      const-val coerce_tmp[1867768]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1867772 'move' coerce_tmp[1867768](1867770 'deref' call_tmp[1867341]))
      const-val coerce_tmp[1867774]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1867778 'move' coerce_tmp[1867774](1867776 'deref' call_tmp[1867349]))
      const-val coerce_tmp[1867780]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1867784 'move' coerce_tmp[1867780](1867782 'deref' call_tmp[1867357]))
      const-val ret_tmp[1904928]:string[26] "temp"
      (1867370 call chpl_createStringWithBorrowedBufferNV[30629] coerce_tmp[1867762] coerce_tmp[1867768] coerce_tmp[1867774] coerce_tmp[1867780] ret_tmp[1904928])
      (1904931 'move' call_tmp[1867365] ret_tmp[1904928])
      (1867375 'move' ret[1867136] call_tmp[1867365])
      gotoReturn _end_chpl__deserialize[1867382] _end_chpl__deserialize[1867382]
    }
    label _end_chpl__deserialize[1867382]
    (1918886 '=' _retArg[1918884] ret[1867136])
    (1918888 return _void[55])
  }
  function _ref(string)[938128].isASCII[31049](const  ref arg this[32652]:_ref(string)[938128]) : bool[10] "inline" "method" "primary method" "resolved" "fn synchronization free"
  {
    val ret[503860]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[598797]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (598800 'move' call_tmp[598797](31052 call numCodepoints[32826] this[32652]))
    const-val call_tmp[598804]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (598807 'move' call_tmp[598804](31056 call numBytes[32810] this[32652]))
    const-val call_tmp[598809]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (598812 'move' call_tmp[598809](31059 call ==[435744] call_tmp[598797] call_tmp[598804]))
    (503865 'move' ret[503860] call_tmp[598809])
    (503862 return ret[503860])
  }
  function _ref(string)[938128].byteIndices[31068](const  ref arg this[32656]:_ref(string)[938128], ref arg _retArg[1905108]:_ref(range(int(64),bounded,false))[1027047]) : void[4] "fn returns via _retArg" "inline" "method" "primary method" "no parens" "resolved" "fn synchronization free"
  {
    const-val ret[503869]:range(int(64),bounded,false)[1027003] "dead after last mention" "RVV" "temp"
    const-val call_tmp[598816]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (598819 'move' call_tmp[598816](31072 call numBytes[32810] this[32656]))
    const-val call_tmp[598821]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (598824 'move' call_tmp[598821](31076 call -[962415] call_tmp[598816]))
    const-val call_tmp[598826]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1907382]:range(int(64),bounded,false)[1027003] "temp"
    (31078 call chpl_build_bounded_range[455253] 0 call_tmp[598821] ret_tmp[1907382])
    (1907385 'move' call_tmp[598826] ret_tmp[1907382])
    (503874 'move' ret[503869] call_tmp[598826])
    (1905110 '=' _retArg[1905108] ret[503869])
    (1905112 return _void[55])
  }
  function _ic__cpIndexLen__ref_string[1122574].advance[1122600](const in arg this[1122602]:_ic__cpIndexLen__ref_string[1122574]) : void[4] "auto ii" "method" "resolved"
  {
    const-val more[2094982]:int(64)[13]
    (2095036 'move' more[2094982](2095033 '.v' this[1122602] more[1122577]))
    const-val tmp[2094997]:bool[10] "temp"
    (2095004 'move' tmp[2094997](2095001 '==' more[2094982] 3))
    if tmp[2094997]
    {
      gotoIterResume _jump_3[2094974] _jump_3[2094974]
    }
    const-val tmp[2094985]:bool[10] "temp"
    (2094992 'move' tmp[2094985](2094989 '==' more[2094982] 2))
    if tmp[2094985]
    {
      gotoIterResume _jump_2[2094964] _jump_2[2094964]
    }
    const-val tmp[2095009]:bool[10] "temp"
    (2095014 'move' tmp[2095009](2095011 '==' more[2094982] -2))
    if tmp[2095009]
    {
      gotoIterResume _jump_break_2[2094966] _jump_break_2[2094966]
    }
    const-val tmp[2095021]:bool[10] "temp"
    (2095028 'move' tmp[2095021](2095025 '==' more[2094982] -3))
    if tmp[2095021]
    {
      gotoIterResume _jump_break_3[2094976] _jump_break_3[2094976]
    }
    val ret[503888]:_ir__cpIndexLen__ref_string[1122580] "dead after last mention" "RVV" "temp"
    const-val call_tmp[598838]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1905206]:string[26] "temp"
    ref tmp[2094252]:_ref(string)[938128] "temp"
    (2094257 'move' tmp[2094252](2094254 '.v' this[1122602] F0_this[2094206]))
    (31117 call localize[32889] tmp[2094252] ret_tmp[1905206])
    (1905209 'move' call_tmp[598838] ret_tmp[1905206])
    val tmp[2094259]:string[26] "temp"
    (540375 'move' tmp[2094259] call_tmp[598838])
    (2094261 '.=' this[1122602] F2_localThis[2094214] tmp[2094259])
    const-val call_tmp[598845]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    ref tmp[2094265]:_ref(string)[938128] "temp"
    (2094270 'move' tmp[2094265](2094267 '.' this[1122602] F2_localThis[2094214]))
    (598848 'move' call_tmp[598845](31130 call isASCII[31049] tmp[2094265]))
    const-val call_tmp[598850]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (598853 'move' call_tmp[598850] call_tmp[598845])
    if call_tmp[598845]
    {
      const-val ret_tmp[1905030]:range(int(64),bounded,false)[1027003] "temp"
      ref tmp[2094272]:_ref(string)[938128] "temp"
      (2094277 'move' tmp[2094272](2094274 '.v' this[1122602] F0_this[2094206]))
      (31181 call byteIndices[31068] tmp[2094272] ret_tmp[1905030])
      val tmp[2094279]:range(int(64),bounded,false)[1027003] "temp"
      (1905033 'move' tmp[2094279] ret_tmp[1905030])
      (2094281 '.=' this[1122602] F4_call_tmp[2094218] tmp[2094279])
      val call_tmp[598862]:_ic_these_range_int64_t_bounded_F[1096892] "dead at end of block" "expr temp" "maybe param" "temp"
      ref tmp[2094285]:_ref(range(int(64),bounded,false))[1027047] "temp"
      (2094290 'move' tmp[2094285](2094287 '.' this[1122602] F4_call_tmp[2094218]))
      (598865 'move' call_tmp[598862](31184 call _getIterator[1095509] tmp[2094285]))
      const-val call_tmp[598869]:_ir_chpl_bytes__ref_string[1108451] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val ret_tmp[1905362]:_ir_chpl_bytes__ref_string[1108451] "temp"
      ref tmp[2094292]:_ref(string)[938128] "temp"
      (2094297 'move' tmp[2094292](2094294 '.v' this[1122602] F0_this[2094206]))
      (31191 call chpl_bytes[33577] tmp[2094292] ret_tmp[1905362])
      (1905365 'move' call_tmp[598869] ret_tmp[1905362])
      val call_tmp[598874]:_ic_chpl_bytes__ref_string[1108445] "dead at end of block" "expr temp" "maybe param" "temp"
      (598877 'move' call_tmp[598874](31192 call _getIterator[1108460] call_tmp[598869]))
      const-val ret_tmp[1909762]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108755] "temp"
      (31149 call _build_tuple[1108713] call_tmp[598862] call_tmp[598874] ret_tmp[1909762])
      val tmp[2094299]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108755] "temp"
      (1909765 'move' tmp[2094299] ret_tmp[1909762])
      (2094301 '.=' this[1122602] F3__iterator[2094216] tmp[2094299])
      val tmp[2094305]:_ic_these_range_int64_t_bounded_F[1096892] "temp"
      const-val tmp[2094311]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108755] "temp"
      (2094316 'move' tmp[2094311](2094313 '.v' this[1122602] F3__iterator[2094216]))
      (1976686 'move' tmp[2094305](1976683 '.v' tmp[2094311] x0[1108751]))
      (2094307 '.=' this[1122602] F5__iterator[2094220] tmp[2094305])
      val tmp[2094318]:_ic_chpl_bytes__ref_string[1108445] "temp"
      const-val tmp[2094324]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108755] "temp"
      (2094329 'move' tmp[2094324](2094326 '.v' this[1122602] F3__iterator[2094216]))
      (1976699 'move' tmp[2094318](1976696 '.v' tmp[2094324] x1[1108753]))
      (2094320 '.=' this[1122602] F6__iterator[2094222] tmp[2094318])
      val tmp[2094331]:_ic_these_range_int64_t_bounded_F[1096892] "temp"
      (2094336 'move' tmp[2094331](2094333 '.v' this[1122602] F5__iterator[2094220]))
      (1976708 call zip1[1096927] tmp[2094331])
      val tmp[2094338]:_ic_chpl_bytes__ref_string[1108445] "temp"
      (2094343 'move' tmp[2094338](2094340 '.v' this[1122602] F6__iterator[2094222]))
      (1976743 call zip1[1108480] tmp[2094338])
      const-val isFinished[1976769]:bool[10] "temp"
      val hasMore[1976768]:bool[10] "temp"
      CForLoop[1976818]
      {
        val tmp[2094345]:_ic_chpl_bytes__ref_string[1108445] "temp"
        (2094350 'move' tmp[2094345](2094347 '.v' this[1122602] F6__iterator[2094222]))
        (1976823 call zip2[1108489] tmp[2094345])
        const-val retTmp[1976826]:int(64)[13] "temp"
        val tmp[2094352]:_ic_chpl_bytes__ref_string[1108445] "temp"
        (2094357 'move' tmp[2094352](2094354 '.v' this[1122602] F6__iterator[2094222]))
        (1976828 'move' retTmp[1976826](1976831 call hasMore[1108516] tmp[2094352]))
        (1976833 'move' hasMore[1976768](1976835 'cast' bool[10] retTmp[1976826]))
        (1976838 'move' isFinished[1976769](1976840 '!' hasMore[1976768]))
        if isFinished[1976769]
        {
          (1976844 'chpl_error' c"zippered iterations have non-equal lengths")
        }
        val tmp[2094359]:_ic_chpl_bytes__ref_string[1108445] "temp"
        (2094364 'move' tmp[2094359](2094361 '.v' this[1122602] F6__iterator[2094222]))
        (1976848 'move' _index[1976863](1976851 call getValue[1108525] tmp[2094359]))
        val tmp[2094366]:_ic_these_range_int64_t_bounded_F[1096892] "temp"
        (2094371 'move' tmp[2094366](2094368 '.v' this[1122602] F5__iterator[2094220]))
        (1976855 call zip2[1096936] tmp[2094366])
        val tmp[2094373]:_ic_these_range_int64_t_bounded_F[1096892] "temp"
        (2094378 'move' tmp[2094373](2094375 '.v' this[1122602] F5__iterator[2094220]))
        (1976858 'move' _index[1976869](1976861 call getValue[1096972] tmp[2094373]))
        val _index[1976863]:uint(8)[100] "temp"
        val tmp[2094380]:(int(64),uint(8))[1111229] "temp"
        (2094385 'move' tmp[2094380](2094382 '.v' this[1122602] F7__indexOfInterest[2094224]))
        (1976865 '.=' tmp[2094380] x1[1111227] _index[1976863])
        (2094387 '.=' this[1122602] F7__indexOfInterest[2094224] tmp[2094380])
        val _index[1976869]:int(64)[13] "temp"
        val tmp[2094391]:(int(64),uint(8))[1111229] "temp"
        (2094396 'move' tmp[2094391](2094393 '.v' this[1122602] F7__indexOfInterest[2094224]))
        (1976871 '.=' tmp[2094391] x0[1111225] _index[1976869])
        (2094398 '.=' this[1122602] F7__indexOfInterest[2094224] tmp[2094391])
        1
        const-val i[1976876]:int(64)[13] "const" "index var" "insert auto destroy"
        const-val tmp[2094402]:(int(64),uint(8))[1111229] "temp"
        (2094407 'move' tmp[2094402](2094404 '.v' this[1122602] F7__indexOfInterest[2094224]))
        (1976878 'move' i[1976876](1976880 '.v' tmp[2094402] x0[1111225]))
        const-val b[1976883]:uint(8)[100] "const" "index var" "insert auto destroy"
        const-val tmp[2094409]:(int(64),uint(8))[1111229] "temp"
        (2094414 'move' tmp[2094409](2094411 '.v' this[1122602] F7__indexOfInterest[2094224]))
        (1976885 'move' b[1976883](1976887 '.v' tmp[2094409] x1[1111227]))
        const-val yret[1976890]:(int(32),byteIndex,int(64))[1122331] "dead after last mention" "YVV" "temp"
        val call_tmp[1976892]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[1976894]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
        (1976896 'move' call_tmp[1976894](1976898 'cast' int(32)[95] b[1976883]))
        ref tmp[2094416]:_ref(byteIndex)[948948] "temp"
        (2094421 'move' tmp[2094416](2094418 '.' this[1122602] F9_ret_tmp[2094228]))
        (1976906 call _cast[39486] i[1976876] tmp[2094416])
        val tmp[2094423]:byteIndex[28173] "temp"
        const-val tmp[2094429]:byteIndex[28173] "temp"
        (2094434 'move' tmp[2094429](2094431 '.v' this[1122602] F9_ret_tmp[2094228]))
        (1976909 'move' tmp[2094423] tmp[2094429])
        (2094425 '.=' this[1122602] F8_call_tmp[2094226] tmp[2094423])
        ref tmp[2094436]:_ref(byteIndex)[948948] "temp"
        (2094441 'move' tmp[2094436](2094438 '.' this[1122602] F8_call_tmp[2094226]))
        ref tmp[2094443]:_ref((int(32),byteIndex,int(64)))[1122403] "temp"
        (2094448 'move' tmp[2094443](2094445 '.' this[1122602] F10_ret_tmp[2094230]))
        (1976917 call _build_tuple[1122281] call_tmp[1976894] tmp[2094436] 1 tmp[2094443])
        val tmp[2094450]:(int(32),byteIndex,int(64))[1122331] "temp"
        const-val tmp[2094456]:(int(32),byteIndex,int(64))[1122331] "temp"
        (2094461 'move' tmp[2094456](2094458 '.v' this[1122602] F10_ret_tmp[2094230]))
        (1976922 'move' tmp[2094450] tmp[2094456])
        (2094452 '.=' this[1122602] F18_call_tmp[2094246] tmp[2094450])
        const-val tmp[2094463]:(int(32),byteIndex,int(64))[1122331] "temp"
        (2094468 'move' tmp[2094463](2094465 '.v' this[1122602] F18_call_tmp[2094246]))
        (1976925 'move' yret[1976890] tmp[2094463])
        val tmp[2094474]:(int(32),byteIndex,int(64))[1122331] "temp"
        (2094479 'move' tmp[2094474](2094476 '.v' this[1122602] F18_call_tmp[2094246]))
        (2094471 '.=' this[1122602] value[2094250] tmp[2094474])
        (2094958 '.=' this[1122602] more[1122577] 2)
        gotoIterEnd _end[2094956] _end[2094956]
        label _jump_break_2[2094966]
        ref moreRef1[1977011]:_ref(int(64))[936761] "temp"
        ref tmp[2094481]:_ref(_ic_these_range_int64_t_bounded_F)[1097035] "temp"
        (2094486 'move' tmp[2094481](2094483 '.' this[1122602] F5__iterator[2094220]))
        (1977013 'move' moreRef1[1977011](1977015 '.' tmp[2094481] more[1096895]))
        const-val moreVal1[1977018]:int(64)[13] "const" "temp"
        (1977020 '=' moreVal1[1977018] moreRef1[1977011])
        const-val moreValNeg1[1977023]:int(64)[13] "const" "temp"
        (1977025 'move' moreValNeg1[1977023](1977027 'u-' moreVal1[1977018]))
        (1977029 '=' moreRef1[1977011] moreValNeg1[1977023])
        val tmp[2094488]:_ic_these_range_int64_t_bounded_F[1096892] "temp"
        (2094493 'move' tmp[2094488](2094490 '.v' this[1122602] F5__iterator[2094220]))
        (1977033 call advance[1096918] tmp[2094488])
        ref moreRef2[1977035]:_ref(int(64))[936761] "temp"
        ref tmp[2094495]:_ref(_ic_chpl_bytes__ref_string)[1108588] "temp"
        (2094500 'move' tmp[2094495](2094497 '.' this[1122602] F6__iterator[2094222]))
        (1977037 'move' moreRef2[1977035](1977039 '.' tmp[2094495] more[1108448]))
        const-val moreVal2[1977042]:int(64)[13] "const" "temp"
        (1977044 '=' moreVal2[1977042] moreRef2[1977035])
        const-val moreValNeg2[1977047]:int(64)[13] "const" "temp"
        (1977049 'move' moreValNeg2[1977047](1977051 'u-' moreVal2[1977042]))
        (1977053 '=' moreRef2[1977035] moreValNeg2[1977047])
        val tmp[2094502]:_ic_chpl_bytes__ref_string[1108445] "temp"
        (2094507 'move' tmp[2094502](2094504 '.v' this[1122602] F6__iterator[2094222]))
        (1977057 call advance[1108471] tmp[2094502])
        ref tmp[2094509]:_ref(byteIndex)[948948] "temp"
        (2094514 'move' tmp[2094509](2094511 '.' this[1122602] F8_call_tmp[2094226]))
        (1976933 call chpl__autoDestroy[1601936] tmp[2094509])
        ref tmp[2094516]:_ref((_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string))[1108863] "temp"
        (2094521 'move' tmp[2094516](2094518 '.' this[1122602] F3__iterator[2094216]))
        (1976936 call _freeIterator[1108913] tmp[2094516])
        ref tmp[2094523]:_ref((_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string))[1108863] "temp"
        (2094528 'move' tmp[2094523](2094525 '.' this[1122602] F3__iterator[2094216]))
        (1976939 call chpl__autoDestroy[1681548] tmp[2094523])
        const-val tmp[2094530]:range(int(64),bounded,false)[1027003] "temp"
        (2094535 'move' tmp[2094530](2094532 '.v' this[1122602] F4_call_tmp[2094218]))
        (1976942 call chpl__autoDestroy[1407763] tmp[2094530])
        ref tmp[2094537]:_ref(string)[938128] "temp"
        (2094542 'move' tmp[2094537](2094539 '.' this[1122602] F2_localThis[2094214]))
        (1976945 call chpl__autoDestroy[1601673] tmp[2094537])
        gotoReturn _end_cpIndexLen[1889413] _end_cpIndexLen[1889413]
        label _jump_2[2094964]
        ref tmp[2094544]:_ref(byteIndex)[948948] "temp"
        (2094549 'move' tmp[2094544](2094546 '.' this[1122602] F8_call_tmp[2094226]))
        (1976951 call chpl__autoDestroy[1601936] tmp[2094544])
        val tmp[2094551]:_ic_these_range_int64_t_bounded_F[1096892] "temp"
        (2094556 'move' tmp[2094551](2094553 '.v' this[1122602] F5__iterator[2094220]))
        (1976955 call zip3[1096945] tmp[2094551])
        val tmp[2094558]:_ic_chpl_bytes__ref_string[1108445] "temp"
        (2094563 'move' tmp[2094558](2094560 '.v' this[1122602] F6__iterator[2094222]))
        (1976959 call zip3[1108498] tmp[2094558])
        {
          val tmp[2094565]:_ic_these_range_int64_t_bounded_F[1096892] "temp"
          (2094570 'move' tmp[2094565](2094567 '.v' this[1122602] F5__iterator[2094220]))
          (1976718 call init[1096981] tmp[2094565])
          val tmp[2094572]:_ic_chpl_bytes__ref_string[1108445] "temp"
          (2094577 'move' tmp[2094572](2094574 '.v' this[1122602] F6__iterator[2094222]))
          (1976753 call init[1108534] tmp[2094572])
        }
        {
          val tmp[2094579]:_ic_these_range_int64_t_bounded_F[1096892] "temp"
          (2094584 'move' tmp[2094579](2094581 '.v' this[1122602] F5__iterator[2094220]))
          (1976734 call hasMore[1096963] tmp[2094579])
        }
        {
          val tmp[2094586]:_ic_these_range_int64_t_bounded_F[1096892] "temp"
          (2094591 'move' tmp[2094586](2094588 '.v' this[1122602] F5__iterator[2094220]))
          (1976722 call incr[1096990] tmp[2094586])
          val tmp[2094593]:_ic_chpl_bytes__ref_string[1108445] "temp"
          (2094598 'move' tmp[2094593](2094595 '.v' this[1122602] F6__iterator[2094222]))
          (1976757 call incr[1108543] tmp[2094593])
        }
      }
      const-val retTmp[1976805]:int(64)[13] "temp"
      val tmp[2094600]:_ic_chpl_bytes__ref_string[1108445] "temp"
      (2094605 'move' tmp[2094600](2094602 '.v' this[1122602] F6__iterator[2094222]))
      (1976807 'move' retTmp[1976805](1976802 call hasMore[1108516] tmp[2094600]))
      (1976812 'move' hasMore[1976768](1976809 'cast' bool[10] retTmp[1976805]))
      if hasMore[1976768]
      {
        (1976797 'chpl_error' c"zippered iterations have non-equal lengths")
      }
      val tmp[2094607]:_ic_chpl_bytes__ref_string[1108445] "temp"
      (2094612 'move' tmp[2094607](2094609 '.v' this[1122602] F6__iterator[2094222]))
      (1976765 call zip4[1108507] tmp[2094607])
      val tmp[2094614]:_ic_these_range_int64_t_bounded_F[1096892] "temp"
      (2094619 'move' tmp[2094614](2094616 '.v' this[1122602] F5__iterator[2094220]))
      (1976730 call zip4[1096954] tmp[2094614])
      ref tmp[2094621]:_ref((_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string))[1108863] "temp"
      (2094626 'move' tmp[2094621](2094623 '.' this[1122602] F3__iterator[2094216]))
      (1919144 call _freeIterator[1108913] tmp[2094621])
      ref tmp[2094628]:_ref((_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string))[1108863] "temp"
      (2094633 'move' tmp[2094628](2094630 '.' this[1122602] F3__iterator[2094216]))
      (1919146 call chpl__autoDestroy[1681548] tmp[2094628])
      const-val tmp[2094635]:range(int(64),bounded,false)[1027003] "temp"
      (2094640 'move' tmp[2094635](2094637 '.v' this[1122602] F4_call_tmp[2094218]))
      (1919149 call chpl__autoDestroy[1407763] tmp[2094635])
    }
    {
      const-val call_tmp[598904]:int(64)[13] "dead at end of block" "maybe param" "temp"
      ref tmp[2094642]:_ref(byteIndex)[948948] "temp"
      (2094647 'move' tmp[2094642](2094644 '.v' this[1122602] F1_start[2094210]))
      (598907 'move' call_tmp[598904](31235 call _cast[39465] tmp[2094642]))
      val tmp[2094649]:int(64)[13] "temp"
      (540377 'move' tmp[2094649] call_tmp[598904])
      (2094651 '.=' this[1122602] F11_i[2094232] tmp[2094649])
      const-val call_tmp[598909]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (598912 'move' call_tmp[598909](31244 call >[437788] call_tmp[598904] 0))
      const-val call_tmp[598914]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (598917 'move' call_tmp[598914] call_tmp[598909])
      if call_tmp[598909]
      {
        val tmp[31272]:bool[10] "dead after last mention" "temp"
        const-val tmp[417482]:bool[10] "dead after last mention" "maybe param" "temp"
        ref call_tmp[598921]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
        ref tmp[2094655]:_ref(string)[938128] "temp"
        (2094660 'move' tmp[2094655](2094657 '.' this[1122602] F2_localThis[2094214]))
        (598924 'move' call_tmp[598921](31313 call buffLen[758075] tmp[2094655]))
        const-val coerce_tmp[1122413]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1122417 'move' coerce_tmp[1122413](1122415 'deref' call_tmp[598921]))
        const-val tmp[2094662]:int(64)[13] "temp"
        (2094667 'move' tmp[2094662](2094664 '.v' this[1122602] F11_i[2094232]))
        (417493 'move' tmp[417482](31310 call <[437568] tmp[2094662] coerce_tmp[1122413]))
        val tmp[552985]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        const-val tmp[552986]:bool[10] "dead after last mention" "maybe param" "temp"
        const-val call_tmp[598931]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (598934 'move' call_tmp[598931] tmp[417482])
        (552991 'move' tmp[552986] tmp[417482])
        if tmp[417482]
        {
          const-val tmp[552993]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
          ref call_tmp[598938]:_ref(uint(8))[937097] "dead after last mention" "maybe param" "temp"
          ref _this_tmp_[1122424]:_ref(c_ptr(uint(8)))[937621] "dead after last mention" "temp"
          ref tmp[2094669]:_ref(string)[938128] "temp"
          (2094674 'move' tmp[2094669](2094671 '.' this[1122602] F2_localThis[2094214]))
          (1122426 'move' _this_tmp_[1122424](31321 call buff[758153] tmp[2094669]))
          val coerce_tmp[1122431]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1122435 'move' coerce_tmp[1122431](1122433 'deref' _this_tmp_[1122424]))
          const-val tmp[2094676]:int(64)[13] "temp"
          (2094681 'move' tmp[2094676](2094678 '.v' this[1122602] F11_i[2094232]))
          (598941 'move' call_tmp[598938](31324 call this[954280] coerce_tmp[1122431] tmp[2094676]))
          const-val call_tmp[598943]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[1122438]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1122442 'move' coerce_tmp[1122438](1122440 'deref' call_tmp[598938]))
          (598946 'move' call_tmp[598943](31319 call isInitialByte[181574] coerce_tmp[1122438]))
          const-val call_tmp[598948]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (598951 'move' call_tmp[598948](31317 call ![7494] call_tmp[598943]))
          (552995 'move' tmp[552993] call_tmp[598948])
          (553000 'move' tmp[552985] call_tmp[598948])
        }
        {
          (553005 'move' tmp[552985] 0)
        }
        (31326 'move' tmp[31272] tmp[552985])
        WhileDo[31277]
        {
          ref tmp[2094683]:_ref(int(64))[936761] "temp"
          (2094688 'move' tmp[2094683](2094685 '.' this[1122602] F11_i[2094232]))
          (31269 call +=[451431] tmp[2094683] 1)
          const-val tmp[417461]:bool[10] "dead after last mention" "maybe param" "temp"
          ref call_tmp[598955]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
          ref tmp[2094690]:_ref(string)[938128] "temp"
          (2094695 'move' tmp[2094690](2094692 '.' this[1122602] F2_localThis[2094214]))
          (598958 'move' call_tmp[598955](31288 call buffLen[758075] tmp[2094690]))
          const-val coerce_tmp[1122448]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1122452 'move' coerce_tmp[1122448](1122450 'deref' call_tmp[598955]))
          const-val tmp[2094697]:int(64)[13] "temp"
          (2094702 'move' tmp[2094697](2094699 '.v' this[1122602] F11_i[2094232]))
          (417472 'move' tmp[417461](31285 call <[437568] tmp[2094697] coerce_tmp[1122448]))
          val tmp[553012]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
          const-val tmp[553013]:bool[10] "dead after last mention" "maybe param" "temp"
          const-val call_tmp[598965]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (598968 'move' call_tmp[598965] tmp[417461])
          (553018 'move' tmp[553013] tmp[417461])
          if tmp[417461]
          {
            const-val tmp[553020]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
            ref call_tmp[598972]:_ref(uint(8))[937097] "dead after last mention" "maybe param" "temp"
            ref _this_tmp_[1122459]:_ref(c_ptr(uint(8)))[937621] "dead after last mention" "temp"
            ref tmp[2094704]:_ref(string)[938128] "temp"
            (2094709 'move' tmp[2094704](2094706 '.' this[1122602] F2_localThis[2094214]))
            (1122461 'move' _this_tmp_[1122459](31296 call buff[758153] tmp[2094704]))
            val coerce_tmp[1122466]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (1122470 'move' coerce_tmp[1122466](1122468 'deref' _this_tmp_[1122459]))
            const-val tmp[2094711]:int(64)[13] "temp"
            (2094716 'move' tmp[2094711](2094713 '.v' this[1122602] F11_i[2094232]))
            (598975 'move' call_tmp[598972](31299 call this[954280] coerce_tmp[1122466] tmp[2094711]))
            const-val call_tmp[598977]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val coerce_tmp[1122473]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (1122477 'move' coerce_tmp[1122473](1122475 'deref' call_tmp[598972]))
            (598980 'move' call_tmp[598977](31294 call isInitialByte[181574] coerce_tmp[1122473]))
            const-val call_tmp[598982]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (598985 'move' call_tmp[598982](31292 call ![7494] call_tmp[598977]))
            (553022 'move' tmp[553020] call_tmp[598982])
            (553027 'move' tmp[553012] call_tmp[598982])
          }
          {
            (553032 'move' tmp[553012] 0)
          }
          (31301 'move' tmp[31272] tmp[553012])
          tmp[31272]
        }
      }
      val tmp[31406]:bool[10] "dead after last mention" "temp"
      ref call_tmp[598989]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
      ref tmp[2094718]:_ref(string)[938128] "temp"
      (2094723 'move' tmp[2094718](2094720 '.' this[1122602] F2_localThis[2094214]))
      (598992 'move' call_tmp[598989](31433 call buffLen[758075] tmp[2094718]))
      const-val call_tmp[598994]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1122482]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1122486 'move' coerce_tmp[1122482](1122484 'deref' call_tmp[598989]))
      const-val tmp[2094725]:int(64)[13] "temp"
      (2094730 'move' tmp[2094725](2094727 '.v' this[1122602] F11_i[2094232]))
      (598997 'move' call_tmp[598994](31430 call <[437568] tmp[2094725] coerce_tmp[1122482]))
      (31436 'move' tmp[31406] call_tmp[598994])
      WhileDo[31411]
      {
        ref call_tmp[599001]:_ref(c_ptr(uint(8)))[937621] "dead at end of block" "maybe param" "temp"
        ref tmp[2094732]:_ref(string)[938128] "temp"
        (2094737 'move' tmp[2094732](2094734 '.' this[1122602] F2_localThis[2094214]))
        (599004 'move' call_tmp[599001](31349 call buff[758153] tmp[2094732]))
        ref call_tmp[599008]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
        ref tmp[2094739]:_ref(string)[938128] "temp"
        (2094744 'move' tmp[2094739](2094741 '.' this[1122602] F2_localThis[2094214]))
        (599011 'move' call_tmp[599008](31355 call buffLen[758075] tmp[2094739]))
        const-val call_tmp[599013]:(syserr,int(32),int(32))[964809] "dead at end of block" "maybe param" "temp"
        val coerce_tmp[1122491]:c_ptr(uint(8))[937612] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1122495 'move' coerce_tmp[1122491](1122493 'deref' call_tmp[599001]))
        const-val coerce_tmp[1122497]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1122501 'move' coerce_tmp[1122497](1122499 'deref' call_tmp[599008]))
        const-val tmp[2094746]:int(64)[13] "temp"
        (2094751 'move' tmp[2094746](2094748 '.v' this[1122602] F11_i[2094232]))
        ref tmp[2094753]:_ref((syserr,int(32),int(32)))[964916] "temp"
        (2094758 'move' tmp[2094753](2094755 '.' this[1122602] F12_ret_tmp[2094234]))
        (31363 call decodeHelp[174452] coerce_tmp[1122491] coerce_tmp[1122497] tmp[2094746] 1 tmp[2094753])
        const-val tmp[2094760]:(syserr,int(32),int(32))[964809] "temp"
        (2094765 'move' tmp[2094760](2094762 '.v' this[1122602] F12_ret_tmp[2094234]))
        (1907133 'move' call_tmp[599013] tmp[2094760])
        const tmp[2094767]:(syserr,int(32),int(32))[964809] "temp"
        (540379 'move' tmp[2094767] call_tmp[599013])
        (2094769 '.=' this[1122602] F13_tmp[2094236] tmp[2094767])
        1
        ref call_tmp[599018]:_ref(syserr)[949021] "dead at end of block" "maybe param" "reference to a const" "temp"
        ref tmp[2094773]:_ref((syserr,int(32),int(32)))[964916] "temp"
        (2094778 'move' tmp[2094773](2094775 '.' this[1122602] F13_tmp[2094236]))
        (599021 'move' call_tmp[599018](1122511 '.' tmp[2094773] x0[964803]))
        const-val decodeRet[31340]:syserr[223672] "dead at end of block" "const" "insert auto destroy"
        const-val coerce_tmp[1122516]:syserr[223672] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1122520 'move' coerce_tmp[1122516](1122518 'deref' call_tmp[599018]))
        (540381 'move' decodeRet[31340](1122514 call chpl__initCopy[964674] coerce_tmp[1122516]))
        ref call_tmp[599023]:_ref(int(32))[936815] "dead at end of block" "maybe param" "reference to a const" "temp"
        ref tmp[2094780]:_ref((syserr,int(32),int(32)))[964916] "temp"
        (2094785 'move' tmp[2094780](2094782 '.' this[1122602] F13_tmp[2094236]))
        (599026 'move' call_tmp[599023](1122525 '.' tmp[2094780] x1[964805]))
        const-val cp[31342]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
        const-val coerce_tmp[1122530]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1122534 'move' coerce_tmp[1122530](1122532 'deref' call_tmp[599023]))
        (540383 'move' cp[31342](1122528 call chpl__initCopy[964946] coerce_tmp[1122530]))
        ref call_tmp[599028]:_ref(int(32))[936815] "dead at end of block" "maybe param" "reference to a const" "temp"
        ref tmp[2094787]:_ref((syserr,int(32),int(32)))[964916] "temp"
        (2094792 'move' tmp[2094787](2094789 '.' this[1122602] F13_tmp[2094236]))
        (599031 'move' call_tmp[599028](1122539 '.' tmp[2094787] x2[964807]))
        const-val coerce_tmp[1122544]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1122548 'move' coerce_tmp[1122544](1122546 'deref' call_tmp[599028]))
        const tmp[2094794]:int(32)[95] "temp"
        (540385 'move' tmp[2094794](1122542 call chpl__initCopy[964946] coerce_tmp[1122544]))
        (2094796 '.=' this[1122602] F14_nBytes[2094238] tmp[2094794])
        const-val yret[503899]:(int(32),byteIndex,int(64))[1122331] "dead after last mention" "YVV" "temp"
        val call_tmp[599033]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[599038]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
        (599041 'move' call_tmp[599038] cp[31342])
        const-val tmp[2094800]:int(64)[13] "temp"
        (2094805 'move' tmp[2094800](2094802 '.v' this[1122602] F11_i[2094232]))
        ref tmp[2094807]:_ref(byteIndex)[948948] "temp"
        (2094812 'move' tmp[2094807](2094809 '.' this[1122602] F16_ret_tmp[2094242]))
        (31390 call _cast[39486] tmp[2094800] tmp[2094807])
        val tmp[2094814]:byteIndex[28173] "temp"
        const-val tmp[2094820]:byteIndex[28173] "temp"
        (2094825 'move' tmp[2094820](2094822 '.v' this[1122602] F16_ret_tmp[2094242]))
        (1906169 'move' tmp[2094814] tmp[2094820])
        (2094816 '.=' this[1122602] F15_call_tmp[2094240] tmp[2094814])
        const-val call_tmp[599048]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val tmp[2094827]:int(32)[95] "temp"
        (2094832 'move' tmp[2094827](2094829 '.v' this[1122602] F14_nBytes[2094238]))
        (599051 'move' call_tmp[599048](31395 'cast' int(64)[13] tmp[2094827]))
        ref tmp[2094834]:_ref(byteIndex)[948948] "temp"
        (2094839 'move' tmp[2094834](2094836 '.' this[1122602] F15_call_tmp[2094240]))
        ref tmp[2094841]:_ref((int(32),byteIndex,int(64)))[1122403] "temp"
        (2094846 'move' tmp[2094841](2094843 '.' this[1122602] F17_ret_tmp[2094244]))
        (31397 call _build_tuple[1122281] cp[31342] tmp[2094834] call_tmp[599048] tmp[2094841])
        val tmp[2094848]:(int(32),byteIndex,int(64))[1122331] "temp"
        const-val tmp[2094854]:(int(32),byteIndex,int(64))[1122331] "temp"
        (2094859 'move' tmp[2094854](2094856 '.v' this[1122602] F17_ret_tmp[2094244]))
        (1910071 'move' tmp[2094848] tmp[2094854])
        (2094850 '.=' this[1122602] F19_call_tmp[2094248] tmp[2094848])
        const-val tmp[2094861]:(int(32),byteIndex,int(64))[1122331] "temp"
        (2094866 'move' tmp[2094861](2094863 '.v' this[1122602] F19_call_tmp[2094248]))
        (503902 'move' yret[503899] tmp[2094861])
        val tmp[2094872]:(int(32),byteIndex,int(64))[1122331] "temp"
        (2094877 'move' tmp[2094872](2094874 '.v' this[1122602] F19_call_tmp[2094248]))
        (2094869 '.=' this[1122602] value[2094250] tmp[2094872])
        (2094968 '.=' this[1122602] more[1122577] 3)
        gotoIterEnd _end[2094956] _end[2094956]
        label _jump_break_3[2094976]
        ref tmp[2094879]:_ref(byteIndex)[948948] "temp"
        (2094884 'move' tmp[2094879](2094881 '.' this[1122602] F15_call_tmp[2094240]))
        (1919152 call chpl__autoDestroy[1601936] tmp[2094879])
        ref tmp[2094886]:_ref((syserr,int(32),int(32)))[964916] "temp"
        (2094891 'move' tmp[2094886](2094888 '.' this[1122602] F13_tmp[2094236]))
        (1919155 call chpl__autoDestroy[1605546] tmp[2094886])
        ref tmp[2094893]:_ref(string)[938128] "temp"
        (2094898 'move' tmp[2094893](2094895 '.' this[1122602] F2_localThis[2094214]))
        (1919158 call chpl__autoDestroy[1601673] tmp[2094893])
        gotoReturn _end_cpIndexLen[1889413] _end_cpIndexLen[1889413]
        label _jump_3[2094974]
        ref tmp[2094900]:_ref(byteIndex)[948948] "temp"
        (2094905 'move' tmp[2094900](2094902 '.' this[1122602] F15_call_tmp[2094240]))
        (1919161 call chpl__autoDestroy[1601936] tmp[2094900])
        const-val coerce_tmp[1122556]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        const-val tmp[2094907]:int(32)[95] "temp"
        (2094912 'move' tmp[2094907](2094909 '.v' this[1122602] F14_nBytes[2094238]))
        (1122562 'move' coerce_tmp[1122556](1122558 'cast' int(64)[13] tmp[2094907]))
        ref tmp[2094914]:_ref(int(64))[936761] "temp"
        (2094919 'move' tmp[2094914](2094916 '.' this[1122602] F11_i[2094232]))
        (31403 call +=[451431] tmp[2094914] coerce_tmp[1122556])
        ref tmp[2094921]:_ref((syserr,int(32),int(32)))[964916] "temp"
        (2094926 'move' tmp[2094921](2094923 '.' this[1122602] F13_tmp[2094236]))
        (1919165 call chpl__autoDestroy[1605546] tmp[2094921])
        ref call_tmp[599060]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
        ref tmp[2094928]:_ref(string)[938128] "temp"
        (2094933 'move' tmp[2094928](2094930 '.' this[1122602] F2_localThis[2094214]))
        (599063 'move' call_tmp[599060](31420 call buffLen[758075] tmp[2094928]))
        const-val call_tmp[599065]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1122566]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1122570 'move' coerce_tmp[1122566](1122568 'deref' call_tmp[599060]))
        const-val tmp[2094935]:int(64)[13] "temp"
        (2094940 'move' tmp[2094935](2094937 '.v' this[1122602] F11_i[2094232]))
        (599068 'move' call_tmp[599065](31417 call <[437568] tmp[2094935] coerce_tmp[1122566]))
        (31423 'move' tmp[31406] call_tmp[599065])
        tmp[31406]
      }
    }
    ref tmp[2094942]:_ref(string)[938128] "temp"
    (2094947 'move' tmp[2094942](2094944 '.' this[1122602] F2_localThis[2094214]))
    (1919168 call chpl__autoDestroy[1601673] tmp[2094942])
    label _end_cpIndexLen[1889413]
    (2094978 '.=' this[1122602] more[1122577] 0)
    label _end[2094956]
    (2095039 return _void[55])
  }
  function _ic__cpIndexLen__ref_string[1122574].zip1[1122609](const in arg this[1122611]:_ic__cpIndexLen__ref_string[1122574]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (2094949 call advance[1122600] this[1122611])
    (1122616 return _void[55])
  }
  function _ic__cpIndexLen__ref_string[1122574].zip2[1122618](const in arg this[1122620]:_ic__cpIndexLen__ref_string[1122574]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1122625 return _void[55])
  }
  function _ic__cpIndexLen__ref_string[1122574].zip3[1122627](const in arg this[1122629]:_ic__cpIndexLen__ref_string[1122574]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (2094952 call advance[1122600] this[1122629])
    (1122634 return _void[55])
  }
  function _ic__cpIndexLen__ref_string[1122574].zip4[1122636](const in arg this[1122638]:_ic__cpIndexLen__ref_string[1122574]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1122643 return _void[55])
  }
  function _ic__cpIndexLen__ref_string[1122574].hasMore[1122645](const in arg this[1122647]:_ic__cpIndexLen__ref_string[1122574]) : int(64)[13] "auto ii" "inline" "method" "resolved"
  {
    val tmp[2095042]:int(64)[13] "temp"
    (2095047 'move' tmp[2095042](2095044 '.v' this[1122647] more[1122577]))
    (2095049 return tmp[2095042])
  }
  function _ic__cpIndexLen__ref_string[1122574].getValue[1122654](const in arg this[1122656]:_ic__cpIndexLen__ref_string[1122574]) : (int(32),byteIndex,int(64))[1122331] "auto ii" "inline" "method" "resolved"
  {
    val tmp[2095052]:(int(32),byteIndex,int(64))[1122331] "temp"
    (2095057 'move' tmp[2095052](2095054 '.v' this[1122656] value[2094250]))
    (2095059 return tmp[2095052])
  }
  function _ref(string)[938128]._cpIndexLen[31109](const  ref arg this[32664]:_ref(string)[938128], const  ref arg start[31106]:byteIndex[28173], ref arg _retArg[1905138]:_ref(_ir__cpIndexLen__ref_string)[1122691]) : void[4] "fn returns via _retArg" "inline" "iterator fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _ir[2095067]:_ir__cpIndexLen__ref_string[1122580] "temp"
    (2095069 '.=' _ir[2095067] F0_this[2094208] this[32664])
    (2095073 '.=' _ir[2095067] F1_start[2094212] start[31106])
    (2095077 '=' _retArg[1905138] _ir[2095067])
    (2095080 return _void[55])
  }
  function _ic__cpIndexLen__ref_string[1122574].init[1122663](const in arg this[1122665]:_ic__cpIndexLen__ref_string[1122574]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (2095062 return _void[55])
  }
  function _ic__cpIndexLen__ref_string[1122574].incr[1122672](const in arg this[1122674]:_ic__cpIndexLen__ref_string[1122574]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (2095065 return _void[55])
  }
  type _ic__cpIndexLen__ref_string[1122574] val super[1122575]:object[22] "super class" val more[1122577]:int(64)[13] ref F0_this[2094206]:_ref(string)[938128] ref F1_start[2094210]:_ref(byteIndex)[948948] val F2_localThis[2094214]:string[26] val F3__iterator[2094216]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108755] val F4_call_tmp[2094218]:range(int(64),bounded,false)[1027003] val F5__iterator[2094220]:_ic_these_range_int64_t_bounded_F[1096892] val F6__iterator[2094222]:_ic_chpl_bytes__ref_string[1108445] val F7__indexOfInterest[2094224]:(int(64),uint(8))[1111229] val F8_call_tmp[2094226]:byteIndex[28173] const-val F9_ret_tmp[2094228]:byteIndex[28173] const-val F10_ret_tmp[2094230]:(int(32),byteIndex,int(64))[1122331] val F11_i[2094232]:int(64)[13] const-val F12_ret_tmp[2094234]:(syserr,int(32),int(32))[964809] const F13_tmp[2094236]:(syserr,int(32),int(32))[964809] const F14_nBytes[2094238]:int(32)[95] val F15_call_tmp[2094240]:byteIndex[28173] const-val F16_ret_tmp[2094242]:byteIndex[28173] const-val F17_ret_tmp[2094244]:(int(32),byteIndex,int(64))[1122331] val F18_call_tmp[2094246]:(int(32),byteIndex,int(64))[1122331] val F19_call_tmp[2094248]:(int(32),byteIndex,int(64))[1122331] val value[2094250]:(int(32),byteIndex,int(64))[1122331]
  type _ir__cpIndexLen__ref_string[1122580] ref F0_this[2094208]:_ref(string)[938128] ref F1_start[2094212]:_ref(byteIndex)[948948]
  function _getIterator[1122589](const  ref arg ir[1122591]:_ir__cpIndexLen__ref_string[1122580]) : _ic__cpIndexLen__ref_string[1122574] "auto ii" "inline" "resolved" "unsafe"
  {
    val ret[1122698]:_ic__cpIndexLen__ref_string[1122574] "dead after last mention" "RVV" "temp"
    val _ic_[1122581]:_ic__cpIndexLen__ref_string[1122574] "dead after last mention" "temp"
    const-val call_tmp[1122705]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1122708 'move' call_tmp[1122705](1122720 'sizeof_bundle' _ic__cpIndexLen__ref_string[1122574]))
    const-val cast_tmp[1122723]:c_void_ptr[149] "dead after last mention" "temp"
    (1122725 'move' cast_tmp[1122723](1122586 call chpl_here_alloc[187788] call_tmp[1122705] 33))
    (1122594 'move' _ic_[1122581](1122727 'cast' _ic__cpIndexLen__ref_string[1122574] cast_tmp[1122723]))
    (1122596 'setcid' _ic_[1122581])
    (1122703 'move' ret[1122698] _ic_[1122581])
    (2095083 '.=' ret[1122698] more[1122577] 1)
    ref tmp[2095087]:_ref(string)[938128] "temp"
    (2095092 'move' tmp[2095087](2095088 '.v' ir[1122591] F0_this[2094208]))
    (2095094 '.=' ret[1122698] F0_this[2094206] tmp[2095087])
    ref tmp[2095098]:_ref(byteIndex)[948948] "temp"
    (2095103 'move' tmp[2095098](2095099 '.v' ir[1122591] F1_start[2094212]))
    (2095105 '.=' ret[1122698] F1_start[2094210] tmp[2095098])
    (1122700 return ret[1122698])
  }
  function _ref(string)[938128]._cpIndexLen_default_start[1122220](const  ref arg this[1122223]:_ref(string)[938128], ref arg _retArg[1910056]:_ref(byteIndex)[948948]) : void[4] "compiler generated" "default actual function" "fn returns via _retArg" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved"
  {
    const-val ret[1122226]:byteIndex[28173] "dead after last mention" "RVV" "maybe param" "temp"
    const-val start[1122231]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    const-val ret_tmp[1906196]:byteIndex[28173] "temp"
    (1122235 call _cast[39486] 0 ret_tmp[1906196])
    (1906199 'move' start[1122231] ret_tmp[1906196])
    (1122242 'move' ret[1122226] start[1122231])
    (1910058 '=' _retArg[1910056] ret[1122226])
    (1910060 return _void[55])
  }
  function _ic__indexLen__ref_string[1121494].advance[1121520](const in arg this[1121522]:_ic__indexLen__ref_string[1121494]) : void[4] "auto ii" "method" "resolved"
  {
    const-val more[2095457]:int(64)[13]
    (2095485 'move' more[2095457](2095482 '.v' this[1121522] more[1121497]))
    const-val tmp[2095460]:bool[10] "temp"
    (2095467 'move' tmp[2095460](2095464 '==' more[2095457] 2))
    if tmp[2095460]
    {
      gotoIterResume _jump_2[2095449] _jump_2[2095449]
    }
    const-val tmp[2095472]:bool[10] "temp"
    (2095477 'move' tmp[2095472](2095474 '==' more[2095457] -2))
    if tmp[2095472]
    {
      gotoIterResume _jump_break_2[2095451] _jump_break_2[2095451]
    }
    val ret[503908]:_ir__indexLen__ref_string[1121500] "dead after last mention" "RVV" "temp"
    const-val call_tmp[599072]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1905212]:string[26] "temp"
    ref tmp[2095131]:_ref(string)[938128] "temp"
    (2095136 'move' tmp[2095131](2095133 '.v' this[1121522] F0_this[2095109]))
    (31462 call localize[32889] tmp[2095131] ret_tmp[1905212])
    (1905215 'move' call_tmp[599072] ret_tmp[1905212])
    val tmp[2095138]:string[26] "temp"
    (540387 'move' tmp[2095138] call_tmp[599072])
    (2095140 '.=' this[1121522] F2_localThis[2095117] tmp[2095138])
    const-val call_tmp[599077]:int(64)[13] "dead at end of block" "maybe param" "temp"
    ref tmp[2095144]:_ref(byteIndex)[948948] "temp"
    (2095149 'move' tmp[2095144](2095146 '.v' this[1121522] F1_start[2095113]))
    (599080 'move' call_tmp[599077](31470 call _cast[39465] tmp[2095144]))
    val tmp[2095151]:int(64)[13] "temp"
    (540389 'move' tmp[2095151] call_tmp[599077])
    (2095153 '.=' this[1121522] F3_i[2095119] tmp[2095151])
    const-val call_tmp[599082]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (599085 'move' call_tmp[599082](31478 call >[437788] call_tmp[599077] 0))
    const-val call_tmp[599087]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (599090 'move' call_tmp[599087] call_tmp[599082])
    if call_tmp[599082]
    {
      val tmp[31506]:bool[10] "dead after last mention" "temp"
      const-val tmp[417524]:bool[10] "dead after last mention" "maybe param" "temp"
      ref call_tmp[599094]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
      ref tmp[2095157]:_ref(string)[938128] "temp"
      (2095162 'move' tmp[2095157](2095159 '.' this[1121522] F2_localThis[2095117]))
      (599097 'move' call_tmp[599094](31547 call buffLen[758075] tmp[2095157]))
      const-val coerce_tmp[1121232]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1121236 'move' coerce_tmp[1121232](1121234 'deref' call_tmp[599094]))
      const-val tmp[2095164]:int(64)[13] "temp"
      (2095169 'move' tmp[2095164](2095166 '.v' this[1121522] F3_i[2095119]))
      (417535 'move' tmp[417524](31544 call <[437568] tmp[2095164] coerce_tmp[1121232]))
      val tmp[553039]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[553040]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[599104]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (599107 'move' call_tmp[599104] tmp[417524])
      (553045 'move' tmp[553040] tmp[417524])
      if tmp[417524]
      {
        const-val tmp[553047]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        ref call_tmp[599111]:_ref(uint(8))[937097] "dead after last mention" "maybe param" "temp"
        ref _this_tmp_[1121243]:_ref(c_ptr(uint(8)))[937621] "dead after last mention" "temp"
        ref tmp[2095171]:_ref(string)[938128] "temp"
        (2095176 'move' tmp[2095171](2095173 '.' this[1121522] F2_localThis[2095117]))
        (1121245 'move' _this_tmp_[1121243](31555 call buff[758153] tmp[2095171]))
        val coerce_tmp[1121250]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1121254 'move' coerce_tmp[1121250](1121252 'deref' _this_tmp_[1121243]))
        const-val tmp[2095178]:int(64)[13] "temp"
        (2095183 'move' tmp[2095178](2095180 '.v' this[1121522] F3_i[2095119]))
        (599114 'move' call_tmp[599111](31558 call this[954280] coerce_tmp[1121250] tmp[2095178]))
        const-val call_tmp[599116]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1121257]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1121261 'move' coerce_tmp[1121257](1121259 'deref' call_tmp[599111]))
        (599119 'move' call_tmp[599116](31553 call isInitialByte[181574] coerce_tmp[1121257]))
        const-val call_tmp[599121]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (599124 'move' call_tmp[599121](31551 call ![7494] call_tmp[599116]))
        (553049 'move' tmp[553047] call_tmp[599121])
        (553054 'move' tmp[553039] call_tmp[599121])
      }
      {
        (553059 'move' tmp[553039] 0)
      }
      (31560 'move' tmp[31506] tmp[553039])
      WhileDo[31511]
      {
        ref tmp[2095185]:_ref(int(64))[936761] "temp"
        (2095190 'move' tmp[2095185](2095187 '.' this[1121522] F3_i[2095119]))
        (31503 call +=[451431] tmp[2095185] 1)
        const-val tmp[417503]:bool[10] "dead after last mention" "maybe param" "temp"
        ref call_tmp[599128]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
        ref tmp[2095192]:_ref(string)[938128] "temp"
        (2095197 'move' tmp[2095192](2095194 '.' this[1121522] F2_localThis[2095117]))
        (599131 'move' call_tmp[599128](31522 call buffLen[758075] tmp[2095192]))
        const-val coerce_tmp[1121267]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1121271 'move' coerce_tmp[1121267](1121269 'deref' call_tmp[599128]))
        const-val tmp[2095199]:int(64)[13] "temp"
        (2095204 'move' tmp[2095199](2095201 '.v' this[1121522] F3_i[2095119]))
        (417514 'move' tmp[417503](31519 call <[437568] tmp[2095199] coerce_tmp[1121267]))
        val tmp[553066]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        const-val tmp[553067]:bool[10] "dead after last mention" "maybe param" "temp"
        const-val call_tmp[599138]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (599141 'move' call_tmp[599138] tmp[417503])
        (553072 'move' tmp[553067] tmp[417503])
        if tmp[417503]
        {
          const-val tmp[553074]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
          ref call_tmp[599145]:_ref(uint(8))[937097] "dead after last mention" "maybe param" "temp"
          ref _this_tmp_[1121278]:_ref(c_ptr(uint(8)))[937621] "dead after last mention" "temp"
          ref tmp[2095206]:_ref(string)[938128] "temp"
          (2095211 'move' tmp[2095206](2095208 '.' this[1121522] F2_localThis[2095117]))
          (1121280 'move' _this_tmp_[1121278](31530 call buff[758153] tmp[2095206]))
          val coerce_tmp[1121285]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1121289 'move' coerce_tmp[1121285](1121287 'deref' _this_tmp_[1121278]))
          const-val tmp[2095213]:int(64)[13] "temp"
          (2095218 'move' tmp[2095213](2095215 '.v' this[1121522] F3_i[2095119]))
          (599148 'move' call_tmp[599145](31533 call this[954280] coerce_tmp[1121285] tmp[2095213]))
          const-val call_tmp[599150]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[1121292]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1121296 'move' coerce_tmp[1121292](1121294 'deref' call_tmp[599145]))
          (599153 'move' call_tmp[599150](31528 call isInitialByte[181574] coerce_tmp[1121292]))
          const-val call_tmp[599155]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (599158 'move' call_tmp[599155](31526 call ![7494] call_tmp[599150]))
          (553076 'move' tmp[553074] call_tmp[599155])
          (553081 'move' tmp[553066] call_tmp[599155])
        }
        {
          (553086 'move' tmp[553066] 0)
        }
        (31535 'move' tmp[31506] tmp[553066])
        tmp[31506]
      }
    }
    val tmp[31684]:bool[10] "dead after last mention" "temp"
    ref call_tmp[599162]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    ref tmp[2095220]:_ref(string)[938128] "temp"
    (2095225 'move' tmp[2095220](2095222 '.' this[1121522] F2_localThis[2095117]))
    (599165 'move' call_tmp[599162](31711 call buffLen[758075] tmp[2095220]))
    const-val call_tmp[599167]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1121301]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1121305 'move' coerce_tmp[1121301](1121303 'deref' call_tmp[599162]))
    const-val tmp[2095227]:int(64)[13] "temp"
    (2095232 'move' tmp[2095227](2095229 '.v' this[1121522] F3_i[2095119]))
    (599170 'move' call_tmp[599167](31708 call <[437568] tmp[2095227] coerce_tmp[1121301]))
    (31714 'move' tmp[31684] call_tmp[599167])
    WhileDo[31689]
    {
      const-val call_tmp[599172]:int(64)[13] "dead at end of block" "maybe param" "temp"
      const-val tmp[2095234]:int(64)[13] "temp"
      (2095239 'move' tmp[2095234](2095236 '.v' this[1121522] F3_i[2095119]))
      (599175 'move' call_tmp[599172](31576 call +[949855] tmp[2095234]))
      val tmp[2095241]:int(64)[13] "temp"
      (540391 'move' tmp[2095241] call_tmp[599172])
      (2095243 '.=' this[1121522] F4_j[2095121] tmp[2095241])
      val tmp[31609]:bool[10] "dead after last mention" "temp"
      const-val tmp[417566]:bool[10] "dead after last mention" "maybe param" "temp"
      ref call_tmp[599179]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
      ref tmp[2095247]:_ref(string)[938128] "temp"
      (2095252 'move' tmp[2095247](2095249 '.' this[1121522] F2_localThis[2095117]))
      (599182 'move' call_tmp[599179](31650 call buffLen[758075] tmp[2095247]))
      const-val coerce_tmp[1121310]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1121314 'move' coerce_tmp[1121310](1121312 'deref' call_tmp[599179]))
      (417577 'move' tmp[417566](31647 call <[437568] call_tmp[599172] coerce_tmp[1121310]))
      val tmp[553093]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[553094]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[599189]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (599192 'move' call_tmp[599189] tmp[417566])
      (553099 'move' tmp[553094] tmp[417566])
      if tmp[417566]
      {
        const-val tmp[553101]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        ref call_tmp[599196]:_ref(uint(8))[937097] "dead after last mention" "maybe param" "temp"
        ref _this_tmp_[1121321]:_ref(c_ptr(uint(8)))[937621] "dead after last mention" "temp"
        ref tmp[2095254]:_ref(string)[938128] "temp"
        (2095259 'move' tmp[2095254](2095256 '.' this[1121522] F2_localThis[2095117]))
        (1121323 'move' _this_tmp_[1121321](31658 call buff[758153] tmp[2095254]))
        val coerce_tmp[1121328]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1121332 'move' coerce_tmp[1121328](1121330 'deref' _this_tmp_[1121321]))
        const-val tmp[2095261]:int(64)[13] "temp"
        (2095266 'move' tmp[2095261](2095263 '.v' this[1121522] F4_j[2095121]))
        (599199 'move' call_tmp[599196](31661 call this[954280] coerce_tmp[1121328] tmp[2095261]))
        const-val call_tmp[599201]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1121335]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1121339 'move' coerce_tmp[1121335](1121337 'deref' call_tmp[599196]))
        (599204 'move' call_tmp[599201](31656 call isInitialByte[181574] coerce_tmp[1121335]))
        const-val call_tmp[599206]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (599209 'move' call_tmp[599206](31654 call ![7494] call_tmp[599201]))
        (553103 'move' tmp[553101] call_tmp[599206])
        (553108 'move' tmp[553093] call_tmp[599206])
      }
      {
        (553113 'move' tmp[553093] 0)
      }
      (31663 'move' tmp[31609] tmp[553093])
      WhileDo[31614]
      {
        ref tmp[2095268]:_ref(int(64))[936761] "temp"
        (2095273 'move' tmp[2095268](2095270 '.' this[1121522] F4_j[2095121]))
        (31606 call +=[451431] tmp[2095268] 1)
        const-val tmp[417545]:bool[10] "dead after last mention" "maybe param" "temp"
        ref call_tmp[599213]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
        ref tmp[2095275]:_ref(string)[938128] "temp"
        (2095280 'move' tmp[2095275](2095277 '.' this[1121522] F2_localThis[2095117]))
        (599216 'move' call_tmp[599213](31625 call buffLen[758075] tmp[2095275]))
        const-val coerce_tmp[1121345]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1121349 'move' coerce_tmp[1121345](1121347 'deref' call_tmp[599213]))
        const-val tmp[2095282]:int(64)[13] "temp"
        (2095287 'move' tmp[2095282](2095284 '.v' this[1121522] F4_j[2095121]))
        (417556 'move' tmp[417545](31622 call <[437568] tmp[2095282] coerce_tmp[1121345]))
        val tmp[553120]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        const-val tmp[553121]:bool[10] "dead after last mention" "maybe param" "temp"
        const-val call_tmp[599223]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (599226 'move' call_tmp[599223] tmp[417545])
        (553126 'move' tmp[553121] tmp[417545])
        if tmp[417545]
        {
          const-val tmp[553128]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
          ref call_tmp[599230]:_ref(uint(8))[937097] "dead after last mention" "maybe param" "temp"
          ref _this_tmp_[1121356]:_ref(c_ptr(uint(8)))[937621] "dead after last mention" "temp"
          ref tmp[2095289]:_ref(string)[938128] "temp"
          (2095294 'move' tmp[2095289](2095291 '.' this[1121522] F2_localThis[2095117]))
          (1121358 'move' _this_tmp_[1121356](31633 call buff[758153] tmp[2095289]))
          val coerce_tmp[1121363]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1121367 'move' coerce_tmp[1121363](1121365 'deref' _this_tmp_[1121356]))
          const-val tmp[2095296]:int(64)[13] "temp"
          (2095301 'move' tmp[2095296](2095298 '.v' this[1121522] F4_j[2095121]))
          (599233 'move' call_tmp[599230](31636 call this[954280] coerce_tmp[1121363] tmp[2095296]))
          const-val call_tmp[599235]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[1121370]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1121374 'move' coerce_tmp[1121370](1121372 'deref' call_tmp[599230]))
          (599238 'move' call_tmp[599235](31631 call isInitialByte[181574] coerce_tmp[1121370]))
          const-val call_tmp[599240]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (599243 'move' call_tmp[599240](31629 call ![7494] call_tmp[599235]))
          (553130 'move' tmp[553128] call_tmp[599240])
          (553135 'move' tmp[553120] call_tmp[599240])
        }
        {
          (553140 'move' tmp[553120] 0)
        }
        (31638 'move' tmp[31609] tmp[553120])
        tmp[31609]
      }
      const-val yret[503912]:(byteIndex,int(64))[1121422] "dead after last mention" "YVV" "temp"
      const-val tmp[2095303]:int(64)[13] "temp"
      (2095308 'move' tmp[2095303](2095305 '.v' this[1121522] F3_i[2095119]))
      ref tmp[2095310]:_ref(byteIndex)[948948] "temp"
      (2095315 'move' tmp[2095310](2095312 '.' this[1121522] F6_ret_tmp[2095125]))
      (31668 call _cast[39486] tmp[2095303] tmp[2095310])
      val tmp[2095317]:byteIndex[28173] "temp"
      const-val tmp[2095323]:byteIndex[28173] "temp"
      (2095328 'move' tmp[2095323](2095325 '.v' this[1121522] F6_ret_tmp[2095125]))
      (1906175 'move' tmp[2095317] tmp[2095323])
      (2095319 '.=' this[1121522] F5_call_tmp[2095123] tmp[2095317])
      const-val call_tmp[599250]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val tmp[2095330]:int(64)[13] "temp"
      (2095335 'move' tmp[2095330](2095332 '.v' this[1121522] F4_j[2095121]))
      const-val tmp[2095337]:int(64)[13] "temp"
      (2095342 'move' tmp[2095337](2095339 '.v' this[1121522] F3_i[2095119]))
      (599253 'move' call_tmp[599250](31672 call -[440532] tmp[2095330] tmp[2095337]))
      ref tmp[2095344]:_ref(byteIndex)[948948] "temp"
      (2095349 'move' tmp[2095344](2095346 '.' this[1121522] F5_call_tmp[2095123]))
      ref tmp[2095351]:_ref((byteIndex,int(64)))[1121478] "temp"
      (2095356 'move' tmp[2095351](2095353 '.' this[1121522] F7_ret_tmp[2095127]))
      (31675 call _build_tuple[1121380] tmp[2095344] call_tmp[599250] tmp[2095351])
      val tmp[2095358]:(byteIndex,int(64))[1121422] "temp"
      const-val tmp[2095364]:(byteIndex,int(64))[1121422] "temp"
      (2095369 'move' tmp[2095364](2095366 '.v' this[1121522] F7_ret_tmp[2095127]))
      (1910017 'move' tmp[2095358] tmp[2095364])
      (2095360 '.=' this[1121522] value[2095129] tmp[2095358])
      const-val tmp[2095371]:(byteIndex,int(64))[1121422] "temp"
      (2095376 'move' tmp[2095371](2095373 '.v' this[1121522] value[2095129]))
      (503915 'move' yret[503912] tmp[2095371])
      (2095443 '.=' this[1121522] more[1121497] 2)
      gotoIterEnd _end[2095441] _end[2095441]
      label _jump_break_2[2095451]
      ref tmp[2095378]:_ref(byteIndex)[948948] "temp"
      (2095383 'move' tmp[2095378](2095380 '.' this[1121522] F5_call_tmp[2095123]))
      (1919171 call chpl__autoDestroy[1601936] tmp[2095378])
      ref tmp[2095385]:_ref(string)[938128] "temp"
      (2095390 'move' tmp[2095385](2095387 '.' this[1121522] F2_localThis[2095117]))
      (1919174 call chpl__autoDestroy[1601673] tmp[2095385])
      gotoReturn _end_indexLen[1889425] _end_indexLen[1889425]
      label _jump_2[2095449]
      ref tmp[2095392]:_ref(byteIndex)[948948] "temp"
      (2095397 'move' tmp[2095392](2095394 '.' this[1121522] F5_call_tmp[2095123]))
      (1919177 call chpl__autoDestroy[1601936] tmp[2095392])
      ref tmp[2095399]:_ref(int(64))[936761] "temp"
      (2095404 'move' tmp[2095399](2095401 '.' this[1121522] F3_i[2095119]))
      const-val tmp[2095406]:int(64)[13] "temp"
      (2095411 'move' tmp[2095406](2095408 '.v' this[1121522] F4_j[2095121]))
      (31681 call =[435443] tmp[2095399] tmp[2095406])
      ref call_tmp[599262]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
      ref tmp[2095413]:_ref(string)[938128] "temp"
      (2095418 'move' tmp[2095413](2095415 '.' this[1121522] F2_localThis[2095117]))
      (599265 'move' call_tmp[599262](31698 call buffLen[758075] tmp[2095413]))
      const-val call_tmp[599267]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1121486]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1121490 'move' coerce_tmp[1121486](1121488 'deref' call_tmp[599262]))
      const-val tmp[2095420]:int(64)[13] "temp"
      (2095425 'move' tmp[2095420](2095422 '.v' this[1121522] F3_i[2095119]))
      (599270 'move' call_tmp[599267](31695 call <[437568] tmp[2095420] coerce_tmp[1121486]))
      (31701 'move' tmp[31684] call_tmp[599267])
      tmp[31684]
    }
    ref tmp[2095427]:_ref(string)[938128] "temp"
    (2095432 'move' tmp[2095427](2095429 '.' this[1121522] F2_localThis[2095117]))
    (1919181 call chpl__autoDestroy[1601673] tmp[2095427])
    label _end_indexLen[1889425]
    (2095453 '.=' this[1121522] more[1121497] 0)
    label _end[2095441]
    (2095488 return _void[55])
  }
  function _ic__indexLen__ref_string[1121494].zip1[1121529](const in arg this[1121531]:_ic__indexLen__ref_string[1121494]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (2095434 call advance[1121520] this[1121531])
    (1121536 return _void[55])
  }
  function _ic__indexLen__ref_string[1121494].zip2[1121538](const in arg this[1121540]:_ic__indexLen__ref_string[1121494]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1121545 return _void[55])
  }
  function _ic__indexLen__ref_string[1121494].zip3[1121547](const in arg this[1121549]:_ic__indexLen__ref_string[1121494]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (2095437 call advance[1121520] this[1121549])
    (1121554 return _void[55])
  }
  function _ic__indexLen__ref_string[1121494].zip4[1121556](const in arg this[1121558]:_ic__indexLen__ref_string[1121494]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1121563 return _void[55])
  }
  function _ic__indexLen__ref_string[1121494].hasMore[1121565](const in arg this[1121567]:_ic__indexLen__ref_string[1121494]) : int(64)[13] "auto ii" "inline" "method" "resolved"
  {
    val tmp[2095491]:int(64)[13] "temp"
    (2095496 'move' tmp[2095491](2095493 '.v' this[1121567] more[1121497]))
    (2095498 return tmp[2095491])
  }
  function _ic__indexLen__ref_string[1121494].getValue[1121574](const in arg this[1121576]:_ic__indexLen__ref_string[1121494]) : (byteIndex,int(64))[1121422] "auto ii" "inline" "method" "resolved"
  {
    val tmp[2095501]:(byteIndex,int(64))[1121422] "temp"
    (2095506 'move' tmp[2095501](2095503 '.v' this[1121576] value[2095129]))
    (2095508 return tmp[2095501])
  }
  function _ref(string)[938128]._indexLen[31454](const  ref arg this[32668]:_ref(string)[938128], const  ref arg start[31451]:byteIndex[28173], ref arg _retArg[1905154]:_ref(_ir__indexLen__ref_string)[1121611]) : void[4] "fn returns via _retArg" "inline" "iterator fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val _ir[2095516]:_ir__indexLen__ref_string[1121500] "temp"
    (2095518 '.=' _ir[2095516] F0_this[2095111] this[32668])
    (2095522 '.=' _ir[2095516] F1_start[2095115] start[31451])
    (2095526 '=' _retArg[1905154] _ir[2095516])
    (2095529 return _void[55])
  }
  function _ic__indexLen__ref_string[1121494].init[1121583](const in arg this[1121585]:_ic__indexLen__ref_string[1121494]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (2095511 return _void[55])
  }
  function _ic__indexLen__ref_string[1121494].incr[1121592](const in arg this[1121594]:_ic__indexLen__ref_string[1121494]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (2095514 return _void[55])
  }
  type _ic__indexLen__ref_string[1121494] val super[1121495]:object[22] "super class" val more[1121497]:int(64)[13] ref F0_this[2095109]:_ref(string)[938128] ref F1_start[2095113]:_ref(byteIndex)[948948] val F2_localThis[2095117]:string[26] val F3_i[2095119]:int(64)[13] val F4_j[2095121]:int(64)[13] val F5_call_tmp[2095123]:byteIndex[28173] const-val F6_ret_tmp[2095125]:byteIndex[28173] const-val F7_ret_tmp[2095127]:(byteIndex,int(64))[1121422] val value[2095129]:(byteIndex,int(64))[1121422]
  type _ir__indexLen__ref_string[1121500] ref F0_this[2095111]:_ref(string)[938128] ref F1_start[2095115]:_ref(byteIndex)[948948]
  function _getIterator[1121509](const  ref arg ir[1121511]:_ir__indexLen__ref_string[1121500]) : _ic__indexLen__ref_string[1121494] "auto ii" "inline" "resolved" "fn synchronization free" "unsafe"
  {
    val ret[1121618]:_ic__indexLen__ref_string[1121494] "dead after last mention" "RVV" "temp"
    val _ic_[1121501]:_ic__indexLen__ref_string[1121494] "dead after last mention" "temp"
    const-val call_tmp[1121625]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1121628 'move' call_tmp[1121625](1121640 'sizeof_bundle' _ic__indexLen__ref_string[1121494]))
    const-val cast_tmp[1121643]:c_void_ptr[149] "dead after last mention" "temp"
    (1121645 'move' cast_tmp[1121643](1121506 call chpl_here_alloc[187788] call_tmp[1121625] 32))
    (1121514 'move' _ic_[1121501](1121647 'cast' _ic__indexLen__ref_string[1121494] cast_tmp[1121643]))
    (1121516 'setcid' _ic_[1121501])
    (1121623 'move' ret[1121618] _ic_[1121501])
    (2095532 '.=' ret[1121618] more[1121497] 1)
    ref tmp[2095536]:_ref(string)[938128] "temp"
    (2095541 'move' tmp[2095536](2095537 '.v' ir[1121511] F0_this[2095111]))
    (2095543 '.=' ret[1121618] F0_this[2095109] tmp[2095536])
    ref tmp[2095547]:_ref(byteIndex)[948948] "temp"
    (2095552 'move' tmp[2095547](2095548 '.v' ir[1121511] F1_start[2095115]))
    (2095554 '.=' ret[1121618] F1_start[2095113] tmp[2095547])
    (1121620 return ret[1121618])
  }
  function _ref(string)[938128]._indexLen_default_start[1121192](const  ref arg this[1121195]:_ref(string)[938128], ref arg _retArg[1910008]:_ref(byteIndex)[948948]) : void[4] "compiler generated" "default actual function" "fn returns via _retArg" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "fn synchronization free"
  {
    const-val ret[1121198]:byteIndex[28173] "dead after last mention" "RVV" "maybe param" "temp"
    const-val start[1121203]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    const-val ret_tmp[1906190]:byteIndex[28173] "temp"
    (1121207 call _cast[39486] 0 ret_tmp[1906190])
    (1906193 'move' start[1121203] ret_tmp[1906190])
    (1121214 'move' ret[1121198] start[1121203])
    (1910010 '=' _retArg[1910008] ret[1121198])
    (1910012 return _void[55])
  }
  function _ref(string)[938128].doSearchUTF8[1106300](const  ref arg this[1106304]:_ref(string)[938128], const  ref arg needle[1106306]:string[26], const in arg region[1106308]:range(byteIndex,bounded,false)[1025981]) : int(64)[13] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[1106316]:int(64)[13] "dead after last mention" "RVV" "temp"
    val ret[1106333]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1106335 'move' ret[1106333] -1)
    const-val tmp[1106340]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1106342]:_ref(int(32))[936815] "dead after last mention" "maybe param" "temp"
    (1106344 'move' call_tmp[1106342](1106347 call locale_id[758231] this[1106304]))
    const-val call_tmp[1106350]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1107539]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1107543 'move' coerce_tmp[1107539](1107541 'deref' call_tmp[1106342]))
    (1106352 'move' call_tmp[1106350](1106355 call chpl_buildLocaleID[209470] coerce_tmp[1107539] c_sublocid_any[89878]))
    const-val call_tmp[1106358]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    (1106360 'move' call_tmp[1106358](1106362 'chpl_on_locale_num' call_tmp[1106350]))
    (1106364 'move' tmp[1106340] call_tmp[1106358])
    val needle_data[2196203]:__serializeHelper[28089] "temp"
    (2196205 call chpl__serialize[30886] needle[1106306] needle_data[2196203])
    val isdirect[2203332]:bool[10] "temp"
    (2203337 'move' isdirect[2203332](2203334 call chpl_doDirectExecuteOn[187469] tmp[1106340]))
    if isdirect[2203332]
    {
      (2203341 call on_fn[1106371] needle_data[2196203] this[1106304] region[1106308] ret[1106333])
    }
    {
      val _args_foron_fn[2203365]:_class_localson_fn[2203351] "temp"
      (2203369 'move' _args_foron_fn[2203365](2203367 'stack allocate class' _class_localson_fn[2203351]))
      (2203371 '.=' _args_foron_fn[2203365] _0_tmp[2203354] tmp[1106340])
      (2203375 '.=' _args_foron_fn[2203365] _1_needle_data[2203356] needle_data[2196203])
      ref tmp[2203379]:string[26] "temp"
      (2203383 'move' tmp[2203379](2203381 'set reference' this[1106304]))
      (2203385 '.=' _args_foron_fn[2203365] _2_this[2203358] tmp[2203379])
      (2203389 '.=' _args_foron_fn[2203365] _3_region[2203360] region[1106308])
      ref tmp[2203393]:int(64)[13] "temp"
      (2203397 'move' tmp[2203393](2203395 'set reference' ret[1106333]))
      (2203399 '.=' _args_foron_fn[2203365] _4_ret[2203362] tmp[2203393])
      val _args_vforon_fn[2203403]:c_void_ptr[149] "temp"
      (2203407 'move' _args_vforon_fn[2203403](2203405 'cast_to_void_star' _args_foron_fn[2203365]))
      val _args_sizeon_fn[2203409]:int(64)[13] "temp"
      (2203413 'move' _args_sizeon_fn[2203409](2203411 'sizeof_bundle' _class_localson_fn[2203351]))
      on(2203469 call wrapon_fn[2203415] tmp[1106340] _args_vforon_fn[2203403] _args_sizeon_fn[2203409] _args_foron_fn[2203365])
    }
    {
    }
    (1107484 'move' ret[1106316] ret[1106333])
    gotoReturn _end_doSearchUTF8[1107492] _end_doSearchUTF8[1107492]
    label _end_doSearchUTF8[1107492]
    (1107494 return ret[1106316])
  }
  function _ref(string)[938128].doSearchUTF8[1182996](const  ref arg this[1183000]:_ref(string)[938128], const  ref arg needle[1183002]:string[26], const in arg region[1183004]:range(byteIndex,boundedLow,false)[1143592]) : int(64)[13] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[1183012]:int(64)[13] "dead after last mention" "RVV" "temp"
    val ret[1183029]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1183031 'move' ret[1183029] -1)
    const-val tmp[1183036]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1183038]:_ref(int(32))[936815] "dead after last mention" "maybe param" "temp"
    (1183040 'move' call_tmp[1183038](1183043 call locale_id[758231] this[1183000]))
    const-val call_tmp[1183046]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1184235]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1184239 'move' coerce_tmp[1184235](1184237 'deref' call_tmp[1183038]))
    (1183048 'move' call_tmp[1183046](1183051 call chpl_buildLocaleID[209470] coerce_tmp[1184235] c_sublocid_any[89878]))
    const-val call_tmp[1183054]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    (1183056 'move' call_tmp[1183054](1183058 'chpl_on_locale_num' call_tmp[1183046]))
    (1183060 'move' tmp[1183036] call_tmp[1183054])
    val needle_data[2196459]:__serializeHelper[28089] "temp"
    (2196461 call chpl__serialize[30886] needle[1183002] needle_data[2196459])
    val isdirect[2203900]:bool[10] "temp"
    (2203905 'move' isdirect[2203900](2203902 call chpl_doDirectExecuteOn[187469] tmp[1183036]))
    if isdirect[2203900]
    {
      (2203909 call on_fn[1183067] needle_data[2196459] this[1183000] region[1183004] ret[1183029])
    }
    {
      val _args_foron_fn[2203933]:_class_localson_fn[2203919] "temp"
      (2203937 'move' _args_foron_fn[2203933](2203935 'stack allocate class' _class_localson_fn[2203919]))
      (2203939 '.=' _args_foron_fn[2203933] _0_tmp[2203922] tmp[1183036])
      (2203943 '.=' _args_foron_fn[2203933] _1_needle_data[2203924] needle_data[2196459])
      ref tmp[2203947]:string[26] "temp"
      (2203951 'move' tmp[2203947](2203949 'set reference' this[1183000]))
      (2203953 '.=' _args_foron_fn[2203933] _2_this[2203926] tmp[2203947])
      (2203957 '.=' _args_foron_fn[2203933] _3_region[2203928] region[1183004])
      ref tmp[2203961]:int(64)[13] "temp"
      (2203965 'move' tmp[2203961](2203963 'set reference' ret[1183029]))
      (2203967 '.=' _args_foron_fn[2203933] _4_ret[2203930] tmp[2203961])
      val _args_vforon_fn[2203971]:c_void_ptr[149] "temp"
      (2203975 'move' _args_vforon_fn[2203971](2203973 'cast_to_void_star' _args_foron_fn[2203933]))
      val _args_sizeon_fn[2203977]:int(64)[13] "temp"
      (2203981 'move' _args_sizeon_fn[2203977](2203979 'sizeof_bundle' _class_localson_fn[2203919]))
      on(2204037 call wrapon_fn[2203983] tmp[1183036] _args_vforon_fn[2203971] _args_sizeon_fn[2203977] _args_foron_fn[2203933])
    }
    {
    }
    (1184180 'move' ret[1183012] ret[1183029])
    gotoReturn _end_doSearchUTF8[1184188] _end_doSearchUTF8[1184188]
    label _end_doSearchUTF8[1184188]
    (1184190 return ret[1183012])
  }
  function _ref(string)[938128].buffLen[758075](ref arg this[758079]:_ref(string)[938128]) ref : _ref(int(64))[936761] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[758089]:_ref(int(64))[936761] "dead after last mention" "RVV" "temp"
    ref call_tmp[758096]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (758099 'move' call_tmp[758096](758083 '.' this[758079] buffLen[30722]))
    (758094 'move' ret[758089] call_tmp[758096])
    (758091 return ret[758089])
  }
  function _ref(string)[938128].buffSize[758101](ref arg this[758105]:_ref(string)[938128]) ref : _ref(int(64))[936761] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[758115]:_ref(int(64))[936761] "dead after last mention" "RVV" "temp"
    ref call_tmp[758122]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (758125 'move' call_tmp[758122](758109 '.' this[758105] buffSize[30728]))
    (758120 'move' ret[758115] call_tmp[758122])
    (758117 return ret[758115])
  }
  function _ref(string)[938128].cachedNumCodepoints[758127](ref arg this[758131]:_ref(string)[938128]) ref : _ref(int(64))[936761] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[758141]:_ref(int(64))[936761] "dead after last mention" "RVV" "temp"
    ref call_tmp[758148]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (758151 'move' call_tmp[758148](758135 '.' this[758131] cachedNumCodepoints[30734]))
    (758146 'move' ret[758141] call_tmp[758148])
    (758143 return ret[758141])
  }
  function _ref(string)[938128].buff[758153](ref arg this[758157]:_ref(string)[938128]) ref : _ref(c_ptr(uint(8)))[937621] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[758167]:_ref(c_ptr(uint(8)))[937621] "dead after last mention" "RVV" "temp"
    ref call_tmp[758174]:_ref(c_ptr(uint(8)))[937621] "dead after last mention" "maybe param" "temp"
    (758177 'move' call_tmp[758174](758161 '.' this[758157] buff[30740]))
    (758172 'move' ret[758167] call_tmp[758174])
    (758169 return ret[758167])
  }
  function _ref(string)[938128].isOwned[758179](ref arg this[758183]:_ref(string)[938128]) ref : _ref(bool)[937388] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[758193]:_ref(bool)[937388] "dead after last mention" "RVV" "temp"
    ref call_tmp[758200]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (758203 'move' call_tmp[758200](758187 '.' this[758183] isOwned[30746]))
    (758198 'move' ret[758193] call_tmp[758200])
    (758195 return ret[758193])
  }
  function _ref(string)[938128].hasEscapes[758205](ref arg this[758209]:_ref(string)[938128]) ref : _ref(bool)[937388] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[758219]:_ref(bool)[937388] "dead after last mention" "RVV" "temp"
    ref call_tmp[758226]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (758229 'move' call_tmp[758226](758213 '.' this[758209] hasEscapes[30752]))
    (758224 'move' ret[758219] call_tmp[758226])
    (758221 return ret[758219])
  }
  function _ref(string)[938128].locale_id[758231](ref arg this[758235]:_ref(string)[938128]) ref : _ref(int(32))[936815] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[758245]:_ref(int(32))[936815] "dead after last mention" "RVV" "temp"
    ref call_tmp[758252]:_ref(int(32))[936815] "dead after last mention" "maybe param" "temp"
    (758255 'move' call_tmp[758252](758239 '.' this[758235] locale_id[30757]))
    (758250 'move' ret[758245] call_tmp[758252])
    (758247 return ret[758245])
  }
  type string[26] val buffLen[30722]:int(64)[13] val buffSize[30728]:int(64)[13] val cachedNumCodepoints[30734]:int(64)[13] val buff[30740]:c_ptr(uint(8))[937612] val isOwned[30746]:bool[10] val hasEscapes[30752]:bool[10] val locale_id[30757]:int(32)[95]
  function _ref(string)[938128].size[32772](const  ref arg this[32774]:_ref(string)[938128]) : int(64)[13] "inline" "method" "no parens" "resolved" "fn synchronization free"
  {
    val ret[504007]:int(64)[13] "dead after last mention" "RVV" "temp"
    const-val call_tmp[599800]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (599803 'move' call_tmp[599800](369963 call numCodepoints[32826] this[32774]))
    (504012 'move' ret[504007] call_tmp[599800])
    (504009 return ret[504007])
  }
  function _ref(string)[938128].indices[32788](const  ref arg this[32790]:_ref(string)[938128], ref arg _retArg[1905200]:_ref(range(int(64),bounded,false))[1027047]) : void[4] "fn returns via _retArg" "inline" "method" "no parens" "resolved" "fn synchronization free"
  {
    const-val ret[504016]:range(int(64),bounded,false)[1027003] "dead after last mention" "RVV" "temp"
    const-val call_tmp[599807]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (599810 'move' call_tmp[599807](369967 call size[32772] this[32790]))
    const-val call_tmp[599812]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (599815 'move' call_tmp[599812](32798 call -[962415] call_tmp[599807]))
    const-val call_tmp[599817]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1907388]:range(int(64),bounded,false)[1027003] "temp"
    (32800 call chpl_build_bounded_range[455253] 0 call_tmp[599812] ret_tmp[1907388])
    (1907391 'move' call_tmp[599817] ret_tmp[1907388])
    (504021 'move' ret[504016] call_tmp[599817])
    (1905202 '=' _retArg[1905200] ret[504016])
    (1905204 return _void[55])
  }
  function _ref(string)[938128].numBytes[32810](const  ref arg this[32812]:_ref(string)[938128]) : int(64)[13] "inline" "method" "no parens" "resolved" "fn synchronization free"
  {
    val ret[504025]:int(64)[13] "dead after last mention" "RVV" "temp"
    ref call_tmp[599824]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (599827 'move' call_tmp[599824](369972 call buffLen[758075] this[32812]))
    (504030 'move' ret[504025](504029 'deref' call_tmp[599824]))
    (504027 return ret[504025])
  }
  function _ref(string)[938128].numCodepoints[32826](const  ref arg this[32828]:_ref(string)[938128]) : int(64)[13] "inline" "method" "no parens" "resolved" "fn synchronization free"
  {
    val ret[504034]:int(64)[13] "dead after last mention" "RVV" "temp"
    ref call_tmp[599831]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    (599834 'move' call_tmp[599831](32834 call cachedNumCodepoints[758127] this[32828]))
    const-val n[32837]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1019950]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1019954 'move' coerce_tmp[1019950](1019952 'deref' call_tmp[599831]))
    (1919184 '=' n[32837] coerce_tmp[1019950])
    (540437 'noop')
    {
      const-val call_tmp[599841]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (599844 'move' call_tmp[599841](32847 call countNumCodepoints[181380] this[32828]))
      const-val call_tmp[599846]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (599849 'move' call_tmp[599846](32848 call !=[436128] n[32837] call_tmp[599841]))
      const-val call_tmp[599851]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (599854 'move' call_tmp[599851] call_tmp[599846])
      if call_tmp[599851]
      {
        (32869 call halt[154111] "Encountered corrupt string metadata")
      }
    }
    (504039 'move' ret[504034] n[32837])
    gotoReturn _end_numCodepoints[504032] _end_numCodepoints[504032]
    label _end_numCodepoints[504032]
    (504036 return ret[504034])
  }
  function _ref(string)[938128].localize[32889](const  ref arg this[32891]:_ref(string)[938128], ref arg _retArg[1905356]:_ref(string)[938128]) : void[4] "fn returns via _retArg" "inline" "method" "resolved" "fn synchronization free"
  {
    val ret[504045]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[553367]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[553380]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    ref call_tmp[599868]:_ref(int(32))[936815] "dead after last mention" "maybe param" "temp"
    (599871 'move' call_tmp[599868](32899 call locale_id[758231] this[32891]))
    const-val call_tmp[599873]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[948909]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (948913 'move' coerce_tmp[948909](948911 'deref' call_tmp[599868]))
    (599876 'move' call_tmp[599873](32903 call ==[435722] coerce_tmp[948909] chpl_nodeID[208207]))
    (553382 'move' tmp[553380] call_tmp[599873])
    (553387 'move' tmp[553367] tmp[553380])
    const-val call_tmp[599878]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (599881 'move' call_tmp[599878] tmp[553367])
    if call_tmp[599878]
    {
      const-val call_tmp[599883]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1893984]:string[26] "temp"
      (32910 call createStringWithBorrowedBuffer[29902] this[32891] ret_tmp[1893984])
      (1893987 'move' call_tmp[599883] ret_tmp[1893984])
      (957467 'move' ret[504045] call_tmp[599883])
      gotoReturn _end_localize[504043] _end_localize[504043]
    }
    {
      const-val x[32916]:string[26] "dead at end of block" "const" "insert auto destroy"
      (540439 call init=[30774] x[32916] this[32891])
      (957470 'move' ret[504045] x[32916])
      gotoReturn _end_localize[504043] _end_localize[504043]
    }
    label _end_localize[504043]
    (1905358 '=' _retArg[1905356] ret[504045])
    (1905360 return _void[55])
  }
  function _ref(string)[938128].c_str[32935](const  ref arg this[32937]:_ref(string)[938128]) : c_string[19] "inline" "method" "resolved" "fn synchronization free"
  {
    val ret[504063]:c_string[19] "dead after last mention" "RVV" "temp"
    const-val call_tmp[599888]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (599891 'move' call_tmp[599888](32946 call getCStr[957473] this[32937]))
    (958258 'move' ret[504063] call_tmp[599888])
    (504065 return ret[504063])
  }
  function _ic_chpl_bytes__ref_string[1108445].advance[1108471](const in arg this[1108473]:_ic_chpl_bytes__ref_string[1108445]) : void[4] "auto ii" "method" "resolved"
  {
    const-val more[2097575]:int(64)[13]
    (2097603 'move' more[2097575](2097600 '.v' this[1108473] more[1108448]))
    const-val tmp[2097578]:bool[10] "temp"
    (2097585 'move' tmp[2097578](2097582 '==' more[2097575] 2))
    if tmp[2097578]
    {
      gotoIterResume _jump_2[2097567] _jump_2[2097567]
    }
    const-val tmp[2097590]:bool[10] "temp"
    (2097595 'move' tmp[2097590](2097592 '==' more[2097575] -2))
    if tmp[2097590]
    {
      gotoIterResume _jump_break_2[2097569] _jump_break_2[2097569]
    }
    val ret[504127]:_ir_chpl_bytes__ref_string[1108451] "dead at end of block" "RVV" "temp"
    const-val call_tmp[600260]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1905218]:string[26] "temp"
    ref tmp[2095578]:_ref(string)[938128] "temp"
    (2095583 'move' tmp[2095578](2095580 '.v' this[1108473] F0_this[2095558]))
    (33591 call localize[32889] tmp[2095578] ret_tmp[1905218])
    (1905221 'move' call_tmp[600260] ret_tmp[1905218])
    val tmp[2095585]:string[26] "temp"
    (540489 'move' tmp[2095585] call_tmp[600260])
    (2095587 '.=' this[1108473] F1_localThis[2095562] tmp[2095585])
    val _indexOfInterest[33617]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    ref call_tmp[600267]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
    ref tmp[2095591]:_ref(string)[938128] "temp"
    (2095596 'move' tmp[2095591](2095593 '.' this[1108473] F1_localThis[2095562]))
    (600270 'move' call_tmp[600267](33633 call buffLen[758075] tmp[2095591]))
    const-val call_tmp[600272]:_ir_chpl_direct_counted_range_iter[1103985] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1108604]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1108608 'move' coerce_tmp[1108604](1108606 'deref' call_tmp[600267]))
    const-val ret_tmp[1907716]:_ir_chpl_direct_counted_range_iter[1103985] "temp"
    (33637 call chpl_direct_counted_range_iter[458112] 0 coerce_tmp[1108604] ret_tmp[1907716])
    (1907719 'move' call_tmp[600272] ret_tmp[1907716])
    val tmp[2095598]:_ic_chpl_direct_counted_range_iter[1103979] "temp"
    (33627 'move' tmp[2095598](33625 call _getIterator[1103994] call_tmp[600272]))
    (2095600 '.=' this[1108473] F2__iterator[2095564] tmp[2095598])
    val ret[1977060]:_ir_chpl_direct_counted_range_iter[1103985] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[1977062]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    const-val call_tmp[1977066]:_ir_chpl_direct_counted_range_iter_helper[1103735] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[1977068]:_ir_chpl_direct_counted_range_iter_helper[1103735] "temp"
    const-val low[1977173]:int(64)[13] "temp"
    ref tmp[2095604]:_ref(_ic_chpl_direct_counted_range_iter)[1104122] "temp"
    (2095609 'move' tmp[2095604](2095606 '.' this[1108473] F2__iterator[2095564]))
    (1977178 'move' low[1977173](1977175 '.v' tmp[2095604] F0_low[2107536]))
    const-val count[1977180]:int(64)[13] "temp"
    ref tmp[2095611]:_ref(_ic_chpl_direct_counted_range_iter)[1104122] "temp"
    (2095616 'move' tmp[2095611](2095613 '.' this[1108473] F2__iterator[2095564]))
    (1977185 'move' count[1977180](1977182 '.v' tmp[2095611] F1_count[2107540]))
    (1977071 call chpl_direct_counted_range_iter_helper[1102287] low[1977173] count[1977180] ret_tmp[1977068])
    (1977075 'move' call_tmp[1977066] ret_tmp[1977068])
    val tmp[2095618]:_ic_chpl_direct_counted_range_iter_helper[1103729] "temp"
    (1977078 'move' tmp[2095618](1977081 call _getIterator[1103744] call_tmp[1977066]))
    (2095620 '.=' this[1108473] F3__iterator[2095566] tmp[2095618])
    val ret[2052040]:_ir_chpl_direct_counted_range_iter_helper[1103735] "dead after last mention" "RVV" "temp"
    val call_tmp[2052042]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val tmp[2052044]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[2052046]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    const-val call_tmp[2052048]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[2052465]:int(64)[13] "temp"
    ref tmp[2095624]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
    (2095629 'move' tmp[2095624](2095626 '.' this[1108473] F3__iterator[2095566]))
    (2052470 'move' count[2052465](2052467 '.v' tmp[2095624] F1_count[2113698]))
    (2052050 'move' call_tmp[2052048](2052053 call <[948587] count[2052465]))
    (2052055 'move' tmp[2052046] call_tmp[2052048])
    (2052058 'move' tmp[2052044] call_tmp[2052048])
    const-val call_tmp[2052061]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2052063 'move' call_tmp[2052061] call_tmp[2052048])
    if call_tmp[2052048]
    {
      (2052069 call boundsCheckHalt[210254] "With a negative count, the range must have a last index.")
    }
    val tmp[2052074]:2*int(64)[1040245] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
    const-val tmp[2052076]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[2052078]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[2052472]:int(64)[13] "temp"
    ref tmp[2095631]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
    (2095636 'move' tmp[2095631](2095633 '.' this[1108473] F3__iterator[2095566]))
    (2052477 'move' count[2052472](2052474 '.v' tmp[2095631] F1_count[2113698]))
    (2052080 'move' call_tmp[2052078](2052083 call ==[435744] count[2052472] 0))
    (2052086 'move' tmp[2052076] call_tmp[2052078])
    if call_tmp[2052078]
    {
      const-val tmp[2052091]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      val call_tmp[2052093]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[2052095]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val low[2052479]:int(64)[13] "temp"
      ref tmp[2095638]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
      (2095643 'move' tmp[2095638](2095640 '.' this[1108473] F3__iterator[2095566]))
      (2052484 'move' low[2052479](2052481 '.v' tmp[2095638] F0_low[2113694]))
      (2052097 'move' call_tmp[2052095](2052100 call _cast[956223] low[2052479]))
      const-val call_tmp[2052102]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[2052104]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2052106 'move' coerce_tmp[2052104](2052108 'cast' uint(64)[115] 1))
      (2052111 'move' call_tmp[2052102](2052114 call -[962382] call_tmp[2052095]))
      const-val call_tmp[2052116]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (2052118 'move' call_tmp[2052116](2052121 call _cast[953732] call_tmp[2052102]))
      const-val ret_tmp[2052123]:2*int(64)[1040245] "temp"
      const-val low[2052486]:int(64)[13] "temp"
      ref tmp[2095645]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
      (2095650 'move' tmp[2095645](2095647 '.' this[1108473] F3__iterator[2095566]))
      (2052491 'move' low[2052486](2052488 '.v' tmp[2095645] F0_low[2113694]))
      (2052126 call _build_tuple[1040203] low[2052486] call_tmp[2052116] ret_tmp[2052123])
      (2052130 'move' tmp[2052091] ret_tmp[2052123])
      (2052133 'move' tmp[2052074] tmp[2052091])
    }
    {
      const-val tmp[2052137]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      val call_tmp[2052139]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[2052141]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val count[2052493]:int(64)[13] "temp"
      ref tmp[2095652]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
      (2095657 'move' tmp[2095652](2095654 '.' this[1108473] F3__iterator[2095566]))
      (2052498 'move' count[2052493](2052495 '.v' tmp[2095652] F1_count[2113698]))
      (2052143 'move' call_tmp[2052141] count[2052493])
      const-val call_tmp[2052146]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val count[2052500]:int(64)[13] "temp"
      ref tmp[2095659]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
      (2095664 'move' tmp[2095659](2095661 '.' this[1108473] F3__iterator[2095566]))
      (2052505 'move' count[2052500](2052502 '.v' tmp[2095659] F1_count[2113698]))
      (2052148 'move' call_tmp[2052146](2052151 call -[962415] count[2052500]))
      const-val call_tmp[2052153]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val low[2052507]:int(64)[13] "temp"
      ref tmp[2095666]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
      (2095671 'move' tmp[2095666](2095668 '.' this[1108473] F3__iterator[2095566]))
      (2052512 'move' low[2052507](2052509 '.v' tmp[2095666] F0_low[2113694]))
      (2052155 'move' call_tmp[2052153](2052158 call +[439752] low[2052507] call_tmp[2052146]))
      const-val ret_tmp[2052161]:2*int(64)[1040245] "temp"
      const-val low[2052514]:int(64)[13] "temp"
      ref tmp[2095673]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
      (2095678 'move' tmp[2095673](2095675 '.' this[1108473] F3__iterator[2095566]))
      (2052519 'move' low[2052514](2052516 '.v' tmp[2095673] F0_low[2113694]))
      (2052164 call _build_tuple[1040203] low[2052514] call_tmp[2052153] ret_tmp[2052161])
      (2052168 'move' tmp[2052137] ret_tmp[2052161])
      (2052171 'move' tmp[2052074] tmp[2052137])
    }
    const tmp[2095680]:2*int(64)[1040245] "temp"
    (2052175 '=' tmp[2095680] tmp[2052074])
    (2095682 '.=' this[1108473] F4_tmp[2095568] tmp[2095680])
    (2052178 'noop')
    1
    ref call_tmp[2052180]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
    ref tmp[2095686]:_ref(2*int(64))[1040318] "temp"
    (2095691 'move' tmp[2095686](2095688 '.' this[1108473] F4_tmp[2095568]))
    (2052182 'move' call_tmp[2052180](2052184 '.' tmp[2095686] x0[1040241]))
    const-val start[2052187]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[2052189]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2052191 'move' coerce_tmp[2052189](2052193 'deref' call_tmp[2052180]))
    (2052195 '=' start[2052187] coerce_tmp[2052189])
    (2052198 'noop')
    ref call_tmp[2052199]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
    ref tmp[2095693]:_ref(2*int(64))[1040318] "temp"
    (2095698 'move' tmp[2095693](2095695 '.' this[1108473] F4_tmp[2095568]))
    (2052201 'move' call_tmp[2052199](2052203 '.' tmp[2095693] x1[1040243]))
    const-val end[2052206]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[2052208]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2052210 'move' coerce_tmp[2052208](2052212 'deref' call_tmp[2052199]))
    (2052214 '=' end[2052206] coerce_tmp[2052208])
    (2052217 'noop')
    val _indexOfInterest[2052218]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    const-val call_tmp[2052222]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[2052224]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
    (2052227 call chpl_direct_param_stride_range_iter[1102713] coerce_tmp[2052189] coerce_tmp[2052208] ret_tmp[2052224])
    (2052231 'move' call_tmp[2052222] ret_tmp[2052224])
    val tmp[2095700]:_ic_chpl_direct_param_stride_range_iter[1103475] "temp"
    (2052234 'move' tmp[2095700](2052237 call _getIterator[1103490] call_tmp[2052222]))
    (2095702 '.=' this[1108473] F5__iterator[2095570] tmp[2095700])
    val ret[2052240]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead after last mention" "RVV" "temp"
    val call_tmp[2052242]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (2052245 call chpl_range_check_stride[1103033])
    val call_tmp[2052248]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[2095706]:int(64)[13] "temp"
    (2052250 'move' tmp[2095706] 0)
    (2095708 '.=' this[1108473] F6_i[2095572] tmp[2095706])
    val call_tmp[2052253]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val default_arg_first[2052255]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val low[2052257]:int(64)[13] "temp"
    ref tmp[2095712]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103618] "temp"
    (2095717 'move' tmp[2095712](2095714 '.' this[1108473] F5__iterator[2095570]))
    (2052259 'move' low[2052257](2052261 '.v' tmp[2095712] F0_low[2115192]))
    (2052264 'move' default_arg_first[2052255](2052267 call chpl_checkIfRangeIterWillOverflow_default_first[1103387] low[2052257]))
    const-val default_arg_last[2052269]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val high[2052271]:int(64)[13] "temp"
    ref tmp[2095719]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103618] "temp"
    (2095724 'move' tmp[2095719](2095721 '.' this[1108473] F5__iterator[2095570]))
    (2052273 'move' high[2052271](2052275 '.v' tmp[2095719] F1_high[2115196]))
    (2052278 'move' default_arg_last[2052269](2052281 call chpl_checkIfRangeIterWillOverflow_default_last[1103415] high[2052271]))
    const-val _return_tmp_[2052283]:bool[10] "dead after last mention" "temp"
    const-val low[2052285]:int(64)[13] "temp"
    ref tmp[2095726]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103618] "temp"
    (2095731 'move' tmp[2095726](2095728 '.' this[1108473] F5__iterator[2095570]))
    (2052287 'move' low[2052285](2052289 '.v' tmp[2095726] F0_low[2115192]))
    const-val high[2052292]:int(64)[13] "temp"
    ref tmp[2095733]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103618] "temp"
    (2095738 'move' tmp[2095733](2095735 '.' this[1108473] F5__iterator[2095570]))
    (2052294 'move' high[2052292](2052296 '.v' tmp[2095733] F1_high[2115196]))
    (2052299 'move' _return_tmp_[2052283](2052302 call chpl_checkIfRangeIterWillOverflow[1096265] low[2052285] high[2052292] 1 default_arg_first[2052255] default_arg_last[2052269] 1))
    CForLoop[2052309]
    {
      const-val yret[2052338]:int(64)[13] "dead after last mention" "YVV" "temp"
      const-val tmp[2095740]:int(64)[13] "temp"
      (2095745 'move' tmp[2095740](2095742 '.v' this[1108473] F6_i[2095572]))
      (2052340 'move' yret[2052338] tmp[2095740])
      const-val _yieldedIndex[2052343]:int(64)[13] "temp"
      const-val tmp[2095747]:int(64)[13] "temp"
      (2095752 'move' tmp[2095747](2095749 '.v' this[1108473] F6_i[2095572]))
      (2052345 'move' _yieldedIndex[2052343] tmp[2095747])
      const-val i[2052349]:int(64)[13] "const" "index var" "insert auto destroy"
      (2052351 'move' i[2052349] _yieldedIndex[2052343])
      const-val yret[2052354]:int(64)[13] "dead after last mention" "YVV" "temp"
      (2052356 'move' yret[2052354] _yieldedIndex[2052343])
      const-val _yieldedIndex[2052384]:int(64)[13] "temp"
      (2052463 'move' _yieldedIndex[2052384] _yieldedIndex[2052343])
      const-val i[2052386]:int(64)[13] "const" "index var" "insert auto destroy"
      (2052388 'move' i[2052386] _yieldedIndex[2052384])
      const-val yret[2052391]:int(64)[13] "dead after last mention" "YVV" "temp"
      (2052393 'move' yret[2052391] _yieldedIndex[2052384])
      const-val _yieldedIndex[2052396]:int(64)[13] "temp"
      (2052398 'move' _yieldedIndex[2052396] _yieldedIndex[2052384])
      const-val i[2052401]:int(64)[13] "const" "index var" "insert auto destroy"
      (2052403 'move' i[2052401] _yieldedIndex[2052396])
      const-val yret[2052406]:uint(8)[100] "dead after last mention" "YVV" "temp"
      ref call_tmp[2052408]:_ref(uint(8))[937097] "dead after last mention" "maybe param" "temp"
      ref _this_tmp_[2052410]:_ref(c_ptr(uint(8)))[937621] "dead after last mention" "temp"
      ref tmp[2095754]:_ref(string)[938128] "temp"
      (2095759 'move' tmp[2095754](2095756 '.' this[1108473] F1_localThis[2095562]))
      (2052412 'move' _this_tmp_[2052410](2052415 call buff[758153] tmp[2095754]))
      val coerce_tmp[2052417]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2052419 'move' coerce_tmp[2052417](2052421 'deref' _this_tmp_[2052410]))
      (2052423 'move' call_tmp[2052408](2052426 call this[954280] coerce_tmp[2052417] _yieldedIndex[2052396]))
      val tmp[2095761]:uint(8)[100] "temp"
      (2052431 'move' tmp[2095761](2052433 'deref' call_tmp[2052408]))
      (2095763 '.=' this[1108473] value[2095576] tmp[2095761])
      const-val tmp[2095767]:uint(8)[100] "temp"
      (2095772 'move' tmp[2095767](2095769 '.v' this[1108473] value[2095576]))
      (2052435 '=' yret[2052406] tmp[2095767])
      (2052438 'noop')
      (2097561 '.=' this[1108473] more[1108448] 2)
      gotoIterEnd _end[2097559] _end[2097559]
      label _jump_break_2[2097569]
      val tmp[2095774]:_ic_chpl_direct_param_stride_range_iter[1103475] "temp"
      (2095779 'move' tmp[2095774](2095776 '.v' this[1108473] F5__iterator[2095570]))
      (2052457 call _freeIterator[1103663] tmp[2095774])
      ref tmp[2095781]:_ref(2*int(64))[1040318] "temp"
      (2095786 'move' tmp[2095781](2095783 '.' this[1108473] F4_tmp[2095568]))
      (2052460 call chpl__autoDestroy[1674803] tmp[2095781])
      val tmp[2095788]:_ic_chpl_direct_counted_range_iter_helper[1103729] "temp"
      (2095793 'move' tmp[2095788](2095790 '.v' this[1108473] F3__iterator[2095566]))
      (2052444 call _freeIterator[1103913] tmp[2095788])
      val tmp[2095795]:_ic_chpl_direct_counted_range_iter[1103979] "temp"
      (2095800 'move' tmp[2095795](2095797 '.v' this[1108473] F2__iterator[2095564]))
      (2052447 call _freeIterator[1104163] tmp[2095795])
      ref tmp[2095802]:_ref(string)[938128] "temp"
      (2095807 'move' tmp[2095802](2095804 '.' this[1108473] F1_localThis[2095562]))
      (2052450 call chpl__autoDestroy[1601673] tmp[2095802])
      gotoReturn _endchpl_bytes[1889432] _endchpl_bytes[1889432]
      label _jump_2[2097567]
      {
        const-val tmp[2095809]:int(64)[13] "temp"
        ref tmp[2095815]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103618] "temp"
        (2095820 'move' tmp[2095815](2095817 '.' this[1108473] F5__iterator[2095570]))
        (2052313 'move' tmp[2095809](2052315 '.v' tmp[2095815] F0_low[2115192]))
        (2095811 '.=' this[1108473] F7_low[2095574] tmp[2095809])
        val tmp[2095822]:int(64)[13] "temp"
        const-val tmp[2095828]:int(64)[13] "temp"
        (2095833 'move' tmp[2095828](2095830 '.v' this[1108473] F7_low[2095574]))
        (2052318 '=' tmp[2095822] tmp[2095828])
        (2095824 '.=' this[1108473] F6_i[2095572] tmp[2095822])
      }
      {
        const-val high[2052322]:int(64)[13] "temp"
        ref tmp[2095835]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103618] "temp"
        (2095840 'move' tmp[2095835](2095837 '.' this[1108473] F5__iterator[2095570]))
        (2052324 'move' high[2052322](2052326 '.v' tmp[2095835] F1_high[2115196]))
        val tmp[2095842]:int(64)[13] "temp"
        (2095847 'move' tmp[2095842](2095844 '.v' this[1108473] F6_i[2095572]))
        (2052329 '<=' tmp[2095842] high[2052322])
      }
      {
        val call_tmp[2052333]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val tmp[2095849]:int(64)[13] "temp"
        (2095854 'move' tmp[2095849](2095851 '.v' this[1108473] F6_i[2095572]))
        (2052335 '+=' tmp[2095849] 1)
        (2095856 '.=' this[1108473] F6_i[2095572] tmp[2095849])
      }
    }
    label _endchpl_direct_param_stride_range_iter[2052372]
    val tmp[2095860]:_ic_chpl_direct_param_stride_range_iter[1103475] "temp"
    (2095865 'move' tmp[2095860](2095862 '.v' this[1108473] F5__iterator[2095570]))
    (2052375 call _freeIterator[1103663] tmp[2095860])
    ref tmp[2095867]:_ref(2*int(64))[1040318] "temp"
    (2095872 'move' tmp[2095867](2095869 '.' this[1108473] F4_tmp[2095568]))
    (2052378 call chpl__autoDestroy[1674803] tmp[2095867])
    label _endchpl_direct_counted_range_iter_helper[2052380]
    val tmp[2095874]:_ic_chpl_direct_counted_range_iter_helper[1103729] "temp"
    (2095879 'move' tmp[2095874](2095876 '.v' this[1108473] F3__iterator[2095566]))
    (1977107 call _freeIterator[1103913] tmp[2095874])
    label _endchpl_direct_counted_range_iter[1977109]
    val tmp[2095881]:_ic_chpl_direct_counted_range_iter[1103979] "temp"
    (2095886 'move' tmp[2095881](2095883 '.v' this[1108473] F2__iterator[2095564]))
    (1919200 call _freeIterator[1104163] tmp[2095881])
    ref tmp[2095888]:_ref(string)[938128] "temp"
    (2095893 'move' tmp[2095888](2095890 '.' this[1108473] F1_localThis[2095562]))
    (1919202 call chpl__autoDestroy[1601673] tmp[2095888])
    label _endchpl_bytes[1889432]
    (2097571 '.=' this[1108473] more[1108448] 0)
    label _end[2097559]
    (2097606 return _void[55])
  }
  function _ic_chpl_bytes__ref_string[1108445].zip1[1108480](const in arg this[1108482]:_ic_chpl_bytes__ref_string[1108445]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    val ret[2095896]:_ir_chpl_bytes__ref_string[1108451] "dead at end of block" "RVV" "temp"
    const-val call_tmp[2095898]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[2095900]:string[26] "temp"
    val localThis[2095902]:string[26] "dead at end of block" "insert auto destroy"
    val _indexOfInterest[2095904]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[2095906]:_ic_chpl_direct_counted_range_iter[1103979] "dead at end of block" "expr temp" "temp"
    ref call_tmp[2095908]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
    const-val call_tmp[2095910]:_ir_chpl_direct_counted_range_iter[1103985] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[2095912]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    const-val ret_tmp[2095914]:_ir_chpl_direct_counted_range_iter[1103985] "temp"
    val ret[2095916]:_ir_chpl_direct_counted_range_iter[1103985] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[2095918]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[2095920]:_ic_chpl_direct_counted_range_iter_helper[1103729] "dead at end of block" "expr temp" "temp"
    const-val call_tmp[2095922]:_ir_chpl_direct_counted_range_iter_helper[1103735] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[2095924]:_ir_chpl_direct_counted_range_iter_helper[1103735] "temp"
    const-val low[2095926]:int(64)[13] "temp"
    const-val count[2095928]:int(64)[13] "temp"
    val ret[2095930]:_ir_chpl_direct_counted_range_iter_helper[1103735] "dead after last mention" "RVV" "temp"
    val call_tmp[2095932]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val tmp[2095934]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[2095936]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    const-val call_tmp[2095938]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[2095940]:int(64)[13] "temp"
    const-val call_tmp[2095942]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const tmp[2095944]:2*int(64)[1040245] "dead at end of block" "const" "insert auto destroy" "temp"
    val tmp[2095946]:2*int(64)[1040245] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
    const-val tmp[2095948]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[2095950]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[2095952]:int(64)[13] "temp"
    val tmp[2095954]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
    val call_tmp[2095956]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[2095958]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val low[2095960]:int(64)[13] "temp"
    val call_tmp[2095962]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
    val coerce_tmp[2095964]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val call_tmp[2095966]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    val ret_tmp[2095968]:2*int(64)[1040245] "temp"
    const-val low[2095970]:int(64)[13] "temp"
    val tmp[2095972]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
    val call_tmp[2095974]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[2095976]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val count[2095978]:int(64)[13] "temp"
    val call_tmp[2095980]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val count[2095982]:int(64)[13] "temp"
    val call_tmp[2095984]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val low[2095986]:int(64)[13] "temp"
    val ret_tmp[2095988]:2*int(64)[1040245] "temp"
    const-val low[2095990]:int(64)[13] "temp"
    ref call_tmp[2095992]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
    const-val start[2095994]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[2095996]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    ref call_tmp[2095998]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
    const-val end[2096000]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[2096002]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    val _indexOfInterest[2096004]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[2096006]:_ic_chpl_direct_param_stride_range_iter[1103475] "dead at end of block" "expr temp" "temp"
    const-val call_tmp[2096008]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[2096010]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
    val ret[2096012]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead after last mention" "RVV" "temp"
    val call_tmp[2096014]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val i[2096016]:int(64)[13] "dead at end of block" "insert auto destroy"
    val call_tmp[2096018]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[2096020]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val default_arg_first[2096022]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val low[2096024]:int(64)[13] "temp"
    const-val default_arg_last[2096026]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val high[2096028]:int(64)[13] "temp"
    const-val _return_tmp_[2096030]:bool[10] "dead after last mention" "temp"
    const-val low[2096032]:int(64)[13] "temp"
    const-val high[2096034]:int(64)[13] "temp"
    val yret[2096036]:int(64)[13] "dead after last mention" "YVV" "temp"
    val _yieldedIndex[2096038]:int(64)[13] "temp"
    const i[2096040]:int(64)[13] "const" "index var" "insert auto destroy"
    val yret[2096042]:int(64)[13] "dead after last mention" "YVV" "temp"
    val _yieldedIndex[2096044]:int(64)[13] "temp"
    const i[2096046]:int(64)[13] "const" "index var" "insert auto destroy"
    val yret[2096048]:int(64)[13] "dead after last mention" "YVV" "temp"
    val _yieldedIndex[2096050]:int(64)[13] "temp"
    const i[2096052]:int(64)[13] "const" "index var" "insert auto destroy"
    val yret[2096054]:uint(8)[100] "dead after last mention" "YVV" "temp"
    ref call_tmp[2096056]:_ref(uint(8))[937097] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[2096058]:_ref(c_ptr(uint(8)))[937621] "dead after last mention" "temp"
    val coerce_tmp[2096060]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val coerce_tmp[2096062]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    const-val low[2096064]:int(64)[13] "temp"
    const-val high[2096066]:int(64)[13] "temp"
    val call_tmp[2096068]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    label _endchpl_direct_param_stride_range_iter[2096070]
    label _endchpl_direct_counted_range_iter_helper[2096072]
    label _endchpl_direct_counted_range_iter[2096074]
    label _endchpl_bytes[2096076]
    ref tmp[2096078]:_ref(string)[938128] "temp"
    val tmp[2096080]:string[26] "temp"
    ref tmp[2096082]:_ref(string)[938128] "temp"
    val tmp[2096084]:_ic_chpl_direct_counted_range_iter[1103979] "temp"
    ref tmp[2096086]:_ref(_ic_chpl_direct_counted_range_iter)[1104122] "temp"
    ref tmp[2096088]:_ref(_ic_chpl_direct_counted_range_iter)[1104122] "temp"
    val tmp[2096090]:_ic_chpl_direct_counted_range_iter_helper[1103729] "temp"
    ref tmp[2096092]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
    ref tmp[2096094]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
    ref tmp[2096096]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
    ref tmp[2096098]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
    ref tmp[2096100]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
    ref tmp[2096102]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
    ref tmp[2096104]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
    ref tmp[2096106]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
    const tmp[2096108]:2*int(64)[1040245] "temp"
    ref tmp[2096110]:_ref(2*int(64))[1040318] "temp"
    ref tmp[2096112]:_ref(2*int(64))[1040318] "temp"
    val tmp[2096114]:_ic_chpl_direct_param_stride_range_iter[1103475] "temp"
    val tmp[2096116]:int(64)[13] "temp"
    ref tmp[2096118]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103618] "temp"
    ref tmp[2096120]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103618] "temp"
    ref tmp[2096122]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103618] "temp"
    ref tmp[2096124]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103618] "temp"
    val tmp[2096126]:int(64)[13] "temp"
    val tmp[2096128]:int(64)[13] "temp"
    ref tmp[2096130]:_ref(string)[938128] "temp"
    val tmp[2096132]:uint(8)[100] "temp"
    val tmp[2096134]:uint(8)[100] "temp"
    val tmp[2096136]:_ic_chpl_direct_param_stride_range_iter[1103475] "temp"
    ref tmp[2096138]:_ref(2*int(64))[1040318] "temp"
    val tmp[2096140]:_ic_chpl_direct_counted_range_iter_helper[1103729] "temp"
    val tmp[2096142]:_ic_chpl_direct_counted_range_iter[1103979] "temp"
    ref tmp[2096144]:_ref(string)[938128] "temp"
    const-val tmp[2096146]:int(64)[13] "temp"
    ref tmp[2096148]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103618] "temp"
    val tmp[2096150]:int(64)[13] "temp"
    const-val tmp[2096152]:int(64)[13] "temp"
    ref tmp[2096154]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103618] "temp"
    val tmp[2096156]:int(64)[13] "temp"
    val tmp[2096158]:int(64)[13] "temp"
    val tmp[2096160]:_ic_chpl_direct_param_stride_range_iter[1103475] "temp"
    ref tmp[2096162]:_ref(2*int(64))[1040318] "temp"
    val tmp[2096164]:_ic_chpl_direct_counted_range_iter_helper[1103729] "temp"
    val tmp[2096166]:_ic_chpl_direct_counted_range_iter[1103979] "temp"
    ref tmp[2096168]:_ref(string)[938128] "temp"
    (2096170 'move' tmp[2096078](2096172 '.v' this[1108482] F0_this[2095558]))
    (2096176 call localize[32889] tmp[2096078] ret_tmp[2095900])
    (2096179 'move' call_tmp[2095898] ret_tmp[2095900])
    (2096182 'move' tmp[2096080] call_tmp[2095898])
    (2096185 '.=' this[1108482] F1_localThis[2095562] tmp[2096080])
    (2096189 'move' tmp[2096082](2096191 '.' this[1108482] F1_localThis[2095562]))
    (2096194 'move' call_tmp[2095908](2096197 call buffLen[758075] tmp[2096082]))
    (2096199 'move' coerce_tmp[2095912](2096201 'deref' call_tmp[2095908]))
    (2096204 call chpl_direct_counted_range_iter[458112] 0 coerce_tmp[2095912] ret_tmp[2095914])
    (2096208 'move' call_tmp[2095910] ret_tmp[2095914])
    (2096211 'move' tmp[2096084](2096214 call _getIterator[1103994] call_tmp[2095910]))
    (2096216 '.=' this[1108482] F2__iterator[2095564] tmp[2096084])
    (2096220 'move' tmp[2096086](2096222 '.' this[1108482] F2__iterator[2095564]))
    (2096225 'move' low[2095926](2096227 '.v' tmp[2096086] F0_low[2107536]))
    (2096230 'move' tmp[2096088](2096232 '.' this[1108482] F2__iterator[2095564]))
    (2096235 'move' count[2095928](2096237 '.v' tmp[2096088] F1_count[2107540]))
    (2096241 call chpl_direct_counted_range_iter_helper[1102287] low[2095926] count[2095928] ret_tmp[2095924])
    (2096245 'move' call_tmp[2095922] ret_tmp[2095924])
    (2096248 'move' tmp[2096090](2096251 call _getIterator[1103744] call_tmp[2095922]))
    (2096253 '.=' this[1108482] F3__iterator[2095566] tmp[2096090])
    (2096257 'move' tmp[2096092](2096259 '.' this[1108482] F3__iterator[2095566]))
    (2096262 'move' count[2095940](2096264 '.v' tmp[2096092] F1_count[2113698]))
    (2096267 'move' call_tmp[2095938](2096270 call <[948587] count[2095940]))
    (2096272 'move' tmp[2095936] call_tmp[2095938])
    (2096275 'move' tmp[2095934] call_tmp[2095938])
    (2096278 'move' call_tmp[2095942] call_tmp[2095938])
    if call_tmp[2095938]
    {
      (2096284 call boundsCheckHalt[210254] "With a negative count, the range must have a last index.")
    }
    (2096287 'move' tmp[2096094](2096289 '.' this[1108482] F3__iterator[2095566]))
    (2096292 'move' count[2095952](2096294 '.v' tmp[2096094] F1_count[2113698]))
    (2096297 'move' call_tmp[2095950](2096300 call ==[435744] count[2095952] 0))
    (2096303 'move' tmp[2095948] call_tmp[2095950])
    if call_tmp[2095950]
    {
      const-val tmp[2096308]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      val call_tmp[2096310]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[2096312]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val low[2096314]:int(64)[13] "temp"
      ref tmp[2096316]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
      (2096318 'move' tmp[2096316](2096320 '.' this[1108482] F3__iterator[2095566]))
      (2096323 'move' low[2096314](2096325 '.v' tmp[2096316] F0_low[2113694]))
      (2096328 'move' call_tmp[2096312](2096331 call _cast[956223] low[2096314]))
      const-val call_tmp[2096333]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[2096335]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2096337 'move' coerce_tmp[2096335](2096339 'cast' uint(64)[115] 1))
      (2096342 'move' call_tmp[2096333](2096345 call -[962382] call_tmp[2096312]))
      const-val call_tmp[2096347]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (2096349 'move' call_tmp[2096347](2096352 call _cast[953732] call_tmp[2096333]))
      const-val ret_tmp[2096354]:2*int(64)[1040245] "temp"
      const-val low[2096356]:int(64)[13] "temp"
      ref tmp[2096358]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
      (2096360 'move' tmp[2096358](2096362 '.' this[1108482] F3__iterator[2095566]))
      (2096365 'move' low[2096356](2096367 '.v' tmp[2096358] F0_low[2113694]))
      (2096371 call _build_tuple[1040203] low[2096356] call_tmp[2096347] ret_tmp[2096354])
      (2096375 'move' tmp[2096308] ret_tmp[2096354])
      (2096378 'move' tmp[2095946] tmp[2096308])
    }
    {
      const-val tmp[2096382]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      val call_tmp[2096384]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[2096386]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val count[2096388]:int(64)[13] "temp"
      ref tmp[2096390]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
      (2096392 'move' tmp[2096390](2096394 '.' this[1108482] F3__iterator[2095566]))
      (2096397 'move' count[2096388](2096399 '.v' tmp[2096390] F1_count[2113698]))
      (2096402 'move' call_tmp[2096386] count[2096388])
      const-val call_tmp[2096405]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val count[2096407]:int(64)[13] "temp"
      ref tmp[2096409]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
      (2096411 'move' tmp[2096409](2096413 '.' this[1108482] F3__iterator[2095566]))
      (2096416 'move' count[2096407](2096418 '.v' tmp[2096409] F1_count[2113698]))
      (2096421 'move' call_tmp[2096405](2096424 call -[962415] count[2096407]))
      const-val call_tmp[2096426]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val low[2096428]:int(64)[13] "temp"
      ref tmp[2096430]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
      (2096432 'move' tmp[2096430](2096434 '.' this[1108482] F3__iterator[2095566]))
      (2096437 'move' low[2096428](2096439 '.v' tmp[2096430] F0_low[2113694]))
      (2096442 'move' call_tmp[2096426](2096445 call +[439752] low[2096428] call_tmp[2096405]))
      const-val ret_tmp[2096448]:2*int(64)[1040245] "temp"
      const-val low[2096450]:int(64)[13] "temp"
      ref tmp[2096452]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
      (2096454 'move' tmp[2096452](2096456 '.' this[1108482] F3__iterator[2095566]))
      (2096459 'move' low[2096450](2096461 '.v' tmp[2096452] F0_low[2113694]))
      (2096465 call _build_tuple[1040203] low[2096450] call_tmp[2096426] ret_tmp[2096448])
      (2096469 'move' tmp[2096382] ret_tmp[2096448])
      (2096472 'move' tmp[2095946] tmp[2096382])
    }
    (2096476 '=' tmp[2096108] tmp[2095946])
    (2096479 '.=' this[1108482] F4_tmp[2095568] tmp[2096108])
    (2096483 'noop')
    1
    (2096485 'move' tmp[2096110](2096487 '.' this[1108482] F4_tmp[2095568]))
    (2096490 'move' call_tmp[2095992](2096492 '.' tmp[2096110] x0[1040241]))
    (2096495 'move' coerce_tmp[2095996](2096497 'deref' call_tmp[2095992]))
    (2096499 '=' start[2095994] coerce_tmp[2095996])
    (2096502 'noop')
    (2096503 'move' tmp[2096112](2096505 '.' this[1108482] F4_tmp[2095568]))
    (2096508 'move' call_tmp[2095998](2096510 '.' tmp[2096112] x1[1040243]))
    (2096513 'move' coerce_tmp[2096002](2096515 'deref' call_tmp[2095998]))
    (2096517 '=' end[2096000] coerce_tmp[2096002])
    (2096520 'noop')
    (2096522 call chpl_direct_param_stride_range_iter[1102713] coerce_tmp[2095996] coerce_tmp[2096002] ret_tmp[2096010])
    (2096526 'move' call_tmp[2096008] ret_tmp[2096010])
    (2096529 'move' tmp[2096114](2096532 call _getIterator[1103490] call_tmp[2096008]))
    (2096534 '.=' this[1108482] F5__iterator[2095570] tmp[2096114])
    (2096539 call chpl_range_check_stride[1103033])
    (2096540 'move' tmp[2096116] 0)
    (2096543 '.=' this[1108482] F6_i[2095572] tmp[2096116])
    (2096547 'move' tmp[2096118](2096549 '.' this[1108482] F5__iterator[2095570]))
    (2096552 'move' low[2096024](2096554 '.v' tmp[2096118] F0_low[2115192]))
    (2096557 'move' default_arg_first[2096022](2096560 call chpl_checkIfRangeIterWillOverflow_default_first[1103387] low[2096024]))
    (2096562 'move' tmp[2096120](2096564 '.' this[1108482] F5__iterator[2095570]))
    (2096567 'move' high[2096028](2096569 '.v' tmp[2096120] F1_high[2115196]))
    (2096572 'move' default_arg_last[2096026](2096575 call chpl_checkIfRangeIterWillOverflow_default_last[1103415] high[2096028]))
    (2096577 'move' tmp[2096122](2096579 '.' this[1108482] F5__iterator[2095570]))
    (2096582 'move' low[2096032](2096584 '.v' tmp[2096122] F0_low[2115192]))
    (2096587 'move' tmp[2096124](2096589 '.' this[1108482] F5__iterator[2095570]))
    (2096592 'move' high[2096034](2096594 '.v' tmp[2096124] F1_high[2115196]))
    (2096597 'move' _return_tmp_[2096030](2096600 call chpl_checkIfRangeIterWillOverflow[1096265] low[2096032] high[2096034] 1 default_arg_first[2096022] default_arg_last[2096026] 1))
    (2096607 return _void[55])
  }
  function _ic_chpl_bytes__ref_string[1108445].zip2[1108489](const in arg this[1108491]:_ic_chpl_bytes__ref_string[1108445]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    val ret[2096610]:_ir_chpl_bytes__ref_string[1108451] "dead at end of block" "RVV" "temp"
    val call_tmp[2096612]:string[26] "dead at end of block" "maybe param" "temp"
    val ret_tmp[2096614]:string[26] "temp"
    val localThis[2096616]:string[26] "dead at end of block" "insert auto destroy"
    val _indexOfInterest[2096618]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[2096620]:_ic_chpl_direct_counted_range_iter[1103979] "dead at end of block" "expr temp" "temp"
    ref call_tmp[2096622]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
    val call_tmp[2096624]:_ir_chpl_direct_counted_range_iter[1103985] "dead at end of block" "expr temp" "maybe param" "temp"
    val coerce_tmp[2096626]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val ret_tmp[2096628]:_ir_chpl_direct_counted_range_iter[1103985] "temp"
    val ret[2096630]:_ir_chpl_direct_counted_range_iter[1103985] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[2096632]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[2096634]:_ic_chpl_direct_counted_range_iter_helper[1103729] "dead at end of block" "expr temp" "temp"
    val call_tmp[2096636]:_ir_chpl_direct_counted_range_iter_helper[1103735] "dead at end of block" "expr temp" "maybe param" "temp"
    val ret_tmp[2096638]:_ir_chpl_direct_counted_range_iter_helper[1103735] "temp"
    const-val low[2096640]:int(64)[13] "temp"
    const-val count[2096642]:int(64)[13] "temp"
    val ret[2096644]:_ir_chpl_direct_counted_range_iter_helper[1103735] "dead after last mention" "RVV" "temp"
    val call_tmp[2096646]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[2096648]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val tmp[2096650]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    val call_tmp[2096652]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[2096654]:int(64)[13] "temp"
    val call_tmp[2096656]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const tmp[2096658]:2*int(64)[1040245] "dead at end of block" "const" "insert auto destroy" "temp"
    val tmp[2096660]:2*int(64)[1040245] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
    val tmp[2096662]:bool[10] "dead after last mention" "maybe param" "temp"
    val call_tmp[2096664]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[2096666]:int(64)[13] "temp"
    val tmp[2096668]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
    val call_tmp[2096670]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[2096672]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val low[2096674]:int(64)[13] "temp"
    val call_tmp[2096676]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
    val coerce_tmp[2096678]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val call_tmp[2096680]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    val ret_tmp[2096682]:2*int(64)[1040245] "temp"
    const-val low[2096684]:int(64)[13] "temp"
    val tmp[2096686]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
    val call_tmp[2096688]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[2096690]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val count[2096692]:int(64)[13] "temp"
    val call_tmp[2096694]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val count[2096696]:int(64)[13] "temp"
    val call_tmp[2096698]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val low[2096700]:int(64)[13] "temp"
    val ret_tmp[2096702]:2*int(64)[1040245] "temp"
    const-val low[2096704]:int(64)[13] "temp"
    ref call_tmp[2096706]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
    const start[2096708]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[2096710]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    ref call_tmp[2096712]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
    const end[2096714]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[2096716]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    val _indexOfInterest[2096718]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[2096720]:_ic_chpl_direct_param_stride_range_iter[1103475] "dead at end of block" "expr temp" "temp"
    val call_tmp[2096722]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead at end of block" "expr temp" "maybe param" "temp"
    val ret_tmp[2096724]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
    val ret[2096726]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead after last mention" "RVV" "temp"
    val call_tmp[2096728]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val i[2096730]:int(64)[13] "dead at end of block" "insert auto destroy"
    val call_tmp[2096732]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[2096734]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val default_arg_first[2096736]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val low[2096738]:int(64)[13] "temp"
    val default_arg_last[2096740]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val high[2096742]:int(64)[13] "temp"
    val _return_tmp_[2096744]:bool[10] "dead after last mention" "temp"
    const-val low[2096746]:int(64)[13] "temp"
    const-val high[2096748]:int(64)[13] "temp"
    const-val yret[2096750]:int(64)[13] "dead after last mention" "YVV" "temp"
    const-val _yieldedIndex[2096752]:int(64)[13] "temp"
    const-val i[2096754]:int(64)[13] "const" "index var" "insert auto destroy"
    const-val yret[2096756]:int(64)[13] "dead after last mention" "YVV" "temp"
    const-val _yieldedIndex[2096758]:int(64)[13] "temp"
    const-val i[2096760]:int(64)[13] "const" "index var" "insert auto destroy"
    const-val yret[2096762]:int(64)[13] "dead after last mention" "YVV" "temp"
    const-val _yieldedIndex[2096764]:int(64)[13] "temp"
    const-val i[2096766]:int(64)[13] "const" "index var" "insert auto destroy"
    const-val yret[2096768]:uint(8)[100] "dead after last mention" "YVV" "temp"
    ref call_tmp[2096770]:_ref(uint(8))[937097] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[2096772]:_ref(c_ptr(uint(8)))[937621] "dead after last mention" "temp"
    val coerce_tmp[2096774]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val coerce_tmp[2096776]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    const-val low[2096778]:int(64)[13] "temp"
    const-val high[2096780]:int(64)[13] "temp"
    val call_tmp[2096782]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    label _endchpl_direct_param_stride_range_iter[2096784]
    label _endchpl_direct_counted_range_iter_helper[2096786]
    label _endchpl_direct_counted_range_iter[2096788]
    label _endchpl_bytes[2096790]
    ref tmp[2096792]:_ref(string)[938128] "temp"
    val tmp[2096794]:string[26] "temp"
    ref tmp[2096796]:_ref(string)[938128] "temp"
    val tmp[2096798]:_ic_chpl_direct_counted_range_iter[1103979] "temp"
    ref tmp[2096800]:_ref(_ic_chpl_direct_counted_range_iter)[1104122] "temp"
    ref tmp[2096802]:_ref(_ic_chpl_direct_counted_range_iter)[1104122] "temp"
    val tmp[2096804]:_ic_chpl_direct_counted_range_iter_helper[1103729] "temp"
    ref tmp[2096806]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
    ref tmp[2096808]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
    ref tmp[2096810]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
    ref tmp[2096812]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
    ref tmp[2096814]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
    ref tmp[2096816]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
    ref tmp[2096818]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
    ref tmp[2096820]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
    const tmp[2096822]:2*int(64)[1040245] "temp"
    ref tmp[2096824]:_ref(2*int(64))[1040318] "temp"
    ref tmp[2096826]:_ref(2*int(64))[1040318] "temp"
    val tmp[2096828]:_ic_chpl_direct_param_stride_range_iter[1103475] "temp"
    val tmp[2096830]:int(64)[13] "temp"
    ref tmp[2096832]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103618] "temp"
    ref tmp[2096834]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103618] "temp"
    ref tmp[2096836]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103618] "temp"
    ref tmp[2096838]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103618] "temp"
    const-val tmp[2096840]:int(64)[13] "temp"
    const-val tmp[2096842]:int(64)[13] "temp"
    ref tmp[2096844]:_ref(string)[938128] "temp"
    val tmp[2096846]:uint(8)[100] "temp"
    const-val tmp[2096848]:uint(8)[100] "temp"
    val tmp[2096850]:_ic_chpl_direct_param_stride_range_iter[1103475] "temp"
    ref tmp[2096852]:_ref(2*int(64))[1040318] "temp"
    val tmp[2096854]:_ic_chpl_direct_counted_range_iter_helper[1103729] "temp"
    val tmp[2096856]:_ic_chpl_direct_counted_range_iter[1103979] "temp"
    ref tmp[2096858]:_ref(string)[938128] "temp"
    const-val tmp[2096860]:int(64)[13] "temp"
    ref tmp[2096862]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103618] "temp"
    val tmp[2096864]:int(64)[13] "temp"
    const-val tmp[2096866]:int(64)[13] "temp"
    ref tmp[2096868]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103618] "temp"
    val tmp[2096870]:int(64)[13] "temp"
    val tmp[2096872]:int(64)[13] "temp"
    val tmp[2096874]:_ic_chpl_direct_param_stride_range_iter[1103475] "temp"
    ref tmp[2096876]:_ref(2*int(64))[1040318] "temp"
    val tmp[2096878]:_ic_chpl_direct_counted_range_iter_helper[1103729] "temp"
    val tmp[2096880]:_ic_chpl_direct_counted_range_iter[1103979] "temp"
    ref tmp[2096882]:_ref(string)[938128] "temp"
    (2096884 'move' tmp[2096840](2096886 '.v' this[1108491] F6_i[2095572]))
    (2096889 'move' yret[2096750] tmp[2096840])
    (2096892 'move' tmp[2096842](2096894 '.v' this[1108491] F6_i[2095572]))
    (2096897 'move' _yieldedIndex[2096752] tmp[2096842])
    (2096900 'move' i[2096754] _yieldedIndex[2096752])
    (2096903 'move' yret[2096756] _yieldedIndex[2096752])
    (2096906 'move' _yieldedIndex[2096758] _yieldedIndex[2096752])
    (2096909 'move' i[2096760] _yieldedIndex[2096758])
    (2096912 'move' yret[2096762] _yieldedIndex[2096758])
    (2096915 'move' _yieldedIndex[2096764] _yieldedIndex[2096758])
    (2096918 'move' i[2096766] _yieldedIndex[2096764])
    (2096921 'move' tmp[2096844](2096923 '.' this[1108491] F1_localThis[2095562]))
    (2096926 'move' _this_tmp_[2096772](2096929 call buff[758153] tmp[2096844]))
    (2096931 'move' coerce_tmp[2096774](2096933 'deref' _this_tmp_[2096772]))
    (2096935 'move' call_tmp[2096770](2096938 call this[954280] coerce_tmp[2096774] _yieldedIndex[2096764]))
    (2096941 'move' tmp[2096846](2096943 'deref' call_tmp[2096770]))
    (2096945 '.=' this[1108491] value[2095576] tmp[2096846])
    (2096949 'move' tmp[2096848](2096951 '.v' this[1108491] value[2095576]))
    (2096954 '=' yret[2096768] tmp[2096848])
    (2096957 'noop')
    (2096958 '.=' this[1108491] more[1108448] 2)
    (2096962 return _void[55])
  }
  function _ic_chpl_bytes__ref_string[1108445].zip3[1108498](const in arg this[1108500]:_ic_chpl_bytes__ref_string[1108445]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    val ret[2096965]:_ir_chpl_bytes__ref_string[1108451] "dead at end of block" "RVV" "temp"
    val call_tmp[2096967]:string[26] "dead at end of block" "maybe param" "temp"
    val ret_tmp[2096969]:string[26] "temp"
    val localThis[2096971]:string[26] "dead at end of block" "insert auto destroy"
    val _indexOfInterest[2096973]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[2096975]:_ic_chpl_direct_counted_range_iter[1103979] "dead at end of block" "expr temp" "temp"
    ref call_tmp[2096977]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
    val call_tmp[2096979]:_ir_chpl_direct_counted_range_iter[1103985] "dead at end of block" "expr temp" "maybe param" "temp"
    val coerce_tmp[2096981]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val ret_tmp[2096983]:_ir_chpl_direct_counted_range_iter[1103985] "temp"
    val ret[2096985]:_ir_chpl_direct_counted_range_iter[1103985] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[2096987]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[2096989]:_ic_chpl_direct_counted_range_iter_helper[1103729] "dead at end of block" "expr temp" "temp"
    val call_tmp[2096991]:_ir_chpl_direct_counted_range_iter_helper[1103735] "dead at end of block" "expr temp" "maybe param" "temp"
    val ret_tmp[2096993]:_ir_chpl_direct_counted_range_iter_helper[1103735] "temp"
    const-val low[2096995]:int(64)[13] "temp"
    const-val count[2096997]:int(64)[13] "temp"
    val ret[2096999]:_ir_chpl_direct_counted_range_iter_helper[1103735] "dead after last mention" "RVV" "temp"
    val call_tmp[2097001]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[2097003]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val tmp[2097005]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    val call_tmp[2097007]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[2097009]:int(64)[13] "temp"
    val call_tmp[2097011]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const tmp[2097013]:2*int(64)[1040245] "dead at end of block" "const" "insert auto destroy" "temp"
    val tmp[2097015]:2*int(64)[1040245] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
    val tmp[2097017]:bool[10] "dead after last mention" "maybe param" "temp"
    val call_tmp[2097019]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[2097021]:int(64)[13] "temp"
    val tmp[2097023]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
    val call_tmp[2097025]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[2097027]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val low[2097029]:int(64)[13] "temp"
    val call_tmp[2097031]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
    val coerce_tmp[2097033]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val call_tmp[2097035]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    val ret_tmp[2097037]:2*int(64)[1040245] "temp"
    const-val low[2097039]:int(64)[13] "temp"
    val tmp[2097041]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
    val call_tmp[2097043]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[2097045]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val count[2097047]:int(64)[13] "temp"
    val call_tmp[2097049]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val count[2097051]:int(64)[13] "temp"
    val call_tmp[2097053]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val low[2097055]:int(64)[13] "temp"
    val ret_tmp[2097057]:2*int(64)[1040245] "temp"
    const-val low[2097059]:int(64)[13] "temp"
    ref call_tmp[2097061]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
    const start[2097063]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[2097065]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    ref call_tmp[2097067]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
    const end[2097069]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[2097071]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    val _indexOfInterest[2097073]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[2097075]:_ic_chpl_direct_param_stride_range_iter[1103475] "dead at end of block" "expr temp" "temp"
    val call_tmp[2097077]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead at end of block" "expr temp" "maybe param" "temp"
    val ret_tmp[2097079]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
    val ret[2097081]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead after last mention" "RVV" "temp"
    val call_tmp[2097083]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val i[2097085]:int(64)[13] "dead at end of block" "insert auto destroy"
    val call_tmp[2097087]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[2097089]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val default_arg_first[2097091]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val low[2097093]:int(64)[13] "temp"
    val default_arg_last[2097095]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val high[2097097]:int(64)[13] "temp"
    val _return_tmp_[2097099]:bool[10] "dead after last mention" "temp"
    const-val low[2097101]:int(64)[13] "temp"
    const-val high[2097103]:int(64)[13] "temp"
    val yret[2097105]:int(64)[13] "dead after last mention" "YVV" "temp"
    val _yieldedIndex[2097107]:int(64)[13] "temp"
    const i[2097109]:int(64)[13] "const" "index var" "insert auto destroy"
    val yret[2097111]:int(64)[13] "dead after last mention" "YVV" "temp"
    val _yieldedIndex[2097113]:int(64)[13] "temp"
    const i[2097115]:int(64)[13] "const" "index var" "insert auto destroy"
    val yret[2097117]:int(64)[13] "dead after last mention" "YVV" "temp"
    val _yieldedIndex[2097119]:int(64)[13] "temp"
    const i[2097121]:int(64)[13] "const" "index var" "insert auto destroy"
    val yret[2097123]:uint(8)[100] "dead after last mention" "YVV" "temp"
    ref call_tmp[2097125]:_ref(uint(8))[937097] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[2097127]:_ref(c_ptr(uint(8)))[937621] "dead after last mention" "temp"
    val coerce_tmp[2097129]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val coerce_tmp[2097131]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    const-val low[2097133]:int(64)[13] "temp"
    const-val high[2097135]:int(64)[13] "temp"
    val call_tmp[2097137]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    label _endchpl_direct_param_stride_range_iter[2097139]
    label _endchpl_direct_counted_range_iter_helper[2097141]
    label _endchpl_direct_counted_range_iter[2097143]
    label _endchpl_bytes[2097145]
    ref tmp[2097147]:_ref(string)[938128] "temp"
    val tmp[2097149]:string[26] "temp"
    ref tmp[2097151]:_ref(string)[938128] "temp"
    val tmp[2097153]:_ic_chpl_direct_counted_range_iter[1103979] "temp"
    ref tmp[2097155]:_ref(_ic_chpl_direct_counted_range_iter)[1104122] "temp"
    ref tmp[2097157]:_ref(_ic_chpl_direct_counted_range_iter)[1104122] "temp"
    val tmp[2097159]:_ic_chpl_direct_counted_range_iter_helper[1103729] "temp"
    ref tmp[2097161]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
    ref tmp[2097163]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
    ref tmp[2097165]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
    ref tmp[2097167]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
    ref tmp[2097169]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
    ref tmp[2097171]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
    ref tmp[2097173]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
    ref tmp[2097175]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
    const tmp[2097177]:2*int(64)[1040245] "temp"
    ref tmp[2097179]:_ref(2*int(64))[1040318] "temp"
    ref tmp[2097181]:_ref(2*int(64))[1040318] "temp"
    val tmp[2097183]:_ic_chpl_direct_param_stride_range_iter[1103475] "temp"
    val tmp[2097185]:int(64)[13] "temp"
    ref tmp[2097187]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103618] "temp"
    ref tmp[2097189]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103618] "temp"
    ref tmp[2097191]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103618] "temp"
    ref tmp[2097193]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103618] "temp"
    val tmp[2097195]:int(64)[13] "temp"
    val tmp[2097197]:int(64)[13] "temp"
    ref tmp[2097199]:_ref(string)[938128] "temp"
    val tmp[2097201]:uint(8)[100] "temp"
    val tmp[2097203]:uint(8)[100] "temp"
    val tmp[2097205]:_ic_chpl_direct_param_stride_range_iter[1103475] "temp"
    ref tmp[2097207]:_ref(2*int(64))[1040318] "temp"
    val tmp[2097209]:_ic_chpl_direct_counted_range_iter_helper[1103729] "temp"
    val tmp[2097211]:_ic_chpl_direct_counted_range_iter[1103979] "temp"
    ref tmp[2097213]:_ref(string)[938128] "temp"
    const-val tmp[2097215]:int(64)[13] "temp"
    ref tmp[2097217]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103618] "temp"
    val tmp[2097219]:int(64)[13] "temp"
    const-val tmp[2097221]:int(64)[13] "temp"
    ref tmp[2097223]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103618] "temp"
    val tmp[2097225]:int(64)[13] "temp"
    val tmp[2097227]:int(64)[13] "temp"
    val tmp[2097229]:_ic_chpl_direct_param_stride_range_iter[1103475] "temp"
    ref tmp[2097231]:_ref(2*int(64))[1040318] "temp"
    val tmp[2097233]:_ic_chpl_direct_counted_range_iter_helper[1103729] "temp"
    val tmp[2097235]:_ic_chpl_direct_counted_range_iter[1103979] "temp"
    ref tmp[2097237]:_ref(string)[938128] "temp"
    (2097239 return _void[55])
  }
  function _ic_chpl_bytes__ref_string[1108445].zip4[1108507](const in arg this[1108509]:_ic_chpl_bytes__ref_string[1108445]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    val ret[2097242]:_ir_chpl_bytes__ref_string[1108451] "dead at end of block" "RVV" "temp"
    val call_tmp[2097244]:string[26] "dead at end of block" "maybe param" "temp"
    val ret_tmp[2097246]:string[26] "temp"
    val localThis[2097248]:string[26] "dead at end of block" "insert auto destroy"
    val _indexOfInterest[2097250]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[2097252]:_ic_chpl_direct_counted_range_iter[1103979] "dead at end of block" "expr temp" "temp"
    ref call_tmp[2097254]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
    val call_tmp[2097256]:_ir_chpl_direct_counted_range_iter[1103985] "dead at end of block" "expr temp" "maybe param" "temp"
    val coerce_tmp[2097258]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val ret_tmp[2097260]:_ir_chpl_direct_counted_range_iter[1103985] "temp"
    val ret[2097262]:_ir_chpl_direct_counted_range_iter[1103985] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[2097264]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[2097266]:_ic_chpl_direct_counted_range_iter_helper[1103729] "dead at end of block" "expr temp" "temp"
    val call_tmp[2097268]:_ir_chpl_direct_counted_range_iter_helper[1103735] "dead at end of block" "expr temp" "maybe param" "temp"
    val ret_tmp[2097270]:_ir_chpl_direct_counted_range_iter_helper[1103735] "temp"
    const-val low[2097272]:int(64)[13] "temp"
    const-val count[2097274]:int(64)[13] "temp"
    val ret[2097276]:_ir_chpl_direct_counted_range_iter_helper[1103735] "dead after last mention" "RVV" "temp"
    val call_tmp[2097278]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[2097280]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val tmp[2097282]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    val call_tmp[2097284]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[2097286]:int(64)[13] "temp"
    val call_tmp[2097288]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const tmp[2097290]:2*int(64)[1040245] "dead at end of block" "const" "insert auto destroy" "temp"
    val tmp[2097292]:2*int(64)[1040245] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
    val tmp[2097294]:bool[10] "dead after last mention" "maybe param" "temp"
    val call_tmp[2097296]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[2097298]:int(64)[13] "temp"
    val tmp[2097300]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
    val call_tmp[2097302]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[2097304]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val low[2097306]:int(64)[13] "temp"
    val call_tmp[2097308]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
    val coerce_tmp[2097310]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val call_tmp[2097312]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    val ret_tmp[2097314]:2*int(64)[1040245] "temp"
    const-val low[2097316]:int(64)[13] "temp"
    val tmp[2097318]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
    val call_tmp[2097320]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[2097322]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val count[2097324]:int(64)[13] "temp"
    val call_tmp[2097326]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val count[2097328]:int(64)[13] "temp"
    val call_tmp[2097330]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val low[2097332]:int(64)[13] "temp"
    val ret_tmp[2097334]:2*int(64)[1040245] "temp"
    const-val low[2097336]:int(64)[13] "temp"
    ref call_tmp[2097338]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
    const start[2097340]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[2097342]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    ref call_tmp[2097344]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
    const end[2097346]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[2097348]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    val _indexOfInterest[2097350]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[2097352]:_ic_chpl_direct_param_stride_range_iter[1103475] "dead at end of block" "expr temp" "temp"
    val call_tmp[2097354]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead at end of block" "expr temp" "maybe param" "temp"
    val ret_tmp[2097356]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
    val ret[2097358]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead after last mention" "RVV" "temp"
    val call_tmp[2097360]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val i[2097362]:int(64)[13] "dead at end of block" "insert auto destroy"
    val call_tmp[2097364]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[2097366]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val default_arg_first[2097368]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val low[2097370]:int(64)[13] "temp"
    val default_arg_last[2097372]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val high[2097374]:int(64)[13] "temp"
    val _return_tmp_[2097376]:bool[10] "dead after last mention" "temp"
    const-val low[2097378]:int(64)[13] "temp"
    const-val high[2097380]:int(64)[13] "temp"
    val yret[2097382]:int(64)[13] "dead after last mention" "YVV" "temp"
    val _yieldedIndex[2097384]:int(64)[13] "temp"
    const i[2097386]:int(64)[13] "const" "index var" "insert auto destroy"
    val yret[2097388]:int(64)[13] "dead after last mention" "YVV" "temp"
    val _yieldedIndex[2097390]:int(64)[13] "temp"
    const i[2097392]:int(64)[13] "const" "index var" "insert auto destroy"
    val yret[2097394]:int(64)[13] "dead after last mention" "YVV" "temp"
    val _yieldedIndex[2097396]:int(64)[13] "temp"
    const i[2097398]:int(64)[13] "const" "index var" "insert auto destroy"
    val yret[2097400]:uint(8)[100] "dead after last mention" "YVV" "temp"
    ref call_tmp[2097402]:_ref(uint(8))[937097] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[2097404]:_ref(c_ptr(uint(8)))[937621] "dead after last mention" "temp"
    val coerce_tmp[2097406]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val coerce_tmp[2097408]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    const-val low[2097410]:int(64)[13] "temp"
    const-val high[2097412]:int(64)[13] "temp"
    val call_tmp[2097414]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    label _endchpl_direct_param_stride_range_iter[2097416]
    label _endchpl_direct_counted_range_iter_helper[2097418]
    label _endchpl_direct_counted_range_iter[2097420]
    label _endchpl_bytes[2097422]
    ref tmp[2097424]:_ref(string)[938128] "temp"
    val tmp[2097426]:string[26] "temp"
    ref tmp[2097428]:_ref(string)[938128] "temp"
    val tmp[2097430]:_ic_chpl_direct_counted_range_iter[1103979] "temp"
    ref tmp[2097432]:_ref(_ic_chpl_direct_counted_range_iter)[1104122] "temp"
    ref tmp[2097434]:_ref(_ic_chpl_direct_counted_range_iter)[1104122] "temp"
    val tmp[2097436]:_ic_chpl_direct_counted_range_iter_helper[1103729] "temp"
    ref tmp[2097438]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
    ref tmp[2097440]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
    ref tmp[2097442]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
    ref tmp[2097444]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
    ref tmp[2097446]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
    ref tmp[2097448]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
    ref tmp[2097450]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
    ref tmp[2097452]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
    const tmp[2097454]:2*int(64)[1040245] "temp"
    ref tmp[2097456]:_ref(2*int(64))[1040318] "temp"
    ref tmp[2097458]:_ref(2*int(64))[1040318] "temp"
    val tmp[2097460]:_ic_chpl_direct_param_stride_range_iter[1103475] "temp"
    val tmp[2097462]:int(64)[13] "temp"
    ref tmp[2097464]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103618] "temp"
    ref tmp[2097466]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103618] "temp"
    ref tmp[2097468]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103618] "temp"
    ref tmp[2097470]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103618] "temp"
    val tmp[2097472]:int(64)[13] "temp"
    val tmp[2097474]:int(64)[13] "temp"
    ref tmp[2097476]:_ref(string)[938128] "temp"
    val tmp[2097478]:uint(8)[100] "temp"
    val tmp[2097480]:uint(8)[100] "temp"
    val tmp[2097482]:_ic_chpl_direct_param_stride_range_iter[1103475] "temp"
    ref tmp[2097484]:_ref(2*int(64))[1040318] "temp"
    val tmp[2097486]:_ic_chpl_direct_counted_range_iter_helper[1103729] "temp"
    val tmp[2097488]:_ic_chpl_direct_counted_range_iter[1103979] "temp"
    ref tmp[2097490]:_ref(string)[938128] "temp"
    const-val tmp[2097492]:int(64)[13] "temp"
    ref tmp[2097494]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103618] "temp"
    val tmp[2097496]:int(64)[13] "temp"
    const-val tmp[2097498]:int(64)[13] "temp"
    ref tmp[2097500]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103618] "temp"
    val tmp[2097502]:int(64)[13] "temp"
    val tmp[2097504]:int(64)[13] "temp"
    val tmp[2097506]:_ic_chpl_direct_param_stride_range_iter[1103475] "temp"
    ref tmp[2097508]:_ref(2*int(64))[1040318] "temp"
    val tmp[2097510]:_ic_chpl_direct_counted_range_iter_helper[1103729] "temp"
    val tmp[2097512]:_ic_chpl_direct_counted_range_iter[1103979] "temp"
    ref tmp[2097514]:_ref(string)[938128] "temp"
    (2097516 'move' tmp[2097506](2097518 '.v' this[1108509] F5__iterator[2095570]))
    (2097522 call _freeIterator[1103663] tmp[2097506])
    (2097524 'move' tmp[2097508](2097526 '.' this[1108509] F4_tmp[2095568]))
    (2097530 call chpl__autoDestroy[1674803] tmp[2097508])
    (2097532 'move' tmp[2097510](2097534 '.v' this[1108509] F3__iterator[2095566]))
    (2097538 call _freeIterator[1103913] tmp[2097510])
    (2097540 'move' tmp[2097512](2097542 '.v' this[1108509] F2__iterator[2095564]))
    (2097546 call _freeIterator[1104163] tmp[2097512])
    (2097548 'move' tmp[2097514](2097550 '.' this[1108509] F1_localThis[2095562]))
    (2097554 call chpl__autoDestroy[1601673] tmp[2097514])
    (2097556 return _void[55])
  }
  function _ic_chpl_bytes__ref_string[1108445].hasMore[1108516](const in arg this[1108518]:_ic_chpl_bytes__ref_string[1108445]) : int(64)[13] "auto ii" "inline" "method" "resolved"
  {
    val tmp[2097609]:int(64)[13] "temp"
    const-val high[2097611]:int(64)[13] "temp"
    ref tmp[2097613]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103618] "temp"
    (2097615 'move' tmp[2097613](2097617 '.' this[1108518] F5__iterator[2095570]))
    (2097620 'move' high[2097611](2097622 '.v' tmp[2097613] F1_high[2115196]))
    const-val tmp[2097625]:int(64)[13] "temp"
    (2097627 'move' tmp[2097625](2097629 '.v' this[1108518] F6_i[2095572]))
    (2097635 'move' tmp[2097609](2097632 '<=' tmp[2097625] high[2097611]))
    (2097637 return tmp[2097609])
  }
  function _ic_chpl_bytes__ref_string[1108445].getValue[1108525](const in arg this[1108527]:_ic_chpl_bytes__ref_string[1108445]) : uint(8)[100] "auto ii" "inline" "method" "resolved"
  {
    val tmp[2097640]:uint(8)[100] "temp"
    (2097645 'move' tmp[2097640](2097642 '.v' this[1108527] value[2095576]))
    (2097647 return tmp[2097640])
  }
  function _ref(string)[938128].chpl_bytes[33577](const  ref arg this[33579]:_ref(string)[938128], ref arg _retArg[1905404]:_ref(_ir_chpl_bytes__ref_string)[1108562]) : void[4] "fn returns via _retArg" "inline" "iterator fn" "method" "resolved" "fn synchronization free" "no return value for void"
  {
    val _ir[2097705]:_ir_chpl_bytes__ref_string[1108451] "temp"
    (2097707 '.=' _ir[2097705] F0_this[2095560] this[33579])
    (2097711 '=' _retArg[1905404] _ir[2097705])
    (2097714 return _void[55])
  }
  function _ic_chpl_bytes__ref_string[1108445].init[1108534](const in arg this[1108536]:_ic_chpl_bytes__ref_string[1108445]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    const-val tmp[2097650]:int(64)[13] "temp"
    ref tmp[2097652]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103618] "temp"
    (2097654 'move' tmp[2097652](2097656 '.' this[1108536] F5__iterator[2095570]))
    (2097659 'move' tmp[2097650](2097661 '.v' tmp[2097652] F0_low[2115192]))
    (2097664 '.=' this[1108536] F7_low[2095574] tmp[2097650])
    val tmp[2097668]:int(64)[13] "temp"
    const-val tmp[2097670]:int(64)[13] "temp"
    (2097672 'move' tmp[2097670](2097674 '.v' this[1108536] F7_low[2095574]))
    (2097677 '=' tmp[2097668] tmp[2097670])
    (2097680 '.=' this[1108536] F6_i[2095572] tmp[2097668])
    (2097684 return _void[55])
  }
  function _ic_chpl_bytes__ref_string[1108445].incr[1108543](const in arg this[1108545]:_ic_chpl_bytes__ref_string[1108445]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    val call_tmp[2097687]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[2097689]:int(64)[13] "temp"
    (2097691 'move' tmp[2097689](2097693 '.v' this[1108545] F6_i[2095572]))
    (2097696 '+=' tmp[2097689] 1)
    (2097699 '.=' this[1108545] F6_i[2095572] tmp[2097689])
    (2097703 return _void[55])
  }
  type _ic_chpl_bytes__ref_string[1108445] val super[1108446]:object[22] "super class" val more[1108448]:int(64)[13] ref F0_this[2095558]:_ref(string)[938128] val F1_localThis[2095562]:string[26] val F2__iterator[2095564]:_ic_chpl_direct_counted_range_iter[1103979] val F3__iterator[2095566]:_ic_chpl_direct_counted_range_iter_helper[1103729] const F4_tmp[2095568]:2*int(64)[1040245] val F5__iterator[2095570]:_ic_chpl_direct_param_stride_range_iter[1103475] val F6_i[2095572]:int(64)[13] const-val F7_low[2095574]:int(64)[13] val value[2095576]:uint(8)[100]
  type _ir_chpl_bytes__ref_string[1108451] ref F0_this[2095560]:_ref(string)[938128]
  function _getIterator[1108460](const  ref arg ir[1108462]:_ir_chpl_bytes__ref_string[1108451]) : _ic_chpl_bytes__ref_string[1108445] "auto ii" "inline" "resolved" "fn synchronization free" "unsafe"
  {
    val ret[1108569]:_ic_chpl_bytes__ref_string[1108445] "dead after last mention" "RVV" "temp"
    val _ic_[1108452]:_ic_chpl_bytes__ref_string[1108445] "dead after last mention" "temp"
    const-val call_tmp[1108576]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1108579 'move' call_tmp[1108576](1108591 'sizeof_bundle' _ic_chpl_bytes__ref_string[1108445]))
    const-val cast_tmp[1108594]:c_void_ptr[149] "dead after last mention" "temp"
    (1108596 'move' cast_tmp[1108594](1108457 call chpl_here_alloc[187788] call_tmp[1108576] 31))
    (1108465 'move' _ic_[1108452](1108598 'cast' _ic_chpl_bytes__ref_string[1108445] cast_tmp[1108594]))
    (1108467 'setcid' _ic_[1108452])
    (1108574 'move' ret[1108569] _ic_[1108452])
    (2097717 '.=' ret[1108569] more[1108448] 1)
    ref tmp[2097721]:_ref(string)[938128] "temp"
    (2097726 'move' tmp[2097721](2097722 '.v' ir[1108462] F0_this[2095560]))
    (2097728 '.=' ret[1108569] F0_this[2095558] tmp[2097721])
    (1108571 return ret[1108569])
  }
  function _ic_codepoints__ref_string[1123038].advance[1123064](const in arg this[1123066]:_ic_codepoints__ref_string[1123038]) : void[4] "auto ii" "method" "resolved"
  {
    const-val more[2098322]:int(64)[13]
    (2098374 'move' more[2098322](2098371 '.v' this[1123066] more[1123041]))
    const-val tmp[2098337]:bool[10] "temp"
    (2098344 'move' tmp[2098337](2098341 '==' more[2098322] 3))
    if tmp[2098337]
    {
      gotoIterResume _jump_3[2098314] _jump_3[2098314]
    }
    const-val tmp[2098325]:bool[10] "temp"
    (2098332 'move' tmp[2098325](2098329 '==' more[2098322] 2))
    if tmp[2098325]
    {
      gotoIterResume _jump_2[2098304] _jump_2[2098304]
    }
    const-val tmp[2098349]:bool[10] "temp"
    (2098354 'move' tmp[2098349](2098351 '==' more[2098322] -2))
    if tmp[2098349]
    {
      gotoIterResume _jump_break_2[2098306] _jump_break_2[2098306]
    }
    const-val tmp[2098361]:bool[10] "temp"
    (2098366 'move' tmp[2098361](2098363 '==' more[2098322] -3))
    if tmp[2098361]
    {
      gotoIterResume _jump_break_3[2098316] _jump_break_3[2098316]
    }
    val ret[504141]:_ir_codepoints__ref_string[1123044] "dead at end of block" "RVV" "temp"
    const-val call_tmp[600286]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1905224]:string[26] "temp"
    ref tmp[2097766]:_ref(string)[938128] "temp"
    (2097771 'move' tmp[2097766](2097768 '.v' this[1123066] F0_this[2097732]))
    (33683 call localize[32889] tmp[2097766] ret_tmp[1905224])
    (1905227 'move' call_tmp[600286] ret_tmp[1905224])
    val tmp[2097773]:string[26] "temp"
    (540491 'move' tmp[2097773] call_tmp[600286])
    (2097775 '.=' this[1123066] F1_localThis[2097736] tmp[2097773])
    const-val call_tmp[600293]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    ref tmp[2097779]:_ref(string)[938128] "temp"
    (2097784 'move' tmp[2097779](2097781 '.v' this[1123066] F0_this[2097732]))
    (600296 'move' call_tmp[600293](33694 call isASCII[31049] tmp[2097779]))
    const-val call_tmp[600298]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (600301 'move' call_tmp[600298] call_tmp[600293])
    if call_tmp[600293]
    {
      val _indexOfInterest[33705]:uint(8)[100] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      const-val call_tmp[600305]:_ir_chpl_bytes__ref_string[1108451] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val ret_tmp[1905368]:_ir_chpl_bytes__ref_string[1108451] "temp"
      ref tmp[2097786]:_ref(string)[938128] "temp"
      (2097791 'move' tmp[2097786](2097788 '.v' this[1123066] F0_this[2097732]))
      (33701 call chpl_bytes[33577] tmp[2097786] ret_tmp[1905368])
      (1905371 'move' call_tmp[600305] ret_tmp[1905368])
      val tmp[2097793]:_ic_chpl_bytes__ref_string[1108445] "temp"
      (33715 'move' tmp[2097793](33713 call _getIterator[1108460] call_tmp[600305]))
      (2097795 '.=' this[1123066] F2__iterator[2097738] tmp[2097793])
      val ret[1977188]:_ir_chpl_bytes__ref_string[1108451] "dead at end of block" "RVV" "temp"
      const-val call_tmp[1977190]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1977192]:string[26] "temp"
      ref this[1977408]:_ref(string)[938128] "temp"
      ref tmp[2097799]:_ref(_ic_chpl_bytes__ref_string)[1108588] "temp"
      (2097804 'move' tmp[2097799](2097801 '.' this[1123066] F2__iterator[2097738]))
      (1977413 'move' this[1977408](1977410 '.v' tmp[2097799] F0_this[2095558]))
      (1977195 call localize[32889] this[1977408] ret_tmp[1977192])
      (1977198 'move' call_tmp[1977190] ret_tmp[1977192])
      val tmp[2097806]:string[26] "temp"
      (1977203 'move' tmp[2097806] call_tmp[1977190])
      (2097808 '.=' this[1123066] F3_localThis[2097740] tmp[2097806])
      val _indexOfInterest[1977206]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      ref call_tmp[1977210]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
      ref tmp[2097812]:_ref(string)[938128] "temp"
      (2097817 'move' tmp[2097812](2097814 '.' this[1123066] F3_localThis[2097740]))
      (1977212 'move' call_tmp[1977210](1977215 call buffLen[758075] tmp[2097812]))
      const-val call_tmp[1977217]:_ir_chpl_direct_counted_range_iter[1103985] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1977219]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1977221 'move' coerce_tmp[1977219](1977223 'deref' call_tmp[1977210]))
      const-val ret_tmp[1977225]:_ir_chpl_direct_counted_range_iter[1103985] "temp"
      (1977228 call chpl_direct_counted_range_iter[458112] 0 coerce_tmp[1977219] ret_tmp[1977225])
      (1977232 'move' call_tmp[1977217] ret_tmp[1977225])
      val tmp[2097819]:_ic_chpl_direct_counted_range_iter[1103979] "temp"
      (1977235 'move' tmp[2097819](1977238 call _getIterator[1103994] call_tmp[1977217]))
      (2097821 '.=' this[1123066] F4__iterator[2097742] tmp[2097819])
      val ret[1977241]:_ir_chpl_direct_counted_range_iter[1103985] "dead after last mention" "RVV" "temp"
      val _indexOfInterest[1977243]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      const-val call_tmp[1977247]:_ir_chpl_direct_counted_range_iter_helper[1103735] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val ret_tmp[1977249]:_ir_chpl_direct_counted_range_iter_helper[1103735] "temp"
      const-val low[1977251]:int(64)[13] "temp"
      ref tmp[2097825]:_ref(_ic_chpl_direct_counted_range_iter)[1104122] "temp"
      (2097830 'move' tmp[2097825](2097827 '.' this[1123066] F4__iterator[2097742]))
      (1977253 'move' low[1977251](1977255 '.v' tmp[2097825] F0_low[2107536]))
      const-val count[1977258]:int(64)[13] "temp"
      ref tmp[2097832]:_ref(_ic_chpl_direct_counted_range_iter)[1104122] "temp"
      (2097837 'move' tmp[2097832](2097834 '.' this[1123066] F4__iterator[2097742]))
      (1977260 'move' count[1977258](1977262 '.v' tmp[2097832] F1_count[2107540]))
      (1977266 call chpl_direct_counted_range_iter_helper[1102287] low[1977251] count[1977258] ret_tmp[1977249])
      (1977270 'move' call_tmp[1977247] ret_tmp[1977249])
      val tmp[2097839]:_ic_chpl_direct_counted_range_iter_helper[1103729] "temp"
      (1977273 'move' tmp[2097839](1977276 call _getIterator[1103744] call_tmp[1977247]))
      (2097841 '.=' this[1123066] F5__iterator[2097744] tmp[2097839])
      val ret[2052522]:_ir_chpl_direct_counted_range_iter_helper[1103735] "dead after last mention" "RVV" "temp"
      val call_tmp[2052524]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val tmp[2052526]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val tmp[2052528]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[2052530]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val count[2052974]:int(64)[13] "temp"
      ref tmp[2097845]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
      (2097850 'move' tmp[2097845](2097847 '.' this[1123066] F5__iterator[2097744]))
      (2052979 'move' count[2052974](2052976 '.v' tmp[2097845] F1_count[2113698]))
      (2052532 'move' call_tmp[2052530](2052535 call <[948587] count[2052974]))
      (2052537 'move' tmp[2052528] call_tmp[2052530])
      (2052540 'move' tmp[2052526] call_tmp[2052530])
      const-val call_tmp[2052543]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2052545 'move' call_tmp[2052543] call_tmp[2052530])
      if call_tmp[2052530]
      {
        (2052551 call boundsCheckHalt[210254] "With a negative count, the range must have a last index.")
      }
      val tmp[2052556]:2*int(64)[1040245] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
      const-val tmp[2052558]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[2052560]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val count[2052981]:int(64)[13] "temp"
      ref tmp[2097852]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
      (2097857 'move' tmp[2097852](2097854 '.' this[1123066] F5__iterator[2097744]))
      (2052986 'move' count[2052981](2052983 '.v' tmp[2097852] F1_count[2113698]))
      (2052562 'move' call_tmp[2052560](2052565 call ==[435744] count[2052981] 0))
      (2052568 'move' tmp[2052558] call_tmp[2052560])
      if call_tmp[2052560]
      {
        const-val tmp[2052573]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        val call_tmp[2052575]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[2052577]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val low[2052988]:int(64)[13] "temp"
        ref tmp[2097859]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
        (2097864 'move' tmp[2097859](2097861 '.' this[1123066] F5__iterator[2097744]))
        (2052993 'move' low[2052988](2052990 '.v' tmp[2097859] F0_low[2113694]))
        (2052579 'move' call_tmp[2052577](2052582 call _cast[956223] low[2052988]))
        const-val call_tmp[2052584]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[2052586]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (2052588 'move' coerce_tmp[2052586](2052590 'cast' uint(64)[115] 1))
        (2052593 'move' call_tmp[2052584](2052596 call -[962382] call_tmp[2052577]))
        const-val call_tmp[2052598]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (2052600 'move' call_tmp[2052598](2052603 call _cast[953732] call_tmp[2052584]))
        const-val ret_tmp[2052605]:2*int(64)[1040245] "temp"
        const-val low[2052995]:int(64)[13] "temp"
        ref tmp[2097866]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
        (2097871 'move' tmp[2097866](2097868 '.' this[1123066] F5__iterator[2097744]))
        (2053000 'move' low[2052995](2052997 '.v' tmp[2097866] F0_low[2113694]))
        (2052608 call _build_tuple[1040203] low[2052995] call_tmp[2052598] ret_tmp[2052605])
        (2052612 'move' tmp[2052573] ret_tmp[2052605])
        (2052615 'move' tmp[2052556] tmp[2052573])
      }
      {
        const-val tmp[2052619]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        val call_tmp[2052621]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[2052623]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val count[2053002]:int(64)[13] "temp"
        ref tmp[2097873]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
        (2097878 'move' tmp[2097873](2097875 '.' this[1123066] F5__iterator[2097744]))
        (2053007 'move' count[2053002](2053004 '.v' tmp[2097873] F1_count[2113698]))
        (2052625 'move' call_tmp[2052623] count[2053002])
        const-val call_tmp[2052628]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val count[2053009]:int(64)[13] "temp"
        ref tmp[2097880]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
        (2097885 'move' tmp[2097880](2097882 '.' this[1123066] F5__iterator[2097744]))
        (2053014 'move' count[2053009](2053011 '.v' tmp[2097880] F1_count[2113698]))
        (2052630 'move' call_tmp[2052628](2052633 call -[962415] count[2053009]))
        const-val call_tmp[2052635]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val low[2053016]:int(64)[13] "temp"
        ref tmp[2097887]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
        (2097892 'move' tmp[2097887](2097889 '.' this[1123066] F5__iterator[2097744]))
        (2053021 'move' low[2053016](2053018 '.v' tmp[2097887] F0_low[2113694]))
        (2052637 'move' call_tmp[2052635](2052640 call +[439752] low[2053016] call_tmp[2052628]))
        const-val ret_tmp[2052643]:2*int(64)[1040245] "temp"
        const-val low[2053023]:int(64)[13] "temp"
        ref tmp[2097894]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
        (2097899 'move' tmp[2097894](2097896 '.' this[1123066] F5__iterator[2097744]))
        (2053028 'move' low[2053023](2053025 '.v' tmp[2097894] F0_low[2113694]))
        (2052646 call _build_tuple[1040203] low[2053023] call_tmp[2052635] ret_tmp[2052643])
        (2052650 'move' tmp[2052619] ret_tmp[2052643])
        (2052653 'move' tmp[2052556] tmp[2052619])
      }
      const tmp[2097901]:2*int(64)[1040245] "temp"
      (2052657 '=' tmp[2097901] tmp[2052556])
      (2097903 '.=' this[1123066] F6_tmp[2097746] tmp[2097901])
      (2052660 'noop')
      1
      ref call_tmp[2052662]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
      ref tmp[2097907]:_ref(2*int(64))[1040318] "temp"
      (2097912 'move' tmp[2097907](2097909 '.' this[1123066] F6_tmp[2097746]))
      (2052664 'move' call_tmp[2052662](2052666 '.' tmp[2097907] x0[1040241]))
      const-val start[2052669]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[2052671]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (2052673 'move' coerce_tmp[2052671](2052675 'deref' call_tmp[2052662]))
      (2052677 '=' start[2052669] coerce_tmp[2052671])
      (2052680 'noop')
      ref call_tmp[2052681]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
      ref tmp[2097914]:_ref(2*int(64))[1040318] "temp"
      (2097919 'move' tmp[2097914](2097916 '.' this[1123066] F6_tmp[2097746]))
      (2052683 'move' call_tmp[2052681](2052685 '.' tmp[2097914] x1[1040243]))
      const-val end[2052688]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[2052690]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (2052692 'move' coerce_tmp[2052690](2052694 'deref' call_tmp[2052681]))
      (2052696 '=' end[2052688] coerce_tmp[2052690])
      (2052699 'noop')
      val _indexOfInterest[2052700]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      const-val call_tmp[2052704]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val ret_tmp[2052706]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
      (2052709 call chpl_direct_param_stride_range_iter[1102713] coerce_tmp[2052671] coerce_tmp[2052690] ret_tmp[2052706])
      (2052713 'move' call_tmp[2052704] ret_tmp[2052706])
      val tmp[2097921]:_ic_chpl_direct_param_stride_range_iter[1103475] "temp"
      (2052716 'move' tmp[2097921](2052719 call _getIterator[1103490] call_tmp[2052704]))
      (2097923 '.=' this[1123066] F7__iterator[2097748] tmp[2097921])
      val ret[2052722]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead after last mention" "RVV" "temp"
      val call_tmp[2052724]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (2052727 call chpl_range_check_stride[1103033])
      val call_tmp[2052730]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val tmp[2097927]:int(64)[13] "temp"
      (2052732 'move' tmp[2097927] 0)
      (2097929 '.=' this[1123066] F8_i[2097750] tmp[2097927])
      val call_tmp[2052735]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val default_arg_first[2052737]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
      const-val low[2052739]:int(64)[13] "temp"
      ref tmp[2097933]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103618] "temp"
      (2097938 'move' tmp[2097933](2097935 '.' this[1123066] F7__iterator[2097748]))
      (2052741 'move' low[2052739](2052743 '.v' tmp[2097933] F0_low[2115192]))
      (2052746 'move' default_arg_first[2052737](2052749 call chpl_checkIfRangeIterWillOverflow_default_first[1103387] low[2052739]))
      const-val default_arg_last[2052751]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
      const-val high[2052753]:int(64)[13] "temp"
      ref tmp[2097940]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103618] "temp"
      (2097945 'move' tmp[2097940](2097942 '.' this[1123066] F7__iterator[2097748]))
      (2052755 'move' high[2052753](2052757 '.v' tmp[2097940] F1_high[2115196]))
      (2052760 'move' default_arg_last[2052751](2052763 call chpl_checkIfRangeIterWillOverflow_default_last[1103415] high[2052753]))
      const-val _return_tmp_[2052765]:bool[10] "dead after last mention" "temp"
      const-val low[2052767]:int(64)[13] "temp"
      ref tmp[2097947]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103618] "temp"
      (2097952 'move' tmp[2097947](2097949 '.' this[1123066] F7__iterator[2097748]))
      (2052769 'move' low[2052767](2052771 '.v' tmp[2097947] F0_low[2115192]))
      const-val high[2052774]:int(64)[13] "temp"
      ref tmp[2097954]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103618] "temp"
      (2097959 'move' tmp[2097954](2097956 '.' this[1123066] F7__iterator[2097748]))
      (2052776 'move' high[2052774](2052778 '.v' tmp[2097954] F1_high[2115196]))
      (2052781 'move' _return_tmp_[2052765](2052784 call chpl_checkIfRangeIterWillOverflow[1096265] low[2052767] high[2052774] 1 default_arg_first[2052737] default_arg_last[2052751] 1))
      CForLoop[2052791]
      {
        const-val yret[2052820]:int(64)[13] "dead after last mention" "YVV" "temp"
        const-val tmp[2097961]:int(64)[13] "temp"
        (2097966 'move' tmp[2097961](2097963 '.v' this[1123066] F8_i[2097750]))
        (2052822 'move' yret[2052820] tmp[2097961])
        const-val _yieldedIndex[2052825]:int(64)[13] "temp"
        const-val tmp[2097968]:int(64)[13] "temp"
        (2097973 'move' tmp[2097968](2097970 '.v' this[1123066] F8_i[2097750]))
        (2052827 'move' _yieldedIndex[2052825] tmp[2097968])
        const-val i[2052831]:int(64)[13] "const" "index var" "insert auto destroy"
        (2052833 'move' i[2052831] _yieldedIndex[2052825])
        const-val yret[2052836]:int(64)[13] "dead after last mention" "YVV" "temp"
        (2052838 'move' yret[2052836] _yieldedIndex[2052825])
        const-val _yieldedIndex[2052866]:int(64)[13] "temp"
        (2052972 'move' _yieldedIndex[2052866] _yieldedIndex[2052825])
        const-val i[2052868]:int(64)[13] "const" "index var" "insert auto destroy"
        (2052870 'move' i[2052868] _yieldedIndex[2052866])
        const-val yret[2052873]:int(64)[13] "dead after last mention" "YVV" "temp"
        (2052875 'move' yret[2052873] _yieldedIndex[2052866])
        const-val _yieldedIndex[2052878]:int(64)[13] "temp"
        (2052880 'move' _yieldedIndex[2052878] _yieldedIndex[2052866])
        const-val i[2052884]:int(64)[13] "const" "index var" "insert auto destroy"
        (2052886 'move' i[2052884] _yieldedIndex[2052878])
        const-val yret[2052889]:uint(8)[100] "dead after last mention" "YVV" "temp"
        ref call_tmp[2052891]:_ref(uint(8))[937097] "dead after last mention" "maybe param" "temp"
        ref _this_tmp_[2052893]:_ref(c_ptr(uint(8)))[937621] "dead after last mention" "temp"
        ref tmp[2097975]:_ref(string)[938128] "temp"
        (2097980 'move' tmp[2097975](2097977 '.' this[1123066] F3_localThis[2097740]))
        (2052895 'move' _this_tmp_[2052893](2052898 call buff[758153] tmp[2097975]))
        val coerce_tmp[2052900]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2052902 'move' coerce_tmp[2052900](2052904 'deref' _this_tmp_[2052893]))
        (2052906 'move' call_tmp[2052891](2052909 call this[954280] coerce_tmp[2052900] _yieldedIndex[2052878]))
        const-val coerce_tmp[2052912]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
        (2052914 'move' coerce_tmp[2052912](2052916 'deref' call_tmp[2052891]))
        (2052918 '=' yret[2052889] coerce_tmp[2052912])
        (2052921 'noop')
        const-val _yieldedIndex[2052922]:uint(8)[100] "temp"
        (2052924 'move' _yieldedIndex[2052922] coerce_tmp[2052912])
        const-val b[2052928]:uint(8)[100] "const" "index var" "insert auto destroy"
        (2052930 'move' b[2052928] _yieldedIndex[2052922])
        val call_tmp[2052935]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val tmp[2097982]:int(32)[95] "temp"
        (2052937 'move' tmp[2097982](2052939 'cast' int(32)[95] _yieldedIndex[2052922]))
        (2097984 '.=' this[1123066] F13_yret[2097760] tmp[2097982])
        val tmp[2097992]:int(32)[95] "temp"
        (2097997 'move' tmp[2097992](2097994 '.v' this[1123066] F13_yret[2097760]))
        (2097989 '.=' this[1123066] value[2097764] tmp[2097992])
        (2098298 '.=' this[1123066] more[1123041] 2)
        gotoIterEnd _end[2098296] _end[2098296]
        label _jump_break_2[2098306]
        val tmp[2097999]:_ic_chpl_direct_param_stride_range_iter[1103475] "temp"
        (2098004 'move' tmp[2097999](2098001 '.v' this[1123066] F7__iterator[2097748]))
        (2052966 call _freeIterator[1103663] tmp[2097999])
        ref tmp[2098006]:_ref(2*int(64))[1040318] "temp"
        (2098011 'move' tmp[2098006](2098008 '.' this[1123066] F6_tmp[2097746]))
        (2052969 call chpl__autoDestroy[1674803] tmp[2098006])
        val tmp[2098013]:_ic_chpl_direct_counted_range_iter_helper[1103729] "temp"
        (2098018 'move' tmp[2098013](2098015 '.v' this[1123066] F5__iterator[2097744]))
        (2052947 call _freeIterator[1103913] tmp[2098013])
        val tmp[2098020]:_ic_chpl_direct_counted_range_iter[1103979] "temp"
        (2098025 'move' tmp[2098020](2098022 '.v' this[1123066] F4__iterator[2097742]))
        (2052950 call _freeIterator[1104163] tmp[2098020])
        ref tmp[2098027]:_ref(string)[938128] "temp"
        (2098032 'move' tmp[2098027](2098029 '.' this[1123066] F3_localThis[2097740]))
        (2052953 call chpl__autoDestroy[1601673] tmp[2098027])
        val tmp[2098034]:_ic_chpl_bytes__ref_string[1108445] "temp"
        (2098039 'move' tmp[2098034](2098036 '.v' this[1123066] F2__iterator[2097738]))
        (2052956 call _freeIterator[1109758] tmp[2098034])
        ref tmp[2098041]:_ref(string)[938128] "temp"
        (2098046 'move' tmp[2098041](2098043 '.' this[1123066] F1_localThis[2097736]))
        (2052959 call chpl__autoDestroy[1601673] tmp[2098041])
        gotoReturn _endcodepoints[1889439] _endcodepoints[1889439]
        label _jump_2[2098304]
        {
          const-val low[2052793]:int(64)[13] "temp"
          ref tmp[2098048]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103618] "temp"
          (2098053 'move' tmp[2098048](2098050 '.' this[1123066] F7__iterator[2097748]))
          (2052795 'move' low[2052793](2052797 '.v' tmp[2098048] F0_low[2115192]))
          val tmp[2098055]:int(64)[13] "temp"
          (2052800 '=' tmp[2098055] low[2052793])
          (2098057 '.=' this[1123066] F8_i[2097750] tmp[2098055])
        }
        {
          const-val high[2052804]:int(64)[13] "temp"
          ref tmp[2098061]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103618] "temp"
          (2098066 'move' tmp[2098061](2098063 '.' this[1123066] F7__iterator[2097748]))
          (2052806 'move' high[2052804](2052808 '.v' tmp[2098061] F1_high[2115196]))
          val tmp[2098068]:int(64)[13] "temp"
          (2098073 'move' tmp[2098068](2098070 '.v' this[1123066] F8_i[2097750]))
          (2052811 '<=' tmp[2098068] high[2052804])
        }
        {
          val call_tmp[2052815]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          val tmp[2098075]:int(64)[13] "temp"
          (2098080 'move' tmp[2098075](2098077 '.v' this[1123066] F8_i[2097750]))
          (2052817 '+=' tmp[2098075] 1)
          (2098082 '.=' this[1123066] F8_i[2097750] tmp[2098075])
        }
      }
      label _endchpl_direct_param_stride_range_iter[2052854]
      val tmp[2098086]:_ic_chpl_direct_param_stride_range_iter[1103475] "temp"
      (2098091 'move' tmp[2098086](2098088 '.v' this[1123066] F7__iterator[2097748]))
      (2052857 call _freeIterator[1103663] tmp[2098086])
      ref tmp[2098093]:_ref(2*int(64))[1040318] "temp"
      (2098098 'move' tmp[2098093](2098095 '.' this[1123066] F6_tmp[2097746]))
      (2052860 call chpl__autoDestroy[1674803] tmp[2098093])
      label _endchpl_direct_counted_range_iter_helper[2052862]
      val tmp[2098100]:_ic_chpl_direct_counted_range_iter_helper[1103729] "temp"
      (2098105 'move' tmp[2098100](2098102 '.v' this[1123066] F5__iterator[2097744]))
      (1977352 call _freeIterator[1103913] tmp[2098100])
      label _endchpl_direct_counted_range_iter[1977354]
      val tmp[2098107]:_ic_chpl_direct_counted_range_iter[1103979] "temp"
      (2098112 'move' tmp[2098107](2098109 '.v' this[1123066] F4__iterator[2097742]))
      (1977357 call _freeIterator[1104163] tmp[2098107])
      ref tmp[2098114]:_ref(string)[938128] "temp"
      (2098119 'move' tmp[2098114](2098116 '.' this[1123066] F3_localThis[2097740]))
      (1977360 call chpl__autoDestroy[1601673] tmp[2098114])
      label _endchpl_bytes[1977362]
      val tmp[2098121]:_ic_chpl_bytes__ref_string[1108445] "temp"
      (2098126 'move' tmp[2098121](2098123 '.v' this[1123066] F2__iterator[2097738]))
      (1919215 call _freeIterator[1109758] tmp[2098121])
    }
    {
      val tmp[2098128]:int(64)[13] "temp"
      (540493 'move' tmp[2098128] 0)
      (2098130 '.=' this[1123066] F9_i[2097752] tmp[2098128])
      val tmp[33802]:bool[10] "dead after last mention" "temp"
      ref call_tmp[600317]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
      ref tmp[2098134]:_ref(string)[938128] "temp"
      (2098139 'move' tmp[2098134](2098136 '.' this[1123066] F1_localThis[2097736]))
      (600320 'move' call_tmp[600317](33829 call buffLen[758075] tmp[2098134]))
      const-val call_tmp[600322]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1123203]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1123207 'move' coerce_tmp[1123203](1123205 'deref' call_tmp[600317]))
      (600325 'move' call_tmp[600322](33826 call <[437568] 0 coerce_tmp[1123203]))
      (33832 'move' tmp[33802] call_tmp[600322])
      WhileDo[33807]
      {
        ref call_tmp[600329]:_ref(c_ptr(uint(8)))[937621] "dead at end of block" "maybe param" "temp"
        ref tmp[2098141]:_ref(string)[938128] "temp"
        (2098146 'move' tmp[2098141](2098143 '.' this[1123066] F1_localThis[2097736]))
        (600332 'move' call_tmp[600329](33762 call buff[758153] tmp[2098141]))
        ref call_tmp[600336]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
        ref tmp[2098148]:_ref(string)[938128] "temp"
        (2098153 'move' tmp[2098148](2098150 '.' this[1123066] F1_localThis[2097736]))
        (600339 'move' call_tmp[600336](33768 call buffLen[758075] tmp[2098148]))
        const-val call_tmp[600341]:(syserr,int(32),int(32))[964809] "dead at end of block" "maybe param" "temp"
        val coerce_tmp[1123212]:c_ptr(uint(8))[937612] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1123216 'move' coerce_tmp[1123212](1123214 'deref' call_tmp[600329]))
        const-val coerce_tmp[1123218]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1123222 'move' coerce_tmp[1123218](1123220 'deref' call_tmp[600336]))
        const-val tmp[2098155]:int(64)[13] "temp"
        (2098160 'move' tmp[2098155](2098157 '.v' this[1123066] F9_i[2097752]))
        ref tmp[2098162]:_ref((syserr,int(32),int(32)))[964916] "temp"
        (2098167 'move' tmp[2098162](2098164 '.' this[1123066] F10_ret_tmp[2097754]))
        (33776 call decodeHelp[174452] coerce_tmp[1123212] coerce_tmp[1123218] tmp[2098155] 1 tmp[2098162])
        const-val tmp[2098169]:(syserr,int(32),int(32))[964809] "temp"
        (2098174 'move' tmp[2098169](2098171 '.v' this[1123066] F10_ret_tmp[2097754]))
        (1907139 'move' call_tmp[600341] tmp[2098169])
        const tmp[2098176]:(syserr,int(32),int(32))[964809] "temp"
        (540495 'move' tmp[2098176] call_tmp[600341])
        (2098178 '.=' this[1123066] F11_tmp[2097756] tmp[2098176])
        1
        ref call_tmp[600346]:_ref(syserr)[949021] "dead at end of block" "maybe param" "reference to a const" "temp"
        ref tmp[2098182]:_ref((syserr,int(32),int(32)))[964916] "temp"
        (2098187 'move' tmp[2098182](2098184 '.' this[1123066] F11_tmp[2097756]))
        (600349 'move' call_tmp[600346](1123232 '.' tmp[2098182] x0[964803]))
        const-val decodeRet[33753]:syserr[223672] "dead at end of block" "const" "insert auto destroy"
        const-val coerce_tmp[1123237]:syserr[223672] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1123241 'move' coerce_tmp[1123237](1123239 'deref' call_tmp[600346]))
        (540497 'move' decodeRet[33753](1123235 call chpl__initCopy[964674] coerce_tmp[1123237]))
        ref call_tmp[600351]:_ref(int(32))[936815] "dead at end of block" "maybe param" "reference to a const" "temp"
        ref tmp[2098189]:_ref((syserr,int(32),int(32)))[964916] "temp"
        (2098194 'move' tmp[2098189](2098191 '.' this[1123066] F11_tmp[2097756]))
        (600354 'move' call_tmp[600351](1123246 '.' tmp[2098189] x1[964805]))
        const-val coerce_tmp[1123251]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1123255 'move' coerce_tmp[1123251](1123253 'deref' call_tmp[600351]))
        const tmp[2098196]:int(32)[95] "temp"
        (540499 'move' tmp[2098196](1123249 call chpl__initCopy[964946] coerce_tmp[1123251]))
        (2098198 '.=' this[1123066] F14_cp[2097762] tmp[2098196])
        ref call_tmp[600356]:_ref(int(32))[936815] "dead at end of block" "maybe param" "reference to a const" "temp"
        ref tmp[2098202]:_ref((syserr,int(32),int(32)))[964916] "temp"
        (2098207 'move' tmp[2098202](2098204 '.' this[1123066] F11_tmp[2097756]))
        (600359 'move' call_tmp[600356](1123260 '.' tmp[2098202] x2[964807]))
        const-val coerce_tmp[1123265]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1123269 'move' coerce_tmp[1123265](1123267 'deref' call_tmp[600356]))
        const tmp[2098209]:int(32)[95] "temp"
        (540501 'move' tmp[2098209](1123263 call chpl__initCopy[964946] coerce_tmp[1123265]))
        (2098211 '.=' this[1123066] F12_nBytes[2097758] tmp[2098209])
        const-val yret[504155]:int(32)[95] "dead after last mention" "YVV" "temp"
        val call_tmp[600361]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        const-val tmp[2098215]:int(32)[95] "temp"
        (2098220 'move' tmp[2098215](2098217 '.v' this[1123066] F14_cp[2097762]))
        (1123295 'move' yret[504155] tmp[2098215])
        const tmp[2098226]:int(32)[95] "temp"
        (2098231 'move' tmp[2098226](2098228 '.v' this[1123066] F14_cp[2097762]))
        (2098223 '.=' this[1123066] value[2097764] tmp[2098226])
        (2098308 '.=' this[1123066] more[1123041] 3)
        gotoIterEnd _end[2098296] _end[2098296]
        label _jump_break_3[2098316]
        ref tmp[2098233]:_ref((syserr,int(32),int(32)))[964916] "temp"
        (2098238 'move' tmp[2098233](2098235 '.' this[1123066] F11_tmp[2097756]))
        (1919217 call chpl__autoDestroy[1605546] tmp[2098233])
        ref tmp[2098240]:_ref(string)[938128] "temp"
        (2098245 'move' tmp[2098240](2098242 '.' this[1123066] F1_localThis[2097736]))
        (1919220 call chpl__autoDestroy[1601673] tmp[2098240])
        gotoReturn _endcodepoints[1889439] _endcodepoints[1889439]
        label _jump_3[2098314]
        const-val coerce_tmp[1123273]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        const-val tmp[2098247]:int(32)[95] "temp"
        (2098252 'move' tmp[2098247](2098249 '.v' this[1123066] F12_nBytes[2097758]))
        (1123279 'move' coerce_tmp[1123273](1123275 'cast' int(64)[13] tmp[2098247]))
        ref tmp[2098254]:_ref(int(64))[936761] "temp"
        (2098259 'move' tmp[2098254](2098256 '.' this[1123066] F9_i[2097752]))
        (33799 call +=[451431] tmp[2098254] coerce_tmp[1123273])
        ref tmp[2098261]:_ref((syserr,int(32),int(32)))[964916] "temp"
        (2098266 'move' tmp[2098261](2098263 '.' this[1123066] F11_tmp[2097756]))
        (1919224 call chpl__autoDestroy[1605546] tmp[2098261])
        ref call_tmp[600368]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
        ref tmp[2098268]:_ref(string)[938128] "temp"
        (2098273 'move' tmp[2098268](2098270 '.' this[1123066] F1_localThis[2097736]))
        (600371 'move' call_tmp[600368](33816 call buffLen[758075] tmp[2098268]))
        const-val call_tmp[600373]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1123283]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1123287 'move' coerce_tmp[1123283](1123285 'deref' call_tmp[600368]))
        const-val tmp[2098275]:int(64)[13] "temp"
        (2098280 'move' tmp[2098275](2098277 '.v' this[1123066] F9_i[2097752]))
        (600376 'move' call_tmp[600373](33813 call <[437568] tmp[2098275] coerce_tmp[1123283]))
        (33819 'move' tmp[33802] call_tmp[600373])
        tmp[33802]
      }
    }
    ref tmp[2098282]:_ref(string)[938128] "temp"
    (2098287 'move' tmp[2098282](2098284 '.' this[1123066] F1_localThis[2097736]))
    (1919227 call chpl__autoDestroy[1601673] tmp[2098282])
    label _endcodepoints[1889439]
    (2098318 '.=' this[1123066] more[1123041] 0)
    label _end[2098296]
    (2098377 return _void[55])
  }
  function _ic_codepoints__ref_string[1123038].zip1[1123073](const in arg this[1123075]:_ic_codepoints__ref_string[1123038]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (2098289 call advance[1123064] this[1123075])
    (1123080 return _void[55])
  }
  function _ic_codepoints__ref_string[1123038].zip2[1123082](const in arg this[1123084]:_ic_codepoints__ref_string[1123038]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1123089 return _void[55])
  }
  function _ic_codepoints__ref_string[1123038].zip3[1123091](const in arg this[1123093]:_ic_codepoints__ref_string[1123038]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (2098292 call advance[1123064] this[1123093])
    (1123098 return _void[55])
  }
  function _ic_codepoints__ref_string[1123038].zip4[1123100](const in arg this[1123102]:_ic_codepoints__ref_string[1123038]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1123107 return _void[55])
  }
  function _ic_codepoints__ref_string[1123038].hasMore[1123109](const in arg this[1123111]:_ic_codepoints__ref_string[1123038]) : int(64)[13] "auto ii" "inline" "method" "resolved"
  {
    val tmp[2098380]:int(64)[13] "temp"
    (2098385 'move' tmp[2098380](2098382 '.v' this[1123111] more[1123041]))
    (2098387 return tmp[2098380])
  }
  function _ic_codepoints__ref_string[1123038].getValue[1123118](const in arg this[1123120]:_ic_codepoints__ref_string[1123038]) : int(32)[95] "auto ii" "inline" "method" "resolved"
  {
    val tmp[2098390]:int(32)[95] "temp"
    (2098395 'move' tmp[2098390](2098392 '.v' this[1123120] value[2097764]))
    (2098397 return tmp[2098390])
  }
  function _ref(string)[938128].codepoints[33666](const  ref arg this[33668]:_ref(string)[938128], ref arg _retArg[1905426]:_ref(_ir_codepoints__ref_string)[1123155]) : void[4] "fn returns via _retArg" "inline" "iterator fn" "method" "resolved" "fn synchronization free" "no return value for void"
  {
    val _ir[2098405]:_ir_codepoints__ref_string[1123044] "temp"
    (2098407 '.=' _ir[2098405] F0_this[2097734] this[33668])
    (2098411 '=' _retArg[1905426] _ir[2098405])
    (2098414 return _void[55])
  }
  function _ic_codepoints__ref_string[1123038].init[1123127](const in arg this[1123129]:_ic_codepoints__ref_string[1123038]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (2098400 return _void[55])
  }
  function _ic_codepoints__ref_string[1123038].incr[1123136](const in arg this[1123138]:_ic_codepoints__ref_string[1123038]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (2098403 return _void[55])
  }
  type _ic_codepoints__ref_string[1123038] val super[1123039]:object[22] "super class" val more[1123041]:int(64)[13] ref F0_this[2097732]:_ref(string)[938128] val F1_localThis[2097736]:string[26] val F2__iterator[2097738]:_ic_chpl_bytes__ref_string[1108445] val F3_localThis[2097740]:string[26] val F4__iterator[2097742]:_ic_chpl_direct_counted_range_iter[1103979] val F5__iterator[2097744]:_ic_chpl_direct_counted_range_iter_helper[1103729] const F6_tmp[2097746]:2*int(64)[1040245] val F7__iterator[2097748]:_ic_chpl_direct_param_stride_range_iter[1103475] val F8_i[2097750]:int(64)[13] val F9_i[2097752]:int(64)[13] const-val F10_ret_tmp[2097754]:(syserr,int(32),int(32))[964809] const F11_tmp[2097756]:(syserr,int(32),int(32))[964809] const F12_nBytes[2097758]:int(32)[95] val F13_yret[2097760]:int(32)[95] const F14_cp[2097762]:int(32)[95] val value[2097764]:int(32)[95]
  type _ir_codepoints__ref_string[1123044] ref F0_this[2097734]:_ref(string)[938128]
  function _getIterator[1123053](const  ref arg ir[1123055]:_ir_codepoints__ref_string[1123044]) : _ic_codepoints__ref_string[1123038] "auto ii" "inline" "resolved" "fn synchronization free" "unsafe"
  {
    val ret[1123162]:_ic_codepoints__ref_string[1123038] "dead after last mention" "RVV" "temp"
    val _ic_[1123045]:_ic_codepoints__ref_string[1123038] "dead after last mention" "temp"
    const-val call_tmp[1123169]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1123172 'move' call_tmp[1123169](1123184 'sizeof_bundle' _ic_codepoints__ref_string[1123038]))
    const-val cast_tmp[1123187]:c_void_ptr[149] "dead after last mention" "temp"
    (1123189 'move' cast_tmp[1123187](1123050 call chpl_here_alloc[187788] call_tmp[1123169] 34))
    (1123058 'move' _ic_[1123045](1123191 'cast' _ic_codepoints__ref_string[1123038] cast_tmp[1123187]))
    (1123060 'setcid' _ic_[1123045])
    (1123167 'move' ret[1123162] _ic_[1123045])
    (2098417 '.=' ret[1123162] more[1123041] 1)
    ref tmp[2098421]:_ref(string)[938128] "temp"
    (2098426 'move' tmp[2098421](2098422 '.v' ir[1123055] F0_this[2097734]))
    (2098428 '.=' ret[1123162] F0_this[2097732] tmp[2098421])
    (1123164 return ret[1123162])
  }
  function _ref(string)[938128].this[34635](const  ref arg this[34637]:_ref(string)[938128], const  ref arg i[34632]:codepointIndex[28277], ref arg _retArg[1905436]:_ref(string)[938128]) : void[4] "fn returns via _retArg" "method" "resolved"
  {
    const-val ret[504261]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[600933]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1905460]:string[26] "temp"
    (34649 call item[34691] this[34637] i[34632] ret_tmp[1905460])
    (1905463 'move' call_tmp[600933] ret_tmp[1905460])
    (1181148 'move' ret[504261] call_tmp[600933])
    (1905438 '=' _retArg[1905436] ret[504261])
    (1905440 return _void[55])
  }
  function _ref(string)[938128].this[34663](const  ref arg this[34665]:_ref(string)[938128], const in arg i[34660]:int(64)[13], ref arg _retArg[1905454]:_ref(string)[938128]) : void[4] "fn returns via _retArg" "inline" "method" "resolved"
  {
    const-val ret[504271]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[600940]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1905476]:string[26] "temp"
    (34677 call item[35011] this[34665] i[34660] ret_tmp[1905476])
    (1905479 'move' call_tmp[600940] ret_tmp[1905476])
    (1181154 'move' ret[504271] call_tmp[600940])
    (1905456 '=' _retArg[1905454] ret[504271])
    (1905458 return _void[55])
  }
  function _ref(string)[938128].item[34691](const  ref arg this[34693]:_ref(string)[938128], const  ref arg i[34688]:codepointIndex[28277], ref arg _retArg[1905466]:_ref(string)[938128]) : void[4] "fn returns via _retArg" "method" "resolved"
  {
    val ret[504281]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[553637]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[553645]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    const-val call_tmp[600955]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (600958 'move' call_tmp[600955](34702 call <[29043] i[34688] 0))
    (553647 'move' tmp[553645] call_tmp[600955])
    (553652 'move' tmp[553637] tmp[553645])
    const-val call_tmp[600960]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (600963 'move' call_tmp[600960] tmp[553637])
    if call_tmp[600960]
    {
      (34711 call halt[1157317] "index " i[34688] " out of bounds for string")
    }
    const-val call_tmp[600967]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (600970 'move' call_tmp[600967](34724 call isEmpty[35064] this[34693]))
    const-val call_tmp[600972]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (600975 'move' call_tmp[600972] call_tmp[600967])
    if call_tmp[600972]
    {
      (504287 'move' ret[504281](1905470 call chpl__initCopy[981537] ""))
      gotoReturn _end_item[504279] _end_item[504279]
    }
    const-val call_tmp[600979]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (600982 'move' call_tmp[600979](34754 call isASCII[31049] this[34693]))
    const-val call_tmp[600984]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (600987 'move' call_tmp[600984] call_tmp[600979])
    if call_tmp[600984]
    {
      const-val tmp[553664]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val tmp[553672]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[601001]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (601004 'move' call_tmp[601001](34758 call numBytes[32810] this[34693]))
      const-val call_tmp[601006]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (601009 'move' call_tmp[601006](34761 call >=[29193] i[34688] call_tmp[601001]))
      (553674 'move' tmp[553672] call_tmp[601006])
      (553679 'move' tmp[553664] tmp[553672])
      const-val call_tmp[601011]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (601014 'move' call_tmp[601011] tmp[553664])
      if call_tmp[601011]
      {
        const-val call_tmp[601018]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (601021 'move' call_tmp[601018](34771 call size[32772] this[34693]))
        (34774 call halt[1175950] "index " i[34688] " out of bounds for string with length " call_tmp[601018])
      }
      ref call_tmp[601025]:_ref(c_ptr(uint(8)))[937621] "dead at end of block" "maybe param" "temp"
      (601028 'move' call_tmp[601025](34789 call buff[758153] this[34693]))
      const-val call_tmp[601030]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (601033 'move' call_tmp[601030](34796 call _cast[39517] i[34688]))
      ref call_tmp[601037]:_ref(int(32))[936815] "dead at end of block" "maybe param" "temp"
      (601040 'move' call_tmp[601037](34802 call locale_id[758231] this[34693]))
      const-val call_tmp[601042]:(c_ptr(uint(8)),int(64))[955397] "dead at end of block" "maybe param" "temp"
      val coerce_tmp[1181000]:c_ptr(uint(8))[937612] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1181004 'move' coerce_tmp[1181000](1181002 'deref' call_tmp[601025]))
      const-val coerce_tmp[1181006]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1181010 'move' coerce_tmp[1181006](1181008 'deref' call_tmp[601037]))
      const-val ret_tmp[1907068]:(c_ptr(uint(8)),int(64))[955397] "temp"
      (34806 call bufferCopy[172974] coerce_tmp[1181000] call_tmp[601030] 1 coerce_tmp[1181006] ret_tmp[1907068])
      (1907071 'move' call_tmp[601042] ret_tmp[1907068])
      const-val tmp[34807]:(c_ptr(uint(8)),int(64))[955397] "dead at end of block" "insert auto destroy" "temp"
      (540541 'move' tmp[34807] call_tmp[601042])
      1
      ref call_tmp[601047]:_ref(c_ptr(uint(8)))[937621] "dead at end of block" "maybe param" "temp"
      (601050 'move' call_tmp[601047](1181020 '.' tmp[34807] x0[955393]))
      val newBuff[34782]:c_ptr(uint(8))[937612] "dead at end of block" "insert auto destroy"
      val coerce_tmp[1181025]:c_ptr(uint(8))[937612] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1181029 'move' coerce_tmp[1181025](1181027 'deref' call_tmp[601047]))
      (1919230 '=' newBuff[34782] coerce_tmp[1181025])
      (540543 'noop')
      ref call_tmp[601052]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
      (601055 'move' call_tmp[601052](1181034 '.' tmp[34807] x1[955395]))
      const-val allocSize[34784]:int(64)[13] "dead at end of block" "insert auto destroy"
      const-val coerce_tmp[1181039]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1181043 'move' coerce_tmp[1181039](1181041 'deref' call_tmp[601052]))
      (1919233 '=' allocSize[34784] coerce_tmp[1181039])
      (540545 'noop')
      const-val call_tmp[601057]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1904940]:string[26] "temp"
      (34826 call chpl_createStringWithOwnedBufferNV[30676] newBuff[34782] 1 allocSize[34784] 1 ret_tmp[1904940])
      (1904943 'move' call_tmp[601057] ret_tmp[1904940])
      (1181142 'move' ret[504281] call_tmp[601057])
      (1919242 call chpl__autoDestroy[1605284] tmp[34807])
      gotoReturn _end_item[504279] _end_item[504279]
    }
    {
      val charCount[34830]:int(64)[13] "dead at end of block" "insert auto destroy"
      (540547 'move' charCount[34830] 0)
      {
        val _indexOfInterest[34906]:(int(32),byteIndex,int(64))[1122331] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[34907]:_ic__cpIndexLen__ref_string[1122574] "dead at end of block" "expr temp" "temp"
        const-val call_tmp[601064]:_ir__cpIndexLen__ref_string[1122580] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val default_arg_start[1181051]:byteIndex[28173] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
        const-val ret_tmp[1910050]:byteIndex[28173] "temp"
        (1181053 call _cpIndexLen_default_start[1122220] this[34693] ret_tmp[1910050])
        (1910053 'move' default_arg_start[1181051] ret_tmp[1910050])
        const-val ret_tmp[1905114]:_ir__cpIndexLen__ref_string[1122580] "temp"
        (34843 call _cpIndexLen[31109] this[34693] default_arg_start[1181051] ret_tmp[1905114])
        (1905117 'move' call_tmp[601064] ret_tmp[1905114])
        (34916 'move' _iterator[34907](34914 call _getIterator[1122589] call_tmp[601064]))
        {
          val ret[1977416]:_ir__cpIndexLen__ref_string[1122580] "dead after last mention" "RVV" "temp"
          const-val call_tmp[1977418]:string[26] "dead at end of block" "maybe param" "temp"
          const-val ret_tmp[1977420]:string[26] "temp"
          ref this[1978645]:_ref(string)[938128] "temp"
          (1978650 'move' this[1978645](1978647 '.v' _iterator[34907] F0_this[2094206]))
          (1977423 call localize[32889] this[1978645] ret_tmp[1977420])
          (1977426 'move' call_tmp[1977418] ret_tmp[1977420])
          val localThis[1977429]:string[26] "dead at end of block" "insert auto destroy"
          (1977431 'move' localThis[1977429] call_tmp[1977418])
          const-val call_tmp[1977434]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1977436 'move' call_tmp[1977434](1977439 call isASCII[31049] localThis[1977429]))
          const-val call_tmp[1977441]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1977443 'move' call_tmp[1977441] call_tmp[1977434])
          if call_tmp[1977434]
          {
            const-val _iterator[1977448]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108755] "dead at end of block" "expr temp" "insert auto destroy" "temp"
            const-val call_tmp[1977450]:range(int(64),bounded,false)[1027003] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[1977452]:range(int(64),bounded,false)[1027003] "temp"
            ref this[1978652]:_ref(string)[938128] "temp"
            (1978657 'move' this[1978652](1978654 '.v' _iterator[34907] F0_this[2094206]))
            (1977455 call byteIndices[31068] this[1978652] ret_tmp[1977452])
            (1977458 'move' call_tmp[1977450] ret_tmp[1977452])
            val call_tmp[1977461]:_ic_these_range_int64_t_bounded_F[1096892] "dead at end of block" "expr temp" "maybe param" "temp"
            (1977463 'move' call_tmp[1977461](1977466 call _getIterator[1095509] call_tmp[1977450]))
            const-val call_tmp[1977468]:_ir_chpl_bytes__ref_string[1108451] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[1977470]:_ir_chpl_bytes__ref_string[1108451] "temp"
            ref this[1978659]:_ref(string)[938128] "temp"
            (1978664 'move' this[1978659](1978661 '.v' _iterator[34907] F0_this[2094206]))
            (1977473 call chpl_bytes[33577] this[1978659] ret_tmp[1977470])
            (1977476 'move' call_tmp[1977468] ret_tmp[1977470])
            val call_tmp[1977479]:_ic_chpl_bytes__ref_string[1108445] "dead at end of block" "expr temp" "maybe param" "temp"
            (1977481 'move' call_tmp[1977479](1977484 call _getIterator[1108460] call_tmp[1977468]))
            const-val ret_tmp[1977486]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108755] "temp"
            (1977489 call _build_tuple[1108713] call_tmp[1977461] call_tmp[1977479] ret_tmp[1977486])
            (1977493 'move' _iterator[1977448] ret_tmp[1977486])
            val _iterator[1977496]:_ic_these_range_int64_t_bounded_F[1096892] "temp"
            (1977498 'move' _iterator[1977496](1977500 '.v' _iterator[1977448] x0[1108751]))
            val _iterator[1977503]:_ic_chpl_bytes__ref_string[1108445] "temp"
            (1977505 'move' _iterator[1977503](1977507 '.v' _iterator[1977448] x1[1108753]))
            {
              (1977512 call zip1[1096927] _iterator[1977496])
            }
            {
              (1977516 call zip1[1108480] _iterator[1977503])
            }
            const-val isFinished[1977518]:bool[10] "temp"
            val hasMore[1977520]:bool[10] "temp"
            CForLoop[1977522]
            {
              val _indexOfInterest[1977545]:(int(64),uint(8))[1111229] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              {
                (1977549 call zip2[1108489] _iterator[1977503])
              }
              {
                const-val retTmp[1977552]:int(64)[13] "temp"
                (1977554 'move' retTmp[1977552](1977557 call hasMore[1108516] _iterator[1977503]))
                (1977559 'move' hasMore[1977520](1977561 'cast' bool[10] retTmp[1977552]))
              }
              (1977564 'move' isFinished[1977518](1977566 '!' hasMore[1977520]))
              if isFinished[1977518]
              {
                (1977570 'chpl_error' c"zippered iterations have non-equal lengths")
              }
              {
                (1977574 'move' _index[1977589](1977577 call getValue[1108525] _iterator[1977503]))
              }
              {
                (1977581 call zip2[1096936] _iterator[1977496])
              }
              {
                (1977584 'move' _index[1977595](1977587 call getValue[1096972] _iterator[1977496]))
              }
              val _index[1977589]:uint(8)[100] "temp"
              (1977591 '.=' _indexOfInterest[1977545] x1[1111227] _index[1977589])
              val _index[1977595]:int(64)[13] "temp"
              (1977597 '.=' _indexOfInterest[1977545] x0[1111225] _index[1977595])
              1
              const-val i[1977602]:int(64)[13] "const" "index var" "insert auto destroy"
              (1977604 'move' i[1977602](1977606 '.v' _indexOfInterest[1977545] x0[1111225]))
              const-val b[1977609]:uint(8)[100] "const" "index var" "insert auto destroy"
              (1977611 'move' b[1977609](1977613 '.v' _indexOfInterest[1977545] x1[1111227]))
              const-val yret[1977616]:(int(32),byteIndex,int(64))[1122331] "dead after last mention" "YVV" "temp"
              val call_tmp[1977618]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val call_tmp[1977620]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
              (1977622 'move' call_tmp[1977620](1977624 'cast' int(32)[95] b[1977609]))
              const-val call_tmp[1977627]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
              const-val ret_tmp[1977629]:byteIndex[28173] "temp"
              (1977632 call _cast[39486] i[1977602] ret_tmp[1977629])
              (1977635 'move' call_tmp[1977627] ret_tmp[1977629])
              const-val call_tmp[1977638]:(int(32),byteIndex,int(64))[1122331] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
              const-val ret_tmp[1977640]:(int(32),byteIndex,int(64))[1122331] "temp"
              (1977643 call _build_tuple[1122281] call_tmp[1977620] call_tmp[1977627] 1 ret_tmp[1977640])
              (1977648 'move' call_tmp[1977638] ret_tmp[1977640])
              (1977651 'move' yret[1977616] call_tmp[1977638])
              const-val _yieldedIndex[1978233]:(int(32),byteIndex,int(64))[1122331] "temp"
              (1978464 'move' _yieldedIndex[1978233] call_tmp[1977638])
              {
                1
                const-val cp[1978236]:int(32)[95] "const" "index var" "insert auto destroy"
                (1978238 'move' cp[1978236](1978240 '.v' _yieldedIndex[1978233] x0[1122325]))
                ref byteIdx[1978243]:_ref(byteIndex)[948948] "index var" "insert auto destroy"
                (1978245 'move' byteIdx[1978243](1978247 '.v' _yieldedIndex[1978233] x1[1122327]))
                const-val nBytes[1978250]:int(64)[13] "const" "index var" "insert auto destroy"
                (1978252 'move' nBytes[1978250](1978254 '.v' _yieldedIndex[1978233] x2[1122329]))
                {
                  const-val call_tmp[1978258]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1978260 'move' call_tmp[1978258](1978263 call ==[29541] charCount[34830] i[34688]))
                  const-val call_tmp[1978266]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1978268 'move' call_tmp[1978266] call_tmp[1978258])
                  if call_tmp[1978266]
                  {
                    ref call_tmp[1978273]:_ref(c_ptr(uint(8)))[937621] "dead at end of block" "maybe param" "temp"
                    (1978275 'move' call_tmp[1978273](1978278 call buff[758153] this[34693]))
                    const-val call_tmp[1978280]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                    (1978282 'move' call_tmp[1978280](1978285 call _cast[39465] byteIdx[1978243]))
                    ref call_tmp[1978287]:_ref(int(32))[936815] "dead at end of block" "maybe param" "temp"
                    (1978289 'move' call_tmp[1978287](1978292 call locale_id[758231] this[34693]))
                    const-val call_tmp[1978294]:(c_ptr(uint(8)),int(64))[955397] "dead at end of block" "maybe param" "temp"
                    val coerce_tmp[1978296]:c_ptr(uint(8))[937612] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                    (1978298 'move' coerce_tmp[1978296](1978300 'deref' call_tmp[1978273]))
                    const-val coerce_tmp[1978302]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                    (1978304 'move' coerce_tmp[1978302](1978306 'deref' call_tmp[1978287]))
                    const-val ret_tmp[1978308]:(c_ptr(uint(8)),int(64))[955397] "temp"
                    (1978311 call bufferCopy[172974] coerce_tmp[1978296] call_tmp[1978280] nBytes[1978250] coerce_tmp[1978302] ret_tmp[1978308])
                    (1978317 'move' call_tmp[1978294] ret_tmp[1978308])
                    const-val tmp[1978320]:(c_ptr(uint(8)),int(64))[955397] "dead at end of block" "insert auto destroy" "temp"
                    (1978322 'move' tmp[1978320] call_tmp[1978294])
                    1
                    ref call_tmp[1978326]:_ref(c_ptr(uint(8)))[937621] "dead at end of block" "maybe param" "temp"
                    (1978328 'move' call_tmp[1978326](1978330 '.' tmp[1978320] x0[955393]))
                    val newBuff[1978333]:c_ptr(uint(8))[937612] "dead at end of block" "insert auto destroy"
                    val coerce_tmp[1978335]:c_ptr(uint(8))[937612] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                    (1978337 'move' coerce_tmp[1978335](1978339 'deref' call_tmp[1978326]))
                    (1978341 '=' newBuff[1978333] coerce_tmp[1978335])
                    (1978344 'noop')
                    ref call_tmp[1978345]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
                    (1978347 'move' call_tmp[1978345](1978349 '.' tmp[1978320] x1[955395]))
                    const-val allocSize[1978352]:int(64)[13] "dead at end of block" "insert auto destroy"
                    const-val coerce_tmp[1978354]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                    (1978356 'move' coerce_tmp[1978354](1978358 'deref' call_tmp[1978345]))
                    (1978360 '=' allocSize[1978352] coerce_tmp[1978354])
                    (1978363 'noop')
                    const-val call_tmp[1978364]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[1978366]:string[26] "temp"
                    (1978369 call chpl_createStringWithOwnedBufferNV[30676] newBuff[1978333] nBytes[1978250] allocSize[1978352] 1 ret_tmp[1978366])
                    (1978375 'move' call_tmp[1978364] ret_tmp[1978366])
                    (1978378 'move' ret[504281] call_tmp[1978364])
                    (1978382 call chpl__autoDestroy[1605284] tmp[1978320])
                    ref moreRef1[1978400]:_ref(int(64))[936761] "temp"
                    (1978402 'move' moreRef1[1978400](1978404 '.' _iterator[1977496] more[1096895]))
                    const-val moreVal1[1978407]:int(64)[13] "const" "temp"
                    (1978409 '=' moreVal1[1978407] moreRef1[1978400])
                    const-val moreValNeg1[1978412]:int(64)[13] "const" "temp"
                    (1978414 'move' moreValNeg1[1978412](1978416 'u-' moreVal1[1978407]))
                    (1978418 '=' moreRef1[1978400] moreValNeg1[1978412])
                    (1978422 call advance[1096918] _iterator[1977496])
                    ref moreRef2[1978424]:_ref(int(64))[936761] "temp"
                    (1978426 'move' moreRef2[1978424](1978428 '.' _iterator[1977503] more[1108448]))
                    const-val moreVal2[1978431]:int(64)[13] "const" "temp"
                    (1978433 '=' moreVal2[1978431] moreRef2[1978424])
                    const-val moreValNeg2[1978436]:int(64)[13] "const" "temp"
                    (1978438 'move' moreValNeg2[1978436](1978440 'u-' moreVal2[1978431]))
                    (1978442 '=' moreRef2[1978424] moreValNeg2[1978436])
                    (1978446 call advance[1108471] _iterator[1977503])
                    (1978449 call chpl__autoDestroy[1601936] call_tmp[1977627])
                    (1978452 call _freeIterator[1108913] _iterator[1977448])
                    (1978455 call chpl__autoDestroy[1681548] _iterator[1977448])
                    (1978458 call chpl__autoDestroy[1407763] call_tmp[1977450])
                    (1978461 call chpl__autoDestroy[1601673] localThis[1977429])
                    (1978385 call _freeIterator[1122762] _iterator[34907])
                    (1978388 call chpl__autoDestroy[1601936] default_arg_start[1181051])
                    gotoReturn _end_item[504279] _end_item[504279]
                  }
                  (1978394 call +=[451431] charCount[34830] 1)
                }
                label _continueLabel[1978397]
              }
              (1977725 call chpl__autoDestroy[1601936] call_tmp[1977627])
              {
                (1977729 call zip3[1096945] _iterator[1977496])
              }
              {
                (1977733 call zip3[1108498] _iterator[1977503])
              }
              {
                {
                  (1977526 call init[1096981] _iterator[1977496])
                }
                {
                  (1977530 call init[1108534] _iterator[1977503])
                }
              }
              {
                (1977534 call hasMore[1096963] _iterator[1977496])
              }
              {
                {
                  (1977539 call incr[1096990] _iterator[1977496])
                }
                {
                  (1977543 call incr[1108543] _iterator[1977503])
                }
              }
            }
            {
              const-val retTmp[1977736]:int(64)[13] "temp"
              (1977738 'move' retTmp[1977736](1977741 call hasMore[1108516] _iterator[1977503]))
              (1977743 'move' hasMore[1977520](1977745 'cast' bool[10] retTmp[1977736]))
            }
            if hasMore[1977520]
            {
              (1977750 'chpl_error' c"zippered iterations have non-equal lengths")
            }
            {
              (1977755 call zip4[1108507] _iterator[1977503])
            }
            {
              (1977759 call zip4[1096954] _iterator[1977496])
            }
            (1977762 call _freeIterator[1108913] _iterator[1977448])
            (1977765 call chpl__autoDestroy[1681548] _iterator[1977448])
            (1977768 call chpl__autoDestroy[1407763] call_tmp[1977450])
          }
          {
            const-val call_tmp[1977771]:int(64)[13] "dead at end of block" "maybe param" "temp"
            ref start[1978666]:_ref(byteIndex)[948948] "temp"
            (1978671 'move' start[1978666](1978668 '.v' _iterator[34907] F1_start[2094210]))
            (1977773 'move' call_tmp[1977771](1977776 call _cast[39465] start[1978666]))
            val i[1977778]:int(64)[13] "dead at end of block" "insert auto destroy"
            (1977780 'move' i[1977778] call_tmp[1977771])
            const-val call_tmp[1977783]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1977785 'move' call_tmp[1977783](1977788 call >[437788] call_tmp[1977771] 0))
            const-val call_tmp[1977791]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1977793 'move' call_tmp[1977791] call_tmp[1977783])
            if call_tmp[1977783]
            {
              val tmp[1977798]:bool[10] "dead after last mention" "temp"
              const-val tmp[1977800]:bool[10] "dead after last mention" "maybe param" "temp"
              ref call_tmp[1977802]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
              (1977804 'move' call_tmp[1977802](1977807 call buffLen[758075] localThis[1977429]))
              const-val coerce_tmp[1977809]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1977811 'move' coerce_tmp[1977809](1977813 'deref' call_tmp[1977802]))
              (1977815 'move' tmp[1977800](1977818 call <[437568] i[1977778] coerce_tmp[1977809]))
              val tmp[1977821]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
              const-val tmp[1977823]:bool[10] "dead after last mention" "maybe param" "temp"
              const-val call_tmp[1977825]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1977827 'move' call_tmp[1977825] tmp[1977800])
              (1977830 'move' tmp[1977823] tmp[1977800])
              if tmp[1977800]
              {
                const-val tmp[1977835]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                ref call_tmp[1977837]:_ref(uint(8))[937097] "dead after last mention" "maybe param" "temp"
                ref _this_tmp_[1977839]:_ref(c_ptr(uint(8)))[937621] "dead after last mention" "temp"
                (1977841 'move' _this_tmp_[1977839](1977844 call buff[758153] localThis[1977429]))
                val coerce_tmp[1977846]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1977848 'move' coerce_tmp[1977846](1977850 'deref' _this_tmp_[1977839]))
                (1977852 'move' call_tmp[1977837](1977855 call this[954280] coerce_tmp[1977846] i[1977778]))
                const-val call_tmp[1977858]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[1977860]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1977862 'move' coerce_tmp[1977860](1977864 'deref' call_tmp[1977837]))
                (1977866 'move' call_tmp[1977858](1977869 call isInitialByte[181574] coerce_tmp[1977860]))
                const-val call_tmp[1977871]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1977873 'move' call_tmp[1977871](1977876 call ![7494] call_tmp[1977858]))
                (1977878 'move' tmp[1977835] call_tmp[1977871])
                (1977881 'move' tmp[1977821] call_tmp[1977871])
              }
              {
                (1977885 'move' tmp[1977821] 0)
              }
              (1977889 'move' tmp[1977798] tmp[1977821])
              WhileDo[1977892]
              {
                (1977895 call +=[451431] i[1977778] 1)
                const-val tmp[1977898]:bool[10] "dead after last mention" "maybe param" "temp"
                ref call_tmp[1977900]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
                (1977902 'move' call_tmp[1977900](1977905 call buffLen[758075] localThis[1977429]))
                const-val coerce_tmp[1977907]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1977909 'move' coerce_tmp[1977907](1977911 'deref' call_tmp[1977900]))
                (1977913 'move' tmp[1977898](1977916 call <[437568] i[1977778] coerce_tmp[1977907]))
                val tmp[1977919]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val tmp[1977921]:bool[10] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[1977923]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1977925 'move' call_tmp[1977923] tmp[1977898])
                (1977928 'move' tmp[1977921] tmp[1977898])
                if tmp[1977898]
                {
                  const-val tmp[1977933]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  ref call_tmp[1977935]:_ref(uint(8))[937097] "dead after last mention" "maybe param" "temp"
                  ref _this_tmp_[1977937]:_ref(c_ptr(uint(8)))[937621] "dead after last mention" "temp"
                  (1977939 'move' _this_tmp_[1977937](1977942 call buff[758153] localThis[1977429]))
                  val coerce_tmp[1977944]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1977946 'move' coerce_tmp[1977944](1977948 'deref' _this_tmp_[1977937]))
                  (1977950 'move' call_tmp[1977935](1977953 call this[954280] coerce_tmp[1977944] i[1977778]))
                  const-val call_tmp[1977956]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[1977958]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1977960 'move' coerce_tmp[1977958](1977962 'deref' call_tmp[1977935]))
                  (1977964 'move' call_tmp[1977956](1977967 call isInitialByte[181574] coerce_tmp[1977958]))
                  const-val call_tmp[1977969]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1977971 'move' call_tmp[1977969](1977974 call ![7494] call_tmp[1977956]))
                  (1977976 'move' tmp[1977933] call_tmp[1977969])
                  (1977979 'move' tmp[1977919] call_tmp[1977969])
                }
                {
                  (1977983 'move' tmp[1977919] 0)
                }
                (1977987 'move' tmp[1977798] tmp[1977919])
                tmp[1977798]
              }
            }
            val tmp[1977991]:bool[10] "dead after last mention" "temp"
            ref call_tmp[1977993]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
            (1977995 'move' call_tmp[1977993](1977998 call buffLen[758075] localThis[1977429]))
            const-val call_tmp[1978000]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val coerce_tmp[1978002]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (1978004 'move' coerce_tmp[1978002](1978006 'deref' call_tmp[1977993]))
            (1978008 'move' call_tmp[1978000](1978011 call <[437568] i[1977778] coerce_tmp[1978002]))
            (1978014 'move' tmp[1977991] call_tmp[1978000])
            WhileDo[1978017]
            {
              ref call_tmp[1978019]:_ref(c_ptr(uint(8)))[937621] "dead at end of block" "maybe param" "temp"
              (1978021 'move' call_tmp[1978019](1978024 call buff[758153] localThis[1977429]))
              ref call_tmp[1978026]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
              (1978028 'move' call_tmp[1978026](1978031 call buffLen[758075] localThis[1977429]))
              const-val call_tmp[1978033]:(syserr,int(32),int(32))[964809] "dead at end of block" "maybe param" "temp"
              val coerce_tmp[1978035]:c_ptr(uint(8))[937612] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1978037 'move' coerce_tmp[1978035](1978039 'deref' call_tmp[1978019]))
              const-val coerce_tmp[1978041]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1978043 'move' coerce_tmp[1978041](1978045 'deref' call_tmp[1978026]))
              const-val ret_tmp[1978047]:(syserr,int(32),int(32))[964809] "temp"
              (1978050 call decodeHelp[174452] coerce_tmp[1978035] coerce_tmp[1978041] i[1977778] 1 ret_tmp[1978047])
              (1978056 'move' call_tmp[1978033] ret_tmp[1978047])
              const-val tmp[1978059]:(syserr,int(32),int(32))[964809] "dead at end of block" "const" "insert auto destroy" "temp"
              (1978061 'move' tmp[1978059] call_tmp[1978033])
              1
              ref call_tmp[1978065]:_ref(syserr)[949021] "dead at end of block" "maybe param" "reference to a const" "temp"
              (1978067 'move' call_tmp[1978065](1978069 '.' tmp[1978059] x0[964803]))
              const-val decodeRet[1978072]:syserr[223672] "dead at end of block" "const" "insert auto destroy"
              const-val coerce_tmp[1978074]:syserr[223672] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1978076 'move' coerce_tmp[1978074](1978078 'deref' call_tmp[1978065]))
              (1978080 'move' decodeRet[1978072](1978083 call chpl__initCopy[964674] coerce_tmp[1978074]))
              ref call_tmp[1978085]:_ref(int(32))[936815] "dead at end of block" "maybe param" "reference to a const" "temp"
              (1978087 'move' call_tmp[1978085](1978089 '.' tmp[1978059] x1[964805]))
              const-val cp[1978092]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
              const-val coerce_tmp[1978094]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1978096 'move' coerce_tmp[1978094](1978098 'deref' call_tmp[1978085]))
              (1978100 'move' cp[1978092](1978103 call chpl__initCopy[964946] coerce_tmp[1978094]))
              ref call_tmp[1978105]:_ref(int(32))[936815] "dead at end of block" "maybe param" "reference to a const" "temp"
              (1978107 'move' call_tmp[1978105](1978109 '.' tmp[1978059] x2[964807]))
              const-val nBytes[1978112]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
              const-val coerce_tmp[1978114]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1978116 'move' coerce_tmp[1978114](1978118 'deref' call_tmp[1978105]))
              (1978120 'move' nBytes[1978112](1978123 call chpl__initCopy[964946] coerce_tmp[1978114]))
              const-val yret[1978125]:(int(32),byteIndex,int(64))[1122331] "dead after last mention" "YVV" "temp"
              val call_tmp[1978127]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val call_tmp[1978129]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
              (1978131 'move' call_tmp[1978129] cp[1978092])
              const-val call_tmp[1978134]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
              const-val ret_tmp[1978136]:byteIndex[28173] "temp"
              (1978139 call _cast[39486] i[1977778] ret_tmp[1978136])
              (1978142 'move' call_tmp[1978134] ret_tmp[1978136])
              const-val call_tmp[1978145]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (1978147 'move' call_tmp[1978145](1978149 'cast' int(64)[13] nBytes[1978112]))
              const-val call_tmp[1978152]:(int(32),byteIndex,int(64))[1122331] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
              const-val ret_tmp[1978154]:(int(32),byteIndex,int(64))[1122331] "temp"
              (1978157 call _build_tuple[1122281] cp[1978092] call_tmp[1978134] call_tmp[1978145] ret_tmp[1978154])
              (1978162 'move' call_tmp[1978152] ret_tmp[1978154])
              (1978165 'move' yret[1978125] call_tmp[1978152])
              const-val _yieldedIndex[1978466]:(int(32),byteIndex,int(64))[1122331] "temp"
              (1978643 'move' _yieldedIndex[1978466] call_tmp[1978152])
              {
                1
                const-val cp[1978469]:int(32)[95] "const" "index var" "insert auto destroy"
                (1978471 'move' cp[1978469](1978473 '.v' _yieldedIndex[1978466] x0[1122325]))
                ref byteIdx[1978476]:_ref(byteIndex)[948948] "index var" "insert auto destroy"
                (1978478 'move' byteIdx[1978476](1978480 '.v' _yieldedIndex[1978466] x1[1122327]))
                const-val nBytes[1978483]:int(64)[13] "const" "index var" "insert auto destroy"
                (1978485 'move' nBytes[1978483](1978487 '.v' _yieldedIndex[1978466] x2[1122329]))
                {
                  const-val call_tmp[1978491]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1978493 'move' call_tmp[1978491](1978496 call ==[29541] charCount[34830] i[34688]))
                  const-val call_tmp[1978499]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1978501 'move' call_tmp[1978499] call_tmp[1978491])
                  if call_tmp[1978499]
                  {
                    ref call_tmp[1978506]:_ref(c_ptr(uint(8)))[937621] "dead at end of block" "maybe param" "temp"
                    (1978508 'move' call_tmp[1978506](1978511 call buff[758153] this[34693]))
                    const-val call_tmp[1978513]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                    (1978515 'move' call_tmp[1978513](1978518 call _cast[39465] byteIdx[1978476]))
                    ref call_tmp[1978520]:_ref(int(32))[936815] "dead at end of block" "maybe param" "temp"
                    (1978522 'move' call_tmp[1978520](1978525 call locale_id[758231] this[34693]))
                    const-val call_tmp[1978527]:(c_ptr(uint(8)),int(64))[955397] "dead at end of block" "maybe param" "temp"
                    val coerce_tmp[1978529]:c_ptr(uint(8))[937612] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                    (1978531 'move' coerce_tmp[1978529](1978533 'deref' call_tmp[1978506]))
                    const-val coerce_tmp[1978535]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                    (1978537 'move' coerce_tmp[1978535](1978539 'deref' call_tmp[1978520]))
                    const-val ret_tmp[1978541]:(c_ptr(uint(8)),int(64))[955397] "temp"
                    (1978544 call bufferCopy[172974] coerce_tmp[1978529] call_tmp[1978513] nBytes[1978483] coerce_tmp[1978535] ret_tmp[1978541])
                    (1978550 'move' call_tmp[1978527] ret_tmp[1978541])
                    const-val tmp[1978553]:(c_ptr(uint(8)),int(64))[955397] "dead at end of block" "insert auto destroy" "temp"
                    (1978555 'move' tmp[1978553] call_tmp[1978527])
                    1
                    ref call_tmp[1978559]:_ref(c_ptr(uint(8)))[937621] "dead at end of block" "maybe param" "temp"
                    (1978561 'move' call_tmp[1978559](1978563 '.' tmp[1978553] x0[955393]))
                    val newBuff[1978566]:c_ptr(uint(8))[937612] "dead at end of block" "insert auto destroy"
                    val coerce_tmp[1978568]:c_ptr(uint(8))[937612] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                    (1978570 'move' coerce_tmp[1978568](1978572 'deref' call_tmp[1978559]))
                    (1978574 '=' newBuff[1978566] coerce_tmp[1978568])
                    (1978577 'noop')
                    ref call_tmp[1978578]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
                    (1978580 'move' call_tmp[1978578](1978582 '.' tmp[1978553] x1[955395]))
                    const-val allocSize[1978585]:int(64)[13] "dead at end of block" "insert auto destroy"
                    const-val coerce_tmp[1978587]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                    (1978589 'move' coerce_tmp[1978587](1978591 'deref' call_tmp[1978578]))
                    (1978593 '=' allocSize[1978585] coerce_tmp[1978587])
                    (1978596 'noop')
                    const-val call_tmp[1978597]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[1978599]:string[26] "temp"
                    (1978602 call chpl_createStringWithOwnedBufferNV[30676] newBuff[1978566] nBytes[1978483] allocSize[1978585] 1 ret_tmp[1978599])
                    (1978608 'move' call_tmp[1978597] ret_tmp[1978599])
                    (1978611 'move' ret[504281] call_tmp[1978597])
                    (1978615 call chpl__autoDestroy[1605284] tmp[1978553])
                    (1978634 call chpl__autoDestroy[1601936] call_tmp[1978134])
                    (1978637 call chpl__autoDestroy[1605546] tmp[1978059])
                    (1978640 call chpl__autoDestroy[1601673] localThis[1977429])
                    (1978618 call _freeIterator[1122762] _iterator[34907])
                    (1978621 call chpl__autoDestroy[1601936] default_arg_start[1181051])
                    gotoReturn _end_item[504279] _end_item[504279]
                  }
                  (1978627 call +=[451431] charCount[34830] 1)
                }
                label _continueLabel[1978630]
              }
              (1978185 call chpl__autoDestroy[1601936] call_tmp[1978134])
              const-val coerce_tmp[1978187]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1978189 'move' coerce_tmp[1978187](1978191 'cast' int(64)[13] nBytes[1978112]))
              (1978195 call +=[451431] i[1977778] coerce_tmp[1978187])
              (1978199 call chpl__autoDestroy[1605546] tmp[1978059])
              ref call_tmp[1978201]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
              (1978203 'move' call_tmp[1978201](1978206 call buffLen[758075] localThis[1977429]))
              const-val call_tmp[1978208]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1978210]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1978212 'move' coerce_tmp[1978210](1978214 'deref' call_tmp[1978201]))
              (1978216 'move' call_tmp[1978208](1978219 call <[437568] i[1977778] coerce_tmp[1978210]))
              (1978222 'move' tmp[1977991] call_tmp[1978208])
              tmp[1977991]
            }
          }
          (1978227 call chpl__autoDestroy[1601673] localThis[1977429])
          label _end_cpIndexLen[1978229]
        }
        label _breakLabel[34912]
        (1919258 call _freeIterator[1122762] _iterator[34907])
        (1919260 call chpl__autoDestroy[1601936] default_arg_start[1181051])
      }
      {
        const-val call_tmp[601125]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (601128 'move' call_tmp[601125](34968 call size[32772] this[34693]))
        (34971 call halt[1175950] "index " i[34688] " out of bounds for string with length " call_tmp[601125])
      }
      (504305 'move' ret[504281](1905472 call chpl__initCopy[981537] ""))
      gotoReturn _end_item[504279] _end_item[504279]
    }
    label _end_item[504279]
    (1905468 '=' _retArg[1905466] ret[504281])
    (1905474 return _void[55])
  }
  function _ref(string)[938128].item[35011](const  ref arg this[35013]:_ref(string)[938128], const in arg i[35008]:int(64)[13], ref arg _retArg[1905482]:_ref(string)[938128]) : void[4] "fn returns via _retArg" "inline" "method" "resolved"
  {
    const-val ret[504311]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[601130]:codepointIndex[28277] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1906220]:codepointIndex[28277] "temp"
    (35022 call _cast[39538] i[35008] ret_tmp[1906220])
    (1906223 'move' call_tmp[601130] ret_tmp[1906220])
    const-val call_tmp[601135]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1905430]:string[26] "temp"
    (35025 call this[34635] this[35013] call_tmp[601130] ret_tmp[1905430])
    (1905433 'move' call_tmp[601135] ret_tmp[1905430])
    (1181151 'move' ret[504311] call_tmp[601135])
    (1905484 '=' _retArg[1905482] ret[504311])
    (1919263 call chpl__autoDestroy[1602003] call_tmp[601130])
    (1905486 return _void[55])
  }
  function _ref(string)[938128].this[1111555](const  ref arg this[1111561]:_ref(string)[938128], const in arg r[1111563]:range(int(64),bounded,false)[1027003], ref arg _retArg[1909888]:_ref(string)[938128]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free"
  {
    const-val ret[1111567]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1111575]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1909894]:string[26] "temp"
    (1111580 call getSlice[1111591] this[1111561] r[1111563] ret_tmp[1909894])
    (1909897 'move' call_tmp[1111575] ret_tmp[1909894])
    (1122157 'move' ret[1111567] call_tmp[1111575])
    (1909890 '=' _retArg[1909888] ret[1111567])
    (1909892 return _void[55])
  }
  function _ref(string)[938128].this[1123689](const  ref arg this[1123695]:_ref(string)[938128], const in arg r[1123697]:range(byteIndex,bounded,false)[1025981], ref arg _retArg[1910122]:_ref(string)[938128]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free"
  {
    const-val ret[1123701]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1123709]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1910128]:string[26] "temp"
    (1123714 call getSlice[1123725] this[1123695] r[1123697] ret_tmp[1910128])
    (1910131 'move' call_tmp[1123709] ret_tmp[1910128])
    (1124571 'move' ret[1123701] call_tmp[1123709])
    (1910124 '=' _retArg[1910122] ret[1123701])
    (1910126 return _void[55])
  }
  function _ref(string)[938128].this[1125751](const  ref arg this[1125757]:_ref(string)[938128], const in arg r[1125759]:range(int(64),boundedLow,false)[1087754], ref arg _retArg[1910182]:_ref(string)[938128]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free"
  {
    const-val ret[1125763]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1125771]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1910188]:string[26] "temp"
    (1125776 call getSlice[1125787] this[1125757] r[1125759] ret_tmp[1910188])
    (1910191 'move' call_tmp[1125771] ret_tmp[1910188])
    (1142691 'move' ret[1125763] call_tmp[1125771])
    (1910184 '=' _retArg[1910182] ret[1125763])
    (1910186 return _void[55])
  }
  function _ref(string)[938128].this[1143912](const  ref arg this[1143918]:_ref(string)[938128], const in arg r[1143920]:range(byteIndex,boundedLow,false)[1143592], ref arg _retArg[1910386]:_ref(string)[938128]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free"
  {
    const-val ret[1143924]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1143932]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1910392]:string[26] "temp"
    (1143937 call getSlice[1143948] this[1143918] r[1143920] ret_tmp[1910392])
    (1910395 'move' call_tmp[1143932] ret_tmp[1910392])
    (1156646 'move' ret[1143924] call_tmp[1143932])
    (1910388 '=' _retArg[1910386] ret[1143924])
    (1910390 return _void[55])
  }
  function _ref(string)[938128].this[1185428](const  ref arg this[1185434]:_ref(string)[938128], const in arg r[1185436]:range(byteIndex,boundedHigh,false)[1185108], ref arg _retArg[1910720]:_ref(string)[938128]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free"
  {
    const-val ret[1185440]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1185448]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1910726]:string[26] "temp"
    (1185453 call getSlice[1185464] this[1185434] r[1185436] ret_tmp[1910726])
    (1910729 'move' call_tmp[1185448] ret_tmp[1910726])
    (1203949 'move' ret[1185440] call_tmp[1185448])
    (1910722 '=' _retArg[1910720] ret[1185440])
    (1910724 return _void[55])
  }
  function _ref(string)[938128].isEmpty[35064](const  ref arg this[35066]:_ref(string)[938128]) : bool[10] "inline" "method" "resolved" "fn synchronization free"
  {
    val ret[504331]:bool[10] "dead after last mention" "RVV" "temp"
    ref call_tmp[601147]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (601150 'move' call_tmp[601147](35073 call buffLen[758075] this[35066]))
    const-val call_tmp[601152]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1020721]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1020725 'move' coerce_tmp[1020721](1020723 'deref' call_tmp[601147]))
    (601155 'move' call_tmp[601152](35077 call ==[435744] coerce_tmp[1020721] 0))
    (1020729 'move' ret[504331] call_tmp[601152])
    (504333 return ret[504331])
  }
  function _ref(string)[938128].find[1025776](const  ref arg this[1025782]:_ref(string)[938128], const  ref arg needle[1025784]:string[26], const in arg region[1025806]:range(byteIndex,bounded,false)[1025981], ref arg _retArg[1908510]:_ref(byteIndex)[948948]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "resolved"
  {
    val ret[1025810]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1030104]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1030106 'move' call_tmp[1030104](1030112 call isASCII[31049] this[1025782]))
    const-val call_tmp[1030113]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1030115 'move' call_tmp[1030113] call_tmp[1030104])
    if call_tmp[1030113]
    {
      const-val call_tmp[1030122]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1030124 'move' call_tmp[1030122](1030127 call doSearchNoEnc[1030242] this[1025782] needle[1025784] region[1025806]))
      const-val call_tmp[1030133]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1906178]:byteIndex[28173] "temp"
      (1030138 call _cast[39486] call_tmp[1030122] ret_tmp[1906178])
      (1906181 'move' call_tmp[1030133] ret_tmp[1906178])
      (1107707 'move' ret[1025810] call_tmp[1030133])
      gotoReturn _end_find[1030178] _end_find[1030178]
    }
    {
      const-val call_tmp[1030149]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1030151 'move' call_tmp[1030149](1030157 call doSearchUTF8[1106300] this[1025782] needle[1025784] region[1025806]))
      const-val call_tmp[1030162]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1906184]:byteIndex[28173] "temp"
      (1030167 call _cast[39486] call_tmp[1030149] ret_tmp[1906184])
      (1906187 'move' call_tmp[1030162] ret_tmp[1906184])
      (1107710 'move' ret[1025810] call_tmp[1030162])
      gotoReturn _end_find[1030178] _end_find[1030178]
    }
    label _end_find[1030178]
    (1908512 '=' _retArg[1908510] ret[1025810])
    (1908514 return _void[55])
  }
  function _ref(string)[938128].find_default_region[1030187](const  ref arg this[1030190]:_ref(string)[938128], ref arg _retArg[1908582]:_ref(range(byteIndex,bounded,false))[1025990]) : void[4] "compiler generated" "default actual function" "fn returns via _retArg" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    const-val ret[1030193]:range(byteIndex,bounded,false)[1025981] "dead after last mention" "RVV" "maybe param" "temp"
    const-val region[1030198]:range(byteIndex,bounded,false)[1025981] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val call_tmp[1030201]:range(byteIndex,bounded,false)[1025981] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1030206]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1905036]:range(int(64),bounded,false)[1027003] "temp"
    (1030211 call byteIndices[31068] this[1030190] ret_tmp[1905036])
    (1905039 'move' call_tmp[1030206] ret_tmp[1905036])
    const-val ret_tmp[1908516]:range(byteIndex,bounded,false)[1025981] "temp"
    (1030215 call _cast[1027751] call_tmp[1030206] ret_tmp[1908516])
    (1908519 'move' region[1030198] ret_tmp[1908516])
    (1030223 'move' ret[1030193] region[1030198])
    (1908584 '=' _retArg[1908582] ret[1030193])
    (1920312 call chpl__autoDestroy[1407763] call_tmp[1030206])
    (1908586 return _void[55])
  }
  function _ref(string)[938128].find[1181835](const  ref arg this[1181841]:_ref(string)[938128], const  ref arg needle[1181843]:string[26], const in arg region[1181865]:range(byteIndex,boundedLow,false)[1143592], ref arg _retArg[1910672]:_ref(byteIndex)[948948]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "resolved"
  {
    val ret[1181869]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1181875]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1181877 'move' call_tmp[1181875](1181883 call isASCII[31049] this[1181841]))
    const-val call_tmp[1181884]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1181886 'move' call_tmp[1181884] call_tmp[1181875])
    if call_tmp[1181884]
    {
      const-val call_tmp[1181893]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1181895 'move' call_tmp[1181893](1181898 call doSearchNoEnc[1181955] this[1181841] needle[1181843] region[1181865]))
      const-val call_tmp[1181904]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1906202]:byteIndex[28173] "temp"
      (1181909 call _cast[39486] call_tmp[1181893] ret_tmp[1906202])
      (1906205 'move' call_tmp[1181904] ret_tmp[1906202])
      (1184403 'move' ret[1181869] call_tmp[1181904])
      gotoReturn _end_find[1181949] _end_find[1181949]
    }
    {
      const-val call_tmp[1181920]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1181922 'move' call_tmp[1181920](1181928 call doSearchUTF8[1182996] this[1181841] needle[1181843] region[1181865]))
      const-val call_tmp[1181933]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1906208]:byteIndex[28173] "temp"
      (1181938 call _cast[39486] call_tmp[1181920] ret_tmp[1906208])
      (1906211 'move' call_tmp[1181933] ret_tmp[1906208])
      (1184406 'move' ret[1181869] call_tmp[1181933])
      gotoReturn _end_find[1181949] _end_find[1181949]
    }
    label _end_find[1181949]
    (1910674 '=' _retArg[1910672] ret[1181869])
    (1910676 return _void[55])
  }
  function _ref(string)[938128].replace[35366](const  ref arg this[35380]:_ref(string)[938128], const  ref arg needle[35363]:string[26], const  ref arg replacement[35369]:string[26], const in arg count[35376]:int(64)[13], ref arg _retArg[1905500]:_ref(string)[938128]) : void[4] "fn returns via _retArg" "inline" "method" "resolved"
  {
    const-val ret[504415]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[601285]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1910654]:string[26] "temp"
    (35392 call doReplace[1181203] this[35380] needle[35363] replacement[35369] count[35376] ret_tmp[1910654])
    (1910657 'move' call_tmp[601285] ret_tmp[1910654])
    (1203972 'move' ret[504415] call_tmp[601285])
    (1905502 '=' _retArg[1905500] ret[504415])
    (1905504 return _void[55])
  }
  function _ic_split__ref_string[1156693].advance[1156719](const in arg this[1156721]:_ic_split__ref_string[1156693]) : void[4] "auto ii" "method" "resolved"
  {
    const-val more[2101678]:int(64)[13]
    (2101754 'move' more[2101678](2101751 '.v' this[1156721] more[1156696]))
    const-val tmp[2101705]:bool[10] "temp"
    (2101712 'move' tmp[2101705](2101709 '==' more[2101678] 4))
    if tmp[2101705]
    {
      gotoIterResume _jump_4[2101670] _jump_4[2101670]
    }
    const-val tmp[2101693]:bool[10] "temp"
    (2101700 'move' tmp[2101693](2101697 '==' more[2101678] 3))
    if tmp[2101693]
    {
      gotoIterResume _jump_3[2101660] _jump_3[2101660]
    }
    const-val tmp[2101681]:bool[10] "temp"
    (2101688 'move' tmp[2101681](2101685 '==' more[2101678] 2))
    if tmp[2101681]
    {
      gotoIterResume _jump_2[2101650] _jump_2[2101650]
    }
    const-val tmp[2101717]:bool[10] "temp"
    (2101722 'move' tmp[2101717](2101719 '==' more[2101678] -2))
    if tmp[2101717]
    {
      gotoIterResume _jump_break_2[2101652] _jump_break_2[2101652]
    }
    const-val tmp[2101729]:bool[10] "temp"
    (2101734 'move' tmp[2101729](2101731 '==' more[2101678] -3))
    if tmp[2101729]
    {
      gotoIterResume _jump_break_3[2101662] _jump_break_3[2101662]
    }
    const-val tmp[2101741]:bool[10] "temp"
    (2101746 'move' tmp[2101741](2101743 '==' more[2101678] -4))
    if tmp[2101741]
    {
      gotoIterResume _jump_break_4[2101672] _jump_break_4[2101672]
    }
    val ret[504438]:_ir_split__ref_string[1156699] "dead after last mention" "RVV" "temp"
    const-val call_tmp[601297]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    ref tmp[2098606]:_ref(string)[938128] "temp"
    (2098611 'move' tmp[2098606](2098608 '.v' this[1156721] F0_this[2098432]))
    (601300 'move' call_tmp[601297](35498 call isASCII[31049] tmp[2098606]))
    const-val call_tmp[601302]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (601305 'move' call_tmp[601302] call_tmp[601297])
    if call_tmp[601297]
    {
      val _indexOfInterest[35508]:string[26] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      const-val call_tmp[601307]:_ir_doSplitWSNoEnc[1124670] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val ret_tmp[1910142]:_ir_doSplitWSNoEnc[1124670] "temp"
      ref tmp[2098613]:_ref(string)[938128] "temp"
      (2098618 'move' tmp[2098613](2098615 '.v' this[1156721] F0_this[2098432]))
      const-val tmp[2098620]:int(64)[13] "temp"
      (2098625 'move' tmp[2098620](2098622 '.v' this[1156721] F1_maxsplit[2098436]))
      (35504 call doSplitWSNoEnc[1124645] tmp[2098613] tmp[2098620] ret_tmp[1910142])
      (1910145 'move' call_tmp[601307] ret_tmp[1910142])
      val tmp[2098627]:_ic_doSplitWSNoEnc[1124664] "temp"
      (35518 'move' tmp[2098627](35516 call _getIterator[1124679] call_tmp[601307]))
      (2098629 '.=' this[1156721] F2__iterator[2098440] tmp[2098627])
      val ret[1978674]:_ir_doSplitWSNoEnc[1124670] "dead at end of block" "RVV" "temp"
      val call_tmp[1978676]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[1978678]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      ref x[1979387]:_ref(string)[938128] "temp"
      ref tmp[2098633]:_ref(_ic_doSplitWSNoEnc)[1124807] "temp"
      (2098638 'move' tmp[2098633](2098635 '.' this[1156721] F2__iterator[2098440]))
      (1979392 'move' x[1979387](1979389 '.v' tmp[2098633] F0_x[2115694]))
      (1978680 'move' call_tmp[1978678](1978683 call isEmpty[35064] x[1979387]))
      const-val call_tmp[1978685]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1978687 'move' call_tmp[1978685](1978690 call ![7494] call_tmp[1978678]))
      const-val call_tmp[1978692]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1978694 'move' call_tmp[1978692] call_tmp[1978685])
      if call_tmp[1978685]
      {
        const-val call_tmp[1978699]:string[26] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[1978701]:string[26] "temp"
        ref x[1979394]:_ref(string)[938128] "temp"
        ref tmp[2098640]:_ref(_ic_doSplitWSNoEnc)[1124807] "temp"
        (2098645 'move' tmp[2098640](2098642 '.' this[1156721] F2__iterator[2098440]))
        (1979399 'move' x[1979394](1979396 '.v' tmp[2098640] F0_x[2115694]))
        (1978704 call localize[32889] x[1979394] ret_tmp[1978701])
        (1978707 'move' call_tmp[1978699] ret_tmp[1978701])
        val call_tmp[1978710]:string[26] "dead after last mention" "maybe param" "temp" "type variable"
        const tmp[2098647]:string[26] "temp"
        (1978714 'move' tmp[2098647] call_tmp[1978699])
        (2098649 '.=' this[1156721] F3_localx[2098442] tmp[2098647])
        val tmp[2098653]:bool[10] "temp"
        (1978719 'move' tmp[2098653] 0)
        (2098655 '.=' this[1156721] F4_done[2098444] tmp[2098653])
        val tmp[2098659]:bool[10] "temp"
        (1978724 'move' tmp[2098659] 0)
        (2098661 '.=' this[1156721] F5_yieldChunk[2098446] tmp[2098659])
        val call_tmp[1978729]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        ref tmp[2098665]:_ref(string)[938128] "temp"
        (2098670 'move' tmp[2098665](2098667 '.' this[1156721] F6_chunk[2098448]))
        (1978732 call init[30763] tmp[2098665])
        const-val call_tmp[1978734]:bool[10] "dead at end of block" "maybe param" "temp"
        const-val maxsplit[1979401]:int(64)[13] "temp"
        ref tmp[2098672]:_ref(_ic_doSplitWSNoEnc)[1124807] "temp"
        (2098677 'move' tmp[2098672](2098674 '.' this[1156721] F2__iterator[2098440]))
        (1979406 'move' maxsplit[1979401](1979403 '.v' tmp[2098672] F1_maxsplit[2115698]))
        (1978736 'move' call_tmp[1978734](1978739 call ==[435744] maxsplit[1979401] 0))
        const tmp[2098679]:bool[10] "temp"
        (1978744 'move' tmp[2098679] call_tmp[1978734])
        (2098681 '.=' this[1156721] F7_noSplits[2098450] tmp[2098679])
        const-val call_tmp[1978747]:bool[10] "dead at end of block" "maybe param" "temp"
        const-val maxsplit[1979408]:int(64)[13] "temp"
        ref tmp[2098685]:_ref(_ic_doSplitWSNoEnc)[1124807] "temp"
        (2098690 'move' tmp[2098685](2098687 '.' this[1156721] F2__iterator[2098440]))
        (1979413 'move' maxsplit[1979408](1979410 '.v' tmp[2098685] F1_maxsplit[2115698]))
        (1978749 'move' call_tmp[1978747](1978752 call >[437788] maxsplit[1979408] 0))
        const tmp[2098692]:bool[10] "temp"
        (1978757 'move' tmp[2098692] call_tmp[1978747])
        (2098694 '.=' this[1156721] F8_limitSplits[2098452] tmp[2098692])
        val tmp[2098698]:int(64)[13] "temp"
        (1978762 'move' tmp[2098698] 0)
        (2098700 '.=' this[1156721] F9_splitCount[2098454] tmp[2098698])
        ref call_tmp[1978765]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
        ref tmp[2098704]:_ref(string)[938128] "temp"
        (2098709 'move' tmp[2098704](2098706 '.' this[1156721] F3_localx[2098442]))
        (1978767 'move' call_tmp[1978765](1978770 call buffLen[758075] tmp[2098704]))
        const-val call_tmp[1978772]:int(64)[13] "dead at end of block" "maybe param" "temp"
        const-val coerce_tmp[1978774]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1978776 'move' coerce_tmp[1978774](1978778 'deref' call_tmp[1978765]))
        (1978780 'move' call_tmp[1978772](1978783 call -[1125627] coerce_tmp[1978774]))
        const tmp[2098711]:int(64)[13] "temp"
        (1978787 'move' tmp[2098711] call_tmp[1978772])
        (2098713 '.=' this[1156721] F10_iEnd[2098456] tmp[2098711])
        val tmp[2098717]:bool[10] "temp"
        (1978792 'move' tmp[2098717] 0)
        (2098719 '.=' this[1156721] F11_inChunk[2098458] tmp[2098717])
        val tmp[2098723]:int(64)[13] "temp"
        (1978797 'move' tmp[2098723] 0)
        (2098725 '.=' this[1156721] F12_chunkStart[2098460] tmp[2098723])
        const-val ret_tmp[1978806]:range(int(64),bounded,false)[1027003] "temp"
        ref x[1979415]:_ref(string)[938128] "temp"
        ref tmp[2098729]:_ref(_ic_doSplitWSNoEnc)[1124807] "temp"
        (2098734 'move' tmp[2098729](2098731 '.' this[1156721] F2__iterator[2098440]))
        (1979420 'move' x[1979415](1979417 '.v' tmp[2098729] F0_x[2115694]))
        (1978809 call indices[32788] x[1979415] ret_tmp[1978806])
        val tmp[2098736]:range(int(64),bounded,false)[1027003] "temp"
        (1978812 'move' tmp[2098736] ret_tmp[1978806])
        (2098738 '.=' this[1156721] F14_call_tmp[2098464] tmp[2098736])
        val call_tmp[1978815]:_ic_these_range_int64_t_bounded_F[1096892] "dead at end of block" "expr temp" "maybe param" "temp"
        ref tmp[2098742]:_ref(range(int(64),bounded,false))[1027047] "temp"
        (2098747 'move' tmp[2098742](2098744 '.' this[1156721] F14_call_tmp[2098464]))
        (1978817 'move' call_tmp[1978815](1978820 call _getIterator[1095509] tmp[2098742]))
        const-val call_tmp[1978822]:_ir_chpl_bytes__ref_string[1108451] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val ret_tmp[1978824]:_ir_chpl_bytes__ref_string[1108451] "temp"
        ref tmp[2098749]:_ref(string)[938128] "temp"
        (2098754 'move' tmp[2098749](2098751 '.' this[1156721] F3_localx[2098442]))
        (1978827 call chpl_bytes[33577] tmp[2098749] ret_tmp[1978824])
        (1978830 'move' call_tmp[1978822] ret_tmp[1978824])
        val call_tmp[1978833]:_ic_chpl_bytes__ref_string[1108445] "dead at end of block" "expr temp" "maybe param" "temp"
        (1978835 'move' call_tmp[1978833](1978838 call _getIterator[1108460] call_tmp[1978822]))
        const-val ret_tmp[1978840]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108755] "temp"
        (1978843 call _build_tuple[1108713] call_tmp[1978815] call_tmp[1978833] ret_tmp[1978840])
        val tmp[2098756]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108755] "temp"
        (1978847 'move' tmp[2098756] ret_tmp[1978840])
        (2098758 '.=' this[1156721] F13__iterator[2098462] tmp[2098756])
        val tmp[2098762]:_ic_these_range_int64_t_bounded_F[1096892] "temp"
        const-val tmp[2098768]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108755] "temp"
        (2098773 'move' tmp[2098768](2098770 '.v' this[1156721] F13__iterator[2098462]))
        (2053038 'move' tmp[2098762](2053035 '.v' tmp[2098768] x0[1108751]))
        (2098764 '.=' this[1156721] F15__iterator[2098466] tmp[2098762])
        val tmp[2098775]:_ic_chpl_bytes__ref_string[1108445] "temp"
        const-val tmp[2098781]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108755] "temp"
        (2098786 'move' tmp[2098781](2098783 '.v' this[1156721] F13__iterator[2098462]))
        (2053051 'move' tmp[2098775](2053048 '.v' tmp[2098781] x1[1108753]))
        (2098777 '.=' this[1156721] F16__iterator[2098468] tmp[2098775])
        val tmp[2098788]:_ic_these_range_int64_t_bounded_F[1096892] "temp"
        (2098793 'move' tmp[2098788](2098790 '.v' this[1156721] F15__iterator[2098466]))
        (2053060 call zip1[1096927] tmp[2098788])
        val tmp[2098795]:_ic_chpl_bytes__ref_string[1108445] "temp"
        (2098800 'move' tmp[2098795](2098797 '.v' this[1156721] F16__iterator[2098468]))
        (2053095 call zip1[1108480] tmp[2098795])
        const-val isFinished[2053121]:bool[10] "temp"
        val hasMore[2053120]:bool[10] "temp"
        CForLoop[2053168]
        {
          val tmp[2098802]:_ic_chpl_bytes__ref_string[1108445] "temp"
          (2098807 'move' tmp[2098802](2098804 '.v' this[1156721] F16__iterator[2098468]))
          (2053173 call zip2[1108489] tmp[2098802])
          const-val retTmp[2053176]:int(64)[13] "temp"
          val tmp[2098809]:_ic_chpl_bytes__ref_string[1108445] "temp"
          (2098814 'move' tmp[2098809](2098811 '.v' this[1156721] F16__iterator[2098468]))
          (2053178 'move' retTmp[2053176](2053181 call hasMore[1108516] tmp[2098809]))
          (2053183 'move' hasMore[2053120](2053185 'cast' bool[10] retTmp[2053176]))
          (2053188 'move' isFinished[2053121](2053190 '!' hasMore[2053120]))
          if isFinished[2053121]
          {
            (2053194 'chpl_error' c"zippered iterations have non-equal lengths")
          }
          val tmp[2098816]:_ic_chpl_bytes__ref_string[1108445] "temp"
          (2098821 'move' tmp[2098816](2098818 '.v' this[1156721] F16__iterator[2098468]))
          (2053198 'move' _index[2053213](2053201 call getValue[1108525] tmp[2098816]))
          val tmp[2098823]:_ic_these_range_int64_t_bounded_F[1096892] "temp"
          (2098828 'move' tmp[2098823](2098825 '.v' this[1156721] F15__iterator[2098466]))
          (2053205 call zip2[1096936] tmp[2098823])
          val tmp[2098830]:_ic_these_range_int64_t_bounded_F[1096892] "temp"
          (2098835 'move' tmp[2098830](2098832 '.v' this[1156721] F15__iterator[2098466]))
          (2053208 'move' _index[2053219](2053211 call getValue[1096972] tmp[2098830]))
          val _index[2053213]:uint(8)[100] "temp"
          val tmp[2098837]:(int(64),uint(8))[1111229] "temp"
          (2098842 'move' tmp[2098837](2098839 '.v' this[1156721] F17__indexOfInterest[2098470]))
          (2053215 '.=' tmp[2098837] x1[1111227] _index[2053213])
          (2098844 '.=' this[1156721] F17__indexOfInterest[2098470] tmp[2098837])
          val _index[2053219]:int(64)[13] "temp"
          val tmp[2098848]:(int(64),uint(8))[1111229] "temp"
          (2098853 'move' tmp[2098848](2098850 '.v' this[1156721] F17__indexOfInterest[2098470]))
          (2053221 '.=' tmp[2098848] x0[1111225] _index[2053219])
          (2098855 '.=' this[1156721] F17__indexOfInterest[2098470] tmp[2098848])
          1
          const-val i[2053226]:int(64)[13] "const" "index var" "insert auto destroy"
          const-val tmp[2098859]:(int(64),uint(8))[1111229] "temp"
          (2098864 'move' tmp[2098859](2098861 '.v' this[1156721] F17__indexOfInterest[2098470]))
          (2053228 'move' i[2053226](2053230 '.v' tmp[2098859] x0[1111225]))
          const-val c[2053233]:uint(8)[100] "const" "index var" "insert auto destroy"
          const-val tmp[2098866]:(int(64),uint(8))[1111229] "temp"
          (2098871 'move' tmp[2098866](2098868 '.v' this[1156721] F17__indexOfInterest[2098470]))
          (2053235 'move' c[2053233](2053237 '.v' tmp[2098866] x1[1111227]))
          const-val call_tmp[2053240]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val tmp[2098873]:bool[10] "temp"
          (2098878 'move' tmp[2098873](2098875 '.v' this[1156721] F7_noSplits[2098450]))
          (2053242 'move' call_tmp[2053240] tmp[2098873])
          const-val tmp[2098880]:bool[10] "temp"
          (2098885 'move' tmp[2098880](2098882 '.v' this[1156721] F7_noSplits[2098450]))
          if tmp[2098880]
          {
            ref tmp[2098887]:_ref(bool)[937388] "temp"
            (2098892 'move' tmp[2098887](2098889 '.' this[1156721] F4_done[2098444]))
            (2053248 call =[435290] tmp[2098887] 1)
            const-val call_tmp[2053251]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            ref tmp[2098894]:_ref(string)[938128] "temp"
            (2098899 'move' tmp[2098894](2098896 '.' this[1156721] F3_localx[2098442]))
            (2053253 'move' call_tmp[2053251](2053256 call isSpace[36843] tmp[2098894]))
            const-val call_tmp[2053258]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2053260 'move' call_tmp[2053258](2053263 call ![7494] call_tmp[2053251]))
            const-val call_tmp[2053265]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2053267 'move' call_tmp[2053265] call_tmp[2053258])
            if call_tmp[2053258]
            {
              ref tmp[2098901]:_ref(string)[938128] "temp"
              (2098906 'move' tmp[2098901](2098903 '.' this[1156721] F6_chunk[2098448]))
              ref tmp[2098908]:_ref(string)[938128] "temp"
              (2098913 'move' tmp[2098908](2098910 '.' this[1156721] F3_localx[2098442]))
              (2053273 call =[38272] tmp[2098901] tmp[2098908])
              ref tmp[2098915]:_ref(bool)[937388] "temp"
              (2098920 'move' tmp[2098915](2098917 '.' this[1156721] F5_yieldChunk[2098446]))
              (2053277 call =[435290] tmp[2098915] 1)
            }
          }
          {
            const-val call_tmp[2053282]:bool[10] "dead at end of block" "maybe param" "temp"
            (2053284 'move' call_tmp[2053282](2053287 call byte_isWhitespace[181655] c[2053233]))
            const-val cSpace[2053289]:bool[10] "dead at end of block" "insert auto destroy"
            (2053291 'move' cSpace[2053289] call_tmp[2053282])
            const-val tmp[2053294]:bool[10] "dead after last mention" "maybe param" "temp"
            const-val tmp[2098922]:bool[10] "temp"
            (2098927 'move' tmp[2098922](2098924 '.v' this[1156721] F11_inChunk[2098458]))
            (2053296 'move' tmp[2053294] tmp[2098922])
            val tmp[2053299]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
            const-val tmp[2053301]:bool[10] "dead after last mention" "maybe param" "temp"
            const-val call_tmp[2053303]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val tmp[2098929]:bool[10] "temp"
            (2098934 'move' tmp[2098929](2098931 '.v' this[1156721] F11_inChunk[2098458]))
            (2053305 'move' call_tmp[2053303] tmp[2098929])
            const-val tmp[2098936]:bool[10] "temp"
            (2098941 'move' tmp[2098936](2098938 '.v' this[1156721] F11_inChunk[2098458]))
            (2053308 'move' tmp[2053301] tmp[2098936])
            const-val tmp[2098943]:bool[10] "temp"
            (2098948 'move' tmp[2098943](2098945 '.v' this[1156721] F11_inChunk[2098458]))
            if tmp[2098943]
            {
              (2053313 'move' tmp[2053299] 1)
            }
            {
              const-val tmp[2053317]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
              (2053319 'move' tmp[2053317] cSpace[2053289])
              (2053322 'move' tmp[2053299] cSpace[2053289])
            }
            const-val call_tmp[2053326]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2053328 'move' call_tmp[2053326](2053331 call ![7494] tmp[2053299]))
            const-val call_tmp[2053333]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2053335 'move' call_tmp[2053333] call_tmp[2053326])
            if call_tmp[2053326]
            {
              ref tmp[2098950]:_ref(int(64))[936761] "temp"
              (2098955 'move' tmp[2098950](2098952 '.' this[1156721] F12_chunkStart[2098460]))
              (2053341 call =[435443] tmp[2098950] i[2053226])
              ref tmp[2098957]:_ref(bool)[937388] "temp"
              (2098962 'move' tmp[2098957](2098959 '.' this[1156721] F11_inChunk[2098458]))
              (2053345 call =[435290] tmp[2098957] 1)
              const-val call_tmp[2053348]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val tmp[2098964]:int(64)[13] "temp"
              (2098969 'move' tmp[2098964](2098966 '.v' this[1156721] F10_iEnd[2098456]))
              (2053350 'move' call_tmp[2053348](2053353 call >[437788] i[2053226] tmp[2098964]))
              const-val call_tmp[2053356]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2053358 'move' call_tmp[2053356] call_tmp[2053348])
              if call_tmp[2053348]
              {
                const-val call_tmp[2053363]:range(int(64),boundedLow,false)[1087754] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val tmp[2098971]:int(64)[13] "temp"
                (2098976 'move' tmp[2098971](2098973 '.v' this[1156721] F12_chunkStart[2098460]))
                ref tmp[2098978]:_ref(range(int(64),boundedLow,false))[1087798] "temp"
                (2098983 'move' tmp[2098978](2098980 '.' this[1156721] F18_ret_tmp[2098472]))
                (2053368 call chpl_build_low_bounded_range[1087147] tmp[2098971] tmp[2098978])
                const-val tmp[2098985]:range(int(64),boundedLow,false)[1087754] "temp"
                (2098990 'move' tmp[2098985](2098987 '.v' this[1156721] F18_ret_tmp[2098472]))
                (2053371 'move' call_tmp[2053363] tmp[2098985])
                const-val call_tmp[2053374]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                ref tmp[2098992]:_ref(string)[938128] "temp"
                (2098997 'move' tmp[2098992](2098994 '.' this[1156721] F3_localx[2098442]))
                ref tmp[2098999]:_ref(string)[938128] "temp"
                (2099004 'move' tmp[2098999](2099001 '.' this[1156721] F19_ret_tmp[2098474]))
                (2053379 call this[1125751] tmp[2098992] call_tmp[2053363] tmp[2098999])
                const-val tmp[2099006]:string[26] "temp"
                (2099011 'move' tmp[2099006](2099008 '.v' this[1156721] F19_ret_tmp[2098474]))
                (2053383 'move' call_tmp[2053374] tmp[2099006])
                ref tmp[2099013]:_ref(string)[938128] "temp"
                (2099018 'move' tmp[2099013](2099015 '.' this[1156721] F6_chunk[2098448]))
                (2053387 call =[38272] tmp[2099013] call_tmp[2053374])
                (2053391 call chpl__autoDestroy[1601673] call_tmp[2053374])
                (2053394 call chpl__autoDestroy[1680875] call_tmp[2053363])
                ref tmp[2099020]:_ref(bool)[937388] "temp"
                (2099025 'move' tmp[2099020](2099022 '.' this[1156721] F5_yieldChunk[2098446]))
                (2053397 call =[435290] tmp[2099020] 1)
                ref tmp[2099027]:_ref(bool)[937388] "temp"
                (2099032 'move' tmp[2099027](2099029 '.' this[1156721] F4_done[2098444]))
                (2053401 call =[435290] tmp[2099027] 1)
              }
            }
            {
              const-val call_tmp[2053406]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val tmp[2099034]:bool[10] "temp"
              (2099039 'move' tmp[2099034](2099036 '.v' this[1156721] F11_inChunk[2098458]))
              (2053408 'move' call_tmp[2053406] tmp[2099034])
              if call_tmp[2053406]
              {
                const-val call_tmp[2053413]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2053415 'move' call_tmp[2053413] cSpace[2053289])
                if cSpace[2053289]
                {
                  ref tmp[2099041]:_ref(int(64))[936761] "temp"
                  (2099046 'move' tmp[2099041](2099043 '.' this[1156721] F9_splitCount[2098454]))
                  (2053421 call +=[451431] tmp[2099041] 1)
                  const-val tmp[2053424]:bool[10] "dead after last mention" "maybe param" "temp"
                  const-val tmp[2099048]:bool[10] "temp"
                  (2099053 'move' tmp[2099048](2099050 '.v' this[1156721] F8_limitSplits[2098452]))
                  (2053426 'move' tmp[2053424] tmp[2099048])
                  val tmp[2053429]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                  const-val tmp[2053431]:bool[10] "dead after last mention" "maybe param" "temp"
                  const-val call_tmp[2053433]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val tmp[2099055]:bool[10] "temp"
                  (2099060 'move' tmp[2099055](2099057 '.v' this[1156721] F8_limitSplits[2098452]))
                  (2053435 'move' call_tmp[2053433] tmp[2099055])
                  const-val tmp[2099062]:bool[10] "temp"
                  (2099067 'move' tmp[2099062](2099064 '.v' this[1156721] F8_limitSplits[2098452]))
                  (2053438 'move' tmp[2053431] tmp[2099062])
                  const-val tmp[2099069]:bool[10] "temp"
                  (2099074 'move' tmp[2099069](2099071 '.v' this[1156721] F8_limitSplits[2098452]))
                  if tmp[2099069]
                  {
                    const-val tmp[2053443]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                    const-val call_tmp[2053445]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val maxsplit[2053447]:int(64)[13] "temp"
                    ref tmp[2099076]:_ref(_ic_doSplitWSNoEnc)[1124807] "temp"
                    (2099081 'move' tmp[2099076](2099078 '.' this[1156721] F2__iterator[2098440]))
                    (2053449 'move' maxsplit[2053447](2053451 '.v' tmp[2099076] F1_maxsplit[2115698]))
                    const-val tmp[2099083]:int(64)[13] "temp"
                    (2099088 'move' tmp[2099083](2099085 '.v' this[1156721] F9_splitCount[2098454]))
                    (2053454 'move' call_tmp[2053445](2053457 call >[437788] tmp[2099083] maxsplit[2053447]))
                    (2053460 'move' tmp[2053443] call_tmp[2053445])
                    (2053463 'move' tmp[2053429] call_tmp[2053445])
                  }
                  {
                    (2053467 'move' tmp[2053429] 0)
                  }
                  const-val call_tmp[2053471]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2053473 'move' call_tmp[2053471] tmp[2053429])
                  if tmp[2053429]
                  {
                    const-val call_tmp[2053478]:range(int(64),boundedLow,false)[1087754] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val tmp[2099090]:int(64)[13] "temp"
                    (2099095 'move' tmp[2099090](2099092 '.v' this[1156721] F12_chunkStart[2098460]))
                    ref tmp[2099097]:_ref(range(int(64),boundedLow,false))[1087798] "temp"
                    (2099102 'move' tmp[2099097](2099099 '.' this[1156721] F20_ret_tmp[2098476]))
                    (2053483 call chpl_build_low_bounded_range[1087147] tmp[2099090] tmp[2099097])
                    const-val tmp[2099104]:range(int(64),boundedLow,false)[1087754] "temp"
                    (2099109 'move' tmp[2099104](2099106 '.v' this[1156721] F20_ret_tmp[2098476]))
                    (2053486 'move' call_tmp[2053478] tmp[2099104])
                    const-val call_tmp[2053489]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    ref tmp[2099111]:_ref(string)[938128] "temp"
                    (2099116 'move' tmp[2099111](2099113 '.' this[1156721] F3_localx[2098442]))
                    ref tmp[2099118]:_ref(string)[938128] "temp"
                    (2099123 'move' tmp[2099118](2099120 '.' this[1156721] F21_ret_tmp[2098478]))
                    (2053494 call this[1125751] tmp[2099111] call_tmp[2053478] tmp[2099118])
                    const-val tmp[2099125]:string[26] "temp"
                    (2099130 'move' tmp[2099125](2099127 '.v' this[1156721] F21_ret_tmp[2098478]))
                    (2053498 'move' call_tmp[2053489] tmp[2099125])
                    ref tmp[2099132]:_ref(string)[938128] "temp"
                    (2099137 'move' tmp[2099132](2099134 '.' this[1156721] F6_chunk[2098448]))
                    (2053502 call =[38272] tmp[2099132] call_tmp[2053489])
                    (2053506 call chpl__autoDestroy[1601673] call_tmp[2053489])
                    (2053509 call chpl__autoDestroy[1680875] call_tmp[2053478])
                    ref tmp[2099139]:_ref(bool)[937388] "temp"
                    (2099144 'move' tmp[2099139](2099141 '.' this[1156721] F5_yieldChunk[2098446]))
                    (2053512 call =[435290] tmp[2099139] 1)
                    ref tmp[2099146]:_ref(bool)[937388] "temp"
                    (2099151 'move' tmp[2099146](2099148 '.' this[1156721] F4_done[2098444]))
                    (2053516 call =[435290] tmp[2099146] 1)
                  }
                  {
                    const-val call_tmp[2053520]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                    (2053522 'move' call_tmp[2053520](2053525 call -[962415] i[2053226]))
                    const-val call_tmp[2053527]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val tmp[2099153]:int(64)[13] "temp"
                    (2099158 'move' tmp[2099153](2099155 '.v' this[1156721] F12_chunkStart[2098460]))
                    ref tmp[2099160]:_ref(range(int(64),bounded,false))[1027047] "temp"
                    (2099165 'move' tmp[2099160](2099162 '.' this[1156721] F22_ret_tmp[2098480]))
                    (2053532 call chpl_build_bounded_range[455253] tmp[2099153] call_tmp[2053520] tmp[2099160])
                    const-val tmp[2099167]:range(int(64),bounded,false)[1027003] "temp"
                    (2099172 'move' tmp[2099167](2099169 '.v' this[1156721] F22_ret_tmp[2098480]))
                    (2053536 'move' call_tmp[2053527] tmp[2099167])
                    const-val call_tmp[2053539]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    ref tmp[2099174]:_ref(string)[938128] "temp"
                    (2099179 'move' tmp[2099174](2099176 '.' this[1156721] F3_localx[2098442]))
                    ref tmp[2099181]:_ref(string)[938128] "temp"
                    (2099186 'move' tmp[2099181](2099183 '.' this[1156721] F23_ret_tmp[2098482]))
                    (2053544 call this[1111555] tmp[2099174] call_tmp[2053527] tmp[2099181])
                    const-val tmp[2099188]:string[26] "temp"
                    (2099193 'move' tmp[2099188](2099190 '.v' this[1156721] F23_ret_tmp[2098482]))
                    (2053548 'move' call_tmp[2053539] tmp[2099188])
                    ref tmp[2099195]:_ref(string)[938128] "temp"
                    (2099200 'move' tmp[2099195](2099197 '.' this[1156721] F6_chunk[2098448]))
                    (2053552 call =[38272] tmp[2099195] call_tmp[2053539])
                    (2053556 call chpl__autoDestroy[1601673] call_tmp[2053539])
                    (2053559 call chpl__autoDestroy[1407763] call_tmp[2053527])
                    ref tmp[2099202]:_ref(bool)[937388] "temp"
                    (2099207 'move' tmp[2099202](2099204 '.' this[1156721] F5_yieldChunk[2098446]))
                    (2053562 call =[435290] tmp[2099202] 1)
                    ref tmp[2099209]:_ref(bool)[937388] "temp"
                    (2099214 'move' tmp[2099209](2099211 '.' this[1156721] F11_inChunk[2098458]))
                    (2053566 call =[435290] tmp[2099209] 0)
                  }
                }
                {
                  const-val call_tmp[2053571]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val tmp[2099216]:int(64)[13] "temp"
                  (2099221 'move' tmp[2099216](2099218 '.v' this[1156721] F10_iEnd[2098456]))
                  (2053573 'move' call_tmp[2053571](2053576 call >[437788] i[2053226] tmp[2099216]))
                  const-val call_tmp[2053579]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2053581 'move' call_tmp[2053579] call_tmp[2053571])
                  if call_tmp[2053571]
                  {
                    const-val call_tmp[2053586]:range(int(64),boundedLow,false)[1087754] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val tmp[2099223]:int(64)[13] "temp"
                    (2099228 'move' tmp[2099223](2099225 '.v' this[1156721] F12_chunkStart[2098460]))
                    ref tmp[2099230]:_ref(range(int(64),boundedLow,false))[1087798] "temp"
                    (2099235 'move' tmp[2099230](2099232 '.' this[1156721] F24_ret_tmp[2098484]))
                    (2053591 call chpl_build_low_bounded_range[1087147] tmp[2099223] tmp[2099230])
                    const-val tmp[2099237]:range(int(64),boundedLow,false)[1087754] "temp"
                    (2099242 'move' tmp[2099237](2099239 '.v' this[1156721] F24_ret_tmp[2098484]))
                    (2053594 'move' call_tmp[2053586] tmp[2099237])
                    const-val call_tmp[2053597]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    ref tmp[2099244]:_ref(string)[938128] "temp"
                    (2099249 'move' tmp[2099244](2099246 '.' this[1156721] F3_localx[2098442]))
                    ref tmp[2099251]:_ref(string)[938128] "temp"
                    (2099256 'move' tmp[2099251](2099253 '.' this[1156721] F25_ret_tmp[2098486]))
                    (2053602 call this[1125751] tmp[2099244] call_tmp[2053586] tmp[2099251])
                    const-val tmp[2099258]:string[26] "temp"
                    (2099263 'move' tmp[2099258](2099260 '.v' this[1156721] F25_ret_tmp[2098486]))
                    (2053606 'move' call_tmp[2053597] tmp[2099258])
                    ref tmp[2099265]:_ref(string)[938128] "temp"
                    (2099270 'move' tmp[2099265](2099267 '.' this[1156721] F6_chunk[2098448]))
                    (2053610 call =[38272] tmp[2099265] call_tmp[2053597])
                    (2053614 call chpl__autoDestroy[1601673] call_tmp[2053597])
                    (2053617 call chpl__autoDestroy[1680875] call_tmp[2053586])
                    ref tmp[2099272]:_ref(bool)[937388] "temp"
                    (2099277 'move' tmp[2099272](2099274 '.' this[1156721] F5_yieldChunk[2098446]))
                    (2053620 call =[435290] tmp[2099272] 1)
                    ref tmp[2099279]:_ref(bool)[937388] "temp"
                    (2099284 'move' tmp[2099279](2099281 '.' this[1156721] F4_done[2098444]))
                    (2053624 call =[435290] tmp[2099279] 1)
                  }
                }
              }
            }
          }
          const-val call_tmp[2053632]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val tmp[2099286]:bool[10] "temp"
          (2099291 'move' tmp[2099286](2099288 '.v' this[1156721] F5_yieldChunk[2098446]))
          (2053634 'move' call_tmp[2053632] tmp[2099286])
          if call_tmp[2053632]
          {
            const-val yret[2053639]:string[26] "dead after last mention" "YVV" "temp"
            val call_tmp[2053641]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            const-val _yield_expr_tmp_[2053643]:string[26] "temp"
            ref tmp[2099293]:_ref(string)[938128] "temp"
            (2099298 'move' tmp[2099293](2099295 '.' this[1156721] F6_chunk[2098448]))
            (2053645 'move' _yield_expr_tmp_[2053643](2053648 call chpl__initCopy[981537] tmp[2099293]))
            (2053650 'move' yret[2053639] _yield_expr_tmp_[2053643])
            const-val _yieldedIndex[2053653]:string[26] "temp"
            (2053655 'move' _yieldedIndex[2053653] _yield_expr_tmp_[2053643])
            const tmp[2099300]:string[26] "temp"
            (2053661 'move' tmp[2099300] _yieldedIndex[2053653])
            (2099302 '.=' this[1156721] F26_s[2098488] tmp[2099300])
            const-val yret[2053664]:string[26] "dead after last mention" "YVV" "temp"
            val tmp[2099306]:string[26] "temp"
            ref tmp[2099312]:_ref(string)[938128] "temp"
            (2099317 'move' tmp[2099312](2099314 '.' this[1156721] F26_s[2098488]))
            (2053668 'move' tmp[2099306](2053671 call chpl__initCopy[981537] tmp[2099312]))
            (2099308 '.=' this[1156721] F81__yield_expr_tmp_[2098598] tmp[2099306])
            const-val tmp[2099319]:string[26] "temp"
            (2099324 'move' tmp[2099319](2099321 '.v' this[1156721] F81__yield_expr_tmp_[2098598]))
            (2053673 'move' yret[2053664] tmp[2099319])
            val tmp[2099330]:string[26] "temp"
            (2099335 'move' tmp[2099330](2099332 '.v' this[1156721] F81__yield_expr_tmp_[2098598]))
            (2099327 '.=' this[1156721] value[2098604] tmp[2099330])
            (2101644 '.=' this[1156721] more[1156696] 2)
            gotoIterEnd _end[2101642] _end[2101642]
            label _jump_break_2[2101652]
            ref moreRef1[2053829]:_ref(int(64))[936761] "temp"
            ref tmp[2099337]:_ref(_ic_these_range_int64_t_bounded_F)[1097035] "temp"
            (2099342 'move' tmp[2099337](2099339 '.' this[1156721] F15__iterator[2098466]))
            (2053831 'move' moreRef1[2053829](2053833 '.' tmp[2099337] more[1096895]))
            const-val moreVal1[2053836]:int(64)[13] "const" "temp"
            (2053838 '=' moreVal1[2053836] moreRef1[2053829])
            const-val moreValNeg1[2053841]:int(64)[13] "const" "temp"
            (2053843 'move' moreValNeg1[2053841](2053845 'u-' moreVal1[2053836]))
            (2053847 '=' moreRef1[2053829] moreValNeg1[2053841])
            val tmp[2099344]:_ic_these_range_int64_t_bounded_F[1096892] "temp"
            (2099349 'move' tmp[2099344](2099346 '.v' this[1156721] F15__iterator[2098466]))
            (2053851 call advance[1096918] tmp[2099344])
            ref moreRef2[2053853]:_ref(int(64))[936761] "temp"
            ref tmp[2099351]:_ref(_ic_chpl_bytes__ref_string)[1108588] "temp"
            (2099356 'move' tmp[2099351](2099353 '.' this[1156721] F16__iterator[2098468]))
            (2053855 'move' moreRef2[2053853](2053857 '.' tmp[2099351] more[1108448]))
            const-val moreVal2[2053860]:int(64)[13] "const" "temp"
            (2053862 '=' moreVal2[2053860] moreRef2[2053853])
            const-val moreValNeg2[2053865]:int(64)[13] "const" "temp"
            (2053867 'move' moreValNeg2[2053865](2053869 'u-' moreVal2[2053860]))
            (2053871 '=' moreRef2[2053853] moreValNeg2[2053865])
            val tmp[2099358]:_ic_chpl_bytes__ref_string[1108445] "temp"
            (2099363 'move' tmp[2099358](2099360 '.v' this[1156721] F16__iterator[2098468]))
            (2053875 call advance[1108471] tmp[2099358])
            ref tmp[2099365]:_ref((_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string))[1108863] "temp"
            (2099370 'move' tmp[2099365](2099367 '.' this[1156721] F13__iterator[2098462]))
            (2053681 call _freeIterator[1108913] tmp[2099365])
            ref tmp[2099372]:_ref((_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string))[1108863] "temp"
            (2099377 'move' tmp[2099372](2099374 '.' this[1156721] F13__iterator[2098462]))
            (2053684 call chpl__autoDestroy[1681548] tmp[2099372])
            const-val tmp[2099379]:range(int(64),bounded,false)[1027003] "temp"
            (2099384 'move' tmp[2099379](2099381 '.v' this[1156721] F14_call_tmp[2098464]))
            (2053687 call chpl__autoDestroy[1407763] tmp[2099379])
            ref tmp[2099386]:_ref(string)[938128] "temp"
            (2099391 'move' tmp[2099386](2099388 '.' this[1156721] F6_chunk[2098448]))
            (2053690 call chpl__autoDestroy[1601673] tmp[2099386])
            ref tmp[2099393]:_ref(string)[938128] "temp"
            (2099398 'move' tmp[2099393](2099395 '.' this[1156721] F3_localx[2098442]))
            (2053693 call chpl__autoDestroy[1601673] tmp[2099393])
            ref tmp[2099400]:_ref(string)[938128] "temp"
            (2099405 'move' tmp[2099400](2099402 '.' this[1156721] F26_s[2098488]))
            (2053696 call chpl__autoDestroy[1601673] tmp[2099400])
            val tmp[2099407]:_ic_doSplitWSNoEnc[1124664] "temp"
            (2099412 'move' tmp[2099407](2099409 '.v' this[1156721] F2__iterator[2098440]))
            (2053699 call _freeIterator[1142764] tmp[2099407])
            gotoReturn _endsplit[1889451] _endsplit[1889451]
            label _jump_2[2101650]
            ref tmp[2099414]:_ref(string)[938128] "temp"
            (2099419 'move' tmp[2099414](2099416 '.' this[1156721] F26_s[2098488]))
            (2053705 call chpl__autoDestroy[1601673] tmp[2099414])
            ref tmp[2099421]:_ref(bool)[937388] "temp"
            (2099426 'move' tmp[2099421](2099423 '.' this[1156721] F5_yieldChunk[2098446]))
            (2053708 call =[435290] tmp[2099421] 0)
          }
          const-val call_tmp[2053712]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val tmp[2099428]:bool[10] "temp"
          (2099433 'move' tmp[2099428](2099430 '.v' this[1156721] F4_done[2098444]))
          (2053714 'move' call_tmp[2053712] tmp[2099428])
          if call_tmp[2053712]
          {
            ref moreRef1[2053780]:_ref(int(64))[936761] "temp"
            ref tmp[2099435]:_ref(_ic_these_range_int64_t_bounded_F)[1097035] "temp"
            (2099440 'move' tmp[2099435](2099437 '.' this[1156721] F15__iterator[2098466]))
            (2053782 'move' moreRef1[2053780](2053784 '.' tmp[2099435] more[1096895]))
            const-val moreVal1[2053787]:int(64)[13] "const" "temp"
            (2053789 '=' moreVal1[2053787] moreRef1[2053780])
            const-val moreValNeg1[2053792]:int(64)[13] "const" "temp"
            (2053794 'move' moreValNeg1[2053792](2053796 'u-' moreVal1[2053787]))
            (2053798 '=' moreRef1[2053780] moreValNeg1[2053792])
            val tmp[2099442]:_ic_these_range_int64_t_bounded_F[1096892] "temp"
            (2099447 'move' tmp[2099442](2099444 '.v' this[1156721] F15__iterator[2098466]))
            (2053802 call advance[1096918] tmp[2099442])
            ref moreRef2[2053804]:_ref(int(64))[936761] "temp"
            ref tmp[2099449]:_ref(_ic_chpl_bytes__ref_string)[1108588] "temp"
            (2099454 'move' tmp[2099449](2099451 '.' this[1156721] F16__iterator[2098468]))
            (2053806 'move' moreRef2[2053804](2053808 '.' tmp[2099449] more[1108448]))
            const-val moreVal2[2053811]:int(64)[13] "const" "temp"
            (2053813 '=' moreVal2[2053811] moreRef2[2053804])
            const-val moreValNeg2[2053816]:int(64)[13] "const" "temp"
            (2053818 'move' moreValNeg2[2053816](2053820 'u-' moreVal2[2053811]))
            (2053822 '=' moreRef2[2053804] moreValNeg2[2053816])
            val tmp[2099456]:_ic_chpl_bytes__ref_string[1108445] "temp"
            (2099461 'move' tmp[2099456](2099458 '.v' this[1156721] F16__iterator[2098468]))
            (2053826 call advance[1108471] tmp[2099456])
            break _breakLabel[1979311] _breakLabel[1979311]
          }
          val tmp[2099463]:_ic_these_range_int64_t_bounded_F[1096892] "temp"
          (2099468 'move' tmp[2099463](2099465 '.v' this[1156721] F15__iterator[2098466]))
          (2053724 call zip3[1096945] tmp[2099463])
          val tmp[2099470]:_ic_chpl_bytes__ref_string[1108445] "temp"
          (2099475 'move' tmp[2099470](2099472 '.v' this[1156721] F16__iterator[2098468]))
          (2053728 call zip3[1108498] tmp[2099470])
          {
            val tmp[2099477]:_ic_these_range_int64_t_bounded_F[1096892] "temp"
            (2099482 'move' tmp[2099477](2099479 '.v' this[1156721] F15__iterator[2098466]))
            (2053070 call init[1096981] tmp[2099477])
            val tmp[2099484]:_ic_chpl_bytes__ref_string[1108445] "temp"
            (2099489 'move' tmp[2099484](2099486 '.v' this[1156721] F16__iterator[2098468]))
            (2053105 call init[1108534] tmp[2099484])
          }
          {
            val tmp[2099491]:_ic_these_range_int64_t_bounded_F[1096892] "temp"
            (2099496 'move' tmp[2099491](2099493 '.v' this[1156721] F15__iterator[2098466]))
            (2053086 call hasMore[1096963] tmp[2099491])
          }
          {
            val tmp[2099498]:_ic_these_range_int64_t_bounded_F[1096892] "temp"
            (2099503 'move' tmp[2099498](2099500 '.v' this[1156721] F15__iterator[2098466]))
            (2053074 call incr[1096990] tmp[2099498])
            val tmp[2099505]:_ic_chpl_bytes__ref_string[1108445] "temp"
            (2099510 'move' tmp[2099505](2099507 '.v' this[1156721] F16__iterator[2098468]))
            (2053109 call incr[1108543] tmp[2099505])
          }
        }
        const-val retTmp[2053155]:int(64)[13] "temp"
        val tmp[2099512]:_ic_chpl_bytes__ref_string[1108445] "temp"
        (2099517 'move' tmp[2099512](2099514 '.v' this[1156721] F16__iterator[2098468]))
        (2053157 'move' retTmp[2053155](2053152 call hasMore[1108516] tmp[2099512]))
        (2053162 'move' hasMore[2053120](2053159 'cast' bool[10] retTmp[2053155]))
        if hasMore[2053120]
        {
          (2053147 'chpl_error' c"zippered iterations have non-equal lengths")
        }
        val tmp[2099519]:_ic_chpl_bytes__ref_string[1108445] "temp"
        (2099524 'move' tmp[2099519](2099521 '.v' this[1156721] F16__iterator[2098468]))
        (2053117 call zip4[1108507] tmp[2099519])
        val tmp[2099526]:_ic_these_range_int64_t_bounded_F[1096892] "temp"
        (2099531 'move' tmp[2099526](2099528 '.v' this[1156721] F15__iterator[2098466]))
        (2053082 call zip4[1096954] tmp[2099526])
        label _breakLabel[1979311]
        ref tmp[2099533]:_ref((_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string))[1108863] "temp"
        (2099538 'move' tmp[2099533](2099535 '.' this[1156721] F13__iterator[2098462]))
        (1979314 call _freeIterator[1108913] tmp[2099533])
        ref tmp[2099540]:_ref((_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string))[1108863] "temp"
        (2099545 'move' tmp[2099540](2099542 '.' this[1156721] F13__iterator[2098462]))
        (1979317 call chpl__autoDestroy[1681548] tmp[2099540])
        const-val tmp[2099547]:range(int(64),bounded,false)[1027003] "temp"
        (2099552 'move' tmp[2099547](2099549 '.v' this[1156721] F14_call_tmp[2098464]))
        (1979320 call chpl__autoDestroy[1407763] tmp[2099547])
        ref tmp[2099554]:_ref(string)[938128] "temp"
        (2099559 'move' tmp[2099554](2099556 '.' this[1156721] F6_chunk[2098448]))
        (1979323 call chpl__autoDestroy[1601673] tmp[2099554])
        ref tmp[2099561]:_ref(string)[938128] "temp"
        (2099566 'move' tmp[2099561](2099563 '.' this[1156721] F3_localx[2098442]))
        (1979326 call chpl__autoDestroy[1601673] tmp[2099561])
      }
      label _enddoSplitWSNoEnc[1979329]
      val tmp[2099568]:_ic_doSplitWSNoEnc[1124664] "temp"
      (2099573 'move' tmp[2099568](2099570 '.v' this[1156721] F2__iterator[2098440]))
      (1919280 call _freeIterator[1142764] tmp[2099568])
    }
    {
      const-val call_tmp[601314]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      ref tmp[2099575]:_ref(string)[938128] "temp"
      (2099580 'move' tmp[2099575](2099577 '.v' this[1156721] F0_this[2098432]))
      (601317 'move' call_tmp[601314](35548 call isEmpty[35064] tmp[2099575]))
      const-val call_tmp[601319]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (601322 'move' call_tmp[601319](35549 call ![7494] call_tmp[601314]))
      const-val call_tmp[601324]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (601327 'move' call_tmp[601324] call_tmp[601319])
      if call_tmp[601319]
      {
        const-val call_tmp[601331]:string[26] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[1905230]:string[26] "temp"
        ref tmp[2099582]:_ref(string)[938128] "temp"
        (2099587 'move' tmp[2099582](2099584 '.v' this[1156721] F0_this[2098432]))
        (35557 call localize[32889] tmp[2099582] ret_tmp[1905230])
        (1905233 'move' call_tmp[601331] ret_tmp[1905230])
        const tmp[2099589]:string[26] "temp"
        (540555 'move' tmp[2099589] call_tmp[601331])
        (2099591 '.=' this[1156721] F27_localThis[2098490] tmp[2099589])
        val tmp[2099595]:bool[10] "temp"
        (540557 'move' tmp[2099595] 0)
        (2099597 '.=' this[1156721] F28_done[2098492] tmp[2099595])
        val tmp[2099601]:bool[10] "temp"
        (540559 'move' tmp[2099601] 0)
        (2099603 '.=' this[1156721] F29_yieldChunk[2098494] tmp[2099601])
        ref tmp[2099607]:_ref(string)[938128] "temp"
        (2099612 'move' tmp[2099607](2099609 '.' this[1156721] F30_chunk[2098496]))
        (1156682 call init[30763] tmp[2099607])
        const-val call_tmp[601336]:bool[10] "dead at end of block" "maybe param" "temp"
        const-val tmp[2099614]:int(64)[13] "temp"
        (2099619 'move' tmp[2099614](2099616 '.v' this[1156721] F1_maxsplit[2098436]))
        (601339 'move' call_tmp[601336](35583 call ==[435744] tmp[2099614] 0))
        const tmp[2099621]:bool[10] "temp"
        (540563 'move' tmp[2099621] call_tmp[601336])
        (2099623 '.=' this[1156721] F31_noSplits[2098498] tmp[2099621])
        const-val call_tmp[601341]:bool[10] "dead at end of block" "maybe param" "temp"
        const-val tmp[2099627]:int(64)[13] "temp"
        (2099632 'move' tmp[2099627](2099629 '.v' this[1156721] F1_maxsplit[2098436]))
        (601344 'move' call_tmp[601341](35592 call >[437788] tmp[2099627] 0))
        const tmp[2099634]:bool[10] "temp"
        (540565 'move' tmp[2099634] call_tmp[601341])
        (2099636 '.=' this[1156721] F32_limitSplits[2098500] tmp[2099634])
        val tmp[2099640]:int(64)[13] "temp"
        (540567 'move' tmp[2099640] 0)
        (2099642 '.=' this[1156721] F33_splitCount[2098502] tmp[2099640])
        ref call_tmp[601348]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
        ref tmp[2099646]:_ref(string)[938128] "temp"
        (2099651 'move' tmp[2099646](2099648 '.' this[1156721] F27_localThis[2098490]))
        (601351 'move' call_tmp[601348](35606 call buffLen[758075] tmp[2099646]))
        const-val call_tmp[601353]:int(64)[13] "dead at end of block" "insert auto destroy" "maybe param" "temp"
        const-val coerce_tmp[1142836]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1142840 'move' coerce_tmp[1142836](1142838 'deref' call_tmp[601348]))
        (601356 'move' call_tmp[601353](35610 call -[1125627] coerce_tmp[1142836]))
        ref tmp[2099653]:_ref(byteIndex)[948948] "temp"
        (2099658 'move' tmp[2099653](2099655 '.' this[1156721] F34_iEnd[2098504]))
        (540569 call init=[28148] tmp[2099653] call_tmp[601353])
        val tmp[2099660]:bool[10] "temp"
        (540571 'move' tmp[2099660] 0)
        (2099662 '.=' this[1156721] F35_inChunk[2098506] tmp[2099660])
        ref tmp[2099666]:_ref(byteIndex)[948948] "temp"
        (2099671 'move' tmp[2099666](2099668 '.' this[1156721] F36_chunkStart[2098508]))
        (1156687 call init[28100] tmp[2099666])
        val _indexOfInterest[35877]:(int(32),byteIndex,int(64))[1122331] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        const-val call_tmp[601360]:_ir__cpIndexLen__ref_string[1122580] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val ret_tmp[1910044]:byteIndex[28173] "temp"
        ref tmp[2099673]:_ref(string)[938128] "temp"
        (2099678 'move' tmp[2099673](2099675 '.' this[1156721] F27_localThis[2098490]))
        (1142853 call _cpIndexLen_default_start[1122220] tmp[2099673] ret_tmp[1910044])
        val tmp[2099680]:byteIndex[28173] "temp"
        (1910047 'move' tmp[2099680] ret_tmp[1910044])
        (2099682 '.=' this[1156721] F38_default_arg_start[2098512] tmp[2099680])
        const-val ret_tmp[1905120]:_ir__cpIndexLen__ref_string[1122580] "temp"
        ref tmp[2099686]:_ref(string)[938128] "temp"
        (2099691 'move' tmp[2099686](2099688 '.' this[1156721] F27_localThis[2098490]))
        ref tmp[2099693]:_ref(byteIndex)[948948] "temp"
        (2099698 'move' tmp[2099693](2099695 '.' this[1156721] F38_default_arg_start[2098512]))
        (35640 call _cpIndexLen[31109] tmp[2099686] tmp[2099693] ret_tmp[1905120])
        (1905123 'move' call_tmp[601360] ret_tmp[1905120])
        val tmp[2099700]:_ic__cpIndexLen__ref_string[1122574] "temp"
        (35887 'move' tmp[2099700](35885 call _getIterator[1122589] call_tmp[601360]))
        (2099702 '.=' this[1156721] F37__iterator[2098510] tmp[2099700])
        val ret[1979430]:_ir__cpIndexLen__ref_string[1122580] "dead after last mention" "RVV" "temp"
        const-val call_tmp[1979432]:string[26] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[1979434]:string[26] "temp"
        ref this[1981473]:_ref(string)[938128] "temp"
        ref tmp[2099706]:_ref(_ic__cpIndexLen__ref_string)[1122717] "temp"
        (2099711 'move' tmp[2099706](2099708 '.' this[1156721] F37__iterator[2098510]))
        (1981478 'move' this[1981473](1981475 '.v' tmp[2099706] F0_this[2094206]))
        (1979437 call localize[32889] this[1981473] ret_tmp[1979434])
        (1979440 'move' call_tmp[1979432] ret_tmp[1979434])
        val tmp[2099713]:string[26] "temp"
        (1979445 'move' tmp[2099713] call_tmp[1979432])
        (2099715 '.=' this[1156721] F39_localThis[2098514] tmp[2099713])
        const-val call_tmp[1979448]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        ref tmp[2099719]:_ref(string)[938128] "temp"
        (2099724 'move' tmp[2099719](2099721 '.' this[1156721] F39_localThis[2098514]))
        (1979450 'move' call_tmp[1979448](1979453 call isASCII[31049] tmp[2099719]))
        const-val call_tmp[1979455]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1979457 'move' call_tmp[1979455] call_tmp[1979448])
        if call_tmp[1979448]
        {
          const-val ret_tmp[1979466]:range(int(64),bounded,false)[1027003] "temp"
          ref this[1981480]:_ref(string)[938128] "temp"
          ref tmp[2099726]:_ref(_ic__cpIndexLen__ref_string)[1122717] "temp"
          (2099731 'move' tmp[2099726](2099728 '.' this[1156721] F37__iterator[2098510]))
          (1981485 'move' this[1981480](1981482 '.v' tmp[2099726] F0_this[2094206]))
          (1979469 call byteIndices[31068] this[1981480] ret_tmp[1979466])
          val tmp[2099733]:range(int(64),bounded,false)[1027003] "temp"
          (1979472 'move' tmp[2099733] ret_tmp[1979466])
          (2099735 '.=' this[1156721] F41_call_tmp[2098518] tmp[2099733])
          val call_tmp[1979475]:_ic_these_range_int64_t_bounded_F[1096892] "dead at end of block" "expr temp" "maybe param" "temp"
          ref tmp[2099739]:_ref(range(int(64),bounded,false))[1027047] "temp"
          (2099744 'move' tmp[2099739](2099741 '.' this[1156721] F41_call_tmp[2098518]))
          (1979477 'move' call_tmp[1979475](1979480 call _getIterator[1095509] tmp[2099739]))
          const-val call_tmp[1979482]:_ir_chpl_bytes__ref_string[1108451] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val ret_tmp[1979484]:_ir_chpl_bytes__ref_string[1108451] "temp"
          ref this[1981487]:_ref(string)[938128] "temp"
          ref tmp[2099746]:_ref(_ic__cpIndexLen__ref_string)[1122717] "temp"
          (2099751 'move' tmp[2099746](2099748 '.' this[1156721] F37__iterator[2098510]))
          (1981492 'move' this[1981487](1981489 '.v' tmp[2099746] F0_this[2094206]))
          (1979487 call chpl_bytes[33577] this[1981487] ret_tmp[1979484])
          (1979490 'move' call_tmp[1979482] ret_tmp[1979484])
          val call_tmp[1979493]:_ic_chpl_bytes__ref_string[1108445] "dead at end of block" "expr temp" "maybe param" "temp"
          (1979495 'move' call_tmp[1979493](1979498 call _getIterator[1108460] call_tmp[1979482]))
          const-val ret_tmp[1979500]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108755] "temp"
          (1979503 call _build_tuple[1108713] call_tmp[1979475] call_tmp[1979493] ret_tmp[1979500])
          val tmp[2099753]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108755] "temp"
          (1979507 'move' tmp[2099753] ret_tmp[1979500])
          (2099755 '.=' this[1156721] F40__iterator[2098516] tmp[2099753])
          val tmp[2099759]:_ic_these_range_int64_t_bounded_F[1096892] "temp"
          const-val tmp[2099765]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108755] "temp"
          (2099770 'move' tmp[2099765](2099767 '.v' this[1156721] F40__iterator[2098516]))
          (1979512 'move' tmp[2099759](1979514 '.v' tmp[2099765] x0[1108751]))
          (2099761 '.=' this[1156721] F42__iterator[2098520] tmp[2099759])
          val tmp[2099772]:_ic_chpl_bytes__ref_string[1108445] "temp"
          const-val tmp[2099778]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108755] "temp"
          (2099783 'move' tmp[2099778](2099780 '.v' this[1156721] F40__iterator[2098516]))
          (1979519 'move' tmp[2099772](1979521 '.v' tmp[2099778] x1[1108753]))
          (2099774 '.=' this[1156721] F43__iterator[2098522] tmp[2099772])
          val tmp[2099785]:_ic_these_range_int64_t_bounded_F[1096892] "temp"
          (2099790 'move' tmp[2099785](2099787 '.v' this[1156721] F42__iterator[2098520]))
          (1979526 call zip1[1096927] tmp[2099785])
          val tmp[2099792]:_ic_chpl_bytes__ref_string[1108445] "temp"
          (2099797 'move' tmp[2099792](2099794 '.v' this[1156721] F43__iterator[2098522]))
          (1979530 call zip1[1108480] tmp[2099792])
          const-val isFinished[1979532]:bool[10] "temp"
          val hasMore[1979534]:bool[10] "temp"
          CForLoop[1979536]
          {
            val tmp[2099799]:_ic_chpl_bytes__ref_string[1108445] "temp"
            (2099804 'move' tmp[2099799](2099801 '.v' this[1156721] F43__iterator[2098522]))
            (1979563 call zip2[1108489] tmp[2099799])
            const-val retTmp[1979566]:int(64)[13] "temp"
            val tmp[2099806]:_ic_chpl_bytes__ref_string[1108445] "temp"
            (2099811 'move' tmp[2099806](2099808 '.v' this[1156721] F43__iterator[2098522]))
            (1979568 'move' retTmp[1979566](1979571 call hasMore[1108516] tmp[2099806]))
            (1979573 'move' hasMore[1979534](1979575 'cast' bool[10] retTmp[1979566]))
            (1979578 'move' isFinished[1979532](1979580 '!' hasMore[1979534]))
            if isFinished[1979532]
            {
              (1979584 'chpl_error' c"zippered iterations have non-equal lengths")
            }
            val tmp[2099813]:_ic_chpl_bytes__ref_string[1108445] "temp"
            (2099818 'move' tmp[2099813](2099815 '.v' this[1156721] F43__iterator[2098522]))
            (1979588 'move' _index[1979603](1979591 call getValue[1108525] tmp[2099813]))
            val tmp[2099820]:_ic_these_range_int64_t_bounded_F[1096892] "temp"
            (2099825 'move' tmp[2099820](2099822 '.v' this[1156721] F42__iterator[2098520]))
            (1979595 call zip2[1096936] tmp[2099820])
            val tmp[2099827]:_ic_these_range_int64_t_bounded_F[1096892] "temp"
            (2099832 'move' tmp[2099827](2099829 '.v' this[1156721] F42__iterator[2098520]))
            (1979598 'move' _index[1979609](1979601 call getValue[1096972] tmp[2099827]))
            val _index[1979603]:uint(8)[100] "temp"
            val tmp[2099834]:(int(64),uint(8))[1111229] "temp"
            (2099839 'move' tmp[2099834](2099836 '.v' this[1156721] F44__indexOfInterest[2098524]))
            (1979605 '.=' tmp[2099834] x1[1111227] _index[1979603])
            (2099841 '.=' this[1156721] F44__indexOfInterest[2098524] tmp[2099834])
            val _index[1979609]:int(64)[13] "temp"
            val tmp[2099845]:(int(64),uint(8))[1111229] "temp"
            (2099850 'move' tmp[2099845](2099847 '.v' this[1156721] F44__indexOfInterest[2098524]))
            (1979611 '.=' tmp[2099845] x0[1111225] _index[1979609])
            (2099852 '.=' this[1156721] F44__indexOfInterest[2098524] tmp[2099845])
            1
            const-val i[1979616]:int(64)[13] "const" "index var" "insert auto destroy"
            const-val tmp[2099856]:(int(64),uint(8))[1111229] "temp"
            (2099861 'move' tmp[2099856](2099858 '.v' this[1156721] F44__indexOfInterest[2098524]))
            (1979618 'move' i[1979616](1979620 '.v' tmp[2099856] x0[1111225]))
            const-val b[1979623]:uint(8)[100] "const" "index var" "insert auto destroy"
            const-val tmp[2099863]:(int(64),uint(8))[1111229] "temp"
            (2099868 'move' tmp[2099863](2099865 '.v' this[1156721] F44__indexOfInterest[2098524]))
            (1979625 'move' b[1979623](1979627 '.v' tmp[2099863] x1[1111227]))
            const-val yret[1979630]:(int(32),byteIndex,int(64))[1122331] "dead after last mention" "YVV" "temp"
            val call_tmp[1979632]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            const-val call_tmp[1979634]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
            (1979636 'move' call_tmp[1979634](1979638 'cast' int(32)[95] b[1979623]))
            ref tmp[2099870]:_ref(byteIndex)[948948] "temp"
            (2099875 'move' tmp[2099870](2099872 '.' this[1156721] F46_ret_tmp[2098528]))
            (1979646 call _cast[39486] i[1979616] tmp[2099870])
            val tmp[2099877]:byteIndex[28173] "temp"
            const-val tmp[2099883]:byteIndex[28173] "temp"
            (2099888 'move' tmp[2099883](2099885 '.v' this[1156721] F46_ret_tmp[2098528]))
            (1979649 'move' tmp[2099877] tmp[2099883])
            (2099879 '.=' this[1156721] F45_call_tmp[2098526] tmp[2099877])
            const-val call_tmp[1979652]:(int(32),byteIndex,int(64))[1122331] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            ref tmp[2099890]:_ref(byteIndex)[948948] "temp"
            (2099895 'move' tmp[2099890](2099892 '.' this[1156721] F45_call_tmp[2098526]))
            ref tmp[2099897]:_ref((int(32),byteIndex,int(64)))[1122403] "temp"
            (2099902 'move' tmp[2099897](2099899 '.' this[1156721] F47_ret_tmp[2098530]))
            (1979657 call _build_tuple[1122281] call_tmp[1979634] tmp[2099890] 1 tmp[2099897])
            const-val tmp[2099904]:(int(32),byteIndex,int(64))[1122331] "temp"
            (2099909 'move' tmp[2099904](2099906 '.v' this[1156721] F47_ret_tmp[2098530]))
            (1979662 'move' call_tmp[1979652] tmp[2099904])
            (1979665 'move' yret[1979630] call_tmp[1979652])
            const-val _yieldedIndex[1980247]:(int(32),byteIndex,int(64))[1122331] "temp"
            (1980912 'move' _yieldedIndex[1980247] call_tmp[1979652])
            1
            const-val c[1980250]:int(32)[95] "const" "index var" "insert auto destroy"
            (1980252 'move' c[1980250](1980254 '.v' _yieldedIndex[1980247] x0[1122325]))
            ref i[1980257]:_ref(byteIndex)[948948] "index var" "insert auto destroy"
            (1980259 'move' i[1980257](1980261 '.v' _yieldedIndex[1980247] x1[1122327]))
            const-val nBytes[1980264]:int(64)[13] "const" "index var" "insert auto destroy"
            (1980266 'move' nBytes[1980264](1980268 '.v' _yieldedIndex[1980247] x2[1122329]))
            const-val call_tmp[1980271]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val tmp[2099911]:bool[10] "temp"
            (2099916 'move' tmp[2099911](2099913 '.v' this[1156721] F31_noSplits[2098498]))
            (1980273 'move' call_tmp[1980271] tmp[2099911])
            const-val tmp[2099918]:bool[10] "temp"
            (2099923 'move' tmp[2099918](2099920 '.v' this[1156721] F31_noSplits[2098498]))
            if tmp[2099918]
            {
              ref tmp[2099925]:_ref(bool)[937388] "temp"
              (2099930 'move' tmp[2099925](2099927 '.' this[1156721] F28_done[2098492]))
              (1980279 call =[435290] tmp[2099925] 1)
              const-val call_tmp[1980282]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              ref tmp[2099932]:_ref(string)[938128] "temp"
              (2099937 'move' tmp[2099932](2099934 '.' this[1156721] F27_localThis[2098490]))
              (1980284 'move' call_tmp[1980282](1980287 call isSpace[36843] tmp[2099932]))
              const-val call_tmp[1980289]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1980291 'move' call_tmp[1980289](1980294 call ![7494] call_tmp[1980282]))
              const-val call_tmp[1980296]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1980298 'move' call_tmp[1980296] call_tmp[1980289])
              if call_tmp[1980289]
              {
                ref tmp[2099939]:_ref(string)[938128] "temp"
                (2099944 'move' tmp[2099939](2099941 '.' this[1156721] F30_chunk[2098496]))
                ref tmp[2099946]:_ref(string)[938128] "temp"
                (2099951 'move' tmp[2099946](2099948 '.' this[1156721] F27_localThis[2098490]))
                (1980304 call =[38272] tmp[2099939] tmp[2099946])
                ref tmp[2099953]:_ref(bool)[937388] "temp"
                (2099958 'move' tmp[2099953](2099955 '.' this[1156721] F29_yieldChunk[2098494]))
                (1980308 call =[435290] tmp[2099953] 1)
              }
            }
            {
              const-val call_tmp[1980313]:bool[10] "dead at end of block" "maybe param" "temp"
              (1980315 'move' call_tmp[1980313](1980318 call codepoint_isWhitespace[39156] c[1980250]))
              const-val cSpace[1980320]:bool[10] "dead at end of block" "insert auto destroy"
              (1980322 'move' cSpace[1980320] call_tmp[1980313])
              const-val tmp[1980325]:bool[10] "dead after last mention" "maybe param" "temp"
              const-val tmp[2099960]:bool[10] "temp"
              (2099965 'move' tmp[2099960](2099962 '.v' this[1156721] F35_inChunk[2098506]))
              (1980327 'move' tmp[1980325] tmp[2099960])
              val tmp[1980330]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
              const-val tmp[1980332]:bool[10] "dead after last mention" "maybe param" "temp"
              const-val call_tmp[1980334]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val tmp[2099967]:bool[10] "temp"
              (2099972 'move' tmp[2099967](2099969 '.v' this[1156721] F35_inChunk[2098506]))
              (1980336 'move' call_tmp[1980334] tmp[2099967])
              const-val tmp[2099974]:bool[10] "temp"
              (2099979 'move' tmp[2099974](2099976 '.v' this[1156721] F35_inChunk[2098506]))
              (1980339 'move' tmp[1980332] tmp[2099974])
              const-val tmp[2099981]:bool[10] "temp"
              (2099986 'move' tmp[2099981](2099983 '.v' this[1156721] F35_inChunk[2098506]))
              if tmp[2099981]
              {
                (1980344 'move' tmp[1980330] 1)
              }
              {
                const-val tmp[1980348]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                (1980350 'move' tmp[1980348] cSpace[1980320])
                (1980353 'move' tmp[1980330] cSpace[1980320])
              }
              const-val call_tmp[1980357]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1980359 'move' call_tmp[1980357](1980362 call ![7494] tmp[1980330]))
              const-val call_tmp[1980364]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1980366 'move' call_tmp[1980364] call_tmp[1980357])
              if call_tmp[1980357]
              {
                ref tmp[2099988]:_ref(byteIndex)[948948] "temp"
                (2099993 'move' tmp[2099988](2099990 '.' this[1156721] F36_chunkStart[2098508]))
                (1980372 call =[38194] tmp[2099988] i[1980257])
                ref tmp[2099995]:_ref(bool)[937388] "temp"
                (2100000 'move' tmp[2099995](2099997 '.' this[1156721] F35_inChunk[2098506]))
                (1980376 call =[435290] tmp[2099995] 1)
                const-val call_tmp[1980379]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                ref tmp[2100002]:_ref(byteIndex)[948948] "temp"
                (2100007 'move' tmp[2100002](2100004 '.' this[1156721] F48_ret_tmp[2098532]))
                (1980384 call -[28857] i[1980257] 1 tmp[2100002])
                const-val tmp[2100009]:byteIndex[28173] "temp"
                (2100014 'move' tmp[2100009](2100011 '.v' this[1156721] F48_ret_tmp[2098532]))
                (1980388 'move' call_tmp[1980379] tmp[2100009])
                const-val call_tmp[1980391]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                ref tmp[2100016]:_ref(byteIndex)[948948] "temp"
                (2100021 'move' tmp[2100016](2100018 '.' this[1156721] F49_ret_tmp[2098534]))
                (1980396 call +[28725] call_tmp[1980379] nBytes[1980264] tmp[2100016])
                const-val tmp[2100023]:byteIndex[28173] "temp"
                (2100028 'move' tmp[2100023](2100025 '.v' this[1156721] F49_ret_tmp[2098534]))
                (1980400 'move' call_tmp[1980391] tmp[2100023])
                const-val call_tmp[1980403]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                ref tmp[2100030]:_ref(byteIndex)[948948] "temp"
                (2100035 'move' tmp[2100030](2100032 '.' this[1156721] F34_iEnd[2098504]))
                (1980405 'move' call_tmp[1980403](1980408 call >[28575] call_tmp[1980391] tmp[2100030]))
                const-val call_tmp[1980411]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1980413 'move' call_tmp[1980411] call_tmp[1980403])
                if call_tmp[1980403]
                {
                  const-val call_tmp[1980418]:range(byteIndex,boundedLow,false)[1143592] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  ref tmp[2100037]:_ref(byteIndex)[948948] "temp"
                  (2100042 'move' tmp[2100037](2100039 '.' this[1156721] F36_chunkStart[2098508]))
                  ref tmp[2100044]:_ref(range(byteIndex,boundedLow,false))[1143636] "temp"
                  (2100049 'move' tmp[2100044](2100046 '.' this[1156721] F50_ret_tmp[2098536]))
                  (1980423 call chpl_build_low_bounded_range[1142899] tmp[2100037] tmp[2100044])
                  const-val tmp[2100051]:range(byteIndex,boundedLow,false)[1143592] "temp"
                  (2100056 'move' tmp[2100051](2100053 '.v' this[1156721] F50_ret_tmp[2098536]))
                  (1980426 'move' call_tmp[1980418] tmp[2100051])
                  const-val call_tmp[1980429]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  ref tmp[2100058]:_ref(string)[938128] "temp"
                  (2100063 'move' tmp[2100058](2100060 '.' this[1156721] F27_localThis[2098490]))
                  ref tmp[2100065]:_ref(string)[938128] "temp"
                  (2100070 'move' tmp[2100065](2100067 '.' this[1156721] F51_ret_tmp[2098538]))
                  (1980434 call this[1143912] tmp[2100058] call_tmp[1980418] tmp[2100065])
                  const-val tmp[2100072]:string[26] "temp"
                  (2100077 'move' tmp[2100072](2100074 '.v' this[1156721] F51_ret_tmp[2098538]))
                  (1980438 'move' call_tmp[1980429] tmp[2100072])
                  ref tmp[2100079]:_ref(string)[938128] "temp"
                  (2100084 'move' tmp[2100079](2100081 '.' this[1156721] F30_chunk[2098496]))
                  (1980442 call =[38272] tmp[2100079] call_tmp[1980429])
                  (1980446 call chpl__autoDestroy[1601673] call_tmp[1980429])
                  (1980449 call chpl__autoDestroy[1682957] call_tmp[1980418])
                  ref tmp[2100086]:_ref(bool)[937388] "temp"
                  (2100091 'move' tmp[2100086](2100088 '.' this[1156721] F29_yieldChunk[2098494]))
                  (1980452 call =[435290] tmp[2100086] 1)
                  ref tmp[2100093]:_ref(bool)[937388] "temp"
                  (2100098 'move' tmp[2100093](2100095 '.' this[1156721] F28_done[2098492]))
                  (1980456 call =[435290] tmp[2100093] 1)
                }
                (1980461 call chpl__autoDestroy[1601936] call_tmp[1980391])
                (1980464 call chpl__autoDestroy[1601936] call_tmp[1980379])
              }
              {
                const-val call_tmp[1980467]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val tmp[2100100]:bool[10] "temp"
                (2100105 'move' tmp[2100100](2100102 '.v' this[1156721] F35_inChunk[2098506]))
                (1980469 'move' call_tmp[1980467] tmp[2100100])
                if call_tmp[1980467]
                {
                  const-val call_tmp[1980474]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1980476 'move' call_tmp[1980474] cSpace[1980320])
                  if cSpace[1980320]
                  {
                    ref tmp[2100107]:_ref(int(64))[936761] "temp"
                    (2100112 'move' tmp[2100107](2100109 '.' this[1156721] F33_splitCount[2098502]))
                    (1980482 call +=[451431] tmp[2100107] 1)
                    const-val tmp[1980485]:bool[10] "dead after last mention" "maybe param" "temp"
                    const-val tmp[2100114]:bool[10] "temp"
                    (2100119 'move' tmp[2100114](2100116 '.v' this[1156721] F32_limitSplits[2098500]))
                    (1980487 'move' tmp[1980485] tmp[2100114])
                    val tmp[1980490]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                    const-val tmp[1980492]:bool[10] "dead after last mention" "maybe param" "temp"
                    const-val call_tmp[1980494]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val tmp[2100121]:bool[10] "temp"
                    (2100126 'move' tmp[2100121](2100123 '.v' this[1156721] F32_limitSplits[2098500]))
                    (1980496 'move' call_tmp[1980494] tmp[2100121])
                    const-val tmp[2100128]:bool[10] "temp"
                    (2100133 'move' tmp[2100128](2100130 '.v' this[1156721] F32_limitSplits[2098500]))
                    (1980499 'move' tmp[1980492] tmp[2100128])
                    const-val tmp[2100135]:bool[10] "temp"
                    (2100140 'move' tmp[2100135](2100137 '.v' this[1156721] F32_limitSplits[2098500]))
                    if tmp[2100135]
                    {
                      const-val tmp[1980504]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                      const-val call_tmp[1980506]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      const-val tmp[2100142]:int(64)[13] "temp"
                      (2100147 'move' tmp[2100142](2100144 '.v' this[1156721] F33_splitCount[2098502]))
                      const-val tmp[2100149]:int(64)[13] "temp"
                      (2100154 'move' tmp[2100149](2100151 '.v' this[1156721] F1_maxsplit[2098436]))
                      (1980508 'move' call_tmp[1980506](1980511 call >[437788] tmp[2100142] tmp[2100149]))
                      (1980514 'move' tmp[1980504] call_tmp[1980506])
                      (1980517 'move' tmp[1980490] call_tmp[1980506])
                    }
                    {
                      (1980521 'move' tmp[1980490] 0)
                    }
                    const-val call_tmp[1980525]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1980527 'move' call_tmp[1980525] tmp[1980490])
                    if tmp[1980490]
                    {
                      const-val call_tmp[1980532]:range(byteIndex,boundedLow,false)[1143592] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                      ref tmp[2100156]:_ref(byteIndex)[948948] "temp"
                      (2100161 'move' tmp[2100156](2100158 '.' this[1156721] F36_chunkStart[2098508]))
                      ref tmp[2100163]:_ref(range(byteIndex,boundedLow,false))[1143636] "temp"
                      (2100168 'move' tmp[2100163](2100165 '.' this[1156721] F52_ret_tmp[2098540]))
                      (1980537 call chpl_build_low_bounded_range[1142899] tmp[2100156] tmp[2100163])
                      const-val tmp[2100170]:range(byteIndex,boundedLow,false)[1143592] "temp"
                      (2100175 'move' tmp[2100170](2100172 '.v' this[1156721] F52_ret_tmp[2098540]))
                      (1980540 'move' call_tmp[1980532] tmp[2100170])
                      const-val call_tmp[1980543]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                      ref tmp[2100177]:_ref(string)[938128] "temp"
                      (2100182 'move' tmp[2100177](2100179 '.' this[1156721] F27_localThis[2098490]))
                      ref tmp[2100184]:_ref(string)[938128] "temp"
                      (2100189 'move' tmp[2100184](2100186 '.' this[1156721] F53_ret_tmp[2098542]))
                      (1980548 call this[1143912] tmp[2100177] call_tmp[1980532] tmp[2100184])
                      const-val tmp[2100191]:string[26] "temp"
                      (2100196 'move' tmp[2100191](2100193 '.v' this[1156721] F53_ret_tmp[2098542]))
                      (1980552 'move' call_tmp[1980543] tmp[2100191])
                      ref tmp[2100198]:_ref(string)[938128] "temp"
                      (2100203 'move' tmp[2100198](2100200 '.' this[1156721] F30_chunk[2098496]))
                      (1980556 call =[38272] tmp[2100198] call_tmp[1980543])
                      (1980560 call chpl__autoDestroy[1601673] call_tmp[1980543])
                      (1980563 call chpl__autoDestroy[1682957] call_tmp[1980532])
                      ref tmp[2100205]:_ref(bool)[937388] "temp"
                      (2100210 'move' tmp[2100205](2100207 '.' this[1156721] F29_yieldChunk[2098494]))
                      (1980566 call =[435290] tmp[2100205] 1)
                      ref tmp[2100212]:_ref(bool)[937388] "temp"
                      (2100217 'move' tmp[2100212](2100214 '.' this[1156721] F28_done[2098492]))
                      (1980570 call =[435290] tmp[2100212] 1)
                    }
                    {
                      const-val call_tmp[1980574]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                      ref tmp[2100219]:_ref(byteIndex)[948948] "temp"
                      (2100224 'move' tmp[2100219](2100221 '.' this[1156721] F54_ret_tmp[2098544]))
                      (1980579 call -[28857] i[1980257] 1 tmp[2100219])
                      const-val tmp[2100226]:byteIndex[28173] "temp"
                      (2100231 'move' tmp[2100226](2100228 '.v' this[1156721] F54_ret_tmp[2098544]))
                      (1980583 'move' call_tmp[1980574] tmp[2100226])
                      const-val call_tmp[1980586]:range(byteIndex,bounded,false)[1025981] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                      ref tmp[2100233]:_ref(byteIndex)[948948] "temp"
                      (2100238 'move' tmp[2100233](2100235 '.' this[1156721] F36_chunkStart[2098508]))
                      ref tmp[2100240]:_ref(range(byteIndex,bounded,false))[1025990] "temp"
                      (2100245 'move' tmp[2100240](2100242 '.' this[1156721] F55_ret_tmp[2098546]))
                      (1980591 call chpl_build_bounded_range[1123443] tmp[2100233] call_tmp[1980574] tmp[2100240])
                      const-val tmp[2100247]:range(byteIndex,bounded,false)[1025981] "temp"
                      (2100252 'move' tmp[2100247](2100249 '.v' this[1156721] F55_ret_tmp[2098546]))
                      (1980595 'move' call_tmp[1980586] tmp[2100247])
                      const-val call_tmp[1980598]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                      ref tmp[2100254]:_ref(string)[938128] "temp"
                      (2100259 'move' tmp[2100254](2100256 '.' this[1156721] F27_localThis[2098490]))
                      ref tmp[2100261]:_ref(string)[938128] "temp"
                      (2100266 'move' tmp[2100261](2100263 '.' this[1156721] F56_ret_tmp[2098548]))
                      (1980603 call this[1123689] tmp[2100254] call_tmp[1980586] tmp[2100261])
                      const-val tmp[2100268]:string[26] "temp"
                      (2100273 'move' tmp[2100268](2100270 '.v' this[1156721] F56_ret_tmp[2098548]))
                      (1980607 'move' call_tmp[1980598] tmp[2100268])
                      ref tmp[2100275]:_ref(string)[938128] "temp"
                      (2100280 'move' tmp[2100275](2100277 '.' this[1156721] F30_chunk[2098496]))
                      (1980611 call =[38272] tmp[2100275] call_tmp[1980598])
                      (1980615 call chpl__autoDestroy[1601673] call_tmp[1980598])
                      (1980618 call chpl__autoDestroy[1674473] call_tmp[1980586])
                      (1980621 call chpl__autoDestroy[1601936] call_tmp[1980574])
                      ref tmp[2100282]:_ref(bool)[937388] "temp"
                      (2100287 'move' tmp[2100282](2100284 '.' this[1156721] F29_yieldChunk[2098494]))
                      (1980624 call =[435290] tmp[2100282] 1)
                      ref tmp[2100289]:_ref(bool)[937388] "temp"
                      (2100294 'move' tmp[2100289](2100291 '.' this[1156721] F35_inChunk[2098506]))
                      (1980628 call =[435290] tmp[2100289] 0)
                    }
                  }
                  {
                    const-val call_tmp[1980633]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    ref tmp[2100296]:_ref(byteIndex)[948948] "temp"
                    (2100301 'move' tmp[2100296](2100298 '.' this[1156721] F57_ret_tmp[2098550]))
                    (1980638 call -[28857] i[1980257] 1 tmp[2100296])
                    const-val tmp[2100303]:byteIndex[28173] "temp"
                    (2100308 'move' tmp[2100303](2100305 '.v' this[1156721] F57_ret_tmp[2098550]))
                    (1980642 'move' call_tmp[1980633] tmp[2100303])
                    const-val call_tmp[1980645]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    ref tmp[2100310]:_ref(byteIndex)[948948] "temp"
                    (2100315 'move' tmp[2100310](2100312 '.' this[1156721] F58_ret_tmp[2098552]))
                    (1980650 call +[28725] call_tmp[1980633] nBytes[1980264] tmp[2100310])
                    const-val tmp[2100317]:byteIndex[28173] "temp"
                    (2100322 'move' tmp[2100317](2100319 '.v' this[1156721] F58_ret_tmp[2098552]))
                    (1980654 'move' call_tmp[1980645] tmp[2100317])
                    const-val call_tmp[1980657]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    ref tmp[2100324]:_ref(byteIndex)[948948] "temp"
                    (2100329 'move' tmp[2100324](2100326 '.' this[1156721] F34_iEnd[2098504]))
                    (1980659 'move' call_tmp[1980657](1980662 call >[28575] call_tmp[1980645] tmp[2100324]))
                    const-val call_tmp[1980665]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1980667 'move' call_tmp[1980665] call_tmp[1980657])
                    if call_tmp[1980657]
                    {
                      const-val call_tmp[1980672]:range(byteIndex,boundedLow,false)[1143592] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                      ref tmp[2100331]:_ref(byteIndex)[948948] "temp"
                      (2100336 'move' tmp[2100331](2100333 '.' this[1156721] F36_chunkStart[2098508]))
                      ref tmp[2100338]:_ref(range(byteIndex,boundedLow,false))[1143636] "temp"
                      (2100343 'move' tmp[2100338](2100340 '.' this[1156721] F59_ret_tmp[2098554]))
                      (1980677 call chpl_build_low_bounded_range[1142899] tmp[2100331] tmp[2100338])
                      const-val tmp[2100345]:range(byteIndex,boundedLow,false)[1143592] "temp"
                      (2100350 'move' tmp[2100345](2100347 '.v' this[1156721] F59_ret_tmp[2098554]))
                      (1980680 'move' call_tmp[1980672] tmp[2100345])
                      const-val call_tmp[1980683]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                      ref tmp[2100352]:_ref(string)[938128] "temp"
                      (2100357 'move' tmp[2100352](2100354 '.' this[1156721] F27_localThis[2098490]))
                      ref tmp[2100359]:_ref(string)[938128] "temp"
                      (2100364 'move' tmp[2100359](2100361 '.' this[1156721] F60_ret_tmp[2098556]))
                      (1980688 call this[1143912] tmp[2100352] call_tmp[1980672] tmp[2100359])
                      const-val tmp[2100366]:string[26] "temp"
                      (2100371 'move' tmp[2100366](2100368 '.v' this[1156721] F60_ret_tmp[2098556]))
                      (1980692 'move' call_tmp[1980683] tmp[2100366])
                      ref tmp[2100373]:_ref(string)[938128] "temp"
                      (2100378 'move' tmp[2100373](2100375 '.' this[1156721] F30_chunk[2098496]))
                      (1980696 call =[38272] tmp[2100373] call_tmp[1980683])
                      (1980700 call chpl__autoDestroy[1601673] call_tmp[1980683])
                      (1980703 call chpl__autoDestroy[1682957] call_tmp[1980672])
                      ref tmp[2100380]:_ref(bool)[937388] "temp"
                      (2100385 'move' tmp[2100380](2100382 '.' this[1156721] F29_yieldChunk[2098494]))
                      (1980706 call =[435290] tmp[2100380] 1)
                      ref tmp[2100387]:_ref(bool)[937388] "temp"
                      (2100392 'move' tmp[2100387](2100389 '.' this[1156721] F28_done[2098492]))
                      (1980710 call =[435290] tmp[2100387] 1)
                    }
                    (1980715 call chpl__autoDestroy[1601936] call_tmp[1980645])
                    (1980718 call chpl__autoDestroy[1601936] call_tmp[1980633])
                  }
                }
              }
            }
            const-val call_tmp[1980724]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val tmp[2100394]:bool[10] "temp"
            (2100399 'move' tmp[2100394](2100396 '.v' this[1156721] F29_yieldChunk[2098494]))
            (1980726 'move' call_tmp[1980724] tmp[2100394])
            if call_tmp[1980724]
            {
              const-val yret[1980731]:string[26] "dead after last mention" "YVV" "temp"
              val tmp[2100401]:string[26] "temp"
              ref tmp[2100407]:_ref(string)[938128] "temp"
              (2100412 'move' tmp[2100407](2100409 '.' this[1156721] F30_chunk[2098496]))
              (1980735 'move' tmp[2100401](1980738 call chpl__initCopy[981537] tmp[2100407]))
              (2100403 '.=' this[1156721] F82__yield_expr_tmp_[2098600] tmp[2100401])
              const-val tmp[2100414]:string[26] "temp"
              (2100419 'move' tmp[2100414](2100416 '.v' this[1156721] F82__yield_expr_tmp_[2098600]))
              (1980740 'move' yret[1980731] tmp[2100414])
              val tmp[2100425]:string[26] "temp"
              (2100430 'move' tmp[2100425](2100427 '.v' this[1156721] F82__yield_expr_tmp_[2098600]))
              (2100422 '.=' this[1156721] value[2098604] tmp[2100425])
              (2101654 '.=' this[1156721] more[1156696] 3)
              gotoIterEnd _end[2101642] _end[2101642]
              label _jump_break_3[2101662]
              ref moreRef1[1980848]:_ref(int(64))[936761] "temp"
              ref tmp[2100432]:_ref(_ic_these_range_int64_t_bounded_F)[1097035] "temp"
              (2100437 'move' tmp[2100432](2100434 '.' this[1156721] F42__iterator[2098520]))
              (1980850 'move' moreRef1[1980848](1980852 '.' tmp[2100432] more[1096895]))
              const-val moreVal1[1980855]:int(64)[13] "const" "temp"
              (1980857 '=' moreVal1[1980855] moreRef1[1980848])
              const-val moreValNeg1[1980860]:int(64)[13] "const" "temp"
              (1980862 'move' moreValNeg1[1980860](1980864 'u-' moreVal1[1980855]))
              (1980866 '=' moreRef1[1980848] moreValNeg1[1980860])
              val tmp[2100439]:_ic_these_range_int64_t_bounded_F[1096892] "temp"
              (2100444 'move' tmp[2100439](2100441 '.v' this[1156721] F42__iterator[2098520]))
              (1980870 call advance[1096918] tmp[2100439])
              ref moreRef2[1980872]:_ref(int(64))[936761] "temp"
              ref tmp[2100446]:_ref(_ic_chpl_bytes__ref_string)[1108588] "temp"
              (2100451 'move' tmp[2100446](2100448 '.' this[1156721] F43__iterator[2098522]))
              (1980874 'move' moreRef2[1980872](1980876 '.' tmp[2100446] more[1108448]))
              const-val moreVal2[1980879]:int(64)[13] "const" "temp"
              (1980881 '=' moreVal2[1980879] moreRef2[1980872])
              const-val moreValNeg2[1980884]:int(64)[13] "const" "temp"
              (1980886 'move' moreValNeg2[1980884](1980888 'u-' moreVal2[1980879]))
              (1980890 '=' moreRef2[1980872] moreValNeg2[1980884])
              val tmp[2100453]:_ic_chpl_bytes__ref_string[1108445] "temp"
              (2100458 'move' tmp[2100453](2100455 '.v' this[1156721] F43__iterator[2098522]))
              (1980894 call advance[1108471] tmp[2100453])
              ref tmp[2100460]:_ref(byteIndex)[948948] "temp"
              (2100465 'move' tmp[2100460](2100462 '.' this[1156721] F45_call_tmp[2098526]))
              (1980897 call chpl__autoDestroy[1601936] tmp[2100460])
              ref tmp[2100467]:_ref((_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string))[1108863] "temp"
              (2100472 'move' tmp[2100467](2100469 '.' this[1156721] F40__iterator[2098516]))
              (1980900 call _freeIterator[1108913] tmp[2100467])
              ref tmp[2100474]:_ref((_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string))[1108863] "temp"
              (2100479 'move' tmp[2100474](2100476 '.' this[1156721] F40__iterator[2098516]))
              (1980903 call chpl__autoDestroy[1681548] tmp[2100474])
              const-val tmp[2100481]:range(int(64),bounded,false)[1027003] "temp"
              (2100486 'move' tmp[2100481](2100483 '.v' this[1156721] F41_call_tmp[2098518]))
              (1980906 call chpl__autoDestroy[1407763] tmp[2100481])
              ref tmp[2100488]:_ref(string)[938128] "temp"
              (2100493 'move' tmp[2100488](2100490 '.' this[1156721] F39_localThis[2098514]))
              (1980909 call chpl__autoDestroy[1601673] tmp[2100488])
              val tmp[2100495]:_ic__cpIndexLen__ref_string[1122574] "temp"
              (2100500 'move' tmp[2100495](2100497 '.v' this[1156721] F37__iterator[2098510]))
              (1980748 call _freeIterator[1122762] tmp[2100495])
              ref tmp[2100502]:_ref(byteIndex)[948948] "temp"
              (2100507 'move' tmp[2100502](2100504 '.' this[1156721] F38_default_arg_start[2098512]))
              (1980751 call chpl__autoDestroy[1601936] tmp[2100502])
              ref tmp[2100509]:_ref(byteIndex)[948948] "temp"
              (2100514 'move' tmp[2100509](2100511 '.' this[1156721] F36_chunkStart[2098508]))
              (1980754 call chpl__autoDestroy[1601936] tmp[2100509])
              ref tmp[2100516]:_ref(byteIndex)[948948] "temp"
              (2100521 'move' tmp[2100516](2100518 '.' this[1156721] F34_iEnd[2098504]))
              (1980757 call chpl__autoDestroy[1601936] tmp[2100516])
              ref tmp[2100523]:_ref(string)[938128] "temp"
              (2100528 'move' tmp[2100523](2100525 '.' this[1156721] F30_chunk[2098496]))
              (1980760 call chpl__autoDestroy[1601673] tmp[2100523])
              ref tmp[2100530]:_ref(string)[938128] "temp"
              (2100535 'move' tmp[2100530](2100532 '.' this[1156721] F27_localThis[2098490]))
              (1980763 call chpl__autoDestroy[1601673] tmp[2100530])
              gotoReturn _endsplit[1889451] _endsplit[1889451]
              label _jump_3[2101660]
              ref tmp[2100537]:_ref(bool)[937388] "temp"
              (2100542 'move' tmp[2100537](2100539 '.' this[1156721] F29_yieldChunk[2098494]))
              (1980769 call =[435290] tmp[2100537] 0)
            }
            const-val call_tmp[1980773]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val tmp[2100544]:bool[10] "temp"
            (2100549 'move' tmp[2100544](2100546 '.v' this[1156721] F28_done[2098492]))
            (1980775 'move' call_tmp[1980773] tmp[2100544])
            if call_tmp[1980773]
            {
              ref moreRef1[1980784]:_ref(int(64))[936761] "temp"
              ref tmp[2100551]:_ref(_ic_these_range_int64_t_bounded_F)[1097035] "temp"
              (2100556 'move' tmp[2100551](2100553 '.' this[1156721] F42__iterator[2098520]))
              (1980786 'move' moreRef1[1980784](1980788 '.' tmp[2100551] more[1096895]))
              const-val moreVal1[1980791]:int(64)[13] "const" "temp"
              (1980793 '=' moreVal1[1980791] moreRef1[1980784])
              const-val moreValNeg1[1980796]:int(64)[13] "const" "temp"
              (1980798 'move' moreValNeg1[1980796](1980800 'u-' moreVal1[1980791]))
              (1980802 '=' moreRef1[1980784] moreValNeg1[1980796])
              val tmp[2100558]:_ic_these_range_int64_t_bounded_F[1096892] "temp"
              (2100563 'move' tmp[2100558](2100560 '.v' this[1156721] F42__iterator[2098520]))
              (1980806 call advance[1096918] tmp[2100558])
              ref moreRef2[1980808]:_ref(int(64))[936761] "temp"
              ref tmp[2100565]:_ref(_ic_chpl_bytes__ref_string)[1108588] "temp"
              (2100570 'move' tmp[2100565](2100567 '.' this[1156721] F43__iterator[2098522]))
              (1980810 'move' moreRef2[1980808](1980812 '.' tmp[2100565] more[1108448]))
              const-val moreVal2[1980815]:int(64)[13] "const" "temp"
              (1980817 '=' moreVal2[1980815] moreRef2[1980808])
              const-val moreValNeg2[1980820]:int(64)[13] "const" "temp"
              (1980822 'move' moreValNeg2[1980820](1980824 'u-' moreVal2[1980815]))
              (1980826 '=' moreRef2[1980808] moreValNeg2[1980820])
              val tmp[2100572]:_ic_chpl_bytes__ref_string[1108445] "temp"
              (2100577 'move' tmp[2100572](2100574 '.v' this[1156721] F43__iterator[2098522]))
              (1980830 call advance[1108471] tmp[2100572])
              ref tmp[2100579]:_ref(byteIndex)[948948] "temp"
              (2100584 'move' tmp[2100579](2100581 '.' this[1156721] F45_call_tmp[2098526]))
              (1980833 call chpl__autoDestroy[1601936] tmp[2100579])
              ref tmp[2100586]:_ref((_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string))[1108863] "temp"
              (2100591 'move' tmp[2100586](2100588 '.' this[1156721] F40__iterator[2098516]))
              (1980836 call _freeIterator[1108913] tmp[2100586])
              ref tmp[2100593]:_ref((_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string))[1108863] "temp"
              (2100598 'move' tmp[2100593](2100595 '.' this[1156721] F40__iterator[2098516]))
              (1980839 call chpl__autoDestroy[1681548] tmp[2100593])
              const-val tmp[2100600]:range(int(64),bounded,false)[1027003] "temp"
              (2100605 'move' tmp[2100600](2100602 '.v' this[1156721] F41_call_tmp[2098518]))
              (1980842 call chpl__autoDestroy[1407763] tmp[2100600])
              ref tmp[2100607]:_ref(string)[938128] "temp"
              (2100612 'move' tmp[2100607](2100609 '.' this[1156721] F39_localThis[2098514]))
              (1980845 call chpl__autoDestroy[1601673] tmp[2100607])
              break _breakLabel[35883] _breakLabel[35883]
            }
            ref tmp[2100614]:_ref(byteIndex)[948948] "temp"
            (2100619 'move' tmp[2100614](2100616 '.' this[1156721] F45_call_tmp[2098526]))
            (1979739 call chpl__autoDestroy[1601936] tmp[2100614])
            val tmp[2100621]:_ic_these_range_int64_t_bounded_F[1096892] "temp"
            (2100626 'move' tmp[2100621](2100623 '.v' this[1156721] F42__iterator[2098520]))
            (1979743 call zip3[1096945] tmp[2100621])
            val tmp[2100628]:_ic_chpl_bytes__ref_string[1108445] "temp"
            (2100633 'move' tmp[2100628](2100630 '.v' this[1156721] F43__iterator[2098522]))
            (1979747 call zip3[1108498] tmp[2100628])
            {
              val tmp[2100635]:_ic_these_range_int64_t_bounded_F[1096892] "temp"
              (2100640 'move' tmp[2100635](2100637 '.v' this[1156721] F42__iterator[2098520]))
              (1979540 call init[1096981] tmp[2100635])
              val tmp[2100642]:_ic_chpl_bytes__ref_string[1108445] "temp"
              (2100647 'move' tmp[2100642](2100644 '.v' this[1156721] F43__iterator[2098522]))
              (1979544 call init[1108534] tmp[2100642])
            }
            {
              val tmp[2100649]:_ic_these_range_int64_t_bounded_F[1096892] "temp"
              (2100654 'move' tmp[2100649](2100651 '.v' this[1156721] F42__iterator[2098520]))
              (1979548 call hasMore[1096963] tmp[2100649])
            }
            {
              val tmp[2100656]:_ic_these_range_int64_t_bounded_F[1096892] "temp"
              (2100661 'move' tmp[2100656](2100658 '.v' this[1156721] F42__iterator[2098520]))
              (1979553 call incr[1096990] tmp[2100656])
              val tmp[2100663]:_ic_chpl_bytes__ref_string[1108445] "temp"
              (2100668 'move' tmp[2100663](2100665 '.v' this[1156721] F43__iterator[2098522]))
              (1979557 call incr[1108543] tmp[2100663])
            }
          }
          const-val retTmp[1979750]:int(64)[13] "temp"
          val tmp[2100670]:_ic_chpl_bytes__ref_string[1108445] "temp"
          (2100675 'move' tmp[2100670](2100672 '.v' this[1156721] F43__iterator[2098522]))
          (1979752 'move' retTmp[1979750](1979755 call hasMore[1108516] tmp[2100670]))
          (1979757 'move' hasMore[1979534](1979759 'cast' bool[10] retTmp[1979750]))
          if hasMore[1979534]
          {
            (1979764 'chpl_error' c"zippered iterations have non-equal lengths")
          }
          val tmp[2100677]:_ic_chpl_bytes__ref_string[1108445] "temp"
          (2100682 'move' tmp[2100677](2100679 '.v' this[1156721] F43__iterator[2098522]))
          (1979769 call zip4[1108507] tmp[2100677])
          val tmp[2100684]:_ic_these_range_int64_t_bounded_F[1096892] "temp"
          (2100689 'move' tmp[2100684](2100686 '.v' this[1156721] F42__iterator[2098520]))
          (1979773 call zip4[1096954] tmp[2100684])
          ref tmp[2100691]:_ref((_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string))[1108863] "temp"
          (2100696 'move' tmp[2100691](2100693 '.' this[1156721] F40__iterator[2098516]))
          (1979776 call _freeIterator[1108913] tmp[2100691])
          ref tmp[2100698]:_ref((_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string))[1108863] "temp"
          (2100703 'move' tmp[2100698](2100700 '.' this[1156721] F40__iterator[2098516]))
          (1979779 call chpl__autoDestroy[1681548] tmp[2100698])
          const-val tmp[2100705]:range(int(64),bounded,false)[1027003] "temp"
          (2100710 'move' tmp[2100705](2100707 '.v' this[1156721] F41_call_tmp[2098518]))
          (1979782 call chpl__autoDestroy[1407763] tmp[2100705])
        }
        {
          const-val call_tmp[1979785]:int(64)[13] "dead at end of block" "maybe param" "temp"
          ref start[1981494]:_ref(byteIndex)[948948] "temp"
          ref tmp[2100712]:_ref(_ic__cpIndexLen__ref_string)[1122717] "temp"
          (2100717 'move' tmp[2100712](2100714 '.' this[1156721] F37__iterator[2098510]))
          (1981499 'move' start[1981494](1981496 '.v' tmp[2100712] F1_start[2094210]))
          (1979787 'move' call_tmp[1979785](1979790 call _cast[39465] start[1981494]))
          val tmp[2100719]:int(64)[13] "temp"
          (1979794 'move' tmp[2100719] call_tmp[1979785])
          (2100721 '.=' this[1156721] F61_i[2098558] tmp[2100719])
          const-val call_tmp[1979797]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1979799 'move' call_tmp[1979797](1979802 call >[437788] call_tmp[1979785] 0))
          const-val call_tmp[1979805]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1979807 'move' call_tmp[1979805] call_tmp[1979797])
          if call_tmp[1979797]
          {
            val tmp[1979812]:bool[10] "dead after last mention" "temp"
            const-val tmp[1979814]:bool[10] "dead after last mention" "maybe param" "temp"
            ref call_tmp[1979816]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
            ref tmp[2100725]:_ref(string)[938128] "temp"
            (2100730 'move' tmp[2100725](2100727 '.' this[1156721] F39_localThis[2098514]))
            (1979818 'move' call_tmp[1979816](1979821 call buffLen[758075] tmp[2100725]))
            const-val coerce_tmp[1979823]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (1979825 'move' coerce_tmp[1979823](1979827 'deref' call_tmp[1979816]))
            const-val tmp[2100732]:int(64)[13] "temp"
            (2100737 'move' tmp[2100732](2100734 '.v' this[1156721] F61_i[2098558]))
            (1979829 'move' tmp[1979814](1979832 call <[437568] tmp[2100732] coerce_tmp[1979823]))
            val tmp[1979835]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
            const-val tmp[1979837]:bool[10] "dead after last mention" "maybe param" "temp"
            const-val call_tmp[1979839]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1979841 'move' call_tmp[1979839] tmp[1979814])
            (1979844 'move' tmp[1979837] tmp[1979814])
            if tmp[1979814]
            {
              const-val tmp[1979849]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
              ref call_tmp[1979851]:_ref(uint(8))[937097] "dead after last mention" "maybe param" "temp"
              ref _this_tmp_[1979853]:_ref(c_ptr(uint(8)))[937621] "dead after last mention" "temp"
              ref tmp[2100739]:_ref(string)[938128] "temp"
              (2100744 'move' tmp[2100739](2100741 '.' this[1156721] F39_localThis[2098514]))
              (1979855 'move' _this_tmp_[1979853](1979858 call buff[758153] tmp[2100739]))
              val coerce_tmp[1979860]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1979862 'move' coerce_tmp[1979860](1979864 'deref' _this_tmp_[1979853]))
              const-val tmp[2100746]:int(64)[13] "temp"
              (2100751 'move' tmp[2100746](2100748 '.v' this[1156721] F61_i[2098558]))
              (1979866 'move' call_tmp[1979851](1979869 call this[954280] coerce_tmp[1979860] tmp[2100746]))
              const-val call_tmp[1979872]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1979874]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1979876 'move' coerce_tmp[1979874](1979878 'deref' call_tmp[1979851]))
              (1979880 'move' call_tmp[1979872](1979883 call isInitialByte[181574] coerce_tmp[1979874]))
              const-val call_tmp[1979885]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1979887 'move' call_tmp[1979885](1979890 call ![7494] call_tmp[1979872]))
              (1979892 'move' tmp[1979849] call_tmp[1979885])
              (1979895 'move' tmp[1979835] call_tmp[1979885])
            }
            {
              (1979899 'move' tmp[1979835] 0)
            }
            (1979903 'move' tmp[1979812] tmp[1979835])
            WhileDo[1979906]
            {
              ref tmp[2100753]:_ref(int(64))[936761] "temp"
              (2100758 'move' tmp[2100753](2100755 '.' this[1156721] F61_i[2098558]))
              (1979909 call +=[451431] tmp[2100753] 1)
              const-val tmp[1979912]:bool[10] "dead after last mention" "maybe param" "temp"
              ref call_tmp[1979914]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
              ref tmp[2100760]:_ref(string)[938128] "temp"
              (2100765 'move' tmp[2100760](2100762 '.' this[1156721] F39_localThis[2098514]))
              (1979916 'move' call_tmp[1979914](1979919 call buffLen[758075] tmp[2100760]))
              const-val coerce_tmp[1979921]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1979923 'move' coerce_tmp[1979921](1979925 'deref' call_tmp[1979914]))
              const-val tmp[2100767]:int(64)[13] "temp"
              (2100772 'move' tmp[2100767](2100769 '.v' this[1156721] F61_i[2098558]))
              (1979927 'move' tmp[1979912](1979930 call <[437568] tmp[2100767] coerce_tmp[1979921]))
              val tmp[1979933]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
              const-val tmp[1979935]:bool[10] "dead after last mention" "maybe param" "temp"
              const-val call_tmp[1979937]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1979939 'move' call_tmp[1979937] tmp[1979912])
              (1979942 'move' tmp[1979935] tmp[1979912])
              if tmp[1979912]
              {
                const-val tmp[1979947]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                ref call_tmp[1979949]:_ref(uint(8))[937097] "dead after last mention" "maybe param" "temp"
                ref _this_tmp_[1979951]:_ref(c_ptr(uint(8)))[937621] "dead after last mention" "temp"
                ref tmp[2100774]:_ref(string)[938128] "temp"
                (2100779 'move' tmp[2100774](2100776 '.' this[1156721] F39_localThis[2098514]))
                (1979953 'move' _this_tmp_[1979951](1979956 call buff[758153] tmp[2100774]))
                val coerce_tmp[1979958]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1979960 'move' coerce_tmp[1979958](1979962 'deref' _this_tmp_[1979951]))
                const-val tmp[2100781]:int(64)[13] "temp"
                (2100786 'move' tmp[2100781](2100783 '.v' this[1156721] F61_i[2098558]))
                (1979964 'move' call_tmp[1979949](1979967 call this[954280] coerce_tmp[1979958] tmp[2100781]))
                const-val call_tmp[1979970]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[1979972]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1979974 'move' coerce_tmp[1979972](1979976 'deref' call_tmp[1979949]))
                (1979978 'move' call_tmp[1979970](1979981 call isInitialByte[181574] coerce_tmp[1979972]))
                const-val call_tmp[1979983]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1979985 'move' call_tmp[1979983](1979988 call ![7494] call_tmp[1979970]))
                (1979990 'move' tmp[1979947] call_tmp[1979983])
                (1979993 'move' tmp[1979933] call_tmp[1979983])
              }
              {
                (1979997 'move' tmp[1979933] 0)
              }
              (1980001 'move' tmp[1979812] tmp[1979933])
              tmp[1979812]
            }
          }
          val tmp[1980005]:bool[10] "dead after last mention" "temp"
          ref call_tmp[1980007]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
          ref tmp[2100788]:_ref(string)[938128] "temp"
          (2100793 'move' tmp[2100788](2100790 '.' this[1156721] F39_localThis[2098514]))
          (1980009 'move' call_tmp[1980007](1980012 call buffLen[758075] tmp[2100788]))
          const-val call_tmp[1980014]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[1980016]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1980018 'move' coerce_tmp[1980016](1980020 'deref' call_tmp[1980007]))
          const-val tmp[2100795]:int(64)[13] "temp"
          (2100800 'move' tmp[2100795](2100797 '.v' this[1156721] F61_i[2098558]))
          (1980022 'move' call_tmp[1980014](1980025 call <[437568] tmp[2100795] coerce_tmp[1980016]))
          (1980028 'move' tmp[1980005] call_tmp[1980014])
          WhileDo[1980031]
          {
            ref call_tmp[1980033]:_ref(c_ptr(uint(8)))[937621] "dead at end of block" "maybe param" "temp"
            ref tmp[2100802]:_ref(string)[938128] "temp"
            (2100807 'move' tmp[2100802](2100804 '.' this[1156721] F39_localThis[2098514]))
            (1980035 'move' call_tmp[1980033](1980038 call buff[758153] tmp[2100802]))
            ref call_tmp[1980040]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
            ref tmp[2100809]:_ref(string)[938128] "temp"
            (2100814 'move' tmp[2100809](2100811 '.' this[1156721] F39_localThis[2098514]))
            (1980042 'move' call_tmp[1980040](1980045 call buffLen[758075] tmp[2100809]))
            const-val call_tmp[1980047]:(syserr,int(32),int(32))[964809] "dead at end of block" "maybe param" "temp"
            val coerce_tmp[1980049]:c_ptr(uint(8))[937612] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (1980051 'move' coerce_tmp[1980049](1980053 'deref' call_tmp[1980033]))
            const-val coerce_tmp[1980055]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (1980057 'move' coerce_tmp[1980055](1980059 'deref' call_tmp[1980040]))
            const-val tmp[2100816]:int(64)[13] "temp"
            (2100821 'move' tmp[2100816](2100818 '.v' this[1156721] F61_i[2098558]))
            ref tmp[2100823]:_ref((syserr,int(32),int(32)))[964916] "temp"
            (2100828 'move' tmp[2100823](2100825 '.' this[1156721] F62_ret_tmp[2098560]))
            (1980064 call decodeHelp[174452] coerce_tmp[1980049] coerce_tmp[1980055] tmp[2100816] 1 tmp[2100823])
            const-val tmp[2100830]:(syserr,int(32),int(32))[964809] "temp"
            (2100835 'move' tmp[2100830](2100832 '.v' this[1156721] F62_ret_tmp[2098560]))
            (1980070 'move' call_tmp[1980047] tmp[2100830])
            const tmp[2100837]:(syserr,int(32),int(32))[964809] "temp"
            (1980075 'move' tmp[2100837] call_tmp[1980047])
            (2100839 '.=' this[1156721] F63_tmp[2098562] tmp[2100837])
            1
            ref call_tmp[1980079]:_ref(syserr)[949021] "dead at end of block" "maybe param" "reference to a const" "temp"
            ref tmp[2100843]:_ref((syserr,int(32),int(32)))[964916] "temp"
            (2100848 'move' tmp[2100843](2100845 '.' this[1156721] F63_tmp[2098562]))
            (1980081 'move' call_tmp[1980079](1980083 '.' tmp[2100843] x0[964803]))
            const-val decodeRet[1980086]:syserr[223672] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1980088]:syserr[223672] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (1980090 'move' coerce_tmp[1980088](1980092 'deref' call_tmp[1980079]))
            (1980094 'move' decodeRet[1980086](1980097 call chpl__initCopy[964674] coerce_tmp[1980088]))
            ref call_tmp[1980099]:_ref(int(32))[936815] "dead at end of block" "maybe param" "reference to a const" "temp"
            ref tmp[2100850]:_ref((syserr,int(32),int(32)))[964916] "temp"
            (2100855 'move' tmp[2100850](2100852 '.' this[1156721] F63_tmp[2098562]))
            (1980101 'move' call_tmp[1980099](1980103 '.' tmp[2100850] x1[964805]))
            const-val cp[1980106]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1980108]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (1980110 'move' coerce_tmp[1980108](1980112 'deref' call_tmp[1980099]))
            (1980114 'move' cp[1980106](1980117 call chpl__initCopy[964946] coerce_tmp[1980108]))
            ref call_tmp[1980119]:_ref(int(32))[936815] "dead at end of block" "maybe param" "reference to a const" "temp"
            ref tmp[2100857]:_ref((syserr,int(32),int(32)))[964916] "temp"
            (2100862 'move' tmp[2100857](2100859 '.' this[1156721] F63_tmp[2098562]))
            (1980121 'move' call_tmp[1980119](1980123 '.' tmp[2100857] x2[964807]))
            const-val coerce_tmp[1980128]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (1980130 'move' coerce_tmp[1980128](1980132 'deref' call_tmp[1980119]))
            const tmp[2100864]:int(32)[95] "temp"
            (1980134 'move' tmp[2100864](1980137 call chpl__initCopy[964946] coerce_tmp[1980128]))
            (2100866 '.=' this[1156721] F64_nBytes[2098564] tmp[2100864])
            const-val yret[1980139]:(int(32),byteIndex,int(64))[1122331] "dead after last mention" "YVV" "temp"
            val call_tmp[1980141]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            const-val call_tmp[1980143]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
            (1980145 'move' call_tmp[1980143] cp[1980106])
            const-val tmp[2100870]:int(64)[13] "temp"
            (2100875 'move' tmp[2100870](2100872 '.v' this[1156721] F61_i[2098558]))
            ref tmp[2100877]:_ref(byteIndex)[948948] "temp"
            (2100882 'move' tmp[2100877](2100879 '.' this[1156721] F66_ret_tmp[2098568]))
            (1980153 call _cast[39486] tmp[2100870] tmp[2100877])
            val tmp[2100884]:byteIndex[28173] "temp"
            const-val tmp[2100890]:byteIndex[28173] "temp"
            (2100895 'move' tmp[2100890](2100892 '.v' this[1156721] F66_ret_tmp[2098568]))
            (1980156 'move' tmp[2100884] tmp[2100890])
            (2100886 '.=' this[1156721] F65_call_tmp[2098566] tmp[2100884])
            const-val call_tmp[1980159]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val tmp[2100897]:int(32)[95] "temp"
            (2100902 'move' tmp[2100897](2100899 '.v' this[1156721] F64_nBytes[2098564]))
            (1980161 'move' call_tmp[1980159](1980163 'cast' int(64)[13] tmp[2100897]))
            const-val call_tmp[1980166]:(int(32),byteIndex,int(64))[1122331] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            ref tmp[2100904]:_ref(byteIndex)[948948] "temp"
            (2100909 'move' tmp[2100904](2100906 '.' this[1156721] F65_call_tmp[2098566]))
            ref tmp[2100911]:_ref((int(32),byteIndex,int(64)))[1122403] "temp"
            (2100916 'move' tmp[2100911](2100913 '.' this[1156721] F67_ret_tmp[2098570]))
            (1980171 call _build_tuple[1122281] cp[1980106] tmp[2100904] call_tmp[1980159] tmp[2100911])
            const-val tmp[2100918]:(int(32),byteIndex,int(64))[1122331] "temp"
            (2100923 'move' tmp[2100918](2100920 '.v' this[1156721] F67_ret_tmp[2098570]))
            (1980176 'move' call_tmp[1980166] tmp[2100918])
            (1980179 'move' yret[1980139] call_tmp[1980166])
            const-val _yieldedIndex[1980914]:(int(32),byteIndex,int(64))[1122331] "temp"
            (1981471 'move' _yieldedIndex[1980914] call_tmp[1980166])
            1
            const-val c[1980917]:int(32)[95] "const" "index var" "insert auto destroy"
            (1980919 'move' c[1980917](1980921 '.v' _yieldedIndex[1980914] x0[1122325]))
            ref i[1980924]:_ref(byteIndex)[948948] "index var" "insert auto destroy"
            (1980926 'move' i[1980924](1980928 '.v' _yieldedIndex[1980914] x1[1122327]))
            const-val nBytes[1980931]:int(64)[13] "const" "index var" "insert auto destroy"
            (1980933 'move' nBytes[1980931](1980935 '.v' _yieldedIndex[1980914] x2[1122329]))
            const-val call_tmp[1980938]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val tmp[2100925]:bool[10] "temp"
            (2100930 'move' tmp[2100925](2100927 '.v' this[1156721] F31_noSplits[2098498]))
            (1980940 'move' call_tmp[1980938] tmp[2100925])
            const-val tmp[2100932]:bool[10] "temp"
            (2100937 'move' tmp[2100932](2100934 '.v' this[1156721] F31_noSplits[2098498]))
            if tmp[2100932]
            {
              ref tmp[2100939]:_ref(bool)[937388] "temp"
              (2100944 'move' tmp[2100939](2100941 '.' this[1156721] F28_done[2098492]))
              (1980946 call =[435290] tmp[2100939] 1)
              const-val call_tmp[1980949]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              ref tmp[2100946]:_ref(string)[938128] "temp"
              (2100951 'move' tmp[2100946](2100948 '.' this[1156721] F27_localThis[2098490]))
              (1980951 'move' call_tmp[1980949](1980954 call isSpace[36843] tmp[2100946]))
              const-val call_tmp[1980956]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1980958 'move' call_tmp[1980956](1980961 call ![7494] call_tmp[1980949]))
              const-val call_tmp[1980963]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1980965 'move' call_tmp[1980963] call_tmp[1980956])
              if call_tmp[1980956]
              {
                ref tmp[2100953]:_ref(string)[938128] "temp"
                (2100958 'move' tmp[2100953](2100955 '.' this[1156721] F30_chunk[2098496]))
                ref tmp[2100960]:_ref(string)[938128] "temp"
                (2100965 'move' tmp[2100960](2100962 '.' this[1156721] F27_localThis[2098490]))
                (1980971 call =[38272] tmp[2100953] tmp[2100960])
                ref tmp[2100967]:_ref(bool)[937388] "temp"
                (2100972 'move' tmp[2100967](2100969 '.' this[1156721] F29_yieldChunk[2098494]))
                (1980975 call =[435290] tmp[2100967] 1)
              }
            }
            {
              const-val call_tmp[1980980]:bool[10] "dead at end of block" "maybe param" "temp"
              (1980982 'move' call_tmp[1980980](1980985 call codepoint_isWhitespace[39156] c[1980917]))
              const-val cSpace[1980987]:bool[10] "dead at end of block" "insert auto destroy"
              (1980989 'move' cSpace[1980987] call_tmp[1980980])
              const-val tmp[1980992]:bool[10] "dead after last mention" "maybe param" "temp"
              const-val tmp[2100974]:bool[10] "temp"
              (2100979 'move' tmp[2100974](2100976 '.v' this[1156721] F35_inChunk[2098506]))
              (1980994 'move' tmp[1980992] tmp[2100974])
              val tmp[1980997]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
              const-val tmp[1980999]:bool[10] "dead after last mention" "maybe param" "temp"
              const-val call_tmp[1981001]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val tmp[2100981]:bool[10] "temp"
              (2100986 'move' tmp[2100981](2100983 '.v' this[1156721] F35_inChunk[2098506]))
              (1981003 'move' call_tmp[1981001] tmp[2100981])
              const-val tmp[2100988]:bool[10] "temp"
              (2100993 'move' tmp[2100988](2100990 '.v' this[1156721] F35_inChunk[2098506]))
              (1981006 'move' tmp[1980999] tmp[2100988])
              const-val tmp[2100995]:bool[10] "temp"
              (2101000 'move' tmp[2100995](2100997 '.v' this[1156721] F35_inChunk[2098506]))
              if tmp[2100995]
              {
                (1981011 'move' tmp[1980997] 1)
              }
              {
                const-val tmp[1981015]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                (1981017 'move' tmp[1981015] cSpace[1980987])
                (1981020 'move' tmp[1980997] cSpace[1980987])
              }
              const-val call_tmp[1981024]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1981026 'move' call_tmp[1981024](1981029 call ![7494] tmp[1980997]))
              const-val call_tmp[1981031]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1981033 'move' call_tmp[1981031] call_tmp[1981024])
              if call_tmp[1981024]
              {
                ref tmp[2101002]:_ref(byteIndex)[948948] "temp"
                (2101007 'move' tmp[2101002](2101004 '.' this[1156721] F36_chunkStart[2098508]))
                (1981039 call =[38194] tmp[2101002] i[1980924])
                ref tmp[2101009]:_ref(bool)[937388] "temp"
                (2101014 'move' tmp[2101009](2101011 '.' this[1156721] F35_inChunk[2098506]))
                (1981043 call =[435290] tmp[2101009] 1)
                const-val call_tmp[1981046]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                ref tmp[2101016]:_ref(byteIndex)[948948] "temp"
                (2101021 'move' tmp[2101016](2101018 '.' this[1156721] F68_ret_tmp[2098572]))
                (1981051 call -[28857] i[1980924] 1 tmp[2101016])
                const-val tmp[2101023]:byteIndex[28173] "temp"
                (2101028 'move' tmp[2101023](2101025 '.v' this[1156721] F68_ret_tmp[2098572]))
                (1981055 'move' call_tmp[1981046] tmp[2101023])
                const-val call_tmp[1981058]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                ref tmp[2101030]:_ref(byteIndex)[948948] "temp"
                (2101035 'move' tmp[2101030](2101032 '.' this[1156721] F69_ret_tmp[2098574]))
                (1981063 call +[28725] call_tmp[1981046] nBytes[1980931] tmp[2101030])
                const-val tmp[2101037]:byteIndex[28173] "temp"
                (2101042 'move' tmp[2101037](2101039 '.v' this[1156721] F69_ret_tmp[2098574]))
                (1981067 'move' call_tmp[1981058] tmp[2101037])
                const-val call_tmp[1981070]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                ref tmp[2101044]:_ref(byteIndex)[948948] "temp"
                (2101049 'move' tmp[2101044](2101046 '.' this[1156721] F34_iEnd[2098504]))
                (1981072 'move' call_tmp[1981070](1981075 call >[28575] call_tmp[1981058] tmp[2101044]))
                const-val call_tmp[1981078]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1981080 'move' call_tmp[1981078] call_tmp[1981070])
                if call_tmp[1981070]
                {
                  const-val call_tmp[1981085]:range(byteIndex,boundedLow,false)[1143592] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  ref tmp[2101051]:_ref(byteIndex)[948948] "temp"
                  (2101056 'move' tmp[2101051](2101053 '.' this[1156721] F36_chunkStart[2098508]))
                  ref tmp[2101058]:_ref(range(byteIndex,boundedLow,false))[1143636] "temp"
                  (2101063 'move' tmp[2101058](2101060 '.' this[1156721] F70_ret_tmp[2098576]))
                  (1981090 call chpl_build_low_bounded_range[1142899] tmp[2101051] tmp[2101058])
                  const-val tmp[2101065]:range(byteIndex,boundedLow,false)[1143592] "temp"
                  (2101070 'move' tmp[2101065](2101067 '.v' this[1156721] F70_ret_tmp[2098576]))
                  (1981093 'move' call_tmp[1981085] tmp[2101065])
                  const-val call_tmp[1981096]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  ref tmp[2101072]:_ref(string)[938128] "temp"
                  (2101077 'move' tmp[2101072](2101074 '.' this[1156721] F27_localThis[2098490]))
                  ref tmp[2101079]:_ref(string)[938128] "temp"
                  (2101084 'move' tmp[2101079](2101081 '.' this[1156721] F71_ret_tmp[2098578]))
                  (1981101 call this[1143912] tmp[2101072] call_tmp[1981085] tmp[2101079])
                  const-val tmp[2101086]:string[26] "temp"
                  (2101091 'move' tmp[2101086](2101088 '.v' this[1156721] F71_ret_tmp[2098578]))
                  (1981105 'move' call_tmp[1981096] tmp[2101086])
                  ref tmp[2101093]:_ref(string)[938128] "temp"
                  (2101098 'move' tmp[2101093](2101095 '.' this[1156721] F30_chunk[2098496]))
                  (1981109 call =[38272] tmp[2101093] call_tmp[1981096])
                  (1981113 call chpl__autoDestroy[1601673] call_tmp[1981096])
                  (1981116 call chpl__autoDestroy[1682957] call_tmp[1981085])
                  ref tmp[2101100]:_ref(bool)[937388] "temp"
                  (2101105 'move' tmp[2101100](2101102 '.' this[1156721] F29_yieldChunk[2098494]))
                  (1981119 call =[435290] tmp[2101100] 1)
                  ref tmp[2101107]:_ref(bool)[937388] "temp"
                  (2101112 'move' tmp[2101107](2101109 '.' this[1156721] F28_done[2098492]))
                  (1981123 call =[435290] tmp[2101107] 1)
                }
                (1981128 call chpl__autoDestroy[1601936] call_tmp[1981058])
                (1981131 call chpl__autoDestroy[1601936] call_tmp[1981046])
              }
              {
                const-val call_tmp[1981134]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val tmp[2101114]:bool[10] "temp"
                (2101119 'move' tmp[2101114](2101116 '.v' this[1156721] F35_inChunk[2098506]))
                (1981136 'move' call_tmp[1981134] tmp[2101114])
                if call_tmp[1981134]
                {
                  const-val call_tmp[1981141]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1981143 'move' call_tmp[1981141] cSpace[1980987])
                  if cSpace[1980987]
                  {
                    ref tmp[2101121]:_ref(int(64))[936761] "temp"
                    (2101126 'move' tmp[2101121](2101123 '.' this[1156721] F33_splitCount[2098502]))
                    (1981149 call +=[451431] tmp[2101121] 1)
                    const-val tmp[1981152]:bool[10] "dead after last mention" "maybe param" "temp"
                    const-val tmp[2101128]:bool[10] "temp"
                    (2101133 'move' tmp[2101128](2101130 '.v' this[1156721] F32_limitSplits[2098500]))
                    (1981154 'move' tmp[1981152] tmp[2101128])
                    val tmp[1981157]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                    const-val tmp[1981159]:bool[10] "dead after last mention" "maybe param" "temp"
                    const-val call_tmp[1981161]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val tmp[2101135]:bool[10] "temp"
                    (2101140 'move' tmp[2101135](2101137 '.v' this[1156721] F32_limitSplits[2098500]))
                    (1981163 'move' call_tmp[1981161] tmp[2101135])
                    const-val tmp[2101142]:bool[10] "temp"
                    (2101147 'move' tmp[2101142](2101144 '.v' this[1156721] F32_limitSplits[2098500]))
                    (1981166 'move' tmp[1981159] tmp[2101142])
                    const-val tmp[2101149]:bool[10] "temp"
                    (2101154 'move' tmp[2101149](2101151 '.v' this[1156721] F32_limitSplits[2098500]))
                    if tmp[2101149]
                    {
                      const-val tmp[1981171]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                      const-val call_tmp[1981173]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      const-val tmp[2101156]:int(64)[13] "temp"
                      (2101161 'move' tmp[2101156](2101158 '.v' this[1156721] F33_splitCount[2098502]))
                      const-val tmp[2101163]:int(64)[13] "temp"
                      (2101168 'move' tmp[2101163](2101165 '.v' this[1156721] F1_maxsplit[2098436]))
                      (1981175 'move' call_tmp[1981173](1981178 call >[437788] tmp[2101156] tmp[2101163]))
                      (1981181 'move' tmp[1981171] call_tmp[1981173])
                      (1981184 'move' tmp[1981157] call_tmp[1981173])
                    }
                    {
                      (1981188 'move' tmp[1981157] 0)
                    }
                    const-val call_tmp[1981192]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1981194 'move' call_tmp[1981192] tmp[1981157])
                    if tmp[1981157]
                    {
                      const-val call_tmp[1981199]:range(byteIndex,boundedLow,false)[1143592] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                      ref tmp[2101170]:_ref(byteIndex)[948948] "temp"
                      (2101175 'move' tmp[2101170](2101172 '.' this[1156721] F36_chunkStart[2098508]))
                      ref tmp[2101177]:_ref(range(byteIndex,boundedLow,false))[1143636] "temp"
                      (2101182 'move' tmp[2101177](2101179 '.' this[1156721] F72_ret_tmp[2098580]))
                      (1981204 call chpl_build_low_bounded_range[1142899] tmp[2101170] tmp[2101177])
                      const-val tmp[2101184]:range(byteIndex,boundedLow,false)[1143592] "temp"
                      (2101189 'move' tmp[2101184](2101186 '.v' this[1156721] F72_ret_tmp[2098580]))
                      (1981207 'move' call_tmp[1981199] tmp[2101184])
                      const-val call_tmp[1981210]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                      ref tmp[2101191]:_ref(string)[938128] "temp"
                      (2101196 'move' tmp[2101191](2101193 '.' this[1156721] F27_localThis[2098490]))
                      ref tmp[2101198]:_ref(string)[938128] "temp"
                      (2101203 'move' tmp[2101198](2101200 '.' this[1156721] F73_ret_tmp[2098582]))
                      (1981215 call this[1143912] tmp[2101191] call_tmp[1981199] tmp[2101198])
                      const-val tmp[2101205]:string[26] "temp"
                      (2101210 'move' tmp[2101205](2101207 '.v' this[1156721] F73_ret_tmp[2098582]))
                      (1981219 'move' call_tmp[1981210] tmp[2101205])
                      ref tmp[2101212]:_ref(string)[938128] "temp"
                      (2101217 'move' tmp[2101212](2101214 '.' this[1156721] F30_chunk[2098496]))
                      (1981223 call =[38272] tmp[2101212] call_tmp[1981210])
                      (1981227 call chpl__autoDestroy[1601673] call_tmp[1981210])
                      (1981230 call chpl__autoDestroy[1682957] call_tmp[1981199])
                      ref tmp[2101219]:_ref(bool)[937388] "temp"
                      (2101224 'move' tmp[2101219](2101221 '.' this[1156721] F29_yieldChunk[2098494]))
                      (1981233 call =[435290] tmp[2101219] 1)
                      ref tmp[2101226]:_ref(bool)[937388] "temp"
                      (2101231 'move' tmp[2101226](2101228 '.' this[1156721] F28_done[2098492]))
                      (1981237 call =[435290] tmp[2101226] 1)
                    }
                    {
                      const-val call_tmp[1981241]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                      ref tmp[2101233]:_ref(byteIndex)[948948] "temp"
                      (2101238 'move' tmp[2101233](2101235 '.' this[1156721] F74_ret_tmp[2098584]))
                      (1981246 call -[28857] i[1980924] 1 tmp[2101233])
                      const-val tmp[2101240]:byteIndex[28173] "temp"
                      (2101245 'move' tmp[2101240](2101242 '.v' this[1156721] F74_ret_tmp[2098584]))
                      (1981250 'move' call_tmp[1981241] tmp[2101240])
                      const-val call_tmp[1981253]:range(byteIndex,bounded,false)[1025981] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                      ref tmp[2101247]:_ref(byteIndex)[948948] "temp"
                      (2101252 'move' tmp[2101247](2101249 '.' this[1156721] F36_chunkStart[2098508]))
                      ref tmp[2101254]:_ref(range(byteIndex,bounded,false))[1025990] "temp"
                      (2101259 'move' tmp[2101254](2101256 '.' this[1156721] F75_ret_tmp[2098586]))
                      (1981258 call chpl_build_bounded_range[1123443] tmp[2101247] call_tmp[1981241] tmp[2101254])
                      const-val tmp[2101261]:range(byteIndex,bounded,false)[1025981] "temp"
                      (2101266 'move' tmp[2101261](2101263 '.v' this[1156721] F75_ret_tmp[2098586]))
                      (1981262 'move' call_tmp[1981253] tmp[2101261])
                      const-val call_tmp[1981265]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                      ref tmp[2101268]:_ref(string)[938128] "temp"
                      (2101273 'move' tmp[2101268](2101270 '.' this[1156721] F27_localThis[2098490]))
                      ref tmp[2101275]:_ref(string)[938128] "temp"
                      (2101280 'move' tmp[2101275](2101277 '.' this[1156721] F76_ret_tmp[2098588]))
                      (1981270 call this[1123689] tmp[2101268] call_tmp[1981253] tmp[2101275])
                      const-val tmp[2101282]:string[26] "temp"
                      (2101287 'move' tmp[2101282](2101284 '.v' this[1156721] F76_ret_tmp[2098588]))
                      (1981274 'move' call_tmp[1981265] tmp[2101282])
                      ref tmp[2101289]:_ref(string)[938128] "temp"
                      (2101294 'move' tmp[2101289](2101291 '.' this[1156721] F30_chunk[2098496]))
                      (1981278 call =[38272] tmp[2101289] call_tmp[1981265])
                      (1981282 call chpl__autoDestroy[1601673] call_tmp[1981265])
                      (1981285 call chpl__autoDestroy[1674473] call_tmp[1981253])
                      (1981288 call chpl__autoDestroy[1601936] call_tmp[1981241])
                      ref tmp[2101296]:_ref(bool)[937388] "temp"
                      (2101301 'move' tmp[2101296](2101298 '.' this[1156721] F29_yieldChunk[2098494]))
                      (1981291 call =[435290] tmp[2101296] 1)
                      ref tmp[2101303]:_ref(bool)[937388] "temp"
                      (2101308 'move' tmp[2101303](2101305 '.' this[1156721] F35_inChunk[2098506]))
                      (1981295 call =[435290] tmp[2101303] 0)
                    }
                  }
                  {
                    const-val call_tmp[1981300]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    ref tmp[2101310]:_ref(byteIndex)[948948] "temp"
                    (2101315 'move' tmp[2101310](2101312 '.' this[1156721] F77_ret_tmp[2098590]))
                    (1981305 call -[28857] i[1980924] 1 tmp[2101310])
                    const-val tmp[2101317]:byteIndex[28173] "temp"
                    (2101322 'move' tmp[2101317](2101319 '.v' this[1156721] F77_ret_tmp[2098590]))
                    (1981309 'move' call_tmp[1981300] tmp[2101317])
                    const-val call_tmp[1981312]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    ref tmp[2101324]:_ref(byteIndex)[948948] "temp"
                    (2101329 'move' tmp[2101324](2101326 '.' this[1156721] F78_ret_tmp[2098592]))
                    (1981317 call +[28725] call_tmp[1981300] nBytes[1980931] tmp[2101324])
                    const-val tmp[2101331]:byteIndex[28173] "temp"
                    (2101336 'move' tmp[2101331](2101333 '.v' this[1156721] F78_ret_tmp[2098592]))
                    (1981321 'move' call_tmp[1981312] tmp[2101331])
                    const-val call_tmp[1981324]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    ref tmp[2101338]:_ref(byteIndex)[948948] "temp"
                    (2101343 'move' tmp[2101338](2101340 '.' this[1156721] F34_iEnd[2098504]))
                    (1981326 'move' call_tmp[1981324](1981329 call >[28575] call_tmp[1981312] tmp[2101338]))
                    const-val call_tmp[1981332]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1981334 'move' call_tmp[1981332] call_tmp[1981324])
                    if call_tmp[1981324]
                    {
                      const-val call_tmp[1981339]:range(byteIndex,boundedLow,false)[1143592] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                      ref tmp[2101345]:_ref(byteIndex)[948948] "temp"
                      (2101350 'move' tmp[2101345](2101347 '.' this[1156721] F36_chunkStart[2098508]))
                      ref tmp[2101352]:_ref(range(byteIndex,boundedLow,false))[1143636] "temp"
                      (2101357 'move' tmp[2101352](2101354 '.' this[1156721] F79_ret_tmp[2098594]))
                      (1981344 call chpl_build_low_bounded_range[1142899] tmp[2101345] tmp[2101352])
                      const-val tmp[2101359]:range(byteIndex,boundedLow,false)[1143592] "temp"
                      (2101364 'move' tmp[2101359](2101361 '.v' this[1156721] F79_ret_tmp[2098594]))
                      (1981347 'move' call_tmp[1981339] tmp[2101359])
                      const-val call_tmp[1981350]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                      ref tmp[2101366]:_ref(string)[938128] "temp"
                      (2101371 'move' tmp[2101366](2101368 '.' this[1156721] F27_localThis[2098490]))
                      ref tmp[2101373]:_ref(string)[938128] "temp"
                      (2101378 'move' tmp[2101373](2101375 '.' this[1156721] F80_ret_tmp[2098596]))
                      (1981355 call this[1143912] tmp[2101366] call_tmp[1981339] tmp[2101373])
                      const-val tmp[2101380]:string[26] "temp"
                      (2101385 'move' tmp[2101380](2101382 '.v' this[1156721] F80_ret_tmp[2098596]))
                      (1981359 'move' call_tmp[1981350] tmp[2101380])
                      ref tmp[2101387]:_ref(string)[938128] "temp"
                      (2101392 'move' tmp[2101387](2101389 '.' this[1156721] F30_chunk[2098496]))
                      (1981363 call =[38272] tmp[2101387] call_tmp[1981350])
                      (1981367 call chpl__autoDestroy[1601673] call_tmp[1981350])
                      (1981370 call chpl__autoDestroy[1682957] call_tmp[1981339])
                      ref tmp[2101394]:_ref(bool)[937388] "temp"
                      (2101399 'move' tmp[2101394](2101396 '.' this[1156721] F29_yieldChunk[2098494]))
                      (1981373 call =[435290] tmp[2101394] 1)
                      ref tmp[2101401]:_ref(bool)[937388] "temp"
                      (2101406 'move' tmp[2101401](2101403 '.' this[1156721] F28_done[2098492]))
                      (1981377 call =[435290] tmp[2101401] 1)
                    }
                    (1981382 call chpl__autoDestroy[1601936] call_tmp[1981312])
                    (1981385 call chpl__autoDestroy[1601936] call_tmp[1981300])
                  }
                }
              }
            }
            const-val call_tmp[1981391]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val tmp[2101408]:bool[10] "temp"
            (2101413 'move' tmp[2101408](2101410 '.v' this[1156721] F29_yieldChunk[2098494]))
            (1981393 'move' call_tmp[1981391] tmp[2101408])
            if call_tmp[1981391]
            {
              const-val yret[1981398]:string[26] "dead after last mention" "YVV" "temp"
              val tmp[2101415]:string[26] "temp"
              ref tmp[2101421]:_ref(string)[938128] "temp"
              (2101426 'move' tmp[2101421](2101423 '.' this[1156721] F30_chunk[2098496]))
              (1981402 'move' tmp[2101415](1981405 call chpl__initCopy[981537] tmp[2101421]))
              (2101417 '.=' this[1156721] F83__yield_expr_tmp_[2098602] tmp[2101415])
              const-val tmp[2101428]:string[26] "temp"
              (2101433 'move' tmp[2101428](2101430 '.v' this[1156721] F83__yield_expr_tmp_[2098602]))
              (1981407 'move' yret[1981398] tmp[2101428])
              val tmp[2101439]:string[26] "temp"
              (2101444 'move' tmp[2101439](2101441 '.v' this[1156721] F83__yield_expr_tmp_[2098602]))
              (2101436 '.=' this[1156721] value[2098604] tmp[2101439])
              (2101664 '.=' this[1156721] more[1156696] 4)
              gotoIterEnd _end[2101642] _end[2101642]
              label _jump_break_4[2101672]
              ref tmp[2101446]:_ref(byteIndex)[948948] "temp"
              (2101451 'move' tmp[2101446](2101448 '.' this[1156721] F65_call_tmp[2098566]))
              (1981462 call chpl__autoDestroy[1601936] tmp[2101446])
              ref tmp[2101453]:_ref((syserr,int(32),int(32)))[964916] "temp"
              (2101458 'move' tmp[2101453](2101455 '.' this[1156721] F63_tmp[2098562]))
              (1981465 call chpl__autoDestroy[1605546] tmp[2101453])
              ref tmp[2101460]:_ref(string)[938128] "temp"
              (2101465 'move' tmp[2101460](2101462 '.' this[1156721] F39_localThis[2098514]))
              (1981468 call chpl__autoDestroy[1601673] tmp[2101460])
              val tmp[2101467]:_ic__cpIndexLen__ref_string[1122574] "temp"
              (2101472 'move' tmp[2101467](2101469 '.v' this[1156721] F37__iterator[2098510]))
              (1981415 call _freeIterator[1122762] tmp[2101467])
              ref tmp[2101474]:_ref(byteIndex)[948948] "temp"
              (2101479 'move' tmp[2101474](2101476 '.' this[1156721] F38_default_arg_start[2098512]))
              (1981418 call chpl__autoDestroy[1601936] tmp[2101474])
              ref tmp[2101481]:_ref(byteIndex)[948948] "temp"
              (2101486 'move' tmp[2101481](2101483 '.' this[1156721] F36_chunkStart[2098508]))
              (1981421 call chpl__autoDestroy[1601936] tmp[2101481])
              ref tmp[2101488]:_ref(byteIndex)[948948] "temp"
              (2101493 'move' tmp[2101488](2101490 '.' this[1156721] F34_iEnd[2098504]))
              (1981424 call chpl__autoDestroy[1601936] tmp[2101488])
              ref tmp[2101495]:_ref(string)[938128] "temp"
              (2101500 'move' tmp[2101495](2101497 '.' this[1156721] F30_chunk[2098496]))
              (1981427 call chpl__autoDestroy[1601673] tmp[2101495])
              ref tmp[2101502]:_ref(string)[938128] "temp"
              (2101507 'move' tmp[2101502](2101504 '.' this[1156721] F27_localThis[2098490]))
              (1981430 call chpl__autoDestroy[1601673] tmp[2101502])
              gotoReturn _endsplit[1889451] _endsplit[1889451]
              label _jump_4[2101670]
              ref tmp[2101509]:_ref(bool)[937388] "temp"
              (2101514 'move' tmp[2101509](2101511 '.' this[1156721] F29_yieldChunk[2098494]))
              (1981436 call =[435290] tmp[2101509] 0)
            }
            const-val call_tmp[1981440]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val tmp[2101516]:bool[10] "temp"
            (2101521 'move' tmp[2101516](2101518 '.v' this[1156721] F28_done[2098492]))
            (1981442 'move' call_tmp[1981440] tmp[2101516])
            if call_tmp[1981440]
            {
              ref tmp[2101523]:_ref(byteIndex)[948948] "temp"
              (2101528 'move' tmp[2101523](2101525 '.' this[1156721] F65_call_tmp[2098566]))
              (1981452 call chpl__autoDestroy[1601936] tmp[2101523])
              ref tmp[2101530]:_ref((syserr,int(32),int(32)))[964916] "temp"
              (2101535 'move' tmp[2101530](2101532 '.' this[1156721] F63_tmp[2098562]))
              (1981455 call chpl__autoDestroy[1605546] tmp[2101530])
              ref tmp[2101537]:_ref(string)[938128] "temp"
              (2101542 'move' tmp[2101537](2101539 '.' this[1156721] F39_localThis[2098514]))
              (1981458 call chpl__autoDestroy[1601673] tmp[2101537])
              break _breakLabel[35883] _breakLabel[35883]
            }
            ref tmp[2101544]:_ref(byteIndex)[948948] "temp"
            (2101549 'move' tmp[2101544](2101546 '.' this[1156721] F65_call_tmp[2098566]))
            (1980199 call chpl__autoDestroy[1601936] tmp[2101544])
            const-val coerce_tmp[1980201]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            const-val tmp[2101551]:int(32)[95] "temp"
            (2101556 'move' tmp[2101551](2101553 '.v' this[1156721] F64_nBytes[2098564]))
            (1980203 'move' coerce_tmp[1980201](1980205 'cast' int(64)[13] tmp[2101551]))
            ref tmp[2101558]:_ref(int(64))[936761] "temp"
            (2101563 'move' tmp[2101558](2101560 '.' this[1156721] F61_i[2098558]))
            (1980209 call +=[451431] tmp[2101558] coerce_tmp[1980201])
            ref tmp[2101565]:_ref((syserr,int(32),int(32)))[964916] "temp"
            (2101570 'move' tmp[2101565](2101567 '.' this[1156721] F63_tmp[2098562]))
            (1980213 call chpl__autoDestroy[1605546] tmp[2101565])
            ref call_tmp[1980215]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
            ref tmp[2101572]:_ref(string)[938128] "temp"
            (2101577 'move' tmp[2101572](2101574 '.' this[1156721] F39_localThis[2098514]))
            (1980217 'move' call_tmp[1980215](1980220 call buffLen[758075] tmp[2101572]))
            const-val call_tmp[1980222]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val coerce_tmp[1980224]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (1980226 'move' coerce_tmp[1980224](1980228 'deref' call_tmp[1980215]))
            const-val tmp[2101579]:int(64)[13] "temp"
            (2101584 'move' tmp[2101579](2101581 '.v' this[1156721] F61_i[2098558]))
            (1980230 'move' call_tmp[1980222](1980233 call <[437568] tmp[2101579] coerce_tmp[1980224]))
            (1980236 'move' tmp[1980005] call_tmp[1980222])
            tmp[1980005]
          }
        }
        ref tmp[2101586]:_ref(string)[938128] "temp"
        (2101591 'move' tmp[2101586](2101588 '.' this[1156721] F39_localThis[2098514]))
        (1980241 call chpl__autoDestroy[1601673] tmp[2101586])
        label _end_cpIndexLen[1980243]
        label _breakLabel[35883]
        val tmp[2101593]:_ic__cpIndexLen__ref_string[1122574] "temp"
        (2101598 'move' tmp[2101593](2101595 '.v' this[1156721] F37__iterator[2098510]))
        (1919349 call _freeIterator[1122762] tmp[2101593])
        ref tmp[2101600]:_ref(byteIndex)[948948] "temp"
        (2101605 'move' tmp[2101600](2101602 '.' this[1156721] F38_default_arg_start[2098512]))
        (1919351 call chpl__autoDestroy[1601936] tmp[2101600])
        ref tmp[2101607]:_ref(byteIndex)[948948] "temp"
        (2101612 'move' tmp[2101607](2101609 '.' this[1156721] F36_chunkStart[2098508]))
        (1919355 call chpl__autoDestroy[1601936] tmp[2101607])
        ref tmp[2101614]:_ref(byteIndex)[948948] "temp"
        (2101619 'move' tmp[2101614](2101616 '.' this[1156721] F34_iEnd[2098504]))
        (1919358 call chpl__autoDestroy[1601936] tmp[2101614])
        ref tmp[2101621]:_ref(string)[938128] "temp"
        (2101626 'move' tmp[2101621](2101623 '.' this[1156721] F30_chunk[2098496]))
        (1919361 call chpl__autoDestroy[1601673] tmp[2101621])
        ref tmp[2101628]:_ref(string)[938128] "temp"
        (2101633 'move' tmp[2101628](2101630 '.' this[1156721] F27_localThis[2098490]))
        (1919364 call chpl__autoDestroy[1601673] tmp[2101628])
      }
    }
    label _endsplit[1889451]
    (2101674 '.=' this[1156721] more[1156696] 0)
    label _end[2101642]
    (2101757 return _void[55])
  }
  function _ic_split__ref_string[1156693].zip1[1156728](const in arg this[1156730]:_ic_split__ref_string[1156693]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (2101635 call advance[1156719] this[1156730])
    (1156735 return _void[55])
  }
  function _ic_split__ref_string[1156693].zip2[1156737](const in arg this[1156739]:_ic_split__ref_string[1156693]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1156744 return _void[55])
  }
  function _ic_split__ref_string[1156693].zip3[1156746](const in arg this[1156748]:_ic_split__ref_string[1156693]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (2101638 call advance[1156719] this[1156748])
    (1156753 return _void[55])
  }
  function _ic_split__ref_string[1156693].zip4[1156755](const in arg this[1156757]:_ic_split__ref_string[1156693]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1156762 return _void[55])
  }
  function _ic_split__ref_string[1156693].hasMore[1156764](const in arg this[1156766]:_ic_split__ref_string[1156693]) : int(64)[13] "auto ii" "inline" "method" "resolved"
  {
    val tmp[2101760]:int(64)[13] "temp"
    (2101765 'move' tmp[2101760](2101762 '.v' this[1156766] more[1156696]))
    (2101767 return tmp[2101760])
  }
  function _ic_split__ref_string[1156693].getValue[1156773](const in arg this[1156775]:_ic_split__ref_string[1156693]) : string[26] "auto ii" "inline" "method" "resolved"
  {
    val tmp[2101770]:string[26] "temp"
    (2101775 'move' tmp[2101770](2101772 '.v' this[1156775] value[2098604]))
    (2101777 return tmp[2101770])
  }
  function _ref(string)[938128].split[35486](const  ref arg this[35488]:_ref(string)[938128], const in arg maxsplit[35482]:int(64)[13], ref arg _retArg[1905518]:_ref(_ir_split__ref_string)[1156810]) : void[4] "fn returns via _retArg" "inline" "iterator fn" "method" "resolved" "no return value for void"
  {
    val _ir[2101785]:_ir_split__ref_string[1156699] "temp"
    (2101787 '.=' _ir[2101785] F0_this[2098434] this[35488])
    (2101791 '.=' _ir[2101785] F1_maxsplit[2098438] maxsplit[35482])
    (2101795 '=' _retArg[1905518] _ir[2101785])
    (2101798 return _void[55])
  }
  function _ic_split__ref_string[1156693].init[1156782](const in arg this[1156784]:_ic_split__ref_string[1156693]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (2101780 return _void[55])
  }
  function _ic_split__ref_string[1156693].incr[1156791](const in arg this[1156793]:_ic_split__ref_string[1156693]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (2101783 return _void[55])
  }
  type _ic_split__ref_string[1156693] val super[1156694]:object[22] "super class" val more[1156696]:int(64)[13] ref F0_this[2098432]:_ref(string)[938128] const-val F1_maxsplit[2098436]:int(64)[13] val F2__iterator[2098440]:_ic_doSplitWSNoEnc[1124664] const F3_localx[2098442]:string[26] val F4_done[2098444]:bool[10] val F5_yieldChunk[2098446]:bool[10] const-val F6_chunk[2098448]:string[26] const F7_noSplits[2098450]:bool[10] const F8_limitSplits[2098452]:bool[10] val F9_splitCount[2098454]:int(64)[13] const F10_iEnd[2098456]:int(64)[13] val F11_inChunk[2098458]:bool[10] val F12_chunkStart[2098460]:int(64)[13] val F13__iterator[2098462]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108755] val F14_call_tmp[2098464]:range(int(64),bounded,false)[1027003] val F15__iterator[2098466]:_ic_these_range_int64_t_bounded_F[1096892] val F16__iterator[2098468]:_ic_chpl_bytes__ref_string[1108445] val F17__indexOfInterest[2098470]:(int(64),uint(8))[1111229] const-val F18_ret_tmp[2098472]:range(int(64),boundedLow,false)[1087754] const-val F19_ret_tmp[2098474]:string[26] const-val F20_ret_tmp[2098476]:range(int(64),boundedLow,false)[1087754] const-val F21_ret_tmp[2098478]:string[26] const-val F22_ret_tmp[2098480]:range(int(64),bounded,false)[1027003] const-val F23_ret_tmp[2098482]:string[26] const-val F24_ret_tmp[2098484]:range(int(64),boundedLow,false)[1087754] const-val F25_ret_tmp[2098486]:string[26] const F26_s[2098488]:string[26] const F27_localThis[2098490]:string[26] val F28_done[2098492]:bool[10] val F29_yieldChunk[2098494]:bool[10] const-val F30_chunk[2098496]:string[26] const F31_noSplits[2098498]:bool[10] const F32_limitSplits[2098500]:bool[10] val F33_splitCount[2098502]:int(64)[13] const-val F34_iEnd[2098504]:byteIndex[28173] val F35_inChunk[2098506]:bool[10] const-val F36_chunkStart[2098508]:byteIndex[28173] val F37__iterator[2098510]:_ic__cpIndexLen__ref_string[1122574] val F38_default_arg_start[2098512]:byteIndex[28173] val F39_localThis[2098514]:string[26] val F40__iterator[2098516]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108755] val F41_call_tmp[2098518]:range(int(64),bounded,false)[1027003] val F42__iterator[2098520]:_ic_these_range_int64_t_bounded_F[1096892] val F43__iterator[2098522]:_ic_chpl_bytes__ref_string[1108445] val F44__indexOfInterest[2098524]:(int(64),uint(8))[1111229] val F45_call_tmp[2098526]:byteIndex[28173] const-val F46_ret_tmp[2098528]:byteIndex[28173] const-val F47_ret_tmp[2098530]:(int(32),byteIndex,int(64))[1122331] const-val F48_ret_tmp[2098532]:byteIndex[28173] const-val F49_ret_tmp[2098534]:byteIndex[28173] const-val F50_ret_tmp[2098536]:range(byteIndex,boundedLow,false)[1143592] const-val F51_ret_tmp[2098538]:string[26] const-val F52_ret_tmp[2098540]:range(byteIndex,boundedLow,false)[1143592] const-val F53_ret_tmp[2098542]:string[26] const-val F54_ret_tmp[2098544]:byteIndex[28173] const-val F55_ret_tmp[2098546]:range(byteIndex,bounded,false)[1025981] const-val F56_ret_tmp[2098548]:string[26] const-val F57_ret_tmp[2098550]:byteIndex[28173] const-val F58_ret_tmp[2098552]:byteIndex[28173] const-val F59_ret_tmp[2098554]:range(byteIndex,boundedLow,false)[1143592] const-val F60_ret_tmp[2098556]:string[26] val F61_i[2098558]:int(64)[13] const-val F62_ret_tmp[2098560]:(syserr,int(32),int(32))[964809] const F63_tmp[2098562]:(syserr,int(32),int(32))[964809] const F64_nBytes[2098564]:int(32)[95] val F65_call_tmp[2098566]:byteIndex[28173] const-val F66_ret_tmp[2098568]:byteIndex[28173] const-val F67_ret_tmp[2098570]:(int(32),byteIndex,int(64))[1122331] const-val F68_ret_tmp[2098572]:byteIndex[28173] const-val F69_ret_tmp[2098574]:byteIndex[28173] const-val F70_ret_tmp[2098576]:range(byteIndex,boundedLow,false)[1143592] const-val F71_ret_tmp[2098578]:string[26] const-val F72_ret_tmp[2098580]:range(byteIndex,boundedLow,false)[1143592] const-val F73_ret_tmp[2098582]:string[26] const-val F74_ret_tmp[2098584]:byteIndex[28173] const-val F75_ret_tmp[2098586]:range(byteIndex,bounded,false)[1025981] const-val F76_ret_tmp[2098588]:string[26] const-val F77_ret_tmp[2098590]:byteIndex[28173] const-val F78_ret_tmp[2098592]:byteIndex[28173] const-val F79_ret_tmp[2098594]:range(byteIndex,boundedLow,false)[1143592] const-val F80_ret_tmp[2098596]:string[26] val F81__yield_expr_tmp_[2098598]:string[26] val F82__yield_expr_tmp_[2098600]:string[26] val F83__yield_expr_tmp_[2098602]:string[26] val value[2098604]:string[26]
  type _ir_split__ref_string[1156699] ref F0_this[2098434]:_ref(string)[938128] const-val F1_maxsplit[2098438]:int(64)[13]
  function _getIterator[1156708](const  ref arg ir[1156710]:_ir_split__ref_string[1156699]) : _ic_split__ref_string[1156693] "auto ii" "inline" "resolved" "unsafe"
  {
    val ret[1156817]:_ic_split__ref_string[1156693] "dead after last mention" "RVV" "temp"
    val _ic_[1156700]:_ic_split__ref_string[1156693] "dead after last mention" "temp"
    const-val call_tmp[1156824]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1156827 'move' call_tmp[1156824](1156839 'sizeof_bundle' _ic_split__ref_string[1156693]))
    const-val cast_tmp[1156842]:c_void_ptr[149] "dead after last mention" "temp"
    (1156844 'move' cast_tmp[1156842](1156705 call chpl_here_alloc[187788] call_tmp[1156824] 36))
    (1156713 'move' _ic_[1156700](1156846 'cast' _ic_split__ref_string[1156693] cast_tmp[1156842]))
    (1156715 'setcid' _ic_[1156700])
    (1156822 'move' ret[1156817] _ic_[1156700])
    (2101801 '.=' ret[1156817] more[1156696] 1)
    ref tmp[2101805]:_ref(string)[938128] "temp"
    (2101810 'move' tmp[2101805](2101806 '.v' ir[1156710] F0_this[2098434]))
    (2101812 '.=' ret[1156817] F0_this[2098432] tmp[2101805])
    const-val tmp[2101816]:int(64)[13] "temp"
    (2101821 'move' tmp[2101816](2101817 '.v' ir[1156710] F1_maxsplit[2098438]))
    (2101823 '.=' ret[1156817] F1_maxsplit[2098436] tmp[2101816])
    (1156819 return ret[1156817])
  }
  function _ref(string)[938128].strip[36095](const  ref arg this[36105]:_ref(string)[938128], const  ref arg chars[36091]:string[26], const in arg leading[36098]:bool[10], const in arg trailing[36102]:bool[10], ref arg _retArg[1905540]:_ref(string)[938128]) : void[4] "fn returns via _retArg" "method" "resolved"
  {
    val ret[504488]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[601607]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (601610 'move' call_tmp[601607](36116 call isASCII[31049] this[36105]))
    const-val call_tmp[601612]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (601615 'move' call_tmp[601612] call_tmp[601607])
    if call_tmp[601612]
    {
      const-val call_tmp[601617]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1909748]:string[26] "temp"
      (36123 call doStripNoEnc[1107823] this[36105] chars[36091] leading[36098] trailing[36102] ret_tmp[1909748])
      (1909751 'move' call_tmp[601617] ret_tmp[1909748])
      (1124574 'move' ret[504488] call_tmp[601617])
      gotoReturn _end_strip[504486] _end_strip[504486]
    }
    {
      const-val call_tmp[601624]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (601627 'move' call_tmp[601624](36132 call isEmpty[35064] this[36105]))
      const-val call_tmp[601629]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (601632 'move' call_tmp[601629] call_tmp[601624])
      if call_tmp[601629]
      {
        (504500 'move' ret[504488](1905544 call chpl__initCopy[981537] ""))
        gotoReturn _end_strip[504486] _end_strip[504486]
      }
      const-val call_tmp[601636]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (601639 'move' call_tmp[601636](36163 call isEmpty[35064] chars[36091]))
      const-val call_tmp[601641]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (601644 'move' call_tmp[601641] call_tmp[601636])
      if call_tmp[601641]
      {
        (1124579 'move' ret[504488](1124577 call chpl__autoCopy[1122164] this[36105]))
        gotoReturn _end_strip[504486] _end_strip[504486]
      }
      const-val call_tmp[601648]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1905236]:string[26] "temp"
      (36178 call localize[32889] this[36105] ret_tmp[1905236])
      (1905239 'move' call_tmp[601648] ret_tmp[1905236])
      const localThis[36179]:string[26] "dead at end of block" "const" "insert auto destroy"
      (540577 'move' localThis[36179] call_tmp[601648])
      const-val call_tmp[601655]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1905242]:string[26] "temp"
      (36189 call localize[32889] chars[36091] ret_tmp[1905242])
      (1905245 'move' call_tmp[601655] ret_tmp[1905242])
      const-val localChars[36190]:string[26] "dead at end of block" "const" "insert auto destroy"
      (540579 'move' localChars[36190] call_tmp[601655])
      val start[36196]:byteIndex[28173] "dead at end of block" "insert auto destroy"
      (540581 call init=[28148] start[36196] 0)
      ref call_tmp[601662]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
      (601665 'move' call_tmp[601662](36202 call buffLen[758075] localThis[36179]))
      const-val call_tmp[601667]:int(64)[13] "dead at end of block" "insert auto destroy" "maybe param" "temp"
      const-val coerce_tmp[1122205]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1122209 'move' coerce_tmp[1122205](1122207 'deref' call_tmp[601662]))
      (601670 'move' call_tmp[601667](36206 call -[962415] coerce_tmp[1122205]))
      val end[36208]:byteIndex[28173] "dead at end of block" "insert auto destroy"
      (540583 call init=[28148] end[36208] call_tmp[601667])
      const-val call_tmp[601672]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (601675 'move' call_tmp[601672] leading[36098])
      if call_tmp[601672]
      {
        {
          val _indexOfInterest[36291]:(int(32),byteIndex,int(64))[1122331] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[36292]:_ic__cpIndexLen__ref_string[1122574] "dead at end of block" "expr temp" "temp"
          const-val call_tmp[601679]:_ir__cpIndexLen__ref_string[1122580] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val default_arg_start[1122246]:byteIndex[28173] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
          const-val ret_tmp[1910038]:byteIndex[28173] "temp"
          (1122248 call _cpIndexLen_default_start[1122220] localThis[36179] ret_tmp[1910038])
          (1910041 'move' default_arg_start[1122246] ret_tmp[1910038])
          const-val ret_tmp[1905126]:_ir__cpIndexLen__ref_string[1122580] "temp"
          (36224 call _cpIndexLen[31109] localThis[36179] default_arg_start[1122246] ret_tmp[1905126])
          (1905129 'move' call_tmp[601679] ret_tmp[1905126])
          (36301 'move' _iterator[36292](36299 call _getIterator[1122589] call_tmp[601679]))
          {
            val ret[1982122]:_ir__cpIndexLen__ref_string[1122580] "dead after last mention" "RVV" "temp"
            const-val call_tmp[1982124]:string[26] "dead at end of block" "maybe param" "temp"
            const-val ret_tmp[1982126]:string[26] "temp"
            ref this[1984293]:_ref(string)[938128] "temp"
            (1984298 'move' this[1984293](1984295 '.v' _iterator[36292] F0_this[2094206]))
            (1982129 call localize[32889] this[1984293] ret_tmp[1982126])
            (1982132 'move' call_tmp[1982124] ret_tmp[1982126])
            val localThis[1982135]:string[26] "dead at end of block" "insert auto destroy"
            (1982137 'move' localThis[1982135] call_tmp[1982124])
            const-val call_tmp[1982140]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1982142 'move' call_tmp[1982140](1982145 call isASCII[31049] localThis[1982135]))
            const-val call_tmp[1982147]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1982149 'move' call_tmp[1982147] call_tmp[1982140])
            if call_tmp[1982140]
            {
              const-val _iterator[1982154]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108755] "dead at end of block" "expr temp" "insert auto destroy" "temp"
              const-val call_tmp[1982156]:range(int(64),bounded,false)[1027003] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
              const-val ret_tmp[1982158]:range(int(64),bounded,false)[1027003] "temp"
              ref this[1984300]:_ref(string)[938128] "temp"
              (1984305 'move' this[1984300](1984302 '.v' _iterator[36292] F0_this[2094206]))
              (1982161 call byteIndices[31068] this[1984300] ret_tmp[1982158])
              (1982164 'move' call_tmp[1982156] ret_tmp[1982158])
              val call_tmp[1982167]:_ic_these_range_int64_t_bounded_F[1096892] "dead at end of block" "expr temp" "maybe param" "temp"
              (1982169 'move' call_tmp[1982167](1982172 call _getIterator[1095509] call_tmp[1982156]))
              const-val call_tmp[1982174]:_ir_chpl_bytes__ref_string[1108451] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[1982176]:_ir_chpl_bytes__ref_string[1108451] "temp"
              ref this[1984307]:_ref(string)[938128] "temp"
              (1984312 'move' this[1984307](1984309 '.v' _iterator[36292] F0_this[2094206]))
              (1982179 call chpl_bytes[33577] this[1984307] ret_tmp[1982176])
              (1982182 'move' call_tmp[1982174] ret_tmp[1982176])
              val call_tmp[1982185]:_ic_chpl_bytes__ref_string[1108445] "dead at end of block" "expr temp" "maybe param" "temp"
              (1982187 'move' call_tmp[1982185](1982190 call _getIterator[1108460] call_tmp[1982174]))
              const-val ret_tmp[1982192]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108755] "temp"
              (1982195 call _build_tuple[1108713] call_tmp[1982167] call_tmp[1982185] ret_tmp[1982192])
              (1982199 'move' _iterator[1982154] ret_tmp[1982192])
              val _iterator[1982202]:_ic_these_range_int64_t_bounded_F[1096892] "temp"
              (1982204 'move' _iterator[1982202](1982206 '.v' _iterator[1982154] x0[1108751]))
              val _iterator[1982209]:_ic_chpl_bytes__ref_string[1108445] "temp"
              (1982211 'move' _iterator[1982209](1982213 '.v' _iterator[1982154] x1[1108753]))
              {
                (1982218 call zip1[1096927] _iterator[1982202])
              }
              {
                (1982222 call zip1[1108480] _iterator[1982209])
              }
              const-val isFinished[1982224]:bool[10] "temp"
              val hasMore[1982226]:bool[10] "temp"
              CForLoop[1982228]
              {
                val _indexOfInterest[1982251]:(int(64),uint(8))[1111229] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                {
                  (1982255 call zip2[1108489] _iterator[1982209])
                }
                {
                  const-val retTmp[1982258]:int(64)[13] "temp"
                  (1982260 'move' retTmp[1982258](1982263 call hasMore[1108516] _iterator[1982209]))
                  (1982265 'move' hasMore[1982226](1982267 'cast' bool[10] retTmp[1982258]))
                }
                (1982270 'move' isFinished[1982224](1982272 '!' hasMore[1982226]))
                if isFinished[1982224]
                {
                  (1982276 'chpl_error' c"zippered iterations have non-equal lengths")
                }
                {
                  (1982280 'move' _index[1982295](1982283 call getValue[1108525] _iterator[1982209]))
                }
                {
                  (1982287 call zip2[1096936] _iterator[1982202])
                }
                {
                  (1982290 'move' _index[1982301](1982293 call getValue[1096972] _iterator[1982202]))
                }
                val _index[1982295]:uint(8)[100] "temp"
                (1982297 '.=' _indexOfInterest[1982251] x1[1111227] _index[1982295])
                val _index[1982301]:int(64)[13] "temp"
                (1982303 '.=' _indexOfInterest[1982251] x0[1111225] _index[1982301])
                1
                const-val i[1982308]:int(64)[13] "const" "index var" "insert auto destroy"
                (1982310 'move' i[1982308](1982312 '.v' _indexOfInterest[1982251] x0[1111225]))
                const-val b[1982315]:uint(8)[100] "const" "index var" "insert auto destroy"
                (1982317 'move' b[1982315](1982319 '.v' _indexOfInterest[1982251] x1[1111227]))
                const-val yret[1982322]:(int(32),byteIndex,int(64))[1122331] "dead after last mention" "YVV" "temp"
                val call_tmp[1982324]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val call_tmp[1982326]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                (1982328 'move' call_tmp[1982326](1982330 'cast' int(32)[95] b[1982315]))
                const-val call_tmp[1982333]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1982335]:byteIndex[28173] "temp"
                (1982338 call _cast[39486] i[1982308] ret_tmp[1982335])
                (1982341 'move' call_tmp[1982333] ret_tmp[1982335])
                const-val call_tmp[1982344]:(int(32),byteIndex,int(64))[1122331] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1982346]:(int(32),byteIndex,int(64))[1122331] "temp"
                (1982349 call _build_tuple[1122281] call_tmp[1982326] call_tmp[1982333] 1 ret_tmp[1982346])
                (1982354 'move' call_tmp[1982344] ret_tmp[1982346])
                (1982357 'move' yret[1982322] call_tmp[1982344])
                const-val _yieldedIndex[1982939]:(int(32),byteIndex,int(64))[1122331] "temp"
                (1983641 'move' _yieldedIndex[1982939] call_tmp[1982344])
                {
                  1
                  const-val thisChar[1982942]:int(32)[95] "const" "index var" "insert auto destroy"
                  (1982944 'move' thisChar[1982942](1982946 '.v' _yieldedIndex[1982939] x0[1122325]))
                  ref i[1982949]:_ref(byteIndex)[948948] "index var" "insert auto destroy"
                  (1982951 'move' i[1982949](1982953 '.v' _yieldedIndex[1982939] x1[1122327]))
                  const-val nBytes[1982956]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1982958 'move' nBytes[1982956](1982960 '.v' _yieldedIndex[1982939] x2[1122329]))
                  {
                    {
                      val _indexOfInterest[1982965]:int(32)[95] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      val _iterator[1982967]:_ic_codepoints__ref_string[1123038] "dead at end of block" "expr temp" "temp"
                      const-val call_tmp[1982969]:_ir_codepoints__ref_string[1123044] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val ret_tmp[1982971]:_ir_codepoints__ref_string[1123044] "temp"
                      (1982974 call codepoints[33666] localChars[36190] ret_tmp[1982971])
                      (1982977 'move' call_tmp[1982969] ret_tmp[1982971])
                      (1982980 'move' _iterator[1982967](1982983 call _getIterator[1123053] call_tmp[1982969]))
                      {
                        val ret[1982986]:_ir_codepoints__ref_string[1123044] "dead at end of block" "RVV" "temp"
                        const-val call_tmp[1982988]:string[26] "dead at end of block" "maybe param" "temp"
                        const-val ret_tmp[1982990]:string[26] "temp"
                        ref this[1982992]:_ref(string)[938128] "temp"
                        (1982994 'move' this[1982992](1982996 '.v' _iterator[1982967] F0_this[2097732]))
                        (1983000 call localize[32889] this[1982992] ret_tmp[1982990])
                        (1983003 'move' call_tmp[1982988] ret_tmp[1982990])
                        val localThis[1983006]:string[26] "dead at end of block" "insert auto destroy"
                        (1983008 'move' localThis[1983006] call_tmp[1982988])
                        const-val call_tmp[1983011]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        ref this[1983013]:_ref(string)[938128] "temp"
                        (1983015 'move' this[1983013](1983017 '.v' _iterator[1982967] F0_this[2097732]))
                        (1983020 'move' call_tmp[1983011](1983023 call isASCII[31049] this[1983013]))
                        const-val call_tmp[1983025]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1983027 'move' call_tmp[1983025] call_tmp[1983011])
                        if call_tmp[1983011]
                        {
                          val _indexOfInterest[1983032]:uint(8)[100] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                          val _iterator[1983034]:_ic_chpl_bytes__ref_string[1108445] "dead at end of block" "expr temp" "temp"
                          const-val call_tmp[1983036]:_ir_chpl_bytes__ref_string[1108451] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val ret_tmp[1983038]:_ir_chpl_bytes__ref_string[1108451] "temp"
                          ref this[1983040]:_ref(string)[938128] "temp"
                          (1983042 'move' this[1983040](1983044 '.v' _iterator[1982967] F0_this[2097732]))
                          (1983048 call chpl_bytes[33577] this[1983040] ret_tmp[1983038])
                          (1983051 'move' call_tmp[1983036] ret_tmp[1983038])
                          (1983054 'move' _iterator[1983034](1983057 call _getIterator[1108460] call_tmp[1983036]))
                          {
                            val ret[1983060]:_ir_chpl_bytes__ref_string[1108451] "dead at end of block" "RVV" "temp"
                            const-val call_tmp[1983062]:string[26] "dead at end of block" "maybe param" "temp"
                            const-val ret_tmp[1983064]:string[26] "temp"
                            ref this[1983066]:_ref(string)[938128] "temp"
                            (1983068 'move' this[1983066](1983070 '.v' _iterator[1983034] F0_this[2095558]))
                            (1983074 call localize[32889] this[1983066] ret_tmp[1983064])
                            (1983077 'move' call_tmp[1983062] ret_tmp[1983064])
                            val localThis[1983080]:string[26] "dead at end of block" "insert auto destroy"
                            (1983082 'move' localThis[1983080] call_tmp[1983062])
                            val _indexOfInterest[1983085]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                            val _iterator[1983087]:_ic_chpl_direct_counted_range_iter[1103979] "dead at end of block" "expr temp" "temp"
                            ref call_tmp[1983089]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
                            (1983091 'move' call_tmp[1983089](1983094 call buffLen[758075] localThis[1983080]))
                            const-val call_tmp[1983096]:_ir_chpl_direct_counted_range_iter[1103985] "dead at end of block" "expr temp" "maybe param" "temp"
                            const-val coerce_tmp[1983098]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1983100 'move' coerce_tmp[1983098](1983102 'deref' call_tmp[1983089]))
                            const-val ret_tmp[1983104]:_ir_chpl_direct_counted_range_iter[1103985] "temp"
                            (1983107 call chpl_direct_counted_range_iter[458112] 0 coerce_tmp[1983098] ret_tmp[1983104])
                            (1983111 'move' call_tmp[1983096] ret_tmp[1983104])
                            (1983114 'move' _iterator[1983087](1983117 call _getIterator[1103994] call_tmp[1983096]))
                            {
                              val ret[1983120]:_ir_chpl_direct_counted_range_iter[1103985] "dead after last mention" "RVV" "temp"
                              val _indexOfInterest[1983122]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                              val _iterator[1983124]:_ic_chpl_direct_counted_range_iter_helper[1103729] "dead at end of block" "expr temp" "temp"
                              const-val call_tmp[1983126]:_ir_chpl_direct_counted_range_iter_helper[1103735] "dead at end of block" "expr temp" "maybe param" "temp"
                              const-val ret_tmp[1983128]:_ir_chpl_direct_counted_range_iter_helper[1103735] "temp"
                              const-val low[1983130]:int(64)[13] "temp"
                              (1983132 'move' low[1983130](1983134 '.v' _iterator[1983087] F0_low[2107536]))
                              const-val count[1983137]:int(64)[13] "temp"
                              (1983139 'move' count[1983137](1983141 '.v' _iterator[1983087] F1_count[2107540]))
                              (1983145 call chpl_direct_counted_range_iter_helper[1102287] low[1983130] count[1983137] ret_tmp[1983128])
                              (1983149 'move' call_tmp[1983126] ret_tmp[1983128])
                              (1983152 'move' _iterator[1983124](1983155 call _getIterator[1103744] call_tmp[1983126]))
                              {
                                val ret[2053878]:_ir_chpl_direct_counted_range_iter_helper[1103735] "dead after last mention" "RVV" "temp"
                                val call_tmp[2053880]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                const-val tmp[2053882]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val tmp[2053884]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                                const-val call_tmp[2053886]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                const-val count[2054374]:int(64)[13] "temp"
                                (2054379 'move' count[2054374](2054376 '.v' _iterator[1983124] F1_count[2113698]))
                                (2053888 'move' call_tmp[2053886](2053891 call <[948587] count[2054374]))
                                (2053893 'move' tmp[2053884] call_tmp[2053886])
                                (2053896 'move' tmp[2053882] call_tmp[2053886])
                                const-val call_tmp[2053899]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (2053901 'move' call_tmp[2053899] call_tmp[2053886])
                                if call_tmp[2053886]
                                {
                                  (2053907 call boundsCheckHalt[210254] "With a negative count, the range must have a last index.")
                                }
                                const-val tmp[2053910]:2*int(64)[1040245] "dead at end of block" "const" "insert auto destroy" "temp"
                                val tmp[2053912]:2*int(64)[1040245] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                                const-val tmp[2053914]:bool[10] "dead after last mention" "maybe param" "temp"
                                const-val call_tmp[2053916]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                const-val count[2054381]:int(64)[13] "temp"
                                (2054386 'move' count[2054381](2054383 '.v' _iterator[1983124] F1_count[2113698]))
                                (2053918 'move' call_tmp[2053916](2053921 call ==[435744] count[2054381] 0))
                                (2053924 'move' tmp[2053914] call_tmp[2053916])
                                if call_tmp[2053916]
                                {
                                  const-val tmp[2053929]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                                  val call_tmp[2053931]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                                  const-val call_tmp[2053933]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val low[2054388]:int(64)[13] "temp"
                                  (2054393 'move' low[2054388](2054390 '.v' _iterator[1983124] F0_low[2113694]))
                                  (2053935 'move' call_tmp[2053933](2053938 call _cast[956223] low[2054388]))
                                  const-val call_tmp[2053940]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val coerce_tmp[2053942]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                                  (2053944 'move' coerce_tmp[2053942](2053946 'cast' uint(64)[115] 1))
                                  (2053949 'move' call_tmp[2053940](2053952 call -[962382] call_tmp[2053933]))
                                  const-val call_tmp[2053954]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  (2053956 'move' call_tmp[2053954](2053959 call _cast[953732] call_tmp[2053940]))
                                  const-val ret_tmp[2053961]:2*int(64)[1040245] "temp"
                                  const-val low[2054395]:int(64)[13] "temp"
                                  (2054400 'move' low[2054395](2054397 '.v' _iterator[1983124] F0_low[2113694]))
                                  (2053964 call _build_tuple[1040203] low[2054395] call_tmp[2053954] ret_tmp[2053961])
                                  (2053968 'move' tmp[2053929] ret_tmp[2053961])
                                  (2053971 'move' tmp[2053912] tmp[2053929])
                                }
                                {
                                  const-val tmp[2053975]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                                  val call_tmp[2053977]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  const-val call_tmp[2053979]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val count[2054402]:int(64)[13] "temp"
                                  (2054407 'move' count[2054402](2054404 '.v' _iterator[1983124] F1_count[2113698]))
                                  (2053981 'move' call_tmp[2053979] count[2054402])
                                  const-val call_tmp[2053984]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val count[2054409]:int(64)[13] "temp"
                                  (2054414 'move' count[2054409](2054411 '.v' _iterator[1983124] F1_count[2113698]))
                                  (2053986 'move' call_tmp[2053984](2053989 call -[962415] count[2054409]))
                                  const-val call_tmp[2053991]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val low[2054416]:int(64)[13] "temp"
                                  (2054421 'move' low[2054416](2054418 '.v' _iterator[1983124] F0_low[2113694]))
                                  (2053993 'move' call_tmp[2053991](2053996 call +[439752] low[2054416] call_tmp[2053984]))
                                  const-val ret_tmp[2053999]:2*int(64)[1040245] "temp"
                                  const-val low[2054423]:int(64)[13] "temp"
                                  (2054428 'move' low[2054423](2054425 '.v' _iterator[1983124] F0_low[2113694]))
                                  (2054002 call _build_tuple[1040203] low[2054423] call_tmp[2053991] ret_tmp[2053999])
                                  (2054006 'move' tmp[2053975] ret_tmp[2053999])
                                  (2054009 'move' tmp[2053912] tmp[2053975])
                                }
                                (2054013 '=' tmp[2053910] tmp[2053912])
                                (2054016 'noop')
                                1
                                ref call_tmp[2054018]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
                                (2054020 'move' call_tmp[2054018](2054022 '.' tmp[2053910] x0[1040241]))
                                const-val start[2054025]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                const-val coerce_tmp[2054027]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                (2054029 'move' coerce_tmp[2054027](2054031 'deref' call_tmp[2054018]))
                                (2054033 '=' start[2054025] coerce_tmp[2054027])
                                (2054036 'noop')
                                ref call_tmp[2054037]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
                                (2054039 'move' call_tmp[2054037](2054041 '.' tmp[2053910] x1[1040243]))
                                const-val end[2054044]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                const-val coerce_tmp[2054046]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                (2054048 'move' coerce_tmp[2054046](2054050 'deref' call_tmp[2054037]))
                                (2054052 '=' end[2054044] coerce_tmp[2054046])
                                (2054055 'noop')
                                val _indexOfInterest[2054056]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                                val _iterator[2054058]:_ic_chpl_direct_param_stride_range_iter[1103475] "dead at end of block" "expr temp" "temp"
                                const-val call_tmp[2054060]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead at end of block" "expr temp" "maybe param" "temp"
                                const-val ret_tmp[2054062]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
                                (2054065 call chpl_direct_param_stride_range_iter[1102713] coerce_tmp[2054027] coerce_tmp[2054046] ret_tmp[2054062])
                                (2054069 'move' call_tmp[2054060] ret_tmp[2054062])
                                (2054072 'move' _iterator[2054058](2054075 call _getIterator[1103490] call_tmp[2054060]))
                                {
                                  val ret[2054078]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead after last mention" "RVV" "temp"
                                  val call_tmp[2054080]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  (2054083 call chpl_range_check_stride[1103033])
                                  val i[2054084]:int(64)[13] "dead at end of block" "insert auto destroy"
                                  val call_tmp[2054086]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  (2054088 'move' i[2054084] 0)
                                  val call_tmp[2054091]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  const-val default_arg_first[2054093]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                                  const-val low[2054095]:int(64)[13] "temp"
                                  (2054097 'move' low[2054095](2054099 '.v' _iterator[2054058] F0_low[2115192]))
                                  (2054102 'move' default_arg_first[2054093](2054105 call chpl_checkIfRangeIterWillOverflow_default_first[1103387] low[2054095]))
                                  const-val default_arg_last[2054107]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                                  const-val high[2054109]:int(64)[13] "temp"
                                  (2054111 'move' high[2054109](2054113 '.v' _iterator[2054058] F1_high[2115196]))
                                  (2054116 'move' default_arg_last[2054107](2054119 call chpl_checkIfRangeIterWillOverflow_default_last[1103415] high[2054109]))
                                  const-val _return_tmp_[2054121]:bool[10] "dead after last mention" "temp"
                                  const-val low[2054123]:int(64)[13] "temp"
                                  (2054125 'move' low[2054123](2054127 '.v' _iterator[2054058] F0_low[2115192]))
                                  const-val high[2054130]:int(64)[13] "temp"
                                  (2054132 'move' high[2054130](2054134 '.v' _iterator[2054058] F1_high[2115196]))
                                  (2054137 'move' _return_tmp_[2054121](2054140 call chpl_checkIfRangeIterWillOverflow[1096265] low[2054123] high[2054130] 1 default_arg_first[2054093] default_arg_last[2054107] 1))
                                  CForLoop[2054147]
                                  {
                                    const-val yret[2054176]:int(64)[13] "dead after last mention" "YVV" "temp"
                                    (2054178 'move' yret[2054176] i[2054084])
                                    const-val _yieldedIndex[2054181]:int(64)[13] "temp"
                                    (2054183 'move' _yieldedIndex[2054181] i[2054084])
                                    {
                                      const-val i[2054187]:int(64)[13] "const" "index var" "insert auto destroy"
                                      (2054189 'move' i[2054187] _yieldedIndex[2054181])
                                      const-val yret[2054192]:int(64)[13] "dead after last mention" "YVV" "temp"
                                      (2054194 'move' yret[2054192] _yieldedIndex[2054181])
                                      const-val _yieldedIndex[2054222]:int(64)[13] "temp"
                                      (2054372 'move' _yieldedIndex[2054222] _yieldedIndex[2054181])
                                      {
                                        const-val i[2054224]:int(64)[13] "const" "index var" "insert auto destroy"
                                        (2054226 'move' i[2054224] _yieldedIndex[2054222])
                                        const-val yret[2054229]:int(64)[13] "dead after last mention" "YVV" "temp"
                                        (2054231 'move' yret[2054229] _yieldedIndex[2054222])
                                        const-val _yieldedIndex[2054234]:int(64)[13] "temp"
                                        (2054236 'move' _yieldedIndex[2054234] _yieldedIndex[2054222])
                                        {
                                          const-val i[2054240]:int(64)[13] "const" "index var" "insert auto destroy"
                                          (2054242 'move' i[2054240] _yieldedIndex[2054234])
                                          const-val yret[2054245]:uint(8)[100] "dead after last mention" "YVV" "temp"
                                          ref call_tmp[2054247]:_ref(uint(8))[937097] "dead after last mention" "maybe param" "temp"
                                          ref _this_tmp_[2054249]:_ref(c_ptr(uint(8)))[937621] "dead after last mention" "temp"
                                          (2054251 'move' _this_tmp_[2054249](2054254 call buff[758153] localThis[1983080]))
                                          val coerce_tmp[2054256]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                          (2054258 'move' coerce_tmp[2054256](2054260 'deref' _this_tmp_[2054249]))
                                          (2054262 'move' call_tmp[2054247](2054265 call this[954280] coerce_tmp[2054256] _yieldedIndex[2054234]))
                                          const-val coerce_tmp[2054268]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                          (2054270 'move' coerce_tmp[2054268](2054272 'deref' call_tmp[2054247]))
                                          (2054274 '=' yret[2054245] coerce_tmp[2054268])
                                          (2054277 'noop')
                                          const-val _yieldedIndex[2054278]:uint(8)[100] "temp"
                                          (2054280 'move' _yieldedIndex[2054278] coerce_tmp[2054268])
                                          {
                                            const-val b[2054284]:uint(8)[100] "const" "index var" "insert auto destroy"
                                            (2054286 'move' b[2054284] _yieldedIndex[2054278])
                                            val yret[2054289]:int(32)[95] "dead after last mention" "YVV" "temp"
                                            val call_tmp[2054291]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                            const-val _yieldedIndex[2054293]:int(32)[95] "temp"
                                            (2054295 'move' _yieldedIndex[2054293](2054297 'cast' int(32)[95] _yieldedIndex[2054278]))
                                            {
                                              const-val removeChar[2054301]:int(32)[95] "const" "index var" "insert auto destroy"
                                              (2054303 'move' removeChar[2054301] _yieldedIndex[2054293])
                                              {
                                                const-val call_tmp[2054307]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                                (2054309 'move' call_tmp[2054307](2054312 call ==[435722] thisChar[1982942] removeChar[2054301]))
                                                const-val call_tmp[2054315]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                                (2054317 'move' call_tmp[2054315] call_tmp[2054307])
                                                if call_tmp[2054315]
                                                {
                                                  const-val call_tmp[2054322]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                                  const-val ret_tmp[2054324]:byteIndex[28173] "temp"
                                                  (2054327 call +[28725] i[1982949] nBytes[1982956] ret_tmp[2054324])
                                                  (2054331 'move' call_tmp[2054322] ret_tmp[2054324])
                                                  (2054335 call =[38194] start[36196] call_tmp[2054322])
                                                  (2054339 call chpl__autoDestroy[1601936] call_tmp[2054322])
                                                  (2054366 call _freeIterator[1103663] _iterator[2054058])
                                                  (2054369 call chpl__autoDestroy[1674803] tmp[2053910])
                                                  (2054342 call _freeIterator[1103913] _iterator[1983124])
                                                  (2054345 call _freeIterator[1104163] _iterator[1983087])
                                                  (2054348 call chpl__autoDestroy[1601673] localThis[1983080])
                                                  (2054351 call _freeIterator[1109758] _iterator[1983034])
                                                  (2054354 call chpl__autoDestroy[1601673] localThis[1983006])
                                                  (2054357 call _freeIterator[1123325] _iterator[1982967])
                                                  continue _continueLabel[1983574] _continueLabel[1983574]
                                                }
                                              }
                                              label _continueLabel[2054362]
                                            }
                                          }
                                        }
                                      }
                                    }
                                    {
                                      const-val low[2054149]:int(64)[13] "temp"
                                      (2054151 'move' low[2054149](2054153 '.v' _iterator[2054058] F0_low[2115192]))
                                      (2054156 '=' i[2054084] low[2054149])
                                    }
                                    {
                                      const-val high[2054160]:int(64)[13] "temp"
                                      (2054162 'move' high[2054160](2054164 '.v' _iterator[2054058] F1_high[2115196]))
                                      (2054167 '<=' i[2054084] high[2054160])
                                    }
                                    {
                                      val call_tmp[2054171]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                      (2054173 '+=' i[2054084] 1)
                                    }
                                  }
                                  label _endchpl_direct_param_stride_range_iter[2054210]
                                }
                                (2054213 call _freeIterator[1103663] _iterator[2054058])
                                (2054216 call chpl__autoDestroy[1674803] tmp[2053910])
                                label _endchpl_direct_counted_range_iter_helper[2054218]
                              }
                              (1983301 call _freeIterator[1103913] _iterator[1983124])
                              label _endchpl_direct_counted_range_iter[1983303]
                            }
                            (1983306 call _freeIterator[1104163] _iterator[1983087])
                            (1983309 call chpl__autoDestroy[1601673] localThis[1983080])
                            label _endchpl_bytes[1983311]
                          }
                          (1983314 call _freeIterator[1109758] _iterator[1983034])
                        }
                        {
                          val i[1983317]:int(64)[13] "dead at end of block" "insert auto destroy"
                          (1983319 'move' i[1983317] 0)
                          val tmp[1983322]:bool[10] "dead after last mention" "temp"
                          ref call_tmp[1983324]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
                          (1983326 'move' call_tmp[1983324](1983329 call buffLen[758075] localThis[1983006]))
                          const-val call_tmp[1983331]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val coerce_tmp[1983333]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (1983335 'move' coerce_tmp[1983333](1983337 'deref' call_tmp[1983324]))
                          (1983339 'move' call_tmp[1983331](1983342 call <[437568] 0 coerce_tmp[1983333]))
                          (1983345 'move' tmp[1983322] call_tmp[1983331])
                          WhileDo[1983348]
                          {
                            ref call_tmp[1983350]:_ref(c_ptr(uint(8)))[937621] "dead at end of block" "maybe param" "temp"
                            (1983352 'move' call_tmp[1983350](1983355 call buff[758153] localThis[1983006]))
                            ref call_tmp[1983357]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
                            (1983359 'move' call_tmp[1983357](1983362 call buffLen[758075] localThis[1983006]))
                            const-val call_tmp[1983364]:(syserr,int(32),int(32))[964809] "dead at end of block" "maybe param" "temp"
                            val coerce_tmp[1983366]:c_ptr(uint(8))[937612] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1983368 'move' coerce_tmp[1983366](1983370 'deref' call_tmp[1983350]))
                            const-val coerce_tmp[1983372]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1983374 'move' coerce_tmp[1983372](1983376 'deref' call_tmp[1983357]))
                            const-val ret_tmp[1983378]:(syserr,int(32),int(32))[964809] "temp"
                            (1983381 call decodeHelp[174452] coerce_tmp[1983366] coerce_tmp[1983372] i[1983317] 1 ret_tmp[1983378])
                            (1983387 'move' call_tmp[1983364] ret_tmp[1983378])
                            const-val tmp[1983390]:(syserr,int(32),int(32))[964809] "dead at end of block" "const" "insert auto destroy" "temp"
                            (1983392 'move' tmp[1983390] call_tmp[1983364])
                            1
                            ref call_tmp[1983396]:_ref(syserr)[949021] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1983398 'move' call_tmp[1983396](1983400 '.' tmp[1983390] x0[964803]))
                            const-val decodeRet[1983403]:syserr[223672] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1983405]:syserr[223672] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1983407 'move' coerce_tmp[1983405](1983409 'deref' call_tmp[1983396]))
                            (1983411 'move' decodeRet[1983403](1983414 call chpl__initCopy[964674] coerce_tmp[1983405]))
                            ref call_tmp[1983416]:_ref(int(32))[936815] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1983418 'move' call_tmp[1983416](1983420 '.' tmp[1983390] x1[964805]))
                            const-val cp[1983423]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1983425]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1983427 'move' coerce_tmp[1983425](1983429 'deref' call_tmp[1983416]))
                            (1983431 'move' cp[1983423](1983434 call chpl__initCopy[964946] coerce_tmp[1983425]))
                            ref call_tmp[1983436]:_ref(int(32))[936815] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1983438 'move' call_tmp[1983436](1983440 '.' tmp[1983390] x2[964807]))
                            const-val nBytes[1983443]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1983445]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1983447 'move' coerce_tmp[1983445](1983449 'deref' call_tmp[1983436]))
                            (1983451 'move' nBytes[1983443](1983454 call chpl__initCopy[964946] coerce_tmp[1983445]))
                            const-val yret[1983456]:int(32)[95] "dead after last mention" "YVV" "temp"
                            val call_tmp[1983458]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                            (1983460 'move' yret[1983456] cp[1983423])
                            const-val _yieldedIndex[1983463]:int(32)[95] "temp"
                            (1983465 'move' _yieldedIndex[1983463] cp[1983423])
                            {
                              const-val removeChar[1983469]:int(32)[95] "const" "index var" "insert auto destroy"
                              (1983471 'move' removeChar[1983469] _yieldedIndex[1983463])
                              {
                                const-val call_tmp[1983475]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1983477 'move' call_tmp[1983475](1983480 call ==[435722] thisChar[1982942] removeChar[1983469]))
                                const-val call_tmp[1983483]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1983485 'move' call_tmp[1983483] call_tmp[1983475])
                                if call_tmp[1983483]
                                {
                                  const-val call_tmp[1983490]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                  const-val ret_tmp[1983492]:byteIndex[28173] "temp"
                                  (1983495 call +[28725] i[1982949] nBytes[1982956] ret_tmp[1983492])
                                  (1983499 'move' call_tmp[1983490] ret_tmp[1983492])
                                  (1983503 call =[38194] start[36196] call_tmp[1983490])
                                  (1983507 call chpl__autoDestroy[1601936] call_tmp[1983490])
                                  (1983510 call chpl__autoDestroy[1605546] tmp[1983390])
                                  (1983513 call chpl__autoDestroy[1601673] localThis[1983006])
                                  (1983516 call _freeIterator[1123325] _iterator[1982967])
                                  continue _continueLabel[1983574] _continueLabel[1983574]
                                }
                              }
                              label _continueLabel[1983521]
                            }
                            const-val coerce_tmp[1983523]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (1983525 'move' coerce_tmp[1983523](1983527 'cast' int(64)[13] nBytes[1983443]))
                            (1983531 call +=[451431] i[1983317] coerce_tmp[1983523])
                            (1983535 call chpl__autoDestroy[1605546] tmp[1983390])
                            ref call_tmp[1983537]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
                            (1983539 'move' call_tmp[1983537](1983542 call buffLen[758075] localThis[1983006]))
                            const-val call_tmp[1983544]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            const-val coerce_tmp[1983546]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (1983548 'move' coerce_tmp[1983546](1983550 'deref' call_tmp[1983537]))
                            (1983552 'move' call_tmp[1983544](1983555 call <[437568] i[1983317] coerce_tmp[1983546]))
                            (1983558 'move' tmp[1983322] call_tmp[1983544])
                            tmp[1983322]
                          }
                        }
                        (1983563 call chpl__autoDestroy[1601673] localThis[1983006])
                        label _endcodepoints[1983565]
                      }
                      label _breakLabel[1983567]
                      (1983570 call _freeIterator[1123325] _iterator[1982967])
                    }
                    ref moreRef1[1983577]:_ref(int(64))[936761] "temp"
                    (1983579 'move' moreRef1[1983577](1983581 '.' _iterator[1982202] more[1096895]))
                    const-val moreVal1[1983584]:int(64)[13] "const" "temp"
                    (1983586 '=' moreVal1[1983584] moreRef1[1983577])
                    const-val moreValNeg1[1983589]:int(64)[13] "const" "temp"
                    (1983591 'move' moreValNeg1[1983589](1983593 'u-' moreVal1[1983584]))
                    (1983595 '=' moreRef1[1983577] moreValNeg1[1983589])
                    (1983599 call advance[1096918] _iterator[1982202])
                    ref moreRef2[1983601]:_ref(int(64))[936761] "temp"
                    (1983603 'move' moreRef2[1983601](1983605 '.' _iterator[1982209] more[1108448]))
                    const-val moreVal2[1983608]:int(64)[13] "const" "temp"
                    (1983610 '=' moreVal2[1983608] moreRef2[1983601])
                    const-val moreValNeg2[1983613]:int(64)[13] "const" "temp"
                    (1983615 'move' moreValNeg2[1983613](1983617 'u-' moreVal2[1983608]))
                    (1983619 '=' moreRef2[1983601] moreValNeg2[1983613])
                    (1983623 call advance[1108471] _iterator[1982209])
                    (1983626 call chpl__autoDestroy[1601936] call_tmp[1982333])
                    (1983629 call _freeIterator[1108913] _iterator[1982154])
                    (1983632 call chpl__autoDestroy[1681548] _iterator[1982154])
                    (1983635 call chpl__autoDestroy[1407763] call_tmp[1982156])
                    (1983638 call chpl__autoDestroy[1601673] localThis[1982135])
                    break _breakLabel[36297] _breakLabel[36297]
                  }
                  label _continueLabel[1983574]
                }
                (1982431 call chpl__autoDestroy[1601936] call_tmp[1982333])
                {
                  (1982435 call zip3[1096945] _iterator[1982202])
                }
                {
                  (1982439 call zip3[1108498] _iterator[1982209])
                }
                {
                  {
                    (1982232 call init[1096981] _iterator[1982202])
                  }
                  {
                    (1982236 call init[1108534] _iterator[1982209])
                  }
                }
                {
                  (1982240 call hasMore[1096963] _iterator[1982202])
                }
                {
                  {
                    (1982245 call incr[1096990] _iterator[1982202])
                  }
                  {
                    (1982249 call incr[1108543] _iterator[1982209])
                  }
                }
              }
              {
                const-val retTmp[1982442]:int(64)[13] "temp"
                (1982444 'move' retTmp[1982442](1982447 call hasMore[1108516] _iterator[1982209]))
                (1982449 'move' hasMore[1982226](1982451 'cast' bool[10] retTmp[1982442]))
              }
              if hasMore[1982226]
              {
                (1982456 'chpl_error' c"zippered iterations have non-equal lengths")
              }
              {
                (1982461 call zip4[1108507] _iterator[1982209])
              }
              {
                (1982465 call zip4[1096954] _iterator[1982202])
              }
              (1982468 call _freeIterator[1108913] _iterator[1982154])
              (1982471 call chpl__autoDestroy[1681548] _iterator[1982154])
              (1982474 call chpl__autoDestroy[1407763] call_tmp[1982156])
            }
            {
              const-val call_tmp[1982477]:int(64)[13] "dead at end of block" "maybe param" "temp"
              ref start[1984314]:_ref(byteIndex)[948948] "temp"
              (1984319 'move' start[1984314](1984316 '.v' _iterator[36292] F1_start[2094210]))
              (1982479 'move' call_tmp[1982477](1982482 call _cast[39465] start[1984314]))
              val i[1982484]:int(64)[13] "dead at end of block" "insert auto destroy"
              (1982486 'move' i[1982484] call_tmp[1982477])
              const-val call_tmp[1982489]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1982491 'move' call_tmp[1982489](1982494 call >[437788] call_tmp[1982477] 0))
              const-val call_tmp[1982497]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1982499 'move' call_tmp[1982497] call_tmp[1982489])
              if call_tmp[1982489]
              {
                val tmp[1982504]:bool[10] "dead after last mention" "temp"
                const-val tmp[1982506]:bool[10] "dead after last mention" "maybe param" "temp"
                ref call_tmp[1982508]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
                (1982510 'move' call_tmp[1982508](1982513 call buffLen[758075] localThis[1982135]))
                const-val coerce_tmp[1982515]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1982517 'move' coerce_tmp[1982515](1982519 'deref' call_tmp[1982508]))
                (1982521 'move' tmp[1982506](1982524 call <[437568] i[1982484] coerce_tmp[1982515]))
                val tmp[1982527]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val tmp[1982529]:bool[10] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[1982531]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1982533 'move' call_tmp[1982531] tmp[1982506])
                (1982536 'move' tmp[1982529] tmp[1982506])
                if tmp[1982506]
                {
                  const-val tmp[1982541]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  ref call_tmp[1982543]:_ref(uint(8))[937097] "dead after last mention" "maybe param" "temp"
                  ref _this_tmp_[1982545]:_ref(c_ptr(uint(8)))[937621] "dead after last mention" "temp"
                  (1982547 'move' _this_tmp_[1982545](1982550 call buff[758153] localThis[1982135]))
                  val coerce_tmp[1982552]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1982554 'move' coerce_tmp[1982552](1982556 'deref' _this_tmp_[1982545]))
                  (1982558 'move' call_tmp[1982543](1982561 call this[954280] coerce_tmp[1982552] i[1982484]))
                  const-val call_tmp[1982564]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[1982566]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1982568 'move' coerce_tmp[1982566](1982570 'deref' call_tmp[1982543]))
                  (1982572 'move' call_tmp[1982564](1982575 call isInitialByte[181574] coerce_tmp[1982566]))
                  const-val call_tmp[1982577]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1982579 'move' call_tmp[1982577](1982582 call ![7494] call_tmp[1982564]))
                  (1982584 'move' tmp[1982541] call_tmp[1982577])
                  (1982587 'move' tmp[1982527] call_tmp[1982577])
                }
                {
                  (1982591 'move' tmp[1982527] 0)
                }
                (1982595 'move' tmp[1982504] tmp[1982527])
                WhileDo[1982598]
                {
                  (1982601 call +=[451431] i[1982484] 1)
                  const-val tmp[1982604]:bool[10] "dead after last mention" "maybe param" "temp"
                  ref call_tmp[1982606]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
                  (1982608 'move' call_tmp[1982606](1982611 call buffLen[758075] localThis[1982135]))
                  const-val coerce_tmp[1982613]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1982615 'move' coerce_tmp[1982613](1982617 'deref' call_tmp[1982606]))
                  (1982619 'move' tmp[1982604](1982622 call <[437568] i[1982484] coerce_tmp[1982613]))
                  val tmp[1982625]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                  const-val tmp[1982627]:bool[10] "dead after last mention" "maybe param" "temp"
                  const-val call_tmp[1982629]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1982631 'move' call_tmp[1982629] tmp[1982604])
                  (1982634 'move' tmp[1982627] tmp[1982604])
                  if tmp[1982604]
                  {
                    const-val tmp[1982639]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                    ref call_tmp[1982641]:_ref(uint(8))[937097] "dead after last mention" "maybe param" "temp"
                    ref _this_tmp_[1982643]:_ref(c_ptr(uint(8)))[937621] "dead after last mention" "temp"
                    (1982645 'move' _this_tmp_[1982643](1982648 call buff[758153] localThis[1982135]))
                    val coerce_tmp[1982650]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1982652 'move' coerce_tmp[1982650](1982654 'deref' _this_tmp_[1982643]))
                    (1982656 'move' call_tmp[1982641](1982659 call this[954280] coerce_tmp[1982650] i[1982484]))
                    const-val call_tmp[1982662]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[1982664]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1982666 'move' coerce_tmp[1982664](1982668 'deref' call_tmp[1982641]))
                    (1982670 'move' call_tmp[1982662](1982673 call isInitialByte[181574] coerce_tmp[1982664]))
                    const-val call_tmp[1982675]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1982677 'move' call_tmp[1982675](1982680 call ![7494] call_tmp[1982662]))
                    (1982682 'move' tmp[1982639] call_tmp[1982675])
                    (1982685 'move' tmp[1982625] call_tmp[1982675])
                  }
                  {
                    (1982689 'move' tmp[1982625] 0)
                  }
                  (1982693 'move' tmp[1982504] tmp[1982625])
                  tmp[1982504]
                }
              }
              val tmp[1982697]:bool[10] "dead after last mention" "temp"
              ref call_tmp[1982699]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
              (1982701 'move' call_tmp[1982699](1982704 call buffLen[758075] localThis[1982135]))
              const-val call_tmp[1982706]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1982708]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1982710 'move' coerce_tmp[1982708](1982712 'deref' call_tmp[1982699]))
              (1982714 'move' call_tmp[1982706](1982717 call <[437568] i[1982484] coerce_tmp[1982708]))
              (1982720 'move' tmp[1982697] call_tmp[1982706])
              WhileDo[1982723]
              {
                ref call_tmp[1982725]:_ref(c_ptr(uint(8)))[937621] "dead at end of block" "maybe param" "temp"
                (1982727 'move' call_tmp[1982725](1982730 call buff[758153] localThis[1982135]))
                ref call_tmp[1982732]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
                (1982734 'move' call_tmp[1982732](1982737 call buffLen[758075] localThis[1982135]))
                const-val call_tmp[1982739]:(syserr,int(32),int(32))[964809] "dead at end of block" "maybe param" "temp"
                val coerce_tmp[1982741]:c_ptr(uint(8))[937612] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1982743 'move' coerce_tmp[1982741](1982745 'deref' call_tmp[1982725]))
                const-val coerce_tmp[1982747]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1982749 'move' coerce_tmp[1982747](1982751 'deref' call_tmp[1982732]))
                const-val ret_tmp[1982753]:(syserr,int(32),int(32))[964809] "temp"
                (1982756 call decodeHelp[174452] coerce_tmp[1982741] coerce_tmp[1982747] i[1982484] 1 ret_tmp[1982753])
                (1982762 'move' call_tmp[1982739] ret_tmp[1982753])
                const-val tmp[1982765]:(syserr,int(32),int(32))[964809] "dead at end of block" "const" "insert auto destroy" "temp"
                (1982767 'move' tmp[1982765] call_tmp[1982739])
                1
                ref call_tmp[1982771]:_ref(syserr)[949021] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1982773 'move' call_tmp[1982771](1982775 '.' tmp[1982765] x0[964803]))
                const-val decodeRet[1982778]:syserr[223672] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1982780]:syserr[223672] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1982782 'move' coerce_tmp[1982780](1982784 'deref' call_tmp[1982771]))
                (1982786 'move' decodeRet[1982778](1982789 call chpl__initCopy[964674] coerce_tmp[1982780]))
                ref call_tmp[1982791]:_ref(int(32))[936815] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1982793 'move' call_tmp[1982791](1982795 '.' tmp[1982765] x1[964805]))
                const-val cp[1982798]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1982800]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1982802 'move' coerce_tmp[1982800](1982804 'deref' call_tmp[1982791]))
                (1982806 'move' cp[1982798](1982809 call chpl__initCopy[964946] coerce_tmp[1982800]))
                ref call_tmp[1982811]:_ref(int(32))[936815] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1982813 'move' call_tmp[1982811](1982815 '.' tmp[1982765] x2[964807]))
                const-val nBytes[1982818]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1982820]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1982822 'move' coerce_tmp[1982820](1982824 'deref' call_tmp[1982811]))
                (1982826 'move' nBytes[1982818](1982829 call chpl__initCopy[964946] coerce_tmp[1982820]))
                const-val yret[1982831]:(int(32),byteIndex,int(64))[1122331] "dead after last mention" "YVV" "temp"
                val call_tmp[1982833]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val call_tmp[1982835]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                (1982837 'move' call_tmp[1982835] cp[1982798])
                const-val call_tmp[1982840]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1982842]:byteIndex[28173] "temp"
                (1982845 call _cast[39486] i[1982484] ret_tmp[1982842])
                (1982848 'move' call_tmp[1982840] ret_tmp[1982842])
                const-val call_tmp[1982851]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                (1982853 'move' call_tmp[1982851](1982855 'cast' int(64)[13] nBytes[1982818]))
                const-val call_tmp[1982858]:(int(32),byteIndex,int(64))[1122331] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1982860]:(int(32),byteIndex,int(64))[1122331] "temp"
                (1982863 call _build_tuple[1122281] cp[1982798] call_tmp[1982840] call_tmp[1982851] ret_tmp[1982860])
                (1982868 'move' call_tmp[1982858] ret_tmp[1982860])
                (1982871 'move' yret[1982831] call_tmp[1982858])
                const-val _yieldedIndex[1983643]:(int(32),byteIndex,int(64))[1122331] "temp"
                (1984291 'move' _yieldedIndex[1983643] call_tmp[1982858])
                {
                  1
                  const-val thisChar[1983646]:int(32)[95] "const" "index var" "insert auto destroy"
                  (1983648 'move' thisChar[1983646](1983650 '.v' _yieldedIndex[1983643] x0[1122325]))
                  ref i[1983653]:_ref(byteIndex)[948948] "index var" "insert auto destroy"
                  (1983655 'move' i[1983653](1983657 '.v' _yieldedIndex[1983643] x1[1122327]))
                  const-val nBytes[1983660]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1983662 'move' nBytes[1983660](1983664 '.v' _yieldedIndex[1983643] x2[1122329]))
                  {
                    {
                      val _indexOfInterest[1983669]:int(32)[95] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      val _iterator[1983671]:_ic_codepoints__ref_string[1123038] "dead at end of block" "expr temp" "temp"
                      const-val call_tmp[1983673]:_ir_codepoints__ref_string[1123044] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val ret_tmp[1983675]:_ir_codepoints__ref_string[1123044] "temp"
                      (1983678 call codepoints[33666] localChars[36190] ret_tmp[1983675])
                      (1983681 'move' call_tmp[1983673] ret_tmp[1983675])
                      (1983684 'move' _iterator[1983671](1983687 call _getIterator[1123053] call_tmp[1983673]))
                      {
                        val ret[1983690]:_ir_codepoints__ref_string[1123044] "dead at end of block" "RVV" "temp"
                        const-val call_tmp[1983692]:string[26] "dead at end of block" "maybe param" "temp"
                        const-val ret_tmp[1983694]:string[26] "temp"
                        ref this[1983696]:_ref(string)[938128] "temp"
                        (1983698 'move' this[1983696](1983700 '.v' _iterator[1983671] F0_this[2097732]))
                        (1983704 call localize[32889] this[1983696] ret_tmp[1983694])
                        (1983707 'move' call_tmp[1983692] ret_tmp[1983694])
                        val localThis[1983710]:string[26] "dead at end of block" "insert auto destroy"
                        (1983712 'move' localThis[1983710] call_tmp[1983692])
                        const-val call_tmp[1983715]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        ref this[1983717]:_ref(string)[938128] "temp"
                        (1983719 'move' this[1983717](1983721 '.v' _iterator[1983671] F0_this[2097732]))
                        (1983724 'move' call_tmp[1983715](1983727 call isASCII[31049] this[1983717]))
                        const-val call_tmp[1983729]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1983731 'move' call_tmp[1983729] call_tmp[1983715])
                        if call_tmp[1983715]
                        {
                          val _indexOfInterest[1983736]:uint(8)[100] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                          val _iterator[1983738]:_ic_chpl_bytes__ref_string[1108445] "dead at end of block" "expr temp" "temp"
                          const-val call_tmp[1983740]:_ir_chpl_bytes__ref_string[1108451] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val ret_tmp[1983742]:_ir_chpl_bytes__ref_string[1108451] "temp"
                          ref this[1983744]:_ref(string)[938128] "temp"
                          (1983746 'move' this[1983744](1983748 '.v' _iterator[1983671] F0_this[2097732]))
                          (1983752 call chpl_bytes[33577] this[1983744] ret_tmp[1983742])
                          (1983755 'move' call_tmp[1983740] ret_tmp[1983742])
                          (1983758 'move' _iterator[1983738](1983761 call _getIterator[1108460] call_tmp[1983740]))
                          {
                            val ret[1983764]:_ir_chpl_bytes__ref_string[1108451] "dead at end of block" "RVV" "temp"
                            const-val call_tmp[1983766]:string[26] "dead at end of block" "maybe param" "temp"
                            const-val ret_tmp[1983768]:string[26] "temp"
                            ref this[1983770]:_ref(string)[938128] "temp"
                            (1983772 'move' this[1983770](1983774 '.v' _iterator[1983738] F0_this[2095558]))
                            (1983778 call localize[32889] this[1983770] ret_tmp[1983768])
                            (1983781 'move' call_tmp[1983766] ret_tmp[1983768])
                            val localThis[1983784]:string[26] "dead at end of block" "insert auto destroy"
                            (1983786 'move' localThis[1983784] call_tmp[1983766])
                            val _indexOfInterest[1983789]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                            val _iterator[1983791]:_ic_chpl_direct_counted_range_iter[1103979] "dead at end of block" "expr temp" "temp"
                            ref call_tmp[1983793]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
                            (1983795 'move' call_tmp[1983793](1983798 call buffLen[758075] localThis[1983784]))
                            const-val call_tmp[1983800]:_ir_chpl_direct_counted_range_iter[1103985] "dead at end of block" "expr temp" "maybe param" "temp"
                            const-val coerce_tmp[1983802]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1983804 'move' coerce_tmp[1983802](1983806 'deref' call_tmp[1983793]))
                            const-val ret_tmp[1983808]:_ir_chpl_direct_counted_range_iter[1103985] "temp"
                            (1983811 call chpl_direct_counted_range_iter[458112] 0 coerce_tmp[1983802] ret_tmp[1983808])
                            (1983815 'move' call_tmp[1983800] ret_tmp[1983808])
                            (1983818 'move' _iterator[1983791](1983821 call _getIterator[1103994] call_tmp[1983800]))
                            {
                              val ret[1983824]:_ir_chpl_direct_counted_range_iter[1103985] "dead after last mention" "RVV" "temp"
                              val _indexOfInterest[1983826]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                              val _iterator[1983828]:_ic_chpl_direct_counted_range_iter_helper[1103729] "dead at end of block" "expr temp" "temp"
                              const-val call_tmp[1983830]:_ir_chpl_direct_counted_range_iter_helper[1103735] "dead at end of block" "expr temp" "maybe param" "temp"
                              const-val ret_tmp[1983832]:_ir_chpl_direct_counted_range_iter_helper[1103735] "temp"
                              const-val low[1983834]:int(64)[13] "temp"
                              (1983836 'move' low[1983834](1983838 '.v' _iterator[1983791] F0_low[2107536]))
                              const-val count[1983841]:int(64)[13] "temp"
                              (1983843 'move' count[1983841](1983845 '.v' _iterator[1983791] F1_count[2107540]))
                              (1983849 call chpl_direct_counted_range_iter_helper[1102287] low[1983834] count[1983841] ret_tmp[1983832])
                              (1983853 'move' call_tmp[1983830] ret_tmp[1983832])
                              (1983856 'move' _iterator[1983828](1983859 call _getIterator[1103744] call_tmp[1983830]))
                              {
                                val ret[2054431]:_ir_chpl_direct_counted_range_iter_helper[1103735] "dead after last mention" "RVV" "temp"
                                val call_tmp[2054433]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                const-val tmp[2054435]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val tmp[2054437]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                                const-val call_tmp[2054439]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                const-val count[2054927]:int(64)[13] "temp"
                                (2054932 'move' count[2054927](2054929 '.v' _iterator[1983828] F1_count[2113698]))
                                (2054441 'move' call_tmp[2054439](2054444 call <[948587] count[2054927]))
                                (2054446 'move' tmp[2054437] call_tmp[2054439])
                                (2054449 'move' tmp[2054435] call_tmp[2054439])
                                const-val call_tmp[2054452]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (2054454 'move' call_tmp[2054452] call_tmp[2054439])
                                if call_tmp[2054439]
                                {
                                  (2054460 call boundsCheckHalt[210254] "With a negative count, the range must have a last index.")
                                }
                                const-val tmp[2054463]:2*int(64)[1040245] "dead at end of block" "const" "insert auto destroy" "temp"
                                val tmp[2054465]:2*int(64)[1040245] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                                const-val tmp[2054467]:bool[10] "dead after last mention" "maybe param" "temp"
                                const-val call_tmp[2054469]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                const-val count[2054934]:int(64)[13] "temp"
                                (2054939 'move' count[2054934](2054936 '.v' _iterator[1983828] F1_count[2113698]))
                                (2054471 'move' call_tmp[2054469](2054474 call ==[435744] count[2054934] 0))
                                (2054477 'move' tmp[2054467] call_tmp[2054469])
                                if call_tmp[2054469]
                                {
                                  const-val tmp[2054482]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                                  val call_tmp[2054484]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                                  const-val call_tmp[2054486]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val low[2054941]:int(64)[13] "temp"
                                  (2054946 'move' low[2054941](2054943 '.v' _iterator[1983828] F0_low[2113694]))
                                  (2054488 'move' call_tmp[2054486](2054491 call _cast[956223] low[2054941]))
                                  const-val call_tmp[2054493]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val coerce_tmp[2054495]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                                  (2054497 'move' coerce_tmp[2054495](2054499 'cast' uint(64)[115] 1))
                                  (2054502 'move' call_tmp[2054493](2054505 call -[962382] call_tmp[2054486]))
                                  const-val call_tmp[2054507]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  (2054509 'move' call_tmp[2054507](2054512 call _cast[953732] call_tmp[2054493]))
                                  const-val ret_tmp[2054514]:2*int(64)[1040245] "temp"
                                  const-val low[2054948]:int(64)[13] "temp"
                                  (2054953 'move' low[2054948](2054950 '.v' _iterator[1983828] F0_low[2113694]))
                                  (2054517 call _build_tuple[1040203] low[2054948] call_tmp[2054507] ret_tmp[2054514])
                                  (2054521 'move' tmp[2054482] ret_tmp[2054514])
                                  (2054524 'move' tmp[2054465] tmp[2054482])
                                }
                                {
                                  const-val tmp[2054528]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                                  val call_tmp[2054530]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  const-val call_tmp[2054532]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val count[2054955]:int(64)[13] "temp"
                                  (2054960 'move' count[2054955](2054957 '.v' _iterator[1983828] F1_count[2113698]))
                                  (2054534 'move' call_tmp[2054532] count[2054955])
                                  const-val call_tmp[2054537]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val count[2054962]:int(64)[13] "temp"
                                  (2054967 'move' count[2054962](2054964 '.v' _iterator[1983828] F1_count[2113698]))
                                  (2054539 'move' call_tmp[2054537](2054542 call -[962415] count[2054962]))
                                  const-val call_tmp[2054544]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val low[2054969]:int(64)[13] "temp"
                                  (2054974 'move' low[2054969](2054971 '.v' _iterator[1983828] F0_low[2113694]))
                                  (2054546 'move' call_tmp[2054544](2054549 call +[439752] low[2054969] call_tmp[2054537]))
                                  const-val ret_tmp[2054552]:2*int(64)[1040245] "temp"
                                  const-val low[2054976]:int(64)[13] "temp"
                                  (2054981 'move' low[2054976](2054978 '.v' _iterator[1983828] F0_low[2113694]))
                                  (2054555 call _build_tuple[1040203] low[2054976] call_tmp[2054544] ret_tmp[2054552])
                                  (2054559 'move' tmp[2054528] ret_tmp[2054552])
                                  (2054562 'move' tmp[2054465] tmp[2054528])
                                }
                                (2054566 '=' tmp[2054463] tmp[2054465])
                                (2054569 'noop')
                                1
                                ref call_tmp[2054571]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
                                (2054573 'move' call_tmp[2054571](2054575 '.' tmp[2054463] x0[1040241]))
                                const-val start[2054578]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                const-val coerce_tmp[2054580]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                (2054582 'move' coerce_tmp[2054580](2054584 'deref' call_tmp[2054571]))
                                (2054586 '=' start[2054578] coerce_tmp[2054580])
                                (2054589 'noop')
                                ref call_tmp[2054590]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
                                (2054592 'move' call_tmp[2054590](2054594 '.' tmp[2054463] x1[1040243]))
                                const-val end[2054597]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                const-val coerce_tmp[2054599]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                (2054601 'move' coerce_tmp[2054599](2054603 'deref' call_tmp[2054590]))
                                (2054605 '=' end[2054597] coerce_tmp[2054599])
                                (2054608 'noop')
                                val _indexOfInterest[2054609]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                                val _iterator[2054611]:_ic_chpl_direct_param_stride_range_iter[1103475] "dead at end of block" "expr temp" "temp"
                                const-val call_tmp[2054613]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead at end of block" "expr temp" "maybe param" "temp"
                                const-val ret_tmp[2054615]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
                                (2054618 call chpl_direct_param_stride_range_iter[1102713] coerce_tmp[2054580] coerce_tmp[2054599] ret_tmp[2054615])
                                (2054622 'move' call_tmp[2054613] ret_tmp[2054615])
                                (2054625 'move' _iterator[2054611](2054628 call _getIterator[1103490] call_tmp[2054613]))
                                {
                                  val ret[2054631]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead after last mention" "RVV" "temp"
                                  val call_tmp[2054633]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  (2054636 call chpl_range_check_stride[1103033])
                                  val i[2054637]:int(64)[13] "dead at end of block" "insert auto destroy"
                                  val call_tmp[2054639]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  (2054641 'move' i[2054637] 0)
                                  val call_tmp[2054644]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  const-val default_arg_first[2054646]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                                  const-val low[2054648]:int(64)[13] "temp"
                                  (2054650 'move' low[2054648](2054652 '.v' _iterator[2054611] F0_low[2115192]))
                                  (2054655 'move' default_arg_first[2054646](2054658 call chpl_checkIfRangeIterWillOverflow_default_first[1103387] low[2054648]))
                                  const-val default_arg_last[2054660]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                                  const-val high[2054662]:int(64)[13] "temp"
                                  (2054664 'move' high[2054662](2054666 '.v' _iterator[2054611] F1_high[2115196]))
                                  (2054669 'move' default_arg_last[2054660](2054672 call chpl_checkIfRangeIterWillOverflow_default_last[1103415] high[2054662]))
                                  const-val _return_tmp_[2054674]:bool[10] "dead after last mention" "temp"
                                  const-val low[2054676]:int(64)[13] "temp"
                                  (2054678 'move' low[2054676](2054680 '.v' _iterator[2054611] F0_low[2115192]))
                                  const-val high[2054683]:int(64)[13] "temp"
                                  (2054685 'move' high[2054683](2054687 '.v' _iterator[2054611] F1_high[2115196]))
                                  (2054690 'move' _return_tmp_[2054674](2054693 call chpl_checkIfRangeIterWillOverflow[1096265] low[2054676] high[2054683] 1 default_arg_first[2054646] default_arg_last[2054660] 1))
                                  CForLoop[2054700]
                                  {
                                    const-val yret[2054729]:int(64)[13] "dead after last mention" "YVV" "temp"
                                    (2054731 'move' yret[2054729] i[2054637])
                                    const-val _yieldedIndex[2054734]:int(64)[13] "temp"
                                    (2054736 'move' _yieldedIndex[2054734] i[2054637])
                                    {
                                      const-val i[2054740]:int(64)[13] "const" "index var" "insert auto destroy"
                                      (2054742 'move' i[2054740] _yieldedIndex[2054734])
                                      const-val yret[2054745]:int(64)[13] "dead after last mention" "YVV" "temp"
                                      (2054747 'move' yret[2054745] _yieldedIndex[2054734])
                                      const-val _yieldedIndex[2054775]:int(64)[13] "temp"
                                      (2054925 'move' _yieldedIndex[2054775] _yieldedIndex[2054734])
                                      {
                                        const-val i[2054777]:int(64)[13] "const" "index var" "insert auto destroy"
                                        (2054779 'move' i[2054777] _yieldedIndex[2054775])
                                        const-val yret[2054782]:int(64)[13] "dead after last mention" "YVV" "temp"
                                        (2054784 'move' yret[2054782] _yieldedIndex[2054775])
                                        const-val _yieldedIndex[2054787]:int(64)[13] "temp"
                                        (2054789 'move' _yieldedIndex[2054787] _yieldedIndex[2054775])
                                        {
                                          const-val i[2054793]:int(64)[13] "const" "index var" "insert auto destroy"
                                          (2054795 'move' i[2054793] _yieldedIndex[2054787])
                                          const-val yret[2054798]:uint(8)[100] "dead after last mention" "YVV" "temp"
                                          ref call_tmp[2054800]:_ref(uint(8))[937097] "dead after last mention" "maybe param" "temp"
                                          ref _this_tmp_[2054802]:_ref(c_ptr(uint(8)))[937621] "dead after last mention" "temp"
                                          (2054804 'move' _this_tmp_[2054802](2054807 call buff[758153] localThis[1983784]))
                                          val coerce_tmp[2054809]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                          (2054811 'move' coerce_tmp[2054809](2054813 'deref' _this_tmp_[2054802]))
                                          (2054815 'move' call_tmp[2054800](2054818 call this[954280] coerce_tmp[2054809] _yieldedIndex[2054787]))
                                          const-val coerce_tmp[2054821]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                          (2054823 'move' coerce_tmp[2054821](2054825 'deref' call_tmp[2054800]))
                                          (2054827 '=' yret[2054798] coerce_tmp[2054821])
                                          (2054830 'noop')
                                          const-val _yieldedIndex[2054831]:uint(8)[100] "temp"
                                          (2054833 'move' _yieldedIndex[2054831] coerce_tmp[2054821])
                                          {
                                            const-val b[2054837]:uint(8)[100] "const" "index var" "insert auto destroy"
                                            (2054839 'move' b[2054837] _yieldedIndex[2054831])
                                            val yret[2054842]:int(32)[95] "dead after last mention" "YVV" "temp"
                                            val call_tmp[2054844]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                            const-val _yieldedIndex[2054846]:int(32)[95] "temp"
                                            (2054848 'move' _yieldedIndex[2054846](2054850 'cast' int(32)[95] _yieldedIndex[2054831]))
                                            {
                                              const-val removeChar[2054854]:int(32)[95] "const" "index var" "insert auto destroy"
                                              (2054856 'move' removeChar[2054854] _yieldedIndex[2054846])
                                              {
                                                const-val call_tmp[2054860]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                                (2054862 'move' call_tmp[2054860](2054865 call ==[435722] thisChar[1983646] removeChar[2054854]))
                                                const-val call_tmp[2054868]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                                (2054870 'move' call_tmp[2054868] call_tmp[2054860])
                                                if call_tmp[2054868]
                                                {
                                                  const-val call_tmp[2054875]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                                  const-val ret_tmp[2054877]:byteIndex[28173] "temp"
                                                  (2054880 call +[28725] i[1983653] nBytes[1983660] ret_tmp[2054877])
                                                  (2054884 'move' call_tmp[2054875] ret_tmp[2054877])
                                                  (2054888 call =[38194] start[36196] call_tmp[2054875])
                                                  (2054892 call chpl__autoDestroy[1601936] call_tmp[2054875])
                                                  (2054919 call _freeIterator[1103663] _iterator[2054611])
                                                  (2054922 call chpl__autoDestroy[1674803] tmp[2054463])
                                                  (2054895 call _freeIterator[1103913] _iterator[1983828])
                                                  (2054898 call _freeIterator[1104163] _iterator[1983791])
                                                  (2054901 call chpl__autoDestroy[1601673] localThis[1983784])
                                                  (2054904 call _freeIterator[1109758] _iterator[1983738])
                                                  (2054907 call chpl__autoDestroy[1601673] localThis[1983710])
                                                  (2054910 call _freeIterator[1123325] _iterator[1983671])
                                                  continue _continueLabel[1984278] _continueLabel[1984278]
                                                }
                                              }
                                              label _continueLabel[2054915]
                                            }
                                          }
                                        }
                                      }
                                    }
                                    {
                                      const-val low[2054702]:int(64)[13] "temp"
                                      (2054704 'move' low[2054702](2054706 '.v' _iterator[2054611] F0_low[2115192]))
                                      (2054709 '=' i[2054637] low[2054702])
                                    }
                                    {
                                      const-val high[2054713]:int(64)[13] "temp"
                                      (2054715 'move' high[2054713](2054717 '.v' _iterator[2054611] F1_high[2115196]))
                                      (2054720 '<=' i[2054637] high[2054713])
                                    }
                                    {
                                      val call_tmp[2054724]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                      (2054726 '+=' i[2054637] 1)
                                    }
                                  }
                                  label _endchpl_direct_param_stride_range_iter[2054763]
                                }
                                (2054766 call _freeIterator[1103663] _iterator[2054611])
                                (2054769 call chpl__autoDestroy[1674803] tmp[2054463])
                                label _endchpl_direct_counted_range_iter_helper[2054771]
                              }
                              (1984005 call _freeIterator[1103913] _iterator[1983828])
                              label _endchpl_direct_counted_range_iter[1984007]
                            }
                            (1984010 call _freeIterator[1104163] _iterator[1983791])
                            (1984013 call chpl__autoDestroy[1601673] localThis[1983784])
                            label _endchpl_bytes[1984015]
                          }
                          (1984018 call _freeIterator[1109758] _iterator[1983738])
                        }
                        {
                          val i[1984021]:int(64)[13] "dead at end of block" "insert auto destroy"
                          (1984023 'move' i[1984021] 0)
                          val tmp[1984026]:bool[10] "dead after last mention" "temp"
                          ref call_tmp[1984028]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
                          (1984030 'move' call_tmp[1984028](1984033 call buffLen[758075] localThis[1983710]))
                          const-val call_tmp[1984035]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val coerce_tmp[1984037]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (1984039 'move' coerce_tmp[1984037](1984041 'deref' call_tmp[1984028]))
                          (1984043 'move' call_tmp[1984035](1984046 call <[437568] 0 coerce_tmp[1984037]))
                          (1984049 'move' tmp[1984026] call_tmp[1984035])
                          WhileDo[1984052]
                          {
                            ref call_tmp[1984054]:_ref(c_ptr(uint(8)))[937621] "dead at end of block" "maybe param" "temp"
                            (1984056 'move' call_tmp[1984054](1984059 call buff[758153] localThis[1983710]))
                            ref call_tmp[1984061]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
                            (1984063 'move' call_tmp[1984061](1984066 call buffLen[758075] localThis[1983710]))
                            const-val call_tmp[1984068]:(syserr,int(32),int(32))[964809] "dead at end of block" "maybe param" "temp"
                            val coerce_tmp[1984070]:c_ptr(uint(8))[937612] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1984072 'move' coerce_tmp[1984070](1984074 'deref' call_tmp[1984054]))
                            const-val coerce_tmp[1984076]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1984078 'move' coerce_tmp[1984076](1984080 'deref' call_tmp[1984061]))
                            const-val ret_tmp[1984082]:(syserr,int(32),int(32))[964809] "temp"
                            (1984085 call decodeHelp[174452] coerce_tmp[1984070] coerce_tmp[1984076] i[1984021] 1 ret_tmp[1984082])
                            (1984091 'move' call_tmp[1984068] ret_tmp[1984082])
                            const-val tmp[1984094]:(syserr,int(32),int(32))[964809] "dead at end of block" "const" "insert auto destroy" "temp"
                            (1984096 'move' tmp[1984094] call_tmp[1984068])
                            1
                            ref call_tmp[1984100]:_ref(syserr)[949021] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1984102 'move' call_tmp[1984100](1984104 '.' tmp[1984094] x0[964803]))
                            const-val decodeRet[1984107]:syserr[223672] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1984109]:syserr[223672] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1984111 'move' coerce_tmp[1984109](1984113 'deref' call_tmp[1984100]))
                            (1984115 'move' decodeRet[1984107](1984118 call chpl__initCopy[964674] coerce_tmp[1984109]))
                            ref call_tmp[1984120]:_ref(int(32))[936815] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1984122 'move' call_tmp[1984120](1984124 '.' tmp[1984094] x1[964805]))
                            const-val cp[1984127]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1984129]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1984131 'move' coerce_tmp[1984129](1984133 'deref' call_tmp[1984120]))
                            (1984135 'move' cp[1984127](1984138 call chpl__initCopy[964946] coerce_tmp[1984129]))
                            ref call_tmp[1984140]:_ref(int(32))[936815] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1984142 'move' call_tmp[1984140](1984144 '.' tmp[1984094] x2[964807]))
                            const-val nBytes[1984147]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1984149]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1984151 'move' coerce_tmp[1984149](1984153 'deref' call_tmp[1984140]))
                            (1984155 'move' nBytes[1984147](1984158 call chpl__initCopy[964946] coerce_tmp[1984149]))
                            const-val yret[1984160]:int(32)[95] "dead after last mention" "YVV" "temp"
                            val call_tmp[1984162]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                            (1984164 'move' yret[1984160] cp[1984127])
                            const-val _yieldedIndex[1984167]:int(32)[95] "temp"
                            (1984169 'move' _yieldedIndex[1984167] cp[1984127])
                            {
                              const-val removeChar[1984173]:int(32)[95] "const" "index var" "insert auto destroy"
                              (1984175 'move' removeChar[1984173] _yieldedIndex[1984167])
                              {
                                const-val call_tmp[1984179]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1984181 'move' call_tmp[1984179](1984184 call ==[435722] thisChar[1983646] removeChar[1984173]))
                                const-val call_tmp[1984187]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1984189 'move' call_tmp[1984187] call_tmp[1984179])
                                if call_tmp[1984187]
                                {
                                  const-val call_tmp[1984194]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                  const-val ret_tmp[1984196]:byteIndex[28173] "temp"
                                  (1984199 call +[28725] i[1983653] nBytes[1983660] ret_tmp[1984196])
                                  (1984203 'move' call_tmp[1984194] ret_tmp[1984196])
                                  (1984207 call =[38194] start[36196] call_tmp[1984194])
                                  (1984211 call chpl__autoDestroy[1601936] call_tmp[1984194])
                                  (1984214 call chpl__autoDestroy[1605546] tmp[1984094])
                                  (1984217 call chpl__autoDestroy[1601673] localThis[1983710])
                                  (1984220 call _freeIterator[1123325] _iterator[1983671])
                                  continue _continueLabel[1984278] _continueLabel[1984278]
                                }
                              }
                              label _continueLabel[1984225]
                            }
                            const-val coerce_tmp[1984227]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (1984229 'move' coerce_tmp[1984227](1984231 'cast' int(64)[13] nBytes[1984147]))
                            (1984235 call +=[451431] i[1984021] coerce_tmp[1984227])
                            (1984239 call chpl__autoDestroy[1605546] tmp[1984094])
                            ref call_tmp[1984241]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
                            (1984243 'move' call_tmp[1984241](1984246 call buffLen[758075] localThis[1983710]))
                            const-val call_tmp[1984248]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            const-val coerce_tmp[1984250]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (1984252 'move' coerce_tmp[1984250](1984254 'deref' call_tmp[1984241]))
                            (1984256 'move' call_tmp[1984248](1984259 call <[437568] i[1984021] coerce_tmp[1984250]))
                            (1984262 'move' tmp[1984026] call_tmp[1984248])
                            tmp[1984026]
                          }
                        }
                        (1984267 call chpl__autoDestroy[1601673] localThis[1983710])
                        label _endcodepoints[1984269]
                      }
                      label _breakLabel[1984271]
                      (1984274 call _freeIterator[1123325] _iterator[1983671])
                    }
                    (1984282 call chpl__autoDestroy[1601936] call_tmp[1982840])
                    (1984285 call chpl__autoDestroy[1605546] tmp[1982765])
                    (1984288 call chpl__autoDestroy[1601673] localThis[1982135])
                    break _breakLabel[36297] _breakLabel[36297]
                  }
                  label _continueLabel[1984278]
                }
                (1982891 call chpl__autoDestroy[1601936] call_tmp[1982840])
                const-val coerce_tmp[1982893]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1982895 'move' coerce_tmp[1982893](1982897 'cast' int(64)[13] nBytes[1982818]))
                (1982901 call +=[451431] i[1982484] coerce_tmp[1982893])
                (1982905 call chpl__autoDestroy[1605546] tmp[1982765])
                ref call_tmp[1982907]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
                (1982909 'move' call_tmp[1982907](1982912 call buffLen[758075] localThis[1982135]))
                const-val call_tmp[1982914]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[1982916]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1982918 'move' coerce_tmp[1982916](1982920 'deref' call_tmp[1982907]))
                (1982922 'move' call_tmp[1982914](1982925 call <[437568] i[1982484] coerce_tmp[1982916]))
                (1982928 'move' tmp[1982697] call_tmp[1982914])
                tmp[1982697]
              }
            }
            (1982933 call chpl__autoDestroy[1601673] localThis[1982135])
            label _end_cpIndexLen[1982935]
          }
          label _breakLabel[36297]
          (1919382 call _freeIterator[1122762] _iterator[36292])
          (1919384 call chpl__autoDestroy[1601936] default_arg_start[1122246])
        }
      }
      const-val call_tmp[601706]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (601709 'move' call_tmp[601706] trailing[36102])
      if call_tmp[601706]
      {
        (36356 call =[38168] end[36208] -1)
        {
          val _indexOfInterest[36439]:(int(32),byteIndex,int(64))[1122331] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[36440]:_ic__cpIndexLen__ref_string[1122574] "dead at end of block" "expr temp" "temp"
          const-val call_tmp[601718]:_ir__cpIndexLen__ref_string[1122580] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val ret_tmp[1905132]:_ir__cpIndexLen__ref_string[1122580] "temp"
          (36372 call _cpIndexLen[31109] localThis[36179] start[36196] ret_tmp[1905132])
          (1905135 'move' call_tmp[601718] ret_tmp[1905132])
          (36449 'move' _iterator[36440](36447 call _getIterator[1122589] call_tmp[601718]))
          {
            val ret[1984904]:_ir__cpIndexLen__ref_string[1122580] "dead after last mention" "RVV" "temp"
            const-val call_tmp[1984906]:string[26] "dead at end of block" "maybe param" "temp"
            const-val ret_tmp[1984908]:string[26] "temp"
            ref this[1986989]:_ref(string)[938128] "temp"
            (1986994 'move' this[1986989](1986991 '.v' _iterator[36440] F0_this[2094206]))
            (1984911 call localize[32889] this[1986989] ret_tmp[1984908])
            (1984914 'move' call_tmp[1984906] ret_tmp[1984908])
            val localThis[1984917]:string[26] "dead at end of block" "insert auto destroy"
            (1984919 'move' localThis[1984917] call_tmp[1984906])
            const-val call_tmp[1984922]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1984924 'move' call_tmp[1984922](1984927 call isASCII[31049] localThis[1984917]))
            const-val call_tmp[1984929]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1984931 'move' call_tmp[1984929] call_tmp[1984922])
            if call_tmp[1984922]
            {
              const-val _iterator[1984936]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108755] "dead at end of block" "expr temp" "insert auto destroy" "temp"
              const-val call_tmp[1984938]:range(int(64),bounded,false)[1027003] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
              const-val ret_tmp[1984940]:range(int(64),bounded,false)[1027003] "temp"
              ref this[1986996]:_ref(string)[938128] "temp"
              (1987001 'move' this[1986996](1986998 '.v' _iterator[36440] F0_this[2094206]))
              (1984943 call byteIndices[31068] this[1986996] ret_tmp[1984940])
              (1984946 'move' call_tmp[1984938] ret_tmp[1984940])
              val call_tmp[1984949]:_ic_these_range_int64_t_bounded_F[1096892] "dead at end of block" "expr temp" "maybe param" "temp"
              (1984951 'move' call_tmp[1984949](1984954 call _getIterator[1095509] call_tmp[1984938]))
              const-val call_tmp[1984956]:_ir_chpl_bytes__ref_string[1108451] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[1984958]:_ir_chpl_bytes__ref_string[1108451] "temp"
              ref this[1987003]:_ref(string)[938128] "temp"
              (1987008 'move' this[1987003](1987005 '.v' _iterator[36440] F0_this[2094206]))
              (1984961 call chpl_bytes[33577] this[1987003] ret_tmp[1984958])
              (1984964 'move' call_tmp[1984956] ret_tmp[1984958])
              val call_tmp[1984967]:_ic_chpl_bytes__ref_string[1108445] "dead at end of block" "expr temp" "maybe param" "temp"
              (1984969 'move' call_tmp[1984967](1984972 call _getIterator[1108460] call_tmp[1984956]))
              const-val ret_tmp[1984974]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108755] "temp"
              (1984977 call _build_tuple[1108713] call_tmp[1984949] call_tmp[1984967] ret_tmp[1984974])
              (1984981 'move' _iterator[1984936] ret_tmp[1984974])
              val _iterator[1984984]:_ic_these_range_int64_t_bounded_F[1096892] "temp"
              (1984986 'move' _iterator[1984984](1984988 '.v' _iterator[1984936] x0[1108751]))
              val _iterator[1984991]:_ic_chpl_bytes__ref_string[1108445] "temp"
              (1984993 'move' _iterator[1984991](1984995 '.v' _iterator[1984936] x1[1108753]))
              {
                (1985000 call zip1[1096927] _iterator[1984984])
              }
              {
                (1985004 call zip1[1108480] _iterator[1984991])
              }
              const-val isFinished[1985006]:bool[10] "temp"
              val hasMore[1985008]:bool[10] "temp"
              CForLoop[1985010]
              {
                val _indexOfInterest[1985033]:(int(64),uint(8))[1111229] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                {
                  (1985037 call zip2[1108489] _iterator[1984991])
                }
                {
                  const-val retTmp[1985040]:int(64)[13] "temp"
                  (1985042 'move' retTmp[1985040](1985045 call hasMore[1108516] _iterator[1984991]))
                  (1985047 'move' hasMore[1985008](1985049 'cast' bool[10] retTmp[1985040]))
                }
                (1985052 'move' isFinished[1985006](1985054 '!' hasMore[1985008]))
                if isFinished[1985006]
                {
                  (1985058 'chpl_error' c"zippered iterations have non-equal lengths")
                }
                {
                  (1985062 'move' _index[1985077](1985065 call getValue[1108525] _iterator[1984991]))
                }
                {
                  (1985069 call zip2[1096936] _iterator[1984984])
                }
                {
                  (1985072 'move' _index[1985083](1985075 call getValue[1096972] _iterator[1984984]))
                }
                val _index[1985077]:uint(8)[100] "temp"
                (1985079 '.=' _indexOfInterest[1985033] x1[1111227] _index[1985077])
                val _index[1985083]:int(64)[13] "temp"
                (1985085 '.=' _indexOfInterest[1985033] x0[1111225] _index[1985083])
                1
                const-val i[1985090]:int(64)[13] "const" "index var" "insert auto destroy"
                (1985092 'move' i[1985090](1985094 '.v' _indexOfInterest[1985033] x0[1111225]))
                const-val b[1985097]:uint(8)[100] "const" "index var" "insert auto destroy"
                (1985099 'move' b[1985097](1985101 '.v' _indexOfInterest[1985033] x1[1111227]))
                const-val yret[1985104]:(int(32),byteIndex,int(64))[1122331] "dead after last mention" "YVV" "temp"
                val call_tmp[1985106]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val call_tmp[1985108]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                (1985110 'move' call_tmp[1985108](1985112 'cast' int(32)[95] b[1985097]))
                const-val call_tmp[1985115]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1985117]:byteIndex[28173] "temp"
                (1985120 call _cast[39486] i[1985090] ret_tmp[1985117])
                (1985123 'move' call_tmp[1985115] ret_tmp[1985117])
                const-val call_tmp[1985126]:(int(32),byteIndex,int(64))[1122331] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1985128]:(int(32),byteIndex,int(64))[1122331] "temp"
                (1985131 call _build_tuple[1122281] call_tmp[1985108] call_tmp[1985115] 1 ret_tmp[1985128])
                (1985136 'move' call_tmp[1985126] ret_tmp[1985128])
                (1985139 'move' yret[1985104] call_tmp[1985126])
                const-val _yieldedIndex[1985721]:(int(32),byteIndex,int(64))[1122331] "temp"
                (1986353 'move' _yieldedIndex[1985721] call_tmp[1985126])
                {
                  1
                  const-val thisChar[1985724]:int(32)[95] "const" "index var" "insert auto destroy"
                  (1985726 'move' thisChar[1985724](1985728 '.v' _yieldedIndex[1985721] x0[1122325]))
                  ref i[1985731]:_ref(byteIndex)[948948] "index var" "insert auto destroy"
                  (1985733 'move' i[1985731](1985735 '.v' _yieldedIndex[1985721] x1[1122327]))
                  const-val nBytes[1985738]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1985740 'move' nBytes[1985738](1985742 '.v' _yieldedIndex[1985721] x2[1122329]))
                  {
                    {
                      val _indexOfInterest[1985747]:int(32)[95] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      val _iterator[1985749]:_ic_codepoints__ref_string[1123038] "dead at end of block" "expr temp" "temp"
                      const-val call_tmp[1985751]:_ir_codepoints__ref_string[1123044] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val ret_tmp[1985753]:_ir_codepoints__ref_string[1123044] "temp"
                      (1985756 call codepoints[33666] localChars[36190] ret_tmp[1985753])
                      (1985759 'move' call_tmp[1985751] ret_tmp[1985753])
                      (1985762 'move' _iterator[1985749](1985765 call _getIterator[1123053] call_tmp[1985751]))
                      {
                        val ret[1985768]:_ir_codepoints__ref_string[1123044] "dead at end of block" "RVV" "temp"
                        const-val call_tmp[1985770]:string[26] "dead at end of block" "maybe param" "temp"
                        const-val ret_tmp[1985772]:string[26] "temp"
                        ref this[1985774]:_ref(string)[938128] "temp"
                        (1985776 'move' this[1985774](1985778 '.v' _iterator[1985749] F0_this[2097732]))
                        (1985782 call localize[32889] this[1985774] ret_tmp[1985772])
                        (1985785 'move' call_tmp[1985770] ret_tmp[1985772])
                        val localThis[1985788]:string[26] "dead at end of block" "insert auto destroy"
                        (1985790 'move' localThis[1985788] call_tmp[1985770])
                        const-val call_tmp[1985793]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        ref this[1985795]:_ref(string)[938128] "temp"
                        (1985797 'move' this[1985795](1985799 '.v' _iterator[1985749] F0_this[2097732]))
                        (1985802 'move' call_tmp[1985793](1985805 call isASCII[31049] this[1985795]))
                        const-val call_tmp[1985807]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1985809 'move' call_tmp[1985807] call_tmp[1985793])
                        if call_tmp[1985793]
                        {
                          val _indexOfInterest[1985814]:uint(8)[100] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                          val _iterator[1985816]:_ic_chpl_bytes__ref_string[1108445] "dead at end of block" "expr temp" "temp"
                          const-val call_tmp[1985818]:_ir_chpl_bytes__ref_string[1108451] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val ret_tmp[1985820]:_ir_chpl_bytes__ref_string[1108451] "temp"
                          ref this[1985822]:_ref(string)[938128] "temp"
                          (1985824 'move' this[1985822](1985826 '.v' _iterator[1985749] F0_this[2097732]))
                          (1985830 call chpl_bytes[33577] this[1985822] ret_tmp[1985820])
                          (1985833 'move' call_tmp[1985818] ret_tmp[1985820])
                          (1985836 'move' _iterator[1985816](1985839 call _getIterator[1108460] call_tmp[1985818]))
                          {
                            val ret[1985842]:_ir_chpl_bytes__ref_string[1108451] "dead at end of block" "RVV" "temp"
                            const-val call_tmp[1985844]:string[26] "dead at end of block" "maybe param" "temp"
                            const-val ret_tmp[1985846]:string[26] "temp"
                            ref this[1985848]:_ref(string)[938128] "temp"
                            (1985850 'move' this[1985848](1985852 '.v' _iterator[1985816] F0_this[2095558]))
                            (1985856 call localize[32889] this[1985848] ret_tmp[1985846])
                            (1985859 'move' call_tmp[1985844] ret_tmp[1985846])
                            val localThis[1985862]:string[26] "dead at end of block" "insert auto destroy"
                            (1985864 'move' localThis[1985862] call_tmp[1985844])
                            val _indexOfInterest[1985867]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                            val _iterator[1985869]:_ic_chpl_direct_counted_range_iter[1103979] "dead at end of block" "expr temp" "temp"
                            ref call_tmp[1985871]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
                            (1985873 'move' call_tmp[1985871](1985876 call buffLen[758075] localThis[1985862]))
                            const-val call_tmp[1985878]:_ir_chpl_direct_counted_range_iter[1103985] "dead at end of block" "expr temp" "maybe param" "temp"
                            const-val coerce_tmp[1985880]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1985882 'move' coerce_tmp[1985880](1985884 'deref' call_tmp[1985871]))
                            const-val ret_tmp[1985886]:_ir_chpl_direct_counted_range_iter[1103985] "temp"
                            (1985889 call chpl_direct_counted_range_iter[458112] 0 coerce_tmp[1985880] ret_tmp[1985886])
                            (1985893 'move' call_tmp[1985878] ret_tmp[1985886])
                            (1985896 'move' _iterator[1985869](1985899 call _getIterator[1103994] call_tmp[1985878]))
                            {
                              val ret[1985902]:_ir_chpl_direct_counted_range_iter[1103985] "dead after last mention" "RVV" "temp"
                              val _indexOfInterest[1985904]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                              val _iterator[1985906]:_ic_chpl_direct_counted_range_iter_helper[1103729] "dead at end of block" "expr temp" "temp"
                              const-val call_tmp[1985908]:_ir_chpl_direct_counted_range_iter_helper[1103735] "dead at end of block" "expr temp" "maybe param" "temp"
                              const-val ret_tmp[1985910]:_ir_chpl_direct_counted_range_iter_helper[1103735] "temp"
                              const-val low[1985912]:int(64)[13] "temp"
                              (1985914 'move' low[1985912](1985916 '.v' _iterator[1985869] F0_low[2107536]))
                              const-val count[1985919]:int(64)[13] "temp"
                              (1985921 'move' count[1985919](1985923 '.v' _iterator[1985869] F1_count[2107540]))
                              (1985927 call chpl_direct_counted_range_iter_helper[1102287] low[1985912] count[1985919] ret_tmp[1985910])
                              (1985931 'move' call_tmp[1985908] ret_tmp[1985910])
                              (1985934 'move' _iterator[1985906](1985937 call _getIterator[1103744] call_tmp[1985908]))
                              {
                                val ret[2054984]:_ir_chpl_direct_counted_range_iter_helper[1103735] "dead after last mention" "RVV" "temp"
                                val call_tmp[2054986]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                const-val tmp[2054988]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val tmp[2054990]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                                const-val call_tmp[2054992]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                const-val count[2055461]:int(64)[13] "temp"
                                (2055466 'move' count[2055461](2055463 '.v' _iterator[1985906] F1_count[2113698]))
                                (2054994 'move' call_tmp[2054992](2054997 call <[948587] count[2055461]))
                                (2054999 'move' tmp[2054990] call_tmp[2054992])
                                (2055002 'move' tmp[2054988] call_tmp[2054992])
                                const-val call_tmp[2055005]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (2055007 'move' call_tmp[2055005] call_tmp[2054992])
                                if call_tmp[2054992]
                                {
                                  (2055013 call boundsCheckHalt[210254] "With a negative count, the range must have a last index.")
                                }
                                const-val tmp[2055016]:2*int(64)[1040245] "dead at end of block" "const" "insert auto destroy" "temp"
                                val tmp[2055018]:2*int(64)[1040245] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                                const-val tmp[2055020]:bool[10] "dead after last mention" "maybe param" "temp"
                                const-val call_tmp[2055022]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                const-val count[2055468]:int(64)[13] "temp"
                                (2055473 'move' count[2055468](2055470 '.v' _iterator[1985906] F1_count[2113698]))
                                (2055024 'move' call_tmp[2055022](2055027 call ==[435744] count[2055468] 0))
                                (2055030 'move' tmp[2055020] call_tmp[2055022])
                                if call_tmp[2055022]
                                {
                                  const-val tmp[2055035]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                                  val call_tmp[2055037]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                                  const-val call_tmp[2055039]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val low[2055475]:int(64)[13] "temp"
                                  (2055480 'move' low[2055475](2055477 '.v' _iterator[1985906] F0_low[2113694]))
                                  (2055041 'move' call_tmp[2055039](2055044 call _cast[956223] low[2055475]))
                                  const-val call_tmp[2055046]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val coerce_tmp[2055048]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                                  (2055050 'move' coerce_tmp[2055048](2055052 'cast' uint(64)[115] 1))
                                  (2055055 'move' call_tmp[2055046](2055058 call -[962382] call_tmp[2055039]))
                                  const-val call_tmp[2055060]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  (2055062 'move' call_tmp[2055060](2055065 call _cast[953732] call_tmp[2055046]))
                                  const-val ret_tmp[2055067]:2*int(64)[1040245] "temp"
                                  const-val low[2055482]:int(64)[13] "temp"
                                  (2055487 'move' low[2055482](2055484 '.v' _iterator[1985906] F0_low[2113694]))
                                  (2055070 call _build_tuple[1040203] low[2055482] call_tmp[2055060] ret_tmp[2055067])
                                  (2055074 'move' tmp[2055035] ret_tmp[2055067])
                                  (2055077 'move' tmp[2055018] tmp[2055035])
                                }
                                {
                                  const-val tmp[2055081]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                                  val call_tmp[2055083]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  const-val call_tmp[2055085]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val count[2055489]:int(64)[13] "temp"
                                  (2055494 'move' count[2055489](2055491 '.v' _iterator[1985906] F1_count[2113698]))
                                  (2055087 'move' call_tmp[2055085] count[2055489])
                                  const-val call_tmp[2055090]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val count[2055496]:int(64)[13] "temp"
                                  (2055501 'move' count[2055496](2055498 '.v' _iterator[1985906] F1_count[2113698]))
                                  (2055092 'move' call_tmp[2055090](2055095 call -[962415] count[2055496]))
                                  const-val call_tmp[2055097]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val low[2055503]:int(64)[13] "temp"
                                  (2055508 'move' low[2055503](2055505 '.v' _iterator[1985906] F0_low[2113694]))
                                  (2055099 'move' call_tmp[2055097](2055102 call +[439752] low[2055503] call_tmp[2055090]))
                                  const-val ret_tmp[2055105]:2*int(64)[1040245] "temp"
                                  const-val low[2055510]:int(64)[13] "temp"
                                  (2055515 'move' low[2055510](2055512 '.v' _iterator[1985906] F0_low[2113694]))
                                  (2055108 call _build_tuple[1040203] low[2055510] call_tmp[2055097] ret_tmp[2055105])
                                  (2055112 'move' tmp[2055081] ret_tmp[2055105])
                                  (2055115 'move' tmp[2055018] tmp[2055081])
                                }
                                (2055119 '=' tmp[2055016] tmp[2055018])
                                (2055122 'noop')
                                1
                                ref call_tmp[2055124]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
                                (2055126 'move' call_tmp[2055124](2055128 '.' tmp[2055016] x0[1040241]))
                                const-val start[2055131]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                const-val coerce_tmp[2055133]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                (2055135 'move' coerce_tmp[2055133](2055137 'deref' call_tmp[2055124]))
                                (2055139 '=' start[2055131] coerce_tmp[2055133])
                                (2055142 'noop')
                                ref call_tmp[2055143]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
                                (2055145 'move' call_tmp[2055143](2055147 '.' tmp[2055016] x1[1040243]))
                                const-val end[2055150]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                const-val coerce_tmp[2055152]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                (2055154 'move' coerce_tmp[2055152](2055156 'deref' call_tmp[2055143]))
                                (2055158 '=' end[2055150] coerce_tmp[2055152])
                                (2055161 'noop')
                                val _indexOfInterest[2055162]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                                val _iterator[2055164]:_ic_chpl_direct_param_stride_range_iter[1103475] "dead at end of block" "expr temp" "temp"
                                const-val call_tmp[2055166]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead at end of block" "expr temp" "maybe param" "temp"
                                const-val ret_tmp[2055168]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
                                (2055171 call chpl_direct_param_stride_range_iter[1102713] coerce_tmp[2055133] coerce_tmp[2055152] ret_tmp[2055168])
                                (2055175 'move' call_tmp[2055166] ret_tmp[2055168])
                                (2055178 'move' _iterator[2055164](2055181 call _getIterator[1103490] call_tmp[2055166]))
                                {
                                  val ret[2055184]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead after last mention" "RVV" "temp"
                                  val call_tmp[2055186]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  (2055189 call chpl_range_check_stride[1103033])
                                  val i[2055190]:int(64)[13] "dead at end of block" "insert auto destroy"
                                  val call_tmp[2055192]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  (2055194 'move' i[2055190] 0)
                                  val call_tmp[2055197]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  const-val default_arg_first[2055199]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                                  const-val low[2055201]:int(64)[13] "temp"
                                  (2055203 'move' low[2055201](2055205 '.v' _iterator[2055164] F0_low[2115192]))
                                  (2055208 'move' default_arg_first[2055199](2055211 call chpl_checkIfRangeIterWillOverflow_default_first[1103387] low[2055201]))
                                  const-val default_arg_last[2055213]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                                  const-val high[2055215]:int(64)[13] "temp"
                                  (2055217 'move' high[2055215](2055219 '.v' _iterator[2055164] F1_high[2115196]))
                                  (2055222 'move' default_arg_last[2055213](2055225 call chpl_checkIfRangeIterWillOverflow_default_last[1103415] high[2055215]))
                                  const-val _return_tmp_[2055227]:bool[10] "dead after last mention" "temp"
                                  const-val low[2055229]:int(64)[13] "temp"
                                  (2055231 'move' low[2055229](2055233 '.v' _iterator[2055164] F0_low[2115192]))
                                  const-val high[2055236]:int(64)[13] "temp"
                                  (2055238 'move' high[2055236](2055240 '.v' _iterator[2055164] F1_high[2115196]))
                                  (2055243 'move' _return_tmp_[2055227](2055246 call chpl_checkIfRangeIterWillOverflow[1096265] low[2055229] high[2055236] 1 default_arg_first[2055199] default_arg_last[2055213] 1))
                                  CForLoop[2055253]
                                  {
                                    const-val yret[2055282]:int(64)[13] "dead after last mention" "YVV" "temp"
                                    (2055284 'move' yret[2055282] i[2055190])
                                    const-val _yieldedIndex[2055287]:int(64)[13] "temp"
                                    (2055289 'move' _yieldedIndex[2055287] i[2055190])
                                    {
                                      const-val i[2055293]:int(64)[13] "const" "index var" "insert auto destroy"
                                      (2055295 'move' i[2055293] _yieldedIndex[2055287])
                                      const-val yret[2055298]:int(64)[13] "dead after last mention" "YVV" "temp"
                                      (2055300 'move' yret[2055298] _yieldedIndex[2055287])
                                      const-val _yieldedIndex[2055328]:int(64)[13] "temp"
                                      (2055459 'move' _yieldedIndex[2055328] _yieldedIndex[2055287])
                                      {
                                        const-val i[2055330]:int(64)[13] "const" "index var" "insert auto destroy"
                                        (2055332 'move' i[2055330] _yieldedIndex[2055328])
                                        const-val yret[2055335]:int(64)[13] "dead after last mention" "YVV" "temp"
                                        (2055337 'move' yret[2055335] _yieldedIndex[2055328])
                                        const-val _yieldedIndex[2055340]:int(64)[13] "temp"
                                        (2055342 'move' _yieldedIndex[2055340] _yieldedIndex[2055328])
                                        {
                                          const-val i[2055346]:int(64)[13] "const" "index var" "insert auto destroy"
                                          (2055348 'move' i[2055346] _yieldedIndex[2055340])
                                          const-val yret[2055351]:uint(8)[100] "dead after last mention" "YVV" "temp"
                                          ref call_tmp[2055353]:_ref(uint(8))[937097] "dead after last mention" "maybe param" "temp"
                                          ref _this_tmp_[2055355]:_ref(c_ptr(uint(8)))[937621] "dead after last mention" "temp"
                                          (2055357 'move' _this_tmp_[2055355](2055360 call buff[758153] localThis[1985862]))
                                          val coerce_tmp[2055362]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                          (2055364 'move' coerce_tmp[2055362](2055366 'deref' _this_tmp_[2055355]))
                                          (2055368 'move' call_tmp[2055353](2055371 call this[954280] coerce_tmp[2055362] _yieldedIndex[2055340]))
                                          const-val coerce_tmp[2055374]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                          (2055376 'move' coerce_tmp[2055374](2055378 'deref' call_tmp[2055353]))
                                          (2055380 '=' yret[2055351] coerce_tmp[2055374])
                                          (2055383 'noop')
                                          const-val _yieldedIndex[2055384]:uint(8)[100] "temp"
                                          (2055386 'move' _yieldedIndex[2055384] coerce_tmp[2055374])
                                          {
                                            const-val b[2055390]:uint(8)[100] "const" "index var" "insert auto destroy"
                                            (2055392 'move' b[2055390] _yieldedIndex[2055384])
                                            val yret[2055395]:int(32)[95] "dead after last mention" "YVV" "temp"
                                            val call_tmp[2055397]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                            const-val _yieldedIndex[2055399]:int(32)[95] "temp"
                                            (2055401 'move' _yieldedIndex[2055399](2055403 'cast' int(32)[95] _yieldedIndex[2055384]))
                                            {
                                              const-val removeChar[2055407]:int(32)[95] "const" "index var" "insert auto destroy"
                                              (2055409 'move' removeChar[2055407] _yieldedIndex[2055399])
                                              {
                                                const-val call_tmp[2055413]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                                (2055415 'move' call_tmp[2055413](2055418 call ==[435722] thisChar[1985724] removeChar[2055407]))
                                                const-val call_tmp[2055421]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                                (2055423 'move' call_tmp[2055421] call_tmp[2055413])
                                                if call_tmp[2055421]
                                                {
                                                  (2055453 call _freeIterator[1103663] _iterator[2055164])
                                                  (2055456 call chpl__autoDestroy[1674803] tmp[2055016])
                                                  (2055429 call _freeIterator[1103913] _iterator[1985906])
                                                  (2055432 call _freeIterator[1104163] _iterator[1985869])
                                                  (2055435 call chpl__autoDestroy[1601673] localThis[1985862])
                                                  (2055438 call _freeIterator[1109758] _iterator[1985816])
                                                  (2055441 call chpl__autoDestroy[1601673] localThis[1985788])
                                                  (2055444 call _freeIterator[1123325] _iterator[1985749])
                                                  continue _continueLabel[1986350] _continueLabel[1986350]
                                                }
                                              }
                                              label _continueLabel[2055449]
                                            }
                                          }
                                        }
                                      }
                                    }
                                    {
                                      const-val low[2055255]:int(64)[13] "temp"
                                      (2055257 'move' low[2055255](2055259 '.v' _iterator[2055164] F0_low[2115192]))
                                      (2055262 '=' i[2055190] low[2055255])
                                    }
                                    {
                                      const-val high[2055266]:int(64)[13] "temp"
                                      (2055268 'move' high[2055266](2055270 '.v' _iterator[2055164] F1_high[2115196]))
                                      (2055273 '<=' i[2055190] high[2055266])
                                    }
                                    {
                                      val call_tmp[2055277]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                      (2055279 '+=' i[2055190] 1)
                                    }
                                  }
                                  label _endchpl_direct_param_stride_range_iter[2055316]
                                }
                                (2055319 call _freeIterator[1103663] _iterator[2055164])
                                (2055322 call chpl__autoDestroy[1674803] tmp[2055016])
                                label _endchpl_direct_counted_range_iter_helper[2055324]
                              }
                              (1986064 call _freeIterator[1103913] _iterator[1985906])
                              label _endchpl_direct_counted_range_iter[1986066]
                            }
                            (1986069 call _freeIterator[1104163] _iterator[1985869])
                            (1986072 call chpl__autoDestroy[1601673] localThis[1985862])
                            label _endchpl_bytes[1986074]
                          }
                          (1986077 call _freeIterator[1109758] _iterator[1985816])
                        }
                        {
                          val i[1986080]:int(64)[13] "dead at end of block" "insert auto destroy"
                          (1986082 'move' i[1986080] 0)
                          val tmp[1986085]:bool[10] "dead after last mention" "temp"
                          ref call_tmp[1986087]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
                          (1986089 'move' call_tmp[1986087](1986092 call buffLen[758075] localThis[1985788]))
                          const-val call_tmp[1986094]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val coerce_tmp[1986096]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (1986098 'move' coerce_tmp[1986096](1986100 'deref' call_tmp[1986087]))
                          (1986102 'move' call_tmp[1986094](1986105 call <[437568] 0 coerce_tmp[1986096]))
                          (1986108 'move' tmp[1986085] call_tmp[1986094])
                          WhileDo[1986111]
                          {
                            ref call_tmp[1986113]:_ref(c_ptr(uint(8)))[937621] "dead at end of block" "maybe param" "temp"
                            (1986115 'move' call_tmp[1986113](1986118 call buff[758153] localThis[1985788]))
                            ref call_tmp[1986120]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
                            (1986122 'move' call_tmp[1986120](1986125 call buffLen[758075] localThis[1985788]))
                            const-val call_tmp[1986127]:(syserr,int(32),int(32))[964809] "dead at end of block" "maybe param" "temp"
                            val coerce_tmp[1986129]:c_ptr(uint(8))[937612] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1986131 'move' coerce_tmp[1986129](1986133 'deref' call_tmp[1986113]))
                            const-val coerce_tmp[1986135]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1986137 'move' coerce_tmp[1986135](1986139 'deref' call_tmp[1986120]))
                            const-val ret_tmp[1986141]:(syserr,int(32),int(32))[964809] "temp"
                            (1986144 call decodeHelp[174452] coerce_tmp[1986129] coerce_tmp[1986135] i[1986080] 1 ret_tmp[1986141])
                            (1986150 'move' call_tmp[1986127] ret_tmp[1986141])
                            const-val tmp[1986153]:(syserr,int(32),int(32))[964809] "dead at end of block" "const" "insert auto destroy" "temp"
                            (1986155 'move' tmp[1986153] call_tmp[1986127])
                            1
                            ref call_tmp[1986159]:_ref(syserr)[949021] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1986161 'move' call_tmp[1986159](1986163 '.' tmp[1986153] x0[964803]))
                            const-val decodeRet[1986166]:syserr[223672] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1986168]:syserr[223672] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1986170 'move' coerce_tmp[1986168](1986172 'deref' call_tmp[1986159]))
                            (1986174 'move' decodeRet[1986166](1986177 call chpl__initCopy[964674] coerce_tmp[1986168]))
                            ref call_tmp[1986179]:_ref(int(32))[936815] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1986181 'move' call_tmp[1986179](1986183 '.' tmp[1986153] x1[964805]))
                            const-val cp[1986186]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1986188]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1986190 'move' coerce_tmp[1986188](1986192 'deref' call_tmp[1986179]))
                            (1986194 'move' cp[1986186](1986197 call chpl__initCopy[964946] coerce_tmp[1986188]))
                            ref call_tmp[1986199]:_ref(int(32))[936815] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1986201 'move' call_tmp[1986199](1986203 '.' tmp[1986153] x2[964807]))
                            const-val nBytes[1986206]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1986208]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1986210 'move' coerce_tmp[1986208](1986212 'deref' call_tmp[1986199]))
                            (1986214 'move' nBytes[1986206](1986217 call chpl__initCopy[964946] coerce_tmp[1986208]))
                            const-val yret[1986219]:int(32)[95] "dead after last mention" "YVV" "temp"
                            val call_tmp[1986221]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                            (1986223 'move' yret[1986219] cp[1986186])
                            const-val _yieldedIndex[1986226]:int(32)[95] "temp"
                            (1986228 'move' _yieldedIndex[1986226] cp[1986186])
                            {
                              const-val removeChar[1986232]:int(32)[95] "const" "index var" "insert auto destroy"
                              (1986234 'move' removeChar[1986232] _yieldedIndex[1986226])
                              {
                                const-val call_tmp[1986238]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1986240 'move' call_tmp[1986238](1986243 call ==[435722] thisChar[1985724] removeChar[1986232]))
                                const-val call_tmp[1986246]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1986248 'move' call_tmp[1986246] call_tmp[1986238])
                                if call_tmp[1986246]
                                {
                                  (1986254 call chpl__autoDestroy[1605546] tmp[1986153])
                                  (1986257 call chpl__autoDestroy[1601673] localThis[1985788])
                                  (1986260 call _freeIterator[1123325] _iterator[1985749])
                                  continue _continueLabel[1986350] _continueLabel[1986350]
                                }
                              }
                              label _continueLabel[1986265]
                            }
                            const-val coerce_tmp[1986267]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (1986269 'move' coerce_tmp[1986267](1986271 'cast' int(64)[13] nBytes[1986206]))
                            (1986275 call +=[451431] i[1986080] coerce_tmp[1986267])
                            (1986279 call chpl__autoDestroy[1605546] tmp[1986153])
                            ref call_tmp[1986281]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
                            (1986283 'move' call_tmp[1986281](1986286 call buffLen[758075] localThis[1985788]))
                            const-val call_tmp[1986288]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            const-val coerce_tmp[1986290]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (1986292 'move' coerce_tmp[1986290](1986294 'deref' call_tmp[1986281]))
                            (1986296 'move' call_tmp[1986288](1986299 call <[437568] i[1986080] coerce_tmp[1986290]))
                            (1986302 'move' tmp[1986085] call_tmp[1986288])
                            tmp[1986085]
                          }
                        }
                        (1986307 call chpl__autoDestroy[1601673] localThis[1985788])
                        label _endcodepoints[1986309]
                      }
                      label _breakLabel[1986311]
                      (1986314 call _freeIterator[1123325] _iterator[1985749])
                    }
                    const-val call_tmp[1986316]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[1986318]:byteIndex[28173] "temp"
                    (1986321 call +[28725] i[1985731] nBytes[1985738] ret_tmp[1986318])
                    (1986325 'move' call_tmp[1986316] ret_tmp[1986318])
                    const-val call_tmp[1986328]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[1986330]:byteIndex[28173] "temp"
                    (1986333 call -[28857] call_tmp[1986316] 1 ret_tmp[1986330])
                    (1986337 'move' call_tmp[1986328] ret_tmp[1986330])
                    (1986341 call =[38194] end[36208] call_tmp[1986328])
                    (1986345 call chpl__autoDestroy[1601936] call_tmp[1986328])
                    (1986348 call chpl__autoDestroy[1601936] call_tmp[1986316])
                  }
                  label _continueLabel[1986350]
                }
                (1985213 call chpl__autoDestroy[1601936] call_tmp[1985115])
                {
                  (1985217 call zip3[1096945] _iterator[1984984])
                }
                {
                  (1985221 call zip3[1108498] _iterator[1984991])
                }
                {
                  {
                    (1985014 call init[1096981] _iterator[1984984])
                  }
                  {
                    (1985018 call init[1108534] _iterator[1984991])
                  }
                }
                {
                  (1985022 call hasMore[1096963] _iterator[1984984])
                }
                {
                  {
                    (1985027 call incr[1096990] _iterator[1984984])
                  }
                  {
                    (1985031 call incr[1108543] _iterator[1984991])
                  }
                }
              }
              {
                const-val retTmp[1985224]:int(64)[13] "temp"
                (1985226 'move' retTmp[1985224](1985229 call hasMore[1108516] _iterator[1984991]))
                (1985231 'move' hasMore[1985008](1985233 'cast' bool[10] retTmp[1985224]))
              }
              if hasMore[1985008]
              {
                (1985238 'chpl_error' c"zippered iterations have non-equal lengths")
              }
              {
                (1985243 call zip4[1108507] _iterator[1984991])
              }
              {
                (1985247 call zip4[1096954] _iterator[1984984])
              }
              (1985250 call _freeIterator[1108913] _iterator[1984936])
              (1985253 call chpl__autoDestroy[1681548] _iterator[1984936])
              (1985256 call chpl__autoDestroy[1407763] call_tmp[1984938])
            }
            {
              const-val call_tmp[1985259]:int(64)[13] "dead at end of block" "maybe param" "temp"
              ref start[1987010]:_ref(byteIndex)[948948] "temp"
              (1987015 'move' start[1987010](1987012 '.v' _iterator[36440] F1_start[2094210]))
              (1985261 'move' call_tmp[1985259](1985264 call _cast[39465] start[1987010]))
              val i[1985266]:int(64)[13] "dead at end of block" "insert auto destroy"
              (1985268 'move' i[1985266] call_tmp[1985259])
              const-val call_tmp[1985271]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1985273 'move' call_tmp[1985271](1985276 call >[437788] call_tmp[1985259] 0))
              const-val call_tmp[1985279]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1985281 'move' call_tmp[1985279] call_tmp[1985271])
              if call_tmp[1985271]
              {
                val tmp[1985286]:bool[10] "dead after last mention" "temp"
                const-val tmp[1985288]:bool[10] "dead after last mention" "maybe param" "temp"
                ref call_tmp[1985290]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
                (1985292 'move' call_tmp[1985290](1985295 call buffLen[758075] localThis[1984917]))
                const-val coerce_tmp[1985297]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1985299 'move' coerce_tmp[1985297](1985301 'deref' call_tmp[1985290]))
                (1985303 'move' tmp[1985288](1985306 call <[437568] i[1985266] coerce_tmp[1985297]))
                val tmp[1985309]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val tmp[1985311]:bool[10] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[1985313]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1985315 'move' call_tmp[1985313] tmp[1985288])
                (1985318 'move' tmp[1985311] tmp[1985288])
                if tmp[1985288]
                {
                  const-val tmp[1985323]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  ref call_tmp[1985325]:_ref(uint(8))[937097] "dead after last mention" "maybe param" "temp"
                  ref _this_tmp_[1985327]:_ref(c_ptr(uint(8)))[937621] "dead after last mention" "temp"
                  (1985329 'move' _this_tmp_[1985327](1985332 call buff[758153] localThis[1984917]))
                  val coerce_tmp[1985334]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1985336 'move' coerce_tmp[1985334](1985338 'deref' _this_tmp_[1985327]))
                  (1985340 'move' call_tmp[1985325](1985343 call this[954280] coerce_tmp[1985334] i[1985266]))
                  const-val call_tmp[1985346]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[1985348]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1985350 'move' coerce_tmp[1985348](1985352 'deref' call_tmp[1985325]))
                  (1985354 'move' call_tmp[1985346](1985357 call isInitialByte[181574] coerce_tmp[1985348]))
                  const-val call_tmp[1985359]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1985361 'move' call_tmp[1985359](1985364 call ![7494] call_tmp[1985346]))
                  (1985366 'move' tmp[1985323] call_tmp[1985359])
                  (1985369 'move' tmp[1985309] call_tmp[1985359])
                }
                {
                  (1985373 'move' tmp[1985309] 0)
                }
                (1985377 'move' tmp[1985286] tmp[1985309])
                WhileDo[1985380]
                {
                  (1985383 call +=[451431] i[1985266] 1)
                  const-val tmp[1985386]:bool[10] "dead after last mention" "maybe param" "temp"
                  ref call_tmp[1985388]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
                  (1985390 'move' call_tmp[1985388](1985393 call buffLen[758075] localThis[1984917]))
                  const-val coerce_tmp[1985395]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1985397 'move' coerce_tmp[1985395](1985399 'deref' call_tmp[1985388]))
                  (1985401 'move' tmp[1985386](1985404 call <[437568] i[1985266] coerce_tmp[1985395]))
                  val tmp[1985407]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                  const-val tmp[1985409]:bool[10] "dead after last mention" "maybe param" "temp"
                  const-val call_tmp[1985411]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1985413 'move' call_tmp[1985411] tmp[1985386])
                  (1985416 'move' tmp[1985409] tmp[1985386])
                  if tmp[1985386]
                  {
                    const-val tmp[1985421]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                    ref call_tmp[1985423]:_ref(uint(8))[937097] "dead after last mention" "maybe param" "temp"
                    ref _this_tmp_[1985425]:_ref(c_ptr(uint(8)))[937621] "dead after last mention" "temp"
                    (1985427 'move' _this_tmp_[1985425](1985430 call buff[758153] localThis[1984917]))
                    val coerce_tmp[1985432]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1985434 'move' coerce_tmp[1985432](1985436 'deref' _this_tmp_[1985425]))
                    (1985438 'move' call_tmp[1985423](1985441 call this[954280] coerce_tmp[1985432] i[1985266]))
                    const-val call_tmp[1985444]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[1985446]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1985448 'move' coerce_tmp[1985446](1985450 'deref' call_tmp[1985423]))
                    (1985452 'move' call_tmp[1985444](1985455 call isInitialByte[181574] coerce_tmp[1985446]))
                    const-val call_tmp[1985457]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1985459 'move' call_tmp[1985457](1985462 call ![7494] call_tmp[1985444]))
                    (1985464 'move' tmp[1985421] call_tmp[1985457])
                    (1985467 'move' tmp[1985407] call_tmp[1985457])
                  }
                  {
                    (1985471 'move' tmp[1985407] 0)
                  }
                  (1985475 'move' tmp[1985286] tmp[1985407])
                  tmp[1985286]
                }
              }
              val tmp[1985479]:bool[10] "dead after last mention" "temp"
              ref call_tmp[1985481]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
              (1985483 'move' call_tmp[1985481](1985486 call buffLen[758075] localThis[1984917]))
              const-val call_tmp[1985488]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1985490]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1985492 'move' coerce_tmp[1985490](1985494 'deref' call_tmp[1985481]))
              (1985496 'move' call_tmp[1985488](1985499 call <[437568] i[1985266] coerce_tmp[1985490]))
              (1985502 'move' tmp[1985479] call_tmp[1985488])
              WhileDo[1985505]
              {
                ref call_tmp[1985507]:_ref(c_ptr(uint(8)))[937621] "dead at end of block" "maybe param" "temp"
                (1985509 'move' call_tmp[1985507](1985512 call buff[758153] localThis[1984917]))
                ref call_tmp[1985514]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
                (1985516 'move' call_tmp[1985514](1985519 call buffLen[758075] localThis[1984917]))
                const-val call_tmp[1985521]:(syserr,int(32),int(32))[964809] "dead at end of block" "maybe param" "temp"
                val coerce_tmp[1985523]:c_ptr(uint(8))[937612] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1985525 'move' coerce_tmp[1985523](1985527 'deref' call_tmp[1985507]))
                const-val coerce_tmp[1985529]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1985531 'move' coerce_tmp[1985529](1985533 'deref' call_tmp[1985514]))
                const-val ret_tmp[1985535]:(syserr,int(32),int(32))[964809] "temp"
                (1985538 call decodeHelp[174452] coerce_tmp[1985523] coerce_tmp[1985529] i[1985266] 1 ret_tmp[1985535])
                (1985544 'move' call_tmp[1985521] ret_tmp[1985535])
                const-val tmp[1985547]:(syserr,int(32),int(32))[964809] "dead at end of block" "const" "insert auto destroy" "temp"
                (1985549 'move' tmp[1985547] call_tmp[1985521])
                1
                ref call_tmp[1985553]:_ref(syserr)[949021] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1985555 'move' call_tmp[1985553](1985557 '.' tmp[1985547] x0[964803]))
                const-val decodeRet[1985560]:syserr[223672] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1985562]:syserr[223672] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1985564 'move' coerce_tmp[1985562](1985566 'deref' call_tmp[1985553]))
                (1985568 'move' decodeRet[1985560](1985571 call chpl__initCopy[964674] coerce_tmp[1985562]))
                ref call_tmp[1985573]:_ref(int(32))[936815] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1985575 'move' call_tmp[1985573](1985577 '.' tmp[1985547] x1[964805]))
                const-val cp[1985580]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1985582]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1985584 'move' coerce_tmp[1985582](1985586 'deref' call_tmp[1985573]))
                (1985588 'move' cp[1985580](1985591 call chpl__initCopy[964946] coerce_tmp[1985582]))
                ref call_tmp[1985593]:_ref(int(32))[936815] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1985595 'move' call_tmp[1985593](1985597 '.' tmp[1985547] x2[964807]))
                const-val nBytes[1985600]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1985602]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1985604 'move' coerce_tmp[1985602](1985606 'deref' call_tmp[1985593]))
                (1985608 'move' nBytes[1985600](1985611 call chpl__initCopy[964946] coerce_tmp[1985602]))
                const-val yret[1985613]:(int(32),byteIndex,int(64))[1122331] "dead after last mention" "YVV" "temp"
                val call_tmp[1985615]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val call_tmp[1985617]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                (1985619 'move' call_tmp[1985617] cp[1985580])
                const-val call_tmp[1985622]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1985624]:byteIndex[28173] "temp"
                (1985627 call _cast[39486] i[1985266] ret_tmp[1985624])
                (1985630 'move' call_tmp[1985622] ret_tmp[1985624])
                const-val call_tmp[1985633]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                (1985635 'move' call_tmp[1985633](1985637 'cast' int(64)[13] nBytes[1985600]))
                const-val call_tmp[1985640]:(int(32),byteIndex,int(64))[1122331] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1985642]:(int(32),byteIndex,int(64))[1122331] "temp"
                (1985645 call _build_tuple[1122281] cp[1985580] call_tmp[1985622] call_tmp[1985633] ret_tmp[1985642])
                (1985650 'move' call_tmp[1985640] ret_tmp[1985642])
                (1985653 'move' yret[1985613] call_tmp[1985640])
                const-val _yieldedIndex[1986355]:(int(32),byteIndex,int(64))[1122331] "temp"
                (1986987 'move' _yieldedIndex[1986355] call_tmp[1985640])
                {
                  1
                  const-val thisChar[1986358]:int(32)[95] "const" "index var" "insert auto destroy"
                  (1986360 'move' thisChar[1986358](1986362 '.v' _yieldedIndex[1986355] x0[1122325]))
                  ref i[1986365]:_ref(byteIndex)[948948] "index var" "insert auto destroy"
                  (1986367 'move' i[1986365](1986369 '.v' _yieldedIndex[1986355] x1[1122327]))
                  const-val nBytes[1986372]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1986374 'move' nBytes[1986372](1986376 '.v' _yieldedIndex[1986355] x2[1122329]))
                  {
                    {
                      val _indexOfInterest[1986381]:int(32)[95] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      val _iterator[1986383]:_ic_codepoints__ref_string[1123038] "dead at end of block" "expr temp" "temp"
                      const-val call_tmp[1986385]:_ir_codepoints__ref_string[1123044] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val ret_tmp[1986387]:_ir_codepoints__ref_string[1123044] "temp"
                      (1986390 call codepoints[33666] localChars[36190] ret_tmp[1986387])
                      (1986393 'move' call_tmp[1986385] ret_tmp[1986387])
                      (1986396 'move' _iterator[1986383](1986399 call _getIterator[1123053] call_tmp[1986385]))
                      {
                        val ret[1986402]:_ir_codepoints__ref_string[1123044] "dead at end of block" "RVV" "temp"
                        const-val call_tmp[1986404]:string[26] "dead at end of block" "maybe param" "temp"
                        const-val ret_tmp[1986406]:string[26] "temp"
                        ref this[1986408]:_ref(string)[938128] "temp"
                        (1986410 'move' this[1986408](1986412 '.v' _iterator[1986383] F0_this[2097732]))
                        (1986416 call localize[32889] this[1986408] ret_tmp[1986406])
                        (1986419 'move' call_tmp[1986404] ret_tmp[1986406])
                        val localThis[1986422]:string[26] "dead at end of block" "insert auto destroy"
                        (1986424 'move' localThis[1986422] call_tmp[1986404])
                        const-val call_tmp[1986427]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        ref this[1986429]:_ref(string)[938128] "temp"
                        (1986431 'move' this[1986429](1986433 '.v' _iterator[1986383] F0_this[2097732]))
                        (1986436 'move' call_tmp[1986427](1986439 call isASCII[31049] this[1986429]))
                        const-val call_tmp[1986441]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1986443 'move' call_tmp[1986441] call_tmp[1986427])
                        if call_tmp[1986427]
                        {
                          val _indexOfInterest[1986448]:uint(8)[100] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                          val _iterator[1986450]:_ic_chpl_bytes__ref_string[1108445] "dead at end of block" "expr temp" "temp"
                          const-val call_tmp[1986452]:_ir_chpl_bytes__ref_string[1108451] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val ret_tmp[1986454]:_ir_chpl_bytes__ref_string[1108451] "temp"
                          ref this[1986456]:_ref(string)[938128] "temp"
                          (1986458 'move' this[1986456](1986460 '.v' _iterator[1986383] F0_this[2097732]))
                          (1986464 call chpl_bytes[33577] this[1986456] ret_tmp[1986454])
                          (1986467 'move' call_tmp[1986452] ret_tmp[1986454])
                          (1986470 'move' _iterator[1986450](1986473 call _getIterator[1108460] call_tmp[1986452]))
                          {
                            val ret[1986476]:_ir_chpl_bytes__ref_string[1108451] "dead at end of block" "RVV" "temp"
                            const-val call_tmp[1986478]:string[26] "dead at end of block" "maybe param" "temp"
                            const-val ret_tmp[1986480]:string[26] "temp"
                            ref this[1986482]:_ref(string)[938128] "temp"
                            (1986484 'move' this[1986482](1986486 '.v' _iterator[1986450] F0_this[2095558]))
                            (1986490 call localize[32889] this[1986482] ret_tmp[1986480])
                            (1986493 'move' call_tmp[1986478] ret_tmp[1986480])
                            val localThis[1986496]:string[26] "dead at end of block" "insert auto destroy"
                            (1986498 'move' localThis[1986496] call_tmp[1986478])
                            val _indexOfInterest[1986501]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                            val _iterator[1986503]:_ic_chpl_direct_counted_range_iter[1103979] "dead at end of block" "expr temp" "temp"
                            ref call_tmp[1986505]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
                            (1986507 'move' call_tmp[1986505](1986510 call buffLen[758075] localThis[1986496]))
                            const-val call_tmp[1986512]:_ir_chpl_direct_counted_range_iter[1103985] "dead at end of block" "expr temp" "maybe param" "temp"
                            const-val coerce_tmp[1986514]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1986516 'move' coerce_tmp[1986514](1986518 'deref' call_tmp[1986505]))
                            const-val ret_tmp[1986520]:_ir_chpl_direct_counted_range_iter[1103985] "temp"
                            (1986523 call chpl_direct_counted_range_iter[458112] 0 coerce_tmp[1986514] ret_tmp[1986520])
                            (1986527 'move' call_tmp[1986512] ret_tmp[1986520])
                            (1986530 'move' _iterator[1986503](1986533 call _getIterator[1103994] call_tmp[1986512]))
                            {
                              val ret[1986536]:_ir_chpl_direct_counted_range_iter[1103985] "dead after last mention" "RVV" "temp"
                              val _indexOfInterest[1986538]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                              val _iterator[1986540]:_ic_chpl_direct_counted_range_iter_helper[1103729] "dead at end of block" "expr temp" "temp"
                              const-val call_tmp[1986542]:_ir_chpl_direct_counted_range_iter_helper[1103735] "dead at end of block" "expr temp" "maybe param" "temp"
                              const-val ret_tmp[1986544]:_ir_chpl_direct_counted_range_iter_helper[1103735] "temp"
                              const-val low[1986546]:int(64)[13] "temp"
                              (1986548 'move' low[1986546](1986550 '.v' _iterator[1986503] F0_low[2107536]))
                              const-val count[1986553]:int(64)[13] "temp"
                              (1986555 'move' count[1986553](1986557 '.v' _iterator[1986503] F1_count[2107540]))
                              (1986561 call chpl_direct_counted_range_iter_helper[1102287] low[1986546] count[1986553] ret_tmp[1986544])
                              (1986565 'move' call_tmp[1986542] ret_tmp[1986544])
                              (1986568 'move' _iterator[1986540](1986571 call _getIterator[1103744] call_tmp[1986542]))
                              {
                                val ret[2055518]:_ir_chpl_direct_counted_range_iter_helper[1103735] "dead after last mention" "RVV" "temp"
                                val call_tmp[2055520]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                const-val tmp[2055522]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val tmp[2055524]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                                const-val call_tmp[2055526]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                const-val count[2055995]:int(64)[13] "temp"
                                (2056000 'move' count[2055995](2055997 '.v' _iterator[1986540] F1_count[2113698]))
                                (2055528 'move' call_tmp[2055526](2055531 call <[948587] count[2055995]))
                                (2055533 'move' tmp[2055524] call_tmp[2055526])
                                (2055536 'move' tmp[2055522] call_tmp[2055526])
                                const-val call_tmp[2055539]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (2055541 'move' call_tmp[2055539] call_tmp[2055526])
                                if call_tmp[2055526]
                                {
                                  (2055547 call boundsCheckHalt[210254] "With a negative count, the range must have a last index.")
                                }
                                const-val tmp[2055550]:2*int(64)[1040245] "dead at end of block" "const" "insert auto destroy" "temp"
                                val tmp[2055552]:2*int(64)[1040245] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                                const-val tmp[2055554]:bool[10] "dead after last mention" "maybe param" "temp"
                                const-val call_tmp[2055556]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                const-val count[2056002]:int(64)[13] "temp"
                                (2056007 'move' count[2056002](2056004 '.v' _iterator[1986540] F1_count[2113698]))
                                (2055558 'move' call_tmp[2055556](2055561 call ==[435744] count[2056002] 0))
                                (2055564 'move' tmp[2055554] call_tmp[2055556])
                                if call_tmp[2055556]
                                {
                                  const-val tmp[2055569]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                                  val call_tmp[2055571]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                                  const-val call_tmp[2055573]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val low[2056009]:int(64)[13] "temp"
                                  (2056014 'move' low[2056009](2056011 '.v' _iterator[1986540] F0_low[2113694]))
                                  (2055575 'move' call_tmp[2055573](2055578 call _cast[956223] low[2056009]))
                                  const-val call_tmp[2055580]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val coerce_tmp[2055582]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                                  (2055584 'move' coerce_tmp[2055582](2055586 'cast' uint(64)[115] 1))
                                  (2055589 'move' call_tmp[2055580](2055592 call -[962382] call_tmp[2055573]))
                                  const-val call_tmp[2055594]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  (2055596 'move' call_tmp[2055594](2055599 call _cast[953732] call_tmp[2055580]))
                                  const-val ret_tmp[2055601]:2*int(64)[1040245] "temp"
                                  const-val low[2056016]:int(64)[13] "temp"
                                  (2056021 'move' low[2056016](2056018 '.v' _iterator[1986540] F0_low[2113694]))
                                  (2055604 call _build_tuple[1040203] low[2056016] call_tmp[2055594] ret_tmp[2055601])
                                  (2055608 'move' tmp[2055569] ret_tmp[2055601])
                                  (2055611 'move' tmp[2055552] tmp[2055569])
                                }
                                {
                                  const-val tmp[2055615]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                                  val call_tmp[2055617]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  const-val call_tmp[2055619]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val count[2056023]:int(64)[13] "temp"
                                  (2056028 'move' count[2056023](2056025 '.v' _iterator[1986540] F1_count[2113698]))
                                  (2055621 'move' call_tmp[2055619] count[2056023])
                                  const-val call_tmp[2055624]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val count[2056030]:int(64)[13] "temp"
                                  (2056035 'move' count[2056030](2056032 '.v' _iterator[1986540] F1_count[2113698]))
                                  (2055626 'move' call_tmp[2055624](2055629 call -[962415] count[2056030]))
                                  const-val call_tmp[2055631]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val low[2056037]:int(64)[13] "temp"
                                  (2056042 'move' low[2056037](2056039 '.v' _iterator[1986540] F0_low[2113694]))
                                  (2055633 'move' call_tmp[2055631](2055636 call +[439752] low[2056037] call_tmp[2055624]))
                                  const-val ret_tmp[2055639]:2*int(64)[1040245] "temp"
                                  const-val low[2056044]:int(64)[13] "temp"
                                  (2056049 'move' low[2056044](2056046 '.v' _iterator[1986540] F0_low[2113694]))
                                  (2055642 call _build_tuple[1040203] low[2056044] call_tmp[2055631] ret_tmp[2055639])
                                  (2055646 'move' tmp[2055615] ret_tmp[2055639])
                                  (2055649 'move' tmp[2055552] tmp[2055615])
                                }
                                (2055653 '=' tmp[2055550] tmp[2055552])
                                (2055656 'noop')
                                1
                                ref call_tmp[2055658]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
                                (2055660 'move' call_tmp[2055658](2055662 '.' tmp[2055550] x0[1040241]))
                                const-val start[2055665]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                const-val coerce_tmp[2055667]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                (2055669 'move' coerce_tmp[2055667](2055671 'deref' call_tmp[2055658]))
                                (2055673 '=' start[2055665] coerce_tmp[2055667])
                                (2055676 'noop')
                                ref call_tmp[2055677]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
                                (2055679 'move' call_tmp[2055677](2055681 '.' tmp[2055550] x1[1040243]))
                                const-val end[2055684]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                const-val coerce_tmp[2055686]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                (2055688 'move' coerce_tmp[2055686](2055690 'deref' call_tmp[2055677]))
                                (2055692 '=' end[2055684] coerce_tmp[2055686])
                                (2055695 'noop')
                                val _indexOfInterest[2055696]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                                val _iterator[2055698]:_ic_chpl_direct_param_stride_range_iter[1103475] "dead at end of block" "expr temp" "temp"
                                const-val call_tmp[2055700]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead at end of block" "expr temp" "maybe param" "temp"
                                const-val ret_tmp[2055702]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
                                (2055705 call chpl_direct_param_stride_range_iter[1102713] coerce_tmp[2055667] coerce_tmp[2055686] ret_tmp[2055702])
                                (2055709 'move' call_tmp[2055700] ret_tmp[2055702])
                                (2055712 'move' _iterator[2055698](2055715 call _getIterator[1103490] call_tmp[2055700]))
                                {
                                  val ret[2055718]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead after last mention" "RVV" "temp"
                                  val call_tmp[2055720]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  (2055723 call chpl_range_check_stride[1103033])
                                  val i[2055724]:int(64)[13] "dead at end of block" "insert auto destroy"
                                  val call_tmp[2055726]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  (2055728 'move' i[2055724] 0)
                                  val call_tmp[2055731]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  const-val default_arg_first[2055733]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                                  const-val low[2055735]:int(64)[13] "temp"
                                  (2055737 'move' low[2055735](2055739 '.v' _iterator[2055698] F0_low[2115192]))
                                  (2055742 'move' default_arg_first[2055733](2055745 call chpl_checkIfRangeIterWillOverflow_default_first[1103387] low[2055735]))
                                  const-val default_arg_last[2055747]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                                  const-val high[2055749]:int(64)[13] "temp"
                                  (2055751 'move' high[2055749](2055753 '.v' _iterator[2055698] F1_high[2115196]))
                                  (2055756 'move' default_arg_last[2055747](2055759 call chpl_checkIfRangeIterWillOverflow_default_last[1103415] high[2055749]))
                                  const-val _return_tmp_[2055761]:bool[10] "dead after last mention" "temp"
                                  const-val low[2055763]:int(64)[13] "temp"
                                  (2055765 'move' low[2055763](2055767 '.v' _iterator[2055698] F0_low[2115192]))
                                  const-val high[2055770]:int(64)[13] "temp"
                                  (2055772 'move' high[2055770](2055774 '.v' _iterator[2055698] F1_high[2115196]))
                                  (2055777 'move' _return_tmp_[2055761](2055780 call chpl_checkIfRangeIterWillOverflow[1096265] low[2055763] high[2055770] 1 default_arg_first[2055733] default_arg_last[2055747] 1))
                                  CForLoop[2055787]
                                  {
                                    const-val yret[2055816]:int(64)[13] "dead after last mention" "YVV" "temp"
                                    (2055818 'move' yret[2055816] i[2055724])
                                    const-val _yieldedIndex[2055821]:int(64)[13] "temp"
                                    (2055823 'move' _yieldedIndex[2055821] i[2055724])
                                    {
                                      const-val i[2055827]:int(64)[13] "const" "index var" "insert auto destroy"
                                      (2055829 'move' i[2055827] _yieldedIndex[2055821])
                                      const-val yret[2055832]:int(64)[13] "dead after last mention" "YVV" "temp"
                                      (2055834 'move' yret[2055832] _yieldedIndex[2055821])
                                      const-val _yieldedIndex[2055862]:int(64)[13] "temp"
                                      (2055993 'move' _yieldedIndex[2055862] _yieldedIndex[2055821])
                                      {
                                        const-val i[2055864]:int(64)[13] "const" "index var" "insert auto destroy"
                                        (2055866 'move' i[2055864] _yieldedIndex[2055862])
                                        const-val yret[2055869]:int(64)[13] "dead after last mention" "YVV" "temp"
                                        (2055871 'move' yret[2055869] _yieldedIndex[2055862])
                                        const-val _yieldedIndex[2055874]:int(64)[13] "temp"
                                        (2055876 'move' _yieldedIndex[2055874] _yieldedIndex[2055862])
                                        {
                                          const-val i[2055880]:int(64)[13] "const" "index var" "insert auto destroy"
                                          (2055882 'move' i[2055880] _yieldedIndex[2055874])
                                          const-val yret[2055885]:uint(8)[100] "dead after last mention" "YVV" "temp"
                                          ref call_tmp[2055887]:_ref(uint(8))[937097] "dead after last mention" "maybe param" "temp"
                                          ref _this_tmp_[2055889]:_ref(c_ptr(uint(8)))[937621] "dead after last mention" "temp"
                                          (2055891 'move' _this_tmp_[2055889](2055894 call buff[758153] localThis[1986496]))
                                          val coerce_tmp[2055896]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                          (2055898 'move' coerce_tmp[2055896](2055900 'deref' _this_tmp_[2055889]))
                                          (2055902 'move' call_tmp[2055887](2055905 call this[954280] coerce_tmp[2055896] _yieldedIndex[2055874]))
                                          const-val coerce_tmp[2055908]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                          (2055910 'move' coerce_tmp[2055908](2055912 'deref' call_tmp[2055887]))
                                          (2055914 '=' yret[2055885] coerce_tmp[2055908])
                                          (2055917 'noop')
                                          const-val _yieldedIndex[2055918]:uint(8)[100] "temp"
                                          (2055920 'move' _yieldedIndex[2055918] coerce_tmp[2055908])
                                          {
                                            const-val b[2055924]:uint(8)[100] "const" "index var" "insert auto destroy"
                                            (2055926 'move' b[2055924] _yieldedIndex[2055918])
                                            val yret[2055929]:int(32)[95] "dead after last mention" "YVV" "temp"
                                            val call_tmp[2055931]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                            const-val _yieldedIndex[2055933]:int(32)[95] "temp"
                                            (2055935 'move' _yieldedIndex[2055933](2055937 'cast' int(32)[95] _yieldedIndex[2055918]))
                                            {
                                              const-val removeChar[2055941]:int(32)[95] "const" "index var" "insert auto destroy"
                                              (2055943 'move' removeChar[2055941] _yieldedIndex[2055933])
                                              {
                                                const-val call_tmp[2055947]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                                (2055949 'move' call_tmp[2055947](2055952 call ==[435722] thisChar[1986358] removeChar[2055941]))
                                                const-val call_tmp[2055955]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                                (2055957 'move' call_tmp[2055955] call_tmp[2055947])
                                                if call_tmp[2055955]
                                                {
                                                  (2055987 call _freeIterator[1103663] _iterator[2055698])
                                                  (2055990 call chpl__autoDestroy[1674803] tmp[2055550])
                                                  (2055963 call _freeIterator[1103913] _iterator[1986540])
                                                  (2055966 call _freeIterator[1104163] _iterator[1986503])
                                                  (2055969 call chpl__autoDestroy[1601673] localThis[1986496])
                                                  (2055972 call _freeIterator[1109758] _iterator[1986450])
                                                  (2055975 call chpl__autoDestroy[1601673] localThis[1986422])
                                                  (2055978 call _freeIterator[1123325] _iterator[1986383])
                                                  continue _continueLabel[1986984] _continueLabel[1986984]
                                                }
                                              }
                                              label _continueLabel[2055983]
                                            }
                                          }
                                        }
                                      }
                                    }
                                    {
                                      const-val low[2055789]:int(64)[13] "temp"
                                      (2055791 'move' low[2055789](2055793 '.v' _iterator[2055698] F0_low[2115192]))
                                      (2055796 '=' i[2055724] low[2055789])
                                    }
                                    {
                                      const-val high[2055800]:int(64)[13] "temp"
                                      (2055802 'move' high[2055800](2055804 '.v' _iterator[2055698] F1_high[2115196]))
                                      (2055807 '<=' i[2055724] high[2055800])
                                    }
                                    {
                                      val call_tmp[2055811]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                      (2055813 '+=' i[2055724] 1)
                                    }
                                  }
                                  label _endchpl_direct_param_stride_range_iter[2055850]
                                }
                                (2055853 call _freeIterator[1103663] _iterator[2055698])
                                (2055856 call chpl__autoDestroy[1674803] tmp[2055550])
                                label _endchpl_direct_counted_range_iter_helper[2055858]
                              }
                              (1986698 call _freeIterator[1103913] _iterator[1986540])
                              label _endchpl_direct_counted_range_iter[1986700]
                            }
                            (1986703 call _freeIterator[1104163] _iterator[1986503])
                            (1986706 call chpl__autoDestroy[1601673] localThis[1986496])
                            label _endchpl_bytes[1986708]
                          }
                          (1986711 call _freeIterator[1109758] _iterator[1986450])
                        }
                        {
                          val i[1986714]:int(64)[13] "dead at end of block" "insert auto destroy"
                          (1986716 'move' i[1986714] 0)
                          val tmp[1986719]:bool[10] "dead after last mention" "temp"
                          ref call_tmp[1986721]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
                          (1986723 'move' call_tmp[1986721](1986726 call buffLen[758075] localThis[1986422]))
                          const-val call_tmp[1986728]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val coerce_tmp[1986730]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (1986732 'move' coerce_tmp[1986730](1986734 'deref' call_tmp[1986721]))
                          (1986736 'move' call_tmp[1986728](1986739 call <[437568] 0 coerce_tmp[1986730]))
                          (1986742 'move' tmp[1986719] call_tmp[1986728])
                          WhileDo[1986745]
                          {
                            ref call_tmp[1986747]:_ref(c_ptr(uint(8)))[937621] "dead at end of block" "maybe param" "temp"
                            (1986749 'move' call_tmp[1986747](1986752 call buff[758153] localThis[1986422]))
                            ref call_tmp[1986754]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
                            (1986756 'move' call_tmp[1986754](1986759 call buffLen[758075] localThis[1986422]))
                            const-val call_tmp[1986761]:(syserr,int(32),int(32))[964809] "dead at end of block" "maybe param" "temp"
                            val coerce_tmp[1986763]:c_ptr(uint(8))[937612] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1986765 'move' coerce_tmp[1986763](1986767 'deref' call_tmp[1986747]))
                            const-val coerce_tmp[1986769]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1986771 'move' coerce_tmp[1986769](1986773 'deref' call_tmp[1986754]))
                            const-val ret_tmp[1986775]:(syserr,int(32),int(32))[964809] "temp"
                            (1986778 call decodeHelp[174452] coerce_tmp[1986763] coerce_tmp[1986769] i[1986714] 1 ret_tmp[1986775])
                            (1986784 'move' call_tmp[1986761] ret_tmp[1986775])
                            const-val tmp[1986787]:(syserr,int(32),int(32))[964809] "dead at end of block" "const" "insert auto destroy" "temp"
                            (1986789 'move' tmp[1986787] call_tmp[1986761])
                            1
                            ref call_tmp[1986793]:_ref(syserr)[949021] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1986795 'move' call_tmp[1986793](1986797 '.' tmp[1986787] x0[964803]))
                            const-val decodeRet[1986800]:syserr[223672] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1986802]:syserr[223672] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1986804 'move' coerce_tmp[1986802](1986806 'deref' call_tmp[1986793]))
                            (1986808 'move' decodeRet[1986800](1986811 call chpl__initCopy[964674] coerce_tmp[1986802]))
                            ref call_tmp[1986813]:_ref(int(32))[936815] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1986815 'move' call_tmp[1986813](1986817 '.' tmp[1986787] x1[964805]))
                            const-val cp[1986820]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1986822]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1986824 'move' coerce_tmp[1986822](1986826 'deref' call_tmp[1986813]))
                            (1986828 'move' cp[1986820](1986831 call chpl__initCopy[964946] coerce_tmp[1986822]))
                            ref call_tmp[1986833]:_ref(int(32))[936815] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1986835 'move' call_tmp[1986833](1986837 '.' tmp[1986787] x2[964807]))
                            const-val nBytes[1986840]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1986842]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1986844 'move' coerce_tmp[1986842](1986846 'deref' call_tmp[1986833]))
                            (1986848 'move' nBytes[1986840](1986851 call chpl__initCopy[964946] coerce_tmp[1986842]))
                            const-val yret[1986853]:int(32)[95] "dead after last mention" "YVV" "temp"
                            val call_tmp[1986855]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                            (1986857 'move' yret[1986853] cp[1986820])
                            const-val _yieldedIndex[1986860]:int(32)[95] "temp"
                            (1986862 'move' _yieldedIndex[1986860] cp[1986820])
                            {
                              const-val removeChar[1986866]:int(32)[95] "const" "index var" "insert auto destroy"
                              (1986868 'move' removeChar[1986866] _yieldedIndex[1986860])
                              {
                                const-val call_tmp[1986872]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1986874 'move' call_tmp[1986872](1986877 call ==[435722] thisChar[1986358] removeChar[1986866]))
                                const-val call_tmp[1986880]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1986882 'move' call_tmp[1986880] call_tmp[1986872])
                                if call_tmp[1986880]
                                {
                                  (1986888 call chpl__autoDestroy[1605546] tmp[1986787])
                                  (1986891 call chpl__autoDestroy[1601673] localThis[1986422])
                                  (1986894 call _freeIterator[1123325] _iterator[1986383])
                                  continue _continueLabel[1986984] _continueLabel[1986984]
                                }
                              }
                              label _continueLabel[1986899]
                            }
                            const-val coerce_tmp[1986901]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (1986903 'move' coerce_tmp[1986901](1986905 'cast' int(64)[13] nBytes[1986840]))
                            (1986909 call +=[451431] i[1986714] coerce_tmp[1986901])
                            (1986913 call chpl__autoDestroy[1605546] tmp[1986787])
                            ref call_tmp[1986915]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
                            (1986917 'move' call_tmp[1986915](1986920 call buffLen[758075] localThis[1986422]))
                            const-val call_tmp[1986922]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            const-val coerce_tmp[1986924]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (1986926 'move' coerce_tmp[1986924](1986928 'deref' call_tmp[1986915]))
                            (1986930 'move' call_tmp[1986922](1986933 call <[437568] i[1986714] coerce_tmp[1986924]))
                            (1986936 'move' tmp[1986719] call_tmp[1986922])
                            tmp[1986719]
                          }
                        }
                        (1986941 call chpl__autoDestroy[1601673] localThis[1986422])
                        label _endcodepoints[1986943]
                      }
                      label _breakLabel[1986945]
                      (1986948 call _freeIterator[1123325] _iterator[1986383])
                    }
                    const-val call_tmp[1986950]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[1986952]:byteIndex[28173] "temp"
                    (1986955 call +[28725] i[1986365] nBytes[1986372] ret_tmp[1986952])
                    (1986959 'move' call_tmp[1986950] ret_tmp[1986952])
                    const-val call_tmp[1986962]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[1986964]:byteIndex[28173] "temp"
                    (1986967 call -[28857] call_tmp[1986950] 1 ret_tmp[1986964])
                    (1986971 'move' call_tmp[1986962] ret_tmp[1986964])
                    (1986975 call =[38194] end[36208] call_tmp[1986962])
                    (1986979 call chpl__autoDestroy[1601936] call_tmp[1986962])
                    (1986982 call chpl__autoDestroy[1601936] call_tmp[1986950])
                  }
                  label _continueLabel[1986984]
                }
                (1985673 call chpl__autoDestroy[1601936] call_tmp[1985622])
                const-val coerce_tmp[1985675]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1985677 'move' coerce_tmp[1985675](1985679 'cast' int(64)[13] nBytes[1985600]))
                (1985683 call +=[451431] i[1985266] coerce_tmp[1985675])
                (1985687 call chpl__autoDestroy[1605546] tmp[1985547])
                ref call_tmp[1985689]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
                (1985691 'move' call_tmp[1985689](1985694 call buffLen[758075] localThis[1984917]))
                const-val call_tmp[1985696]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[1985698]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1985700 'move' coerce_tmp[1985698](1985702 'deref' call_tmp[1985689]))
                (1985704 'move' call_tmp[1985696](1985707 call <[437568] i[1985266] coerce_tmp[1985698]))
                (1985710 'move' tmp[1985479] call_tmp[1985696])
                tmp[1985479]
              }
            }
            (1985715 call chpl__autoDestroy[1601673] localThis[1984917])
            label _end_cpIndexLen[1985717]
          }
          label _breakLabel[36445]
          (1919406 call _freeIterator[1122762] _iterator[36440])
        }
      }
      const-val call_tmp[601750]:range(byteIndex,bounded,false)[1025981] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1910098]:range(byteIndex,bounded,false)[1025981] "temp"
      (36501 call chpl_build_bounded_range[1123443] start[36196] end[36208] ret_tmp[1910098])
      (1910101 'move' call_tmp[601750] ret_tmp[1910098])
      const-val call_tmp[601755]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1910116]:string[26] "temp"
      (36504 call this[1123689] localThis[36179] call_tmp[601750] ret_tmp[1910116])
      (1910119 'move' call_tmp[601755] ret_tmp[1910116])
      (1124583 'move' ret[504488] call_tmp[601755])
      (1919408 call chpl__autoDestroy[1674473] call_tmp[601750])
      (1919411 call chpl__autoDestroy[1601936] end[36208])
      (1919414 call chpl__autoDestroy[1601936] start[36196])
      (1919417 call chpl__autoDestroy[1601673] localChars[36190])
      (1919420 call chpl__autoDestroy[1601673] localThis[36179])
      gotoReturn _end_strip[504486] _end_strip[504486]
    }
    label _end_strip[504486]
    (1905542 '=' _retArg[1905540] ret[504488])
    (1905546 return _void[55])
  }
  function _ref(string)[938128].isSpace[36843](const  ref arg this[36845]:_ref(string)[938128]) : bool[10] "method" "resolved" "fn synchronization free"
  {
    val ret[504567]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[601904]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (601907 'move' call_tmp[601904](36856 call isEmpty[35064] this[36845]))
    const-val call_tmp[601909]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (601912 'move' call_tmp[601909] call_tmp[601904])
    if call_tmp[601909]
    {
      (504573 'move' ret[504567] 0)
      gotoReturn _end_isSpace[504565] _end_isSpace[504565]
    }
    val result[36868]:bool[10] "dead at end of block" "insert auto destroy"
    (540593 'move' result[36868] 1)
    const-val tmp[36947]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[601916]:_ref(int(32))[936815] "dead after last mention" "maybe param" "temp"
    (601919 'move' call_tmp[601916](36876 call locale_id[758231] this[36845]))
    const-val call_tmp[601921]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1125691]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1125695 'move' coerce_tmp[1125691](1125693 'deref' call_tmp[601916]))
    (601924 'move' call_tmp[601921](36881 call chpl_buildLocaleID[209470] coerce_tmp[1125691] c_sublocid_any[89878]))
    const-val call_tmp[601926]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    (601929 'move' call_tmp[601926](36882 'chpl_on_locale_num' call_tmp[601921]))
    (36949 'move' tmp[36947] call_tmp[601926])
    val isdirect[2197865]:bool[10] "temp"
    (2197870 'move' isdirect[2197865](2197867 call chpl_doDirectExecuteOn[187469] tmp[36947]))
    if isdirect[2197865]
    {
      (2197874 call on_fn[934011] this[36845] result[36868])
    }
    {
      val _args_foron_fn[2197892]:_class_localson_fn[2197882] "temp"
      (2197896 'move' _args_foron_fn[2197892](2197894 'stack allocate class' _class_localson_fn[2197882]))
      (2197898 '.=' _args_foron_fn[2197892] _0_tmp[2197885] tmp[36947])
      ref tmp[2197902]:string[26] "temp"
      (2197906 'move' tmp[2197902](2197904 'set reference' this[36845]))
      (2197908 '.=' _args_foron_fn[2197892] _1_this[2197887] tmp[2197902])
      ref tmp[2197912]:bool[10] "temp"
      (2197916 'move' tmp[2197912](2197914 'set reference' result[36868]))
      (2197918 '.=' _args_foron_fn[2197892] _2_result[2197889] tmp[2197912])
      val _args_vforon_fn[2197922]:c_void_ptr[149] "temp"
      (2197926 'move' _args_vforon_fn[2197922](2197924 'cast_to_void_star' _args_foron_fn[2197892]))
      val _args_sizeon_fn[2197928]:int(64)[13] "temp"
      (2197932 'move' _args_sizeon_fn[2197928](2197930 'sizeof_bundle' _class_localson_fn[2197882]))
      on(2197972 call wrapon_fn[2197934] tmp[36947] _args_vforon_fn[2197922] _args_sizeon_fn[2197928] _args_foron_fn[2197892])
    }
    {
    }
    (1125721 'move' ret[504567] result[36868])
    gotoReturn _end_isSpace[504565] _end_isSpace[504565]
    label _end_isSpace[504565]
    (504569 return ret[504567])
  }
  function =[38168](ref arg lhs[38165]:_ref(byteIndex)[948948], const in arg rhs[38171]:int(64)[13]) : void[4] "assignop" "resolved" "no return value for void"
  {
    ref call_tmp[602500]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (602503 'move' call_tmp[602500](38175 call _bindex[757931] lhs[38165]))
    const-val call_tmp[602505]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (602508 'move' call_tmp[602505] rhs[38171])
    (38182 call =[435443] call_tmp[602500] call_tmp[602505])
    (504727 return _void[55])
  }
  function =[38194](ref arg lhs[38191]:_ref(byteIndex)[948948], const  ref arg rhs[38197]:_ref(byteIndex)[948948]) : void[4] "assignop" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    ref call_tmp[602512]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (602515 'move' call_tmp[602512](38201 call _bindex[757931] lhs[38191]))
    ref call_tmp[602519]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const" "temp"
    (602522 'move' call_tmp[602519](38205 call _bindex[757931] rhs[38197]))
    const-val coerce_tmp[1123398]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1123402 'move' coerce_tmp[1123398](1123400 'deref' call_tmp[602519]))
    (38208 call =[435443] call_tmp[602512] coerce_tmp[1123398])
    (504729 return _void[55])
  }
  function =[38272](ref arg lhs[38269]:_ref(string)[938128], const  ref arg rhs[38275]:string[26]) : void[4] "assignop" "resolved" "fn synchronization free" "no return value for void"
  {
    (38282 call doAssign[1019357] lhs[38269] rhs[38275])
    (504735 return _void[55])
  }
  function +[38345](const  ref arg s0[38342]:string[26], const  ref arg s1[38348]:string[26], ref arg _retArg[1906136]:_ref(string)[938128]) : void[4] "fn returns via _retArg" "resolved" "fn synchronization free"
  {
    const-val ret[504741]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[602570]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1908058]:string[26] "temp"
    (38355 call doConcat[981052] s0[38342] s1[38348] ret_tmp[1908058])
    (1908061 'move' call_tmp[602570] ret_tmp[1908058])
    (504746 'move' ret[504741] call_tmp[602570])
    (1906138 '=' _retArg[1906136] ret[504741])
    (1906140 return _void[55])
  }
  function +=[38800](ref arg lhs[38797]:_ref(string)[938128], const  ref arg rhs[38803]:_ref(string)[938128]) : void[4] "assignop" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[504891]:void[4] "dead after last mention" "RVV" "temp"
    (38811 call doAppend[979259] lhs[38797] rhs[38803])
    (504893 return ret[504891])
  }
  function ==[38823](const  ref arg a[38820]:string[26], const  ref arg b[38826]:string[26]) : bool[10] "no doc" "resolved" "fn synchronization free"
  {
    val ret[504897]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[602785]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (602788 'move' call_tmp[602785](38834 call doEq[1206405] a[38820] b[38826]))
    (1208166 'move' ret[504897] call_tmp[602785])
    (504899 return ret[504897])
  }
  function !=[38847](const  ref arg a[38844]:string[26], const  ref arg b[38850]:string[26]) : bool[10] "inline" "no doc" "resolved"
  {
    val ret[504907]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[602790]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (602793 'move' call_tmp[602790](38858 call doEq[1206405] a[38844] b[38850]))
    const-val call_tmp[602795]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (602798 'move' call_tmp[602795](38859 call ![7494] call_tmp[602790]))
    (1841054 'move' ret[504907] call_tmp[602795])
    (504909 return ret[504907])
  }
  function <[38873](const  ref arg a[38870]:string[26], const  ref arg b[38876]:string[26]) : bool[10] "inline" "no doc" "resolved" "fn synchronization free"
  {
    val ret[504917]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[602800]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (602803 'move' call_tmp[602800](38884 call doLessThan[1840674] a[38870] b[38876]))
    (1840836 'move' ret[504917] call_tmp[602800])
    (504919 return ret[504917])
  }
  function >[38897](const  ref arg a[38894]:string[26], const  ref arg b[38900]:string[26]) : bool[10] "inline" "no doc" "resolved" "fn synchronization free"
  {
    val ret[504927]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[602805]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (602808 'move' call_tmp[602805](38908 call doGreaterThan[1840846] a[38894] b[38900]))
    (1841008 'move' ret[504927] call_tmp[602805])
    (504929 return ret[504927])
  }
  val wint_t[38987]:int(32)[95] "dead at end of block" "extern" "insert auto destroy" "no doc" "type variable"
  function codepoint_isWhitespace[39156](const in arg c[39153]:int(32)[95]) : bool[10] "inline" "private" "resolved" "fn synchronization free"
  {
    val ret[505027]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[602875]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (602878 'move' call_tmp[602875](39175 call iswspace[39165] c[39153]))
    const-val call_tmp[602880]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1125706]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1125712 'move' coerce_tmp[1125706](1125708 'cast' int(32)[95] 0))
    (602883 'move' call_tmp[602880](39177 call !=[436106] call_tmp[602875] coerce_tmp[1125706]))
    (1125716 'move' ret[505027] call_tmp[602880])
    (505029 return ret[505027])
  }
  function _cast[39395](const in arg cs[39398]:c_string[19]) : c_ptr(uint(8))[937612] "inline" "no doc" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1879484]:c_ptr(uint(8))[937612] "temp"
    val ret[505100]:c_ptr(uint(8))[937612] "dead after last mention" "RVV" "temp"
    val call_tmp[602985]:c_ptr(uint(8))[937612] "dead after last mention" "expr temp" "maybe param" "temp"
    (602988 'move' call_tmp[602985](39405 'cast' c_ptr(uint(8))[937612] cs[39398]))
    (505105 'move' ret[505100] call_tmp[602985])
    (505102 return ret[505100])
  }
  function _cast[39465](const  ref arg cpi[39468]:byteIndex[28173]) : int(64)[13] "inline" "no doc" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1879486]:int(64)[13] "temp"
    val ret[505120]:int(64)[13] "dead after last mention" "RVV" "temp"
    ref call_tmp[603012]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const" "temp"
    (603015 'move' call_tmp[603012](39472 call _bindex[757931] cpi[39468]))
    (505125 'move' ret[505120](505124 'deref' call_tmp[603012]))
    (505122 return ret[505120])
  }
  function _cast[39486](const in arg i[39489]:int(64)[13], ref arg _retArg[1906214]:_ref(byteIndex)[948948]) : void[4] "fn returns via _retArg" "inline" "no doc" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1879488]:byteIndex[28173] "temp"
    const-val ret[505129]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    val cpi[39493]:byteIndex[28173] "dead at end of block" "insert auto destroy"
    (1029920 call init[28100] cpi[39493])
    ref call_tmp[603019]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (603022 'move' call_tmp[603019](39499 call _bindex[757931] cpi[39493]))
    (39503 call =[435443] call_tmp[603019] i[39489])
    (505134 'move' ret[505129] cpi[39493])
    gotoReturn _end__cast[505127] _end__cast[505127]
    label _end__cast[505127]
    (1906216 '=' _retArg[1906214] ret[505129])
    (1906218 return _void[55])
  }
  function _cast[39517](const  ref arg cpi[39520]:codepointIndex[28277]) : int(64)[13] "inline" "no doc" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1879490]:int(64)[13] "temp"
    val ret[505140]:int(64)[13] "dead after last mention" "RVV" "temp"
    ref call_tmp[603026]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const" "temp"
    (603029 'move' call_tmp[603026](39524 call _cpindex[758003] cpi[39520]))
    (505145 'move' ret[505140](505144 'deref' call_tmp[603026]))
    (505142 return ret[505140])
  }
  function _cast[39538](const in arg i[39541]:int(64)[13], ref arg _retArg[1906226]:_ref(codepointIndex)[948958]) : void[4] "fn returns via _retArg" "inline" "no doc" "resolved"
  {
    val _formal_type_tmp_[1879492]:codepointIndex[28277] "temp"
    const-val ret[505149]:codepointIndex[28277] "dead after last mention" "RVV" "temp"
    val cpi[39545]:codepointIndex[28277] "dead at end of block" "insert auto destroy"
    (1157225 call init[28204] cpi[39545])
    ref call_tmp[603033]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (603036 'move' call_tmp[603033](39551 call _cpindex[758003] cpi[39545]))
    (39555 call =[435443] call_tmp[603033] i[39541])
    (505154 'move' ret[505149] cpi[39545])
    gotoReturn _end__cast[505147] _end__cast[505147]
    label _end__cast[505147]
    (1906228 '=' _retArg[1906226] ret[505149])
    (1906230 return _void[55])
  }
  function iswspace[39165](const in arg wc[39162]:int(32)[95]) : int(32)[95] "extern" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[505021]:int(32)[95] "RVV" "temp"
    (505023 return ret[505021])
  }
  function on_fn[933975](const  ref arg this[1882132]:_ref(string)[938128]) : void[4] "on" "resolved" "fn synchronization free"
  {
    {
      ref call_tmp[598550]:_ref(c_ptr(uint(8)))[937621] "dead after last mention" "maybe param" "temp"
      (598553 'move' call_tmp[598550](30859 call buff[758153] this[1882132]))
      val coerce_tmp[938348]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (938352 'move' coerce_tmp[938348](938350 'deref' call_tmp[598550]))
      const-val coerce_tmp[938354]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (938360 'move' coerce_tmp[938354](938356 'cast' c_void_ptr[149] coerce_tmp[938348]))
      (30863 call chpl_here_free[188127] coerce_tmp[938354])
    }
    (933982 return _void[55])
  }
  function on_fn[934011](const  ref arg this[1882134]:_ref(string)[938128], ref arg result[1882136]:_ref(bool)[937388]) : void[4] "on" "resolved" "fn synchronization free"
  {
    {
      {
        val _indexOfInterest[36910]:int(32)[95] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[36911]:_ic_codepoints__ref_string[1123038] "dead at end of block" "expr temp" "temp"
        const-val call_tmp[601933]:_ir_codepoints__ref_string[1123044] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val ret_tmp[1905420]:_ir_codepoints__ref_string[1123044] "temp"
        (36889 call codepoints[33666] this[1882134] ret_tmp[1905420])
        (1905423 'move' call_tmp[601933] ret_tmp[1905420])
        (36920 'move' _iterator[36911](36918 call _getIterator[1123053] call_tmp[601933]))
        {
          val ret[1987018]:_ir_codepoints__ref_string[1123044] "dead at end of block" "RVV" "temp"
          const-val call_tmp[1987020]:string[26] "dead at end of block" "maybe param" "temp"
          const-val ret_tmp[1987022]:string[26] "temp"
          ref this[1987592]:_ref(string)[938128] "temp"
          (1987597 'move' this[1987592](1987594 '.v' _iterator[36911] F0_this[2097732]))
          (1987025 call localize[32889] this[1987592] ret_tmp[1987022])
          (1987028 'move' call_tmp[1987020] ret_tmp[1987022])
          val localThis[1987031]:string[26] "dead at end of block" "insert auto destroy"
          (1987033 'move' localThis[1987031] call_tmp[1987020])
          const-val call_tmp[1987036]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          ref this[1987599]:_ref(string)[938128] "temp"
          (1987604 'move' this[1987599](1987601 '.v' _iterator[36911] F0_this[2097732]))
          (1987038 'move' call_tmp[1987036](1987041 call isASCII[31049] this[1987599]))
          const-val call_tmp[1987043]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1987045 'move' call_tmp[1987043] call_tmp[1987036])
          if call_tmp[1987036]
          {
            val _indexOfInterest[1987050]:uint(8)[100] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1987052]:_ic_chpl_bytes__ref_string[1108445] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[1987054]:_ir_chpl_bytes__ref_string[1108451] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[1987056]:_ir_chpl_bytes__ref_string[1108451] "temp"
            ref this[1987606]:_ref(string)[938128] "temp"
            (1987611 'move' this[1987606](1987608 '.v' _iterator[36911] F0_this[2097732]))
            (1987059 call chpl_bytes[33577] this[1987606] ret_tmp[1987056])
            (1987062 'move' call_tmp[1987054] ret_tmp[1987056])
            (1987065 'move' _iterator[1987052](1987068 call _getIterator[1108460] call_tmp[1987054]))
            {
              val ret[1987071]:_ir_chpl_bytes__ref_string[1108451] "dead at end of block" "RVV" "temp"
              const-val call_tmp[1987073]:string[26] "dead at end of block" "maybe param" "temp"
              const-val ret_tmp[1987075]:string[26] "temp"
              ref this[1987077]:_ref(string)[938128] "temp"
              (1987079 'move' this[1987077](1987081 '.v' _iterator[1987052] F0_this[2095558]))
              (1987085 call localize[32889] this[1987077] ret_tmp[1987075])
              (1987088 'move' call_tmp[1987073] ret_tmp[1987075])
              val localThis[1987091]:string[26] "dead at end of block" "insert auto destroy"
              (1987093 'move' localThis[1987091] call_tmp[1987073])
              val _indexOfInterest[1987096]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[1987098]:_ic_chpl_direct_counted_range_iter[1103979] "dead at end of block" "expr temp" "temp"
              ref call_tmp[1987100]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
              (1987102 'move' call_tmp[1987100](1987105 call buffLen[758075] localThis[1987091]))
              const-val call_tmp[1987107]:_ir_chpl_direct_counted_range_iter[1103985] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1987109]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1987111 'move' coerce_tmp[1987109](1987113 'deref' call_tmp[1987100]))
              const-val ret_tmp[1987115]:_ir_chpl_direct_counted_range_iter[1103985] "temp"
              (1987118 call chpl_direct_counted_range_iter[458112] 0 coerce_tmp[1987109] ret_tmp[1987115])
              (1987122 'move' call_tmp[1987107] ret_tmp[1987115])
              (1987125 'move' _iterator[1987098](1987128 call _getIterator[1103994] call_tmp[1987107]))
              {
                val ret[1987131]:_ir_chpl_direct_counted_range_iter[1103985] "dead after last mention" "RVV" "temp"
                val _indexOfInterest[1987133]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[1987135]:_ic_chpl_direct_counted_range_iter_helper[1103729] "dead at end of block" "expr temp" "temp"
                const-val call_tmp[1987137]:_ir_chpl_direct_counted_range_iter_helper[1103735] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val ret_tmp[1987139]:_ir_chpl_direct_counted_range_iter_helper[1103735] "temp"
                const-val low[1987141]:int(64)[13] "temp"
                (1987143 'move' low[1987141](1987145 '.v' _iterator[1987098] F0_low[2107536]))
                const-val count[1987148]:int(64)[13] "temp"
                (1987150 'move' count[1987148](1987152 '.v' _iterator[1987098] F1_count[2107540]))
                (1987156 call chpl_direct_counted_range_iter_helper[1102287] low[1987141] count[1987148] ret_tmp[1987139])
                (1987160 'move' call_tmp[1987137] ret_tmp[1987139])
                (1987163 'move' _iterator[1987135](1987166 call _getIterator[1103744] call_tmp[1987137]))
                {
                  val ret[2056052]:_ir_chpl_direct_counted_range_iter_helper[1103735] "dead after last mention" "RVV" "temp"
                  val call_tmp[2056054]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val tmp[2056056]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  const-val tmp[2056058]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  const-val call_tmp[2056060]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val count[2056536]:int(64)[13] "temp"
                  (2056541 'move' count[2056536](2056538 '.v' _iterator[1987135] F1_count[2113698]))
                  (2056062 'move' call_tmp[2056060](2056065 call <[948587] count[2056536]))
                  (2056067 'move' tmp[2056058] call_tmp[2056060])
                  (2056070 'move' tmp[2056056] call_tmp[2056060])
                  const-val call_tmp[2056073]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2056075 'move' call_tmp[2056073] call_tmp[2056060])
                  if call_tmp[2056060]
                  {
                    (2056081 call boundsCheckHalt[210254] "With a negative count, the range must have a last index.")
                  }
                  const-val tmp[2056084]:2*int(64)[1040245] "dead at end of block" "const" "insert auto destroy" "temp"
                  val tmp[2056086]:2*int(64)[1040245] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                  const-val tmp[2056088]:bool[10] "dead after last mention" "maybe param" "temp"
                  const-val call_tmp[2056090]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val count[2056543]:int(64)[13] "temp"
                  (2056548 'move' count[2056543](2056545 '.v' _iterator[1987135] F1_count[2113698]))
                  (2056092 'move' call_tmp[2056090](2056095 call ==[435744] count[2056543] 0))
                  (2056098 'move' tmp[2056088] call_tmp[2056090])
                  if call_tmp[2056090]
                  {
                    const-val tmp[2056103]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                    val call_tmp[2056105]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                    const-val call_tmp[2056107]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val low[2056550]:int(64)[13] "temp"
                    (2056555 'move' low[2056550](2056552 '.v' _iterator[1987135] F0_low[2113694]))
                    (2056109 'move' call_tmp[2056107](2056112 call _cast[956223] low[2056550]))
                    const-val call_tmp[2056114]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[2056116]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                    (2056118 'move' coerce_tmp[2056116](2056120 'cast' uint(64)[115] 1))
                    (2056123 'move' call_tmp[2056114](2056126 call -[962382] call_tmp[2056107]))
                    const-val call_tmp[2056128]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                    (2056130 'move' call_tmp[2056128](2056133 call _cast[953732] call_tmp[2056114]))
                    const-val ret_tmp[2056135]:2*int(64)[1040245] "temp"
                    const-val low[2056557]:int(64)[13] "temp"
                    (2056562 'move' low[2056557](2056559 '.v' _iterator[1987135] F0_low[2113694]))
                    (2056138 call _build_tuple[1040203] low[2056557] call_tmp[2056128] ret_tmp[2056135])
                    (2056142 'move' tmp[2056103] ret_tmp[2056135])
                    (2056145 'move' tmp[2056086] tmp[2056103])
                  }
                  {
                    const-val tmp[2056149]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                    val call_tmp[2056151]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    const-val call_tmp[2056153]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val count[2056564]:int(64)[13] "temp"
                    (2056569 'move' count[2056564](2056566 '.v' _iterator[1987135] F1_count[2113698]))
                    (2056155 'move' call_tmp[2056153] count[2056564])
                    const-val call_tmp[2056158]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val count[2056571]:int(64)[13] "temp"
                    (2056576 'move' count[2056571](2056573 '.v' _iterator[1987135] F1_count[2113698]))
                    (2056160 'move' call_tmp[2056158](2056163 call -[962415] count[2056571]))
                    const-val call_tmp[2056165]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val low[2056578]:int(64)[13] "temp"
                    (2056583 'move' low[2056578](2056580 '.v' _iterator[1987135] F0_low[2113694]))
                    (2056167 'move' call_tmp[2056165](2056170 call +[439752] low[2056578] call_tmp[2056158]))
                    const-val ret_tmp[2056173]:2*int(64)[1040245] "temp"
                    const-val low[2056585]:int(64)[13] "temp"
                    (2056590 'move' low[2056585](2056587 '.v' _iterator[1987135] F0_low[2113694]))
                    (2056176 call _build_tuple[1040203] low[2056585] call_tmp[2056165] ret_tmp[2056173])
                    (2056180 'move' tmp[2056149] ret_tmp[2056173])
                    (2056183 'move' tmp[2056086] tmp[2056149])
                  }
                  (2056187 '=' tmp[2056084] tmp[2056086])
                  (2056190 'noop')
                  1
                  ref call_tmp[2056192]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
                  (2056194 'move' call_tmp[2056192](2056196 '.' tmp[2056084] x0[1040241]))
                  const-val start[2056199]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                  const-val coerce_tmp[2056201]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                  (2056203 'move' coerce_tmp[2056201](2056205 'deref' call_tmp[2056192]))
                  (2056207 '=' start[2056199] coerce_tmp[2056201])
                  (2056210 'noop')
                  ref call_tmp[2056211]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
                  (2056213 'move' call_tmp[2056211](2056215 '.' tmp[2056084] x1[1040243]))
                  const-val end[2056218]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                  const-val coerce_tmp[2056220]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                  (2056222 'move' coerce_tmp[2056220](2056224 'deref' call_tmp[2056211]))
                  (2056226 '=' end[2056218] coerce_tmp[2056220])
                  (2056229 'noop')
                  val _indexOfInterest[2056230]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                  val _iterator[2056232]:_ic_chpl_direct_param_stride_range_iter[1103475] "dead at end of block" "expr temp" "temp"
                  const-val call_tmp[2056234]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val ret_tmp[2056236]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
                  (2056239 call chpl_direct_param_stride_range_iter[1102713] coerce_tmp[2056201] coerce_tmp[2056220] ret_tmp[2056236])
                  (2056243 'move' call_tmp[2056234] ret_tmp[2056236])
                  (2056246 'move' _iterator[2056232](2056249 call _getIterator[1103490] call_tmp[2056234]))
                  {
                    val ret[2056252]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead after last mention" "RVV" "temp"
                    val call_tmp[2056254]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    (2056257 call chpl_range_check_stride[1103033])
                    val i[2056258]:int(64)[13] "dead at end of block" "insert auto destroy"
                    val call_tmp[2056260]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    (2056262 'move' i[2056258] 0)
                    val call_tmp[2056265]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    const-val default_arg_first[2056267]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                    const-val low[2056269]:int(64)[13] "temp"
                    (2056271 'move' low[2056269](2056273 '.v' _iterator[2056232] F0_low[2115192]))
                    (2056276 'move' default_arg_first[2056267](2056279 call chpl_checkIfRangeIterWillOverflow_default_first[1103387] low[2056269]))
                    const-val default_arg_last[2056281]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                    const-val high[2056283]:int(64)[13] "temp"
                    (2056285 'move' high[2056283](2056287 '.v' _iterator[2056232] F1_high[2115196]))
                    (2056290 'move' default_arg_last[2056281](2056293 call chpl_checkIfRangeIterWillOverflow_default_last[1103415] high[2056283]))
                    const-val _return_tmp_[2056295]:bool[10] "dead after last mention" "temp"
                    const-val low[2056297]:int(64)[13] "temp"
                    (2056299 'move' low[2056297](2056301 '.v' _iterator[2056232] F0_low[2115192]))
                    const-val high[2056304]:int(64)[13] "temp"
                    (2056306 'move' high[2056304](2056308 '.v' _iterator[2056232] F1_high[2115196]))
                    (2056311 'move' _return_tmp_[2056295](2056314 call chpl_checkIfRangeIterWillOverflow[1096265] low[2056297] high[2056304] 1 default_arg_first[2056267] default_arg_last[2056281] 1))
                    CForLoop[2056321]
                    {
                      const-val yret[2056350]:int(64)[13] "dead after last mention" "YVV" "temp"
                      (2056352 'move' yret[2056350] i[2056258])
                      const-val _yieldedIndex[2056355]:int(64)[13] "temp"
                      (2056357 'move' _yieldedIndex[2056355] i[2056258])
                      {
                        const-val i[2056361]:int(64)[13] "const" "index var" "insert auto destroy"
                        (2056363 'move' i[2056361] _yieldedIndex[2056355])
                        const-val yret[2056366]:int(64)[13] "dead after last mention" "YVV" "temp"
                        (2056368 'move' yret[2056366] _yieldedIndex[2056355])
                        const-val _yieldedIndex[2056396]:int(64)[13] "temp"
                        (2056534 'move' _yieldedIndex[2056396] _yieldedIndex[2056355])
                        {
                          const-val i[2056398]:int(64)[13] "const" "index var" "insert auto destroy"
                          (2056400 'move' i[2056398] _yieldedIndex[2056396])
                          const-val yret[2056403]:int(64)[13] "dead after last mention" "YVV" "temp"
                          (2056405 'move' yret[2056403] _yieldedIndex[2056396])
                          const-val _yieldedIndex[2056408]:int(64)[13] "temp"
                          (2056410 'move' _yieldedIndex[2056408] _yieldedIndex[2056396])
                          {
                            const-val i[2056414]:int(64)[13] "const" "index var" "insert auto destroy"
                            (2056416 'move' i[2056414] _yieldedIndex[2056408])
                            const-val yret[2056419]:uint(8)[100] "dead after last mention" "YVV" "temp"
                            ref call_tmp[2056421]:_ref(uint(8))[937097] "dead after last mention" "maybe param" "temp"
                            ref _this_tmp_[2056423]:_ref(c_ptr(uint(8)))[937621] "dead after last mention" "temp"
                            (2056425 'move' _this_tmp_[2056423](2056428 call buff[758153] localThis[1987091]))
                            val coerce_tmp[2056430]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (2056432 'move' coerce_tmp[2056430](2056434 'deref' _this_tmp_[2056423]))
                            (2056436 'move' call_tmp[2056421](2056439 call this[954280] coerce_tmp[2056430] _yieldedIndex[2056408]))
                            const-val coerce_tmp[2056442]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                            (2056444 'move' coerce_tmp[2056442](2056446 'deref' call_tmp[2056421]))
                            (2056448 '=' yret[2056419] coerce_tmp[2056442])
                            (2056451 'noop')
                            const-val _yieldedIndex[2056452]:uint(8)[100] "temp"
                            (2056454 'move' _yieldedIndex[2056452] coerce_tmp[2056442])
                            {
                              const-val b[2056458]:uint(8)[100] "const" "index var" "insert auto destroy"
                              (2056460 'move' b[2056458] _yieldedIndex[2056452])
                              val yret[2056463]:int(32)[95] "dead after last mention" "YVV" "temp"
                              val call_tmp[2056465]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                              const-val _yieldedIndex[2056467]:int(32)[95] "temp"
                              (2056469 'move' _yieldedIndex[2056467](2056471 'cast' int(32)[95] _yieldedIndex[2056452]))
                              {
                                const-val cp[2056475]:int(32)[95] "const" "index var" "insert auto destroy"
                                (2056477 'move' cp[2056475] _yieldedIndex[2056467])
                                {
                                  const-val call_tmp[2056481]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                  (2056483 'move' call_tmp[2056481](2056486 call codepoint_isWhitespace[39156] cp[2056475]))
                                  const-val call_tmp[2056488]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                  (2056490 'move' call_tmp[2056488](2056493 call ![7494] call_tmp[2056481]))
                                  const-val call_tmp[2056495]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                  (2056497 'move' call_tmp[2056495] call_tmp[2056488])
                                  if call_tmp[2056495]
                                  {
                                    (2056503 call =[435290] result[1882136] 0)
                                    (2056528 call _freeIterator[1103663] _iterator[2056232])
                                    (2056531 call chpl__autoDestroy[1674803] tmp[2056084])
                                    (2056507 call _freeIterator[1103913] _iterator[1987135])
                                    (2056510 call _freeIterator[1104163] _iterator[1987098])
                                    (2056513 call chpl__autoDestroy[1601673] localThis[1987091])
                                    (2056516 call _freeIterator[1109758] _iterator[1987052])
                                    (2056519 call chpl__autoDestroy[1601673] localThis[1987031])
                                    break _breakLabel[36916] _breakLabel[36916]
                                  }
                                }
                                label _continueLabel[2056524]
                              }
                            }
                          }
                        }
                      }
                      {
                        const-val low[2056323]:int(64)[13] "temp"
                        (2056325 'move' low[2056323](2056327 '.v' _iterator[2056232] F0_low[2115192]))
                        (2056330 '=' i[2056258] low[2056323])
                      }
                      {
                        const-val high[2056334]:int(64)[13] "temp"
                        (2056336 'move' high[2056334](2056338 '.v' _iterator[2056232] F1_high[2115196]))
                        (2056341 '<=' i[2056258] high[2056334])
                      }
                      {
                        val call_tmp[2056345]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                        (2056347 '+=' i[2056258] 1)
                      }
                    }
                    label _endchpl_direct_param_stride_range_iter[2056384]
                  }
                  (2056387 call _freeIterator[1103663] _iterator[2056232])
                  (2056390 call chpl__autoDestroy[1674803] tmp[2056084])
                  label _endchpl_direct_counted_range_iter_helper[2056392]
                }
                (1987268 call _freeIterator[1103913] _iterator[1987135])
                label _endchpl_direct_counted_range_iter[1987270]
              }
              (1987273 call _freeIterator[1104163] _iterator[1987098])
              (1987276 call chpl__autoDestroy[1601673] localThis[1987091])
              label _endchpl_bytes[1987278]
            }
            (1987281 call _freeIterator[1109758] _iterator[1987052])
          }
          {
            val i[1987284]:int(64)[13] "dead at end of block" "insert auto destroy"
            (1987286 'move' i[1987284] 0)
            val tmp[1987289]:bool[10] "dead after last mention" "temp"
            ref call_tmp[1987291]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
            (1987293 'move' call_tmp[1987291](1987296 call buffLen[758075] localThis[1987031]))
            const-val call_tmp[1987298]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val coerce_tmp[1987300]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (1987302 'move' coerce_tmp[1987300](1987304 'deref' call_tmp[1987291]))
            (1987306 'move' call_tmp[1987298](1987309 call <[437568] 0 coerce_tmp[1987300]))
            (1987312 'move' tmp[1987289] call_tmp[1987298])
            WhileDo[1987315]
            {
              ref call_tmp[1987317]:_ref(c_ptr(uint(8)))[937621] "dead at end of block" "maybe param" "temp"
              (1987319 'move' call_tmp[1987317](1987322 call buff[758153] localThis[1987031]))
              ref call_tmp[1987324]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
              (1987326 'move' call_tmp[1987324](1987329 call buffLen[758075] localThis[1987031]))
              const-val call_tmp[1987331]:(syserr,int(32),int(32))[964809] "dead at end of block" "maybe param" "temp"
              val coerce_tmp[1987333]:c_ptr(uint(8))[937612] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1987335 'move' coerce_tmp[1987333](1987337 'deref' call_tmp[1987317]))
              const-val coerce_tmp[1987339]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1987341 'move' coerce_tmp[1987339](1987343 'deref' call_tmp[1987324]))
              const-val ret_tmp[1987345]:(syserr,int(32),int(32))[964809] "temp"
              (1987348 call decodeHelp[174452] coerce_tmp[1987333] coerce_tmp[1987339] i[1987284] 1 ret_tmp[1987345])
              (1987354 'move' call_tmp[1987331] ret_tmp[1987345])
              const-val tmp[1987357]:(syserr,int(32),int(32))[964809] "dead at end of block" "const" "insert auto destroy" "temp"
              (1987359 'move' tmp[1987357] call_tmp[1987331])
              1
              ref call_tmp[1987363]:_ref(syserr)[949021] "dead at end of block" "maybe param" "reference to a const" "temp"
              (1987365 'move' call_tmp[1987363](1987367 '.' tmp[1987357] x0[964803]))
              const-val decodeRet[1987370]:syserr[223672] "dead at end of block" "const" "insert auto destroy"
              const-val coerce_tmp[1987372]:syserr[223672] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1987374 'move' coerce_tmp[1987372](1987376 'deref' call_tmp[1987363]))
              (1987378 'move' decodeRet[1987370](1987381 call chpl__initCopy[964674] coerce_tmp[1987372]))
              ref call_tmp[1987383]:_ref(int(32))[936815] "dead at end of block" "maybe param" "reference to a const" "temp"
              (1987385 'move' call_tmp[1987383](1987387 '.' tmp[1987357] x1[964805]))
              const-val cp[1987390]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
              const-val coerce_tmp[1987392]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1987394 'move' coerce_tmp[1987392](1987396 'deref' call_tmp[1987383]))
              (1987398 'move' cp[1987390](1987401 call chpl__initCopy[964946] coerce_tmp[1987392]))
              ref call_tmp[1987403]:_ref(int(32))[936815] "dead at end of block" "maybe param" "reference to a const" "temp"
              (1987405 'move' call_tmp[1987403](1987407 '.' tmp[1987357] x2[964807]))
              const-val nBytes[1987410]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
              const-val coerce_tmp[1987412]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1987414 'move' coerce_tmp[1987412](1987416 'deref' call_tmp[1987403]))
              (1987418 'move' nBytes[1987410](1987421 call chpl__initCopy[964946] coerce_tmp[1987412]))
              const-val yret[1987423]:int(32)[95] "dead after last mention" "YVV" "temp"
              val call_tmp[1987425]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (1987427 'move' yret[1987423] cp[1987390])
              const-val _yieldedIndex[1987544]:int(32)[95] "temp"
              (1987590 'move' _yieldedIndex[1987544] cp[1987390])
              {
                const-val cp[1987546]:int(32)[95] "const" "index var" "insert auto destroy"
                (1987548 'move' cp[1987546] _yieldedIndex[1987544])
                {
                  const-val call_tmp[1987552]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1987554 'move' call_tmp[1987552](1987557 call codepoint_isWhitespace[39156] cp[1987546]))
                  const-val call_tmp[1987559]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1987561 'move' call_tmp[1987559](1987564 call ![7494] call_tmp[1987552]))
                  const-val call_tmp[1987566]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1987568 'move' call_tmp[1987566] call_tmp[1987559])
                  if call_tmp[1987566]
                  {
                    (1987574 call =[435290] result[1882136] 0)
                    (1987584 call chpl__autoDestroy[1605546] tmp[1987357])
                    (1987587 call chpl__autoDestroy[1601673] localThis[1987031])
                    break _breakLabel[36916] _breakLabel[36916]
                  }
                }
                label _continueLabel[1987580]
              }
              const-val coerce_tmp[1987443]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1987445 'move' coerce_tmp[1987443](1987447 'cast' int(64)[13] nBytes[1987410]))
              (1987451 call +=[451431] i[1987284] coerce_tmp[1987443])
              (1987455 call chpl__autoDestroy[1605546] tmp[1987357])
              ref call_tmp[1987457]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
              (1987459 'move' call_tmp[1987457](1987462 call buffLen[758075] localThis[1987031]))
              const-val call_tmp[1987464]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1987466]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1987468 'move' coerce_tmp[1987466](1987470 'deref' call_tmp[1987457]))
              (1987472 'move' call_tmp[1987464](1987475 call <[437568] i[1987284] coerce_tmp[1987466]))
              (1987478 'move' tmp[1987289] call_tmp[1987464])
              tmp[1987289]
            }
          }
          (1987483 call chpl__autoDestroy[1601673] localThis[1987031])
          label _endcodepoints[1987485]
        }
        label _breakLabel[36916]
        (1919977 call _freeIterator[1123325] _iterator[36911])
      }
    }
    (934018 return _void[55])
  }
  function chpl_enc_validate_buf[986926](const in arg buf[986928]:c_ptr(uint(8))[937612], const in arg len[986930]:int(64)[13], ref arg numCodepoints[986932]:_ref(int(64))[936761]) : int(32)[95] "extern" "instantiated generic" "invisible fn" "local args" "no fn body" "resolved" "no return value for void"
  {
    val ret[986936]:int(32)[95] "RVV" "temp"
    (986948 return ret[986936])
  }
  function on_fn[1106371](const in arg needle[1882392]:__serializeHelper[28089], const  ref arg this[1882394]:_ref(string)[938128], const in arg region[1882396]:range(byteIndex,bounded,false)[1025981], ref arg ret[1882398]:_ref(int(64))[936761]) : void[4] "on" "resolved"
  {
    val needle[2196210]:string[26] "temp"
    ref needle[2196211]:string[26] "temp"
    ref tmp[2196217]:string[26] "temp"
    (2196221 'move' tmp[2196217](2196219 'set reference' needle[2196210]))
    (2196214 call chpl__deserialize[1867128] needle[1882392] tmp[2196217])
    (2196226 'move' needle[2196211](2196224 'set reference' needle[2196210]))
    {
      val localRet[1106384]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1106386 'move' localRet[1106384] -2)
      ref call_tmp[1106391]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1106393 'move' call_tmp[1106391](1106396 call buffLen[758075] needle[2196211]))
      const-val nLen[1106399]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[1107552]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1107556 'move' coerce_tmp[1107552](1107554 'deref' call_tmp[1106391]))
      (1921702 '=' nLen[1106399] coerce_tmp[1107552])
      (1106401 'noop')
      const-val call_tmp[1106405]:(range(int(64),bounded,false),int(64))[1085113] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1908594]:(range(int(64),bounded,false),int(64))[1085113] "temp"
      (1106410 call getView[1031343] this[1882394] region[1882396] ret_tmp[1908594])
      (1908597 'move' call_tmp[1106405] ret_tmp[1908594])
      const-val tmp[1106413]:(range(int(64),bounded,false),int(64))[1085113] "dead at end of block" "const" "insert auto destroy" "temp"
      (1106415 'move' tmp[1106413] call_tmp[1106405])
      1
      ref call_tmp[1106423]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1106425 'move' call_tmp[1106423](1107567 '.' tmp[1106413] x0[1085109]))
      const-val view[1106430]:range(int(64),bounded,false)[1027003] "dead at end of block" "const" "insert auto destroy"
      (1106432 'move' view[1106430](1107570 'deref' call_tmp[1106423]))
      const-val call_tmp[1106436]:int(64)[13] "dead at end of block" "maybe param" "temp"
      (1106438 'move' call_tmp[1106436](1106441 call size[1035978] view[1106430]))
      const-val thisLen[1106444]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      (1106446 'move' thisLen[1106444] call_tmp[1106436])
      {
        const-val call_tmp[1106889]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1106891 'move' call_tmp[1106889](1106894 call ==[435744] nLen[1106399] 0))
        const-val call_tmp[1106897]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1106899 'move' call_tmp[1106897] call_tmp[1106889])
        if call_tmp[1106897]
        {
          {
            (1106923 call =[435443] localRet[1106384] -1)
          }
        }
      }
      const-val call_tmp[1106978]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1106980 'move' call_tmp[1106978](1106983 call >[437788] nLen[1106399] thisLen[1106444]))
      const-val call_tmp[1106986]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1106988 'move' call_tmp[1106986] call_tmp[1106978])
      if call_tmp[1106986]
      {
        (1107003 call =[435443] localRet[1106384] -1)
      }
      const-val call_tmp[1107016]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1107018 'move' call_tmp[1107016](1107021 call ==[435744] localRet[1106384] -2))
      const-val call_tmp[1107024]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1107026 'move' call_tmp[1107024] call_tmp[1107016])
      if call_tmp[1107024]
      {
        (1107041 call =[435443] localRet[1106384] -1)
        const-val call_tmp[1107046]:string[26] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[1905272]:string[26] "temp"
        (1107054 call localize[32889] needle[2196211] ret_tmp[1905272])
        (1905275 'move' call_tmp[1107046] ret_tmp[1905272])
        const localNeedle[1107055]:string[26] "dead at end of block" "const" "insert auto destroy"
        (1107057 'move' localNeedle[1107055] call_tmp[1107046])
        const-val call_tmp[1107062]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (1107064 'move' call_tmp[1107062](1107067 call -[440532] thisLen[1106444] nLen[1106399]))
        const-val call_tmp[1107070]:int(64)[13] "dead at end of block" "maybe param" "temp"
        (1107072 'move' call_tmp[1107070](1107075 call +[949855] call_tmp[1107062]))
        const-val numPossible[1107078]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        (1107080 'move' numPossible[1107078] call_tmp[1107070])
        const-val searchSpace[1107084]:range(int(64),bounded,false)[1027003] "dead at end of block" "const" "insert auto destroy"
        const-val tmp[1107086]:range(int(64),bounded,false)[1027003] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        const-val tmp[1107097]:range(int(64),bounded,false)[1027003] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1107099]:range(int(64),boundedLow,false)[1087754] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1909474]:range(int(64),boundedLow,false)[1087754] "temp"
        (1107104 call chpl_build_low_bounded_range[1087147] 0 ret_tmp[1909474])
        (1909477 'move' call_tmp[1107099] ret_tmp[1909474])
        const-val ret_tmp[1909600]:range(int(64),bounded,false)[1027003] "temp"
        (1107109 call #[1088114] call_tmp[1107099] numPossible[1107078] ret_tmp[1909600])
        (1909603 'move' tmp[1107097] ret_tmp[1909600])
        (1107112 'move' tmp[1107086] tmp[1107097])
        (1107154 'move' searchSpace[1107084] tmp[1107086])
        {
          val _indexOfInterest[1107163]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1107165]:_ic_these_range_int64_t_bounded_F[1096892] "dead at end of block" "expr temp" "temp"
          (1107167 'move' _iterator[1107165](1107170 call _getIterator[1095509] searchSpace[1107084]))
          {
            val ret[1995410]:_ir_these_range_int64_t_bounded_F[1096898] "dead after last mention" "RVV" "temp"
            const-val _return_tmp_[1995412]:bool[10] "dead after last mention" "temp"
            const-val this[1995713]:range(int(64),bounded,false)[1027003] "temp"
            (1995718 'move' this[1995713](1995715 '.v' _iterator[1107165] F0_this[2113071]))
            (1995414 'move' _return_tmp_[1995412](1995417 call checkIfIterWillOverflow[1096003] this[1995713] 1))
            val i[1995420]:int(64)[13] "dead at end of block" "insert auto destroy"
            val call_tmp[1995422]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (1995424 'move' i[1995420] 0)
            ref call_tmp[1995427]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[1995720]:range(int(64),bounded,false)[1027003] "temp"
            (1995725 'move' this[1995720](1995722 '.v' _iterator[1107165] F0_this[2113071]))
            (1995429 'move' call_tmp[1995427](1995432 call _low[1028641] this[1995720]))
            const-val start[1995434]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1995436]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1995438 'move' coerce_tmp[1995436](1995440 'deref' call_tmp[1995427]))
            (1995442 '=' start[1995434] coerce_tmp[1995436])
            (1995445 'noop')
            ref call_tmp[1995446]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[1995727]:range(int(64),bounded,false)[1027003] "temp"
            (1995732 'move' this[1995727](1995729 '.v' _iterator[1107165] F0_this[2113071]))
            (1995448 'move' call_tmp[1995446](1995451 call _high[1028849] this[1995727]))
            const end[1995453]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1995455]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1995457 'move' coerce_tmp[1995455](1995459 'deref' call_tmp[1995446]))
            (1995461 '=' end[1995453] coerce_tmp[1995455])
            (1995464 'noop')
            CForLoop[1995465] hazard
            {
              const-val yret[1995480]:int(64)[13] "dead after last mention" "YVV" "temp"
              const-val call_tmp[1995482]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val this[1995734]:range(int(64),bounded,false)[1027003] "temp"
              (1995739 'move' this[1995734](1995736 '.v' _iterator[1107165] F0_this[2113071]))
              (1995484 'move' call_tmp[1995482](1995487 call chpl_intToIdx[1028669] this[1995734] i[1995420]))
              (1995490 'move' yret[1995480] call_tmp[1995482])
              const-val _yieldedIndex[1995504]:int(64)[13] "temp"
              (1995711 'move' _yieldedIndex[1995504] call_tmp[1995482])
              {
                const-val i[1995506]:int(64)[13] "const" "index var" "insert auto destroy"
                (1995508 'move' i[1995506] _yieldedIndex[1995504])
                {
                  {
                    val _indexOfInterest[1995513]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    val _iterator[1995515]:_ic_chpl_direct_counted_range_iter[1103979] "dead at end of block" "expr temp" "temp"
                    const-val call_tmp[1995517]:_ir_chpl_direct_counted_range_iter[1103985] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val ret_tmp[1995519]:_ir_chpl_direct_counted_range_iter[1103985] "temp"
                    (1995522 call chpl_direct_counted_range_iter[458112] 0 nLen[1106399] ret_tmp[1995519])
                    (1995526 'move' call_tmp[1995517] ret_tmp[1995519])
                    (1995529 'move' _iterator[1995515](1995532 call _getIterator[1103994] call_tmp[1995517]))
                    {
                      val ret[2065033]:_ir_chpl_direct_counted_range_iter[1103985] "dead after last mention" "RVV" "temp"
                      val _indexOfInterest[2065035]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      val _iterator[2065037]:_ic_chpl_direct_counted_range_iter_helper[1103729] "dead at end of block" "expr temp" "temp"
                      const-val call_tmp[2065039]:_ir_chpl_direct_counted_range_iter_helper[1103735] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val ret_tmp[2065041]:_ir_chpl_direct_counted_range_iter_helper[1103735] "temp"
                      const-val low[2065633]:int(64)[13] "temp"
                      (2065638 'move' low[2065633](2065635 '.v' _iterator[1995515] F0_low[2107536]))
                      const-val count[2065640]:int(64)[13] "temp"
                      (2065645 'move' count[2065640](2065642 '.v' _iterator[1995515] F1_count[2107540]))
                      (2065044 call chpl_direct_counted_range_iter_helper[1102287] low[2065633] count[2065640] ret_tmp[2065041])
                      (2065048 'move' call_tmp[2065039] ret_tmp[2065041])
                      (2065051 'move' _iterator[2065037](2065054 call _getIterator[1103744] call_tmp[2065039]))
                      {
                        val ret[2065057]:_ir_chpl_direct_counted_range_iter_helper[1103735] "dead after last mention" "RVV" "temp"
                        val call_tmp[2065059]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                        const-val tmp[2065061]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        const-val tmp[2065063]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                        const-val call_tmp[2065065]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val count[2065067]:int(64)[13] "temp"
                        (2065069 'move' count[2065067](2065071 '.v' _iterator[2065037] F1_count[2113698]))
                        (2065074 'move' call_tmp[2065065](2065077 call <[948587] count[2065067]))
                        (2065079 'move' tmp[2065063] call_tmp[2065065])
                        (2065082 'move' tmp[2065061] call_tmp[2065065])
                        const-val call_tmp[2065085]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (2065087 'move' call_tmp[2065085] call_tmp[2065065])
                        if call_tmp[2065065]
                        {
                          (2065093 call boundsCheckHalt[210254] "With a negative count, the range must have a last index.")
                        }
                        const-val tmp[2065096]:2*int(64)[1040245] "dead at end of block" "const" "insert auto destroy" "temp"
                        val tmp[2065098]:2*int(64)[1040245] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                        const-val tmp[2065100]:bool[10] "dead after last mention" "maybe param" "temp"
                        const-val call_tmp[2065102]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val count[2065104]:int(64)[13] "temp"
                        (2065106 'move' count[2065104](2065108 '.v' _iterator[2065037] F1_count[2113698]))
                        (2065111 'move' call_tmp[2065102](2065114 call ==[435744] count[2065104] 0))
                        (2065117 'move' tmp[2065100] call_tmp[2065102])
                        if call_tmp[2065102]
                        {
                          const-val tmp[2065122]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                          val call_tmp[2065124]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                          const-val call_tmp[2065126]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val low[2065128]:int(64)[13] "temp"
                          (2065130 'move' low[2065128](2065132 '.v' _iterator[2065037] F0_low[2113694]))
                          (2065135 'move' call_tmp[2065126](2065138 call _cast[956223] low[2065128]))
                          const-val call_tmp[2065140]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val coerce_tmp[2065142]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                          (2065144 'move' coerce_tmp[2065142](2065146 'cast' uint(64)[115] 1))
                          (2065149 'move' call_tmp[2065140](2065152 call -[962382] call_tmp[2065126]))
                          const-val call_tmp[2065154]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          (2065156 'move' call_tmp[2065154](2065159 call _cast[953732] call_tmp[2065140]))
                          const-val ret_tmp[2065161]:2*int(64)[1040245] "temp"
                          const-val low[2065163]:int(64)[13] "temp"
                          (2065165 'move' low[2065163](2065167 '.v' _iterator[2065037] F0_low[2113694]))
                          (2065171 call _build_tuple[1040203] low[2065163] call_tmp[2065154] ret_tmp[2065161])
                          (2065175 'move' tmp[2065122] ret_tmp[2065161])
                          (2065178 'move' tmp[2065098] tmp[2065122])
                        }
                        {
                          const-val tmp[2065182]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                          val call_tmp[2065184]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val call_tmp[2065186]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val count[2065188]:int(64)[13] "temp"
                          (2065190 'move' count[2065188](2065192 '.v' _iterator[2065037] F1_count[2113698]))
                          (2065195 'move' call_tmp[2065186] count[2065188])
                          const-val call_tmp[2065198]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val count[2065200]:int(64)[13] "temp"
                          (2065202 'move' count[2065200](2065204 '.v' _iterator[2065037] F1_count[2113698]))
                          (2065207 'move' call_tmp[2065198](2065210 call -[962415] count[2065200]))
                          const-val call_tmp[2065212]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val low[2065214]:int(64)[13] "temp"
                          (2065216 'move' low[2065214](2065218 '.v' _iterator[2065037] F0_low[2113694]))
                          (2065221 'move' call_tmp[2065212](2065224 call +[439752] low[2065214] call_tmp[2065198]))
                          const-val ret_tmp[2065227]:2*int(64)[1040245] "temp"
                          const-val low[2065229]:int(64)[13] "temp"
                          (2065231 'move' low[2065229](2065233 '.v' _iterator[2065037] F0_low[2113694]))
                          (2065237 call _build_tuple[1040203] low[2065229] call_tmp[2065212] ret_tmp[2065227])
                          (2065241 'move' tmp[2065182] ret_tmp[2065227])
                          (2065244 'move' tmp[2065098] tmp[2065182])
                        }
                        (2065248 '=' tmp[2065096] tmp[2065098])
                        (2065251 'noop')
                        1
                        ref call_tmp[2065253]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
                        (2065255 'move' call_tmp[2065253](2065257 '.' tmp[2065096] x0[1040241]))
                        const-val start[2065260]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                        const-val coerce_tmp[2065262]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                        (2065264 'move' coerce_tmp[2065262](2065266 'deref' call_tmp[2065253]))
                        (2065268 '=' start[2065260] coerce_tmp[2065262])
                        (2065271 'noop')
                        ref call_tmp[2065272]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
                        (2065274 'move' call_tmp[2065272](2065276 '.' tmp[2065096] x1[1040243]))
                        const-val end[2065279]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                        const-val coerce_tmp[2065281]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                        (2065283 'move' coerce_tmp[2065281](2065285 'deref' call_tmp[2065272]))
                        (2065287 '=' end[2065279] coerce_tmp[2065281])
                        (2065290 'noop')
                        val _indexOfInterest[2065291]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                        val _iterator[2065293]:_ic_chpl_direct_param_stride_range_iter[1103475] "dead at end of block" "expr temp" "temp"
                        const-val call_tmp[2065295]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead at end of block" "expr temp" "maybe param" "temp"
                        const-val ret_tmp[2065297]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
                        (2065300 call chpl_direct_param_stride_range_iter[1102713] coerce_tmp[2065262] coerce_tmp[2065281] ret_tmp[2065297])
                        (2065304 'move' call_tmp[2065295] ret_tmp[2065297])
                        (2065307 'move' _iterator[2065293](2065310 call _getIterator[1103490] call_tmp[2065295]))
                        {
                          val ret[2065313]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead after last mention" "RVV" "temp"
                          val call_tmp[2065315]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (2065318 call chpl_range_check_stride[1103033])
                          val i[2065319]:int(64)[13] "dead at end of block" "insert auto destroy"
                          val call_tmp[2065321]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (2065323 'move' i[2065319] 0)
                          val call_tmp[2065326]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val default_arg_first[2065328]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                          const-val low[2065330]:int(64)[13] "temp"
                          (2065332 'move' low[2065330](2065334 '.v' _iterator[2065293] F0_low[2115192]))
                          (2065337 'move' default_arg_first[2065328](2065340 call chpl_checkIfRangeIterWillOverflow_default_first[1103387] low[2065330]))
                          const-val default_arg_last[2065342]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                          const-val high[2065344]:int(64)[13] "temp"
                          (2065346 'move' high[2065344](2065348 '.v' _iterator[2065293] F1_high[2115196]))
                          (2065351 'move' default_arg_last[2065342](2065354 call chpl_checkIfRangeIterWillOverflow_default_last[1103415] high[2065344]))
                          const-val _return_tmp_[2065356]:bool[10] "dead after last mention" "temp"
                          const-val low[2065358]:int(64)[13] "temp"
                          (2065360 'move' low[2065358](2065362 '.v' _iterator[2065293] F0_low[2115192]))
                          const-val high[2065365]:int(64)[13] "temp"
                          (2065367 'move' high[2065365](2065369 '.v' _iterator[2065293] F1_high[2115196]))
                          (2065372 'move' _return_tmp_[2065356](2065375 call chpl_checkIfRangeIterWillOverflow[1096265] low[2065358] high[2065365] 1 default_arg_first[2065328] default_arg_last[2065342] 1))
                          CForLoop[2065382]
                          {
                            const-val yret[2065411]:int(64)[13] "dead after last mention" "YVV" "temp"
                            (2065413 'move' yret[2065411] i[2065319])
                            const-val _yieldedIndex[2065416]:int(64)[13] "temp"
                            (2065418 'move' _yieldedIndex[2065416] i[2065319])
                            {
                              const-val i[2065422]:int(64)[13] "const" "index var" "insert auto destroy"
                              (2065424 'move' i[2065422] _yieldedIndex[2065416])
                              const-val yret[2065427]:int(64)[13] "dead after last mention" "YVV" "temp"
                              (2065429 'move' yret[2065427] _yieldedIndex[2065416])
                              const-val _yieldedIndex[2065432]:int(64)[13] "temp"
                              (2065434 'move' _yieldedIndex[2065432] _yieldedIndex[2065416])
                              {
                                const-val i[2065438]:int(64)[13] "const" "index var" "insert auto destroy"
                                (2065440 'move' i[2065438] _yieldedIndex[2065432])
                                const-val yret[2065443]:int(64)[13] "dead after last mention" "YVV" "temp"
                                (2065445 'move' yret[2065443] _yieldedIndex[2065432])
                                const-val _yieldedIndex[2065481]:int(64)[13] "temp"
                                (2065631 'move' _yieldedIndex[2065481] _yieldedIndex[2065432])
                                {
                                  const-val j[2065483]:int(64)[13] "const" "index var" "insert auto destroy"
                                  (2065485 'move' j[2065483] _yieldedIndex[2065481])
                                  {
                                    const-val call_tmp[2065489]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                    (2065491 'move' call_tmp[2065489](2065494 call +[439752] i[1995506] j[2065483]))
                                    const-val call_tmp[2065497]:int(64)[13] "dead at end of block" "maybe param" "temp"
                                    (2065499 'move' call_tmp[2065497](2065502 call orderToIndex[1104229] view[1106430] call_tmp[2065489]))
                                    const-val idx[2065505]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                    (2065507 'move' idx[2065505] call_tmp[2065497])
                                    ref call_tmp[2065510]:_ref(uint(8))[937097] "dead after last mention" "maybe param" "temp"
                                    ref _this_tmp_[2065512]:_ref(c_ptr(uint(8)))[937621] "dead after last mention" "temp"
                                    (2065514 'move' _this_tmp_[2065512](2065517 call buff[758153] this[1882394]))
                                    val coerce_tmp[2065519]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (2065521 'move' coerce_tmp[2065519](2065523 'deref' _this_tmp_[2065512]))
                                    (2065525 'move' call_tmp[2065510](2065528 call this[954280] coerce_tmp[2065519] idx[2065505]))
                                    ref call_tmp[2065531]:_ref(uint(8))[937097] "dead after last mention" "maybe param" "temp"
                                    ref _this_tmp_[2065533]:_ref(c_ptr(uint(8)))[937621] "dead after last mention" "reference to a const" "temp"
                                    (2065535 'move' _this_tmp_[2065533](2065538 call buff[758153] localNeedle[1107055]))
                                    val coerce_tmp[2065540]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (2065542 'move' coerce_tmp[2065540](2065544 'deref' _this_tmp_[2065533]))
                                    (2065546 'move' call_tmp[2065531](2065549 call this[954280] coerce_tmp[2065540] j[2065483]))
                                    const-val call_tmp[2065552]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    const-val coerce_tmp[2065554]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (2065556 'move' coerce_tmp[2065554](2065558 'deref' call_tmp[2065510]))
                                    const-val coerce_tmp[2065560]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (2065562 'move' coerce_tmp[2065560](2065564 'deref' call_tmp[2065531]))
                                    (2065566 'move' call_tmp[2065552](2065569 call !=[436150] coerce_tmp[2065554] coerce_tmp[2065560]))
                                    const-val call_tmp[2065572]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (2065574 'move' call_tmp[2065572] call_tmp[2065552])
                                    if call_tmp[2065572]
                                    {
                                      (2065622 call _freeIterator[1103663] _iterator[2065293])
                                      (2065625 call chpl__autoDestroy[1674803] tmp[2065096])
                                      (2065628 call _freeIterator[1103913] _iterator[2065037])
                                      break _breakLabel[1995674] _breakLabel[1995674]
                                    }
                                    const-val call_tmp[2065582]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (2065584 'move' call_tmp[2065582](2065587 call -[962415] nLen[1106399]))
                                    const-val call_tmp[2065589]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (2065591 'move' call_tmp[2065589](2065594 call ==[435744] j[2065483] call_tmp[2065582]))
                                    const-val call_tmp[2065597]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (2065599 'move' call_tmp[2065597] call_tmp[2065589])
                                    if call_tmp[2065597]
                                    {
                                      {
                                        const-val call_tmp[2065605]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                                        (2065607 'move' call_tmp[2065605](2065610 call orderToIndex[1104229] view[1106430] i[1995506]))
                                        (2065614 call =[435443] localRet[1106384] call_tmp[2065605])
                                      }
                                    }
                                  }
                                  label _continueLabel[2065618]
                                }
                              }
                            }
                            {
                              const-val low[2065384]:int(64)[13] "temp"
                              (2065386 'move' low[2065384](2065388 '.v' _iterator[2065293] F0_low[2115192]))
                              (2065391 '=' i[2065319] low[2065384])
                            }
                            {
                              const-val high[2065395]:int(64)[13] "temp"
                              (2065397 'move' high[2065395](2065399 '.v' _iterator[2065293] F1_high[2115196]))
                              (2065402 '<=' i[2065319] high[2065395])
                            }
                            {
                              val call_tmp[2065406]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                              (2065408 '+=' i[2065319] 1)
                            }
                          }
                          label _endchpl_direct_param_stride_range_iter[2065464]
                        }
                        (2065467 call _freeIterator[1103663] _iterator[2065293])
                        (2065470 call chpl__autoDestroy[1674803] tmp[2065096])
                        label _endchpl_direct_counted_range_iter_helper[2065472]
                      }
                      (2065475 call _freeIterator[1103913] _iterator[2065037])
                      label _endchpl_direct_counted_range_iter[2065477]
                    }
                    label _breakLabel[1995674]
                    (1995677 call _freeIterator[1104163] _iterator[1995515])
                  }
                  const-val tmp[1995679]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  const-val tmp[1995681]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  const-val call_tmp[1995683]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1995685 'move' call_tmp[1995683](1995688 call !=[436128] localRet[1106384] -1))
                  (1995691 'move' tmp[1995681] call_tmp[1995683])
                  (1995694 'move' tmp[1995679] tmp[1995681])
                  const-val call_tmp[1995697]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1995699 'move' call_tmp[1995697] tmp[1995679])
                  if call_tmp[1995697]
                  {
                    break _breakLabel[1107454] _breakLabel[1107454]
                  }
                }
                label _continueLabel[1995707]
              }
              {
                (1995467 '=' i[1995420] coerce_tmp[1995436])
              }
              {
                (1995471 '<=' i[1995420] end[1995453])
              }
              {
                val call_tmp[1995475]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (1995477 '+=' i[1995420] 1)
              }
            }
            label _endthese[1995500]
          }
          label _breakLabel[1107454]
          (1921713 call _freeIterator[1102195] _iterator[1107165])
        }
        (1921716 call chpl__autoDestroy[1407763] searchSpace[1107084])
        (1921719 call chpl__autoDestroy[1680875] call_tmp[1107099])
        (1921722 call chpl__autoDestroy[1601673] localNeedle[1107055])
      }
      (1107474 call =[435443] ret[1882398] localRet[1106384])
      (1921726 call chpl__autoDestroy[1407763] view[1106430])
      (1921729 call chpl__autoDestroy[1680830] tmp[1106413])
    }
    (2196228 call chpl__autoDestroy[1601860] needle[1882392])
    (2196231 call chpl__autoDestroy[1601673] needle[2196210])
    (1107480 return _void[55])
  }
  function on_fn[1183067](const in arg needle[1882432]:__serializeHelper[28089], const  ref arg this[1882434]:_ref(string)[938128], const in arg region[1882436]:range(byteIndex,boundedLow,false)[1143592], ref arg ret[1882438]:_ref(int(64))[936761]) : void[4] "on" "resolved"
  {
    val needle[2196466]:string[26] "temp"
    ref needle[2196467]:string[26] "temp"
    ref tmp[2196473]:string[26] "temp"
    (2196477 'move' tmp[2196473](2196475 'set reference' needle[2196466]))
    (2196470 call chpl__deserialize[1867128] needle[1882432] tmp[2196473])
    (2196482 'move' needle[2196467](2196480 'set reference' needle[2196466]))
    {
      val localRet[1183080]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1183082 'move' localRet[1183080] -2)
      ref call_tmp[1183087]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1183089 'move' call_tmp[1183087](1183092 call buffLen[758075] needle[2196467]))
      const-val nLen[1183095]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[1184248]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1184252 'move' coerce_tmp[1184248](1184250 'deref' call_tmp[1183087]))
      (1924368 '=' nLen[1183095] coerce_tmp[1184248])
      (1183097 'noop')
      const-val call_tmp[1183101]:(range(int(64),bounded,false),int(64))[1085113] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1910418]:(range(int(64),bounded,false),int(64))[1085113] "temp"
      (1183106 call getView[1144630] this[1882434] region[1882436] ret_tmp[1910418])
      (1910421 'move' call_tmp[1183101] ret_tmp[1910418])
      const-val tmp[1183109]:(range(int(64),bounded,false),int(64))[1085113] "dead at end of block" "const" "insert auto destroy" "temp"
      (1183111 'move' tmp[1183109] call_tmp[1183101])
      1
      ref call_tmp[1183119]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1183121 'move' call_tmp[1183119](1184263 '.' tmp[1183109] x0[1085109]))
      const-val view[1183126]:range(int(64),bounded,false)[1027003] "dead at end of block" "const" "insert auto destroy"
      (1183128 'move' view[1183126](1184266 'deref' call_tmp[1183119]))
      const-val call_tmp[1183132]:int(64)[13] "dead at end of block" "maybe param" "temp"
      (1183134 'move' call_tmp[1183132](1183137 call size[1035978] view[1183126]))
      const-val thisLen[1183140]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      (1183142 'move' thisLen[1183140] call_tmp[1183132])
      {
        const-val call_tmp[1183585]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1183587 'move' call_tmp[1183585](1183590 call ==[435744] nLen[1183095] 0))
        const-val call_tmp[1183593]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1183595 'move' call_tmp[1183593] call_tmp[1183585])
        if call_tmp[1183593]
        {
          {
            (1183619 call =[435443] localRet[1183080] -1)
          }
        }
      }
      const-val call_tmp[1183674]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1183676 'move' call_tmp[1183674](1183679 call >[437788] nLen[1183095] thisLen[1183140]))
      const-val call_tmp[1183682]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1183684 'move' call_tmp[1183682] call_tmp[1183674])
      if call_tmp[1183682]
      {
        (1183699 call =[435443] localRet[1183080] -1)
      }
      const-val call_tmp[1183712]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1183714 'move' call_tmp[1183712](1183717 call ==[435744] localRet[1183080] -2))
      const-val call_tmp[1183720]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1183722 'move' call_tmp[1183720] call_tmp[1183712])
      if call_tmp[1183720]
      {
        (1183737 call =[435443] localRet[1183080] -1)
        const-val call_tmp[1183742]:string[26] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[1905338]:string[26] "temp"
        (1183750 call localize[32889] needle[2196467] ret_tmp[1905338])
        (1905341 'move' call_tmp[1183742] ret_tmp[1905338])
        const localNeedle[1183751]:string[26] "dead at end of block" "const" "insert auto destroy"
        (1183753 'move' localNeedle[1183751] call_tmp[1183742])
        const-val call_tmp[1183758]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (1183760 'move' call_tmp[1183758](1183763 call -[440532] thisLen[1183140] nLen[1183095]))
        const-val call_tmp[1183766]:int(64)[13] "dead at end of block" "maybe param" "temp"
        (1183768 'move' call_tmp[1183766](1183771 call +[949855] call_tmp[1183758]))
        const-val numPossible[1183774]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        (1183776 'move' numPossible[1183774] call_tmp[1183766])
        const-val searchSpace[1183780]:range(int(64),bounded,false)[1027003] "dead at end of block" "const" "insert auto destroy"
        const-val tmp[1183782]:range(int(64),bounded,false)[1027003] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        const-val tmp[1183793]:range(int(64),bounded,false)[1027003] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1183795]:range(int(64),boundedLow,false)[1087754] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1909504]:range(int(64),boundedLow,false)[1087754] "temp"
        (1183800 call chpl_build_low_bounded_range[1087147] 0 ret_tmp[1909504])
        (1909507 'move' call_tmp[1183795] ret_tmp[1909504])
        const-val ret_tmp[1909612]:range(int(64),bounded,false)[1027003] "temp"
        (1183805 call #[1088114] call_tmp[1183795] numPossible[1183774] ret_tmp[1909612])
        (1909615 'move' tmp[1183793] ret_tmp[1909612])
        (1183808 'move' tmp[1183782] tmp[1183793])
        (1183850 'move' searchSpace[1183780] tmp[1183782])
        {
          val _indexOfInterest[1183859]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1183861]:_ic_these_range_int64_t_bounded_F[1096892] "dead at end of block" "expr temp" "temp"
          (1183863 'move' _iterator[1183861](1183866 call _getIterator[1095509] searchSpace[1183780]))
          {
            val ret[1998968]:_ir_these_range_int64_t_bounded_F[1096898] "dead after last mention" "RVV" "temp"
            const-val _return_tmp_[1998970]:bool[10] "dead after last mention" "temp"
            const-val this[1999271]:range(int(64),bounded,false)[1027003] "temp"
            (1999276 'move' this[1999271](1999273 '.v' _iterator[1183861] F0_this[2113071]))
            (1998972 'move' _return_tmp_[1998970](1998975 call checkIfIterWillOverflow[1096003] this[1999271] 1))
            val i[1998978]:int(64)[13] "dead at end of block" "insert auto destroy"
            val call_tmp[1998980]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (1998982 'move' i[1998978] 0)
            ref call_tmp[1998985]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[1999278]:range(int(64),bounded,false)[1027003] "temp"
            (1999283 'move' this[1999278](1999280 '.v' _iterator[1183861] F0_this[2113071]))
            (1998987 'move' call_tmp[1998985](1998990 call _low[1028641] this[1999278]))
            const-val start[1998992]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1998994]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1998996 'move' coerce_tmp[1998994](1998998 'deref' call_tmp[1998985]))
            (1999000 '=' start[1998992] coerce_tmp[1998994])
            (1999003 'noop')
            ref call_tmp[1999004]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[1999285]:range(int(64),bounded,false)[1027003] "temp"
            (1999290 'move' this[1999285](1999287 '.v' _iterator[1183861] F0_this[2113071]))
            (1999006 'move' call_tmp[1999004](1999009 call _high[1028849] this[1999285]))
            const end[1999011]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1999013]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1999015 'move' coerce_tmp[1999013](1999017 'deref' call_tmp[1999004]))
            (1999019 '=' end[1999011] coerce_tmp[1999013])
            (1999022 'noop')
            CForLoop[1999023] hazard
            {
              const-val yret[1999038]:int(64)[13] "dead after last mention" "YVV" "temp"
              const-val call_tmp[1999040]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val this[1999292]:range(int(64),bounded,false)[1027003] "temp"
              (1999297 'move' this[1999292](1999294 '.v' _iterator[1183861] F0_this[2113071]))
              (1999042 'move' call_tmp[1999040](1999045 call chpl_intToIdx[1028669] this[1999292] i[1998978]))
              (1999048 'move' yret[1999038] call_tmp[1999040])
              const-val _yieldedIndex[1999062]:int(64)[13] "temp"
              (1999269 'move' _yieldedIndex[1999062] call_tmp[1999040])
              {
                const-val i[1999064]:int(64)[13] "const" "index var" "insert auto destroy"
                (1999066 'move' i[1999064] _yieldedIndex[1999062])
                {
                  {
                    val _indexOfInterest[1999071]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    val _iterator[1999073]:_ic_chpl_direct_counted_range_iter[1103979] "dead at end of block" "expr temp" "temp"
                    const-val call_tmp[1999075]:_ir_chpl_direct_counted_range_iter[1103985] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val ret_tmp[1999077]:_ir_chpl_direct_counted_range_iter[1103985] "temp"
                    (1999080 call chpl_direct_counted_range_iter[458112] 0 nLen[1183095] ret_tmp[1999077])
                    (1999084 'move' call_tmp[1999075] ret_tmp[1999077])
                    (1999087 'move' _iterator[1999073](1999090 call _getIterator[1103994] call_tmp[1999075]))
                    {
                      val ret[2067524]:_ir_chpl_direct_counted_range_iter[1103985] "dead after last mention" "RVV" "temp"
                      val _indexOfInterest[2067526]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      val _iterator[2067528]:_ic_chpl_direct_counted_range_iter_helper[1103729] "dead at end of block" "expr temp" "temp"
                      const-val call_tmp[2067530]:_ir_chpl_direct_counted_range_iter_helper[1103735] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val ret_tmp[2067532]:_ir_chpl_direct_counted_range_iter_helper[1103735] "temp"
                      const-val low[2068124]:int(64)[13] "temp"
                      (2068129 'move' low[2068124](2068126 '.v' _iterator[1999073] F0_low[2107536]))
                      const-val count[2068131]:int(64)[13] "temp"
                      (2068136 'move' count[2068131](2068133 '.v' _iterator[1999073] F1_count[2107540]))
                      (2067535 call chpl_direct_counted_range_iter_helper[1102287] low[2068124] count[2068131] ret_tmp[2067532])
                      (2067539 'move' call_tmp[2067530] ret_tmp[2067532])
                      (2067542 'move' _iterator[2067528](2067545 call _getIterator[1103744] call_tmp[2067530]))
                      {
                        val ret[2067548]:_ir_chpl_direct_counted_range_iter_helper[1103735] "dead after last mention" "RVV" "temp"
                        val call_tmp[2067550]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                        const-val tmp[2067552]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        const-val tmp[2067554]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                        const-val call_tmp[2067556]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val count[2067558]:int(64)[13] "temp"
                        (2067560 'move' count[2067558](2067562 '.v' _iterator[2067528] F1_count[2113698]))
                        (2067565 'move' call_tmp[2067556](2067568 call <[948587] count[2067558]))
                        (2067570 'move' tmp[2067554] call_tmp[2067556])
                        (2067573 'move' tmp[2067552] call_tmp[2067556])
                        const-val call_tmp[2067576]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (2067578 'move' call_tmp[2067576] call_tmp[2067556])
                        if call_tmp[2067556]
                        {
                          (2067584 call boundsCheckHalt[210254] "With a negative count, the range must have a last index.")
                        }
                        const-val tmp[2067587]:2*int(64)[1040245] "dead at end of block" "const" "insert auto destroy" "temp"
                        val tmp[2067589]:2*int(64)[1040245] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                        const-val tmp[2067591]:bool[10] "dead after last mention" "maybe param" "temp"
                        const-val call_tmp[2067593]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val count[2067595]:int(64)[13] "temp"
                        (2067597 'move' count[2067595](2067599 '.v' _iterator[2067528] F1_count[2113698]))
                        (2067602 'move' call_tmp[2067593](2067605 call ==[435744] count[2067595] 0))
                        (2067608 'move' tmp[2067591] call_tmp[2067593])
                        if call_tmp[2067593]
                        {
                          const-val tmp[2067613]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                          val call_tmp[2067615]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                          const-val call_tmp[2067617]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val low[2067619]:int(64)[13] "temp"
                          (2067621 'move' low[2067619](2067623 '.v' _iterator[2067528] F0_low[2113694]))
                          (2067626 'move' call_tmp[2067617](2067629 call _cast[956223] low[2067619]))
                          const-val call_tmp[2067631]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val coerce_tmp[2067633]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                          (2067635 'move' coerce_tmp[2067633](2067637 'cast' uint(64)[115] 1))
                          (2067640 'move' call_tmp[2067631](2067643 call -[962382] call_tmp[2067617]))
                          const-val call_tmp[2067645]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          (2067647 'move' call_tmp[2067645](2067650 call _cast[953732] call_tmp[2067631]))
                          const-val ret_tmp[2067652]:2*int(64)[1040245] "temp"
                          const-val low[2067654]:int(64)[13] "temp"
                          (2067656 'move' low[2067654](2067658 '.v' _iterator[2067528] F0_low[2113694]))
                          (2067662 call _build_tuple[1040203] low[2067654] call_tmp[2067645] ret_tmp[2067652])
                          (2067666 'move' tmp[2067613] ret_tmp[2067652])
                          (2067669 'move' tmp[2067589] tmp[2067613])
                        }
                        {
                          const-val tmp[2067673]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                          val call_tmp[2067675]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val call_tmp[2067677]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val count[2067679]:int(64)[13] "temp"
                          (2067681 'move' count[2067679](2067683 '.v' _iterator[2067528] F1_count[2113698]))
                          (2067686 'move' call_tmp[2067677] count[2067679])
                          const-val call_tmp[2067689]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val count[2067691]:int(64)[13] "temp"
                          (2067693 'move' count[2067691](2067695 '.v' _iterator[2067528] F1_count[2113698]))
                          (2067698 'move' call_tmp[2067689](2067701 call -[962415] count[2067691]))
                          const-val call_tmp[2067703]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val low[2067705]:int(64)[13] "temp"
                          (2067707 'move' low[2067705](2067709 '.v' _iterator[2067528] F0_low[2113694]))
                          (2067712 'move' call_tmp[2067703](2067715 call +[439752] low[2067705] call_tmp[2067689]))
                          const-val ret_tmp[2067718]:2*int(64)[1040245] "temp"
                          const-val low[2067720]:int(64)[13] "temp"
                          (2067722 'move' low[2067720](2067724 '.v' _iterator[2067528] F0_low[2113694]))
                          (2067728 call _build_tuple[1040203] low[2067720] call_tmp[2067703] ret_tmp[2067718])
                          (2067732 'move' tmp[2067673] ret_tmp[2067718])
                          (2067735 'move' tmp[2067589] tmp[2067673])
                        }
                        (2067739 '=' tmp[2067587] tmp[2067589])
                        (2067742 'noop')
                        1
                        ref call_tmp[2067744]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
                        (2067746 'move' call_tmp[2067744](2067748 '.' tmp[2067587] x0[1040241]))
                        const-val start[2067751]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                        const-val coerce_tmp[2067753]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                        (2067755 'move' coerce_tmp[2067753](2067757 'deref' call_tmp[2067744]))
                        (2067759 '=' start[2067751] coerce_tmp[2067753])
                        (2067762 'noop')
                        ref call_tmp[2067763]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
                        (2067765 'move' call_tmp[2067763](2067767 '.' tmp[2067587] x1[1040243]))
                        const-val end[2067770]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                        const-val coerce_tmp[2067772]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                        (2067774 'move' coerce_tmp[2067772](2067776 'deref' call_tmp[2067763]))
                        (2067778 '=' end[2067770] coerce_tmp[2067772])
                        (2067781 'noop')
                        val _indexOfInterest[2067782]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                        val _iterator[2067784]:_ic_chpl_direct_param_stride_range_iter[1103475] "dead at end of block" "expr temp" "temp"
                        const-val call_tmp[2067786]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead at end of block" "expr temp" "maybe param" "temp"
                        const-val ret_tmp[2067788]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
                        (2067791 call chpl_direct_param_stride_range_iter[1102713] coerce_tmp[2067753] coerce_tmp[2067772] ret_tmp[2067788])
                        (2067795 'move' call_tmp[2067786] ret_tmp[2067788])
                        (2067798 'move' _iterator[2067784](2067801 call _getIterator[1103490] call_tmp[2067786]))
                        {
                          val ret[2067804]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead after last mention" "RVV" "temp"
                          val call_tmp[2067806]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (2067809 call chpl_range_check_stride[1103033])
                          val i[2067810]:int(64)[13] "dead at end of block" "insert auto destroy"
                          val call_tmp[2067812]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (2067814 'move' i[2067810] 0)
                          val call_tmp[2067817]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val default_arg_first[2067819]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                          const-val low[2067821]:int(64)[13] "temp"
                          (2067823 'move' low[2067821](2067825 '.v' _iterator[2067784] F0_low[2115192]))
                          (2067828 'move' default_arg_first[2067819](2067831 call chpl_checkIfRangeIterWillOverflow_default_first[1103387] low[2067821]))
                          const-val default_arg_last[2067833]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                          const-val high[2067835]:int(64)[13] "temp"
                          (2067837 'move' high[2067835](2067839 '.v' _iterator[2067784] F1_high[2115196]))
                          (2067842 'move' default_arg_last[2067833](2067845 call chpl_checkIfRangeIterWillOverflow_default_last[1103415] high[2067835]))
                          const-val _return_tmp_[2067847]:bool[10] "dead after last mention" "temp"
                          const-val low[2067849]:int(64)[13] "temp"
                          (2067851 'move' low[2067849](2067853 '.v' _iterator[2067784] F0_low[2115192]))
                          const-val high[2067856]:int(64)[13] "temp"
                          (2067858 'move' high[2067856](2067860 '.v' _iterator[2067784] F1_high[2115196]))
                          (2067863 'move' _return_tmp_[2067847](2067866 call chpl_checkIfRangeIterWillOverflow[1096265] low[2067849] high[2067856] 1 default_arg_first[2067819] default_arg_last[2067833] 1))
                          CForLoop[2067873]
                          {
                            const-val yret[2067902]:int(64)[13] "dead after last mention" "YVV" "temp"
                            (2067904 'move' yret[2067902] i[2067810])
                            const-val _yieldedIndex[2067907]:int(64)[13] "temp"
                            (2067909 'move' _yieldedIndex[2067907] i[2067810])
                            {
                              const-val i[2067913]:int(64)[13] "const" "index var" "insert auto destroy"
                              (2067915 'move' i[2067913] _yieldedIndex[2067907])
                              const-val yret[2067918]:int(64)[13] "dead after last mention" "YVV" "temp"
                              (2067920 'move' yret[2067918] _yieldedIndex[2067907])
                              const-val _yieldedIndex[2067923]:int(64)[13] "temp"
                              (2067925 'move' _yieldedIndex[2067923] _yieldedIndex[2067907])
                              {
                                const-val i[2067929]:int(64)[13] "const" "index var" "insert auto destroy"
                                (2067931 'move' i[2067929] _yieldedIndex[2067923])
                                const-val yret[2067934]:int(64)[13] "dead after last mention" "YVV" "temp"
                                (2067936 'move' yret[2067934] _yieldedIndex[2067923])
                                const-val _yieldedIndex[2067972]:int(64)[13] "temp"
                                (2068122 'move' _yieldedIndex[2067972] _yieldedIndex[2067923])
                                {
                                  const-val j[2067974]:int(64)[13] "const" "index var" "insert auto destroy"
                                  (2067976 'move' j[2067974] _yieldedIndex[2067972])
                                  {
                                    const-val call_tmp[2067980]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                    (2067982 'move' call_tmp[2067980](2067985 call +[439752] i[1999064] j[2067974]))
                                    const-val call_tmp[2067988]:int(64)[13] "dead at end of block" "maybe param" "temp"
                                    (2067990 'move' call_tmp[2067988](2067993 call orderToIndex[1104229] view[1183126] call_tmp[2067980]))
                                    const-val idx[2067996]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                    (2067998 'move' idx[2067996] call_tmp[2067988])
                                    ref call_tmp[2068001]:_ref(uint(8))[937097] "dead after last mention" "maybe param" "temp"
                                    ref _this_tmp_[2068003]:_ref(c_ptr(uint(8)))[937621] "dead after last mention" "temp"
                                    (2068005 'move' _this_tmp_[2068003](2068008 call buff[758153] this[1882434]))
                                    val coerce_tmp[2068010]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (2068012 'move' coerce_tmp[2068010](2068014 'deref' _this_tmp_[2068003]))
                                    (2068016 'move' call_tmp[2068001](2068019 call this[954280] coerce_tmp[2068010] idx[2067996]))
                                    ref call_tmp[2068022]:_ref(uint(8))[937097] "dead after last mention" "maybe param" "temp"
                                    ref _this_tmp_[2068024]:_ref(c_ptr(uint(8)))[937621] "dead after last mention" "reference to a const" "temp"
                                    (2068026 'move' _this_tmp_[2068024](2068029 call buff[758153] localNeedle[1183751]))
                                    val coerce_tmp[2068031]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (2068033 'move' coerce_tmp[2068031](2068035 'deref' _this_tmp_[2068024]))
                                    (2068037 'move' call_tmp[2068022](2068040 call this[954280] coerce_tmp[2068031] j[2067974]))
                                    const-val call_tmp[2068043]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    const-val coerce_tmp[2068045]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (2068047 'move' coerce_tmp[2068045](2068049 'deref' call_tmp[2068001]))
                                    const-val coerce_tmp[2068051]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (2068053 'move' coerce_tmp[2068051](2068055 'deref' call_tmp[2068022]))
                                    (2068057 'move' call_tmp[2068043](2068060 call !=[436150] coerce_tmp[2068045] coerce_tmp[2068051]))
                                    const-val call_tmp[2068063]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (2068065 'move' call_tmp[2068063] call_tmp[2068043])
                                    if call_tmp[2068063]
                                    {
                                      (2068113 call _freeIterator[1103663] _iterator[2067784])
                                      (2068116 call chpl__autoDestroy[1674803] tmp[2067587])
                                      (2068119 call _freeIterator[1103913] _iterator[2067528])
                                      break _breakLabel[1999232] _breakLabel[1999232]
                                    }
                                    const-val call_tmp[2068073]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (2068075 'move' call_tmp[2068073](2068078 call -[962415] nLen[1183095]))
                                    const-val call_tmp[2068080]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (2068082 'move' call_tmp[2068080](2068085 call ==[435744] j[2067974] call_tmp[2068073]))
                                    const-val call_tmp[2068088]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (2068090 'move' call_tmp[2068088] call_tmp[2068080])
                                    if call_tmp[2068088]
                                    {
                                      {
                                        const-val call_tmp[2068096]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                                        (2068098 'move' call_tmp[2068096](2068101 call orderToIndex[1104229] view[1183126] i[1999064]))
                                        (2068105 call =[435443] localRet[1183080] call_tmp[2068096])
                                      }
                                    }
                                  }
                                  label _continueLabel[2068109]
                                }
                              }
                            }
                            {
                              const-val low[2067875]:int(64)[13] "temp"
                              (2067877 'move' low[2067875](2067879 '.v' _iterator[2067784] F0_low[2115192]))
                              (2067882 '=' i[2067810] low[2067875])
                            }
                            {
                              const-val high[2067886]:int(64)[13] "temp"
                              (2067888 'move' high[2067886](2067890 '.v' _iterator[2067784] F1_high[2115196]))
                              (2067893 '<=' i[2067810] high[2067886])
                            }
                            {
                              val call_tmp[2067897]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                              (2067899 '+=' i[2067810] 1)
                            }
                          }
                          label _endchpl_direct_param_stride_range_iter[2067955]
                        }
                        (2067958 call _freeIterator[1103663] _iterator[2067784])
                        (2067961 call chpl__autoDestroy[1674803] tmp[2067587])
                        label _endchpl_direct_counted_range_iter_helper[2067963]
                      }
                      (2067966 call _freeIterator[1103913] _iterator[2067528])
                      label _endchpl_direct_counted_range_iter[2067968]
                    }
                    label _breakLabel[1999232]
                    (1999235 call _freeIterator[1104163] _iterator[1999073])
                  }
                  const-val tmp[1999237]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  const-val tmp[1999239]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  const-val call_tmp[1999241]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1999243 'move' call_tmp[1999241](1999246 call !=[436128] localRet[1183080] -1))
                  (1999249 'move' tmp[1999239] call_tmp[1999241])
                  (1999252 'move' tmp[1999237] tmp[1999239])
                  const-val call_tmp[1999255]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1999257 'move' call_tmp[1999255] tmp[1999237])
                  if call_tmp[1999255]
                  {
                    break _breakLabel[1184150] _breakLabel[1184150]
                  }
                }
                label _continueLabel[1999265]
              }
              {
                (1999025 '=' i[1998978] coerce_tmp[1998994])
              }
              {
                (1999029 '<=' i[1998978] end[1999011])
              }
              {
                val call_tmp[1999033]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (1999035 '+=' i[1998978] 1)
              }
            }
            label _endthese[1999058]
          }
          label _breakLabel[1184150]
          (1924379 call _freeIterator[1102195] _iterator[1183861])
        }
        (1924382 call chpl__autoDestroy[1407763] searchSpace[1183780])
        (1924385 call chpl__autoDestroy[1680875] call_tmp[1183795])
        (1924388 call chpl__autoDestroy[1601673] localNeedle[1183751])
      }
      (1184170 call =[435443] ret[1882438] localRet[1183080])
      (1924392 call chpl__autoDestroy[1407763] view[1183126])
      (1924395 call chpl__autoDestroy[1680830] tmp[1183109])
    }
    (2196484 call chpl__autoDestroy[1601860] needle[1882432])
    (2196487 call chpl__autoDestroy[1601673] needle[2196466])
    (1184176 return _void[55])
  }
  function wrapon_fn[2197830](const in arg dummy_locale_arg[2197832]:chpl_localeID_t[209352], in arg buf[2197834]:c_void_ptr[149], in arg buf_size[2197836]:int(64)[13], in arg c[2197838]:_class_localson_fn[2197790]) : void[4] "on block"
  {
    val _0_tmp[2197843]:chpl_localeID_t[209352] "temp"
    (2197848 'move' _0_tmp[2197843](2197845 '.v' c[2197838] _0_tmp[2197793]))
    ref _1_this[2197850]:string[26] "temp"
    (2197855 'move' _1_this[2197850](2197852 '.v' c[2197838] _1_this[2197795]))
    (2197841 call on_fn[933975] _1_this[2197850])
    (2197858 return _void[55])
  }
  function wrapon_fn[2197934](const in arg dummy_locale_arg[2197936]:chpl_localeID_t[209352], in arg buf[2197938]:c_void_ptr[149], in arg buf_size[2197940]:int(64)[13], in arg c[2197942]:_class_localson_fn[2197882]) : void[4] "on block"
  {
    val _0_tmp[2197947]:chpl_localeID_t[209352] "temp"
    (2197952 'move' _0_tmp[2197947](2197949 '.v' c[2197942] _0_tmp[2197885]))
    ref _1_this[2197954]:string[26] "temp"
    (2197959 'move' _1_this[2197954](2197956 '.v' c[2197942] _1_this[2197887]))
    ref _2_result[2197962]:bool[10] "temp"
    (2197967 'move' _2_result[2197962](2197964 '.v' c[2197942] _2_result[2197889]))
    (2197945 call on_fn[934011] _1_this[2197954] _2_result[2197962])
    (2197970 return _void[55])
  }
  function wrapon_fn[2203415](const in arg dummy_locale_arg[2203417]:chpl_localeID_t[209352], in arg buf[2203419]:c_void_ptr[149], in arg buf_size[2203421]:int(64)[13], in arg c[2203423]:_class_localson_fn[2203351]) : void[4] "on block"
  {
    val _0_tmp[2203428]:chpl_localeID_t[209352] "temp"
    (2203433 'move' _0_tmp[2203428](2203430 '.v' c[2203423] _0_tmp[2203354]))
    val _1_needle_data[2203435]:__serializeHelper[28089] "temp"
    (2203440 'move' _1_needle_data[2203435](2203437 '.v' c[2203423] _1_needle_data[2203356]))
    ref _2_this[2203443]:string[26] "temp"
    (2203448 'move' _2_this[2203443](2203445 '.v' c[2203423] _2_this[2203358]))
    val _3_region[2203451]:range(byteIndex,bounded,false)[1025981] "temp"
    (2203456 'move' _3_region[2203451](2203453 '.v' c[2203423] _3_region[2203360]))
    ref _4_ret[2203459]:int(64)[13] "temp"
    (2203464 'move' _4_ret[2203459](2203461 '.v' c[2203423] _4_ret[2203362]))
    (2203426 call on_fn[1106371] _1_needle_data[2203435] _2_this[2203443] _3_region[2203451] _4_ret[2203459])
    (2203467 return _void[55])
  }
  function wrapon_fn[2203983](const in arg dummy_locale_arg[2203985]:chpl_localeID_t[209352], in arg buf[2203987]:c_void_ptr[149], in arg buf_size[2203989]:int(64)[13], in arg c[2203991]:_class_localson_fn[2203919]) : void[4] "on block"
  {
    val _0_tmp[2203996]:chpl_localeID_t[209352] "temp"
    (2204001 'move' _0_tmp[2203996](2203998 '.v' c[2203991] _0_tmp[2203922]))
    val _1_needle_data[2204003]:__serializeHelper[28089] "temp"
    (2204008 'move' _1_needle_data[2204003](2204005 '.v' c[2203991] _1_needle_data[2203924]))
    ref _2_this[2204011]:string[26] "temp"
    (2204016 'move' _2_this[2204011](2204013 '.v' c[2203991] _2_this[2203926]))
    val _3_region[2204019]:range(byteIndex,boundedLow,false)[1143592] "temp"
    (2204024 'move' _3_region[2204019](2204021 '.v' c[2203991] _3_region[2203928]))
    ref _4_ret[2204027]:int(64)[13] "temp"
    (2204032 'move' _4_ret[2204027](2204029 '.v' c[2203991] _4_ret[2203930]))
    (2203994 call on_fn[1183067] _1_needle_data[2204003] _2_this[2204011] _3_region[2204019] _4_ret[2204027])
    (2204035 return _void[55])
  }
}