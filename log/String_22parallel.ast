AST dump for String after pass parallel.
Module use list: ChapelStandard SysCTypes ByteBufferHelpers BytesStringCommon SysBasic CString StringCasts NVStringFactory 

{
  type _class_localson_fn[2091569] val _runtime_hdr[2091570]:chpl_comm_on_bundle_t[209301] val _0_tmp[2091572]:chpl_localeID_t[209294] val _1_needle_data[2091574]:__serializeHelper[28086] ref _2_this[2091576]:string[26] val _3_region[2091578]:range(byteIndex,boundedLow,false)[1143403] ref _4_ret[2091580]:int(64)[13]
  type _class_localson_fn[2091001] val _runtime_hdr[2091002]:chpl_comm_on_bundle_t[209301] val _0_tmp[2091004]:chpl_localeID_t[209294] val _1_needle_data[2091006]:__serializeHelper[28086] ref _2_this[2091008]:string[26] val _3_region[2091010]:range(byteIndex,bounded,false)[1025792] ref _4_ret[2091012]:int(64)[13]
  type _class_localson_fn[2085547] val _runtime_hdr[2085548]:chpl_comm_on_bundle_t[209301] val _0_tmp[2085550]:chpl_localeID_t[209294] ref _1_this[2085552]:string[26] ref _2_result[2085554]:bool[10]
  type _class_localson_fn[2085455] val _runtime_hdr[2085456]:chpl_comm_on_bundle_t[209301] val _0_tmp[2085458]:chpl_localeID_t[209294] ref _1_this[2085460]:string[26]
  function chpl__init_String[415918]() : void[4] "insert line file info" "module init" "resolved"
  {
    {
    }
    (505044 return _void[55])
  }
  def module NVStringFactory[30564]  
  const-val CHPL_SHORT_STRING_SIZE[28013]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  function _ref(chpl__inPlaceBuffer)[967440].deinit[752961](const  ref arg this[752965]:_ref(chpl__inPlaceBuffer)[967440]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved"
  {
    (752973 return _void[55])
  }
  type chpl__inPlaceBuffer[28019]
  function chpl__getInPlaceBufferData[28030](const  ref arg data[28027]:_ref(chpl__inPlaceBuffer)[967440]) : c_ptr(uint(8))[937423] "extern" "local args" "no fn body" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[502921]:c_ptr(uint(8))[937423] "RVV" "temp"
    (502923 return ret[502921])
  }
  function chpl__getInPlaceBufferDataForWrite[28042](ref arg data[28039]:_ref(chpl__inPlaceBuffer)[967440]) : c_ptr(uint(8))[937423] "extern" "local args" "no fn body" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[502927]:c_ptr(uint(8))[937423] "RVV" "temp"
    (502929 return ret[502927])
  }
  function _ref(__serializeHelper)[938017].buffLen[753474](ref arg this[753478]:_ref(__serializeHelper)[938017]) ref : _ref(int(64))[936572] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[753488]:_ref(int(64))[936572] "dead after last mention" "RVV" "temp"
    ref call_tmp[753495]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
    (753498 'move' call_tmp[753495](753482 '.' this[753478] buffLen[28055]))
    (753493 'move' ret[753488] call_tmp[753495])
    (753490 return ret[753488])
  }
  function _ref(__serializeHelper)[938017].buff[753500](ref arg this[753504]:_ref(__serializeHelper)[938017]) ref : _ref(c_ptr(uint(8)))[937432] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[753514]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "RVV" "temp"
    ref call_tmp[753521]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "maybe param" "temp"
    (753524 'move' call_tmp[753521](753508 '.' this[753504] buff[28060]))
    (753519 'move' ret[753514] call_tmp[753521])
    (753516 return ret[753514])
  }
  function _ref(__serializeHelper)[938017].size[753526](ref arg this[753530]:_ref(__serializeHelper)[938017]) ref : _ref(int(64))[936572] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[753540]:_ref(int(64))[936572] "dead after last mention" "RVV" "temp"
    ref call_tmp[753547]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
    (753550 'move' call_tmp[753547](753534 '.' this[753530] size[28065]))
    (753545 'move' ret[753540] call_tmp[753547])
    (753542 return ret[753540])
  }
  function _ref(__serializeHelper)[938017].locale_id[753552](ref arg this[753556]:_ref(__serializeHelper)[938017]) ref : _ref(int(32))[936626] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[753566]:_ref(int(32))[936626] "dead after last mention" "RVV" "temp"
    ref call_tmp[753573]:_ref(int(32))[936626] "dead after last mention" "maybe param" "temp"
    (753576 'move' call_tmp[753573](753560 '.' this[753556] locale_id[28071]))
    (753571 'move' ret[753566] call_tmp[753573])
    (753568 return ret[753566])
  }
  function _ref(__serializeHelper)[938017].shortData[753578](ref arg this[753582]:_ref(__serializeHelper)[938017]) ref : _ref(chpl__inPlaceBuffer)[967440] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[753592]:_ref(chpl__inPlaceBuffer)[967440] "dead after last mention" "RVV" "temp"
    ref call_tmp[753599]:_ref(chpl__inPlaceBuffer)[967440] "dead after last mention" "maybe param" "temp"
    (753602 'move' call_tmp[753599](753586 '.' this[753582] shortData[28076]))
    (753597 'move' ret[753592] call_tmp[753599])
    (753594 return ret[753592])
  }
  function _ref(__serializeHelper)[938017].cachedNumCodepoints[753604](ref arg this[753608]:_ref(__serializeHelper)[938017]) ref : _ref(int(64))[936572] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[753618]:_ref(int(64))[936572] "dead after last mention" "RVV" "temp"
    ref call_tmp[753625]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
    (753628 'move' call_tmp[753625](753612 '.' this[753608] cachedNumCodepoints[28081]))
    (753623 'move' ret[753618] call_tmp[753625])
    (753620 return ret[753618])
  }
  function _ref(__serializeHelper)[938017].init[753630](ref arg this[753633]:_ref(__serializeHelper)[938017], in arg buffLen[753636]:int(64)[13], in arg buff[753649]:c_ptr(uint(8))[937423], in arg size[753662]:int(64)[13], in arg locale_id[753675]:int(32)[95], in arg shortData[753689]:chpl__inPlaceBuffer[28019], in arg cachedNumCodepoints[753702]:int(64)[13]) : void[4] "compiler generated" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    (753716 '.=' this[753633] buffLen[28055] buffLen[753636])
    (753719 '.=' this[753633] buff[28060] buff[753649])
    (753722 '.=' this[753633] size[28065] size[753662])
    (753725 '.=' this[753633] locale_id[28071] locale_id[753675])
    (753728 '.=' this[753633] shortData[28076] shortData[753689])
    (753731 '.=' this[753633] cachedNumCodepoints[28081] cachedNumCodepoints[753702])
    (753737 return _void[55])
  }
  function _ref(__serializeHelper)[938017].init=[753739](ref arg this[753743]:_ref(__serializeHelper)[938017], const  ref arg other[753744]:__serializeHelper[28086]) : void[4] "compiler generated" "copy initializer" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    ref call_tmp[753873]:_ref(int(64))[936572] "dead after last mention" "maybe param" "reference to a const" "temp"
    (753876 'move' call_tmp[753873](753752 call buffLen[753474] other[753744]))
    val tmp[753808]:int(64)[13] "dead after last mention" "temp"
    (753811 'move' tmp[753808](1461660 'deref' call_tmp[753873]))
    (753813 '.=' this[753743] buffLen[28055] tmp[753808])
    ref call_tmp[753880]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "maybe param" "reference to a const" "temp"
    (753883 'move' call_tmp[753880](753762 call buff[753500] other[753744]))
    val tmp[753817]:c_ptr(uint(8))[937423] "dead after last mention" "temp"
    val coerce_tmp[1461665]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1461669 'move' coerce_tmp[1461665](1461667 'deref' call_tmp[753880]))
    (1842607 '=' tmp[753817] coerce_tmp[1461665])
    (753820 'noop')
    (753822 '.=' this[753743] buff[28060] tmp[753817])
    ref call_tmp[753887]:_ref(int(64))[936572] "dead after last mention" "maybe param" "reference to a const" "temp"
    (753890 'move' call_tmp[753887](753772 call size[753526] other[753744]))
    val tmp[753826]:int(64)[13] "dead after last mention" "temp"
    (753829 'move' tmp[753826](1461674 'deref' call_tmp[753887]))
    (753831 '.=' this[753743] size[28065] tmp[753826])
    ref call_tmp[753894]:_ref(int(32))[936626] "dead after last mention" "maybe param" "reference to a const" "temp"
    (753897 'move' call_tmp[753894](753782 call locale_id[753552] other[753744]))
    val call_tmp[753899]:int(32)[95] "dead after last mention" "maybe param" "temp" "type variable"
    val tmp[753835]:int(32)[95] "dead after last mention" "temp"
    (753839 'move' tmp[753835](1461677 'deref' call_tmp[753894]))
    (753841 '.=' this[753743] locale_id[28071] tmp[753835])
    ref call_tmp[753906]:_ref(chpl__inPlaceBuffer)[967440] "dead after last mention" "maybe param" "reference to a const" "temp"
    (753909 'move' call_tmp[753906](753792 call shortData[753578] other[753744]))
    val tmp[753845]:chpl__inPlaceBuffer[28019] "dead after last mention" "temp"
    (753848 'move' tmp[753845](1461693 'deref' call_tmp[753906]))
    (753850 '.=' this[753743] shortData[28076] tmp[753845])
    ref call_tmp[753913]:_ref(int(64))[936572] "dead after last mention" "maybe param" "reference to a const" "temp"
    (753916 'move' call_tmp[753913](753802 call cachedNumCodepoints[753604] other[753744]))
    val tmp[753854]:int(64)[13] "dead after last mention" "temp"
    (753857 'move' tmp[753854](1461696 'deref' call_tmp[753913]))
    (753859 '.=' this[753743] cachedNumCodepoints[28081] tmp[753854])
    (753869 return _void[55])
  }
  function _ref(__serializeHelper)[938017].deinit[753918](const  ref arg this[753922]:_ref(__serializeHelper)[938017]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved"
  {
    label _enddeinit[1814625]
    ref _field_destructor_tmp_[1814623]:_ref(chpl__inPlaceBuffer)[967440] "temp"
    (1814630 'move' _field_destructor_tmp_[1814623](1814627 '.' this[753922] shortData[28076]))
    (1814632 call deinit[752961] _field_destructor_tmp_[1814623])
    (753930 return _void[55])
  }
  type __serializeHelper[28086] val buffLen[28055]:int(64)[13] val buff[28060]:c_ptr(uint(8))[937423] val size[28065]:int(64)[13] val locale_id[28071]:int(32)[95] val shortData[28076]:chpl__inPlaceBuffer[28019] val cachedNumCodepoints[28081]:int(64)[13]
  function _ref(byteIndex)[948759].init[28097](ref arg this[28172]:_ref(byteIndex)[948759]) : void[4] "method" "primary method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    val tmp[453690]:int(64)[13] "dead after last mention" "temp"
    (1029745 'move' tmp[453690] 0)
    (453695 '.=' this[28172] _bindex[28091] tmp[453690])
    (502931 return _void[55])
  }
  function _ref(byteIndex)[948759].init=[28124](ref arg this[28180]:_ref(byteIndex)[948759], const  ref arg other[28121]:byteIndex[28170]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    ref call_tmp[597366]:_ref(int(64))[936572] "dead after last mention" "maybe param" "reference to a const" "temp"
    (597369 'move' call_tmp[597366](28130 call _bindex[757742] other[28121]))
    val tmp[453708]:int(64)[13] "dead after last mention" "temp"
    (453711 'move' tmp[453708](1461772 'deref' call_tmp[597366]))
    (453713 '.=' this[28180] _bindex[28091] tmp[453708])
    (502935 return _void[55])
  }
  function _ref(byteIndex)[948759].init=[28145](ref arg this[28184]:_ref(byteIndex)[948759], const in arg i[28142]:int(64)[13]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    val tmp[453717]:int(64)[13] "dead after last mention" "temp"
    (453720 'move' tmp[453717] i[28142])
    (453722 '.=' this[28184] _bindex[28091] tmp[453717])
    (502937 return _void[55])
  }
  function _ref(byteIndex)[948759].writeThis[1068620](const  ref arg this[1068624]:_ref(byteIndex)[948759], const  ref arg f[1068626]:channel(true,dynamic,false)[1060947], ref arg error_out[1810193]:Error[167938]) : void[4] throws "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    ref call_tmp[1068632]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
    (1068634 'move' call_tmp[1068632](1068637 call _bindex[757742] this[1068624]))
    const-val coerce_tmp[1068714]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1068718 'move' coerce_tmp[1068714](1068716 'deref' call_tmp[1068632]))
    ref _return_tmp_[1800576]:_ref(channel(true,dynamic,false))[1060956] "dead after last mention" "temp"
    val error[1810198]:Error[167938] "error variable" "temp"
    (1810200 'move' error[1810198] nil[44])
    (1800578 'move' _return_tmp_[1800576](1068641 call <~>[1068648] f[1068626] coerce_tmp[1068714] error[1810198]))
    val errorExists[2108928]:bool[10] "temp"
    (2108933 'move' errorExists[2108928](2108930 '!=' error[1810198] nil[44]))
    if errorExists[2108928]
    {
      (1810204 '=' error_out[1810193] error[1810198])
      gotoErrorHandlingReturn _endwriteThis[1810195] _endwriteThis[1810195]
    }
    label _endwriteThis[1810195]
    (1068644 return _void[55])
  }
  function _ref(byteIndex)[948759]._bindex[757742](ref arg this[757746]:_ref(byteIndex)[948759]) ref : _ref(int(64))[936572] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[757756]:_ref(int(64))[936572] "dead after last mention" "RVV" "temp"
    ref call_tmp[757763]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
    (757766 'move' call_tmp[757763](757750 '.' this[757746] _bindex[28091]))
    (757761 'move' ret[757756] call_tmp[757763])
    (757758 return ret[757756])
  }
  function _ref(byteIndex)[948759].deinit[757768](const  ref arg this[757772]:_ref(byteIndex)[948759]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free"
  {
    (757780 return _void[55])
  }
  type byteIndex[28170] val _bindex[28091]:int(64)[13] "no doc"
  function _ref(codepointIndex)[948769].init[28201](ref arg this[28276]:_ref(codepointIndex)[948769]) : void[4] "method" "primary method" "no doc" "resolved" "no return value for void"
  {
    val tmp[453727]:int(64)[13] "dead after last mention" "temp"
    (1157050 'move' tmp[453727] 0)
    (453732 '.=' this[28276] _cpindex[28195] tmp[453727])
    (502941 return _void[55])
  }
  function _ref(codepointIndex)[948769].init=[28244](ref arg this[28288]:_ref(codepointIndex)[948769], const  ref arg cpi[28241]:codepointIndex[28274]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    ref call_tmp[597380]:_ref(int(64))[936572] "dead after last mention" "maybe param" "reference to a const" "temp"
    (597383 'move' call_tmp[597380](28250 call _cpindex[757814] cpi[28241]))
    val tmp[453754]:int(64)[13] "dead after last mention" "temp"
    (453757 'move' tmp[453754](1461839 'deref' call_tmp[597380]))
    (453759 '.=' this[28288] _cpindex[28195] tmp[453754])
    (502947 return _void[55])
  }
  function _ref(codepointIndex)[948769].writeThis[1175345](const  ref arg this[1175349]:_ref(codepointIndex)[948769], const  ref arg f[1175351]:channel(true,dynamic,false)[1060947], ref arg error_out[1811292]:Error[167938]) : void[4] throws "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    ref call_tmp[1175357]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
    (1175359 'move' call_tmp[1175357](1175362 call _cpindex[757814] this[1175349]))
    const-val coerce_tmp[1175373]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1175377 'move' coerce_tmp[1175373](1175375 'deref' call_tmp[1175357]))
    ref _return_tmp_[1800592]:_ref(channel(true,dynamic,false))[1060956] "dead after last mention" "temp"
    val error[1811297]:Error[167938] "error variable" "temp"
    (1811299 'move' error[1811297] nil[44])
    (1800594 'move' _return_tmp_[1800592](1175366 call <~>[1068648] f[1175351] coerce_tmp[1175373] error[1811297]))
    val errorExists[2109472]:bool[10] "temp"
    (2109477 'move' errorExists[2109472](2109474 '!=' error[1811297] nil[44]))
    if errorExists[2109472]
    {
      (1811303 '=' error_out[1811292] error[1811297])
      gotoErrorHandlingReturn _endwriteThis[1811294] _endwriteThis[1811294]
    }
    label _endwriteThis[1811294]
    (1175369 return _void[55])
  }
  function _ref(codepointIndex)[948769]._cpindex[757814](ref arg this[757818]:_ref(codepointIndex)[948769]) ref : _ref(int(64))[936572] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[757828]:_ref(int(64))[936572] "dead after last mention" "RVV" "temp"
    ref call_tmp[757835]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
    (757838 'move' call_tmp[757835](757822 '.' this[757818] _cpindex[28195]))
    (757833 'move' ret[757828] call_tmp[757835])
    (757830 return ret[757828])
  }
  function _ref(codepointIndex)[948769].deinit[757840](const  ref arg this[757844]:_ref(codepointIndex)[948769]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved"
  {
    (757852 return _void[55])
  }
  type codepointIndex[28274] val _cpindex[28195]:int(64)[13] "no doc"
  function chpl_build_bounded_range[1123254](const  ref arg low[1123256]:byteIndex[28170], const  ref arg high[1123261]:byteIndex[28170], ref arg _retArg[1834138]:_ref(range(byteIndex,bounded,false))[1025801]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1123345]:range(byteIndex,bounded,false)[1025792] "dead after last mention" "RVV" "temp"
    val call_tmp[1123368]:byteIndex[28170] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1123374]:range(byteIndex,bounded,false)[1025792] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1123393]:range(byteIndex,bounded,false)[1025792] "dead after last mention" "delay instantiation" "temp"
    const-val default_arg__stride[1123472]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (1123476 'move' default_arg__stride[1123472](1123474 call init_default__stride[1029812]))
    const-val default_arg__alignment[1123480]:byteIndex[28170] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val ret_tmp[1832659]:byteIndex[28170] "temp"
    (1123482 call init_default__alignment[1029852] ret_tmp[1832659])
    (1832662 'move' default_arg__alignment[1123480] ret_tmp[1832659])
    (1123396 call init[1028708] initTemp[1123393] low[1123256] high[1123261] default_arg__stride[1123472] default_arg__alignment[1123480] 0)
    (1123376 'move' call_tmp[1123374] initTemp[1123393])
    (1123385 'move' ret[1123345] call_tmp[1123374])
    (1834140 '=' _retArg[1834138] ret[1123345])
    (1844533 call chpl__autoDestroy[1461793] default_arg__alignment[1123480])
    (1834142 return _void[55])
  }
  function chpl_build_low_bounded_range[1142710](const  ref arg low[1142712]:byteIndex[28170], ref arg _retArg[1834366]:_ref(range(byteIndex,boundedLow,false))[1143447]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1142796]:range(byteIndex,boundedLow,false)[1143403] "dead after last mention" "RVV" "temp"
    val call_tmp[1142815]:byteIndex[28170] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1142821]:range(byteIndex,boundedLow,false)[1143403] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1142839]:range(byteIndex,boundedLow,false)[1143403] "dead after last mention" "delay instantiation" "temp"
    const-val default_arg__high[1143612]:byteIndex[28170] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val ret_tmp[1834372]:byteIndex[28170] "temp"
    (1143614 call init_default__high[1143588] ret_tmp[1834372])
    (1834375 'move' default_arg__high[1143612] ret_tmp[1834372])
    const-val default_arg__stride[1143653]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (1143657 'move' default_arg__stride[1143653](1143655 call init_default__stride[1143621]))
    const-val default_arg__alignment[1143685]:byteIndex[28170] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val ret_tmp[1834384]:byteIndex[28170] "temp"
    (1143687 call init_default__alignment[1143661] ret_tmp[1834384])
    (1834387 'move' default_arg__alignment[1143685] ret_tmp[1834384])
    (1142842 call init[1142850] initTemp[1142839] low[1142712] default_arg__high[1143612] default_arg__stride[1143653] default_arg__alignment[1143685] 0)
    (1142823 'move' call_tmp[1142821] initTemp[1142839])
    (1142831 'move' ret[1142796] call_tmp[1142821])
    (1834368 '=' _retArg[1834366] ret[1142796])
    (1844765 call chpl__autoDestroy[1461793] default_arg__alignment[1143685])
    (1844768 call chpl__autoDestroy[1461793] default_arg__high[1143612])
    (1834370 return _void[55])
  }
  function chpl_build_high_bounded_range[1184226](const  ref arg high[1184228]:byteIndex[28170], ref arg _retArg[1834718]:_ref(range(byteIndex,boundedHigh,false))[1184963]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1184312]:range(byteIndex,boundedHigh,false)[1184919] "dead after last mention" "RVV" "temp"
    val call_tmp[1184331]:byteIndex[28170] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1184337]:range(byteIndex,boundedHigh,false)[1184919] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1184355]:range(byteIndex,boundedHigh,false)[1184919] "dead after last mention" "delay instantiation" "temp"
    const-val default_arg__low[1185128]:byteIndex[28170] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val ret_tmp[1834724]:byteIndex[28170] "temp"
    (1185130 call init_default__low[1185104] ret_tmp[1834724])
    (1834727 'move' default_arg__low[1185128] ret_tmp[1834724])
    const-val default_arg__stride[1185169]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (1185173 'move' default_arg__stride[1185169](1185171 call init_default__stride[1185137]))
    const-val default_arg__alignment[1185201]:byteIndex[28170] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val ret_tmp[1834736]:byteIndex[28170] "temp"
    (1185203 call init_default__alignment[1185177] ret_tmp[1834736])
    (1834739 'move' default_arg__alignment[1185201] ret_tmp[1834736])
    (1184358 call init[1184366] initTemp[1184355] default_arg__low[1185128] high[1184228] default_arg__stride[1185169] default_arg__alignment[1185201] 0)
    (1184339 'move' call_tmp[1184337] initTemp[1184355])
    (1184347 'move' ret[1184312] call_tmp[1184337])
    (1834720 '=' _retArg[1834718] ret[1184312])
    (1847034 call chpl__autoDestroy[1461793] default_arg__alignment[1185201])
    (1847037 call chpl__autoDestroy[1461793] default_arg__low[1185128])
    (1834722 return _void[55])
  }
  function chpl__idxToInt[1029169](const  ref arg i[1029171]:byteIndex[28170]) : int(64)[13] "inline" "instantiated generic" "invisible fn" "no doc" "resolved" "fn synchronization free"
  {
    val ret[1029255]:int(64)[13] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1029267]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1029269 'move' call_tmp[1029267](1029272 call _cast[39462] i[1029171]))
    (1029275 'move' ret[1029255] call_tmp[1029267])
    (1029279 return ret[1029255])
  }
  function chpl__intToIdx[28502](const in arg i[28505]:int(64)[13], ref arg _retArg[1818137]:_ref(byteIndex)[948759]) : void[4] "fn returns via _retArg" "inline" "no doc" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1804444]:byteIndex[28170] "temp"
    const-val ret[503025]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    const-val call_tmp[597527]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1830373]:byteIndex[28170] "temp"
    (28510 call _cast[39483] i[28505] ret_tmp[1830373])
    (1830376 'move' call_tmp[597527] ret_tmp[1830373])
    (503030 'move' ret[503025] call_tmp[597527])
    (1818139 '=' _retArg[1818137] ret[503025])
    (1818141 return _void[55])
  }
  function >[28572](const  ref arg x[28569]:byteIndex[28170], const  ref arg y[28575]:byteIndex[28170]) : bool[10] "inline" "no doc" "resolved" "fn synchronization free"
  {
    val ret[503061]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[597537]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (597540 'move' call_tmp[597537](28580 call _cast[39462] x[28569]))
    const-val call_tmp[597542]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (597545 'move' call_tmp[597542](28584 call _cast[39462] y[28575]))
    const-val call_tmp[597547]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (597550 'move' call_tmp[597547](28586 call >[437672] call_tmp[597537] call_tmp[597542]))
    (503066 'move' ret[503061] call_tmp[597547])
    (503063 return ret[503061])
  }
  function +[28722](const  ref arg x[28719]:byteIndex[28170], const in arg y[28725]:int(64)[13], ref arg _retArg[1818179]:_ref(byteIndex)[948759]) : void[4] "fn returns via _retArg" "inline" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[503115]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    const-val call_tmp[597607]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (597610 'move' call_tmp[597607](28730 call _cast[39462] x[28719]))
    const-val call_tmp[597612]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (597615 'move' call_tmp[597612](28733 call +[439636] call_tmp[597607] y[28725]))
    const-val call_tmp[597617]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1830379]:byteIndex[28170] "temp"
    (28736 call _cast[39483] call_tmp[597612] ret_tmp[1830379])
    (1830382 'move' call_tmp[597617] ret_tmp[1830379])
    (503120 'move' ret[503115] call_tmp[597617])
    (1818181 '=' _retArg[1818179] ret[503115])
    (1818183 return _void[55])
  }
  function -[28854](const  ref arg x[28851]:byteIndex[28170], const in arg y[28857]:int(64)[13], ref arg _retArg[1818215]:_ref(byteIndex)[948759]) : void[4] "fn returns via _retArg" "inline" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[503160]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    const-val call_tmp[597677]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (597680 'move' call_tmp[597677](28862 call _cast[39462] x[28851]))
    const-val call_tmp[597682]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (597685 'move' call_tmp[597682](28865 call -[440416] call_tmp[597677] y[28857]))
    const-val call_tmp[597687]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1830385]:byteIndex[28170] "temp"
    (28868 call _cast[39483] call_tmp[597682] ret_tmp[1830385])
    (1830388 'move' call_tmp[597687] ret_tmp[1830385])
    (503165 'move' ret[503160] call_tmp[597687])
    (1818217 '=' _retArg[1818215] ret[503160])
    (1818219 return _void[55])
  }
  function <[29040](const  ref arg x[29037]:codepointIndex[28274], const in arg y[29043]:int(64)[13]) : bool[10] "inline" "no doc" "resolved"
  {
    val ret[503223]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[597777]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (597780 'move' call_tmp[597777](29048 call _cast[39514] x[29037]))
    const-val call_tmp[597782]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (597785 'move' call_tmp[597782](29051 call <[437452] call_tmp[597777] y[29043]))
    (503228 'move' ret[503223] call_tmp[597782])
    (503225 return ret[503223])
  }
  function >=[29190](const  ref arg x[29187]:codepointIndex[28274], const in arg y[29193]:int(64)[13]) : bool[10] "inline" "no doc" "resolved"
  {
    val ret[503277]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[597847]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (597850 'move' call_tmp[597847](29198 call _cast[39514] x[29187]))
    const-val call_tmp[597852]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (597855 'move' call_tmp[597852](29201 call >=[437232] call_tmp[597847] y[29193]))
    (503282 'move' ret[503277] call_tmp[597852])
    (503279 return ret[503277])
  }
  function ==[29466](const  ref arg x[29463]:byteIndex[28170], const in arg y[29469]:int(64)[13]) : bool[10] "inline" "no doc" "resolved" "fn synchronization free"
  {
    val ret[503376]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[597977]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (597980 'move' call_tmp[597977](29474 call _cast[39462] x[29463]))
    const-val call_tmp[597982]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (597985 'move' call_tmp[597982](29477 call ==[435628] call_tmp[597977] y[29469]))
    (503381 'move' ret[503376] call_tmp[597982])
    (503378 return ret[503376])
  }
  function ==[29538](const in arg x[29535]:int(64)[13], const  ref arg y[29541]:codepointIndex[28274]) : bool[10] "inline" "no doc" "resolved" "fn synchronization free"
  {
    val ret[503403]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[598007]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (598010 'move' call_tmp[598007](29547 call _cast[39514] y[29541]))
    const-val call_tmp[598012]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (598015 'move' call_tmp[598012](29549 call ==[435628] x[29535] call_tmp[598007]))
    (503408 'move' ret[503403] call_tmp[598012])
    (503405 return ret[503403])
  }
  function !=[29616](const  ref arg x[29613]:byteIndex[28170], const in arg y[29619]:int(64)[13]) : bool[10] "inline" "no doc" "resolved"
  {
    val ret[503430]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[598047]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (598050 'move' call_tmp[598047](29624 call _cast[39462] x[29613]))
    const-val call_tmp[598052]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (598055 'move' call_tmp[598052](29627 call !=[436012] call_tmp[598047] y[29619]))
    (503435 'move' ret[503430] call_tmp[598052])
    (503432 return ret[503430])
  }
  function validateEncoding[986640](const in arg buf[986642]:c_ptr(uint(8))[937423], const in arg len[986644]:int(64)[13], ref arg error_out[1809164]:Error[167938]) : int(64)[13] throws "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[986648]:int(64)[13] "dead after last mention" "RVV" "temp"
    val numCodepoints[986674]:int(64)[13] "dead at end of block" "insert auto destroy"
    (987005 'move' numCodepoints[986674] 0)
    const-val call_tmp[986680]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (986682 'move' call_tmp[986680](986685 call chpl_enc_validate_buf[986737] buf[986642] len[986644] numCodepoints[986674]))
    const-val call_tmp[986689]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[986762]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (986768 'move' coerce_tmp[986762](986764 'cast' int(32)[95] 0))
    (986691 'move' call_tmp[986689](986694 call !=[435990] call_tmp[986680] coerce_tmp[986762]))
    const-val call_tmp[986697]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (986699 'move' call_tmp[986697] call_tmp[986689])
    if call_tmp[986697]
    {
      const-val call_tmp[986706]:owned DecodeError[966281] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
      val new_temp[986787]:DecodeError[168094] "dead after last mention" "temp"
      (986789 'move' new_temp[986787](986775 call _new[965642]))
      const-val initTemp[986796]:owned DecodeError[966281] "dead after last mention" "delay instantiation" "temp"
      (986799 call init[965741] initTemp[986796] new_temp[986787])
      (986708 'move' call_tmp[986706] initTemp[986796])
      val call_tmp[986712]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[986813]:owned Error[966458] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1832097]:owned Error[966458] "temp"
      (986815 call _cast[966543] call_tmp[986706] ret_tmp[1832097])
      (1832100 'move' coerce_tmp[986813] ret_tmp[1832097])
      const-val _formal_tmp_in_err[986992]:owned Error[966458] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (986996 'move' _formal_tmp_in_err[986992] coerce_tmp[986813])
      (986714 'move' call_tmp[986712](986717 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[986992]))
      {
        val castedError[1809167]:Error[167938] "temp"
        (1809173 'move' castedError[1809167] call_tmp[986712])
        (1809175 '=' error_out[1809164] castedError[1809167])
        gotoErrorHandlingReturn _end_validateEncoding[986731] _end_validateEncoding[986731]
      }
    }
    (987002 'move' ret[986648] numCodepoints[986674])
    gotoReturn _end_validateEncoding[986731] _end_validateEncoding[986731]
    label _end_validateEncoding[986731]
    (986733 return ret[986648])
  }
  function createStringWithBorrowedBuffer[29899](const  ref arg x[29896]:string[26], ref arg _retArg[1818227]:_ref(string)[937939]) : void[4] "fn returns via _retArg" "inline" "resolved" "fn synchronization free"
  {
    const-val ret[503524]:string[26] "dead after last mention" "RVV" "temp"
    val ret[29902]:string[26] "dead at end of block" "insert auto destroy"
    (954285 call init[30760] ret[29902])
    ref call_tmp[598144]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
    (598147 'move' call_tmp[598144](29910 call cachedNumCodepoints[757938] ret[29902]))
    ref call_tmp[598151]:_ref(int(64))[936572] "dead after last mention" "maybe param" "reference to a const" "temp"
    (598154 'move' call_tmp[598151](29914 call cachedNumCodepoints[757938] x[29896]))
    const-val coerce_tmp[948867]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (948871 'move' coerce_tmp[948867](948869 'deref' call_tmp[598151]))
    (29917 call =[435327] call_tmp[598144] coerce_tmp[948867])
    (29924 call initWithBorrowedBuffer[948874] ret[29902] x[29896])
    (503529 'move' ret[503524] ret[29902])
    gotoReturn _end_createStringWithBorrowedBuffer[503522] _end_createStringWithBorrowedBuffer[503522]
    label _end_createStringWithBorrowedBuffer[503522]
    (1818229 '=' _retArg[1818227] ret[503524])
    (1818231 return _void[55])
  }
  function chpl_createStringWithLiteral[30029](const in arg x[30026]:c_string[19], const in arg length[30032]:int(64)[13], const in arg numCodepoints[30036]:int(64)[13], ref arg _retArg[1828973]:_ref(string)[937939]) : void[4] "fn returns via _retArg" "no doc" "resolved"
  {
    const-val ret[503562]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[598195]:uint(8)[100] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[598200]:c_ptr(uint(8))[937423] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[598205]:c_ptr(uint(8))[937423] "dead after last mention" "expr temp" "maybe param" "temp"
    (598208 'move' call_tmp[598205](30048 call _cast[39392] x[30026]))
    const-val call_tmp[598210]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (598213 'move' call_tmp[598210](30055 call +[949666] length[30032]))
    const-val call_tmp[598215]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1829153]:string[26] "temp"
    (30060 call chpl_createStringWithBorrowedBufferNV[30626] call_tmp[598205] length[30032] call_tmp[598210] numCodepoints[30036] ret_tmp[1829153])
    (1829156 'move' call_tmp[598215] ret_tmp[1829153])
    (503567 'move' ret[503562] call_tmp[598215])
    (1828975 '=' _retArg[1828973] ret[503562])
    (1828977 return _void[55])
  }
  function createStringWithOwnedBuffer[30207](const in arg x[30204]:c_string[19], const in arg length[30213]:int(64)[13], ref arg error_out[1808020]:Error[167938], ref arg _retArg[1828997]:_ref(string)[937939]) : void[4] throws "fn returns via _retArg" "inline" "resolved"
  {
    const-val ret[503602]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[598244]:c_ptr(uint(8))[937423] "dead after last mention" "expr temp" "maybe param" "temp"
    (598247 'move' call_tmp[598244](30219 call _cast[39392] x[30204]))
    const-val call_tmp[598249]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (598252 'move' call_tmp[598249](30226 call +[949666] length[30213]))
    const-val call_tmp[598254]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[1808025]:Error[167938] "error variable" "temp"
    (1808027 'move' error[1808025] nil[44])
    const-val ret_tmp[1829003]:string[26] "temp"
    (30229 call createStringWithOwnedBuffer[30271] call_tmp[598244] length[30213] call_tmp[598249] error[1808025] ret_tmp[1829003])
    (1829006 'move' call_tmp[598254] ret_tmp[1829003])
    val errorExists[2107832]:bool[10] "temp"
    (2107837 'move' errorExists[2107832](2107834 '!=' error[1808025] nil[44]))
    if errorExists[2107832]
    {
      (1808031 '=' error_out[1808020] error[1808025])
      gotoErrorHandlingReturn _endcreateStringWithOwnedBuffer[1808022] _endcreateStringWithOwnedBuffer[1808022]
    }
    (503607 'move' ret[503602] call_tmp[598254])
    label _endcreateStringWithOwnedBuffer[1808022]
    (1828999 '=' _retArg[1828997] ret[503602])
    (1829001 return _void[55])
  }
  function createStringWithOwnedBuffer_default_length[986602](const in arg x[986604]:c_string[19], ref arg error_out[1809160]:Error[167938]) : int(64)[13] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "resolved" "fn synchronization free"
  {
    val ret[986606]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val length[986611]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (986618 'move' length[986611](986615 call size[22358] x[986604]))
    (986622 'move' ret[986606] length[986611])
    label _endcreateStringWithOwnedBuffer_default_length[1809162]
    (986609 return ret[986606])
  }
  function createStringWithOwnedBuffer[30271](const in arg x[30268]:c_ptr(uint(8))[937423], const in arg length[30274]:int(64)[13], const in arg size[30278]:int(64)[13], ref arg error_out[1808039]:Error[167938], ref arg _retArg[1829009]:_ref(string)[937939]) : void[4] throws "fn returns via _retArg" "inline" "resolved"
  {
    const-val ret[503620]:string[26] "dead after last mention" "RVV" "temp"
    val ret[30282]:string[26] "dead at end of block" "insert auto destroy"
    (987009 call init[30760] ret[30282])
    ref call_tmp[598268]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
    (598271 'move' call_tmp[598268](30288 call cachedNumCodepoints[757938] ret[30282]))
    const-val call_tmp[598273]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val error[1808042]:Error[167938] "error variable" "temp"
    (1808044 'move' error[1808042] nil[44])
    (598276 'move' call_tmp[598273](30295 call validateEncoding[986640] x[30268] length[30274] error[1808042]))
    val errorExists[2107840]:bool[10] "temp"
    (2107845 'move' errorExists[2107840](2107842 '!=' error[1808042] nil[44]))
    if errorExists[2107840]
    {
      (1808048 '=' error_out[1808039] error[1808042])
      (1841769 call chpl__autoDestroy[1461530] ret[30282])
      gotoErrorHandlingReturn _end_createStringWithOwnedBuffer[503618] _end_createStringWithOwnedBuffer[503618]
    }
    (30296 call =[435327] call_tmp[598268] call_tmp[598273])
    (30305 call initWithOwnedBuffer[978895] ret[30282] x[30268] length[30274] size[30278])
    (503625 'move' ret[503620] ret[30282])
    gotoReturn _end_createStringWithOwnedBuffer[503618] _end_createStringWithOwnedBuffer[503618]
    label _end_createStringWithOwnedBuffer[503618]
    (1829011 '=' _retArg[1829009] ret[503620])
    (1829013 return _void[55])
  }
  function createStringWithNewBuffer[30410](const in arg x[30407]:c_string[19], const in arg length[30416]:int(64)[13], const in arg policy[30423]:decodePolicy[173656], ref arg error_out[1808056]:Error[167938], ref arg _retArg[1829105]:_ref(string)[937939]) : void[4] throws "fn returns via _retArg" "inline" "resolved"
  {
    const-val ret[503660]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[598304]:c_ptr(uint(8))[937423] "dead after last mention" "expr temp" "maybe param" "temp"
    (598307 'move' call_tmp[598304](30429 call _cast[39392] x[30407]))
    const-val call_tmp[598309]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (598312 'move' call_tmp[598309](30436 call +[949666] length[30416]))
    const-val call_tmp[598314]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[1808061]:Error[167938] "error variable" "temp"
    (1808063 'move' error[1808061] nil[44])
    const-val ret_tmp[1829111]:string[26] "temp"
    (30440 call createStringWithNewBuffer[30490] call_tmp[598304] length[30416] call_tmp[598309] policy[30423] error[1808061] ret_tmp[1829111])
    (1829114 'move' call_tmp[598314] ret_tmp[1829111])
    val errorExists[2107848]:bool[10] "temp"
    (2107853 'move' errorExists[2107848](2107850 '!=' error[1808061] nil[44]))
    if errorExists[2107848]
    {
      (1808067 '=' error_out[1808056] error[1808061])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[1808058] _endcreateStringWithNewBuffer[1808058]
    }
    (503665 'move' ret[503660] call_tmp[598314])
    label _endcreateStringWithNewBuffer[1808058]
    (1829107 '=' _retArg[1829105] ret[503660])
    (1829109 return _void[55])
  }
  function createStringWithNewBuffer_default_length[964046](const in arg x[964048]:c_string[19], ref arg error_out[1809148]:Error[167938]) : int(64)[13] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "resolved" "fn synchronization free"
  {
    val ret[964050]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val length[964055]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (964062 'move' length[964055](964059 call size[22358] x[964048]))
    (964066 'move' ret[964050] length[964055])
    label _endcreateStringWithNewBuffer_default_length[1809150]
    (964053 return ret[964050])
  }
  function createStringWithNewBuffer[30490](const in arg x[30487]:c_ptr(uint(8))[937423], const in arg length[30493]:int(64)[13], const in arg size[30500]:int(64)[13], const in arg policy[30507]:decodePolicy[173656], ref arg error_out[1808075]:Error[167938], ref arg _retArg[1829135]:_ref(string)[937939]) : void[4] throws "fn returns via _retArg" "inline" "resolved"
  {
    const-val ret[503678]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[598326]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[1808080]:Error[167938] "error variable" "temp"
    (1808082 'move' error[1808080] nil[44])
    const-val ret_tmp[1831293]:string[26] "temp"
    (30515 call decodeByteBuffer[173892] x[30487] length[30493] policy[30507] error[1808080] ret_tmp[1831293])
    (1831296 'move' call_tmp[598326] ret_tmp[1831293])
    val errorExists[2107856]:bool[10] "temp"
    (2107861 'move' errorExists[2107856](2107858 '!=' error[1808080] nil[44]))
    if errorExists[2107856]
    {
      (1808086 '=' error_out[1808075] error[1808080])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[1808077] _endcreateStringWithNewBuffer[1808077]
    }
    (503683 'move' ret[503678] call_tmp[598326])
    label _endcreateStringWithNewBuffer[1808077]
    (1829137 '=' _retArg[1829135] ret[503678])
    (1829139 return _void[55])
  }
  function _ref(string)[937939].init[30760](ref arg this[32625]:_ref(string)[937939]) : void[4] "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val tmp[453789]:int(64)[13] "dead after last mention" "temp"
    (453792 'move' tmp[453789] 0)
    (453794 '.=' this[32625] buffLen[30719] tmp[453789])
    val tmp[453799]:int(64)[13] "dead after last mention" "temp"
    (453802 'move' tmp[453799] 0)
    (453804 '.=' this[32625] buffSize[30725] tmp[453799])
    val tmp[453809]:int(64)[13] "dead after last mention" "temp"
    (453812 'move' tmp[453809] 0)
    (453814 '.=' this[32625] cachedNumCodepoints[30731] tmp[453809])
    val tmp[453819]:c_ptr(uint(8))[937423] "dead after last mention" "temp"
    val init_coerce_tmp[954299]:c_ptr(uint(8))[937423] "dead after last mention" "temp"
    (954302 'move' init_coerce_tmp[954299](954309 'cast' c_ptr(uint(8))[937423] nil[44]))
    (453822 'move' tmp[453819] init_coerce_tmp[954299])
    (453824 '.=' this[32625] buff[30737] tmp[453819])
    val tmp[453829]:bool[10] "dead after last mention" "temp"
    (453832 'move' tmp[453829] 1)
    (453834 '.=' this[32625] isOwned[30743] tmp[453829])
    val tmp[453839]:bool[10] "dead after last mention" "temp"
    (453842 'move' tmp[453839] 0)
    (453844 '.=' this[32625] hasEscapes[30749] tmp[453839])
    val tmp[453849]:int(32)[95] "dead after last mention" "temp"
    (453851 'move' tmp[453849] chpl_nodeID[208152])
    (453853 '.=' this[32625] locale_id[30754] tmp[453849])
    (503694 return _void[55])
  }
  function _ref(string)[937939].init=[30771](ref arg this[32629]:_ref(string)[937939], const  ref arg s[30768]:string[26]) : void[4] "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val tmp[453858]:int(64)[13] "dead after last mention" "temp"
    (453861 'move' tmp[453858] 0)
    (453863 '.=' this[32629] buffLen[30719] tmp[453858])
    val tmp[453868]:int(64)[13] "dead after last mention" "temp"
    (453871 'move' tmp[453868] 0)
    (453873 '.=' this[32629] buffSize[30725] tmp[453868])
    val tmp[453878]:int(64)[13] "dead after last mention" "temp"
    (453881 'move' tmp[453878] 0)
    (453883 '.=' this[32629] cachedNumCodepoints[30731] tmp[453878])
    val tmp[453888]:c_ptr(uint(8))[937423] "dead after last mention" "temp"
    val init_coerce_tmp[954319]:c_ptr(uint(8))[937423] "dead after last mention" "temp"
    (954322 'move' init_coerce_tmp[954319](957273 'cast' c_ptr(uint(8))[937423] nil[44]))
    (453891 'move' tmp[453888] init_coerce_tmp[954319])
    (453893 '.=' this[32629] buff[30737] tmp[453888])
    val tmp[453898]:bool[10] "dead after last mention" "temp"
    (453901 'move' tmp[453898] 1)
    (453903 '.=' this[32629] isOwned[30743] tmp[453898])
    val tmp[453908]:bool[10] "dead after last mention" "temp"
    (453911 'move' tmp[453908] 0)
    (453913 '.=' this[32629] hasEscapes[30749] tmp[453908])
    val tmp[453918]:int(32)[95] "dead after last mention" "temp"
    (453920 'move' tmp[453918] chpl_nodeID[208152])
    (453922 '.=' this[32629] locale_id[30754] tmp[453918])
    (30785 call initWithNewBuffer[954329] this[32629] s[30768])
    (503696 return _void[55])
  }
  function _ref(string)[937939].deinit[30831](ref arg this[32637]:_ref(string)[937939]) : void[4] "destructor" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    ref tmp[417324]:_ref(bool)[937199] "dead after last mention" "maybe param" "temp"
    (417335 'move' tmp[417324](369663 call isOwned[757990] this[32637]))
    val tmp[552816]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[552817]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[598367]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[938004]:bool[10] "dead after last mention" "const" "temp"
    (938006 'move' tmp[938004](938008 'deref' tmp[417324]))
    (598370 'move' call_tmp[598367] tmp[938004])
    (552822 'move' tmp[552817] call_tmp[598367])
    if tmp[552817]
    {
      const-val tmp[552824]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      ref call_tmp[598374]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "maybe param" "temp"
      (598377 'move' call_tmp[598374](30835 call buff[757964] this[32637]))
      const-val call_tmp[598379]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[938108]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (938112 'move' coerce_tmp[938108](938110 'deref' call_tmp[598374]))
      (598382 'move' call_tmp[598379](30839 call !=[938031] coerce_tmp[938108] nil[44]))
      (552826 'move' tmp[552824] call_tmp[598379])
      (552831 'move' tmp[552816] tmp[552824])
    }
    {
      (552836 'move' tmp[552816] 0)
    }
    const-val call_tmp[598384]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (598387 'move' call_tmp[598384] tmp[552816])
    if call_tmp[598384]
    {
      const-val tmp[30865]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
      ref call_tmp[598391]:_ref(int(32))[936626] "dead after last mention" "maybe param" "temp"
      (598394 'move' call_tmp[598391](30847 call locale_id[758042] this[32637]))
      const-val call_tmp[598396]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val coerce_tmp[938126]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (938130 'move' coerce_tmp[938126](938128 'deref' call_tmp[598391]))
      (598399 'move' call_tmp[598396](30852 call chpl_buildLocaleID[209412] coerce_tmp[938126] c_sublocid_any[89875]))
      const-val call_tmp[598401]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
      (598404 'move' call_tmp[598401](30853 'chpl_on_locale_num' call_tmp[598396]))
      (30867 'move' tmp[30865] call_tmp[598401])
      val isdirect[2085439]:bool[10] "temp"
      (2085444 'move' isdirect[2085439](2085441 call chpl_doDirectExecuteOn[187423] tmp[30865]))
      if isdirect[2085439]
      {
        (2085448 call on_fn[933786] this[32637])
      }
      {
        val _args_foron_fn[2085463]:_class_localson_fn[2085455] "temp"
        (2085467 'move' _args_foron_fn[2085463](2085465 'stack allocate class' _class_localson_fn[2085455]))
        (2085469 '.=' _args_foron_fn[2085463] _0_tmp[2085458] tmp[30865])
        ref tmp[2085473]:string[26] "temp"
        (2085477 'move' tmp[2085473](2085475 'set reference' this[32637]))
        (2085479 '.=' _args_foron_fn[2085463] _1_this[2085460] tmp[2085473])
        val _args_vforon_fn[2085483]:c_void_ptr[149] "temp"
        (2085487 'move' _args_vforon_fn[2085483](2085485 'cast_to_void_star' _args_foron_fn[2085463]))
        val _args_sizeon_fn[2085489]:int(64)[13] "temp"
        (2085493 'move' _args_sizeon_fn[2085489](2085491 'sizeof_bundle' _class_localson_fn[2085455]))
        on(2085525 call wrapon_fn[2085495] tmp[30865] _args_vforon_fn[2085483] _args_sizeon_fn[2085489] _args_foron_fn[2085463])
      }
      {
      }
    }
    (503700 return _void[55])
  }
  function _ref(string)[937939].chpl__serialize[30883](const  ref arg this[32641]:_ref(string)[937939], ref arg _retArg[1829255]:_ref(__serializeHelper)[938017]) : void[4] "fn returns via _retArg" "method" "primary method" "resolved"
  {
    const-val ret[503704]:__serializeHelper[28086] "dead after last mention" "RVV" "temp"
    val data[30886]:chpl__inPlaceBuffer[28019] "dead at end of block" "insert auto destroy"
    ref call_tmp[598415]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
    (598418 'move' call_tmp[598415](369670 call buffLen[757886] this[32641]))
    const-val call_tmp[598420]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1792304]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1792308 'move' coerce_tmp[1792304](1792306 'deref' call_tmp[598415]))
    const-val coerce_tmp[1792310]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1792316 'move' coerce_tmp[1792310](1792312 'cast' int(64)[13] CHPL_SHORT_STRING_SIZE[28013]))
    (598423 'move' call_tmp[598420](30893 call <=[437012] coerce_tmp[1792304] coerce_tmp[1792310]))
    const-val call_tmp[598425]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (598428 'move' call_tmp[598425] call_tmp[598420])
    if call_tmp[598425]
    {
      val call_tmp[598430]:c_ptr(uint(8))[937423] "dead after last mention" "expr temp" "maybe param" "temp"
      (598433 'move' call_tmp[598430](30899 call chpl__getInPlaceBufferDataForWrite[28042] data[30886]))
      ref call_tmp[598437]:_ref(int(32))[936626] "dead after last mention" "maybe param" "temp"
      (598440 'move' call_tmp[598437](369677 call locale_id[758042] this[32641]))
      ref call_tmp[598444]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "maybe param" "temp"
      (598447 'move' call_tmp[598444](369682 call buff[757964] this[32641]))
      ref call_tmp[598451]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
      (598454 'move' call_tmp[598451](369687 call buffLen[757886] this[32641]))
      const-val coerce_tmp[1792323]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1792327 'move' coerce_tmp[1792323](1792325 'deref' call_tmp[598437]))
      const-val coerce_tmp[1792329]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1792335 'move' coerce_tmp[1792329](1792331 'cast' int(64)[13] coerce_tmp[1792323]))
      val coerce_tmp[1792337]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1792341 'move' coerce_tmp[1792337](1792339 'deref' call_tmp[598444]))
      const-val coerce_tmp[1792343]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1792347 'move' coerce_tmp[1792343](1792345 'deref' call_tmp[598451]))
      (30904 call chpl_string_comm_get[954050] call_tmp[598430] coerce_tmp[1792329] coerce_tmp[1792337] coerce_tmp[1792343])
    }
    ref call_tmp[598458]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
    (598461 'move' call_tmp[598458](369693 call buffLen[757886] this[32641]))
    ref call_tmp[598465]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "maybe param" "temp"
    (598468 'move' call_tmp[598465](369698 call buff[757964] this[32641]))
    ref call_tmp[598472]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
    (598475 'move' call_tmp[598472](369703 call buffSize[757912] this[32641]))
    ref call_tmp[598479]:_ref(int(32))[936626] "dead after last mention" "maybe param" "temp"
    (598482 'move' call_tmp[598479](369708 call locale_id[758042] this[32641]))
    ref call_tmp[598486]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
    (598489 'move' call_tmp[598486](369714 call cachedNumCodepoints[757938] this[32641]))
    const-val call_tmp[598491]:__serializeHelper[28086] "dead after last mention" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1792356]:__serializeHelper[28086] "dead after last mention" "temp"
    const-val coerce_tmp[1792383]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1792387 'move' coerce_tmp[1792383](1792385 'deref' call_tmp[598458]))
    val coerce_tmp[1792389]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1792393 'move' coerce_tmp[1792389](1792391 'deref' call_tmp[598465]))
    const-val coerce_tmp[1792395]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1792399 'move' coerce_tmp[1792395](1792397 'deref' call_tmp[598472]))
    const-val coerce_tmp[1792401]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1792405 'move' coerce_tmp[1792401](1792403 'deref' call_tmp[598479]))
    const-val coerce_tmp[1792407]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1792411 'move' coerce_tmp[1792407](1792409 'deref' call_tmp[598486]))
    (1792359 call init[753630] initTemp[1792356] coerce_tmp[1792383] coerce_tmp[1792389] coerce_tmp[1792395] coerce_tmp[1792401] data[30886] coerce_tmp[1792407])
    (598494 'move' call_tmp[598491] initTemp[1792356])
    (503709 'move' ret[503704] call_tmp[598491])
    gotoReturn _end_chpl__serialize[503702] _end_chpl__serialize[503702]
    label _end_chpl__serialize[503702]
    (1829257 '=' _retArg[1829255] ret[503704])
    (1829259 return _void[55])
  }
  function chpl__deserialize[1792422](const  ref arg data[1792428]:__serializeHelper[28086], ref arg _retArg[1841559]:_ref(string)[937939]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val _formal_type_tmp_[1805275]:string[26] "temp"
    val ret[1792430]:string[26] "dead after last mention" "RVV" "temp"
    ref call_tmp[1792438]:_ref(int(32))[936626] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1792440 'move' call_tmp[1792438](1792443 call locale_id[753552] data[1792428]))
    const-val call_tmp[1792446]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1792682]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1792686 'move' coerce_tmp[1792682](1792684 'deref' call_tmp[1792438]))
    (1792448 'move' call_tmp[1792446](1792451 call !=[435990] coerce_tmp[1792682] chpl_nodeID[208152]))
    const-val call_tmp[1792454]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1792456 'move' call_tmp[1792454] call_tmp[1792446])
    if call_tmp[1792454]
    {
      ref call_tmp[1792463]:_ref(int(64))[936572] "dead after last mention" "maybe param" "reference to a const" "temp"
      (1792465 'move' call_tmp[1792463](1792468 call buffLen[753474] data[1792428]))
      const-val call_tmp[1792471]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1792690]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1792694 'move' coerce_tmp[1792690](1792692 'deref' call_tmp[1792463]))
      const-val coerce_tmp[1792696]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1792702 'move' coerce_tmp[1792696](1792698 'cast' int(64)[13] CHPL_SHORT_STRING_SIZE[28013]))
      (1792473 'move' call_tmp[1792471](1792476 call <=[437012] coerce_tmp[1792690] coerce_tmp[1792696]))
      const-val call_tmp[1792479]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1792481 'move' call_tmp[1792479] call_tmp[1792471])
      if call_tmp[1792479]
      {
        ref call_tmp[1792488]:_ref(chpl__inPlaceBuffer)[967440] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1792490 'move' call_tmp[1792488](1792493 call shortData[753578] data[1792428]))
        val call_tmp[1792496]:c_ptr(uint(8))[937423] "dead after last mention" "expr temp" "maybe param" "temp"
        (1792498 'move' call_tmp[1792496](1792501 call chpl__getInPlaceBufferData[28030] call_tmp[1792488]))
        ref call_tmp[1792503]:_ref(int(64))[936572] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1792505 'move' call_tmp[1792503](1792508 call buffLen[753474] data[1792428]))
        ref call_tmp[1792511]:_ref(int(64))[936572] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1792513 'move' call_tmp[1792511](1792516 call size[753526] data[1792428]))
        ref call_tmp[1792519]:_ref(int(64))[936572] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1792521 'move' call_tmp[1792519](1792524 call cachedNumCodepoints[753604] data[1792428]))
        const-val call_tmp[1792527]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val coerce_tmp[1792710]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1792714 'move' coerce_tmp[1792710](1792712 'deref' call_tmp[1792503]))
        const-val coerce_tmp[1792716]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1792720 'move' coerce_tmp[1792716](1792718 'deref' call_tmp[1792511]))
        const-val coerce_tmp[1792722]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1792726 'move' coerce_tmp[1792722](1792724 'deref' call_tmp[1792519]))
        const-val ret_tmp[1829141]:string[26] "temp"
        (1792532 call chpl_createStringWithNewBufferNV[30579] call_tmp[1792496] coerce_tmp[1792710] coerce_tmp[1792716] coerce_tmp[1792722] ret_tmp[1829141])
        (1829144 'move' call_tmp[1792527] ret_tmp[1829141])
        (1792537 'move' ret[1792430] call_tmp[1792527])
        gotoReturn _end_chpl__deserialize[1792676] _end_chpl__deserialize[1792676]
      }
      {
        ref call_tmp[1792544]:_ref(int(32))[936626] "dead at end of block" "maybe param" "reference to a const" "temp"
        (1792546 'move' call_tmp[1792544](1792549 call locale_id[753552] data[1792428]))
        ref call_tmp[1792552]:_ref(c_ptr(uint(8)))[937432] "dead at end of block" "maybe param" "reference to a const" "temp"
        (1792554 'move' call_tmp[1792552](1792557 call buff[753500] data[1792428]))
        ref call_tmp[1792560]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
        (1792562 'move' call_tmp[1792560](1792565 call buffLen[753474] data[1792428]))
        val call_tmp[1792568]:c_ptr(uint(8))[937423] "dead at end of block" "maybe param" "temp"
        const-val coerce_tmp[1793000]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1793004 'move' coerce_tmp[1793000](1793002 'deref' call_tmp[1792544]))
        const-val coerce_tmp[1793006]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1793012 'move' coerce_tmp[1793006](1793008 'cast' int(64)[13] coerce_tmp[1793000]))
        val coerce_tmp[1793014]:c_ptr(uint(8))[937423] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1793018 'move' coerce_tmp[1793014](1793016 'deref' call_tmp[1792552]))
        const-val coerce_tmp[1793020]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1793024 'move' coerce_tmp[1793020](1793022 'deref' call_tmp[1792560]))
        (1792570 'move' call_tmp[1792568](1792573 call bufferCopyRemote[172784] coerce_tmp[1793006] coerce_tmp[1793014] coerce_tmp[1793020]))
        val localBuff[1792577]:c_ptr(uint(8))[937423] "dead at end of block" "insert auto destroy"
        (1792579 'move' localBuff[1792577](1793027 call chpl__initCopy[954030] call_tmp[1792568]))
        ref call_tmp[1792583]:_ref(int(64))[936572] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1792585 'move' call_tmp[1792583](1792588 call buffLen[753474] data[1792428]))
        ref call_tmp[1792591]:_ref(int(64))[936572] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1792593 'move' call_tmp[1792591](1792596 call size[753526] data[1792428]))
        ref call_tmp[1792599]:_ref(int(64))[936572] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1792601 'move' call_tmp[1792599](1792604 call cachedNumCodepoints[753604] data[1792428]))
        const-val call_tmp[1792607]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val coerce_tmp[1793033]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1793037 'move' coerce_tmp[1793033](1793035 'deref' call_tmp[1792583]))
        const-val coerce_tmp[1793039]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1793043 'move' coerce_tmp[1793039](1793041 'deref' call_tmp[1792591]))
        const-val coerce_tmp[1793045]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1793049 'move' coerce_tmp[1793045](1793047 'deref' call_tmp[1792599]))
        const-val ret_tmp[1829237]:string[26] "temp"
        (1792612 call chpl_createStringWithOwnedBufferNV[30673] localBuff[1792577] coerce_tmp[1793033] coerce_tmp[1793039] coerce_tmp[1793045] ret_tmp[1829237])
        (1829240 'move' call_tmp[1792607] ret_tmp[1829237])
        (1792617 'move' ret[1792430] call_tmp[1792607])
        gotoReturn _end_chpl__deserialize[1792676] _end_chpl__deserialize[1792676]
      }
    }
    {
      ref call_tmp[1792627]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "maybe param" "reference to a const" "temp"
      (1792629 'move' call_tmp[1792627](1792632 call buff[753500] data[1792428]))
      ref call_tmp[1792635]:_ref(int(64))[936572] "dead after last mention" "maybe param" "reference to a const" "temp"
      (1792637 'move' call_tmp[1792635](1792640 call buffLen[753474] data[1792428]))
      ref call_tmp[1792643]:_ref(int(64))[936572] "dead after last mention" "maybe param" "reference to a const" "temp"
      (1792645 'move' call_tmp[1792643](1792648 call size[753526] data[1792428]))
      ref call_tmp[1792651]:_ref(int(64))[936572] "dead after last mention" "maybe param" "reference to a const" "temp"
      (1792653 'move' call_tmp[1792651](1792656 call cachedNumCodepoints[753604] data[1792428]))
      const-val call_tmp[1792659]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val coerce_tmp[1793056]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1793060 'move' coerce_tmp[1793056](1793058 'deref' call_tmp[1792627]))
      const-val coerce_tmp[1793062]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1793066 'move' coerce_tmp[1793062](1793064 'deref' call_tmp[1792635]))
      const-val coerce_tmp[1793068]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1793072 'move' coerce_tmp[1793068](1793070 'deref' call_tmp[1792643]))
      const-val coerce_tmp[1793074]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1793078 'move' coerce_tmp[1793074](1793076 'deref' call_tmp[1792651]))
      const-val ret_tmp[1829159]:string[26] "temp"
      (1792664 call chpl_createStringWithBorrowedBufferNV[30626] coerce_tmp[1793056] coerce_tmp[1793062] coerce_tmp[1793068] coerce_tmp[1793074] ret_tmp[1829159])
      (1829162 'move' call_tmp[1792659] ret_tmp[1829159])
      (1792669 'move' ret[1792430] call_tmp[1792659])
      gotoReturn _end_chpl__deserialize[1792676] _end_chpl__deserialize[1792676]
    }
    label _end_chpl__deserialize[1792676]
    (1841561 '=' _retArg[1841559] ret[1792430])
    (1841563 return _void[55])
  }
  function _ref(string)[937939].isASCII[31046](const  ref arg this[32649]:_ref(string)[937939]) : bool[10] "inline" "method" "primary method" "resolved" "fn synchronization free"
  {
    val ret[503736]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[598655]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (598658 'move' call_tmp[598655](31049 call numCodepoints[32823] this[32649]))
    const-val call_tmp[598662]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (598665 'move' call_tmp[598662](31053 call numBytes[32807] this[32649]))
    const-val call_tmp[598667]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (598670 'move' call_tmp[598667](31056 call ==[435628] call_tmp[598655] call_tmp[598662]))
    (503741 'move' ret[503736] call_tmp[598667])
    (503738 return ret[503736])
  }
  function _ref(string)[937939].byteIndices[31065](const  ref arg this[32653]:_ref(string)[937939], ref arg _retArg[1829339]:_ref(range(int(64),bounded,false))[1026858]) : void[4] "fn returns via _retArg" "inline" "method" "primary method" "no parens" "resolved" "fn synchronization free"
  {
    const-val ret[503745]:range(int(64),bounded,false)[1026814] "dead after last mention" "RVV" "temp"
    const-val call_tmp[598674]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (598677 'move' call_tmp[598674](31069 call numBytes[32807] this[32653]))
    const-val call_tmp[598679]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (598682 'move' call_tmp[598679](31073 call -[962226] call_tmp[598674]))
    const-val call_tmp[598684]:range(int(64),bounded,false)[1026814] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1831559]:range(int(64),bounded,false)[1026814] "temp"
    (31075 call chpl_build_bounded_range[455137] 0 call_tmp[598679] ret_tmp[1831559])
    (1831562 'move' call_tmp[598684] ret_tmp[1831559])
    (503750 'move' ret[503745] call_tmp[598684])
    (1829341 '=' _retArg[1829339] ret[503745])
    (1829343 return _void[55])
  }
  function _ic__cpIndexLen__ref_string[1122385].advance[1122411](const in arg this[1122413]:_ic__cpIndexLen__ref_string[1122385]) : void[4] "auto ii" "method" "resolved"
  {
    const-val more[1997877]:int(64)[13]
    (1997931 'move' more[1997877](1997928 '.v' this[1122413] more[1122388]))
    const-val tmp[1997892]:bool[10] "temp"
    (1997899 'move' tmp[1997892](1997896 '==' more[1997877] 3))
    if tmp[1997892]
    {
      gotoIterResume _jump_3[1997869] _jump_3[1997869]
    }
    const-val tmp[1997880]:bool[10] "temp"
    (1997887 'move' tmp[1997880](1997884 '==' more[1997877] 2))
    if tmp[1997880]
    {
      gotoIterResume _jump_2[1997859] _jump_2[1997859]
    }
    const-val tmp[1997904]:bool[10] "temp"
    (1997909 'move' tmp[1997904](1997906 '==' more[1997877] -2))
    if tmp[1997904]
    {
      gotoIterResume _jump_break_2[1997861] _jump_break_2[1997861]
    }
    const-val tmp[1997916]:bool[10] "temp"
    (1997923 'move' tmp[1997916](1997920 '==' more[1997877] -3))
    if tmp[1997916]
    {
      gotoIterResume _jump_break_3[1997871] _jump_break_3[1997871]
    }
    val ret[503764]:_ir__cpIndexLen__ref_string[1122391] "dead after last mention" "RVV" "temp"
    const-val call_tmp[598696]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1829437]:string[26] "temp"
    ref tmp[1997147]:_ref(string)[937939] "temp"
    (1997152 'move' tmp[1997147](1997149 '.v' this[1122413] F0_this[1997101]))
    (31114 call localize[32886] tmp[1997147] ret_tmp[1829437])
    (1829440 'move' call_tmp[598696] ret_tmp[1829437])
    val tmp[1997154]:string[26] "temp"
    (540233 'move' tmp[1997154] call_tmp[598696])
    (1997156 '.=' this[1122413] F2_localThis[1997109] tmp[1997154])
    const-val call_tmp[598703]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    ref tmp[1997160]:_ref(string)[937939] "temp"
    (1997165 'move' tmp[1997160](1997162 '.' this[1122413] F2_localThis[1997109]))
    (598706 'move' call_tmp[598703](31127 call isASCII[31046] tmp[1997160]))
    const-val call_tmp[598708]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (598711 'move' call_tmp[598708] call_tmp[598703])
    if call_tmp[598703]
    {
      const-val ret_tmp[1829261]:range(int(64),bounded,false)[1026814] "temp"
      ref tmp[1997167]:_ref(string)[937939] "temp"
      (1997172 'move' tmp[1997167](1997169 '.v' this[1122413] F0_this[1997101]))
      (31178 call byteIndices[31065] tmp[1997167] ret_tmp[1829261])
      val tmp[1997174]:range(int(64),bounded,false)[1026814] "temp"
      (1829264 'move' tmp[1997174] ret_tmp[1829261])
      (1997176 '.=' this[1122413] F4_call_tmp[1997113] tmp[1997174])
      val call_tmp[598720]:_ic_these_range_int64_t_bounded_F[1096703] "dead at end of block" "expr temp" "maybe param" "temp"
      ref tmp[1997180]:_ref(range(int(64),bounded,false))[1026858] "temp"
      (1997185 'move' tmp[1997180](1997182 '.' this[1122413] F4_call_tmp[1997113]))
      (598723 'move' call_tmp[598720](31181 call _getIterator[1095320] tmp[1997180]))
      const-val call_tmp[598727]:_ir_chpl_bytes__ref_string[1108262] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val ret_tmp[1829593]:_ir_chpl_bytes__ref_string[1108262] "temp"
      ref tmp[1997187]:_ref(string)[937939] "temp"
      (1997192 'move' tmp[1997187](1997189 '.v' this[1122413] F0_this[1997101]))
      (31188 call chpl_bytes[33574] tmp[1997187] ret_tmp[1829593])
      (1829596 'move' call_tmp[598727] ret_tmp[1829593])
      val call_tmp[598732]:_ic_chpl_bytes__ref_string[1108256] "dead at end of block" "expr temp" "maybe param" "temp"
      (598735 'move' call_tmp[598732](31189 call _getIterator[1108271] call_tmp[598727]))
      const-val ret_tmp[1833796]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108566] "temp"
      (31146 call _build_tuple[1108524] call_tmp[598720] call_tmp[598732] ret_tmp[1833796])
      val tmp[1997194]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108566] "temp"
      (1833799 'move' tmp[1997194] ret_tmp[1833796])
      (1997196 '.=' this[1122413] F3__iterator[1997111] tmp[1997194])
      val tmp[1997200]:_ic_these_range_int64_t_bounded_F[1096703] "temp"
      const-val tmp[1997206]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108566] "temp"
      (1997211 'move' tmp[1997206](1997208 '.v' this[1122413] F3__iterator[1997111]))
      (1893523 'move' tmp[1997200](1893520 '.v' tmp[1997206] x0[1108562]))
      (1997202 '.=' this[1122413] F5__iterator[1997115] tmp[1997200])
      val tmp[1997213]:_ic_chpl_bytes__ref_string[1108256] "temp"
      const-val tmp[1997219]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108566] "temp"
      (1997224 'move' tmp[1997219](1997221 '.v' this[1122413] F3__iterator[1997111]))
      (1893536 'move' tmp[1997213](1893533 '.v' tmp[1997219] x1[1108564]))
      (1997215 '.=' this[1122413] F6__iterator[1997117] tmp[1997213])
      val tmp[1997226]:_ic_these_range_int64_t_bounded_F[1096703] "temp"
      (1997231 'move' tmp[1997226](1997228 '.v' this[1122413] F5__iterator[1997115]))
      (1893545 call zip1[1096738] tmp[1997226])
      val tmp[1997233]:_ic_chpl_bytes__ref_string[1108256] "temp"
      (1997238 'move' tmp[1997233](1997235 '.v' this[1122413] F6__iterator[1997117]))
      (1893580 call zip1[1108291] tmp[1997233])
      const-val isFinished[1893606]:bool[10] "temp"
      val hasMore[1893605]:bool[10] "temp"
      CForLoop[1893655]
      {
        val tmp[1997240]:_ic_chpl_bytes__ref_string[1108256] "temp"
        (1997245 'move' tmp[1997240](1997242 '.v' this[1122413] F6__iterator[1997117]))
        (1893660 call zip2[1108300] tmp[1997240])
        const-val retTmp[1893663]:int(64)[13] "temp"
        val tmp[1997247]:_ic_chpl_bytes__ref_string[1108256] "temp"
        (1997252 'move' tmp[1997247](1997249 '.v' this[1122413] F6__iterator[1997117]))
        (1893665 'move' retTmp[1893663](1893668 call hasMore[1108327] tmp[1997247]))
        (1893670 'move' hasMore[1893605](1893672 'cast' bool[10] retTmp[1893663]))
        (1893675 'move' isFinished[1893606](1893677 '!' hasMore[1893605]))
        if isFinished[1893606]
        {
          (1893681 'chpl_error' c"zippered iterations have non-equal lengths")
        }
        val tmp[1997254]:_ic_chpl_bytes__ref_string[1108256] "temp"
        (1997259 'move' tmp[1997254](1997256 '.v' this[1122413] F6__iterator[1997117]))
        (1893685 'move' _index[1893700](1893688 call getValue[1108336] tmp[1997254]))
        val tmp[1997261]:_ic_these_range_int64_t_bounded_F[1096703] "temp"
        (1997266 'move' tmp[1997261](1997263 '.v' this[1122413] F5__iterator[1997115]))
        (1893692 call zip2[1096747] tmp[1997261])
        val tmp[1997268]:_ic_these_range_int64_t_bounded_F[1096703] "temp"
        (1997273 'move' tmp[1997268](1997270 '.v' this[1122413] F5__iterator[1997115]))
        (1893695 'move' _index[1893706](1893698 call getValue[1096783] tmp[1997268]))
        val _index[1893700]:uint(8)[100] "temp"
        val tmp[1997275]:(int(64),uint(8))[1111040] "temp"
        (1997280 'move' tmp[1997275](1997277 '.v' this[1122413] F7__indexOfInterest[1997119]))
        (1893702 '.=' tmp[1997275] x1[1111038] _index[1893700])
        (1997282 '.=' this[1122413] F7__indexOfInterest[1997119] tmp[1997275])
        val _index[1893706]:int(64)[13] "temp"
        val tmp[1997286]:(int(64),uint(8))[1111040] "temp"
        (1997291 'move' tmp[1997286](1997288 '.v' this[1122413] F7__indexOfInterest[1997119]))
        (1893708 '.=' tmp[1997286] x0[1111036] _index[1893706])
        (1997293 '.=' this[1122413] F7__indexOfInterest[1997119] tmp[1997286])
        1
        const-val i[1893713]:int(64)[13] "const" "index var" "insert auto destroy"
        const-val tmp[1997297]:(int(64),uint(8))[1111040] "temp"
        (1997302 'move' tmp[1997297](1997299 '.v' this[1122413] F7__indexOfInterest[1997119]))
        (1893715 'move' i[1893713](1893717 '.v' tmp[1997297] x0[1111036]))
        const-val b[1893720]:uint(8)[100] "const" "index var" "insert auto destroy"
        const-val tmp[1997304]:(int(64),uint(8))[1111040] "temp"
        (1997309 'move' tmp[1997304](1997306 '.v' this[1122413] F7__indexOfInterest[1997119]))
        (1893722 'move' b[1893720](1893724 '.v' tmp[1997304] x1[1111038]))
        const-val yret[1893727]:(int(32),byteIndex,int(64))[1122142] "dead after last mention" "YVV" "temp"
        val call_tmp[1893729]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[1893731]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
        (1893733 'move' call_tmp[1893731](1893735 'cast' int(32)[95] b[1893720]))
        ref tmp[1997311]:_ref(byteIndex)[948759] "temp"
        (1997316 'move' tmp[1997311](1997313 '.' this[1122413] F9_ret_tmp[1997123]))
        (1893743 call _cast[39483] i[1893713] tmp[1997311])
        val tmp[1997318]:byteIndex[28170] "temp"
        const-val tmp[1997324]:byteIndex[28170] "temp"
        (1997329 'move' tmp[1997324](1997326 '.v' this[1122413] F9_ret_tmp[1997123]))
        (1893746 'move' tmp[1997318] tmp[1997324])
        (1997320 '.=' this[1122413] F8_call_tmp[1997121] tmp[1997318])
        ref tmp[1997331]:_ref(byteIndex)[948759] "temp"
        (1997336 'move' tmp[1997331](1997333 '.' this[1122413] F8_call_tmp[1997121]))
        ref tmp[1997338]:_ref((int(32),byteIndex,int(64)))[1122214] "temp"
        (1997343 'move' tmp[1997338](1997340 '.' this[1122413] F10_ret_tmp[1997125]))
        (1893754 call _build_tuple[1122092] call_tmp[1893731] tmp[1997331] 1 tmp[1997338])
        val tmp[1997345]:(int(32),byteIndex,int(64))[1122142] "temp"
        const-val tmp[1997351]:(int(32),byteIndex,int(64))[1122142] "temp"
        (1997356 'move' tmp[1997351](1997353 '.v' this[1122413] F10_ret_tmp[1997125]))
        (1893759 'move' tmp[1997345] tmp[1997351])
        (1997347 '.=' this[1122413] F18_call_tmp[1997141] tmp[1997345])
        const-val tmp[1997358]:(int(32),byteIndex,int(64))[1122142] "temp"
        (1997363 'move' tmp[1997358](1997360 '.v' this[1122413] F18_call_tmp[1997141]))
        (1893762 'move' yret[1893727] tmp[1997358])
        val tmp[1997369]:(int(32),byteIndex,int(64))[1122142] "temp"
        (1997374 'move' tmp[1997369](1997371 '.v' this[1122413] F18_call_tmp[1997141]))
        (1997366 '.=' this[1122413] value[1997145] tmp[1997369])
        (1997853 '.=' this[1122413] more[1122388] 2)
        gotoIterEnd _end[1997851] _end[1997851]
        label _jump_break_2[1997861]
        ref moreRef1[1893848]:_ref(int(64))[936572] "temp"
        ref tmp[1997376]:_ref(_ic_these_range_int64_t_bounded_F)[1096846] "temp"
        (1997381 'move' tmp[1997376](1997378 '.' this[1122413] F5__iterator[1997115]))
        (1893850 'move' moreRef1[1893848](1893852 '.' tmp[1997376] more[1096706]))
        const-val moreVal1[1893855]:int(64)[13] "const" "temp"
        (1893857 '=' moreVal1[1893855] moreRef1[1893848])
        const-val moreValNeg1[1893860]:int(64)[13] "const" "temp"
        (1893862 'move' moreValNeg1[1893860](1893864 'u-' moreVal1[1893855]))
        (1893866 '=' moreRef1[1893848] moreValNeg1[1893860])
        val tmp[1997383]:_ic_these_range_int64_t_bounded_F[1096703] "temp"
        (1997388 'move' tmp[1997383](1997385 '.v' this[1122413] F5__iterator[1997115]))
        (1893870 call advance[1096729] tmp[1997383])
        ref moreRef2[1893872]:_ref(int(64))[936572] "temp"
        ref tmp[1997390]:_ref(_ic_chpl_bytes__ref_string)[1108399] "temp"
        (1997395 'move' tmp[1997390](1997392 '.' this[1122413] F6__iterator[1997117]))
        (1893874 'move' moreRef2[1893872](1893876 '.' tmp[1997390] more[1108259]))
        const-val moreVal2[1893879]:int(64)[13] "const" "temp"
        (1893881 '=' moreVal2[1893879] moreRef2[1893872])
        const-val moreValNeg2[1893884]:int(64)[13] "const" "temp"
        (1893886 'move' moreValNeg2[1893884](1893888 'u-' moreVal2[1893879]))
        (1893890 '=' moreRef2[1893872] moreValNeg2[1893884])
        val tmp[1997397]:_ic_chpl_bytes__ref_string[1108256] "temp"
        (1997402 'move' tmp[1997397](1997399 '.v' this[1122413] F6__iterator[1997117]))
        (1893894 call advance[1108282] tmp[1997397])
        ref tmp[1997404]:_ref(byteIndex)[948759] "temp"
        (1997409 'move' tmp[1997404](1997406 '.' this[1122413] F8_call_tmp[1997121]))
        (1893770 call chpl__autoDestroy[1461793] tmp[1997404])
        ref tmp[1997411]:_ref((_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string))[1108674] "temp"
        (1997416 'move' tmp[1997411](1997413 '.' this[1122413] F3__iterator[1997111]))
        (1893773 call _freeIterator[1108724] tmp[1997411])
        ref tmp[1997418]:_ref((_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string))[1108674] "temp"
        (1997423 'move' tmp[1997418](1997420 '.' this[1122413] F3__iterator[1997111]))
        (1893776 call chpl__autoDestroy[1541417] tmp[1997418])
        const-val tmp[1997425]:range(int(64),bounded,false)[1026814] "temp"
        (1997430 'move' tmp[1997425](1997427 '.v' this[1122413] F4_call_tmp[1997113]))
        (1893779 call chpl__autoDestroy[1534375] tmp[1997425])
        ref tmp[1997432]:_ref(string)[937939] "temp"
        (1997437 'move' tmp[1997432](1997434 '.' this[1122413] F2_localThis[1997109]))
        (1893782 call chpl__autoDestroy[1461530] tmp[1997432])
        gotoReturn _end_cpIndexLen[1813879] _end_cpIndexLen[1813879]
        label _jump_2[1997859]
        ref tmp[1997439]:_ref(byteIndex)[948759] "temp"
        (1997444 'move' tmp[1997439](1997441 '.' this[1122413] F8_call_tmp[1997121]))
        (1893788 call chpl__autoDestroy[1461793] tmp[1997439])
        val tmp[1997446]:_ic_these_range_int64_t_bounded_F[1096703] "temp"
        (1997451 'move' tmp[1997446](1997448 '.v' this[1122413] F5__iterator[1997115]))
        (1893792 call zip3[1096756] tmp[1997446])
        val tmp[1997453]:_ic_chpl_bytes__ref_string[1108256] "temp"
        (1997458 'move' tmp[1997453](1997455 '.v' this[1122413] F6__iterator[1997117]))
        (1893796 call zip3[1108309] tmp[1997453])
        {
          val tmp[1997460]:_ic_these_range_int64_t_bounded_F[1096703] "temp"
          (1997465 'move' tmp[1997460](1997462 '.v' this[1122413] F5__iterator[1997115]))
          (1893555 call init[1096792] tmp[1997460])
          val tmp[1997467]:_ic_chpl_bytes__ref_string[1108256] "temp"
          (1997472 'move' tmp[1997467](1997469 '.v' this[1122413] F6__iterator[1997117]))
          (1893590 call init[1108345] tmp[1997467])
        }
        {
          val tmp[1997474]:_ic_these_range_int64_t_bounded_F[1096703] "temp"
          (1997479 'move' tmp[1997474](1997476 '.v' this[1122413] F5__iterator[1997115]))
          (1893571 call hasMore[1096774] tmp[1997474])
        }
        {
          val tmp[1997481]:_ic_these_range_int64_t_bounded_F[1096703] "temp"
          (1997486 'move' tmp[1997481](1997483 '.v' this[1122413] F5__iterator[1997115]))
          (1893559 call incr[1096801] tmp[1997481])
          val tmp[1997488]:_ic_chpl_bytes__ref_string[1108256] "temp"
          (1997493 'move' tmp[1997488](1997490 '.v' this[1122413] F6__iterator[1997117]))
          (1893594 call incr[1108354] tmp[1997488])
        }
      }
      const-val retTmp[1893642]:int(64)[13] "temp"
      val tmp[1997495]:_ic_chpl_bytes__ref_string[1108256] "temp"
      (1997500 'move' tmp[1997495](1997497 '.v' this[1122413] F6__iterator[1997117]))
      (1893644 'move' retTmp[1893642](1893639 call hasMore[1108327] tmp[1997495]))
      (1893649 'move' hasMore[1893605](1893646 'cast' bool[10] retTmp[1893642]))
      if hasMore[1893605]
      {
        (1893634 'chpl_error' c"zippered iterations have non-equal lengths")
      }
      val tmp[1997502]:_ic_chpl_bytes__ref_string[1108256] "temp"
      (1997507 'move' tmp[1997502](1997504 '.v' this[1122413] F6__iterator[1997117]))
      (1893602 call zip4[1108318] tmp[1997502])
      val tmp[1997509]:_ic_these_range_int64_t_bounded_F[1096703] "temp"
      (1997514 'move' tmp[1997509](1997511 '.v' this[1122413] F5__iterator[1997115]))
      (1893567 call zip4[1096765] tmp[1997509])
      ref tmp[1997516]:_ref((_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string))[1108674] "temp"
      (1997521 'move' tmp[1997516](1997518 '.' this[1122413] F3__iterator[1997111]))
      (1841795 call _freeIterator[1108724] tmp[1997516])
      ref tmp[1997523]:_ref((_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string))[1108674] "temp"
      (1997528 'move' tmp[1997523](1997525 '.' this[1122413] F3__iterator[1997111]))
      (1841797 call chpl__autoDestroy[1541417] tmp[1997523])
      const-val tmp[1997530]:range(int(64),bounded,false)[1026814] "temp"
      (1997535 'move' tmp[1997530](1997532 '.v' this[1122413] F4_call_tmp[1997113]))
      (1841800 call chpl__autoDestroy[1534375] tmp[1997530])
    }
    {
      const-val call_tmp[598762]:int(64)[13] "dead at end of block" "maybe param" "temp"
      ref tmp[1997537]:_ref(byteIndex)[948759] "temp"
      (1997542 'move' tmp[1997537](1997539 '.v' this[1122413] F1_start[1997105]))
      (598765 'move' call_tmp[598762](31232 call _cast[39462] tmp[1997537]))
      val tmp[1997544]:int(64)[13] "temp"
      (540235 'move' tmp[1997544] call_tmp[598762])
      (1997546 '.=' this[1122413] F11_i[1997127] tmp[1997544])
      const-val call_tmp[598767]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (598770 'move' call_tmp[598767](31241 call >[437672] call_tmp[598762] 0))
      const-val call_tmp[598772]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (598775 'move' call_tmp[598772] call_tmp[598767])
      if call_tmp[598767]
      {
        val tmp[31269]:bool[10] "dead after last mention" "temp"
        const-val tmp[417366]:bool[10] "dead after last mention" "maybe param" "temp"
        ref call_tmp[598779]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
        ref tmp[1997550]:_ref(string)[937939] "temp"
        (1997555 'move' tmp[1997550](1997552 '.' this[1122413] F2_localThis[1997109]))
        (598782 'move' call_tmp[598779](31310 call buffLen[757886] tmp[1997550]))
        const-val coerce_tmp[1122224]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1122228 'move' coerce_tmp[1122224](1122226 'deref' call_tmp[598779]))
        const-val tmp[1997557]:int(64)[13] "temp"
        (1997562 'move' tmp[1997557](1997559 '.v' this[1122413] F11_i[1997127]))
        (417377 'move' tmp[417366](31307 call <[437452] tmp[1997557] coerce_tmp[1122224]))
        val tmp[552843]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        const-val tmp[552844]:bool[10] "dead after last mention" "maybe param" "temp"
        const-val call_tmp[598789]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (598792 'move' call_tmp[598789] tmp[417366])
        (552849 'move' tmp[552844] tmp[417366])
        if tmp[417366]
        {
          const-val tmp[552851]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
          ref call_tmp[598796]:_ref(uint(8))[936908] "dead after last mention" "maybe param" "temp"
          ref _this_tmp_[1122235]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "temp"
          ref tmp[1997564]:_ref(string)[937939] "temp"
          (1997569 'move' tmp[1997564](1997566 '.' this[1122413] F2_localThis[1997109]))
          (1122237 'move' _this_tmp_[1122235](31318 call buff[757964] tmp[1997564]))
          val coerce_tmp[1122242]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1122246 'move' coerce_tmp[1122242](1122244 'deref' _this_tmp_[1122235]))
          const-val tmp[1997571]:int(64)[13] "temp"
          (1997576 'move' tmp[1997571](1997573 '.v' this[1122413] F11_i[1997127]))
          (598799 'move' call_tmp[598796](31321 call this[954091] coerce_tmp[1122242] tmp[1997571]))
          const-val call_tmp[598801]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[1122249]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1122253 'move' coerce_tmp[1122249](1122251 'deref' call_tmp[598796]))
          (598804 'move' call_tmp[598801](31316 call isInitialByte[181528] coerce_tmp[1122249]))
          const-val call_tmp[598806]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (598809 'move' call_tmp[598806](31314 call ![7494] call_tmp[598801]))
          (552853 'move' tmp[552851] call_tmp[598806])
          (552858 'move' tmp[552843] call_tmp[598806])
        }
        {
          (552863 'move' tmp[552843] 0)
        }
        (31323 'move' tmp[31269] tmp[552843])
        WhileDo[31274]
        {
          ref tmp[1997578]:_ref(int(64))[936572] "temp"
          (1997583 'move' tmp[1997578](1997580 '.' this[1122413] F11_i[1997127]))
          (31266 call +=[451315] tmp[1997578] 1)
          const-val tmp[417345]:bool[10] "dead after last mention" "maybe param" "temp"
          ref call_tmp[598813]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
          ref tmp[1997585]:_ref(string)[937939] "temp"
          (1997590 'move' tmp[1997585](1997587 '.' this[1122413] F2_localThis[1997109]))
          (598816 'move' call_tmp[598813](31285 call buffLen[757886] tmp[1997585]))
          const-val coerce_tmp[1122259]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1122263 'move' coerce_tmp[1122259](1122261 'deref' call_tmp[598813]))
          const-val tmp[1997592]:int(64)[13] "temp"
          (1997597 'move' tmp[1997592](1997594 '.v' this[1122413] F11_i[1997127]))
          (417356 'move' tmp[417345](31282 call <[437452] tmp[1997592] coerce_tmp[1122259]))
          val tmp[552870]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
          const-val tmp[552871]:bool[10] "dead after last mention" "maybe param" "temp"
          const-val call_tmp[598823]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (598826 'move' call_tmp[598823] tmp[417345])
          (552876 'move' tmp[552871] tmp[417345])
          if tmp[417345]
          {
            const-val tmp[552878]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
            ref call_tmp[598830]:_ref(uint(8))[936908] "dead after last mention" "maybe param" "temp"
            ref _this_tmp_[1122270]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "temp"
            ref tmp[1997599]:_ref(string)[937939] "temp"
            (1997604 'move' tmp[1997599](1997601 '.' this[1122413] F2_localThis[1997109]))
            (1122272 'move' _this_tmp_[1122270](31293 call buff[757964] tmp[1997599]))
            val coerce_tmp[1122277]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (1122281 'move' coerce_tmp[1122277](1122279 'deref' _this_tmp_[1122270]))
            const-val tmp[1997606]:int(64)[13] "temp"
            (1997611 'move' tmp[1997606](1997608 '.v' this[1122413] F11_i[1997127]))
            (598833 'move' call_tmp[598830](31296 call this[954091] coerce_tmp[1122277] tmp[1997606]))
            const-val call_tmp[598835]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val coerce_tmp[1122284]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (1122288 'move' coerce_tmp[1122284](1122286 'deref' call_tmp[598830]))
            (598838 'move' call_tmp[598835](31291 call isInitialByte[181528] coerce_tmp[1122284]))
            const-val call_tmp[598840]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (598843 'move' call_tmp[598840](31289 call ![7494] call_tmp[598835]))
            (552880 'move' tmp[552878] call_tmp[598840])
            (552885 'move' tmp[552870] call_tmp[598840])
          }
          {
            (552890 'move' tmp[552870] 0)
          }
          (31298 'move' tmp[31269] tmp[552870])
          tmp[31269]
        }
      }
      val tmp[31403]:bool[10] "dead after last mention" "temp"
      ref call_tmp[598847]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
      ref tmp[1997613]:_ref(string)[937939] "temp"
      (1997618 'move' tmp[1997613](1997615 '.' this[1122413] F2_localThis[1997109]))
      (598850 'move' call_tmp[598847](31430 call buffLen[757886] tmp[1997613]))
      const-val call_tmp[598852]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1122293]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1122297 'move' coerce_tmp[1122293](1122295 'deref' call_tmp[598847]))
      const-val tmp[1997620]:int(64)[13] "temp"
      (1997625 'move' tmp[1997620](1997622 '.v' this[1122413] F11_i[1997127]))
      (598855 'move' call_tmp[598852](31427 call <[437452] tmp[1997620] coerce_tmp[1122293]))
      (31433 'move' tmp[31403] call_tmp[598852])
      WhileDo[31408]
      {
        ref call_tmp[598859]:_ref(c_ptr(uint(8)))[937432] "dead at end of block" "maybe param" "temp"
        ref tmp[1997627]:_ref(string)[937939] "temp"
        (1997632 'move' tmp[1997627](1997629 '.' this[1122413] F2_localThis[1997109]))
        (598862 'move' call_tmp[598859](31346 call buff[757964] tmp[1997627]))
        ref call_tmp[598866]:_ref(int(64))[936572] "dead at end of block" "maybe param" "temp"
        ref tmp[1997634]:_ref(string)[937939] "temp"
        (1997639 'move' tmp[1997634](1997636 '.' this[1122413] F2_localThis[1997109]))
        (598869 'move' call_tmp[598866](31352 call buffLen[757886] tmp[1997634]))
        const-val call_tmp[598871]:(syserr,int(32),int(32))[964620] "dead at end of block" "maybe param" "temp"
        val coerce_tmp[1122302]:c_ptr(uint(8))[937423] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1122306 'move' coerce_tmp[1122302](1122304 'deref' call_tmp[598859]))
        const-val coerce_tmp[1122308]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1122312 'move' coerce_tmp[1122308](1122310 'deref' call_tmp[598866]))
        const-val tmp[1997641]:int(64)[13] "temp"
        (1997646 'move' tmp[1997641](1997643 '.v' this[1122413] F11_i[1997127]))
        ref tmp[1997648]:_ref((syserr,int(32),int(32)))[964727] "temp"
        (1997653 'move' tmp[1997648](1997650 '.' this[1122413] F12_ret_tmp[1997129]))
        (31360 call decodeHelp[174406] coerce_tmp[1122302] coerce_tmp[1122308] tmp[1997641] 1 tmp[1997648])
        const-val tmp[1997655]:(syserr,int(32),int(32))[964620] "temp"
        (1997660 'move' tmp[1997655](1997657 '.v' this[1122413] F12_ret_tmp[1997129]))
        (1831310 'move' call_tmp[598871] tmp[1997655])
        const tmp[1997662]:(syserr,int(32),int(32))[964620] "temp"
        (540237 'move' tmp[1997662] call_tmp[598871])
        (1997664 '.=' this[1122413] F13_tmp[1997131] tmp[1997662])
        1
        ref call_tmp[598876]:_ref(syserr)[948832] "dead at end of block" "maybe param" "reference to a const" "temp"
        ref tmp[1997668]:_ref((syserr,int(32),int(32)))[964727] "temp"
        (1997673 'move' tmp[1997668](1997670 '.' this[1122413] F13_tmp[1997131]))
        (598879 'move' call_tmp[598876](1122322 '.' tmp[1997668] x0[964614]))
        const-val decodeRet[31337]:syserr[223584] "dead at end of block" "const" "insert auto destroy"
        const-val coerce_tmp[1122327]:syserr[223584] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1122331 'move' coerce_tmp[1122327](1122329 'deref' call_tmp[598876]))
        (540239 'move' decodeRet[31337](1122325 call chpl__initCopy[964485] coerce_tmp[1122327]))
        ref call_tmp[598881]:_ref(int(32))[936626] "dead at end of block" "maybe param" "reference to a const" "temp"
        ref tmp[1997675]:_ref((syserr,int(32),int(32)))[964727] "temp"
        (1997680 'move' tmp[1997675](1997677 '.' this[1122413] F13_tmp[1997131]))
        (598884 'move' call_tmp[598881](1122336 '.' tmp[1997675] x1[964616]))
        const-val cp[31339]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
        const-val coerce_tmp[1122341]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1122345 'move' coerce_tmp[1122341](1122343 'deref' call_tmp[598881]))
        (540241 'move' cp[31339](1122339 call chpl__initCopy[964757] coerce_tmp[1122341]))
        ref call_tmp[598886]:_ref(int(32))[936626] "dead at end of block" "maybe param" "reference to a const" "temp"
        ref tmp[1997682]:_ref((syserr,int(32),int(32)))[964727] "temp"
        (1997687 'move' tmp[1997682](1997684 '.' this[1122413] F13_tmp[1997131]))
        (598889 'move' call_tmp[598886](1122350 '.' tmp[1997682] x2[964618]))
        const-val coerce_tmp[1122355]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1122359 'move' coerce_tmp[1122355](1122357 'deref' call_tmp[598886]))
        const tmp[1997689]:int(32)[95] "temp"
        (540243 'move' tmp[1997689](1122353 call chpl__initCopy[964757] coerce_tmp[1122355]))
        (1997691 '.=' this[1122413] F14_nBytes[1997133] tmp[1997689])
        const-val yret[503775]:(int(32),byteIndex,int(64))[1122142] "dead after last mention" "YVV" "temp"
        val call_tmp[598891]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[598896]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
        (598899 'move' call_tmp[598896] cp[31339])
        const-val tmp[1997695]:int(64)[13] "temp"
        (1997700 'move' tmp[1997695](1997697 '.v' this[1122413] F11_i[1997127]))
        ref tmp[1997702]:_ref(byteIndex)[948759] "temp"
        (1997707 'move' tmp[1997702](1997704 '.' this[1122413] F16_ret_tmp[1997137]))
        (31387 call _cast[39483] tmp[1997695] tmp[1997702])
        val tmp[1997709]:byteIndex[28170] "temp"
        const-val tmp[1997715]:byteIndex[28170] "temp"
        (1997720 'move' tmp[1997715](1997717 '.v' this[1122413] F16_ret_tmp[1997137]))
        (1830400 'move' tmp[1997709] tmp[1997715])
        (1997711 '.=' this[1122413] F15_call_tmp[1997135] tmp[1997709])
        const-val call_tmp[598906]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val tmp[1997722]:int(32)[95] "temp"
        (1997727 'move' tmp[1997722](1997724 '.v' this[1122413] F14_nBytes[1997133]))
        (598909 'move' call_tmp[598906](31392 'cast' int(64)[13] tmp[1997722]))
        ref tmp[1997729]:_ref(byteIndex)[948759] "temp"
        (1997734 'move' tmp[1997729](1997731 '.' this[1122413] F15_call_tmp[1997135]))
        ref tmp[1997736]:_ref((int(32),byteIndex,int(64)))[1122214] "temp"
        (1997741 'move' tmp[1997736](1997738 '.' this[1122413] F17_ret_tmp[1997139]))
        (31394 call _build_tuple[1122092] cp[31339] tmp[1997729] call_tmp[598906] tmp[1997736])
        val tmp[1997743]:(int(32),byteIndex,int(64))[1122142] "temp"
        const-val tmp[1997749]:(int(32),byteIndex,int(64))[1122142] "temp"
        (1997754 'move' tmp[1997749](1997751 '.v' this[1122413] F17_ret_tmp[1997139]))
        (1834105 'move' tmp[1997743] tmp[1997749])
        (1997745 '.=' this[1122413] F19_call_tmp[1997143] tmp[1997743])
        const-val tmp[1997756]:(int(32),byteIndex,int(64))[1122142] "temp"
        (1997761 'move' tmp[1997756](1997758 '.v' this[1122413] F19_call_tmp[1997143]))
        (503778 'move' yret[503775] tmp[1997756])
        val tmp[1997767]:(int(32),byteIndex,int(64))[1122142] "temp"
        (1997772 'move' tmp[1997767](1997769 '.v' this[1122413] F19_call_tmp[1997143]))
        (1997764 '.=' this[1122413] value[1997145] tmp[1997767])
        (1997863 '.=' this[1122413] more[1122388] 3)
        gotoIterEnd _end[1997851] _end[1997851]
        label _jump_break_3[1997871]
        ref tmp[1997774]:_ref(byteIndex)[948759] "temp"
        (1997779 'move' tmp[1997774](1997776 '.' this[1122413] F15_call_tmp[1997135]))
        (1841803 call chpl__autoDestroy[1461793] tmp[1997774])
        ref tmp[1997781]:_ref((syserr,int(32),int(32)))[964727] "temp"
        (1997786 'move' tmp[1997781](1997783 '.' this[1122413] F13_tmp[1997131]))
        (1841806 call chpl__autoDestroy[1465403] tmp[1997781])
        ref tmp[1997788]:_ref(string)[937939] "temp"
        (1997793 'move' tmp[1997788](1997790 '.' this[1122413] F2_localThis[1997109]))
        (1841809 call chpl__autoDestroy[1461530] tmp[1997788])
        gotoReturn _end_cpIndexLen[1813879] _end_cpIndexLen[1813879]
        label _jump_3[1997869]
        ref tmp[1997795]:_ref(byteIndex)[948759] "temp"
        (1997800 'move' tmp[1997795](1997797 '.' this[1122413] F15_call_tmp[1997135]))
        (1841812 call chpl__autoDestroy[1461793] tmp[1997795])
        const-val coerce_tmp[1122367]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        const-val tmp[1997802]:int(32)[95] "temp"
        (1997807 'move' tmp[1997802](1997804 '.v' this[1122413] F14_nBytes[1997133]))
        (1122373 'move' coerce_tmp[1122367](1122369 'cast' int(64)[13] tmp[1997802]))
        ref tmp[1997809]:_ref(int(64))[936572] "temp"
        (1997814 'move' tmp[1997809](1997811 '.' this[1122413] F11_i[1997127]))
        (31400 call +=[451315] tmp[1997809] coerce_tmp[1122367])
        ref tmp[1997816]:_ref((syserr,int(32),int(32)))[964727] "temp"
        (1997821 'move' tmp[1997816](1997818 '.' this[1122413] F13_tmp[1997131]))
        (1841816 call chpl__autoDestroy[1465403] tmp[1997816])
        ref call_tmp[598918]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
        ref tmp[1997823]:_ref(string)[937939] "temp"
        (1997828 'move' tmp[1997823](1997825 '.' this[1122413] F2_localThis[1997109]))
        (598921 'move' call_tmp[598918](31417 call buffLen[757886] tmp[1997823]))
        const-val call_tmp[598923]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1122377]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1122381 'move' coerce_tmp[1122377](1122379 'deref' call_tmp[598918]))
        const-val tmp[1997830]:int(64)[13] "temp"
        (1997835 'move' tmp[1997830](1997832 '.v' this[1122413] F11_i[1997127]))
        (598926 'move' call_tmp[598923](31414 call <[437452] tmp[1997830] coerce_tmp[1122377]))
        (31420 'move' tmp[31403] call_tmp[598923])
        tmp[31403]
      }
    }
    ref tmp[1997837]:_ref(string)[937939] "temp"
    (1997842 'move' tmp[1997837](1997839 '.' this[1122413] F2_localThis[1997109]))
    (1841819 call chpl__autoDestroy[1461530] tmp[1997837])
    label _end_cpIndexLen[1813879]
    (1997873 '.=' this[1122413] more[1122388] 0)
    label _end[1997851]
    (1997934 return _void[55])
  }
  function _ic__cpIndexLen__ref_string[1122385].zip1[1122420](const in arg this[1122422]:_ic__cpIndexLen__ref_string[1122385]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1997844 call advance[1122411] this[1122422])
    (1122427 return _void[55])
  }
  function _ic__cpIndexLen__ref_string[1122385].zip2[1122429](const in arg this[1122431]:_ic__cpIndexLen__ref_string[1122385]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1122436 return _void[55])
  }
  function _ic__cpIndexLen__ref_string[1122385].zip3[1122438](const in arg this[1122440]:_ic__cpIndexLen__ref_string[1122385]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1997847 call advance[1122411] this[1122440])
    (1122445 return _void[55])
  }
  function _ic__cpIndexLen__ref_string[1122385].zip4[1122447](const in arg this[1122449]:_ic__cpIndexLen__ref_string[1122385]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1122454 return _void[55])
  }
  function _ic__cpIndexLen__ref_string[1122385].hasMore[1122456](const in arg this[1122458]:_ic__cpIndexLen__ref_string[1122385]) : int(64)[13] "auto ii" "inline" "method" "resolved"
  {
    val tmp[1997937]:int(64)[13] "temp"
    (1997942 'move' tmp[1997937](1997939 '.v' this[1122458] more[1122388]))
    (1997944 return tmp[1997937])
  }
  function _ic__cpIndexLen__ref_string[1122385].getValue[1122465](const in arg this[1122467]:_ic__cpIndexLen__ref_string[1122385]) : (int(32),byteIndex,int(64))[1122142] "auto ii" "inline" "method" "resolved"
  {
    val tmp[1997947]:(int(32),byteIndex,int(64))[1122142] "temp"
    (1997952 'move' tmp[1997947](1997949 '.v' this[1122467] value[1997145]))
    (1997954 return tmp[1997947])
  }
  function _ref(string)[937939]._cpIndexLen[31106](const  ref arg this[32661]:_ref(string)[937939], const  ref arg start[31103]:byteIndex[28170], ref arg _retArg[1829369]:_ref(_ir__cpIndexLen__ref_string)[1122502]) : void[4] "fn returns via _retArg" "inline" "iterator fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _ir[1997962]:_ir__cpIndexLen__ref_string[1122391] "temp"
    (1997964 '.=' _ir[1997962] F0_this[1997103] this[32661])
    (1997968 '.=' _ir[1997962] F1_start[1997107] start[31103])
    (1997972 '=' _retArg[1829369] _ir[1997962])
    (1997975 return _void[55])
  }
  function _ic__cpIndexLen__ref_string[1122385].init[1122474](const in arg this[1122476]:_ic__cpIndexLen__ref_string[1122385]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1997957 return _void[55])
  }
  function _ic__cpIndexLen__ref_string[1122385].incr[1122483](const in arg this[1122485]:_ic__cpIndexLen__ref_string[1122385]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1997960 return _void[55])
  }
  type _ic__cpIndexLen__ref_string[1122385] val super[1122386]:object[22] "super class" val more[1122388]:int(64)[13] ref F0_this[1997101]:_ref(string)[937939] ref F1_start[1997105]:_ref(byteIndex)[948759] val F2_localThis[1997109]:string[26] val F3__iterator[1997111]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108566] val F4_call_tmp[1997113]:range(int(64),bounded,false)[1026814] val F5__iterator[1997115]:_ic_these_range_int64_t_bounded_F[1096703] val F6__iterator[1997117]:_ic_chpl_bytes__ref_string[1108256] val F7__indexOfInterest[1997119]:(int(64),uint(8))[1111040] val F8_call_tmp[1997121]:byteIndex[28170] const-val F9_ret_tmp[1997123]:byteIndex[28170] const-val F10_ret_tmp[1997125]:(int(32),byteIndex,int(64))[1122142] val F11_i[1997127]:int(64)[13] const-val F12_ret_tmp[1997129]:(syserr,int(32),int(32))[964620] const F13_tmp[1997131]:(syserr,int(32),int(32))[964620] const F14_nBytes[1997133]:int(32)[95] val F15_call_tmp[1997135]:byteIndex[28170] const-val F16_ret_tmp[1997137]:byteIndex[28170] const-val F17_ret_tmp[1997139]:(int(32),byteIndex,int(64))[1122142] val F18_call_tmp[1997141]:(int(32),byteIndex,int(64))[1122142] val F19_call_tmp[1997143]:(int(32),byteIndex,int(64))[1122142] val value[1997145]:(int(32),byteIndex,int(64))[1122142]
  type _ir__cpIndexLen__ref_string[1122391] ref F0_this[1997103]:_ref(string)[937939] ref F1_start[1997107]:_ref(byteIndex)[948759]
  function _getIterator[1122400](const  ref arg ir[1122402]:_ir__cpIndexLen__ref_string[1122391]) : _ic__cpIndexLen__ref_string[1122385] "auto ii" "inline" "resolved" "unsafe"
  {
    val ret[1122509]:_ic__cpIndexLen__ref_string[1122385] "dead after last mention" "RVV" "temp"
    val _ic_[1122392]:_ic__cpIndexLen__ref_string[1122385] "dead after last mention" "temp"
    const-val call_tmp[1122516]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1122519 'move' call_tmp[1122516](1122531 'sizeof_bundle' _ic__cpIndexLen__ref_string[1122385]))
    const-val cast_tmp[1122534]:c_void_ptr[149] "dead after last mention" "temp"
    (1122536 'move' cast_tmp[1122534](1122397 call chpl_here_alloc[187742] call_tmp[1122516] 33))
    (1122405 'move' _ic_[1122392](1122538 'cast' _ic__cpIndexLen__ref_string[1122385] cast_tmp[1122534]))
    (1122407 'setcid' _ic_[1122392])
    (1122514 'move' ret[1122509] _ic_[1122392])
    (1997978 '.=' ret[1122509] more[1122388] 1)
    ref tmp[1997982]:_ref(string)[937939] "temp"
    (1997987 'move' tmp[1997982](1997983 '.v' ir[1122402] F0_this[1997103]))
    (1997989 '.=' ret[1122509] F0_this[1997101] tmp[1997982])
    ref tmp[1997993]:_ref(byteIndex)[948759] "temp"
    (1997998 'move' tmp[1997993](1997994 '.v' ir[1122402] F1_start[1997107]))
    (1998000 '.=' ret[1122509] F1_start[1997105] tmp[1997993])
    (1122511 return ret[1122509])
  }
  function _ref(string)[937939]._cpIndexLen_default_start[1122031](const  ref arg this[1122034]:_ref(string)[937939], ref arg _retArg[1834090]:_ref(byteIndex)[948759]) : void[4] "compiler generated" "default actual function" "fn returns via _retArg" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved"
  {
    const-val ret[1122037]:byteIndex[28170] "dead after last mention" "RVV" "maybe param" "temp"
    const-val start[1122042]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    const-val ret_tmp[1830427]:byteIndex[28170] "temp"
    (1122046 call _cast[39483] 0 ret_tmp[1830427])
    (1830430 'move' start[1122042] ret_tmp[1830427])
    (1122053 'move' ret[1122037] start[1122042])
    (1834092 '=' _retArg[1834090] ret[1122037])
    (1834094 return _void[55])
  }
  function _ic__indexLen__ref_string[1121305].advance[1121331](const in arg this[1121333]:_ic__indexLen__ref_string[1121305]) : void[4] "auto ii" "method" "resolved"
  {
    const-val more[1998352]:int(64)[13]
    (1998380 'move' more[1998352](1998377 '.v' this[1121333] more[1121308]))
    const-val tmp[1998355]:bool[10] "temp"
    (1998362 'move' tmp[1998355](1998359 '==' more[1998352] 2))
    if tmp[1998355]
    {
      gotoIterResume _jump_2[1998344] _jump_2[1998344]
    }
    const-val tmp[1998367]:bool[10] "temp"
    (1998372 'move' tmp[1998367](1998369 '==' more[1998352] -2))
    if tmp[1998367]
    {
      gotoIterResume _jump_break_2[1998346] _jump_break_2[1998346]
    }
    val ret[503784]:_ir__indexLen__ref_string[1121311] "dead after last mention" "RVV" "temp"
    const-val call_tmp[598930]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1829443]:string[26] "temp"
    ref tmp[1998026]:_ref(string)[937939] "temp"
    (1998031 'move' tmp[1998026](1998028 '.v' this[1121333] F0_this[1998004]))
    (31459 call localize[32886] tmp[1998026] ret_tmp[1829443])
    (1829446 'move' call_tmp[598930] ret_tmp[1829443])
    val tmp[1998033]:string[26] "temp"
    (540245 'move' tmp[1998033] call_tmp[598930])
    (1998035 '.=' this[1121333] F2_localThis[1998012] tmp[1998033])
    const-val call_tmp[598935]:int(64)[13] "dead at end of block" "maybe param" "temp"
    ref tmp[1998039]:_ref(byteIndex)[948759] "temp"
    (1998044 'move' tmp[1998039](1998041 '.v' this[1121333] F1_start[1998008]))
    (598938 'move' call_tmp[598935](31467 call _cast[39462] tmp[1998039]))
    val tmp[1998046]:int(64)[13] "temp"
    (540247 'move' tmp[1998046] call_tmp[598935])
    (1998048 '.=' this[1121333] F3_i[1998014] tmp[1998046])
    const-val call_tmp[598940]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (598943 'move' call_tmp[598940](31475 call >[437672] call_tmp[598935] 0))
    const-val call_tmp[598945]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (598948 'move' call_tmp[598945] call_tmp[598940])
    if call_tmp[598940]
    {
      val tmp[31503]:bool[10] "dead after last mention" "temp"
      const-val tmp[417408]:bool[10] "dead after last mention" "maybe param" "temp"
      ref call_tmp[598952]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
      ref tmp[1998052]:_ref(string)[937939] "temp"
      (1998057 'move' tmp[1998052](1998054 '.' this[1121333] F2_localThis[1998012]))
      (598955 'move' call_tmp[598952](31544 call buffLen[757886] tmp[1998052]))
      const-val coerce_tmp[1121043]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1121047 'move' coerce_tmp[1121043](1121045 'deref' call_tmp[598952]))
      const-val tmp[1998059]:int(64)[13] "temp"
      (1998064 'move' tmp[1998059](1998061 '.v' this[1121333] F3_i[1998014]))
      (417419 'move' tmp[417408](31541 call <[437452] tmp[1998059] coerce_tmp[1121043]))
      val tmp[552897]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[552898]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[598962]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (598965 'move' call_tmp[598962] tmp[417408])
      (552903 'move' tmp[552898] tmp[417408])
      if tmp[417408]
      {
        const-val tmp[552905]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        ref call_tmp[598969]:_ref(uint(8))[936908] "dead after last mention" "maybe param" "temp"
        ref _this_tmp_[1121054]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "temp"
        ref tmp[1998066]:_ref(string)[937939] "temp"
        (1998071 'move' tmp[1998066](1998068 '.' this[1121333] F2_localThis[1998012]))
        (1121056 'move' _this_tmp_[1121054](31552 call buff[757964] tmp[1998066]))
        val coerce_tmp[1121061]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1121065 'move' coerce_tmp[1121061](1121063 'deref' _this_tmp_[1121054]))
        const-val tmp[1998073]:int(64)[13] "temp"
        (1998078 'move' tmp[1998073](1998075 '.v' this[1121333] F3_i[1998014]))
        (598972 'move' call_tmp[598969](31555 call this[954091] coerce_tmp[1121061] tmp[1998073]))
        const-val call_tmp[598974]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1121068]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1121072 'move' coerce_tmp[1121068](1121070 'deref' call_tmp[598969]))
        (598977 'move' call_tmp[598974](31550 call isInitialByte[181528] coerce_tmp[1121068]))
        const-val call_tmp[598979]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (598982 'move' call_tmp[598979](31548 call ![7494] call_tmp[598974]))
        (552907 'move' tmp[552905] call_tmp[598979])
        (552912 'move' tmp[552897] call_tmp[598979])
      }
      {
        (552917 'move' tmp[552897] 0)
      }
      (31557 'move' tmp[31503] tmp[552897])
      WhileDo[31508]
      {
        ref tmp[1998080]:_ref(int(64))[936572] "temp"
        (1998085 'move' tmp[1998080](1998082 '.' this[1121333] F3_i[1998014]))
        (31500 call +=[451315] tmp[1998080] 1)
        const-val tmp[417387]:bool[10] "dead after last mention" "maybe param" "temp"
        ref call_tmp[598986]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
        ref tmp[1998087]:_ref(string)[937939] "temp"
        (1998092 'move' tmp[1998087](1998089 '.' this[1121333] F2_localThis[1998012]))
        (598989 'move' call_tmp[598986](31519 call buffLen[757886] tmp[1998087]))
        const-val coerce_tmp[1121078]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1121082 'move' coerce_tmp[1121078](1121080 'deref' call_tmp[598986]))
        const-val tmp[1998094]:int(64)[13] "temp"
        (1998099 'move' tmp[1998094](1998096 '.v' this[1121333] F3_i[1998014]))
        (417398 'move' tmp[417387](31516 call <[437452] tmp[1998094] coerce_tmp[1121078]))
        val tmp[552924]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        const-val tmp[552925]:bool[10] "dead after last mention" "maybe param" "temp"
        const-val call_tmp[598996]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (598999 'move' call_tmp[598996] tmp[417387])
        (552930 'move' tmp[552925] tmp[417387])
        if tmp[417387]
        {
          const-val tmp[552932]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
          ref call_tmp[599003]:_ref(uint(8))[936908] "dead after last mention" "maybe param" "temp"
          ref _this_tmp_[1121089]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "temp"
          ref tmp[1998101]:_ref(string)[937939] "temp"
          (1998106 'move' tmp[1998101](1998103 '.' this[1121333] F2_localThis[1998012]))
          (1121091 'move' _this_tmp_[1121089](31527 call buff[757964] tmp[1998101]))
          val coerce_tmp[1121096]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1121100 'move' coerce_tmp[1121096](1121098 'deref' _this_tmp_[1121089]))
          const-val tmp[1998108]:int(64)[13] "temp"
          (1998113 'move' tmp[1998108](1998110 '.v' this[1121333] F3_i[1998014]))
          (599006 'move' call_tmp[599003](31530 call this[954091] coerce_tmp[1121096] tmp[1998108]))
          const-val call_tmp[599008]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[1121103]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1121107 'move' coerce_tmp[1121103](1121105 'deref' call_tmp[599003]))
          (599011 'move' call_tmp[599008](31525 call isInitialByte[181528] coerce_tmp[1121103]))
          const-val call_tmp[599013]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (599016 'move' call_tmp[599013](31523 call ![7494] call_tmp[599008]))
          (552934 'move' tmp[552932] call_tmp[599013])
          (552939 'move' tmp[552924] call_tmp[599013])
        }
        {
          (552944 'move' tmp[552924] 0)
        }
        (31532 'move' tmp[31503] tmp[552924])
        tmp[31503]
      }
    }
    val tmp[31681]:bool[10] "dead after last mention" "temp"
    ref call_tmp[599020]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
    ref tmp[1998115]:_ref(string)[937939] "temp"
    (1998120 'move' tmp[1998115](1998117 '.' this[1121333] F2_localThis[1998012]))
    (599023 'move' call_tmp[599020](31708 call buffLen[757886] tmp[1998115]))
    const-val call_tmp[599025]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1121112]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1121116 'move' coerce_tmp[1121112](1121114 'deref' call_tmp[599020]))
    const-val tmp[1998122]:int(64)[13] "temp"
    (1998127 'move' tmp[1998122](1998124 '.v' this[1121333] F3_i[1998014]))
    (599028 'move' call_tmp[599025](31705 call <[437452] tmp[1998122] coerce_tmp[1121112]))
    (31711 'move' tmp[31681] call_tmp[599025])
    WhileDo[31686]
    {
      const-val call_tmp[599030]:int(64)[13] "dead at end of block" "maybe param" "temp"
      const-val tmp[1998129]:int(64)[13] "temp"
      (1998134 'move' tmp[1998129](1998131 '.v' this[1121333] F3_i[1998014]))
      (599033 'move' call_tmp[599030](31573 call +[949666] tmp[1998129]))
      val tmp[1998136]:int(64)[13] "temp"
      (540249 'move' tmp[1998136] call_tmp[599030])
      (1998138 '.=' this[1121333] F4_j[1998016] tmp[1998136])
      val tmp[31606]:bool[10] "dead after last mention" "temp"
      const-val tmp[417450]:bool[10] "dead after last mention" "maybe param" "temp"
      ref call_tmp[599037]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
      ref tmp[1998142]:_ref(string)[937939] "temp"
      (1998147 'move' tmp[1998142](1998144 '.' this[1121333] F2_localThis[1998012]))
      (599040 'move' call_tmp[599037](31647 call buffLen[757886] tmp[1998142]))
      const-val coerce_tmp[1121121]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1121125 'move' coerce_tmp[1121121](1121123 'deref' call_tmp[599037]))
      (417461 'move' tmp[417450](31644 call <[437452] call_tmp[599030] coerce_tmp[1121121]))
      val tmp[552951]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[552952]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[599047]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (599050 'move' call_tmp[599047] tmp[417450])
      (552957 'move' tmp[552952] tmp[417450])
      if tmp[417450]
      {
        const-val tmp[552959]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        ref call_tmp[599054]:_ref(uint(8))[936908] "dead after last mention" "maybe param" "temp"
        ref _this_tmp_[1121132]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "temp"
        ref tmp[1998149]:_ref(string)[937939] "temp"
        (1998154 'move' tmp[1998149](1998151 '.' this[1121333] F2_localThis[1998012]))
        (1121134 'move' _this_tmp_[1121132](31655 call buff[757964] tmp[1998149]))
        val coerce_tmp[1121139]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1121143 'move' coerce_tmp[1121139](1121141 'deref' _this_tmp_[1121132]))
        const-val tmp[1998156]:int(64)[13] "temp"
        (1998161 'move' tmp[1998156](1998158 '.v' this[1121333] F4_j[1998016]))
        (599057 'move' call_tmp[599054](31658 call this[954091] coerce_tmp[1121139] tmp[1998156]))
        const-val call_tmp[599059]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1121146]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1121150 'move' coerce_tmp[1121146](1121148 'deref' call_tmp[599054]))
        (599062 'move' call_tmp[599059](31653 call isInitialByte[181528] coerce_tmp[1121146]))
        const-val call_tmp[599064]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (599067 'move' call_tmp[599064](31651 call ![7494] call_tmp[599059]))
        (552961 'move' tmp[552959] call_tmp[599064])
        (552966 'move' tmp[552951] call_tmp[599064])
      }
      {
        (552971 'move' tmp[552951] 0)
      }
      (31660 'move' tmp[31606] tmp[552951])
      WhileDo[31611]
      {
        ref tmp[1998163]:_ref(int(64))[936572] "temp"
        (1998168 'move' tmp[1998163](1998165 '.' this[1121333] F4_j[1998016]))
        (31603 call +=[451315] tmp[1998163] 1)
        const-val tmp[417429]:bool[10] "dead after last mention" "maybe param" "temp"
        ref call_tmp[599071]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
        ref tmp[1998170]:_ref(string)[937939] "temp"
        (1998175 'move' tmp[1998170](1998172 '.' this[1121333] F2_localThis[1998012]))
        (599074 'move' call_tmp[599071](31622 call buffLen[757886] tmp[1998170]))
        const-val coerce_tmp[1121156]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1121160 'move' coerce_tmp[1121156](1121158 'deref' call_tmp[599071]))
        const-val tmp[1998177]:int(64)[13] "temp"
        (1998182 'move' tmp[1998177](1998179 '.v' this[1121333] F4_j[1998016]))
        (417440 'move' tmp[417429](31619 call <[437452] tmp[1998177] coerce_tmp[1121156]))
        val tmp[552978]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        const-val tmp[552979]:bool[10] "dead after last mention" "maybe param" "temp"
        const-val call_tmp[599081]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (599084 'move' call_tmp[599081] tmp[417429])
        (552984 'move' tmp[552979] tmp[417429])
        if tmp[417429]
        {
          const-val tmp[552986]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
          ref call_tmp[599088]:_ref(uint(8))[936908] "dead after last mention" "maybe param" "temp"
          ref _this_tmp_[1121167]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "temp"
          ref tmp[1998184]:_ref(string)[937939] "temp"
          (1998189 'move' tmp[1998184](1998186 '.' this[1121333] F2_localThis[1998012]))
          (1121169 'move' _this_tmp_[1121167](31630 call buff[757964] tmp[1998184]))
          val coerce_tmp[1121174]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1121178 'move' coerce_tmp[1121174](1121176 'deref' _this_tmp_[1121167]))
          const-val tmp[1998191]:int(64)[13] "temp"
          (1998196 'move' tmp[1998191](1998193 '.v' this[1121333] F4_j[1998016]))
          (599091 'move' call_tmp[599088](31633 call this[954091] coerce_tmp[1121174] tmp[1998191]))
          const-val call_tmp[599093]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[1121181]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1121185 'move' coerce_tmp[1121181](1121183 'deref' call_tmp[599088]))
          (599096 'move' call_tmp[599093](31628 call isInitialByte[181528] coerce_tmp[1121181]))
          const-val call_tmp[599098]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (599101 'move' call_tmp[599098](31626 call ![7494] call_tmp[599093]))
          (552988 'move' tmp[552986] call_tmp[599098])
          (552993 'move' tmp[552978] call_tmp[599098])
        }
        {
          (552998 'move' tmp[552978] 0)
        }
        (31635 'move' tmp[31606] tmp[552978])
        tmp[31606]
      }
      const-val yret[503788]:(byteIndex,int(64))[1121233] "dead after last mention" "YVV" "temp"
      const-val tmp[1998198]:int(64)[13] "temp"
      (1998203 'move' tmp[1998198](1998200 '.v' this[1121333] F3_i[1998014]))
      ref tmp[1998205]:_ref(byteIndex)[948759] "temp"
      (1998210 'move' tmp[1998205](1998207 '.' this[1121333] F6_ret_tmp[1998020]))
      (31665 call _cast[39483] tmp[1998198] tmp[1998205])
      val tmp[1998212]:byteIndex[28170] "temp"
      const-val tmp[1998218]:byteIndex[28170] "temp"
      (1998223 'move' tmp[1998218](1998220 '.v' this[1121333] F6_ret_tmp[1998020]))
      (1830406 'move' tmp[1998212] tmp[1998218])
      (1998214 '.=' this[1121333] F5_call_tmp[1998018] tmp[1998212])
      const-val call_tmp[599108]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val tmp[1998225]:int(64)[13] "temp"
      (1998230 'move' tmp[1998225](1998227 '.v' this[1121333] F4_j[1998016]))
      const-val tmp[1998232]:int(64)[13] "temp"
      (1998237 'move' tmp[1998232](1998234 '.v' this[1121333] F3_i[1998014]))
      (599111 'move' call_tmp[599108](31669 call -[440416] tmp[1998225] tmp[1998232]))
      ref tmp[1998239]:_ref(byteIndex)[948759] "temp"
      (1998244 'move' tmp[1998239](1998241 '.' this[1121333] F5_call_tmp[1998018]))
      ref tmp[1998246]:_ref((byteIndex,int(64)))[1121289] "temp"
      (1998251 'move' tmp[1998246](1998248 '.' this[1121333] F7_ret_tmp[1998022]))
      (31672 call _build_tuple[1121191] tmp[1998239] call_tmp[599108] tmp[1998246])
      val tmp[1998253]:(byteIndex,int(64))[1121233] "temp"
      const-val tmp[1998259]:(byteIndex,int(64))[1121233] "temp"
      (1998264 'move' tmp[1998259](1998261 '.v' this[1121333] F7_ret_tmp[1998022]))
      (1834051 'move' tmp[1998253] tmp[1998259])
      (1998255 '.=' this[1121333] value[1998024] tmp[1998253])
      const-val tmp[1998266]:(byteIndex,int(64))[1121233] "temp"
      (1998271 'move' tmp[1998266](1998268 '.v' this[1121333] value[1998024]))
      (503791 'move' yret[503788] tmp[1998266])
      (1998338 '.=' this[1121333] more[1121308] 2)
      gotoIterEnd _end[1998336] _end[1998336]
      label _jump_break_2[1998346]
      ref tmp[1998273]:_ref(byteIndex)[948759] "temp"
      (1998278 'move' tmp[1998273](1998275 '.' this[1121333] F5_call_tmp[1998018]))
      (1841822 call chpl__autoDestroy[1461793] tmp[1998273])
      ref tmp[1998280]:_ref(string)[937939] "temp"
      (1998285 'move' tmp[1998280](1998282 '.' this[1121333] F2_localThis[1998012]))
      (1841825 call chpl__autoDestroy[1461530] tmp[1998280])
      gotoReturn _end_indexLen[1813891] _end_indexLen[1813891]
      label _jump_2[1998344]
      ref tmp[1998287]:_ref(byteIndex)[948759] "temp"
      (1998292 'move' tmp[1998287](1998289 '.' this[1121333] F5_call_tmp[1998018]))
      (1841828 call chpl__autoDestroy[1461793] tmp[1998287])
      ref tmp[1998294]:_ref(int(64))[936572] "temp"
      (1998299 'move' tmp[1998294](1998296 '.' this[1121333] F3_i[1998014]))
      const-val tmp[1998301]:int(64)[13] "temp"
      (1998306 'move' tmp[1998301](1998303 '.v' this[1121333] F4_j[1998016]))
      (31678 call =[435327] tmp[1998294] tmp[1998301])
      ref call_tmp[599120]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
      ref tmp[1998308]:_ref(string)[937939] "temp"
      (1998313 'move' tmp[1998308](1998310 '.' this[1121333] F2_localThis[1998012]))
      (599123 'move' call_tmp[599120](31695 call buffLen[757886] tmp[1998308]))
      const-val call_tmp[599125]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1121297]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1121301 'move' coerce_tmp[1121297](1121299 'deref' call_tmp[599120]))
      const-val tmp[1998315]:int(64)[13] "temp"
      (1998320 'move' tmp[1998315](1998317 '.v' this[1121333] F3_i[1998014]))
      (599128 'move' call_tmp[599125](31692 call <[437452] tmp[1998315] coerce_tmp[1121297]))
      (31698 'move' tmp[31681] call_tmp[599125])
      tmp[31681]
    }
    ref tmp[1998322]:_ref(string)[937939] "temp"
    (1998327 'move' tmp[1998322](1998324 '.' this[1121333] F2_localThis[1998012]))
    (1841832 call chpl__autoDestroy[1461530] tmp[1998322])
    label _end_indexLen[1813891]
    (1998348 '.=' this[1121333] more[1121308] 0)
    label _end[1998336]
    (1998383 return _void[55])
  }
  function _ic__indexLen__ref_string[1121305].zip1[1121340](const in arg this[1121342]:_ic__indexLen__ref_string[1121305]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1998329 call advance[1121331] this[1121342])
    (1121347 return _void[55])
  }
  function _ic__indexLen__ref_string[1121305].zip2[1121349](const in arg this[1121351]:_ic__indexLen__ref_string[1121305]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1121356 return _void[55])
  }
  function _ic__indexLen__ref_string[1121305].zip3[1121358](const in arg this[1121360]:_ic__indexLen__ref_string[1121305]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1998332 call advance[1121331] this[1121360])
    (1121365 return _void[55])
  }
  function _ic__indexLen__ref_string[1121305].zip4[1121367](const in arg this[1121369]:_ic__indexLen__ref_string[1121305]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1121374 return _void[55])
  }
  function _ic__indexLen__ref_string[1121305].hasMore[1121376](const in arg this[1121378]:_ic__indexLen__ref_string[1121305]) : int(64)[13] "auto ii" "inline" "method" "resolved"
  {
    val tmp[1998386]:int(64)[13] "temp"
    (1998391 'move' tmp[1998386](1998388 '.v' this[1121378] more[1121308]))
    (1998393 return tmp[1998386])
  }
  function _ic__indexLen__ref_string[1121305].getValue[1121385](const in arg this[1121387]:_ic__indexLen__ref_string[1121305]) : (byteIndex,int(64))[1121233] "auto ii" "inline" "method" "resolved"
  {
    val tmp[1998396]:(byteIndex,int(64))[1121233] "temp"
    (1998401 'move' tmp[1998396](1998398 '.v' this[1121387] value[1998024]))
    (1998403 return tmp[1998396])
  }
  function _ref(string)[937939]._indexLen[31451](const  ref arg this[32665]:_ref(string)[937939], const  ref arg start[31448]:byteIndex[28170], ref arg _retArg[1829385]:_ref(_ir__indexLen__ref_string)[1121422]) : void[4] "fn returns via _retArg" "inline" "iterator fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val _ir[1998411]:_ir__indexLen__ref_string[1121311] "temp"
    (1998413 '.=' _ir[1998411] F0_this[1998006] this[32665])
    (1998417 '.=' _ir[1998411] F1_start[1998010] start[31448])
    (1998421 '=' _retArg[1829385] _ir[1998411])
    (1998424 return _void[55])
  }
  function _ic__indexLen__ref_string[1121305].init[1121394](const in arg this[1121396]:_ic__indexLen__ref_string[1121305]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1998406 return _void[55])
  }
  function _ic__indexLen__ref_string[1121305].incr[1121403](const in arg this[1121405]:_ic__indexLen__ref_string[1121305]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1998409 return _void[55])
  }
  type _ic__indexLen__ref_string[1121305] val super[1121306]:object[22] "super class" val more[1121308]:int(64)[13] ref F0_this[1998004]:_ref(string)[937939] ref F1_start[1998008]:_ref(byteIndex)[948759] val F2_localThis[1998012]:string[26] val F3_i[1998014]:int(64)[13] val F4_j[1998016]:int(64)[13] val F5_call_tmp[1998018]:byteIndex[28170] const-val F6_ret_tmp[1998020]:byteIndex[28170] const-val F7_ret_tmp[1998022]:(byteIndex,int(64))[1121233] val value[1998024]:(byteIndex,int(64))[1121233]
  type _ir__indexLen__ref_string[1121311] ref F0_this[1998006]:_ref(string)[937939] ref F1_start[1998010]:_ref(byteIndex)[948759]
  function _getIterator[1121320](const  ref arg ir[1121322]:_ir__indexLen__ref_string[1121311]) : _ic__indexLen__ref_string[1121305] "auto ii" "inline" "resolved" "fn synchronization free" "unsafe"
  {
    val ret[1121429]:_ic__indexLen__ref_string[1121305] "dead after last mention" "RVV" "temp"
    val _ic_[1121312]:_ic__indexLen__ref_string[1121305] "dead after last mention" "temp"
    const-val call_tmp[1121436]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1121439 'move' call_tmp[1121436](1121451 'sizeof_bundle' _ic__indexLen__ref_string[1121305]))
    const-val cast_tmp[1121454]:c_void_ptr[149] "dead after last mention" "temp"
    (1121456 'move' cast_tmp[1121454](1121317 call chpl_here_alloc[187742] call_tmp[1121436] 32))
    (1121325 'move' _ic_[1121312](1121458 'cast' _ic__indexLen__ref_string[1121305] cast_tmp[1121454]))
    (1121327 'setcid' _ic_[1121312])
    (1121434 'move' ret[1121429] _ic_[1121312])
    (1998427 '.=' ret[1121429] more[1121308] 1)
    ref tmp[1998431]:_ref(string)[937939] "temp"
    (1998436 'move' tmp[1998431](1998432 '.v' ir[1121322] F0_this[1998006]))
    (1998438 '.=' ret[1121429] F0_this[1998004] tmp[1998431])
    ref tmp[1998442]:_ref(byteIndex)[948759] "temp"
    (1998447 'move' tmp[1998442](1998443 '.v' ir[1121322] F1_start[1998010]))
    (1998449 '.=' ret[1121429] F1_start[1998008] tmp[1998442])
    (1121431 return ret[1121429])
  }
  function _ref(string)[937939]._indexLen_default_start[1121003](const  ref arg this[1121006]:_ref(string)[937939], ref arg _retArg[1834042]:_ref(byteIndex)[948759]) : void[4] "compiler generated" "default actual function" "fn returns via _retArg" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "fn synchronization free"
  {
    const-val ret[1121009]:byteIndex[28170] "dead after last mention" "RVV" "maybe param" "temp"
    const-val start[1121014]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    const-val ret_tmp[1830421]:byteIndex[28170] "temp"
    (1121018 call _cast[39483] 0 ret_tmp[1830421])
    (1830424 'move' start[1121014] ret_tmp[1830421])
    (1121025 'move' ret[1121009] start[1121014])
    (1834044 '=' _retArg[1834042] ret[1121009])
    (1834046 return _void[55])
  }
  function _ref(string)[937939].doSearchUTF8[1106111](const  ref arg this[1106115]:_ref(string)[937939], const  ref arg needle[1106117]:string[26], const in arg region[1106119]:range(byteIndex,bounded,false)[1025792]) : int(64)[13] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[1106127]:int(64)[13] "dead after last mention" "RVV" "temp"
    val ret[1106144]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1106146 'move' ret[1106144] -1)
    const-val tmp[1106151]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1106153]:_ref(int(32))[936626] "dead after last mention" "maybe param" "temp"
    (1106155 'move' call_tmp[1106153](1106158 call locale_id[758042] this[1106115]))
    const-val call_tmp[1106161]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1107350]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1107354 'move' coerce_tmp[1107350](1107352 'deref' call_tmp[1106153]))
    (1106163 'move' call_tmp[1106161](1106166 call chpl_buildLocaleID[209412] coerce_tmp[1107350] c_sublocid_any[89875]))
    const-val call_tmp[1106169]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    (1106171 'move' call_tmp[1106169](1106173 'chpl_on_locale_num' call_tmp[1106161]))
    (1106175 'move' tmp[1106151] call_tmp[1106169])
    val needle_data[2083944]:__serializeHelper[28086] "temp"
    (2083946 call chpl__serialize[30883] needle[1106117] needle_data[2083944])
    val isdirect[2090982]:bool[10] "temp"
    (2090987 'move' isdirect[2090982](2090984 call chpl_doDirectExecuteOn[187423] tmp[1106151]))
    if isdirect[2090982]
    {
      (2090991 call on_fn[1106182] needle_data[2083944] this[1106115] region[1106119] ret[1106144])
    }
    {
      val _args_foron_fn[2091015]:_class_localson_fn[2091001] "temp"
      (2091019 'move' _args_foron_fn[2091015](2091017 'stack allocate class' _class_localson_fn[2091001]))
      (2091021 '.=' _args_foron_fn[2091015] _0_tmp[2091004] tmp[1106151])
      (2091025 '.=' _args_foron_fn[2091015] _1_needle_data[2091006] needle_data[2083944])
      ref tmp[2091029]:string[26] "temp"
      (2091033 'move' tmp[2091029](2091031 'set reference' this[1106115]))
      (2091035 '.=' _args_foron_fn[2091015] _2_this[2091008] tmp[2091029])
      (2091039 '.=' _args_foron_fn[2091015] _3_region[2091010] region[1106119])
      ref tmp[2091043]:int(64)[13] "temp"
      (2091047 'move' tmp[2091043](2091045 'set reference' ret[1106144]))
      (2091049 '.=' _args_foron_fn[2091015] _4_ret[2091012] tmp[2091043])
      val _args_vforon_fn[2091053]:c_void_ptr[149] "temp"
      (2091057 'move' _args_vforon_fn[2091053](2091055 'cast_to_void_star' _args_foron_fn[2091015]))
      val _args_sizeon_fn[2091059]:int(64)[13] "temp"
      (2091063 'move' _args_sizeon_fn[2091059](2091061 'sizeof_bundle' _class_localson_fn[2091001]))
      on(2091119 call wrapon_fn[2091065] tmp[1106151] _args_vforon_fn[2091053] _args_sizeon_fn[2091059] _args_foron_fn[2091015])
    }
    {
    }
    (1107295 'move' ret[1106127] ret[1106144])
    gotoReturn _end_doSearchUTF8[1107303] _end_doSearchUTF8[1107303]
    label _end_doSearchUTF8[1107303]
    (1107305 return ret[1106127])
  }
  function _ref(string)[937939].doSearchUTF8[1182807](const  ref arg this[1182811]:_ref(string)[937939], const  ref arg needle[1182813]:string[26], const in arg region[1182815]:range(byteIndex,boundedLow,false)[1143403]) : int(64)[13] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[1182823]:int(64)[13] "dead after last mention" "RVV" "temp"
    val ret[1182840]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1182842 'move' ret[1182840] -1)
    const-val tmp[1182847]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1182849]:_ref(int(32))[936626] "dead after last mention" "maybe param" "temp"
    (1182851 'move' call_tmp[1182849](1182854 call locale_id[758042] this[1182811]))
    const-val call_tmp[1182857]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1184046]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1184050 'move' coerce_tmp[1184046](1184048 'deref' call_tmp[1182849]))
    (1182859 'move' call_tmp[1182857](1182862 call chpl_buildLocaleID[209412] coerce_tmp[1184046] c_sublocid_any[89875]))
    const-val call_tmp[1182865]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    (1182867 'move' call_tmp[1182865](1182869 'chpl_on_locale_num' call_tmp[1182857]))
    (1182871 'move' tmp[1182847] call_tmp[1182865])
    val needle_data[2084200]:__serializeHelper[28086] "temp"
    (2084202 call chpl__serialize[30883] needle[1182813] needle_data[2084200])
    val isdirect[2091550]:bool[10] "temp"
    (2091555 'move' isdirect[2091550](2091552 call chpl_doDirectExecuteOn[187423] tmp[1182847]))
    if isdirect[2091550]
    {
      (2091559 call on_fn[1182878] needle_data[2084200] this[1182811] region[1182815] ret[1182840])
    }
    {
      val _args_foron_fn[2091583]:_class_localson_fn[2091569] "temp"
      (2091587 'move' _args_foron_fn[2091583](2091585 'stack allocate class' _class_localson_fn[2091569]))
      (2091589 '.=' _args_foron_fn[2091583] _0_tmp[2091572] tmp[1182847])
      (2091593 '.=' _args_foron_fn[2091583] _1_needle_data[2091574] needle_data[2084200])
      ref tmp[2091597]:string[26] "temp"
      (2091601 'move' tmp[2091597](2091599 'set reference' this[1182811]))
      (2091603 '.=' _args_foron_fn[2091583] _2_this[2091576] tmp[2091597])
      (2091607 '.=' _args_foron_fn[2091583] _3_region[2091578] region[1182815])
      ref tmp[2091611]:int(64)[13] "temp"
      (2091615 'move' tmp[2091611](2091613 'set reference' ret[1182840]))
      (2091617 '.=' _args_foron_fn[2091583] _4_ret[2091580] tmp[2091611])
      val _args_vforon_fn[2091621]:c_void_ptr[149] "temp"
      (2091625 'move' _args_vforon_fn[2091621](2091623 'cast_to_void_star' _args_foron_fn[2091583]))
      val _args_sizeon_fn[2091627]:int(64)[13] "temp"
      (2091631 'move' _args_sizeon_fn[2091627](2091629 'sizeof_bundle' _class_localson_fn[2091569]))
      on(2091687 call wrapon_fn[2091633] tmp[1182847] _args_vforon_fn[2091621] _args_sizeon_fn[2091627] _args_foron_fn[2091583])
    }
    {
    }
    (1183991 'move' ret[1182823] ret[1182840])
    gotoReturn _end_doSearchUTF8[1183999] _end_doSearchUTF8[1183999]
    label _end_doSearchUTF8[1183999]
    (1184001 return ret[1182823])
  }
  function _ref(string)[937939].buffLen[757886](ref arg this[757890]:_ref(string)[937939]) ref : _ref(int(64))[936572] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[757900]:_ref(int(64))[936572] "dead after last mention" "RVV" "temp"
    ref call_tmp[757907]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
    (757910 'move' call_tmp[757907](757894 '.' this[757890] buffLen[30719]))
    (757905 'move' ret[757900] call_tmp[757907])
    (757902 return ret[757900])
  }
  function _ref(string)[937939].buffSize[757912](ref arg this[757916]:_ref(string)[937939]) ref : _ref(int(64))[936572] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[757926]:_ref(int(64))[936572] "dead after last mention" "RVV" "temp"
    ref call_tmp[757933]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
    (757936 'move' call_tmp[757933](757920 '.' this[757916] buffSize[30725]))
    (757931 'move' ret[757926] call_tmp[757933])
    (757928 return ret[757926])
  }
  function _ref(string)[937939].cachedNumCodepoints[757938](ref arg this[757942]:_ref(string)[937939]) ref : _ref(int(64))[936572] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[757952]:_ref(int(64))[936572] "dead after last mention" "RVV" "temp"
    ref call_tmp[757959]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
    (757962 'move' call_tmp[757959](757946 '.' this[757942] cachedNumCodepoints[30731]))
    (757957 'move' ret[757952] call_tmp[757959])
    (757954 return ret[757952])
  }
  function _ref(string)[937939].buff[757964](ref arg this[757968]:_ref(string)[937939]) ref : _ref(c_ptr(uint(8)))[937432] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[757978]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "RVV" "temp"
    ref call_tmp[757985]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "maybe param" "temp"
    (757988 'move' call_tmp[757985](757972 '.' this[757968] buff[30737]))
    (757983 'move' ret[757978] call_tmp[757985])
    (757980 return ret[757978])
  }
  function _ref(string)[937939].isOwned[757990](ref arg this[757994]:_ref(string)[937939]) ref : _ref(bool)[937199] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[758004]:_ref(bool)[937199] "dead after last mention" "RVV" "temp"
    ref call_tmp[758011]:_ref(bool)[937199] "dead after last mention" "maybe param" "temp"
    (758014 'move' call_tmp[758011](757998 '.' this[757994] isOwned[30743]))
    (758009 'move' ret[758004] call_tmp[758011])
    (758006 return ret[758004])
  }
  function _ref(string)[937939].hasEscapes[758016](ref arg this[758020]:_ref(string)[937939]) ref : _ref(bool)[937199] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[758030]:_ref(bool)[937199] "dead after last mention" "RVV" "temp"
    ref call_tmp[758037]:_ref(bool)[937199] "dead after last mention" "maybe param" "temp"
    (758040 'move' call_tmp[758037](758024 '.' this[758020] hasEscapes[30749]))
    (758035 'move' ret[758030] call_tmp[758037])
    (758032 return ret[758030])
  }
  function _ref(string)[937939].locale_id[758042](ref arg this[758046]:_ref(string)[937939]) ref : _ref(int(32))[936626] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[758056]:_ref(int(32))[936626] "dead after last mention" "RVV" "temp"
    ref call_tmp[758063]:_ref(int(32))[936626] "dead after last mention" "maybe param" "temp"
    (758066 'move' call_tmp[758063](758050 '.' this[758046] locale_id[30754]))
    (758061 'move' ret[758056] call_tmp[758063])
    (758058 return ret[758056])
  }
  type string[26] val buffLen[30719]:int(64)[13] val buffSize[30725]:int(64)[13] val cachedNumCodepoints[30731]:int(64)[13] val buff[30737]:c_ptr(uint(8))[937423] val isOwned[30743]:bool[10] val hasEscapes[30749]:bool[10] val locale_id[30754]:int(32)[95]
  function _ref(string)[937939].size[32769](const  ref arg this[32771]:_ref(string)[937939]) : int(64)[13] "inline" "method" "no parens" "resolved" "fn synchronization free"
  {
    val ret[503883]:int(64)[13] "dead after last mention" "RVV" "temp"
    const-val call_tmp[599658]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (599661 'move' call_tmp[599658](369852 call numCodepoints[32823] this[32771]))
    (503888 'move' ret[503883] call_tmp[599658])
    (503885 return ret[503883])
  }
  function _ref(string)[937939].indices[32785](const  ref arg this[32787]:_ref(string)[937939], ref arg _retArg[1829431]:_ref(range(int(64),bounded,false))[1026858]) : void[4] "fn returns via _retArg" "inline" "method" "no parens" "resolved" "fn synchronization free"
  {
    const-val ret[503892]:range(int(64),bounded,false)[1026814] "dead after last mention" "RVV" "temp"
    const-val call_tmp[599665]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (599668 'move' call_tmp[599665](369856 call size[32769] this[32787]))
    const-val call_tmp[599670]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (599673 'move' call_tmp[599670](32795 call -[962226] call_tmp[599665]))
    const-val call_tmp[599675]:range(int(64),bounded,false)[1026814] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1831565]:range(int(64),bounded,false)[1026814] "temp"
    (32797 call chpl_build_bounded_range[455137] 0 call_tmp[599670] ret_tmp[1831565])
    (1831568 'move' call_tmp[599675] ret_tmp[1831565])
    (503897 'move' ret[503892] call_tmp[599675])
    (1829433 '=' _retArg[1829431] ret[503892])
    (1829435 return _void[55])
  }
  function _ref(string)[937939].numBytes[32807](const  ref arg this[32809]:_ref(string)[937939]) : int(64)[13] "inline" "method" "no parens" "resolved" "fn synchronization free"
  {
    val ret[503901]:int(64)[13] "dead after last mention" "RVV" "temp"
    ref call_tmp[599682]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
    (599685 'move' call_tmp[599682](369861 call buffLen[757886] this[32809]))
    (503906 'move' ret[503901](503905 'deref' call_tmp[599682]))
    (503903 return ret[503901])
  }
  function _ref(string)[937939].numCodepoints[32823](const  ref arg this[32825]:_ref(string)[937939]) : int(64)[13] "inline" "method" "no parens" "resolved" "fn synchronization free"
  {
    val ret[503910]:int(64)[13] "dead after last mention" "RVV" "temp"
    ref call_tmp[599689]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    (599692 'move' call_tmp[599689](32831 call cachedNumCodepoints[757938] this[32825]))
    const-val n[32834]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1019761]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1019765 'move' coerce_tmp[1019761](1019763 'deref' call_tmp[599689]))
    (1841835 '=' n[32834] coerce_tmp[1019761])
    (540295 'noop')
    {
      const-val call_tmp[599699]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (599702 'move' call_tmp[599699](32844 call countNumCodepoints[181334] this[32825]))
      const-val call_tmp[599704]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (599707 'move' call_tmp[599704](32845 call !=[436012] n[32834] call_tmp[599699]))
      const-val call_tmp[599709]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (599712 'move' call_tmp[599709] call_tmp[599704])
      if call_tmp[599709]
      {
        (32866 call halt[154067] "Encountered corrupt string metadata")
      }
    }
    (503915 'move' ret[503910] n[32834])
    gotoReturn _end_numCodepoints[503908] _end_numCodepoints[503908]
    label _end_numCodepoints[503908]
    (503912 return ret[503910])
  }
  function _ref(string)[937939].localize[32886](const  ref arg this[32888]:_ref(string)[937939], ref arg _retArg[1829587]:_ref(string)[937939]) : void[4] "fn returns via _retArg" "inline" "method" "resolved" "fn synchronization free"
  {
    val ret[503921]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[553225]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[553238]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    ref call_tmp[599726]:_ref(int(32))[936626] "dead after last mention" "maybe param" "temp"
    (599729 'move' call_tmp[599726](32896 call locale_id[758042] this[32888]))
    const-val call_tmp[599731]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[948720]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (948724 'move' coerce_tmp[948720](948722 'deref' call_tmp[599726]))
    (599734 'move' call_tmp[599731](32900 call ==[435606] coerce_tmp[948720] chpl_nodeID[208152]))
    (553240 'move' tmp[553238] call_tmp[599731])
    (553245 'move' tmp[553225] tmp[553238])
    const-val call_tmp[599736]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (599739 'move' call_tmp[599736] tmp[553225])
    if call_tmp[599736]
    {
      const-val call_tmp[599741]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1818221]:string[26] "temp"
      (32907 call createStringWithBorrowedBuffer[29899] this[32888] ret_tmp[1818221])
      (1818224 'move' call_tmp[599741] ret_tmp[1818221])
      (957278 'move' ret[503921] call_tmp[599741])
      gotoReturn _end_localize[503919] _end_localize[503919]
    }
    {
      const-val x[32913]:string[26] "dead at end of block" "const" "insert auto destroy"
      (540297 call init=[30771] x[32913] this[32888])
      (957281 'move' ret[503921] x[32913])
      gotoReturn _end_localize[503919] _end_localize[503919]
    }
    label _end_localize[503919]
    (1829589 '=' _retArg[1829587] ret[503921])
    (1829591 return _void[55])
  }
  function _ref(string)[937939].c_str[32932](const  ref arg this[32934]:_ref(string)[937939]) : c_string[19] "inline" "method" "resolved" "fn synchronization free"
  {
    val ret[503939]:c_string[19] "dead after last mention" "RVV" "temp"
    const-val call_tmp[599746]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (599749 'move' call_tmp[599746](32943 call getCStr[957284] this[32934]))
    (958069 'move' ret[503939] call_tmp[599746])
    (503941 return ret[503939])
  }
  function _ic_chpl_bytes__ref_string[1108256].advance[1108282](const in arg this[1108284]:_ic_chpl_bytes__ref_string[1108256]) : void[4] "auto ii" "method" "resolved"
  {
    const-val more[2000470]:int(64)[13]
    (2000498 'move' more[2000470](2000495 '.v' this[1108284] more[1108259]))
    const-val tmp[2000473]:bool[10] "temp"
    (2000480 'move' tmp[2000473](2000477 '==' more[2000470] 2))
    if tmp[2000473]
    {
      gotoIterResume _jump_2[2000462] _jump_2[2000462]
    }
    const-val tmp[2000485]:bool[10] "temp"
    (2000490 'move' tmp[2000485](2000487 '==' more[2000470] -2))
    if tmp[2000485]
    {
      gotoIterResume _jump_break_2[2000464] _jump_break_2[2000464]
    }
    val ret[504003]:_ir_chpl_bytes__ref_string[1108262] "dead at end of block" "RVV" "temp"
    const-val call_tmp[600118]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1829449]:string[26] "temp"
    ref tmp[1998473]:_ref(string)[937939] "temp"
    (1998478 'move' tmp[1998473](1998475 '.v' this[1108284] F0_this[1998453]))
    (33588 call localize[32886] tmp[1998473] ret_tmp[1829449])
    (1829452 'move' call_tmp[600118] ret_tmp[1829449])
    val tmp[1998480]:string[26] "temp"
    (540347 'move' tmp[1998480] call_tmp[600118])
    (1998482 '.=' this[1108284] F1_localThis[1998457] tmp[1998480])
    val _indexOfInterest[33614]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    ref call_tmp[600125]:_ref(int(64))[936572] "dead at end of block" "maybe param" "temp"
    ref tmp[1998486]:_ref(string)[937939] "temp"
    (1998491 'move' tmp[1998486](1998488 '.' this[1108284] F1_localThis[1998457]))
    (600128 'move' call_tmp[600125](33630 call buffLen[757886] tmp[1998486]))
    const-val call_tmp[600130]:_ir_chpl_direct_counted_range_iter[1103796] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1108415]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1108419 'move' coerce_tmp[1108415](1108417 'deref' call_tmp[600125]))
    const-val ret_tmp[1831839]:_ir_chpl_direct_counted_range_iter[1103796] "temp"
    (33634 call chpl_direct_counted_range_iter[457996] 0 coerce_tmp[1108415] ret_tmp[1831839])
    (1831842 'move' call_tmp[600130] ret_tmp[1831839])
    val tmp[1998493]:_ic_chpl_direct_counted_range_iter[1103790] "temp"
    (33624 'move' tmp[1998493](33622 call _getIterator[1103805] call_tmp[600130]))
    (1998495 '.=' this[1108284] F2__iterator[1998459] tmp[1998493])
    val ret[1893897]:_ir_chpl_direct_counted_range_iter[1103796] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[1893899]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    const-val call_tmp[1893903]:_ir_chpl_direct_counted_range_iter_helper[1103546] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[1893905]:_ir_chpl_direct_counted_range_iter_helper[1103546] "temp"
    const-val low[1894010]:int(64)[13] "temp"
    ref tmp[1998499]:_ref(_ic_chpl_direct_counted_range_iter)[1103933] "temp"
    (1998504 'move' tmp[1998499](1998501 '.' this[1108284] F2__iterator[1998459]))
    (1894015 'move' low[1894010](1894012 '.v' tmp[1998499] F0_low[2010431]))
    const-val count[1894017]:int(64)[13] "temp"
    ref tmp[1998506]:_ref(_ic_chpl_direct_counted_range_iter)[1103933] "temp"
    (1998511 'move' tmp[1998506](1998508 '.' this[1108284] F2__iterator[1998459]))
    (1894022 'move' count[1894017](1894019 '.v' tmp[1998506] F1_count[2010435]))
    (1893908 call chpl_direct_counted_range_iter_helper[1102098] low[1894010] count[1894017] ret_tmp[1893905])
    (1893912 'move' call_tmp[1893903] ret_tmp[1893905])
    val tmp[1998513]:_ic_chpl_direct_counted_range_iter_helper[1103540] "temp"
    (1893915 'move' tmp[1998513](1893918 call _getIterator[1103555] call_tmp[1893903]))
    (1998515 '.=' this[1108284] F3__iterator[1998461] tmp[1998513])
    val ret[1959710]:_ir_chpl_direct_counted_range_iter_helper[1103546] "dead after last mention" "RVV" "temp"
    val call_tmp[1959712]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val tmp[1959714]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[1959716]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    const-val call_tmp[1959718]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[1960135]:int(64)[13] "temp"
    ref tmp[1998519]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103683] "temp"
    (1998524 'move' tmp[1998519](1998521 '.' this[1108284] F3__iterator[1998461]))
    (1960140 'move' count[1960135](1960137 '.v' tmp[1998519] F1_count[2014907]))
    (1959720 'move' call_tmp[1959718](1959723 call <[948398] count[1960135]))
    (1959725 'move' tmp[1959716] call_tmp[1959718])
    (1959728 'move' tmp[1959714] call_tmp[1959718])
    const-val call_tmp[1959731]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1959733 'move' call_tmp[1959731] call_tmp[1959718])
    if call_tmp[1959718]
    {
      (1959739 call boundsCheckHalt[210167] "With a negative count, the range must have a last index.")
    }
    val tmp[1959744]:2*int(64)[1040056] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
    const-val tmp[1959746]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1959748]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[1960142]:int(64)[13] "temp"
    ref tmp[1998526]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103683] "temp"
    (1998531 'move' tmp[1998526](1998528 '.' this[1108284] F3__iterator[1998461]))
    (1960147 'move' count[1960142](1960144 '.v' tmp[1998526] F1_count[2014907]))
    (1959750 'move' call_tmp[1959748](1959753 call ==[435628] count[1960142] 0))
    (1959756 'move' tmp[1959746] call_tmp[1959748])
    if call_tmp[1959748]
    {
      const-val tmp[1959761]:2*int(64)[1040056] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      val call_tmp[1959763]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[1959765]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val low[1960149]:int(64)[13] "temp"
      ref tmp[1998533]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103683] "temp"
      (1998538 'move' tmp[1998533](1998535 '.' this[1108284] F3__iterator[1998461]))
      (1960154 'move' low[1960149](1960151 '.v' tmp[1998533] F0_low[2014903]))
      (1959767 'move' call_tmp[1959765](1959770 call _cast[956034] low[1960149]))
      const-val call_tmp[1959772]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1959774]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1959776 'move' coerce_tmp[1959774](1959778 'cast' uint(64)[115] 1))
      (1959781 'move' call_tmp[1959772](1959784 call -[962193] call_tmp[1959765]))
      const-val call_tmp[1959786]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (1959788 'move' call_tmp[1959786](1959791 call _cast[953543] call_tmp[1959772]))
      const-val ret_tmp[1959793]:2*int(64)[1040056] "temp"
      const-val low[1960156]:int(64)[13] "temp"
      ref tmp[1998540]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103683] "temp"
      (1998545 'move' tmp[1998540](1998542 '.' this[1108284] F3__iterator[1998461]))
      (1960161 'move' low[1960156](1960158 '.v' tmp[1998540] F0_low[2014903]))
      (1959796 call _build_tuple[1040014] low[1960156] call_tmp[1959786] ret_tmp[1959793])
      (1959800 'move' tmp[1959761] ret_tmp[1959793])
      (1959803 'move' tmp[1959744] tmp[1959761])
    }
    {
      const-val tmp[1959807]:2*int(64)[1040056] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      val call_tmp[1959809]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[1959811]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val count[1960163]:int(64)[13] "temp"
      ref tmp[1998547]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103683] "temp"
      (1998552 'move' tmp[1998547](1998549 '.' this[1108284] F3__iterator[1998461]))
      (1960168 'move' count[1960163](1960165 '.v' tmp[1998547] F1_count[2014907]))
      (1959813 'move' call_tmp[1959811] count[1960163])
      const-val call_tmp[1959816]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val count[1960170]:int(64)[13] "temp"
      ref tmp[1998554]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103683] "temp"
      (1998559 'move' tmp[1998554](1998556 '.' this[1108284] F3__iterator[1998461]))
      (1960175 'move' count[1960170](1960172 '.v' tmp[1998554] F1_count[2014907]))
      (1959818 'move' call_tmp[1959816](1959821 call -[962226] count[1960170]))
      const-val call_tmp[1959823]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val low[1960177]:int(64)[13] "temp"
      ref tmp[1998561]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103683] "temp"
      (1998566 'move' tmp[1998561](1998563 '.' this[1108284] F3__iterator[1998461]))
      (1960182 'move' low[1960177](1960179 '.v' tmp[1998561] F0_low[2014903]))
      (1959825 'move' call_tmp[1959823](1959828 call +[439636] low[1960177] call_tmp[1959816]))
      const-val ret_tmp[1959831]:2*int(64)[1040056] "temp"
      const-val low[1960184]:int(64)[13] "temp"
      ref tmp[1998568]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103683] "temp"
      (1998573 'move' tmp[1998568](1998570 '.' this[1108284] F3__iterator[1998461]))
      (1960189 'move' low[1960184](1960186 '.v' tmp[1998568] F0_low[2014903]))
      (1959834 call _build_tuple[1040014] low[1960184] call_tmp[1959823] ret_tmp[1959831])
      (1959838 'move' tmp[1959807] ret_tmp[1959831])
      (1959841 'move' tmp[1959744] tmp[1959807])
    }
    const tmp[1998575]:2*int(64)[1040056] "temp"
    (1959845 '=' tmp[1998575] tmp[1959744])
    (1998577 '.=' this[1108284] F4_tmp[1998463] tmp[1998575])
    (1959848 'noop')
    1
    ref call_tmp[1959850]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
    ref tmp[1998581]:_ref(2*int(64))[1040129] "temp"
    (1998586 'move' tmp[1998581](1998583 '.' this[1108284] F4_tmp[1998463]))
    (1959852 'move' call_tmp[1959850](1959854 '.' tmp[1998581] x0[1040052]))
    const-val start[1959857]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1959859]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1959861 'move' coerce_tmp[1959859](1959863 'deref' call_tmp[1959850]))
    (1959865 '=' start[1959857] coerce_tmp[1959859])
    (1959868 'noop')
    ref call_tmp[1959869]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
    ref tmp[1998588]:_ref(2*int(64))[1040129] "temp"
    (1998593 'move' tmp[1998588](1998590 '.' this[1108284] F4_tmp[1998463]))
    (1959871 'move' call_tmp[1959869](1959873 '.' tmp[1998588] x1[1040054]))
    const-val end[1959876]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1959878]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1959880 'move' coerce_tmp[1959878](1959882 'deref' call_tmp[1959869]))
    (1959884 '=' end[1959876] coerce_tmp[1959878])
    (1959887 'noop')
    val _indexOfInterest[1959888]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    const-val call_tmp[1959892]:_ir_chpl_direct_param_stride_range_iter[1103292] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[1959894]:_ir_chpl_direct_param_stride_range_iter[1103292] "temp"
    (1959897 call chpl_direct_param_stride_range_iter[1102524] coerce_tmp[1959859] coerce_tmp[1959878] ret_tmp[1959894])
    (1959901 'move' call_tmp[1959892] ret_tmp[1959894])
    val tmp[1998595]:_ic_chpl_direct_param_stride_range_iter[1103286] "temp"
    (1959904 'move' tmp[1998595](1959907 call _getIterator[1103301] call_tmp[1959892]))
    (1998597 '.=' this[1108284] F5__iterator[1998465] tmp[1998595])
    val ret[1959910]:_ir_chpl_direct_param_stride_range_iter[1103292] "dead after last mention" "RVV" "temp"
    val call_tmp[1959912]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1959915 call chpl_range_check_stride[1102844])
    val call_tmp[1959918]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[1998601]:int(64)[13] "temp"
    (1959920 'move' tmp[1998601] 0)
    (1998603 '.=' this[1108284] F6_i[1998467] tmp[1998601])
    val call_tmp[1959923]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val default_arg_first[1959925]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val low[1959927]:int(64)[13] "temp"
    ref tmp[1998607]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103429] "temp"
    (1998612 'move' tmp[1998607](1998609 '.' this[1108284] F5__iterator[1998465]))
    (1959929 'move' low[1959927](1959931 '.v' tmp[1998607] F0_low[2016401]))
    (1959934 'move' default_arg_first[1959925](1959937 call chpl_checkIfRangeIterWillOverflow_default_first[1103198] low[1959927]))
    const-val default_arg_last[1959939]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val high[1959941]:int(64)[13] "temp"
    ref tmp[1998614]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103429] "temp"
    (1998619 'move' tmp[1998614](1998616 '.' this[1108284] F5__iterator[1998465]))
    (1959943 'move' high[1959941](1959945 '.v' tmp[1998614] F1_high[2016405]))
    (1959948 'move' default_arg_last[1959939](1959951 call chpl_checkIfRangeIterWillOverflow_default_last[1103226] high[1959941]))
    const-val _return_tmp_[1959953]:bool[10] "dead after last mention" "temp"
    const-val low[1959955]:int(64)[13] "temp"
    ref tmp[1998621]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103429] "temp"
    (1998626 'move' tmp[1998621](1998623 '.' this[1108284] F5__iterator[1998465]))
    (1959957 'move' low[1959955](1959959 '.v' tmp[1998621] F0_low[2016401]))
    const-val high[1959962]:int(64)[13] "temp"
    ref tmp[1998628]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103429] "temp"
    (1998633 'move' tmp[1998628](1998630 '.' this[1108284] F5__iterator[1998465]))
    (1959964 'move' high[1959962](1959966 '.v' tmp[1998628] F1_high[2016405]))
    (1959969 'move' _return_tmp_[1959953](1959972 call chpl_checkIfRangeIterWillOverflow[1096076] low[1959955] high[1959962] 1 default_arg_first[1959925] default_arg_last[1959939] 1))
    CForLoop[1959979]
    {
      const-val yret[1960008]:int(64)[13] "dead after last mention" "YVV" "temp"
      const-val tmp[1998635]:int(64)[13] "temp"
      (1998640 'move' tmp[1998635](1998637 '.v' this[1108284] F6_i[1998467]))
      (1960010 'move' yret[1960008] tmp[1998635])
      const-val _yieldedIndex[1960013]:int(64)[13] "temp"
      const-val tmp[1998642]:int(64)[13] "temp"
      (1998647 'move' tmp[1998642](1998644 '.v' this[1108284] F6_i[1998467]))
      (1960015 'move' _yieldedIndex[1960013] tmp[1998642])
      const-val i[1960019]:int(64)[13] "const" "index var" "insert auto destroy"
      (1960021 'move' i[1960019] _yieldedIndex[1960013])
      const-val yret[1960024]:int(64)[13] "dead after last mention" "YVV" "temp"
      (1960026 'move' yret[1960024] _yieldedIndex[1960013])
      const-val _yieldedIndex[1960054]:int(64)[13] "temp"
      (1960133 'move' _yieldedIndex[1960054] _yieldedIndex[1960013])
      const-val i[1960056]:int(64)[13] "const" "index var" "insert auto destroy"
      (1960058 'move' i[1960056] _yieldedIndex[1960054])
      const-val yret[1960061]:int(64)[13] "dead after last mention" "YVV" "temp"
      (1960063 'move' yret[1960061] _yieldedIndex[1960054])
      const-val _yieldedIndex[1960066]:int(64)[13] "temp"
      (1960068 'move' _yieldedIndex[1960066] _yieldedIndex[1960054])
      const-val i[1960071]:int(64)[13] "const" "index var" "insert auto destroy"
      (1960073 'move' i[1960071] _yieldedIndex[1960066])
      const-val yret[1960076]:uint(8)[100] "dead after last mention" "YVV" "temp"
      ref call_tmp[1960078]:_ref(uint(8))[936908] "dead after last mention" "maybe param" "temp"
      ref _this_tmp_[1960080]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "temp"
      ref tmp[1998649]:_ref(string)[937939] "temp"
      (1998654 'move' tmp[1998649](1998651 '.' this[1108284] F1_localThis[1998457]))
      (1960082 'move' _this_tmp_[1960080](1960085 call buff[757964] tmp[1998649]))
      val coerce_tmp[1960087]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1960089 'move' coerce_tmp[1960087](1960091 'deref' _this_tmp_[1960080]))
      (1960093 'move' call_tmp[1960078](1960096 call this[954091] coerce_tmp[1960087] _yieldedIndex[1960066]))
      val tmp[1998656]:uint(8)[100] "temp"
      (1960101 'move' tmp[1998656](1960103 'deref' call_tmp[1960078]))
      (1998658 '.=' this[1108284] value[1998471] tmp[1998656])
      const-val tmp[1998662]:uint(8)[100] "temp"
      (1998667 'move' tmp[1998662](1998664 '.v' this[1108284] value[1998471]))
      (1960105 '=' yret[1960076] tmp[1998662])
      (1960108 'noop')
      (2000456 '.=' this[1108284] more[1108259] 2)
      gotoIterEnd _end[2000454] _end[2000454]
      label _jump_break_2[2000464]
      val tmp[1998669]:_ic_chpl_direct_param_stride_range_iter[1103286] "temp"
      (1998674 'move' tmp[1998669](1998671 '.v' this[1108284] F5__iterator[1998465]))
      (1960127 call _freeIterator[1103474] tmp[1998669])
      ref tmp[1998676]:_ref(2*int(64))[1040129] "temp"
      (1998681 'move' tmp[1998676](1998678 '.' this[1108284] F4_tmp[1998463]))
      (1960130 call chpl__autoDestroy[1534672] tmp[1998676])
      val tmp[1998683]:_ic_chpl_direct_counted_range_iter_helper[1103540] "temp"
      (1998688 'move' tmp[1998683](1998685 '.v' this[1108284] F3__iterator[1998461]))
      (1960114 call _freeIterator[1103724] tmp[1998683])
      val tmp[1998690]:_ic_chpl_direct_counted_range_iter[1103790] "temp"
      (1998695 'move' tmp[1998690](1998692 '.v' this[1108284] F2__iterator[1998459]))
      (1960117 call _freeIterator[1103974] tmp[1998690])
      ref tmp[1998697]:_ref(string)[937939] "temp"
      (1998702 'move' tmp[1998697](1998699 '.' this[1108284] F1_localThis[1998457]))
      (1960120 call chpl__autoDestroy[1461530] tmp[1998697])
      gotoReturn _endchpl_bytes[1813898] _endchpl_bytes[1813898]
      label _jump_2[2000462]
      {
        const-val tmp[1998704]:int(64)[13] "temp"
        ref tmp[1998710]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103429] "temp"
        (1998715 'move' tmp[1998710](1998712 '.' this[1108284] F5__iterator[1998465]))
        (1959983 'move' tmp[1998704](1959985 '.v' tmp[1998710] F0_low[2016401]))
        (1998706 '.=' this[1108284] F7_low[1998469] tmp[1998704])
        val tmp[1998717]:int(64)[13] "temp"
        const-val tmp[1998723]:int(64)[13] "temp"
        (1998728 'move' tmp[1998723](1998725 '.v' this[1108284] F7_low[1998469]))
        (1959988 '=' tmp[1998717] tmp[1998723])
        (1998719 '.=' this[1108284] F6_i[1998467] tmp[1998717])
      }
      {
        const-val high[1959992]:int(64)[13] "temp"
        ref tmp[1998730]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103429] "temp"
        (1998735 'move' tmp[1998730](1998732 '.' this[1108284] F5__iterator[1998465]))
        (1959994 'move' high[1959992](1959996 '.v' tmp[1998730] F1_high[2016405]))
        val tmp[1998737]:int(64)[13] "temp"
        (1998742 'move' tmp[1998737](1998739 '.v' this[1108284] F6_i[1998467]))
        (1959999 '<=' tmp[1998737] high[1959992])
      }
      {
        val call_tmp[1960003]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val tmp[1998744]:int(64)[13] "temp"
        (1998749 'move' tmp[1998744](1998746 '.v' this[1108284] F6_i[1998467]))
        (1960005 '+=' tmp[1998744] 1)
        (1998751 '.=' this[1108284] F6_i[1998467] tmp[1998744])
      }
    }
    label _endchpl_direct_param_stride_range_iter[1960042]
    val tmp[1998755]:_ic_chpl_direct_param_stride_range_iter[1103286] "temp"
    (1998760 'move' tmp[1998755](1998757 '.v' this[1108284] F5__iterator[1998465]))
    (1960045 call _freeIterator[1103474] tmp[1998755])
    ref tmp[1998762]:_ref(2*int(64))[1040129] "temp"
    (1998767 'move' tmp[1998762](1998764 '.' this[1108284] F4_tmp[1998463]))
    (1960048 call chpl__autoDestroy[1534672] tmp[1998762])
    label _endchpl_direct_counted_range_iter_helper[1960050]
    val tmp[1998769]:_ic_chpl_direct_counted_range_iter_helper[1103540] "temp"
    (1998774 'move' tmp[1998769](1998771 '.v' this[1108284] F3__iterator[1998461]))
    (1893944 call _freeIterator[1103724] tmp[1998769])
    label _endchpl_direct_counted_range_iter[1893946]
    val tmp[1998776]:_ic_chpl_direct_counted_range_iter[1103790] "temp"
    (1998781 'move' tmp[1998776](1998778 '.v' this[1108284] F2__iterator[1998459]))
    (1841851 call _freeIterator[1103974] tmp[1998776])
    ref tmp[1998783]:_ref(string)[937939] "temp"
    (1998788 'move' tmp[1998783](1998785 '.' this[1108284] F1_localThis[1998457]))
    (1841853 call chpl__autoDestroy[1461530] tmp[1998783])
    label _endchpl_bytes[1813898]
    (2000466 '.=' this[1108284] more[1108259] 0)
    label _end[2000454]
    (2000501 return _void[55])
  }
  function _ic_chpl_bytes__ref_string[1108256].zip1[1108291](const in arg this[1108293]:_ic_chpl_bytes__ref_string[1108256]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    val ret[1998791]:_ir_chpl_bytes__ref_string[1108262] "dead at end of block" "RVV" "temp"
    const-val call_tmp[1998793]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1998795]:string[26] "temp"
    val localThis[1998797]:string[26] "dead at end of block" "insert auto destroy"
    val _indexOfInterest[1998799]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[1998801]:_ic_chpl_direct_counted_range_iter[1103790] "dead at end of block" "expr temp" "temp"
    ref call_tmp[1998803]:_ref(int(64))[936572] "dead at end of block" "maybe param" "temp"
    const-val call_tmp[1998805]:_ir_chpl_direct_counted_range_iter[1103796] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1998807]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    const-val ret_tmp[1998809]:_ir_chpl_direct_counted_range_iter[1103796] "temp"
    val ret[1998811]:_ir_chpl_direct_counted_range_iter[1103796] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[1998813]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[1998815]:_ic_chpl_direct_counted_range_iter_helper[1103540] "dead at end of block" "expr temp" "temp"
    const-val call_tmp[1998817]:_ir_chpl_direct_counted_range_iter_helper[1103546] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[1998819]:_ir_chpl_direct_counted_range_iter_helper[1103546] "temp"
    const-val low[1998821]:int(64)[13] "temp"
    const-val count[1998823]:int(64)[13] "temp"
    val ret[1998825]:_ir_chpl_direct_counted_range_iter_helper[1103546] "dead after last mention" "RVV" "temp"
    val call_tmp[1998827]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val tmp[1998829]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[1998831]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    const-val call_tmp[1998833]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[1998835]:int(64)[13] "temp"
    const-val call_tmp[1998837]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const tmp[1998839]:2*int(64)[1040056] "dead at end of block" "const" "insert auto destroy" "temp"
    val tmp[1998841]:2*int(64)[1040056] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
    const-val tmp[1998843]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1998845]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[1998847]:int(64)[13] "temp"
    val tmp[1998849]:2*int(64)[1040056] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
    val call_tmp[1998851]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1998853]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val low[1998855]:int(64)[13] "temp"
    val call_tmp[1998857]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
    val coerce_tmp[1998859]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val call_tmp[1998861]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    val ret_tmp[1998863]:2*int(64)[1040056] "temp"
    const-val low[1998865]:int(64)[13] "temp"
    val tmp[1998867]:2*int(64)[1040056] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
    val call_tmp[1998869]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1998871]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val count[1998873]:int(64)[13] "temp"
    val call_tmp[1998875]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val count[1998877]:int(64)[13] "temp"
    val call_tmp[1998879]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val low[1998881]:int(64)[13] "temp"
    val ret_tmp[1998883]:2*int(64)[1040056] "temp"
    const-val low[1998885]:int(64)[13] "temp"
    ref call_tmp[1998887]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
    const-val start[1998889]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1998891]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    ref call_tmp[1998893]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
    const-val end[1998895]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1998897]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    val _indexOfInterest[1998899]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[1998901]:_ic_chpl_direct_param_stride_range_iter[1103286] "dead at end of block" "expr temp" "temp"
    const-val call_tmp[1998903]:_ir_chpl_direct_param_stride_range_iter[1103292] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[1998905]:_ir_chpl_direct_param_stride_range_iter[1103292] "temp"
    val ret[1998907]:_ir_chpl_direct_param_stride_range_iter[1103292] "dead after last mention" "RVV" "temp"
    val call_tmp[1998909]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val i[1998911]:int(64)[13] "dead at end of block" "insert auto destroy"
    val call_tmp[1998913]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1998915]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val default_arg_first[1998917]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val low[1998919]:int(64)[13] "temp"
    const-val default_arg_last[1998921]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val high[1998923]:int(64)[13] "temp"
    const-val _return_tmp_[1998925]:bool[10] "dead after last mention" "temp"
    const-val low[1998927]:int(64)[13] "temp"
    const-val high[1998929]:int(64)[13] "temp"
    val yret[1998931]:int(64)[13] "dead after last mention" "YVV" "temp"
    val _yieldedIndex[1998933]:int(64)[13] "temp"
    const i[1998935]:int(64)[13] "const" "index var" "insert auto destroy"
    val yret[1998937]:int(64)[13] "dead after last mention" "YVV" "temp"
    val _yieldedIndex[1998939]:int(64)[13] "temp"
    const i[1998941]:int(64)[13] "const" "index var" "insert auto destroy"
    val yret[1998943]:int(64)[13] "dead after last mention" "YVV" "temp"
    val _yieldedIndex[1998945]:int(64)[13] "temp"
    const i[1998947]:int(64)[13] "const" "index var" "insert auto destroy"
    val yret[1998949]:uint(8)[100] "dead after last mention" "YVV" "temp"
    ref call_tmp[1998951]:_ref(uint(8))[936908] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[1998953]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "temp"
    val coerce_tmp[1998955]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val coerce_tmp[1998957]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    const-val low[1998959]:int(64)[13] "temp"
    const-val high[1998961]:int(64)[13] "temp"
    val call_tmp[1998963]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    label _endchpl_direct_param_stride_range_iter[1998965]
    label _endchpl_direct_counted_range_iter_helper[1998967]
    label _endchpl_direct_counted_range_iter[1998969]
    label _endchpl_bytes[1998971]
    ref tmp[1998973]:_ref(string)[937939] "temp"
    val tmp[1998975]:string[26] "temp"
    ref tmp[1998977]:_ref(string)[937939] "temp"
    val tmp[1998979]:_ic_chpl_direct_counted_range_iter[1103790] "temp"
    ref tmp[1998981]:_ref(_ic_chpl_direct_counted_range_iter)[1103933] "temp"
    ref tmp[1998983]:_ref(_ic_chpl_direct_counted_range_iter)[1103933] "temp"
    val tmp[1998985]:_ic_chpl_direct_counted_range_iter_helper[1103540] "temp"
    ref tmp[1998987]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103683] "temp"
    ref tmp[1998989]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103683] "temp"
    ref tmp[1998991]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103683] "temp"
    ref tmp[1998993]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103683] "temp"
    ref tmp[1998995]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103683] "temp"
    ref tmp[1998997]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103683] "temp"
    ref tmp[1998999]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103683] "temp"
    ref tmp[1999001]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103683] "temp"
    const tmp[1999003]:2*int(64)[1040056] "temp"
    ref tmp[1999005]:_ref(2*int(64))[1040129] "temp"
    ref tmp[1999007]:_ref(2*int(64))[1040129] "temp"
    val tmp[1999009]:_ic_chpl_direct_param_stride_range_iter[1103286] "temp"
    val tmp[1999011]:int(64)[13] "temp"
    ref tmp[1999013]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103429] "temp"
    ref tmp[1999015]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103429] "temp"
    ref tmp[1999017]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103429] "temp"
    ref tmp[1999019]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103429] "temp"
    val tmp[1999021]:int(64)[13] "temp"
    val tmp[1999023]:int(64)[13] "temp"
    ref tmp[1999025]:_ref(string)[937939] "temp"
    val tmp[1999027]:uint(8)[100] "temp"
    val tmp[1999029]:uint(8)[100] "temp"
    val tmp[1999031]:_ic_chpl_direct_param_stride_range_iter[1103286] "temp"
    ref tmp[1999033]:_ref(2*int(64))[1040129] "temp"
    val tmp[1999035]:_ic_chpl_direct_counted_range_iter_helper[1103540] "temp"
    val tmp[1999037]:_ic_chpl_direct_counted_range_iter[1103790] "temp"
    ref tmp[1999039]:_ref(string)[937939] "temp"
    const-val tmp[1999041]:int(64)[13] "temp"
    ref tmp[1999043]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103429] "temp"
    val tmp[1999045]:int(64)[13] "temp"
    const-val tmp[1999047]:int(64)[13] "temp"
    ref tmp[1999049]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103429] "temp"
    val tmp[1999051]:int(64)[13] "temp"
    val tmp[1999053]:int(64)[13] "temp"
    val tmp[1999055]:_ic_chpl_direct_param_stride_range_iter[1103286] "temp"
    ref tmp[1999057]:_ref(2*int(64))[1040129] "temp"
    val tmp[1999059]:_ic_chpl_direct_counted_range_iter_helper[1103540] "temp"
    val tmp[1999061]:_ic_chpl_direct_counted_range_iter[1103790] "temp"
    ref tmp[1999063]:_ref(string)[937939] "temp"
    (1999065 'move' tmp[1998973](1999067 '.v' this[1108293] F0_this[1998453]))
    (1999071 call localize[32886] tmp[1998973] ret_tmp[1998795])
    (1999074 'move' call_tmp[1998793] ret_tmp[1998795])
    (1999077 'move' tmp[1998975] call_tmp[1998793])
    (1999080 '.=' this[1108293] F1_localThis[1998457] tmp[1998975])
    (1999084 'move' tmp[1998977](1999086 '.' this[1108293] F1_localThis[1998457]))
    (1999089 'move' call_tmp[1998803](1999092 call buffLen[757886] tmp[1998977]))
    (1999094 'move' coerce_tmp[1998807](1999096 'deref' call_tmp[1998803]))
    (1999099 call chpl_direct_counted_range_iter[457996] 0 coerce_tmp[1998807] ret_tmp[1998809])
    (1999103 'move' call_tmp[1998805] ret_tmp[1998809])
    (1999106 'move' tmp[1998979](1999109 call _getIterator[1103805] call_tmp[1998805]))
    (1999111 '.=' this[1108293] F2__iterator[1998459] tmp[1998979])
    (1999115 'move' tmp[1998981](1999117 '.' this[1108293] F2__iterator[1998459]))
    (1999120 'move' low[1998821](1999122 '.v' tmp[1998981] F0_low[2010431]))
    (1999125 'move' tmp[1998983](1999127 '.' this[1108293] F2__iterator[1998459]))
    (1999130 'move' count[1998823](1999132 '.v' tmp[1998983] F1_count[2010435]))
    (1999136 call chpl_direct_counted_range_iter_helper[1102098] low[1998821] count[1998823] ret_tmp[1998819])
    (1999140 'move' call_tmp[1998817] ret_tmp[1998819])
    (1999143 'move' tmp[1998985](1999146 call _getIterator[1103555] call_tmp[1998817]))
    (1999148 '.=' this[1108293] F3__iterator[1998461] tmp[1998985])
    (1999152 'move' tmp[1998987](1999154 '.' this[1108293] F3__iterator[1998461]))
    (1999157 'move' count[1998835](1999159 '.v' tmp[1998987] F1_count[2014907]))
    (1999162 'move' call_tmp[1998833](1999165 call <[948398] count[1998835]))
    (1999167 'move' tmp[1998831] call_tmp[1998833])
    (1999170 'move' tmp[1998829] call_tmp[1998833])
    (1999173 'move' call_tmp[1998837] call_tmp[1998833])
    if call_tmp[1998833]
    {
      (1999179 call boundsCheckHalt[210167] "With a negative count, the range must have a last index.")
    }
    (1999182 'move' tmp[1998989](1999184 '.' this[1108293] F3__iterator[1998461]))
    (1999187 'move' count[1998847](1999189 '.v' tmp[1998989] F1_count[2014907]))
    (1999192 'move' call_tmp[1998845](1999195 call ==[435628] count[1998847] 0))
    (1999198 'move' tmp[1998843] call_tmp[1998845])
    if call_tmp[1998845]
    {
      const-val tmp[1999203]:2*int(64)[1040056] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      val call_tmp[1999205]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[1999207]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val low[1999209]:int(64)[13] "temp"
      ref tmp[1999211]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103683] "temp"
      (1999213 'move' tmp[1999211](1999215 '.' this[1108293] F3__iterator[1998461]))
      (1999218 'move' low[1999209](1999220 '.v' tmp[1999211] F0_low[2014903]))
      (1999223 'move' call_tmp[1999207](1999226 call _cast[956034] low[1999209]))
      const-val call_tmp[1999228]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1999230]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1999232 'move' coerce_tmp[1999230](1999234 'cast' uint(64)[115] 1))
      (1999237 'move' call_tmp[1999228](1999240 call -[962193] call_tmp[1999207]))
      const-val call_tmp[1999242]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (1999244 'move' call_tmp[1999242](1999247 call _cast[953543] call_tmp[1999228]))
      const-val ret_tmp[1999249]:2*int(64)[1040056] "temp"
      const-val low[1999251]:int(64)[13] "temp"
      ref tmp[1999253]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103683] "temp"
      (1999255 'move' tmp[1999253](1999257 '.' this[1108293] F3__iterator[1998461]))
      (1999260 'move' low[1999251](1999262 '.v' tmp[1999253] F0_low[2014903]))
      (1999266 call _build_tuple[1040014] low[1999251] call_tmp[1999242] ret_tmp[1999249])
      (1999270 'move' tmp[1999203] ret_tmp[1999249])
      (1999273 'move' tmp[1998841] tmp[1999203])
    }
    {
      const-val tmp[1999277]:2*int(64)[1040056] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      val call_tmp[1999279]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[1999281]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val count[1999283]:int(64)[13] "temp"
      ref tmp[1999285]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103683] "temp"
      (1999287 'move' tmp[1999285](1999289 '.' this[1108293] F3__iterator[1998461]))
      (1999292 'move' count[1999283](1999294 '.v' tmp[1999285] F1_count[2014907]))
      (1999297 'move' call_tmp[1999281] count[1999283])
      const-val call_tmp[1999300]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val count[1999302]:int(64)[13] "temp"
      ref tmp[1999304]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103683] "temp"
      (1999306 'move' tmp[1999304](1999308 '.' this[1108293] F3__iterator[1998461]))
      (1999311 'move' count[1999302](1999313 '.v' tmp[1999304] F1_count[2014907]))
      (1999316 'move' call_tmp[1999300](1999319 call -[962226] count[1999302]))
      const-val call_tmp[1999321]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val low[1999323]:int(64)[13] "temp"
      ref tmp[1999325]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103683] "temp"
      (1999327 'move' tmp[1999325](1999329 '.' this[1108293] F3__iterator[1998461]))
      (1999332 'move' low[1999323](1999334 '.v' tmp[1999325] F0_low[2014903]))
      (1999337 'move' call_tmp[1999321](1999340 call +[439636] low[1999323] call_tmp[1999300]))
      const-val ret_tmp[1999343]:2*int(64)[1040056] "temp"
      const-val low[1999345]:int(64)[13] "temp"
      ref tmp[1999347]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103683] "temp"
      (1999349 'move' tmp[1999347](1999351 '.' this[1108293] F3__iterator[1998461]))
      (1999354 'move' low[1999345](1999356 '.v' tmp[1999347] F0_low[2014903]))
      (1999360 call _build_tuple[1040014] low[1999345] call_tmp[1999321] ret_tmp[1999343])
      (1999364 'move' tmp[1999277] ret_tmp[1999343])
      (1999367 'move' tmp[1998841] tmp[1999277])
    }
    (1999371 '=' tmp[1999003] tmp[1998841])
    (1999374 '.=' this[1108293] F4_tmp[1998463] tmp[1999003])
    (1999378 'noop')
    1
    (1999380 'move' tmp[1999005](1999382 '.' this[1108293] F4_tmp[1998463]))
    (1999385 'move' call_tmp[1998887](1999387 '.' tmp[1999005] x0[1040052]))
    (1999390 'move' coerce_tmp[1998891](1999392 'deref' call_tmp[1998887]))
    (1999394 '=' start[1998889] coerce_tmp[1998891])
    (1999397 'noop')
    (1999398 'move' tmp[1999007](1999400 '.' this[1108293] F4_tmp[1998463]))
    (1999403 'move' call_tmp[1998893](1999405 '.' tmp[1999007] x1[1040054]))
    (1999408 'move' coerce_tmp[1998897](1999410 'deref' call_tmp[1998893]))
    (1999412 '=' end[1998895] coerce_tmp[1998897])
    (1999415 'noop')
    (1999417 call chpl_direct_param_stride_range_iter[1102524] coerce_tmp[1998891] coerce_tmp[1998897] ret_tmp[1998905])
    (1999421 'move' call_tmp[1998903] ret_tmp[1998905])
    (1999424 'move' tmp[1999009](1999427 call _getIterator[1103301] call_tmp[1998903]))
    (1999429 '.=' this[1108293] F5__iterator[1998465] tmp[1999009])
    (1999434 call chpl_range_check_stride[1102844])
    (1999435 'move' tmp[1999011] 0)
    (1999438 '.=' this[1108293] F6_i[1998467] tmp[1999011])
    (1999442 'move' tmp[1999013](1999444 '.' this[1108293] F5__iterator[1998465]))
    (1999447 'move' low[1998919](1999449 '.v' tmp[1999013] F0_low[2016401]))
    (1999452 'move' default_arg_first[1998917](1999455 call chpl_checkIfRangeIterWillOverflow_default_first[1103198] low[1998919]))
    (1999457 'move' tmp[1999015](1999459 '.' this[1108293] F5__iterator[1998465]))
    (1999462 'move' high[1998923](1999464 '.v' tmp[1999015] F1_high[2016405]))
    (1999467 'move' default_arg_last[1998921](1999470 call chpl_checkIfRangeIterWillOverflow_default_last[1103226] high[1998923]))
    (1999472 'move' tmp[1999017](1999474 '.' this[1108293] F5__iterator[1998465]))
    (1999477 'move' low[1998927](1999479 '.v' tmp[1999017] F0_low[2016401]))
    (1999482 'move' tmp[1999019](1999484 '.' this[1108293] F5__iterator[1998465]))
    (1999487 'move' high[1998929](1999489 '.v' tmp[1999019] F1_high[2016405]))
    (1999492 'move' _return_tmp_[1998925](1999495 call chpl_checkIfRangeIterWillOverflow[1096076] low[1998927] high[1998929] 1 default_arg_first[1998917] default_arg_last[1998921] 1))
    (1999502 return _void[55])
  }
  function _ic_chpl_bytes__ref_string[1108256].zip2[1108300](const in arg this[1108302]:_ic_chpl_bytes__ref_string[1108256]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    val ret[1999505]:_ir_chpl_bytes__ref_string[1108262] "dead at end of block" "RVV" "temp"
    val call_tmp[1999507]:string[26] "dead at end of block" "maybe param" "temp"
    val ret_tmp[1999509]:string[26] "temp"
    val localThis[1999511]:string[26] "dead at end of block" "insert auto destroy"
    val _indexOfInterest[1999513]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[1999515]:_ic_chpl_direct_counted_range_iter[1103790] "dead at end of block" "expr temp" "temp"
    ref call_tmp[1999517]:_ref(int(64))[936572] "dead at end of block" "maybe param" "temp"
    val call_tmp[1999519]:_ir_chpl_direct_counted_range_iter[1103796] "dead at end of block" "expr temp" "maybe param" "temp"
    val coerce_tmp[1999521]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val ret_tmp[1999523]:_ir_chpl_direct_counted_range_iter[1103796] "temp"
    val ret[1999525]:_ir_chpl_direct_counted_range_iter[1103796] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[1999527]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[1999529]:_ic_chpl_direct_counted_range_iter_helper[1103540] "dead at end of block" "expr temp" "temp"
    val call_tmp[1999531]:_ir_chpl_direct_counted_range_iter_helper[1103546] "dead at end of block" "expr temp" "maybe param" "temp"
    val ret_tmp[1999533]:_ir_chpl_direct_counted_range_iter_helper[1103546] "temp"
    const-val low[1999535]:int(64)[13] "temp"
    const-val count[1999537]:int(64)[13] "temp"
    val ret[1999539]:_ir_chpl_direct_counted_range_iter_helper[1103546] "dead after last mention" "RVV" "temp"
    val call_tmp[1999541]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[1999543]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val tmp[1999545]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    val call_tmp[1999547]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[1999549]:int(64)[13] "temp"
    val call_tmp[1999551]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const tmp[1999553]:2*int(64)[1040056] "dead at end of block" "const" "insert auto destroy" "temp"
    val tmp[1999555]:2*int(64)[1040056] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
    val tmp[1999557]:bool[10] "dead after last mention" "maybe param" "temp"
    val call_tmp[1999559]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[1999561]:int(64)[13] "temp"
    val tmp[1999563]:2*int(64)[1040056] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
    val call_tmp[1999565]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1999567]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val low[1999569]:int(64)[13] "temp"
    val call_tmp[1999571]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
    val coerce_tmp[1999573]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val call_tmp[1999575]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    val ret_tmp[1999577]:2*int(64)[1040056] "temp"
    const-val low[1999579]:int(64)[13] "temp"
    val tmp[1999581]:2*int(64)[1040056] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
    val call_tmp[1999583]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1999585]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val count[1999587]:int(64)[13] "temp"
    val call_tmp[1999589]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val count[1999591]:int(64)[13] "temp"
    val call_tmp[1999593]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val low[1999595]:int(64)[13] "temp"
    val ret_tmp[1999597]:2*int(64)[1040056] "temp"
    const-val low[1999599]:int(64)[13] "temp"
    ref call_tmp[1999601]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
    const start[1999603]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[1999605]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    ref call_tmp[1999607]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
    const end[1999609]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[1999611]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    val _indexOfInterest[1999613]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[1999615]:_ic_chpl_direct_param_stride_range_iter[1103286] "dead at end of block" "expr temp" "temp"
    val call_tmp[1999617]:_ir_chpl_direct_param_stride_range_iter[1103292] "dead at end of block" "expr temp" "maybe param" "temp"
    val ret_tmp[1999619]:_ir_chpl_direct_param_stride_range_iter[1103292] "temp"
    val ret[1999621]:_ir_chpl_direct_param_stride_range_iter[1103292] "dead after last mention" "RVV" "temp"
    val call_tmp[1999623]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val i[1999625]:int(64)[13] "dead at end of block" "insert auto destroy"
    val call_tmp[1999627]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1999629]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val default_arg_first[1999631]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val low[1999633]:int(64)[13] "temp"
    val default_arg_last[1999635]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val high[1999637]:int(64)[13] "temp"
    val _return_tmp_[1999639]:bool[10] "dead after last mention" "temp"
    const-val low[1999641]:int(64)[13] "temp"
    const-val high[1999643]:int(64)[13] "temp"
    const-val yret[1999645]:int(64)[13] "dead after last mention" "YVV" "temp"
    const-val _yieldedIndex[1999647]:int(64)[13] "temp"
    const-val i[1999649]:int(64)[13] "const" "index var" "insert auto destroy"
    const-val yret[1999651]:int(64)[13] "dead after last mention" "YVV" "temp"
    const-val _yieldedIndex[1999653]:int(64)[13] "temp"
    const-val i[1999655]:int(64)[13] "const" "index var" "insert auto destroy"
    const-val yret[1999657]:int(64)[13] "dead after last mention" "YVV" "temp"
    const-val _yieldedIndex[1999659]:int(64)[13] "temp"
    const-val i[1999661]:int(64)[13] "const" "index var" "insert auto destroy"
    const-val yret[1999663]:uint(8)[100] "dead after last mention" "YVV" "temp"
    ref call_tmp[1999665]:_ref(uint(8))[936908] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[1999667]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "temp"
    val coerce_tmp[1999669]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val coerce_tmp[1999671]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    const-val low[1999673]:int(64)[13] "temp"
    const-val high[1999675]:int(64)[13] "temp"
    val call_tmp[1999677]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    label _endchpl_direct_param_stride_range_iter[1999679]
    label _endchpl_direct_counted_range_iter_helper[1999681]
    label _endchpl_direct_counted_range_iter[1999683]
    label _endchpl_bytes[1999685]
    ref tmp[1999687]:_ref(string)[937939] "temp"
    val tmp[1999689]:string[26] "temp"
    ref tmp[1999691]:_ref(string)[937939] "temp"
    val tmp[1999693]:_ic_chpl_direct_counted_range_iter[1103790] "temp"
    ref tmp[1999695]:_ref(_ic_chpl_direct_counted_range_iter)[1103933] "temp"
    ref tmp[1999697]:_ref(_ic_chpl_direct_counted_range_iter)[1103933] "temp"
    val tmp[1999699]:_ic_chpl_direct_counted_range_iter_helper[1103540] "temp"
    ref tmp[1999701]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103683] "temp"
    ref tmp[1999703]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103683] "temp"
    ref tmp[1999705]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103683] "temp"
    ref tmp[1999707]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103683] "temp"
    ref tmp[1999709]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103683] "temp"
    ref tmp[1999711]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103683] "temp"
    ref tmp[1999713]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103683] "temp"
    ref tmp[1999715]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103683] "temp"
    const tmp[1999717]:2*int(64)[1040056] "temp"
    ref tmp[1999719]:_ref(2*int(64))[1040129] "temp"
    ref tmp[1999721]:_ref(2*int(64))[1040129] "temp"
    val tmp[1999723]:_ic_chpl_direct_param_stride_range_iter[1103286] "temp"
    val tmp[1999725]:int(64)[13] "temp"
    ref tmp[1999727]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103429] "temp"
    ref tmp[1999729]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103429] "temp"
    ref tmp[1999731]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103429] "temp"
    ref tmp[1999733]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103429] "temp"
    const-val tmp[1999735]:int(64)[13] "temp"
    const-val tmp[1999737]:int(64)[13] "temp"
    ref tmp[1999739]:_ref(string)[937939] "temp"
    val tmp[1999741]:uint(8)[100] "temp"
    const-val tmp[1999743]:uint(8)[100] "temp"
    val tmp[1999745]:_ic_chpl_direct_param_stride_range_iter[1103286] "temp"
    ref tmp[1999747]:_ref(2*int(64))[1040129] "temp"
    val tmp[1999749]:_ic_chpl_direct_counted_range_iter_helper[1103540] "temp"
    val tmp[1999751]:_ic_chpl_direct_counted_range_iter[1103790] "temp"
    ref tmp[1999753]:_ref(string)[937939] "temp"
    const-val tmp[1999755]:int(64)[13] "temp"
    ref tmp[1999757]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103429] "temp"
    val tmp[1999759]:int(64)[13] "temp"
    const-val tmp[1999761]:int(64)[13] "temp"
    ref tmp[1999763]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103429] "temp"
    val tmp[1999765]:int(64)[13] "temp"
    val tmp[1999767]:int(64)[13] "temp"
    val tmp[1999769]:_ic_chpl_direct_param_stride_range_iter[1103286] "temp"
    ref tmp[1999771]:_ref(2*int(64))[1040129] "temp"
    val tmp[1999773]:_ic_chpl_direct_counted_range_iter_helper[1103540] "temp"
    val tmp[1999775]:_ic_chpl_direct_counted_range_iter[1103790] "temp"
    ref tmp[1999777]:_ref(string)[937939] "temp"
    (1999779 'move' tmp[1999735](1999781 '.v' this[1108302] F6_i[1998467]))
    (1999784 'move' yret[1999645] tmp[1999735])
    (1999787 'move' tmp[1999737](1999789 '.v' this[1108302] F6_i[1998467]))
    (1999792 'move' _yieldedIndex[1999647] tmp[1999737])
    (1999795 'move' i[1999649] _yieldedIndex[1999647])
    (1999798 'move' yret[1999651] _yieldedIndex[1999647])
    (1999801 'move' _yieldedIndex[1999653] _yieldedIndex[1999647])
    (1999804 'move' i[1999655] _yieldedIndex[1999653])
    (1999807 'move' yret[1999657] _yieldedIndex[1999653])
    (1999810 'move' _yieldedIndex[1999659] _yieldedIndex[1999653])
    (1999813 'move' i[1999661] _yieldedIndex[1999659])
    (1999816 'move' tmp[1999739](1999818 '.' this[1108302] F1_localThis[1998457]))
    (1999821 'move' _this_tmp_[1999667](1999824 call buff[757964] tmp[1999739]))
    (1999826 'move' coerce_tmp[1999669](1999828 'deref' _this_tmp_[1999667]))
    (1999830 'move' call_tmp[1999665](1999833 call this[954091] coerce_tmp[1999669] _yieldedIndex[1999659]))
    (1999836 'move' tmp[1999741](1999838 'deref' call_tmp[1999665]))
    (1999840 '.=' this[1108302] value[1998471] tmp[1999741])
    (1999844 'move' tmp[1999743](1999846 '.v' this[1108302] value[1998471]))
    (1999849 '=' yret[1999663] tmp[1999743])
    (1999852 'noop')
    (1999853 '.=' this[1108302] more[1108259] 2)
    (1999857 return _void[55])
  }
  function _ic_chpl_bytes__ref_string[1108256].zip3[1108309](const in arg this[1108311]:_ic_chpl_bytes__ref_string[1108256]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    val ret[1999860]:_ir_chpl_bytes__ref_string[1108262] "dead at end of block" "RVV" "temp"
    val call_tmp[1999862]:string[26] "dead at end of block" "maybe param" "temp"
    val ret_tmp[1999864]:string[26] "temp"
    val localThis[1999866]:string[26] "dead at end of block" "insert auto destroy"
    val _indexOfInterest[1999868]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[1999870]:_ic_chpl_direct_counted_range_iter[1103790] "dead at end of block" "expr temp" "temp"
    ref call_tmp[1999872]:_ref(int(64))[936572] "dead at end of block" "maybe param" "temp"
    val call_tmp[1999874]:_ir_chpl_direct_counted_range_iter[1103796] "dead at end of block" "expr temp" "maybe param" "temp"
    val coerce_tmp[1999876]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val ret_tmp[1999878]:_ir_chpl_direct_counted_range_iter[1103796] "temp"
    val ret[1999880]:_ir_chpl_direct_counted_range_iter[1103796] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[1999882]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[1999884]:_ic_chpl_direct_counted_range_iter_helper[1103540] "dead at end of block" "expr temp" "temp"
    val call_tmp[1999886]:_ir_chpl_direct_counted_range_iter_helper[1103546] "dead at end of block" "expr temp" "maybe param" "temp"
    val ret_tmp[1999888]:_ir_chpl_direct_counted_range_iter_helper[1103546] "temp"
    const-val low[1999890]:int(64)[13] "temp"
    const-val count[1999892]:int(64)[13] "temp"
    val ret[1999894]:_ir_chpl_direct_counted_range_iter_helper[1103546] "dead after last mention" "RVV" "temp"
    val call_tmp[1999896]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[1999898]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val tmp[1999900]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    val call_tmp[1999902]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[1999904]:int(64)[13] "temp"
    val call_tmp[1999906]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const tmp[1999908]:2*int(64)[1040056] "dead at end of block" "const" "insert auto destroy" "temp"
    val tmp[1999910]:2*int(64)[1040056] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
    val tmp[1999912]:bool[10] "dead after last mention" "maybe param" "temp"
    val call_tmp[1999914]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[1999916]:int(64)[13] "temp"
    val tmp[1999918]:2*int(64)[1040056] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
    val call_tmp[1999920]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1999922]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val low[1999924]:int(64)[13] "temp"
    val call_tmp[1999926]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
    val coerce_tmp[1999928]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val call_tmp[1999930]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    val ret_tmp[1999932]:2*int(64)[1040056] "temp"
    const-val low[1999934]:int(64)[13] "temp"
    val tmp[1999936]:2*int(64)[1040056] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
    val call_tmp[1999938]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1999940]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val count[1999942]:int(64)[13] "temp"
    val call_tmp[1999944]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val count[1999946]:int(64)[13] "temp"
    val call_tmp[1999948]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val low[1999950]:int(64)[13] "temp"
    val ret_tmp[1999952]:2*int(64)[1040056] "temp"
    const-val low[1999954]:int(64)[13] "temp"
    ref call_tmp[1999956]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
    const start[1999958]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[1999960]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    ref call_tmp[1999962]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
    const end[1999964]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[1999966]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    val _indexOfInterest[1999968]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[1999970]:_ic_chpl_direct_param_stride_range_iter[1103286] "dead at end of block" "expr temp" "temp"
    val call_tmp[1999972]:_ir_chpl_direct_param_stride_range_iter[1103292] "dead at end of block" "expr temp" "maybe param" "temp"
    val ret_tmp[1999974]:_ir_chpl_direct_param_stride_range_iter[1103292] "temp"
    val ret[1999976]:_ir_chpl_direct_param_stride_range_iter[1103292] "dead after last mention" "RVV" "temp"
    val call_tmp[1999978]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val i[1999980]:int(64)[13] "dead at end of block" "insert auto destroy"
    val call_tmp[1999982]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1999984]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val default_arg_first[1999986]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val low[1999988]:int(64)[13] "temp"
    val default_arg_last[1999990]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val high[1999992]:int(64)[13] "temp"
    val _return_tmp_[1999994]:bool[10] "dead after last mention" "temp"
    const-val low[1999996]:int(64)[13] "temp"
    const-val high[1999998]:int(64)[13] "temp"
    val yret[2000000]:int(64)[13] "dead after last mention" "YVV" "temp"
    val _yieldedIndex[2000002]:int(64)[13] "temp"
    const i[2000004]:int(64)[13] "const" "index var" "insert auto destroy"
    val yret[2000006]:int(64)[13] "dead after last mention" "YVV" "temp"
    val _yieldedIndex[2000008]:int(64)[13] "temp"
    const i[2000010]:int(64)[13] "const" "index var" "insert auto destroy"
    val yret[2000012]:int(64)[13] "dead after last mention" "YVV" "temp"
    val _yieldedIndex[2000014]:int(64)[13] "temp"
    const i[2000016]:int(64)[13] "const" "index var" "insert auto destroy"
    val yret[2000018]:uint(8)[100] "dead after last mention" "YVV" "temp"
    ref call_tmp[2000020]:_ref(uint(8))[936908] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[2000022]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "temp"
    val coerce_tmp[2000024]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val coerce_tmp[2000026]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    const-val low[2000028]:int(64)[13] "temp"
    const-val high[2000030]:int(64)[13] "temp"
    val call_tmp[2000032]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    label _endchpl_direct_param_stride_range_iter[2000034]
    label _endchpl_direct_counted_range_iter_helper[2000036]
    label _endchpl_direct_counted_range_iter[2000038]
    label _endchpl_bytes[2000040]
    ref tmp[2000042]:_ref(string)[937939] "temp"
    val tmp[2000044]:string[26] "temp"
    ref tmp[2000046]:_ref(string)[937939] "temp"
    val tmp[2000048]:_ic_chpl_direct_counted_range_iter[1103790] "temp"
    ref tmp[2000050]:_ref(_ic_chpl_direct_counted_range_iter)[1103933] "temp"
    ref tmp[2000052]:_ref(_ic_chpl_direct_counted_range_iter)[1103933] "temp"
    val tmp[2000054]:_ic_chpl_direct_counted_range_iter_helper[1103540] "temp"
    ref tmp[2000056]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103683] "temp"
    ref tmp[2000058]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103683] "temp"
    ref tmp[2000060]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103683] "temp"
    ref tmp[2000062]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103683] "temp"
    ref tmp[2000064]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103683] "temp"
    ref tmp[2000066]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103683] "temp"
    ref tmp[2000068]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103683] "temp"
    ref tmp[2000070]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103683] "temp"
    const tmp[2000072]:2*int(64)[1040056] "temp"
    ref tmp[2000074]:_ref(2*int(64))[1040129] "temp"
    ref tmp[2000076]:_ref(2*int(64))[1040129] "temp"
    val tmp[2000078]:_ic_chpl_direct_param_stride_range_iter[1103286] "temp"
    val tmp[2000080]:int(64)[13] "temp"
    ref tmp[2000082]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103429] "temp"
    ref tmp[2000084]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103429] "temp"
    ref tmp[2000086]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103429] "temp"
    ref tmp[2000088]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103429] "temp"
    val tmp[2000090]:int(64)[13] "temp"
    val tmp[2000092]:int(64)[13] "temp"
    ref tmp[2000094]:_ref(string)[937939] "temp"
    val tmp[2000096]:uint(8)[100] "temp"
    val tmp[2000098]:uint(8)[100] "temp"
    val tmp[2000100]:_ic_chpl_direct_param_stride_range_iter[1103286] "temp"
    ref tmp[2000102]:_ref(2*int(64))[1040129] "temp"
    val tmp[2000104]:_ic_chpl_direct_counted_range_iter_helper[1103540] "temp"
    val tmp[2000106]:_ic_chpl_direct_counted_range_iter[1103790] "temp"
    ref tmp[2000108]:_ref(string)[937939] "temp"
    const-val tmp[2000110]:int(64)[13] "temp"
    ref tmp[2000112]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103429] "temp"
    val tmp[2000114]:int(64)[13] "temp"
    const-val tmp[2000116]:int(64)[13] "temp"
    ref tmp[2000118]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103429] "temp"
    val tmp[2000120]:int(64)[13] "temp"
    val tmp[2000122]:int(64)[13] "temp"
    val tmp[2000124]:_ic_chpl_direct_param_stride_range_iter[1103286] "temp"
    ref tmp[2000126]:_ref(2*int(64))[1040129] "temp"
    val tmp[2000128]:_ic_chpl_direct_counted_range_iter_helper[1103540] "temp"
    val tmp[2000130]:_ic_chpl_direct_counted_range_iter[1103790] "temp"
    ref tmp[2000132]:_ref(string)[937939] "temp"
    (2000134 return _void[55])
  }
  function _ic_chpl_bytes__ref_string[1108256].zip4[1108318](const in arg this[1108320]:_ic_chpl_bytes__ref_string[1108256]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    val ret[2000137]:_ir_chpl_bytes__ref_string[1108262] "dead at end of block" "RVV" "temp"
    val call_tmp[2000139]:string[26] "dead at end of block" "maybe param" "temp"
    val ret_tmp[2000141]:string[26] "temp"
    val localThis[2000143]:string[26] "dead at end of block" "insert auto destroy"
    val _indexOfInterest[2000145]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[2000147]:_ic_chpl_direct_counted_range_iter[1103790] "dead at end of block" "expr temp" "temp"
    ref call_tmp[2000149]:_ref(int(64))[936572] "dead at end of block" "maybe param" "temp"
    val call_tmp[2000151]:_ir_chpl_direct_counted_range_iter[1103796] "dead at end of block" "expr temp" "maybe param" "temp"
    val coerce_tmp[2000153]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val ret_tmp[2000155]:_ir_chpl_direct_counted_range_iter[1103796] "temp"
    val ret[2000157]:_ir_chpl_direct_counted_range_iter[1103796] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[2000159]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[2000161]:_ic_chpl_direct_counted_range_iter_helper[1103540] "dead at end of block" "expr temp" "temp"
    val call_tmp[2000163]:_ir_chpl_direct_counted_range_iter_helper[1103546] "dead at end of block" "expr temp" "maybe param" "temp"
    val ret_tmp[2000165]:_ir_chpl_direct_counted_range_iter_helper[1103546] "temp"
    const-val low[2000167]:int(64)[13] "temp"
    const-val count[2000169]:int(64)[13] "temp"
    val ret[2000171]:_ir_chpl_direct_counted_range_iter_helper[1103546] "dead after last mention" "RVV" "temp"
    val call_tmp[2000173]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[2000175]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val tmp[2000177]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    val call_tmp[2000179]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[2000181]:int(64)[13] "temp"
    val call_tmp[2000183]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const tmp[2000185]:2*int(64)[1040056] "dead at end of block" "const" "insert auto destroy" "temp"
    val tmp[2000187]:2*int(64)[1040056] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
    val tmp[2000189]:bool[10] "dead after last mention" "maybe param" "temp"
    val call_tmp[2000191]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[2000193]:int(64)[13] "temp"
    val tmp[2000195]:2*int(64)[1040056] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
    val call_tmp[2000197]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[2000199]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val low[2000201]:int(64)[13] "temp"
    val call_tmp[2000203]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
    val coerce_tmp[2000205]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val call_tmp[2000207]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    val ret_tmp[2000209]:2*int(64)[1040056] "temp"
    const-val low[2000211]:int(64)[13] "temp"
    val tmp[2000213]:2*int(64)[1040056] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
    val call_tmp[2000215]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[2000217]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val count[2000219]:int(64)[13] "temp"
    val call_tmp[2000221]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val count[2000223]:int(64)[13] "temp"
    val call_tmp[2000225]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val low[2000227]:int(64)[13] "temp"
    val ret_tmp[2000229]:2*int(64)[1040056] "temp"
    const-val low[2000231]:int(64)[13] "temp"
    ref call_tmp[2000233]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
    const start[2000235]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[2000237]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    ref call_tmp[2000239]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
    const end[2000241]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[2000243]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    val _indexOfInterest[2000245]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[2000247]:_ic_chpl_direct_param_stride_range_iter[1103286] "dead at end of block" "expr temp" "temp"
    val call_tmp[2000249]:_ir_chpl_direct_param_stride_range_iter[1103292] "dead at end of block" "expr temp" "maybe param" "temp"
    val ret_tmp[2000251]:_ir_chpl_direct_param_stride_range_iter[1103292] "temp"
    val ret[2000253]:_ir_chpl_direct_param_stride_range_iter[1103292] "dead after last mention" "RVV" "temp"
    val call_tmp[2000255]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val i[2000257]:int(64)[13] "dead at end of block" "insert auto destroy"
    val call_tmp[2000259]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[2000261]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val default_arg_first[2000263]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val low[2000265]:int(64)[13] "temp"
    val default_arg_last[2000267]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val high[2000269]:int(64)[13] "temp"
    val _return_tmp_[2000271]:bool[10] "dead after last mention" "temp"
    const-val low[2000273]:int(64)[13] "temp"
    const-val high[2000275]:int(64)[13] "temp"
    val yret[2000277]:int(64)[13] "dead after last mention" "YVV" "temp"
    val _yieldedIndex[2000279]:int(64)[13] "temp"
    const i[2000281]:int(64)[13] "const" "index var" "insert auto destroy"
    val yret[2000283]:int(64)[13] "dead after last mention" "YVV" "temp"
    val _yieldedIndex[2000285]:int(64)[13] "temp"
    const i[2000287]:int(64)[13] "const" "index var" "insert auto destroy"
    val yret[2000289]:int(64)[13] "dead after last mention" "YVV" "temp"
    val _yieldedIndex[2000291]:int(64)[13] "temp"
    const i[2000293]:int(64)[13] "const" "index var" "insert auto destroy"
    val yret[2000295]:uint(8)[100] "dead after last mention" "YVV" "temp"
    ref call_tmp[2000297]:_ref(uint(8))[936908] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[2000299]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "temp"
    val coerce_tmp[2000301]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val coerce_tmp[2000303]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    const-val low[2000305]:int(64)[13] "temp"
    const-val high[2000307]:int(64)[13] "temp"
    val call_tmp[2000309]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    label _endchpl_direct_param_stride_range_iter[2000311]
    label _endchpl_direct_counted_range_iter_helper[2000313]
    label _endchpl_direct_counted_range_iter[2000315]
    label _endchpl_bytes[2000317]
    ref tmp[2000319]:_ref(string)[937939] "temp"
    val tmp[2000321]:string[26] "temp"
    ref tmp[2000323]:_ref(string)[937939] "temp"
    val tmp[2000325]:_ic_chpl_direct_counted_range_iter[1103790] "temp"
    ref tmp[2000327]:_ref(_ic_chpl_direct_counted_range_iter)[1103933] "temp"
    ref tmp[2000329]:_ref(_ic_chpl_direct_counted_range_iter)[1103933] "temp"
    val tmp[2000331]:_ic_chpl_direct_counted_range_iter_helper[1103540] "temp"
    ref tmp[2000333]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103683] "temp"
    ref tmp[2000335]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103683] "temp"
    ref tmp[2000337]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103683] "temp"
    ref tmp[2000339]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103683] "temp"
    ref tmp[2000341]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103683] "temp"
    ref tmp[2000343]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103683] "temp"
    ref tmp[2000345]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103683] "temp"
    ref tmp[2000347]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103683] "temp"
    const tmp[2000349]:2*int(64)[1040056] "temp"
    ref tmp[2000351]:_ref(2*int(64))[1040129] "temp"
    ref tmp[2000353]:_ref(2*int(64))[1040129] "temp"
    val tmp[2000355]:_ic_chpl_direct_param_stride_range_iter[1103286] "temp"
    val tmp[2000357]:int(64)[13] "temp"
    ref tmp[2000359]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103429] "temp"
    ref tmp[2000361]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103429] "temp"
    ref tmp[2000363]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103429] "temp"
    ref tmp[2000365]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103429] "temp"
    val tmp[2000367]:int(64)[13] "temp"
    val tmp[2000369]:int(64)[13] "temp"
    ref tmp[2000371]:_ref(string)[937939] "temp"
    val tmp[2000373]:uint(8)[100] "temp"
    val tmp[2000375]:uint(8)[100] "temp"
    val tmp[2000377]:_ic_chpl_direct_param_stride_range_iter[1103286] "temp"
    ref tmp[2000379]:_ref(2*int(64))[1040129] "temp"
    val tmp[2000381]:_ic_chpl_direct_counted_range_iter_helper[1103540] "temp"
    val tmp[2000383]:_ic_chpl_direct_counted_range_iter[1103790] "temp"
    ref tmp[2000385]:_ref(string)[937939] "temp"
    const-val tmp[2000387]:int(64)[13] "temp"
    ref tmp[2000389]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103429] "temp"
    val tmp[2000391]:int(64)[13] "temp"
    const-val tmp[2000393]:int(64)[13] "temp"
    ref tmp[2000395]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103429] "temp"
    val tmp[2000397]:int(64)[13] "temp"
    val tmp[2000399]:int(64)[13] "temp"
    val tmp[2000401]:_ic_chpl_direct_param_stride_range_iter[1103286] "temp"
    ref tmp[2000403]:_ref(2*int(64))[1040129] "temp"
    val tmp[2000405]:_ic_chpl_direct_counted_range_iter_helper[1103540] "temp"
    val tmp[2000407]:_ic_chpl_direct_counted_range_iter[1103790] "temp"
    ref tmp[2000409]:_ref(string)[937939] "temp"
    (2000411 'move' tmp[2000401](2000413 '.v' this[1108320] F5__iterator[1998465]))
    (2000417 call _freeIterator[1103474] tmp[2000401])
    (2000419 'move' tmp[2000403](2000421 '.' this[1108320] F4_tmp[1998463]))
    (2000425 call chpl__autoDestroy[1534672] tmp[2000403])
    (2000427 'move' tmp[2000405](2000429 '.v' this[1108320] F3__iterator[1998461]))
    (2000433 call _freeIterator[1103724] tmp[2000405])
    (2000435 'move' tmp[2000407](2000437 '.v' this[1108320] F2__iterator[1998459]))
    (2000441 call _freeIterator[1103974] tmp[2000407])
    (2000443 'move' tmp[2000409](2000445 '.' this[1108320] F1_localThis[1998457]))
    (2000449 call chpl__autoDestroy[1461530] tmp[2000409])
    (2000451 return _void[55])
  }
  function _ic_chpl_bytes__ref_string[1108256].hasMore[1108327](const in arg this[1108329]:_ic_chpl_bytes__ref_string[1108256]) : int(64)[13] "auto ii" "inline" "method" "resolved"
  {
    val tmp[2000504]:int(64)[13] "temp"
    const-val high[2000506]:int(64)[13] "temp"
    ref tmp[2000508]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103429] "temp"
    (2000510 'move' tmp[2000508](2000512 '.' this[1108329] F5__iterator[1998465]))
    (2000515 'move' high[2000506](2000517 '.v' tmp[2000508] F1_high[2016405]))
    const-val tmp[2000520]:int(64)[13] "temp"
    (2000522 'move' tmp[2000520](2000524 '.v' this[1108329] F6_i[1998467]))
    (2000530 'move' tmp[2000504](2000527 '<=' tmp[2000520] high[2000506]))
    (2000532 return tmp[2000504])
  }
  function _ic_chpl_bytes__ref_string[1108256].getValue[1108336](const in arg this[1108338]:_ic_chpl_bytes__ref_string[1108256]) : uint(8)[100] "auto ii" "inline" "method" "resolved"
  {
    val tmp[2000535]:uint(8)[100] "temp"
    (2000540 'move' tmp[2000535](2000537 '.v' this[1108338] value[1998471]))
    (2000542 return tmp[2000535])
  }
  function _ref(string)[937939].chpl_bytes[33574](const  ref arg this[33576]:_ref(string)[937939], ref arg _retArg[1829635]:_ref(_ir_chpl_bytes__ref_string)[1108373]) : void[4] "fn returns via _retArg" "inline" "iterator fn" "method" "resolved" "fn synchronization free" "no return value for void"
  {
    val _ir[2000600]:_ir_chpl_bytes__ref_string[1108262] "temp"
    (2000602 '.=' _ir[2000600] F0_this[1998455] this[33576])
    (2000606 '=' _retArg[1829635] _ir[2000600])
    (2000609 return _void[55])
  }
  function _ic_chpl_bytes__ref_string[1108256].init[1108345](const in arg this[1108347]:_ic_chpl_bytes__ref_string[1108256]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    const-val tmp[2000545]:int(64)[13] "temp"
    ref tmp[2000547]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103429] "temp"
    (2000549 'move' tmp[2000547](2000551 '.' this[1108347] F5__iterator[1998465]))
    (2000554 'move' tmp[2000545](2000556 '.v' tmp[2000547] F0_low[2016401]))
    (2000559 '.=' this[1108347] F7_low[1998469] tmp[2000545])
    val tmp[2000563]:int(64)[13] "temp"
    const-val tmp[2000565]:int(64)[13] "temp"
    (2000567 'move' tmp[2000565](2000569 '.v' this[1108347] F7_low[1998469]))
    (2000572 '=' tmp[2000563] tmp[2000565])
    (2000575 '.=' this[1108347] F6_i[1998467] tmp[2000563])
    (2000579 return _void[55])
  }
  function _ic_chpl_bytes__ref_string[1108256].incr[1108354](const in arg this[1108356]:_ic_chpl_bytes__ref_string[1108256]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    val call_tmp[2000582]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[2000584]:int(64)[13] "temp"
    (2000586 'move' tmp[2000584](2000588 '.v' this[1108356] F6_i[1998467]))
    (2000591 '+=' tmp[2000584] 1)
    (2000594 '.=' this[1108356] F6_i[1998467] tmp[2000584])
    (2000598 return _void[55])
  }
  type _ic_chpl_bytes__ref_string[1108256] val super[1108257]:object[22] "super class" val more[1108259]:int(64)[13] ref F0_this[1998453]:_ref(string)[937939] val F1_localThis[1998457]:string[26] val F2__iterator[1998459]:_ic_chpl_direct_counted_range_iter[1103790] val F3__iterator[1998461]:_ic_chpl_direct_counted_range_iter_helper[1103540] const F4_tmp[1998463]:2*int(64)[1040056] val F5__iterator[1998465]:_ic_chpl_direct_param_stride_range_iter[1103286] val F6_i[1998467]:int(64)[13] const-val F7_low[1998469]:int(64)[13] val value[1998471]:uint(8)[100]
  type _ir_chpl_bytes__ref_string[1108262] ref F0_this[1998455]:_ref(string)[937939]
  function _getIterator[1108271](const  ref arg ir[1108273]:_ir_chpl_bytes__ref_string[1108262]) : _ic_chpl_bytes__ref_string[1108256] "auto ii" "inline" "resolved" "fn synchronization free" "unsafe"
  {
    val ret[1108380]:_ic_chpl_bytes__ref_string[1108256] "dead after last mention" "RVV" "temp"
    val _ic_[1108263]:_ic_chpl_bytes__ref_string[1108256] "dead after last mention" "temp"
    const-val call_tmp[1108387]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1108390 'move' call_tmp[1108387](1108402 'sizeof_bundle' _ic_chpl_bytes__ref_string[1108256]))
    const-val cast_tmp[1108405]:c_void_ptr[149] "dead after last mention" "temp"
    (1108407 'move' cast_tmp[1108405](1108268 call chpl_here_alloc[187742] call_tmp[1108387] 31))
    (1108276 'move' _ic_[1108263](1108409 'cast' _ic_chpl_bytes__ref_string[1108256] cast_tmp[1108405]))
    (1108278 'setcid' _ic_[1108263])
    (1108385 'move' ret[1108380] _ic_[1108263])
    (2000612 '.=' ret[1108380] more[1108259] 1)
    ref tmp[2000616]:_ref(string)[937939] "temp"
    (2000621 'move' tmp[2000616](2000617 '.v' ir[1108273] F0_this[1998455]))
    (2000623 '.=' ret[1108380] F0_this[1998453] tmp[2000616])
    (1108382 return ret[1108380])
  }
  function _ic_codepoints__ref_string[1122849].advance[1122875](const in arg this[1122877]:_ic_codepoints__ref_string[1122849]) : void[4] "auto ii" "method" "resolved"
  {
    const-val more[2001217]:int(64)[13]
    (2001269 'move' more[2001217](2001266 '.v' this[1122877] more[1122852]))
    const-val tmp[2001232]:bool[10] "temp"
    (2001239 'move' tmp[2001232](2001236 '==' more[2001217] 3))
    if tmp[2001232]
    {
      gotoIterResume _jump_3[2001209] _jump_3[2001209]
    }
    const-val tmp[2001220]:bool[10] "temp"
    (2001227 'move' tmp[2001220](2001224 '==' more[2001217] 2))
    if tmp[2001220]
    {
      gotoIterResume _jump_2[2001199] _jump_2[2001199]
    }
    const-val tmp[2001244]:bool[10] "temp"
    (2001249 'move' tmp[2001244](2001246 '==' more[2001217] -2))
    if tmp[2001244]
    {
      gotoIterResume _jump_break_2[2001201] _jump_break_2[2001201]
    }
    const-val tmp[2001256]:bool[10] "temp"
    (2001261 'move' tmp[2001256](2001258 '==' more[2001217] -3))
    if tmp[2001256]
    {
      gotoIterResume _jump_break_3[2001211] _jump_break_3[2001211]
    }
    val ret[504017]:_ir_codepoints__ref_string[1122855] "dead at end of block" "RVV" "temp"
    const-val call_tmp[600144]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1829455]:string[26] "temp"
    ref tmp[2000661]:_ref(string)[937939] "temp"
    (2000666 'move' tmp[2000661](2000663 '.v' this[1122877] F0_this[2000627]))
    (33680 call localize[32886] tmp[2000661] ret_tmp[1829455])
    (1829458 'move' call_tmp[600144] ret_tmp[1829455])
    val tmp[2000668]:string[26] "temp"
    (540349 'move' tmp[2000668] call_tmp[600144])
    (2000670 '.=' this[1122877] F1_localThis[2000631] tmp[2000668])
    const-val call_tmp[600151]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    ref tmp[2000674]:_ref(string)[937939] "temp"
    (2000679 'move' tmp[2000674](2000676 '.v' this[1122877] F0_this[2000627]))
    (600154 'move' call_tmp[600151](33691 call isASCII[31046] tmp[2000674]))
    const-val call_tmp[600156]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (600159 'move' call_tmp[600156] call_tmp[600151])
    if call_tmp[600151]
    {
      val _indexOfInterest[33702]:uint(8)[100] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      const-val call_tmp[600163]:_ir_chpl_bytes__ref_string[1108262] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val ret_tmp[1829599]:_ir_chpl_bytes__ref_string[1108262] "temp"
      ref tmp[2000681]:_ref(string)[937939] "temp"
      (2000686 'move' tmp[2000681](2000683 '.v' this[1122877] F0_this[2000627]))
      (33698 call chpl_bytes[33574] tmp[2000681] ret_tmp[1829599])
      (1829602 'move' call_tmp[600163] ret_tmp[1829599])
      val tmp[2000688]:_ic_chpl_bytes__ref_string[1108256] "temp"
      (33712 'move' tmp[2000688](33710 call _getIterator[1108271] call_tmp[600163]))
      (2000690 '.=' this[1122877] F2__iterator[2000633] tmp[2000688])
      val ret[1894025]:_ir_chpl_bytes__ref_string[1108262] "dead at end of block" "RVV" "temp"
      const-val call_tmp[1894027]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1894029]:string[26] "temp"
      ref this[1894245]:_ref(string)[937939] "temp"
      ref tmp[2000694]:_ref(_ic_chpl_bytes__ref_string)[1108399] "temp"
      (2000699 'move' tmp[2000694](2000696 '.' this[1122877] F2__iterator[2000633]))
      (1894250 'move' this[1894245](1894247 '.v' tmp[2000694] F0_this[1998453]))
      (1894032 call localize[32886] this[1894245] ret_tmp[1894029])
      (1894035 'move' call_tmp[1894027] ret_tmp[1894029])
      val tmp[2000701]:string[26] "temp"
      (1894040 'move' tmp[2000701] call_tmp[1894027])
      (2000703 '.=' this[1122877] F3_localThis[2000635] tmp[2000701])
      val _indexOfInterest[1894043]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      ref call_tmp[1894047]:_ref(int(64))[936572] "dead at end of block" "maybe param" "temp"
      ref tmp[2000707]:_ref(string)[937939] "temp"
      (2000712 'move' tmp[2000707](2000709 '.' this[1122877] F3_localThis[2000635]))
      (1894049 'move' call_tmp[1894047](1894052 call buffLen[757886] tmp[2000707]))
      const-val call_tmp[1894054]:_ir_chpl_direct_counted_range_iter[1103796] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1894056]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1894058 'move' coerce_tmp[1894056](1894060 'deref' call_tmp[1894047]))
      const-val ret_tmp[1894062]:_ir_chpl_direct_counted_range_iter[1103796] "temp"
      (1894065 call chpl_direct_counted_range_iter[457996] 0 coerce_tmp[1894056] ret_tmp[1894062])
      (1894069 'move' call_tmp[1894054] ret_tmp[1894062])
      val tmp[2000714]:_ic_chpl_direct_counted_range_iter[1103790] "temp"
      (1894072 'move' tmp[2000714](1894075 call _getIterator[1103805] call_tmp[1894054]))
      (2000716 '.=' this[1122877] F4__iterator[2000637] tmp[2000714])
      val ret[1894078]:_ir_chpl_direct_counted_range_iter[1103796] "dead after last mention" "RVV" "temp"
      val _indexOfInterest[1894080]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      const-val call_tmp[1894084]:_ir_chpl_direct_counted_range_iter_helper[1103546] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val ret_tmp[1894086]:_ir_chpl_direct_counted_range_iter_helper[1103546] "temp"
      const-val low[1894088]:int(64)[13] "temp"
      ref tmp[2000720]:_ref(_ic_chpl_direct_counted_range_iter)[1103933] "temp"
      (2000725 'move' tmp[2000720](2000722 '.' this[1122877] F4__iterator[2000637]))
      (1894090 'move' low[1894088](1894092 '.v' tmp[2000720] F0_low[2010431]))
      const-val count[1894095]:int(64)[13] "temp"
      ref tmp[2000727]:_ref(_ic_chpl_direct_counted_range_iter)[1103933] "temp"
      (2000732 'move' tmp[2000727](2000729 '.' this[1122877] F4__iterator[2000637]))
      (1894097 'move' count[1894095](1894099 '.v' tmp[2000727] F1_count[2010435]))
      (1894103 call chpl_direct_counted_range_iter_helper[1102098] low[1894088] count[1894095] ret_tmp[1894086])
      (1894107 'move' call_tmp[1894084] ret_tmp[1894086])
      val tmp[2000734]:_ic_chpl_direct_counted_range_iter_helper[1103540] "temp"
      (1894110 'move' tmp[2000734](1894113 call _getIterator[1103555] call_tmp[1894084]))
      (2000736 '.=' this[1122877] F5__iterator[2000639] tmp[2000734])
      val ret[1960192]:_ir_chpl_direct_counted_range_iter_helper[1103546] "dead after last mention" "RVV" "temp"
      val call_tmp[1960194]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val tmp[1960196]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val tmp[1960198]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[1960200]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val count[1960644]:int(64)[13] "temp"
      ref tmp[2000740]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103683] "temp"
      (2000745 'move' tmp[2000740](2000742 '.' this[1122877] F5__iterator[2000639]))
      (1960649 'move' count[1960644](1960646 '.v' tmp[2000740] F1_count[2014907]))
      (1960202 'move' call_tmp[1960200](1960205 call <[948398] count[1960644]))
      (1960207 'move' tmp[1960198] call_tmp[1960200])
      (1960210 'move' tmp[1960196] call_tmp[1960200])
      const-val call_tmp[1960213]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1960215 'move' call_tmp[1960213] call_tmp[1960200])
      if call_tmp[1960200]
      {
        (1960221 call boundsCheckHalt[210167] "With a negative count, the range must have a last index.")
      }
      val tmp[1960226]:2*int(64)[1040056] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
      const-val tmp[1960228]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1960230]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val count[1960651]:int(64)[13] "temp"
      ref tmp[2000747]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103683] "temp"
      (2000752 'move' tmp[2000747](2000749 '.' this[1122877] F5__iterator[2000639]))
      (1960656 'move' count[1960651](1960653 '.v' tmp[2000747] F1_count[2014907]))
      (1960232 'move' call_tmp[1960230](1960235 call ==[435628] count[1960651] 0))
      (1960238 'move' tmp[1960228] call_tmp[1960230])
      if call_tmp[1960230]
      {
        const-val tmp[1960243]:2*int(64)[1040056] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        val call_tmp[1960245]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[1960247]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val low[1960658]:int(64)[13] "temp"
        ref tmp[2000754]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103683] "temp"
        (2000759 'move' tmp[2000754](2000756 '.' this[1122877] F5__iterator[2000639]))
        (1960663 'move' low[1960658](1960660 '.v' tmp[2000754] F0_low[2014903]))
        (1960249 'move' call_tmp[1960247](1960252 call _cast[956034] low[1960658]))
        const-val call_tmp[1960254]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1960256]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1960258 'move' coerce_tmp[1960256](1960260 'cast' uint(64)[115] 1))
        (1960263 'move' call_tmp[1960254](1960266 call -[962193] call_tmp[1960247]))
        const-val call_tmp[1960268]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (1960270 'move' call_tmp[1960268](1960273 call _cast[953543] call_tmp[1960254]))
        const-val ret_tmp[1960275]:2*int(64)[1040056] "temp"
        const-val low[1960665]:int(64)[13] "temp"
        ref tmp[2000761]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103683] "temp"
        (2000766 'move' tmp[2000761](2000763 '.' this[1122877] F5__iterator[2000639]))
        (1960670 'move' low[1960665](1960667 '.v' tmp[2000761] F0_low[2014903]))
        (1960278 call _build_tuple[1040014] low[1960665] call_tmp[1960268] ret_tmp[1960275])
        (1960282 'move' tmp[1960243] ret_tmp[1960275])
        (1960285 'move' tmp[1960226] tmp[1960243])
      }
      {
        const-val tmp[1960289]:2*int(64)[1040056] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        val call_tmp[1960291]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[1960293]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val count[1960672]:int(64)[13] "temp"
        ref tmp[2000768]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103683] "temp"
        (2000773 'move' tmp[2000768](2000770 '.' this[1122877] F5__iterator[2000639]))
        (1960677 'move' count[1960672](1960674 '.v' tmp[2000768] F1_count[2014907]))
        (1960295 'move' call_tmp[1960293] count[1960672])
        const-val call_tmp[1960298]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val count[1960679]:int(64)[13] "temp"
        ref tmp[2000775]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103683] "temp"
        (2000780 'move' tmp[2000775](2000777 '.' this[1122877] F5__iterator[2000639]))
        (1960684 'move' count[1960679](1960681 '.v' tmp[2000775] F1_count[2014907]))
        (1960300 'move' call_tmp[1960298](1960303 call -[962226] count[1960679]))
        const-val call_tmp[1960305]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val low[1960686]:int(64)[13] "temp"
        ref tmp[2000782]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103683] "temp"
        (2000787 'move' tmp[2000782](2000784 '.' this[1122877] F5__iterator[2000639]))
        (1960691 'move' low[1960686](1960688 '.v' tmp[2000782] F0_low[2014903]))
        (1960307 'move' call_tmp[1960305](1960310 call +[439636] low[1960686] call_tmp[1960298]))
        const-val ret_tmp[1960313]:2*int(64)[1040056] "temp"
        const-val low[1960693]:int(64)[13] "temp"
        ref tmp[2000789]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103683] "temp"
        (2000794 'move' tmp[2000789](2000791 '.' this[1122877] F5__iterator[2000639]))
        (1960698 'move' low[1960693](1960695 '.v' tmp[2000789] F0_low[2014903]))
        (1960316 call _build_tuple[1040014] low[1960693] call_tmp[1960305] ret_tmp[1960313])
        (1960320 'move' tmp[1960289] ret_tmp[1960313])
        (1960323 'move' tmp[1960226] tmp[1960289])
      }
      const tmp[2000796]:2*int(64)[1040056] "temp"
      (1960327 '=' tmp[2000796] tmp[1960226])
      (2000798 '.=' this[1122877] F6_tmp[2000641] tmp[2000796])
      (1960330 'noop')
      1
      ref call_tmp[1960332]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
      ref tmp[2000802]:_ref(2*int(64))[1040129] "temp"
      (2000807 'move' tmp[2000802](2000804 '.' this[1122877] F6_tmp[2000641]))
      (1960334 'move' call_tmp[1960332](1960336 '.' tmp[2000802] x0[1040052]))
      const-val start[1960339]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[1960341]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1960343 'move' coerce_tmp[1960341](1960345 'deref' call_tmp[1960332]))
      (1960347 '=' start[1960339] coerce_tmp[1960341])
      (1960350 'noop')
      ref call_tmp[1960351]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
      ref tmp[2000809]:_ref(2*int(64))[1040129] "temp"
      (2000814 'move' tmp[2000809](2000811 '.' this[1122877] F6_tmp[2000641]))
      (1960353 'move' call_tmp[1960351](1960355 '.' tmp[2000809] x1[1040054]))
      const-val end[1960358]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[1960360]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1960362 'move' coerce_tmp[1960360](1960364 'deref' call_tmp[1960351]))
      (1960366 '=' end[1960358] coerce_tmp[1960360])
      (1960369 'noop')
      val _indexOfInterest[1960370]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      const-val call_tmp[1960374]:_ir_chpl_direct_param_stride_range_iter[1103292] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val ret_tmp[1960376]:_ir_chpl_direct_param_stride_range_iter[1103292] "temp"
      (1960379 call chpl_direct_param_stride_range_iter[1102524] coerce_tmp[1960341] coerce_tmp[1960360] ret_tmp[1960376])
      (1960383 'move' call_tmp[1960374] ret_tmp[1960376])
      val tmp[2000816]:_ic_chpl_direct_param_stride_range_iter[1103286] "temp"
      (1960386 'move' tmp[2000816](1960389 call _getIterator[1103301] call_tmp[1960374]))
      (2000818 '.=' this[1122877] F7__iterator[2000643] tmp[2000816])
      val ret[1960392]:_ir_chpl_direct_param_stride_range_iter[1103292] "dead after last mention" "RVV" "temp"
      val call_tmp[1960394]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1960397 call chpl_range_check_stride[1102844])
      val call_tmp[1960400]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val tmp[2000822]:int(64)[13] "temp"
      (1960402 'move' tmp[2000822] 0)
      (2000824 '.=' this[1122877] F8_i[2000645] tmp[2000822])
      val call_tmp[1960405]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val default_arg_first[1960407]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
      const-val low[1960409]:int(64)[13] "temp"
      ref tmp[2000828]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103429] "temp"
      (2000833 'move' tmp[2000828](2000830 '.' this[1122877] F7__iterator[2000643]))
      (1960411 'move' low[1960409](1960413 '.v' tmp[2000828] F0_low[2016401]))
      (1960416 'move' default_arg_first[1960407](1960419 call chpl_checkIfRangeIterWillOverflow_default_first[1103198] low[1960409]))
      const-val default_arg_last[1960421]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
      const-val high[1960423]:int(64)[13] "temp"
      ref tmp[2000835]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103429] "temp"
      (2000840 'move' tmp[2000835](2000837 '.' this[1122877] F7__iterator[2000643]))
      (1960425 'move' high[1960423](1960427 '.v' tmp[2000835] F1_high[2016405]))
      (1960430 'move' default_arg_last[1960421](1960433 call chpl_checkIfRangeIterWillOverflow_default_last[1103226] high[1960423]))
      const-val _return_tmp_[1960435]:bool[10] "dead after last mention" "temp"
      const-val low[1960437]:int(64)[13] "temp"
      ref tmp[2000842]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103429] "temp"
      (2000847 'move' tmp[2000842](2000844 '.' this[1122877] F7__iterator[2000643]))
      (1960439 'move' low[1960437](1960441 '.v' tmp[2000842] F0_low[2016401]))
      const-val high[1960444]:int(64)[13] "temp"
      ref tmp[2000849]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103429] "temp"
      (2000854 'move' tmp[2000849](2000851 '.' this[1122877] F7__iterator[2000643]))
      (1960446 'move' high[1960444](1960448 '.v' tmp[2000849] F1_high[2016405]))
      (1960451 'move' _return_tmp_[1960435](1960454 call chpl_checkIfRangeIterWillOverflow[1096076] low[1960437] high[1960444] 1 default_arg_first[1960407] default_arg_last[1960421] 1))
      CForLoop[1960461]
      {
        const-val yret[1960490]:int(64)[13] "dead after last mention" "YVV" "temp"
        const-val tmp[2000856]:int(64)[13] "temp"
        (2000861 'move' tmp[2000856](2000858 '.v' this[1122877] F8_i[2000645]))
        (1960492 'move' yret[1960490] tmp[2000856])
        const-val _yieldedIndex[1960495]:int(64)[13] "temp"
        const-val tmp[2000863]:int(64)[13] "temp"
        (2000868 'move' tmp[2000863](2000865 '.v' this[1122877] F8_i[2000645]))
        (1960497 'move' _yieldedIndex[1960495] tmp[2000863])
        const-val i[1960501]:int(64)[13] "const" "index var" "insert auto destroy"
        (1960503 'move' i[1960501] _yieldedIndex[1960495])
        const-val yret[1960506]:int(64)[13] "dead after last mention" "YVV" "temp"
        (1960508 'move' yret[1960506] _yieldedIndex[1960495])
        const-val _yieldedIndex[1960536]:int(64)[13] "temp"
        (1960642 'move' _yieldedIndex[1960536] _yieldedIndex[1960495])
        const-val i[1960538]:int(64)[13] "const" "index var" "insert auto destroy"
        (1960540 'move' i[1960538] _yieldedIndex[1960536])
        const-val yret[1960543]:int(64)[13] "dead after last mention" "YVV" "temp"
        (1960545 'move' yret[1960543] _yieldedIndex[1960536])
        const-val _yieldedIndex[1960548]:int(64)[13] "temp"
        (1960550 'move' _yieldedIndex[1960548] _yieldedIndex[1960536])
        const-val i[1960554]:int(64)[13] "const" "index var" "insert auto destroy"
        (1960556 'move' i[1960554] _yieldedIndex[1960548])
        const-val yret[1960559]:uint(8)[100] "dead after last mention" "YVV" "temp"
        ref call_tmp[1960561]:_ref(uint(8))[936908] "dead after last mention" "maybe param" "temp"
        ref _this_tmp_[1960563]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "temp"
        ref tmp[2000870]:_ref(string)[937939] "temp"
        (2000875 'move' tmp[2000870](2000872 '.' this[1122877] F3_localThis[2000635]))
        (1960565 'move' _this_tmp_[1960563](1960568 call buff[757964] tmp[2000870]))
        val coerce_tmp[1960570]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1960572 'move' coerce_tmp[1960570](1960574 'deref' _this_tmp_[1960563]))
        (1960576 'move' call_tmp[1960561](1960579 call this[954091] coerce_tmp[1960570] _yieldedIndex[1960548]))
        const-val coerce_tmp[1960582]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
        (1960584 'move' coerce_tmp[1960582](1960586 'deref' call_tmp[1960561]))
        (1960588 '=' yret[1960559] coerce_tmp[1960582])
        (1960591 'noop')
        const-val _yieldedIndex[1960592]:uint(8)[100] "temp"
        (1960594 'move' _yieldedIndex[1960592] coerce_tmp[1960582])
        const-val b[1960598]:uint(8)[100] "const" "index var" "insert auto destroy"
        (1960600 'move' b[1960598] _yieldedIndex[1960592])
        val call_tmp[1960605]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val tmp[2000877]:int(32)[95] "temp"
        (1960607 'move' tmp[2000877](1960609 'cast' int(32)[95] _yieldedIndex[1960592]))
        (2000879 '.=' this[1122877] F13_yret[2000655] tmp[2000877])
        val tmp[2000887]:int(32)[95] "temp"
        (2000892 'move' tmp[2000887](2000889 '.v' this[1122877] F13_yret[2000655]))
        (2000884 '.=' this[1122877] value[2000659] tmp[2000887])
        (2001193 '.=' this[1122877] more[1122852] 2)
        gotoIterEnd _end[2001191] _end[2001191]
        label _jump_break_2[2001201]
        val tmp[2000894]:_ic_chpl_direct_param_stride_range_iter[1103286] "temp"
        (2000899 'move' tmp[2000894](2000896 '.v' this[1122877] F7__iterator[2000643]))
        (1960636 call _freeIterator[1103474] tmp[2000894])
        ref tmp[2000901]:_ref(2*int(64))[1040129] "temp"
        (2000906 'move' tmp[2000901](2000903 '.' this[1122877] F6_tmp[2000641]))
        (1960639 call chpl__autoDestroy[1534672] tmp[2000901])
        val tmp[2000908]:_ic_chpl_direct_counted_range_iter_helper[1103540] "temp"
        (2000913 'move' tmp[2000908](2000910 '.v' this[1122877] F5__iterator[2000639]))
        (1960617 call _freeIterator[1103724] tmp[2000908])
        val tmp[2000915]:_ic_chpl_direct_counted_range_iter[1103790] "temp"
        (2000920 'move' tmp[2000915](2000917 '.v' this[1122877] F4__iterator[2000637]))
        (1960620 call _freeIterator[1103974] tmp[2000915])
        ref tmp[2000922]:_ref(string)[937939] "temp"
        (2000927 'move' tmp[2000922](2000924 '.' this[1122877] F3_localThis[2000635]))
        (1960623 call chpl__autoDestroy[1461530] tmp[2000922])
        val tmp[2000929]:_ic_chpl_bytes__ref_string[1108256] "temp"
        (2000934 'move' tmp[2000929](2000931 '.v' this[1122877] F2__iterator[2000633]))
        (1960626 call _freeIterator[1109569] tmp[2000929])
        ref tmp[2000936]:_ref(string)[937939] "temp"
        (2000941 'move' tmp[2000936](2000938 '.' this[1122877] F1_localThis[2000631]))
        (1960629 call chpl__autoDestroy[1461530] tmp[2000936])
        gotoReturn _endcodepoints[1813905] _endcodepoints[1813905]
        label _jump_2[2001199]
        {
          const-val low[1960463]:int(64)[13] "temp"
          ref tmp[2000943]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103429] "temp"
          (2000948 'move' tmp[2000943](2000945 '.' this[1122877] F7__iterator[2000643]))
          (1960465 'move' low[1960463](1960467 '.v' tmp[2000943] F0_low[2016401]))
          val tmp[2000950]:int(64)[13] "temp"
          (1960470 '=' tmp[2000950] low[1960463])
          (2000952 '.=' this[1122877] F8_i[2000645] tmp[2000950])
        }
        {
          const-val high[1960474]:int(64)[13] "temp"
          ref tmp[2000956]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103429] "temp"
          (2000961 'move' tmp[2000956](2000958 '.' this[1122877] F7__iterator[2000643]))
          (1960476 'move' high[1960474](1960478 '.v' tmp[2000956] F1_high[2016405]))
          val tmp[2000963]:int(64)[13] "temp"
          (2000968 'move' tmp[2000963](2000965 '.v' this[1122877] F8_i[2000645]))
          (1960481 '<=' tmp[2000963] high[1960474])
        }
        {
          val call_tmp[1960485]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          val tmp[2000970]:int(64)[13] "temp"
          (2000975 'move' tmp[2000970](2000972 '.v' this[1122877] F8_i[2000645]))
          (1960487 '+=' tmp[2000970] 1)
          (2000977 '.=' this[1122877] F8_i[2000645] tmp[2000970])
        }
      }
      label _endchpl_direct_param_stride_range_iter[1960524]
      val tmp[2000981]:_ic_chpl_direct_param_stride_range_iter[1103286] "temp"
      (2000986 'move' tmp[2000981](2000983 '.v' this[1122877] F7__iterator[2000643]))
      (1960527 call _freeIterator[1103474] tmp[2000981])
      ref tmp[2000988]:_ref(2*int(64))[1040129] "temp"
      (2000993 'move' tmp[2000988](2000990 '.' this[1122877] F6_tmp[2000641]))
      (1960530 call chpl__autoDestroy[1534672] tmp[2000988])
      label _endchpl_direct_counted_range_iter_helper[1960532]
      val tmp[2000995]:_ic_chpl_direct_counted_range_iter_helper[1103540] "temp"
      (2001000 'move' tmp[2000995](2000997 '.v' this[1122877] F5__iterator[2000639]))
      (1894189 call _freeIterator[1103724] tmp[2000995])
      label _endchpl_direct_counted_range_iter[1894191]
      val tmp[2001002]:_ic_chpl_direct_counted_range_iter[1103790] "temp"
      (2001007 'move' tmp[2001002](2001004 '.v' this[1122877] F4__iterator[2000637]))
      (1894194 call _freeIterator[1103974] tmp[2001002])
      ref tmp[2001009]:_ref(string)[937939] "temp"
      (2001014 'move' tmp[2001009](2001011 '.' this[1122877] F3_localThis[2000635]))
      (1894197 call chpl__autoDestroy[1461530] tmp[2001009])
      label _endchpl_bytes[1894199]
      val tmp[2001016]:_ic_chpl_bytes__ref_string[1108256] "temp"
      (2001021 'move' tmp[2001016](2001018 '.v' this[1122877] F2__iterator[2000633]))
      (1841866 call _freeIterator[1109569] tmp[2001016])
    }
    {
      val tmp[2001023]:int(64)[13] "temp"
      (540351 'move' tmp[2001023] 0)
      (2001025 '.=' this[1122877] F9_i[2000647] tmp[2001023])
      val tmp[33799]:bool[10] "dead after last mention" "temp"
      ref call_tmp[600175]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
      ref tmp[2001029]:_ref(string)[937939] "temp"
      (2001034 'move' tmp[2001029](2001031 '.' this[1122877] F1_localThis[2000631]))
      (600178 'move' call_tmp[600175](33826 call buffLen[757886] tmp[2001029]))
      const-val call_tmp[600180]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1123014]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1123018 'move' coerce_tmp[1123014](1123016 'deref' call_tmp[600175]))
      (600183 'move' call_tmp[600180](33823 call <[437452] 0 coerce_tmp[1123014]))
      (33829 'move' tmp[33799] call_tmp[600180])
      WhileDo[33804]
      {
        ref call_tmp[600187]:_ref(c_ptr(uint(8)))[937432] "dead at end of block" "maybe param" "temp"
        ref tmp[2001036]:_ref(string)[937939] "temp"
        (2001041 'move' tmp[2001036](2001038 '.' this[1122877] F1_localThis[2000631]))
        (600190 'move' call_tmp[600187](33759 call buff[757964] tmp[2001036]))
        ref call_tmp[600194]:_ref(int(64))[936572] "dead at end of block" "maybe param" "temp"
        ref tmp[2001043]:_ref(string)[937939] "temp"
        (2001048 'move' tmp[2001043](2001045 '.' this[1122877] F1_localThis[2000631]))
        (600197 'move' call_tmp[600194](33765 call buffLen[757886] tmp[2001043]))
        const-val call_tmp[600199]:(syserr,int(32),int(32))[964620] "dead at end of block" "maybe param" "temp"
        val coerce_tmp[1123023]:c_ptr(uint(8))[937423] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1123027 'move' coerce_tmp[1123023](1123025 'deref' call_tmp[600187]))
        const-val coerce_tmp[1123029]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1123033 'move' coerce_tmp[1123029](1123031 'deref' call_tmp[600194]))
        const-val tmp[2001050]:int(64)[13] "temp"
        (2001055 'move' tmp[2001050](2001052 '.v' this[1122877] F9_i[2000647]))
        ref tmp[2001057]:_ref((syserr,int(32),int(32)))[964727] "temp"
        (2001062 'move' tmp[2001057](2001059 '.' this[1122877] F10_ret_tmp[2000649]))
        (33773 call decodeHelp[174406] coerce_tmp[1123023] coerce_tmp[1123029] tmp[2001050] 1 tmp[2001057])
        const-val tmp[2001064]:(syserr,int(32),int(32))[964620] "temp"
        (2001069 'move' tmp[2001064](2001066 '.v' this[1122877] F10_ret_tmp[2000649]))
        (1831316 'move' call_tmp[600199] tmp[2001064])
        const tmp[2001071]:(syserr,int(32),int(32))[964620] "temp"
        (540353 'move' tmp[2001071] call_tmp[600199])
        (2001073 '.=' this[1122877] F11_tmp[2000651] tmp[2001071])
        1
        ref call_tmp[600204]:_ref(syserr)[948832] "dead at end of block" "maybe param" "reference to a const" "temp"
        ref tmp[2001077]:_ref((syserr,int(32),int(32)))[964727] "temp"
        (2001082 'move' tmp[2001077](2001079 '.' this[1122877] F11_tmp[2000651]))
        (600207 'move' call_tmp[600204](1123043 '.' tmp[2001077] x0[964614]))
        const-val decodeRet[33750]:syserr[223584] "dead at end of block" "const" "insert auto destroy"
        const-val coerce_tmp[1123048]:syserr[223584] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1123052 'move' coerce_tmp[1123048](1123050 'deref' call_tmp[600204]))
        (540355 'move' decodeRet[33750](1123046 call chpl__initCopy[964485] coerce_tmp[1123048]))
        ref call_tmp[600209]:_ref(int(32))[936626] "dead at end of block" "maybe param" "reference to a const" "temp"
        ref tmp[2001084]:_ref((syserr,int(32),int(32)))[964727] "temp"
        (2001089 'move' tmp[2001084](2001086 '.' this[1122877] F11_tmp[2000651]))
        (600212 'move' call_tmp[600209](1123057 '.' tmp[2001084] x1[964616]))
        const-val coerce_tmp[1123062]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1123066 'move' coerce_tmp[1123062](1123064 'deref' call_tmp[600209]))
        const tmp[2001091]:int(32)[95] "temp"
        (540357 'move' tmp[2001091](1123060 call chpl__initCopy[964757] coerce_tmp[1123062]))
        (2001093 '.=' this[1122877] F14_cp[2000657] tmp[2001091])
        ref call_tmp[600214]:_ref(int(32))[936626] "dead at end of block" "maybe param" "reference to a const" "temp"
        ref tmp[2001097]:_ref((syserr,int(32),int(32)))[964727] "temp"
        (2001102 'move' tmp[2001097](2001099 '.' this[1122877] F11_tmp[2000651]))
        (600217 'move' call_tmp[600214](1123071 '.' tmp[2001097] x2[964618]))
        const-val coerce_tmp[1123076]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1123080 'move' coerce_tmp[1123076](1123078 'deref' call_tmp[600214]))
        const tmp[2001104]:int(32)[95] "temp"
        (540359 'move' tmp[2001104](1123074 call chpl__initCopy[964757] coerce_tmp[1123076]))
        (2001106 '.=' this[1122877] F12_nBytes[2000653] tmp[2001104])
        const-val yret[504031]:int(32)[95] "dead after last mention" "YVV" "temp"
        val call_tmp[600219]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        const-val tmp[2001110]:int(32)[95] "temp"
        (2001115 'move' tmp[2001110](2001112 '.v' this[1122877] F14_cp[2000657]))
        (1123106 'move' yret[504031] tmp[2001110])
        const tmp[2001121]:int(32)[95] "temp"
        (2001126 'move' tmp[2001121](2001123 '.v' this[1122877] F14_cp[2000657]))
        (2001118 '.=' this[1122877] value[2000659] tmp[2001121])
        (2001203 '.=' this[1122877] more[1122852] 3)
        gotoIterEnd _end[2001191] _end[2001191]
        label _jump_break_3[2001211]
        ref tmp[2001128]:_ref((syserr,int(32),int(32)))[964727] "temp"
        (2001133 'move' tmp[2001128](2001130 '.' this[1122877] F11_tmp[2000651]))
        (1841868 call chpl__autoDestroy[1465403] tmp[2001128])
        ref tmp[2001135]:_ref(string)[937939] "temp"
        (2001140 'move' tmp[2001135](2001137 '.' this[1122877] F1_localThis[2000631]))
        (1841871 call chpl__autoDestroy[1461530] tmp[2001135])
        gotoReturn _endcodepoints[1813905] _endcodepoints[1813905]
        label _jump_3[2001209]
        const-val coerce_tmp[1123084]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        const-val tmp[2001142]:int(32)[95] "temp"
        (2001147 'move' tmp[2001142](2001144 '.v' this[1122877] F12_nBytes[2000653]))
        (1123090 'move' coerce_tmp[1123084](1123086 'cast' int(64)[13] tmp[2001142]))
        ref tmp[2001149]:_ref(int(64))[936572] "temp"
        (2001154 'move' tmp[2001149](2001151 '.' this[1122877] F9_i[2000647]))
        (33796 call +=[451315] tmp[2001149] coerce_tmp[1123084])
        ref tmp[2001156]:_ref((syserr,int(32),int(32)))[964727] "temp"
        (2001161 'move' tmp[2001156](2001158 '.' this[1122877] F11_tmp[2000651]))
        (1841875 call chpl__autoDestroy[1465403] tmp[2001156])
        ref call_tmp[600226]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
        ref tmp[2001163]:_ref(string)[937939] "temp"
        (2001168 'move' tmp[2001163](2001165 '.' this[1122877] F1_localThis[2000631]))
        (600229 'move' call_tmp[600226](33813 call buffLen[757886] tmp[2001163]))
        const-val call_tmp[600231]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1123094]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1123098 'move' coerce_tmp[1123094](1123096 'deref' call_tmp[600226]))
        const-val tmp[2001170]:int(64)[13] "temp"
        (2001175 'move' tmp[2001170](2001172 '.v' this[1122877] F9_i[2000647]))
        (600234 'move' call_tmp[600231](33810 call <[437452] tmp[2001170] coerce_tmp[1123094]))
        (33816 'move' tmp[33799] call_tmp[600231])
        tmp[33799]
      }
    }
    ref tmp[2001177]:_ref(string)[937939] "temp"
    (2001182 'move' tmp[2001177](2001179 '.' this[1122877] F1_localThis[2000631]))
    (1841878 call chpl__autoDestroy[1461530] tmp[2001177])
    label _endcodepoints[1813905]
    (2001213 '.=' this[1122877] more[1122852] 0)
    label _end[2001191]
    (2001272 return _void[55])
  }
  function _ic_codepoints__ref_string[1122849].zip1[1122884](const in arg this[1122886]:_ic_codepoints__ref_string[1122849]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (2001184 call advance[1122875] this[1122886])
    (1122891 return _void[55])
  }
  function _ic_codepoints__ref_string[1122849].zip2[1122893](const in arg this[1122895]:_ic_codepoints__ref_string[1122849]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1122900 return _void[55])
  }
  function _ic_codepoints__ref_string[1122849].zip3[1122902](const in arg this[1122904]:_ic_codepoints__ref_string[1122849]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (2001187 call advance[1122875] this[1122904])
    (1122909 return _void[55])
  }
  function _ic_codepoints__ref_string[1122849].zip4[1122911](const in arg this[1122913]:_ic_codepoints__ref_string[1122849]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1122918 return _void[55])
  }
  function _ic_codepoints__ref_string[1122849].hasMore[1122920](const in arg this[1122922]:_ic_codepoints__ref_string[1122849]) : int(64)[13] "auto ii" "inline" "method" "resolved"
  {
    val tmp[2001275]:int(64)[13] "temp"
    (2001280 'move' tmp[2001275](2001277 '.v' this[1122922] more[1122852]))
    (2001282 return tmp[2001275])
  }
  function _ic_codepoints__ref_string[1122849].getValue[1122929](const in arg this[1122931]:_ic_codepoints__ref_string[1122849]) : int(32)[95] "auto ii" "inline" "method" "resolved"
  {
    val tmp[2001285]:int(32)[95] "temp"
    (2001290 'move' tmp[2001285](2001287 '.v' this[1122931] value[2000659]))
    (2001292 return tmp[2001285])
  }
  function _ref(string)[937939].codepoints[33663](const  ref arg this[33665]:_ref(string)[937939], ref arg _retArg[1829657]:_ref(_ir_codepoints__ref_string)[1122966]) : void[4] "fn returns via _retArg" "inline" "iterator fn" "method" "resolved" "fn synchronization free" "no return value for void"
  {
    val _ir[2001300]:_ir_codepoints__ref_string[1122855] "temp"
    (2001302 '.=' _ir[2001300] F0_this[2000629] this[33665])
    (2001306 '=' _retArg[1829657] _ir[2001300])
    (2001309 return _void[55])
  }
  function _ic_codepoints__ref_string[1122849].init[1122938](const in arg this[1122940]:_ic_codepoints__ref_string[1122849]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (2001295 return _void[55])
  }
  function _ic_codepoints__ref_string[1122849].incr[1122947](const in arg this[1122949]:_ic_codepoints__ref_string[1122849]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (2001298 return _void[55])
  }
  type _ic_codepoints__ref_string[1122849] val super[1122850]:object[22] "super class" val more[1122852]:int(64)[13] ref F0_this[2000627]:_ref(string)[937939] val F1_localThis[2000631]:string[26] val F2__iterator[2000633]:_ic_chpl_bytes__ref_string[1108256] val F3_localThis[2000635]:string[26] val F4__iterator[2000637]:_ic_chpl_direct_counted_range_iter[1103790] val F5__iterator[2000639]:_ic_chpl_direct_counted_range_iter_helper[1103540] const F6_tmp[2000641]:2*int(64)[1040056] val F7__iterator[2000643]:_ic_chpl_direct_param_stride_range_iter[1103286] val F8_i[2000645]:int(64)[13] val F9_i[2000647]:int(64)[13] const-val F10_ret_tmp[2000649]:(syserr,int(32),int(32))[964620] const F11_tmp[2000651]:(syserr,int(32),int(32))[964620] const F12_nBytes[2000653]:int(32)[95] val F13_yret[2000655]:int(32)[95] const F14_cp[2000657]:int(32)[95] val value[2000659]:int(32)[95]
  type _ir_codepoints__ref_string[1122855] ref F0_this[2000629]:_ref(string)[937939]
  function _getIterator[1122864](const  ref arg ir[1122866]:_ir_codepoints__ref_string[1122855]) : _ic_codepoints__ref_string[1122849] "auto ii" "inline" "resolved" "fn synchronization free" "unsafe"
  {
    val ret[1122973]:_ic_codepoints__ref_string[1122849] "dead after last mention" "RVV" "temp"
    val _ic_[1122856]:_ic_codepoints__ref_string[1122849] "dead after last mention" "temp"
    const-val call_tmp[1122980]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1122983 'move' call_tmp[1122980](1122995 'sizeof_bundle' _ic_codepoints__ref_string[1122849]))
    const-val cast_tmp[1122998]:c_void_ptr[149] "dead after last mention" "temp"
    (1123000 'move' cast_tmp[1122998](1122861 call chpl_here_alloc[187742] call_tmp[1122980] 34))
    (1122869 'move' _ic_[1122856](1123002 'cast' _ic_codepoints__ref_string[1122849] cast_tmp[1122998]))
    (1122871 'setcid' _ic_[1122856])
    (1122978 'move' ret[1122973] _ic_[1122856])
    (2001312 '.=' ret[1122973] more[1122852] 1)
    ref tmp[2001316]:_ref(string)[937939] "temp"
    (2001321 'move' tmp[2001316](2001317 '.v' ir[1122866] F0_this[2000629]))
    (2001323 '.=' ret[1122973] F0_this[2000627] tmp[2001316])
    (1122975 return ret[1122973])
  }
  function _ref(string)[937939].this[34632](const  ref arg this[34634]:_ref(string)[937939], const  ref arg i[34629]:codepointIndex[28274], ref arg _retArg[1829667]:_ref(string)[937939]) : void[4] "fn returns via _retArg" "method" "resolved"
  {
    const-val ret[504137]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[600791]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1829691]:string[26] "temp"
    (34646 call item[34688] this[34634] i[34629] ret_tmp[1829691])
    (1829694 'move' call_tmp[600791] ret_tmp[1829691])
    (1180959 'move' ret[504137] call_tmp[600791])
    (1829669 '=' _retArg[1829667] ret[504137])
    (1829671 return _void[55])
  }
  function _ref(string)[937939].this[34660](const  ref arg this[34662]:_ref(string)[937939], const in arg i[34657]:int(64)[13], ref arg _retArg[1829685]:_ref(string)[937939]) : void[4] "fn returns via _retArg" "inline" "method" "resolved"
  {
    const-val ret[504147]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[600798]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1829707]:string[26] "temp"
    (34674 call item[35008] this[34662] i[34657] ret_tmp[1829707])
    (1829710 'move' call_tmp[600798] ret_tmp[1829707])
    (1180965 'move' ret[504147] call_tmp[600798])
    (1829687 '=' _retArg[1829685] ret[504147])
    (1829689 return _void[55])
  }
  function _ref(string)[937939].item[34688](const  ref arg this[34690]:_ref(string)[937939], const  ref arg i[34685]:codepointIndex[28274], ref arg _retArg[1829697]:_ref(string)[937939]) : void[4] "fn returns via _retArg" "method" "resolved"
  {
    val ret[504157]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[553495]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[553503]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    const-val call_tmp[600813]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (600816 'move' call_tmp[600813](34699 call <[29040] i[34685] 0))
    (553505 'move' tmp[553503] call_tmp[600813])
    (553510 'move' tmp[553495] tmp[553503])
    const-val call_tmp[600818]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (600821 'move' call_tmp[600818] tmp[553495])
    if call_tmp[600818]
    {
      (34708 call halt[1157128] "index " i[34685] " out of bounds for string")
    }
    const-val call_tmp[600825]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (600828 'move' call_tmp[600825](34721 call isEmpty[35061] this[34690]))
    const-val call_tmp[600830]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (600833 'move' call_tmp[600830] call_tmp[600825])
    if call_tmp[600830]
    {
      (504163 'move' ret[504157](1829701 call chpl__initCopy[981348] ""))
      gotoReturn _end_item[504155] _end_item[504155]
    }
    const-val call_tmp[600837]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (600840 'move' call_tmp[600837](34751 call isASCII[31046] this[34690]))
    const-val call_tmp[600842]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (600845 'move' call_tmp[600842] call_tmp[600837])
    if call_tmp[600842]
    {
      const-val tmp[553522]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val tmp[553530]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[600859]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (600862 'move' call_tmp[600859](34755 call numBytes[32807] this[34690]))
      const-val call_tmp[600864]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (600867 'move' call_tmp[600864](34758 call >=[29190] i[34685] call_tmp[600859]))
      (553532 'move' tmp[553530] call_tmp[600864])
      (553537 'move' tmp[553522] tmp[553530])
      const-val call_tmp[600869]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (600872 'move' call_tmp[600869] tmp[553522])
      if call_tmp[600869]
      {
        const-val call_tmp[600876]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (600879 'move' call_tmp[600876](34768 call size[32769] this[34690]))
        (34771 call halt[1175761] "index " i[34685] " out of bounds for string with length " call_tmp[600876])
      }
      ref call_tmp[600883]:_ref(c_ptr(uint(8)))[937432] "dead at end of block" "maybe param" "temp"
      (600886 'move' call_tmp[600883](34786 call buff[757964] this[34690]))
      const-val call_tmp[600888]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (600891 'move' call_tmp[600888](34793 call _cast[39514] i[34685]))
      ref call_tmp[600895]:_ref(int(32))[936626] "dead at end of block" "maybe param" "temp"
      (600898 'move' call_tmp[600895](34799 call locale_id[758042] this[34690]))
      const-val call_tmp[600900]:(c_ptr(uint(8)),int(64))[955208] "dead at end of block" "maybe param" "temp"
      val coerce_tmp[1180811]:c_ptr(uint(8))[937423] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1180815 'move' coerce_tmp[1180811](1180813 'deref' call_tmp[600883]))
      const-val coerce_tmp[1180817]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1180821 'move' coerce_tmp[1180817](1180819 'deref' call_tmp[600895]))
      const-val ret_tmp[1831245]:(c_ptr(uint(8)),int(64))[955208] "temp"
      (34803 call bufferCopy[172928] coerce_tmp[1180811] call_tmp[600888] 1 coerce_tmp[1180817] ret_tmp[1831245])
      (1831248 'move' call_tmp[600900] ret_tmp[1831245])
      const-val tmp[34804]:(c_ptr(uint(8)),int(64))[955208] "dead at end of block" "insert auto destroy" "temp"
      (540399 'move' tmp[34804] call_tmp[600900])
      1
      ref call_tmp[600905]:_ref(c_ptr(uint(8)))[937432] "dead at end of block" "maybe param" "temp"
      (600908 'move' call_tmp[600905](1180831 '.' tmp[34804] x0[955204]))
      val newBuff[34779]:c_ptr(uint(8))[937423] "dead at end of block" "insert auto destroy"
      val coerce_tmp[1180836]:c_ptr(uint(8))[937423] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1180840 'move' coerce_tmp[1180836](1180838 'deref' call_tmp[600905]))
      (1841881 '=' newBuff[34779] coerce_tmp[1180836])
      (540401 'noop')
      ref call_tmp[600910]:_ref(int(64))[936572] "dead at end of block" "maybe param" "temp"
      (600913 'move' call_tmp[600910](1180845 '.' tmp[34804] x1[955206]))
      const-val allocSize[34781]:int(64)[13] "dead at end of block" "insert auto destroy"
      const-val coerce_tmp[1180850]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1180854 'move' coerce_tmp[1180850](1180852 'deref' call_tmp[600910]))
      (1841884 '=' allocSize[34781] coerce_tmp[1180850])
      (540403 'noop')
      const-val call_tmp[600915]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1829171]:string[26] "temp"
      (34823 call chpl_createStringWithOwnedBufferNV[30673] newBuff[34779] 1 allocSize[34781] 1 ret_tmp[1829171])
      (1829174 'move' call_tmp[600915] ret_tmp[1829171])
      (1180953 'move' ret[504157] call_tmp[600915])
      (1841893 call chpl__autoDestroy[1465141] tmp[34804])
      gotoReturn _end_item[504155] _end_item[504155]
    }
    {
      val charCount[34827]:int(64)[13] "dead at end of block" "insert auto destroy"
      (540405 'move' charCount[34827] 0)
      {
        val _indexOfInterest[34903]:(int(32),byteIndex,int(64))[1122142] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[34904]:_ic__cpIndexLen__ref_string[1122385] "dead at end of block" "expr temp" "temp"
        const-val call_tmp[600922]:_ir__cpIndexLen__ref_string[1122391] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val default_arg_start[1180862]:byteIndex[28170] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
        const-val ret_tmp[1834084]:byteIndex[28170] "temp"
        (1180864 call _cpIndexLen_default_start[1122031] this[34690] ret_tmp[1834084])
        (1834087 'move' default_arg_start[1180862] ret_tmp[1834084])
        const-val ret_tmp[1829345]:_ir__cpIndexLen__ref_string[1122391] "temp"
        (34840 call _cpIndexLen[31106] this[34690] default_arg_start[1180862] ret_tmp[1829345])
        (1829348 'move' call_tmp[600922] ret_tmp[1829345])
        (34913 'move' _iterator[34904](34911 call _getIterator[1122400] call_tmp[600922]))
        {
          val ret[1894253]:_ir__cpIndexLen__ref_string[1122391] "dead after last mention" "RVV" "temp"
          const-val call_tmp[1894255]:string[26] "dead at end of block" "maybe param" "temp"
          const-val ret_tmp[1894257]:string[26] "temp"
          ref this[1895482]:_ref(string)[937939] "temp"
          (1895487 'move' this[1895482](1895484 '.v' _iterator[34904] F0_this[1997101]))
          (1894260 call localize[32886] this[1895482] ret_tmp[1894257])
          (1894263 'move' call_tmp[1894255] ret_tmp[1894257])
          val localThis[1894266]:string[26] "dead at end of block" "insert auto destroy"
          (1894268 'move' localThis[1894266] call_tmp[1894255])
          const-val call_tmp[1894271]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1894273 'move' call_tmp[1894271](1894276 call isASCII[31046] localThis[1894266]))
          const-val call_tmp[1894278]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1894280 'move' call_tmp[1894278] call_tmp[1894271])
          if call_tmp[1894271]
          {
            const-val _iterator[1894285]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108566] "dead at end of block" "expr temp" "insert auto destroy" "temp"
            const-val call_tmp[1894287]:range(int(64),bounded,false)[1026814] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[1894289]:range(int(64),bounded,false)[1026814] "temp"
            ref this[1895489]:_ref(string)[937939] "temp"
            (1895494 'move' this[1895489](1895491 '.v' _iterator[34904] F0_this[1997101]))
            (1894292 call byteIndices[31065] this[1895489] ret_tmp[1894289])
            (1894295 'move' call_tmp[1894287] ret_tmp[1894289])
            val call_tmp[1894298]:_ic_these_range_int64_t_bounded_F[1096703] "dead at end of block" "expr temp" "maybe param" "temp"
            (1894300 'move' call_tmp[1894298](1894303 call _getIterator[1095320] call_tmp[1894287]))
            const-val call_tmp[1894305]:_ir_chpl_bytes__ref_string[1108262] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[1894307]:_ir_chpl_bytes__ref_string[1108262] "temp"
            ref this[1895496]:_ref(string)[937939] "temp"
            (1895501 'move' this[1895496](1895498 '.v' _iterator[34904] F0_this[1997101]))
            (1894310 call chpl_bytes[33574] this[1895496] ret_tmp[1894307])
            (1894313 'move' call_tmp[1894305] ret_tmp[1894307])
            val call_tmp[1894316]:_ic_chpl_bytes__ref_string[1108256] "dead at end of block" "expr temp" "maybe param" "temp"
            (1894318 'move' call_tmp[1894316](1894321 call _getIterator[1108271] call_tmp[1894305]))
            const-val ret_tmp[1894323]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108566] "temp"
            (1894326 call _build_tuple[1108524] call_tmp[1894298] call_tmp[1894316] ret_tmp[1894323])
            (1894330 'move' _iterator[1894285] ret_tmp[1894323])
            val _iterator[1894333]:_ic_these_range_int64_t_bounded_F[1096703] "temp"
            (1894335 'move' _iterator[1894333](1894337 '.v' _iterator[1894285] x0[1108562]))
            val _iterator[1894340]:_ic_chpl_bytes__ref_string[1108256] "temp"
            (1894342 'move' _iterator[1894340](1894344 '.v' _iterator[1894285] x1[1108564]))
            {
              (1894349 call zip1[1096738] _iterator[1894333])
            }
            {
              (1894353 call zip1[1108291] _iterator[1894340])
            }
            const-val isFinished[1894355]:bool[10] "temp"
            val hasMore[1894357]:bool[10] "temp"
            CForLoop[1894359]
            {
              val _indexOfInterest[1894382]:(int(64),uint(8))[1111040] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              {
                (1894386 call zip2[1108300] _iterator[1894340])
              }
              {
                const-val retTmp[1894389]:int(64)[13] "temp"
                (1894391 'move' retTmp[1894389](1894394 call hasMore[1108327] _iterator[1894340]))
                (1894396 'move' hasMore[1894357](1894398 'cast' bool[10] retTmp[1894389]))
              }
              (1894401 'move' isFinished[1894355](1894403 '!' hasMore[1894357]))
              if isFinished[1894355]
              {
                (1894407 'chpl_error' c"zippered iterations have non-equal lengths")
              }
              {
                (1894411 'move' _index[1894426](1894414 call getValue[1108336] _iterator[1894340]))
              }
              {
                (1894418 call zip2[1096747] _iterator[1894333])
              }
              {
                (1894421 'move' _index[1894432](1894424 call getValue[1096783] _iterator[1894333]))
              }
              val _index[1894426]:uint(8)[100] "temp"
              (1894428 '.=' _indexOfInterest[1894382] x1[1111038] _index[1894426])
              val _index[1894432]:int(64)[13] "temp"
              (1894434 '.=' _indexOfInterest[1894382] x0[1111036] _index[1894432])
              1
              const-val i[1894439]:int(64)[13] "const" "index var" "insert auto destroy"
              (1894441 'move' i[1894439](1894443 '.v' _indexOfInterest[1894382] x0[1111036]))
              const-val b[1894446]:uint(8)[100] "const" "index var" "insert auto destroy"
              (1894448 'move' b[1894446](1894450 '.v' _indexOfInterest[1894382] x1[1111038]))
              const-val yret[1894453]:(int(32),byteIndex,int(64))[1122142] "dead after last mention" "YVV" "temp"
              val call_tmp[1894455]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val call_tmp[1894457]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
              (1894459 'move' call_tmp[1894457](1894461 'cast' int(32)[95] b[1894446]))
              const-val call_tmp[1894464]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
              const-val ret_tmp[1894466]:byteIndex[28170] "temp"
              (1894469 call _cast[39483] i[1894439] ret_tmp[1894466])
              (1894472 'move' call_tmp[1894464] ret_tmp[1894466])
              const-val call_tmp[1894475]:(int(32),byteIndex,int(64))[1122142] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
              const-val ret_tmp[1894477]:(int(32),byteIndex,int(64))[1122142] "temp"
              (1894480 call _build_tuple[1122092] call_tmp[1894457] call_tmp[1894464] 1 ret_tmp[1894477])
              (1894485 'move' call_tmp[1894475] ret_tmp[1894477])
              (1894488 'move' yret[1894453] call_tmp[1894475])
              const-val _yieldedIndex[1895070]:(int(32),byteIndex,int(64))[1122142] "temp"
              (1895301 'move' _yieldedIndex[1895070] call_tmp[1894475])
              {
                1
                const-val cp[1895073]:int(32)[95] "const" "index var" "insert auto destroy"
                (1895075 'move' cp[1895073](1895077 '.v' _yieldedIndex[1895070] x0[1122136]))
                ref byteIdx[1895080]:_ref(byteIndex)[948759] "index var" "insert auto destroy"
                (1895082 'move' byteIdx[1895080](1895084 '.v' _yieldedIndex[1895070] x1[1122138]))
                const-val nBytes[1895087]:int(64)[13] "const" "index var" "insert auto destroy"
                (1895089 'move' nBytes[1895087](1895091 '.v' _yieldedIndex[1895070] x2[1122140]))
                {
                  const-val call_tmp[1895095]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1895097 'move' call_tmp[1895095](1895100 call ==[29538] charCount[34827] i[34685]))
                  const-val call_tmp[1895103]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1895105 'move' call_tmp[1895103] call_tmp[1895095])
                  if call_tmp[1895103]
                  {
                    ref call_tmp[1895110]:_ref(c_ptr(uint(8)))[937432] "dead at end of block" "maybe param" "temp"
                    (1895112 'move' call_tmp[1895110](1895115 call buff[757964] this[34690]))
                    const-val call_tmp[1895117]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                    (1895119 'move' call_tmp[1895117](1895122 call _cast[39462] byteIdx[1895080]))
                    ref call_tmp[1895124]:_ref(int(32))[936626] "dead at end of block" "maybe param" "temp"
                    (1895126 'move' call_tmp[1895124](1895129 call locale_id[758042] this[34690]))
                    const-val call_tmp[1895131]:(c_ptr(uint(8)),int(64))[955208] "dead at end of block" "maybe param" "temp"
                    val coerce_tmp[1895133]:c_ptr(uint(8))[937423] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                    (1895135 'move' coerce_tmp[1895133](1895137 'deref' call_tmp[1895110]))
                    const-val coerce_tmp[1895139]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                    (1895141 'move' coerce_tmp[1895139](1895143 'deref' call_tmp[1895124]))
                    const-val ret_tmp[1895145]:(c_ptr(uint(8)),int(64))[955208] "temp"
                    (1895148 call bufferCopy[172928] coerce_tmp[1895133] call_tmp[1895117] nBytes[1895087] coerce_tmp[1895139] ret_tmp[1895145])
                    (1895154 'move' call_tmp[1895131] ret_tmp[1895145])
                    const-val tmp[1895157]:(c_ptr(uint(8)),int(64))[955208] "dead at end of block" "insert auto destroy" "temp"
                    (1895159 'move' tmp[1895157] call_tmp[1895131])
                    1
                    ref call_tmp[1895163]:_ref(c_ptr(uint(8)))[937432] "dead at end of block" "maybe param" "temp"
                    (1895165 'move' call_tmp[1895163](1895167 '.' tmp[1895157] x0[955204]))
                    val newBuff[1895170]:c_ptr(uint(8))[937423] "dead at end of block" "insert auto destroy"
                    val coerce_tmp[1895172]:c_ptr(uint(8))[937423] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                    (1895174 'move' coerce_tmp[1895172](1895176 'deref' call_tmp[1895163]))
                    (1895178 '=' newBuff[1895170] coerce_tmp[1895172])
                    (1895181 'noop')
                    ref call_tmp[1895182]:_ref(int(64))[936572] "dead at end of block" "maybe param" "temp"
                    (1895184 'move' call_tmp[1895182](1895186 '.' tmp[1895157] x1[955206]))
                    const-val allocSize[1895189]:int(64)[13] "dead at end of block" "insert auto destroy"
                    const-val coerce_tmp[1895191]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                    (1895193 'move' coerce_tmp[1895191](1895195 'deref' call_tmp[1895182]))
                    (1895197 '=' allocSize[1895189] coerce_tmp[1895191])
                    (1895200 'noop')
                    const-val call_tmp[1895201]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[1895203]:string[26] "temp"
                    (1895206 call chpl_createStringWithOwnedBufferNV[30673] newBuff[1895170] nBytes[1895087] allocSize[1895189] 1 ret_tmp[1895203])
                    (1895212 'move' call_tmp[1895201] ret_tmp[1895203])
                    (1895215 'move' ret[504157] call_tmp[1895201])
                    (1895219 call chpl__autoDestroy[1465141] tmp[1895157])
                    ref moreRef1[1895237]:_ref(int(64))[936572] "temp"
                    (1895239 'move' moreRef1[1895237](1895241 '.' _iterator[1894333] more[1096706]))
                    const-val moreVal1[1895244]:int(64)[13] "const" "temp"
                    (1895246 '=' moreVal1[1895244] moreRef1[1895237])
                    const-val moreValNeg1[1895249]:int(64)[13] "const" "temp"
                    (1895251 'move' moreValNeg1[1895249](1895253 'u-' moreVal1[1895244]))
                    (1895255 '=' moreRef1[1895237] moreValNeg1[1895249])
                    (1895259 call advance[1096729] _iterator[1894333])
                    ref moreRef2[1895261]:_ref(int(64))[936572] "temp"
                    (1895263 'move' moreRef2[1895261](1895265 '.' _iterator[1894340] more[1108259]))
                    const-val moreVal2[1895268]:int(64)[13] "const" "temp"
                    (1895270 '=' moreVal2[1895268] moreRef2[1895261])
                    const-val moreValNeg2[1895273]:int(64)[13] "const" "temp"
                    (1895275 'move' moreValNeg2[1895273](1895277 'u-' moreVal2[1895268]))
                    (1895279 '=' moreRef2[1895261] moreValNeg2[1895273])
                    (1895283 call advance[1108282] _iterator[1894340])
                    (1895286 call chpl__autoDestroy[1461793] call_tmp[1894464])
                    (1895289 call _freeIterator[1108724] _iterator[1894285])
                    (1895292 call chpl__autoDestroy[1541417] _iterator[1894285])
                    (1895295 call chpl__autoDestroy[1534375] call_tmp[1894287])
                    (1895298 call chpl__autoDestroy[1461530] localThis[1894266])
                    (1895222 call _freeIterator[1122573] _iterator[34904])
                    (1895225 call chpl__autoDestroy[1461793] default_arg_start[1180862])
                    gotoReturn _end_item[504155] _end_item[504155]
                  }
                  (1895231 call +=[451315] charCount[34827] 1)
                }
                label _continueLabel[1895234]
              }
              (1894562 call chpl__autoDestroy[1461793] call_tmp[1894464])
              {
                (1894566 call zip3[1096756] _iterator[1894333])
              }
              {
                (1894570 call zip3[1108309] _iterator[1894340])
              }
              {
                {
                  (1894363 call init[1096792] _iterator[1894333])
                }
                {
                  (1894367 call init[1108345] _iterator[1894340])
                }
              }
              {
                (1894371 call hasMore[1096774] _iterator[1894333])
              }
              {
                {
                  (1894376 call incr[1096801] _iterator[1894333])
                }
                {
                  (1894380 call incr[1108354] _iterator[1894340])
                }
              }
            }
            {
              const-val retTmp[1894573]:int(64)[13] "temp"
              (1894575 'move' retTmp[1894573](1894578 call hasMore[1108327] _iterator[1894340]))
              (1894580 'move' hasMore[1894357](1894582 'cast' bool[10] retTmp[1894573]))
            }
            if hasMore[1894357]
            {
              (1894587 'chpl_error' c"zippered iterations have non-equal lengths")
            }
            {
              (1894592 call zip4[1108318] _iterator[1894340])
            }
            {
              (1894596 call zip4[1096765] _iterator[1894333])
            }
            (1894599 call _freeIterator[1108724] _iterator[1894285])
            (1894602 call chpl__autoDestroy[1541417] _iterator[1894285])
            (1894605 call chpl__autoDestroy[1534375] call_tmp[1894287])
          }
          {
            const-val call_tmp[1894608]:int(64)[13] "dead at end of block" "maybe param" "temp"
            ref start[1895503]:_ref(byteIndex)[948759] "temp"
            (1895508 'move' start[1895503](1895505 '.v' _iterator[34904] F1_start[1997105]))
            (1894610 'move' call_tmp[1894608](1894613 call _cast[39462] start[1895503]))
            val i[1894615]:int(64)[13] "dead at end of block" "insert auto destroy"
            (1894617 'move' i[1894615] call_tmp[1894608])
            const-val call_tmp[1894620]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1894622 'move' call_tmp[1894620](1894625 call >[437672] call_tmp[1894608] 0))
            const-val call_tmp[1894628]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1894630 'move' call_tmp[1894628] call_tmp[1894620])
            if call_tmp[1894620]
            {
              val tmp[1894635]:bool[10] "dead after last mention" "temp"
              const-val tmp[1894637]:bool[10] "dead after last mention" "maybe param" "temp"
              ref call_tmp[1894639]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
              (1894641 'move' call_tmp[1894639](1894644 call buffLen[757886] localThis[1894266]))
              const-val coerce_tmp[1894646]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1894648 'move' coerce_tmp[1894646](1894650 'deref' call_tmp[1894639]))
              (1894652 'move' tmp[1894637](1894655 call <[437452] i[1894615] coerce_tmp[1894646]))
              val tmp[1894658]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
              const-val tmp[1894660]:bool[10] "dead after last mention" "maybe param" "temp"
              const-val call_tmp[1894662]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1894664 'move' call_tmp[1894662] tmp[1894637])
              (1894667 'move' tmp[1894660] tmp[1894637])
              if tmp[1894637]
              {
                const-val tmp[1894672]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                ref call_tmp[1894674]:_ref(uint(8))[936908] "dead after last mention" "maybe param" "temp"
                ref _this_tmp_[1894676]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "temp"
                (1894678 'move' _this_tmp_[1894676](1894681 call buff[757964] localThis[1894266]))
                val coerce_tmp[1894683]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1894685 'move' coerce_tmp[1894683](1894687 'deref' _this_tmp_[1894676]))
                (1894689 'move' call_tmp[1894674](1894692 call this[954091] coerce_tmp[1894683] i[1894615]))
                const-val call_tmp[1894695]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[1894697]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1894699 'move' coerce_tmp[1894697](1894701 'deref' call_tmp[1894674]))
                (1894703 'move' call_tmp[1894695](1894706 call isInitialByte[181528] coerce_tmp[1894697]))
                const-val call_tmp[1894708]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1894710 'move' call_tmp[1894708](1894713 call ![7494] call_tmp[1894695]))
                (1894715 'move' tmp[1894672] call_tmp[1894708])
                (1894718 'move' tmp[1894658] call_tmp[1894708])
              }
              {
                (1894722 'move' tmp[1894658] 0)
              }
              (1894726 'move' tmp[1894635] tmp[1894658])
              WhileDo[1894729]
              {
                (1894732 call +=[451315] i[1894615] 1)
                const-val tmp[1894735]:bool[10] "dead after last mention" "maybe param" "temp"
                ref call_tmp[1894737]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
                (1894739 'move' call_tmp[1894737](1894742 call buffLen[757886] localThis[1894266]))
                const-val coerce_tmp[1894744]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1894746 'move' coerce_tmp[1894744](1894748 'deref' call_tmp[1894737]))
                (1894750 'move' tmp[1894735](1894753 call <[437452] i[1894615] coerce_tmp[1894744]))
                val tmp[1894756]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val tmp[1894758]:bool[10] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[1894760]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1894762 'move' call_tmp[1894760] tmp[1894735])
                (1894765 'move' tmp[1894758] tmp[1894735])
                if tmp[1894735]
                {
                  const-val tmp[1894770]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  ref call_tmp[1894772]:_ref(uint(8))[936908] "dead after last mention" "maybe param" "temp"
                  ref _this_tmp_[1894774]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "temp"
                  (1894776 'move' _this_tmp_[1894774](1894779 call buff[757964] localThis[1894266]))
                  val coerce_tmp[1894781]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1894783 'move' coerce_tmp[1894781](1894785 'deref' _this_tmp_[1894774]))
                  (1894787 'move' call_tmp[1894772](1894790 call this[954091] coerce_tmp[1894781] i[1894615]))
                  const-val call_tmp[1894793]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[1894795]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1894797 'move' coerce_tmp[1894795](1894799 'deref' call_tmp[1894772]))
                  (1894801 'move' call_tmp[1894793](1894804 call isInitialByte[181528] coerce_tmp[1894795]))
                  const-val call_tmp[1894806]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1894808 'move' call_tmp[1894806](1894811 call ![7494] call_tmp[1894793]))
                  (1894813 'move' tmp[1894770] call_tmp[1894806])
                  (1894816 'move' tmp[1894756] call_tmp[1894806])
                }
                {
                  (1894820 'move' tmp[1894756] 0)
                }
                (1894824 'move' tmp[1894635] tmp[1894756])
                tmp[1894635]
              }
            }
            val tmp[1894828]:bool[10] "dead after last mention" "temp"
            ref call_tmp[1894830]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
            (1894832 'move' call_tmp[1894830](1894835 call buffLen[757886] localThis[1894266]))
            const-val call_tmp[1894837]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val coerce_tmp[1894839]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (1894841 'move' coerce_tmp[1894839](1894843 'deref' call_tmp[1894830]))
            (1894845 'move' call_tmp[1894837](1894848 call <[437452] i[1894615] coerce_tmp[1894839]))
            (1894851 'move' tmp[1894828] call_tmp[1894837])
            WhileDo[1894854]
            {
              ref call_tmp[1894856]:_ref(c_ptr(uint(8)))[937432] "dead at end of block" "maybe param" "temp"
              (1894858 'move' call_tmp[1894856](1894861 call buff[757964] localThis[1894266]))
              ref call_tmp[1894863]:_ref(int(64))[936572] "dead at end of block" "maybe param" "temp"
              (1894865 'move' call_tmp[1894863](1894868 call buffLen[757886] localThis[1894266]))
              const-val call_tmp[1894870]:(syserr,int(32),int(32))[964620] "dead at end of block" "maybe param" "temp"
              val coerce_tmp[1894872]:c_ptr(uint(8))[937423] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1894874 'move' coerce_tmp[1894872](1894876 'deref' call_tmp[1894856]))
              const-val coerce_tmp[1894878]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1894880 'move' coerce_tmp[1894878](1894882 'deref' call_tmp[1894863]))
              const-val ret_tmp[1894884]:(syserr,int(32),int(32))[964620] "temp"
              (1894887 call decodeHelp[174406] coerce_tmp[1894872] coerce_tmp[1894878] i[1894615] 1 ret_tmp[1894884])
              (1894893 'move' call_tmp[1894870] ret_tmp[1894884])
              const-val tmp[1894896]:(syserr,int(32),int(32))[964620] "dead at end of block" "const" "insert auto destroy" "temp"
              (1894898 'move' tmp[1894896] call_tmp[1894870])
              1
              ref call_tmp[1894902]:_ref(syserr)[948832] "dead at end of block" "maybe param" "reference to a const" "temp"
              (1894904 'move' call_tmp[1894902](1894906 '.' tmp[1894896] x0[964614]))
              const-val decodeRet[1894909]:syserr[223584] "dead at end of block" "const" "insert auto destroy"
              const-val coerce_tmp[1894911]:syserr[223584] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1894913 'move' coerce_tmp[1894911](1894915 'deref' call_tmp[1894902]))
              (1894917 'move' decodeRet[1894909](1894920 call chpl__initCopy[964485] coerce_tmp[1894911]))
              ref call_tmp[1894922]:_ref(int(32))[936626] "dead at end of block" "maybe param" "reference to a const" "temp"
              (1894924 'move' call_tmp[1894922](1894926 '.' tmp[1894896] x1[964616]))
              const-val cp[1894929]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
              const-val coerce_tmp[1894931]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1894933 'move' coerce_tmp[1894931](1894935 'deref' call_tmp[1894922]))
              (1894937 'move' cp[1894929](1894940 call chpl__initCopy[964757] coerce_tmp[1894931]))
              ref call_tmp[1894942]:_ref(int(32))[936626] "dead at end of block" "maybe param" "reference to a const" "temp"
              (1894944 'move' call_tmp[1894942](1894946 '.' tmp[1894896] x2[964618]))
              const-val nBytes[1894949]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
              const-val coerce_tmp[1894951]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1894953 'move' coerce_tmp[1894951](1894955 'deref' call_tmp[1894942]))
              (1894957 'move' nBytes[1894949](1894960 call chpl__initCopy[964757] coerce_tmp[1894951]))
              const-val yret[1894962]:(int(32),byteIndex,int(64))[1122142] "dead after last mention" "YVV" "temp"
              val call_tmp[1894964]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val call_tmp[1894966]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
              (1894968 'move' call_tmp[1894966] cp[1894929])
              const-val call_tmp[1894971]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
              const-val ret_tmp[1894973]:byteIndex[28170] "temp"
              (1894976 call _cast[39483] i[1894615] ret_tmp[1894973])
              (1894979 'move' call_tmp[1894971] ret_tmp[1894973])
              const-val call_tmp[1894982]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (1894984 'move' call_tmp[1894982](1894986 'cast' int(64)[13] nBytes[1894949]))
              const-val call_tmp[1894989]:(int(32),byteIndex,int(64))[1122142] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
              const-val ret_tmp[1894991]:(int(32),byteIndex,int(64))[1122142] "temp"
              (1894994 call _build_tuple[1122092] cp[1894929] call_tmp[1894971] call_tmp[1894982] ret_tmp[1894991])
              (1894999 'move' call_tmp[1894989] ret_tmp[1894991])
              (1895002 'move' yret[1894962] call_tmp[1894989])
              const-val _yieldedIndex[1895303]:(int(32),byteIndex,int(64))[1122142] "temp"
              (1895480 'move' _yieldedIndex[1895303] call_tmp[1894989])
              {
                1
                const-val cp[1895306]:int(32)[95] "const" "index var" "insert auto destroy"
                (1895308 'move' cp[1895306](1895310 '.v' _yieldedIndex[1895303] x0[1122136]))
                ref byteIdx[1895313]:_ref(byteIndex)[948759] "index var" "insert auto destroy"
                (1895315 'move' byteIdx[1895313](1895317 '.v' _yieldedIndex[1895303] x1[1122138]))
                const-val nBytes[1895320]:int(64)[13] "const" "index var" "insert auto destroy"
                (1895322 'move' nBytes[1895320](1895324 '.v' _yieldedIndex[1895303] x2[1122140]))
                {
                  const-val call_tmp[1895328]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1895330 'move' call_tmp[1895328](1895333 call ==[29538] charCount[34827] i[34685]))
                  const-val call_tmp[1895336]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1895338 'move' call_tmp[1895336] call_tmp[1895328])
                  if call_tmp[1895336]
                  {
                    ref call_tmp[1895343]:_ref(c_ptr(uint(8)))[937432] "dead at end of block" "maybe param" "temp"
                    (1895345 'move' call_tmp[1895343](1895348 call buff[757964] this[34690]))
                    const-val call_tmp[1895350]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                    (1895352 'move' call_tmp[1895350](1895355 call _cast[39462] byteIdx[1895313]))
                    ref call_tmp[1895357]:_ref(int(32))[936626] "dead at end of block" "maybe param" "temp"
                    (1895359 'move' call_tmp[1895357](1895362 call locale_id[758042] this[34690]))
                    const-val call_tmp[1895364]:(c_ptr(uint(8)),int(64))[955208] "dead at end of block" "maybe param" "temp"
                    val coerce_tmp[1895366]:c_ptr(uint(8))[937423] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                    (1895368 'move' coerce_tmp[1895366](1895370 'deref' call_tmp[1895343]))
                    const-val coerce_tmp[1895372]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                    (1895374 'move' coerce_tmp[1895372](1895376 'deref' call_tmp[1895357]))
                    const-val ret_tmp[1895378]:(c_ptr(uint(8)),int(64))[955208] "temp"
                    (1895381 call bufferCopy[172928] coerce_tmp[1895366] call_tmp[1895350] nBytes[1895320] coerce_tmp[1895372] ret_tmp[1895378])
                    (1895387 'move' call_tmp[1895364] ret_tmp[1895378])
                    const-val tmp[1895390]:(c_ptr(uint(8)),int(64))[955208] "dead at end of block" "insert auto destroy" "temp"
                    (1895392 'move' tmp[1895390] call_tmp[1895364])
                    1
                    ref call_tmp[1895396]:_ref(c_ptr(uint(8)))[937432] "dead at end of block" "maybe param" "temp"
                    (1895398 'move' call_tmp[1895396](1895400 '.' tmp[1895390] x0[955204]))
                    val newBuff[1895403]:c_ptr(uint(8))[937423] "dead at end of block" "insert auto destroy"
                    val coerce_tmp[1895405]:c_ptr(uint(8))[937423] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                    (1895407 'move' coerce_tmp[1895405](1895409 'deref' call_tmp[1895396]))
                    (1895411 '=' newBuff[1895403] coerce_tmp[1895405])
                    (1895414 'noop')
                    ref call_tmp[1895415]:_ref(int(64))[936572] "dead at end of block" "maybe param" "temp"
                    (1895417 'move' call_tmp[1895415](1895419 '.' tmp[1895390] x1[955206]))
                    const-val allocSize[1895422]:int(64)[13] "dead at end of block" "insert auto destroy"
                    const-val coerce_tmp[1895424]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                    (1895426 'move' coerce_tmp[1895424](1895428 'deref' call_tmp[1895415]))
                    (1895430 '=' allocSize[1895422] coerce_tmp[1895424])
                    (1895433 'noop')
                    const-val call_tmp[1895434]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[1895436]:string[26] "temp"
                    (1895439 call chpl_createStringWithOwnedBufferNV[30673] newBuff[1895403] nBytes[1895320] allocSize[1895422] 1 ret_tmp[1895436])
                    (1895445 'move' call_tmp[1895434] ret_tmp[1895436])
                    (1895448 'move' ret[504157] call_tmp[1895434])
                    (1895452 call chpl__autoDestroy[1465141] tmp[1895390])
                    (1895471 call chpl__autoDestroy[1461793] call_tmp[1894971])
                    (1895474 call chpl__autoDestroy[1465403] tmp[1894896])
                    (1895477 call chpl__autoDestroy[1461530] localThis[1894266])
                    (1895455 call _freeIterator[1122573] _iterator[34904])
                    (1895458 call chpl__autoDestroy[1461793] default_arg_start[1180862])
                    gotoReturn _end_item[504155] _end_item[504155]
                  }
                  (1895464 call +=[451315] charCount[34827] 1)
                }
                label _continueLabel[1895467]
              }
              (1895022 call chpl__autoDestroy[1461793] call_tmp[1894971])
              const-val coerce_tmp[1895024]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1895026 'move' coerce_tmp[1895024](1895028 'cast' int(64)[13] nBytes[1894949]))
              (1895032 call +=[451315] i[1894615] coerce_tmp[1895024])
              (1895036 call chpl__autoDestroy[1465403] tmp[1894896])
              ref call_tmp[1895038]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
              (1895040 'move' call_tmp[1895038](1895043 call buffLen[757886] localThis[1894266]))
              const-val call_tmp[1895045]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1895047]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1895049 'move' coerce_tmp[1895047](1895051 'deref' call_tmp[1895038]))
              (1895053 'move' call_tmp[1895045](1895056 call <[437452] i[1894615] coerce_tmp[1895047]))
              (1895059 'move' tmp[1894828] call_tmp[1895045])
              tmp[1894828]
            }
          }
          (1895064 call chpl__autoDestroy[1461530] localThis[1894266])
          label _end_cpIndexLen[1895066]
        }
        label _breakLabel[34909]
        (1841909 call _freeIterator[1122573] _iterator[34904])
        (1841911 call chpl__autoDestroy[1461793] default_arg_start[1180862])
      }
      {
        const-val call_tmp[600983]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (600986 'move' call_tmp[600983](34965 call size[32769] this[34690]))
        (34968 call halt[1175761] "index " i[34685] " out of bounds for string with length " call_tmp[600983])
      }
      (504181 'move' ret[504157](1829703 call chpl__initCopy[981348] ""))
      gotoReturn _end_item[504155] _end_item[504155]
    }
    label _end_item[504155]
    (1829699 '=' _retArg[1829697] ret[504157])
    (1829705 return _void[55])
  }
  function _ref(string)[937939].item[35008](const  ref arg this[35010]:_ref(string)[937939], const in arg i[35005]:int(64)[13], ref arg _retArg[1829713]:_ref(string)[937939]) : void[4] "fn returns via _retArg" "inline" "method" "resolved"
  {
    const-val ret[504187]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[600988]:codepointIndex[28274] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1830451]:codepointIndex[28274] "temp"
    (35019 call _cast[39535] i[35005] ret_tmp[1830451])
    (1830454 'move' call_tmp[600988] ret_tmp[1830451])
    const-val call_tmp[600993]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1829661]:string[26] "temp"
    (35022 call this[34632] this[35010] call_tmp[600988] ret_tmp[1829661])
    (1829664 'move' call_tmp[600993] ret_tmp[1829661])
    (1180962 'move' ret[504187] call_tmp[600993])
    (1829715 '=' _retArg[1829713] ret[504187])
    (1841914 call chpl__autoDestroy[1461860] call_tmp[600988])
    (1829717 return _void[55])
  }
  function _ref(string)[937939].this[1111366](const  ref arg this[1111372]:_ref(string)[937939], const in arg r[1111374]:range(int(64),bounded,false)[1026814], ref arg _retArg[1833922]:_ref(string)[937939]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free"
  {
    const-val ret[1111378]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1111386]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1833928]:string[26] "temp"
    (1111391 call getSlice[1111402] this[1111372] r[1111374] ret_tmp[1833928])
    (1833931 'move' call_tmp[1111386] ret_tmp[1833928])
    (1121968 'move' ret[1111378] call_tmp[1111386])
    (1833924 '=' _retArg[1833922] ret[1111378])
    (1833926 return _void[55])
  }
  function _ref(string)[937939].this[1123500](const  ref arg this[1123506]:_ref(string)[937939], const in arg r[1123508]:range(byteIndex,bounded,false)[1025792], ref arg _retArg[1834156]:_ref(string)[937939]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free"
  {
    const-val ret[1123512]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1123520]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1834162]:string[26] "temp"
    (1123525 call getSlice[1123536] this[1123506] r[1123508] ret_tmp[1834162])
    (1834165 'move' call_tmp[1123520] ret_tmp[1834162])
    (1124382 'move' ret[1123512] call_tmp[1123520])
    (1834158 '=' _retArg[1834156] ret[1123512])
    (1834160 return _void[55])
  }
  function _ref(string)[937939].this[1125562](const  ref arg this[1125568]:_ref(string)[937939], const in arg r[1125570]:range(int(64),boundedLow,false)[1087565], ref arg _retArg[1834216]:_ref(string)[937939]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free"
  {
    const-val ret[1125574]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1125582]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1834222]:string[26] "temp"
    (1125587 call getSlice[1125598] this[1125568] r[1125570] ret_tmp[1834222])
    (1834225 'move' call_tmp[1125582] ret_tmp[1834222])
    (1142502 'move' ret[1125574] call_tmp[1125582])
    (1834218 '=' _retArg[1834216] ret[1125574])
    (1834220 return _void[55])
  }
  function _ref(string)[937939].this[1143723](const  ref arg this[1143729]:_ref(string)[937939], const in arg r[1143731]:range(byteIndex,boundedLow,false)[1143403], ref arg _retArg[1834420]:_ref(string)[937939]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free"
  {
    const-val ret[1143735]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1143743]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1834426]:string[26] "temp"
    (1143748 call getSlice[1143759] this[1143729] r[1143731] ret_tmp[1834426])
    (1834429 'move' call_tmp[1143743] ret_tmp[1834426])
    (1156457 'move' ret[1143735] call_tmp[1143743])
    (1834422 '=' _retArg[1834420] ret[1143735])
    (1834424 return _void[55])
  }
  function _ref(string)[937939].this[1185239](const  ref arg this[1185245]:_ref(string)[937939], const in arg r[1185247]:range(byteIndex,boundedHigh,false)[1184919], ref arg _retArg[1834754]:_ref(string)[937939]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free"
  {
    const-val ret[1185251]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1185259]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1834760]:string[26] "temp"
    (1185264 call getSlice[1185275] this[1185245] r[1185247] ret_tmp[1834760])
    (1834763 'move' call_tmp[1185259] ret_tmp[1834760])
    (1203760 'move' ret[1185251] call_tmp[1185259])
    (1834756 '=' _retArg[1834754] ret[1185251])
    (1834758 return _void[55])
  }
  function _ref(string)[937939].isEmpty[35061](const  ref arg this[35063]:_ref(string)[937939]) : bool[10] "inline" "method" "resolved" "fn synchronization free"
  {
    val ret[504207]:bool[10] "dead after last mention" "RVV" "temp"
    ref call_tmp[601005]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
    (601008 'move' call_tmp[601005](35070 call buffLen[757886] this[35063]))
    const-val call_tmp[601010]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1020532]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1020536 'move' coerce_tmp[1020532](1020534 'deref' call_tmp[601005]))
    (601013 'move' call_tmp[601010](35074 call ==[435628] coerce_tmp[1020532] 0))
    (1020540 'move' ret[504207] call_tmp[601010])
    (504209 return ret[504207])
  }
  function _ref(string)[937939].find[1025587](const  ref arg this[1025593]:_ref(string)[937939], const  ref arg needle[1025595]:string[26], const in arg region[1025617]:range(byteIndex,bounded,false)[1025792], ref arg _retArg[1832611]:_ref(byteIndex)[948759]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "resolved"
  {
    val ret[1025621]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1029915]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1029917 'move' call_tmp[1029915](1029923 call isASCII[31046] this[1025593]))
    const-val call_tmp[1029924]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1029926 'move' call_tmp[1029924] call_tmp[1029915])
    if call_tmp[1029924]
    {
      const-val call_tmp[1029933]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1029935 'move' call_tmp[1029933](1029938 call doSearchNoEnc[1030053] this[1025593] needle[1025595] region[1025617]))
      const-val call_tmp[1029944]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1830409]:byteIndex[28170] "temp"
      (1029949 call _cast[39483] call_tmp[1029933] ret_tmp[1830409])
      (1830412 'move' call_tmp[1029944] ret_tmp[1830409])
      (1107518 'move' ret[1025621] call_tmp[1029944])
      gotoReturn _end_find[1029989] _end_find[1029989]
    }
    {
      const-val call_tmp[1029960]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1029962 'move' call_tmp[1029960](1029968 call doSearchUTF8[1106111] this[1025593] needle[1025595] region[1025617]))
      const-val call_tmp[1029973]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1830415]:byteIndex[28170] "temp"
      (1029978 call _cast[39483] call_tmp[1029960] ret_tmp[1830415])
      (1830418 'move' call_tmp[1029973] ret_tmp[1830415])
      (1107521 'move' ret[1025621] call_tmp[1029973])
      gotoReturn _end_find[1029989] _end_find[1029989]
    }
    label _end_find[1029989]
    (1832613 '=' _retArg[1832611] ret[1025621])
    (1832615 return _void[55])
  }
  function _ref(string)[937939].find_default_region[1029998](const  ref arg this[1030001]:_ref(string)[937939], ref arg _retArg[1832683]:_ref(range(byteIndex,bounded,false))[1025801]) : void[4] "compiler generated" "default actual function" "fn returns via _retArg" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    const-val ret[1030004]:range(byteIndex,bounded,false)[1025792] "dead after last mention" "RVV" "maybe param" "temp"
    const-val region[1030009]:range(byteIndex,bounded,false)[1025792] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val call_tmp[1030012]:range(byteIndex,bounded,false)[1025792] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1030017]:range(int(64),bounded,false)[1026814] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1829267]:range(int(64),bounded,false)[1026814] "temp"
    (1030022 call byteIndices[31065] this[1030001] ret_tmp[1829267])
    (1829270 'move' call_tmp[1030017] ret_tmp[1829267])
    const-val ret_tmp[1832617]:range(byteIndex,bounded,false)[1025792] "temp"
    (1030026 call _cast[1027562] call_tmp[1030017] ret_tmp[1832617])
    (1832620 'move' region[1030009] ret_tmp[1832617])
    (1030034 'move' ret[1030004] region[1030009])
    (1832685 '=' _retArg[1832683] ret[1030004])
    (1842948 call chpl__autoDestroy[1534375] call_tmp[1030017])
    (1832687 return _void[55])
  }
  function _ref(string)[937939].find[1181646](const  ref arg this[1181652]:_ref(string)[937939], const  ref arg needle[1181654]:string[26], const in arg region[1181676]:range(byteIndex,boundedLow,false)[1143403], ref arg _retArg[1834706]:_ref(byteIndex)[948759]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "resolved"
  {
    val ret[1181680]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1181686]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1181688 'move' call_tmp[1181686](1181694 call isASCII[31046] this[1181652]))
    const-val call_tmp[1181695]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1181697 'move' call_tmp[1181695] call_tmp[1181686])
    if call_tmp[1181695]
    {
      const-val call_tmp[1181704]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1181706 'move' call_tmp[1181704](1181709 call doSearchNoEnc[1181766] this[1181652] needle[1181654] region[1181676]))
      const-val call_tmp[1181715]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1830433]:byteIndex[28170] "temp"
      (1181720 call _cast[39483] call_tmp[1181704] ret_tmp[1830433])
      (1830436 'move' call_tmp[1181715] ret_tmp[1830433])
      (1184214 'move' ret[1181680] call_tmp[1181715])
      gotoReturn _end_find[1181760] _end_find[1181760]
    }
    {
      const-val call_tmp[1181731]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1181733 'move' call_tmp[1181731](1181739 call doSearchUTF8[1182807] this[1181652] needle[1181654] region[1181676]))
      const-val call_tmp[1181744]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1830439]:byteIndex[28170] "temp"
      (1181749 call _cast[39483] call_tmp[1181731] ret_tmp[1830439])
      (1830442 'move' call_tmp[1181744] ret_tmp[1830439])
      (1184217 'move' ret[1181680] call_tmp[1181744])
      gotoReturn _end_find[1181760] _end_find[1181760]
    }
    label _end_find[1181760]
    (1834708 '=' _retArg[1834706] ret[1181680])
    (1834710 return _void[55])
  }
  function _ref(string)[937939].replace[35363](const  ref arg this[35377]:_ref(string)[937939], const  ref arg needle[35360]:string[26], const  ref arg replacement[35366]:string[26], const in arg count[35373]:int(64)[13], ref arg _retArg[1829731]:_ref(string)[937939]) : void[4] "fn returns via _retArg" "inline" "method" "resolved"
  {
    const-val ret[504291]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[601143]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1834688]:string[26] "temp"
    (35389 call doReplace[1181014] this[35377] needle[35360] replacement[35366] count[35373] ret_tmp[1834688])
    (1834691 'move' call_tmp[601143] ret_tmp[1834688])
    (1203783 'move' ret[504291] call_tmp[601143])
    (1829733 '=' _retArg[1829731] ret[504291])
    (1829735 return _void[55])
  }
  function _ic_split__ref_string[1156504].advance[1156530](const in arg this[1156532]:_ic_split__ref_string[1156504]) : void[4] "auto ii" "method" "resolved"
  {
    const-val more[2004573]:int(64)[13]
    (2004649 'move' more[2004573](2004646 '.v' this[1156532] more[1156507]))
    const-val tmp[2004600]:bool[10] "temp"
    (2004607 'move' tmp[2004600](2004604 '==' more[2004573] 4))
    if tmp[2004600]
    {
      gotoIterResume _jump_4[2004565] _jump_4[2004565]
    }
    const-val tmp[2004588]:bool[10] "temp"
    (2004595 'move' tmp[2004588](2004592 '==' more[2004573] 3))
    if tmp[2004588]
    {
      gotoIterResume _jump_3[2004555] _jump_3[2004555]
    }
    const-val tmp[2004576]:bool[10] "temp"
    (2004583 'move' tmp[2004576](2004580 '==' more[2004573] 2))
    if tmp[2004576]
    {
      gotoIterResume _jump_2[2004545] _jump_2[2004545]
    }
    const-val tmp[2004612]:bool[10] "temp"
    (2004617 'move' tmp[2004612](2004614 '==' more[2004573] -2))
    if tmp[2004612]
    {
      gotoIterResume _jump_break_2[2004547] _jump_break_2[2004547]
    }
    const-val tmp[2004624]:bool[10] "temp"
    (2004629 'move' tmp[2004624](2004626 '==' more[2004573] -3))
    if tmp[2004624]
    {
      gotoIterResume _jump_break_3[2004557] _jump_break_3[2004557]
    }
    const-val tmp[2004636]:bool[10] "temp"
    (2004641 'move' tmp[2004636](2004638 '==' more[2004573] -4))
    if tmp[2004636]
    {
      gotoIterResume _jump_break_4[2004567] _jump_break_4[2004567]
    }
    val ret[504314]:_ir_split__ref_string[1156510] "dead after last mention" "RVV" "temp"
    const-val call_tmp[601155]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    ref tmp[2001501]:_ref(string)[937939] "temp"
    (2001506 'move' tmp[2001501](2001503 '.v' this[1156532] F0_this[2001327]))
    (601158 'move' call_tmp[601155](35495 call isASCII[31046] tmp[2001501]))
    const-val call_tmp[601160]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (601163 'move' call_tmp[601160] call_tmp[601155])
    if call_tmp[601155]
    {
      val _indexOfInterest[35505]:string[26] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      const-val call_tmp[601165]:_ir_doSplitWSNoEnc[1124481] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val ret_tmp[1834176]:_ir_doSplitWSNoEnc[1124481] "temp"
      ref tmp[2001508]:_ref(string)[937939] "temp"
      (2001513 'move' tmp[2001508](2001510 '.v' this[1156532] F0_this[2001327]))
      const-val tmp[2001515]:int(64)[13] "temp"
      (2001520 'move' tmp[2001515](2001517 '.v' this[1156532] F1_maxsplit[2001331]))
      (35501 call doSplitWSNoEnc[1124456] tmp[2001508] tmp[2001515] ret_tmp[1834176])
      (1834179 'move' call_tmp[601165] ret_tmp[1834176])
      val tmp[2001522]:_ic_doSplitWSNoEnc[1124475] "temp"
      (35515 'move' tmp[2001522](35513 call _getIterator[1124490] call_tmp[601165]))
      (2001524 '.=' this[1156532] F2__iterator[2001335] tmp[2001522])
      val ret[1895511]:_ir_doSplitWSNoEnc[1124481] "dead at end of block" "RVV" "temp"
      val call_tmp[1895513]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[1895515]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      ref x[1896224]:_ref(string)[937939] "temp"
      ref tmp[2001528]:_ref(_ic_doSplitWSNoEnc)[1124618] "temp"
      (2001533 'move' tmp[2001528](2001530 '.' this[1156532] F2__iterator[2001335]))
      (1896229 'move' x[1896224](1896226 '.v' tmp[2001528] F0_x[2016903]))
      (1895517 'move' call_tmp[1895515](1895520 call isEmpty[35061] x[1896224]))
      const-val call_tmp[1895522]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1895524 'move' call_tmp[1895522](1895527 call ![7494] call_tmp[1895515]))
      const-val call_tmp[1895529]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1895531 'move' call_tmp[1895529] call_tmp[1895522])
      if call_tmp[1895522]
      {
        const-val call_tmp[1895536]:string[26] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[1895538]:string[26] "temp"
        ref x[1896231]:_ref(string)[937939] "temp"
        ref tmp[2001535]:_ref(_ic_doSplitWSNoEnc)[1124618] "temp"
        (2001540 'move' tmp[2001535](2001537 '.' this[1156532] F2__iterator[2001335]))
        (1896236 'move' x[1896231](1896233 '.v' tmp[2001535] F0_x[2016903]))
        (1895541 call localize[32886] x[1896231] ret_tmp[1895538])
        (1895544 'move' call_tmp[1895536] ret_tmp[1895538])
        val call_tmp[1895547]:string[26] "dead after last mention" "maybe param" "temp" "type variable"
        const tmp[2001542]:string[26] "temp"
        (1895551 'move' tmp[2001542] call_tmp[1895536])
        (2001544 '.=' this[1156532] F3_localx[2001337] tmp[2001542])
        val tmp[2001548]:bool[10] "temp"
        (1895556 'move' tmp[2001548] 0)
        (2001550 '.=' this[1156532] F4_done[2001339] tmp[2001548])
        val tmp[2001554]:bool[10] "temp"
        (1895561 'move' tmp[2001554] 0)
        (2001556 '.=' this[1156532] F5_yieldChunk[2001341] tmp[2001554])
        val call_tmp[1895566]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        ref tmp[2001560]:_ref(string)[937939] "temp"
        (2001565 'move' tmp[2001560](2001562 '.' this[1156532] F6_chunk[2001343]))
        (1895569 call init[30760] tmp[2001560])
        const-val call_tmp[1895571]:bool[10] "dead at end of block" "maybe param" "temp"
        const-val maxsplit[1896238]:int(64)[13] "temp"
        ref tmp[2001567]:_ref(_ic_doSplitWSNoEnc)[1124618] "temp"
        (2001572 'move' tmp[2001567](2001569 '.' this[1156532] F2__iterator[2001335]))
        (1896243 'move' maxsplit[1896238](1896240 '.v' tmp[2001567] F1_maxsplit[2016907]))
        (1895573 'move' call_tmp[1895571](1895576 call ==[435628] maxsplit[1896238] 0))
        const tmp[2001574]:bool[10] "temp"
        (1895581 'move' tmp[2001574] call_tmp[1895571])
        (2001576 '.=' this[1156532] F7_noSplits[2001345] tmp[2001574])
        const-val call_tmp[1895584]:bool[10] "dead at end of block" "maybe param" "temp"
        const-val maxsplit[1896245]:int(64)[13] "temp"
        ref tmp[2001580]:_ref(_ic_doSplitWSNoEnc)[1124618] "temp"
        (2001585 'move' tmp[2001580](2001582 '.' this[1156532] F2__iterator[2001335]))
        (1896250 'move' maxsplit[1896245](1896247 '.v' tmp[2001580] F1_maxsplit[2016907]))
        (1895586 'move' call_tmp[1895584](1895589 call >[437672] maxsplit[1896245] 0))
        const tmp[2001587]:bool[10] "temp"
        (1895594 'move' tmp[2001587] call_tmp[1895584])
        (2001589 '.=' this[1156532] F8_limitSplits[2001347] tmp[2001587])
        val tmp[2001593]:int(64)[13] "temp"
        (1895599 'move' tmp[2001593] 0)
        (2001595 '.=' this[1156532] F9_splitCount[2001349] tmp[2001593])
        ref call_tmp[1895602]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
        ref tmp[2001599]:_ref(string)[937939] "temp"
        (2001604 'move' tmp[2001599](2001601 '.' this[1156532] F3_localx[2001337]))
        (1895604 'move' call_tmp[1895602](1895607 call buffLen[757886] tmp[2001599]))
        const-val call_tmp[1895609]:int(64)[13] "dead at end of block" "maybe param" "temp"
        const-val coerce_tmp[1895611]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1895613 'move' coerce_tmp[1895611](1895615 'deref' call_tmp[1895602]))
        (1895617 'move' call_tmp[1895609](1895620 call -[1125438] coerce_tmp[1895611]))
        const tmp[2001606]:int(64)[13] "temp"
        (1895624 'move' tmp[2001606] call_tmp[1895609])
        (2001608 '.=' this[1156532] F10_iEnd[2001351] tmp[2001606])
        val tmp[2001612]:bool[10] "temp"
        (1895629 'move' tmp[2001612] 0)
        (2001614 '.=' this[1156532] F11_inChunk[2001353] tmp[2001612])
        val tmp[2001618]:int(64)[13] "temp"
        (1895634 'move' tmp[2001618] 0)
        (2001620 '.=' this[1156532] F12_chunkStart[2001355] tmp[2001618])
        const-val ret_tmp[1895643]:range(int(64),bounded,false)[1026814] "temp"
        ref x[1896252]:_ref(string)[937939] "temp"
        ref tmp[2001624]:_ref(_ic_doSplitWSNoEnc)[1124618] "temp"
        (2001629 'move' tmp[2001624](2001626 '.' this[1156532] F2__iterator[2001335]))
        (1896257 'move' x[1896252](1896254 '.v' tmp[2001624] F0_x[2016903]))
        (1895646 call indices[32785] x[1896252] ret_tmp[1895643])
        val tmp[2001631]:range(int(64),bounded,false)[1026814] "temp"
        (1895649 'move' tmp[2001631] ret_tmp[1895643])
        (2001633 '.=' this[1156532] F14_call_tmp[2001359] tmp[2001631])
        val call_tmp[1895652]:_ic_these_range_int64_t_bounded_F[1096703] "dead at end of block" "expr temp" "maybe param" "temp"
        ref tmp[2001637]:_ref(range(int(64),bounded,false))[1026858] "temp"
        (2001642 'move' tmp[2001637](2001639 '.' this[1156532] F14_call_tmp[2001359]))
        (1895654 'move' call_tmp[1895652](1895657 call _getIterator[1095320] tmp[2001637]))
        const-val call_tmp[1895659]:_ir_chpl_bytes__ref_string[1108262] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val ret_tmp[1895661]:_ir_chpl_bytes__ref_string[1108262] "temp"
        ref tmp[2001644]:_ref(string)[937939] "temp"
        (2001649 'move' tmp[2001644](2001646 '.' this[1156532] F3_localx[2001337]))
        (1895664 call chpl_bytes[33574] tmp[2001644] ret_tmp[1895661])
        (1895667 'move' call_tmp[1895659] ret_tmp[1895661])
        val call_tmp[1895670]:_ic_chpl_bytes__ref_string[1108256] "dead at end of block" "expr temp" "maybe param" "temp"
        (1895672 'move' call_tmp[1895670](1895675 call _getIterator[1108271] call_tmp[1895659]))
        const-val ret_tmp[1895677]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108566] "temp"
        (1895680 call _build_tuple[1108524] call_tmp[1895652] call_tmp[1895670] ret_tmp[1895677])
        val tmp[2001651]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108566] "temp"
        (1895684 'move' tmp[2001651] ret_tmp[1895677])
        (2001653 '.=' this[1156532] F13__iterator[2001357] tmp[2001651])
        val tmp[2001657]:_ic_these_range_int64_t_bounded_F[1096703] "temp"
        const-val tmp[2001663]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108566] "temp"
        (2001668 'move' tmp[2001663](2001665 '.v' this[1156532] F13__iterator[2001357]))
        (1960708 'move' tmp[2001657](1960705 '.v' tmp[2001663] x0[1108562]))
        (2001659 '.=' this[1156532] F15__iterator[2001361] tmp[2001657])
        val tmp[2001670]:_ic_chpl_bytes__ref_string[1108256] "temp"
        const-val tmp[2001676]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108566] "temp"
        (2001681 'move' tmp[2001676](2001678 '.v' this[1156532] F13__iterator[2001357]))
        (1960721 'move' tmp[2001670](1960718 '.v' tmp[2001676] x1[1108564]))
        (2001672 '.=' this[1156532] F16__iterator[2001363] tmp[2001670])
        val tmp[2001683]:_ic_these_range_int64_t_bounded_F[1096703] "temp"
        (2001688 'move' tmp[2001683](2001685 '.v' this[1156532] F15__iterator[2001361]))
        (1960730 call zip1[1096738] tmp[2001683])
        val tmp[2001690]:_ic_chpl_bytes__ref_string[1108256] "temp"
        (2001695 'move' tmp[2001690](2001692 '.v' this[1156532] F16__iterator[2001363]))
        (1960765 call zip1[1108291] tmp[2001690])
        const-val isFinished[1960791]:bool[10] "temp"
        val hasMore[1960790]:bool[10] "temp"
        CForLoop[1960838]
        {
          val tmp[2001697]:_ic_chpl_bytes__ref_string[1108256] "temp"
          (2001702 'move' tmp[2001697](2001699 '.v' this[1156532] F16__iterator[2001363]))
          (1960843 call zip2[1108300] tmp[2001697])
          const-val retTmp[1960846]:int(64)[13] "temp"
          val tmp[2001704]:_ic_chpl_bytes__ref_string[1108256] "temp"
          (2001709 'move' tmp[2001704](2001706 '.v' this[1156532] F16__iterator[2001363]))
          (1960848 'move' retTmp[1960846](1960851 call hasMore[1108327] tmp[2001704]))
          (1960853 'move' hasMore[1960790](1960855 'cast' bool[10] retTmp[1960846]))
          (1960858 'move' isFinished[1960791](1960860 '!' hasMore[1960790]))
          if isFinished[1960791]
          {
            (1960864 'chpl_error' c"zippered iterations have non-equal lengths")
          }
          val tmp[2001711]:_ic_chpl_bytes__ref_string[1108256] "temp"
          (2001716 'move' tmp[2001711](2001713 '.v' this[1156532] F16__iterator[2001363]))
          (1960868 'move' _index[1960883](1960871 call getValue[1108336] tmp[2001711]))
          val tmp[2001718]:_ic_these_range_int64_t_bounded_F[1096703] "temp"
          (2001723 'move' tmp[2001718](2001720 '.v' this[1156532] F15__iterator[2001361]))
          (1960875 call zip2[1096747] tmp[2001718])
          val tmp[2001725]:_ic_these_range_int64_t_bounded_F[1096703] "temp"
          (2001730 'move' tmp[2001725](2001727 '.v' this[1156532] F15__iterator[2001361]))
          (1960878 'move' _index[1960889](1960881 call getValue[1096783] tmp[2001725]))
          val _index[1960883]:uint(8)[100] "temp"
          val tmp[2001732]:(int(64),uint(8))[1111040] "temp"
          (2001737 'move' tmp[2001732](2001734 '.v' this[1156532] F17__indexOfInterest[2001365]))
          (1960885 '.=' tmp[2001732] x1[1111038] _index[1960883])
          (2001739 '.=' this[1156532] F17__indexOfInterest[2001365] tmp[2001732])
          val _index[1960889]:int(64)[13] "temp"
          val tmp[2001743]:(int(64),uint(8))[1111040] "temp"
          (2001748 'move' tmp[2001743](2001745 '.v' this[1156532] F17__indexOfInterest[2001365]))
          (1960891 '.=' tmp[2001743] x0[1111036] _index[1960889])
          (2001750 '.=' this[1156532] F17__indexOfInterest[2001365] tmp[2001743])
          1
          const-val i[1960896]:int(64)[13] "const" "index var" "insert auto destroy"
          const-val tmp[2001754]:(int(64),uint(8))[1111040] "temp"
          (2001759 'move' tmp[2001754](2001756 '.v' this[1156532] F17__indexOfInterest[2001365]))
          (1960898 'move' i[1960896](1960900 '.v' tmp[2001754] x0[1111036]))
          const-val c[1960903]:uint(8)[100] "const" "index var" "insert auto destroy"
          const-val tmp[2001761]:(int(64),uint(8))[1111040] "temp"
          (2001766 'move' tmp[2001761](2001763 '.v' this[1156532] F17__indexOfInterest[2001365]))
          (1960905 'move' c[1960903](1960907 '.v' tmp[2001761] x1[1111038]))
          const-val call_tmp[1960910]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val tmp[2001768]:bool[10] "temp"
          (2001773 'move' tmp[2001768](2001770 '.v' this[1156532] F7_noSplits[2001345]))
          (1960912 'move' call_tmp[1960910] tmp[2001768])
          const-val tmp[2001775]:bool[10] "temp"
          (2001780 'move' tmp[2001775](2001777 '.v' this[1156532] F7_noSplits[2001345]))
          if tmp[2001775]
          {
            ref tmp[2001782]:_ref(bool)[937199] "temp"
            (2001787 'move' tmp[2001782](2001784 '.' this[1156532] F4_done[2001339]))
            (1960918 call =[435174] tmp[2001782] 1)
            const-val call_tmp[1960921]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            ref tmp[2001789]:_ref(string)[937939] "temp"
            (2001794 'move' tmp[2001789](2001791 '.' this[1156532] F3_localx[2001337]))
            (1960923 'move' call_tmp[1960921](1960926 call isSpace[36840] tmp[2001789]))
            const-val call_tmp[1960928]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1960930 'move' call_tmp[1960928](1960933 call ![7494] call_tmp[1960921]))
            const-val call_tmp[1960935]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1960937 'move' call_tmp[1960935] call_tmp[1960928])
            if call_tmp[1960928]
            {
              ref tmp[2001796]:_ref(string)[937939] "temp"
              (2001801 'move' tmp[2001796](2001798 '.' this[1156532] F6_chunk[2001343]))
              ref tmp[2001803]:_ref(string)[937939] "temp"
              (2001808 'move' tmp[2001803](2001805 '.' this[1156532] F3_localx[2001337]))
              (1960943 call =[38269] tmp[2001796] tmp[2001803])
              ref tmp[2001810]:_ref(bool)[937199] "temp"
              (2001815 'move' tmp[2001810](2001812 '.' this[1156532] F5_yieldChunk[2001341]))
              (1960947 call =[435174] tmp[2001810] 1)
            }
          }
          {
            const-val call_tmp[1960952]:bool[10] "dead at end of block" "maybe param" "temp"
            (1960954 'move' call_tmp[1960952](1960957 call byte_isWhitespace[181609] c[1960903]))
            const-val cSpace[1960959]:bool[10] "dead at end of block" "insert auto destroy"
            (1960961 'move' cSpace[1960959] call_tmp[1960952])
            const-val tmp[1960964]:bool[10] "dead after last mention" "maybe param" "temp"
            const-val tmp[2001817]:bool[10] "temp"
            (2001822 'move' tmp[2001817](2001819 '.v' this[1156532] F11_inChunk[2001353]))
            (1960966 'move' tmp[1960964] tmp[2001817])
            val tmp[1960969]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
            const-val tmp[1960971]:bool[10] "dead after last mention" "maybe param" "temp"
            const-val call_tmp[1960973]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val tmp[2001824]:bool[10] "temp"
            (2001829 'move' tmp[2001824](2001826 '.v' this[1156532] F11_inChunk[2001353]))
            (1960975 'move' call_tmp[1960973] tmp[2001824])
            const-val tmp[2001831]:bool[10] "temp"
            (2001836 'move' tmp[2001831](2001833 '.v' this[1156532] F11_inChunk[2001353]))
            (1960978 'move' tmp[1960971] tmp[2001831])
            const-val tmp[2001838]:bool[10] "temp"
            (2001843 'move' tmp[2001838](2001840 '.v' this[1156532] F11_inChunk[2001353]))
            if tmp[2001838]
            {
              (1960983 'move' tmp[1960969] 1)
            }
            {
              const-val tmp[1960987]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
              (1960989 'move' tmp[1960987] cSpace[1960959])
              (1960992 'move' tmp[1960969] cSpace[1960959])
            }
            const-val call_tmp[1960996]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1960998 'move' call_tmp[1960996](1961001 call ![7494] tmp[1960969]))
            const-val call_tmp[1961003]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1961005 'move' call_tmp[1961003] call_tmp[1960996])
            if call_tmp[1960996]
            {
              ref tmp[2001845]:_ref(int(64))[936572] "temp"
              (2001850 'move' tmp[2001845](2001847 '.' this[1156532] F12_chunkStart[2001355]))
              (1961011 call =[435327] tmp[2001845] i[1960896])
              ref tmp[2001852]:_ref(bool)[937199] "temp"
              (2001857 'move' tmp[2001852](2001854 '.' this[1156532] F11_inChunk[2001353]))
              (1961015 call =[435174] tmp[2001852] 1)
              const-val call_tmp[1961018]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val tmp[2001859]:int(64)[13] "temp"
              (2001864 'move' tmp[2001859](2001861 '.v' this[1156532] F10_iEnd[2001351]))
              (1961020 'move' call_tmp[1961018](1961023 call >[437672] i[1960896] tmp[2001859]))
              const-val call_tmp[1961026]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1961028 'move' call_tmp[1961026] call_tmp[1961018])
              if call_tmp[1961018]
              {
                const-val call_tmp[1961033]:range(int(64),boundedLow,false)[1087565] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val tmp[2001866]:int(64)[13] "temp"
                (2001871 'move' tmp[2001866](2001868 '.v' this[1156532] F12_chunkStart[2001355]))
                ref tmp[2001873]:_ref(range(int(64),boundedLow,false))[1087609] "temp"
                (2001878 'move' tmp[2001873](2001875 '.' this[1156532] F18_ret_tmp[2001367]))
                (1961038 call chpl_build_low_bounded_range[1086958] tmp[2001866] tmp[2001873])
                const-val tmp[2001880]:range(int(64),boundedLow,false)[1087565] "temp"
                (2001885 'move' tmp[2001880](2001882 '.v' this[1156532] F18_ret_tmp[2001367]))
                (1961041 'move' call_tmp[1961033] tmp[2001880])
                const-val call_tmp[1961044]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                ref tmp[2001887]:_ref(string)[937939] "temp"
                (2001892 'move' tmp[2001887](2001889 '.' this[1156532] F3_localx[2001337]))
                ref tmp[2001894]:_ref(string)[937939] "temp"
                (2001899 'move' tmp[2001894](2001896 '.' this[1156532] F19_ret_tmp[2001369]))
                (1961049 call this[1125562] tmp[2001887] call_tmp[1961033] tmp[2001894])
                const-val tmp[2001901]:string[26] "temp"
                (2001906 'move' tmp[2001901](2001903 '.v' this[1156532] F19_ret_tmp[2001369]))
                (1961053 'move' call_tmp[1961044] tmp[2001901])
                ref tmp[2001908]:_ref(string)[937939] "temp"
                (2001913 'move' tmp[2001908](2001910 '.' this[1156532] F6_chunk[2001343]))
                (1961057 call =[38269] tmp[2001908] call_tmp[1961044])
                (1961061 call chpl__autoDestroy[1461530] call_tmp[1961044])
                (1961064 call chpl__autoDestroy[1540744] call_tmp[1961033])
                ref tmp[2001915]:_ref(bool)[937199] "temp"
                (2001920 'move' tmp[2001915](2001917 '.' this[1156532] F5_yieldChunk[2001341]))
                (1961067 call =[435174] tmp[2001915] 1)
                ref tmp[2001922]:_ref(bool)[937199] "temp"
                (2001927 'move' tmp[2001922](2001924 '.' this[1156532] F4_done[2001339]))
                (1961071 call =[435174] tmp[2001922] 1)
              }
            }
            {
              const-val call_tmp[1961076]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val tmp[2001929]:bool[10] "temp"
              (2001934 'move' tmp[2001929](2001931 '.v' this[1156532] F11_inChunk[2001353]))
              (1961078 'move' call_tmp[1961076] tmp[2001929])
              if call_tmp[1961076]
              {
                const-val call_tmp[1961083]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1961085 'move' call_tmp[1961083] cSpace[1960959])
                if cSpace[1960959]
                {
                  ref tmp[2001936]:_ref(int(64))[936572] "temp"
                  (2001941 'move' tmp[2001936](2001938 '.' this[1156532] F9_splitCount[2001349]))
                  (1961091 call +=[451315] tmp[2001936] 1)
                  const-val tmp[1961094]:bool[10] "dead after last mention" "maybe param" "temp"
                  const-val tmp[2001943]:bool[10] "temp"
                  (2001948 'move' tmp[2001943](2001945 '.v' this[1156532] F8_limitSplits[2001347]))
                  (1961096 'move' tmp[1961094] tmp[2001943])
                  val tmp[1961099]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                  const-val tmp[1961101]:bool[10] "dead after last mention" "maybe param" "temp"
                  const-val call_tmp[1961103]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val tmp[2001950]:bool[10] "temp"
                  (2001955 'move' tmp[2001950](2001952 '.v' this[1156532] F8_limitSplits[2001347]))
                  (1961105 'move' call_tmp[1961103] tmp[2001950])
                  const-val tmp[2001957]:bool[10] "temp"
                  (2001962 'move' tmp[2001957](2001959 '.v' this[1156532] F8_limitSplits[2001347]))
                  (1961108 'move' tmp[1961101] tmp[2001957])
                  const-val tmp[2001964]:bool[10] "temp"
                  (2001969 'move' tmp[2001964](2001966 '.v' this[1156532] F8_limitSplits[2001347]))
                  if tmp[2001964]
                  {
                    const-val tmp[1961113]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                    const-val call_tmp[1961115]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val maxsplit[1961117]:int(64)[13] "temp"
                    ref tmp[2001971]:_ref(_ic_doSplitWSNoEnc)[1124618] "temp"
                    (2001976 'move' tmp[2001971](2001973 '.' this[1156532] F2__iterator[2001335]))
                    (1961119 'move' maxsplit[1961117](1961121 '.v' tmp[2001971] F1_maxsplit[2016907]))
                    const-val tmp[2001978]:int(64)[13] "temp"
                    (2001983 'move' tmp[2001978](2001980 '.v' this[1156532] F9_splitCount[2001349]))
                    (1961124 'move' call_tmp[1961115](1961127 call >[437672] tmp[2001978] maxsplit[1961117]))
                    (1961130 'move' tmp[1961113] call_tmp[1961115])
                    (1961133 'move' tmp[1961099] call_tmp[1961115])
                  }
                  {
                    (1961137 'move' tmp[1961099] 0)
                  }
                  const-val call_tmp[1961141]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1961143 'move' call_tmp[1961141] tmp[1961099])
                  if tmp[1961099]
                  {
                    const-val call_tmp[1961148]:range(int(64),boundedLow,false)[1087565] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val tmp[2001985]:int(64)[13] "temp"
                    (2001990 'move' tmp[2001985](2001987 '.v' this[1156532] F12_chunkStart[2001355]))
                    ref tmp[2001992]:_ref(range(int(64),boundedLow,false))[1087609] "temp"
                    (2001997 'move' tmp[2001992](2001994 '.' this[1156532] F20_ret_tmp[2001371]))
                    (1961153 call chpl_build_low_bounded_range[1086958] tmp[2001985] tmp[2001992])
                    const-val tmp[2001999]:range(int(64),boundedLow,false)[1087565] "temp"
                    (2002004 'move' tmp[2001999](2002001 '.v' this[1156532] F20_ret_tmp[2001371]))
                    (1961156 'move' call_tmp[1961148] tmp[2001999])
                    const-val call_tmp[1961159]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    ref tmp[2002006]:_ref(string)[937939] "temp"
                    (2002011 'move' tmp[2002006](2002008 '.' this[1156532] F3_localx[2001337]))
                    ref tmp[2002013]:_ref(string)[937939] "temp"
                    (2002018 'move' tmp[2002013](2002015 '.' this[1156532] F21_ret_tmp[2001373]))
                    (1961164 call this[1125562] tmp[2002006] call_tmp[1961148] tmp[2002013])
                    const-val tmp[2002020]:string[26] "temp"
                    (2002025 'move' tmp[2002020](2002022 '.v' this[1156532] F21_ret_tmp[2001373]))
                    (1961168 'move' call_tmp[1961159] tmp[2002020])
                    ref tmp[2002027]:_ref(string)[937939] "temp"
                    (2002032 'move' tmp[2002027](2002029 '.' this[1156532] F6_chunk[2001343]))
                    (1961172 call =[38269] tmp[2002027] call_tmp[1961159])
                    (1961176 call chpl__autoDestroy[1461530] call_tmp[1961159])
                    (1961179 call chpl__autoDestroy[1540744] call_tmp[1961148])
                    ref tmp[2002034]:_ref(bool)[937199] "temp"
                    (2002039 'move' tmp[2002034](2002036 '.' this[1156532] F5_yieldChunk[2001341]))
                    (1961182 call =[435174] tmp[2002034] 1)
                    ref tmp[2002041]:_ref(bool)[937199] "temp"
                    (2002046 'move' tmp[2002041](2002043 '.' this[1156532] F4_done[2001339]))
                    (1961186 call =[435174] tmp[2002041] 1)
                  }
                  {
                    const-val call_tmp[1961190]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1961192 'move' call_tmp[1961190](1961195 call -[962226] i[1960896]))
                    const-val call_tmp[1961197]:range(int(64),bounded,false)[1026814] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val tmp[2002048]:int(64)[13] "temp"
                    (2002053 'move' tmp[2002048](2002050 '.v' this[1156532] F12_chunkStart[2001355]))
                    ref tmp[2002055]:_ref(range(int(64),bounded,false))[1026858] "temp"
                    (2002060 'move' tmp[2002055](2002057 '.' this[1156532] F22_ret_tmp[2001375]))
                    (1961202 call chpl_build_bounded_range[455137] tmp[2002048] call_tmp[1961190] tmp[2002055])
                    const-val tmp[2002062]:range(int(64),bounded,false)[1026814] "temp"
                    (2002067 'move' tmp[2002062](2002064 '.v' this[1156532] F22_ret_tmp[2001375]))
                    (1961206 'move' call_tmp[1961197] tmp[2002062])
                    const-val call_tmp[1961209]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    ref tmp[2002069]:_ref(string)[937939] "temp"
                    (2002074 'move' tmp[2002069](2002071 '.' this[1156532] F3_localx[2001337]))
                    ref tmp[2002076]:_ref(string)[937939] "temp"
                    (2002081 'move' tmp[2002076](2002078 '.' this[1156532] F23_ret_tmp[2001377]))
                    (1961214 call this[1111366] tmp[2002069] call_tmp[1961197] tmp[2002076])
                    const-val tmp[2002083]:string[26] "temp"
                    (2002088 'move' tmp[2002083](2002085 '.v' this[1156532] F23_ret_tmp[2001377]))
                    (1961218 'move' call_tmp[1961209] tmp[2002083])
                    ref tmp[2002090]:_ref(string)[937939] "temp"
                    (2002095 'move' tmp[2002090](2002092 '.' this[1156532] F6_chunk[2001343]))
                    (1961222 call =[38269] tmp[2002090] call_tmp[1961209])
                    (1961226 call chpl__autoDestroy[1461530] call_tmp[1961209])
                    (1961229 call chpl__autoDestroy[1534375] call_tmp[1961197])
                    ref tmp[2002097]:_ref(bool)[937199] "temp"
                    (2002102 'move' tmp[2002097](2002099 '.' this[1156532] F5_yieldChunk[2001341]))
                    (1961232 call =[435174] tmp[2002097] 1)
                    ref tmp[2002104]:_ref(bool)[937199] "temp"
                    (2002109 'move' tmp[2002104](2002106 '.' this[1156532] F11_inChunk[2001353]))
                    (1961236 call =[435174] tmp[2002104] 0)
                  }
                }
                {
                  const-val call_tmp[1961241]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val tmp[2002111]:int(64)[13] "temp"
                  (2002116 'move' tmp[2002111](2002113 '.v' this[1156532] F10_iEnd[2001351]))
                  (1961243 'move' call_tmp[1961241](1961246 call >[437672] i[1960896] tmp[2002111]))
                  const-val call_tmp[1961249]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1961251 'move' call_tmp[1961249] call_tmp[1961241])
                  if call_tmp[1961241]
                  {
                    const-val call_tmp[1961256]:range(int(64),boundedLow,false)[1087565] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val tmp[2002118]:int(64)[13] "temp"
                    (2002123 'move' tmp[2002118](2002120 '.v' this[1156532] F12_chunkStart[2001355]))
                    ref tmp[2002125]:_ref(range(int(64),boundedLow,false))[1087609] "temp"
                    (2002130 'move' tmp[2002125](2002127 '.' this[1156532] F24_ret_tmp[2001379]))
                    (1961261 call chpl_build_low_bounded_range[1086958] tmp[2002118] tmp[2002125])
                    const-val tmp[2002132]:range(int(64),boundedLow,false)[1087565] "temp"
                    (2002137 'move' tmp[2002132](2002134 '.v' this[1156532] F24_ret_tmp[2001379]))
                    (1961264 'move' call_tmp[1961256] tmp[2002132])
                    const-val call_tmp[1961267]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    ref tmp[2002139]:_ref(string)[937939] "temp"
                    (2002144 'move' tmp[2002139](2002141 '.' this[1156532] F3_localx[2001337]))
                    ref tmp[2002146]:_ref(string)[937939] "temp"
                    (2002151 'move' tmp[2002146](2002148 '.' this[1156532] F25_ret_tmp[2001381]))
                    (1961272 call this[1125562] tmp[2002139] call_tmp[1961256] tmp[2002146])
                    const-val tmp[2002153]:string[26] "temp"
                    (2002158 'move' tmp[2002153](2002155 '.v' this[1156532] F25_ret_tmp[2001381]))
                    (1961276 'move' call_tmp[1961267] tmp[2002153])
                    ref tmp[2002160]:_ref(string)[937939] "temp"
                    (2002165 'move' tmp[2002160](2002162 '.' this[1156532] F6_chunk[2001343]))
                    (1961280 call =[38269] tmp[2002160] call_tmp[1961267])
                    (1961284 call chpl__autoDestroy[1461530] call_tmp[1961267])
                    (1961287 call chpl__autoDestroy[1540744] call_tmp[1961256])
                    ref tmp[2002167]:_ref(bool)[937199] "temp"
                    (2002172 'move' tmp[2002167](2002169 '.' this[1156532] F5_yieldChunk[2001341]))
                    (1961290 call =[435174] tmp[2002167] 1)
                    ref tmp[2002174]:_ref(bool)[937199] "temp"
                    (2002179 'move' tmp[2002174](2002176 '.' this[1156532] F4_done[2001339]))
                    (1961294 call =[435174] tmp[2002174] 1)
                  }
                }
              }
            }
          }
          const-val call_tmp[1961302]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val tmp[2002181]:bool[10] "temp"
          (2002186 'move' tmp[2002181](2002183 '.v' this[1156532] F5_yieldChunk[2001341]))
          (1961304 'move' call_tmp[1961302] tmp[2002181])
          if call_tmp[1961302]
          {
            const-val yret[1961309]:string[26] "dead after last mention" "YVV" "temp"
            val call_tmp[1961311]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            const-val _yield_expr_tmp_[1961313]:string[26] "temp"
            ref tmp[2002188]:_ref(string)[937939] "temp"
            (2002193 'move' tmp[2002188](2002190 '.' this[1156532] F6_chunk[2001343]))
            (1961315 'move' _yield_expr_tmp_[1961313](1961318 call chpl__initCopy[981348] tmp[2002188]))
            (1961320 'move' yret[1961309] _yield_expr_tmp_[1961313])
            const-val _yieldedIndex[1961323]:string[26] "temp"
            (1961325 'move' _yieldedIndex[1961323] _yield_expr_tmp_[1961313])
            const tmp[2002195]:string[26] "temp"
            (1961331 'move' tmp[2002195] _yieldedIndex[1961323])
            (2002197 '.=' this[1156532] F26_s[2001383] tmp[2002195])
            const-val yret[1961334]:string[26] "dead after last mention" "YVV" "temp"
            val tmp[2002201]:string[26] "temp"
            ref tmp[2002207]:_ref(string)[937939] "temp"
            (2002212 'move' tmp[2002207](2002209 '.' this[1156532] F26_s[2001383]))
            (1961338 'move' tmp[2002201](1961341 call chpl__initCopy[981348] tmp[2002207]))
            (2002203 '.=' this[1156532] F81__yield_expr_tmp_[2001493] tmp[2002201])
            const-val tmp[2002214]:string[26] "temp"
            (2002219 'move' tmp[2002214](2002216 '.v' this[1156532] F81__yield_expr_tmp_[2001493]))
            (1961343 'move' yret[1961334] tmp[2002214])
            val tmp[2002225]:string[26] "temp"
            (2002230 'move' tmp[2002225](2002227 '.v' this[1156532] F81__yield_expr_tmp_[2001493]))
            (2002222 '.=' this[1156532] value[2001499] tmp[2002225])
            (2004539 '.=' this[1156532] more[1156507] 2)
            gotoIterEnd _end[2004537] _end[2004537]
            label _jump_break_2[2004547]
            ref moreRef1[1961499]:_ref(int(64))[936572] "temp"
            ref tmp[2002232]:_ref(_ic_these_range_int64_t_bounded_F)[1096846] "temp"
            (2002237 'move' tmp[2002232](2002234 '.' this[1156532] F15__iterator[2001361]))
            (1961501 'move' moreRef1[1961499](1961503 '.' tmp[2002232] more[1096706]))
            const-val moreVal1[1961506]:int(64)[13] "const" "temp"
            (1961508 '=' moreVal1[1961506] moreRef1[1961499])
            const-val moreValNeg1[1961511]:int(64)[13] "const" "temp"
            (1961513 'move' moreValNeg1[1961511](1961515 'u-' moreVal1[1961506]))
            (1961517 '=' moreRef1[1961499] moreValNeg1[1961511])
            val tmp[2002239]:_ic_these_range_int64_t_bounded_F[1096703] "temp"
            (2002244 'move' tmp[2002239](2002241 '.v' this[1156532] F15__iterator[2001361]))
            (1961521 call advance[1096729] tmp[2002239])
            ref moreRef2[1961523]:_ref(int(64))[936572] "temp"
            ref tmp[2002246]:_ref(_ic_chpl_bytes__ref_string)[1108399] "temp"
            (2002251 'move' tmp[2002246](2002248 '.' this[1156532] F16__iterator[2001363]))
            (1961525 'move' moreRef2[1961523](1961527 '.' tmp[2002246] more[1108259]))
            const-val moreVal2[1961530]:int(64)[13] "const" "temp"
            (1961532 '=' moreVal2[1961530] moreRef2[1961523])
            const-val moreValNeg2[1961535]:int(64)[13] "const" "temp"
            (1961537 'move' moreValNeg2[1961535](1961539 'u-' moreVal2[1961530]))
            (1961541 '=' moreRef2[1961523] moreValNeg2[1961535])
            val tmp[2002253]:_ic_chpl_bytes__ref_string[1108256] "temp"
            (2002258 'move' tmp[2002253](2002255 '.v' this[1156532] F16__iterator[2001363]))
            (1961545 call advance[1108282] tmp[2002253])
            ref tmp[2002260]:_ref((_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string))[1108674] "temp"
            (2002265 'move' tmp[2002260](2002262 '.' this[1156532] F13__iterator[2001357]))
            (1961351 call _freeIterator[1108724] tmp[2002260])
            ref tmp[2002267]:_ref((_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string))[1108674] "temp"
            (2002272 'move' tmp[2002267](2002269 '.' this[1156532] F13__iterator[2001357]))
            (1961354 call chpl__autoDestroy[1541417] tmp[2002267])
            const-val tmp[2002274]:range(int(64),bounded,false)[1026814] "temp"
            (2002279 'move' tmp[2002274](2002276 '.v' this[1156532] F14_call_tmp[2001359]))
            (1961357 call chpl__autoDestroy[1534375] tmp[2002274])
            ref tmp[2002281]:_ref(string)[937939] "temp"
            (2002286 'move' tmp[2002281](2002283 '.' this[1156532] F6_chunk[2001343]))
            (1961360 call chpl__autoDestroy[1461530] tmp[2002281])
            ref tmp[2002288]:_ref(string)[937939] "temp"
            (2002293 'move' tmp[2002288](2002290 '.' this[1156532] F3_localx[2001337]))
            (1961363 call chpl__autoDestroy[1461530] tmp[2002288])
            ref tmp[2002295]:_ref(string)[937939] "temp"
            (2002300 'move' tmp[2002295](2002297 '.' this[1156532] F26_s[2001383]))
            (1961366 call chpl__autoDestroy[1461530] tmp[2002295])
            val tmp[2002302]:_ic_doSplitWSNoEnc[1124475] "temp"
            (2002307 'move' tmp[2002302](2002304 '.v' this[1156532] F2__iterator[2001335]))
            (1961369 call _freeIterator[1142575] tmp[2002302])
            gotoReturn _endsplit[1813917] _endsplit[1813917]
            label _jump_2[2004545]
            ref tmp[2002309]:_ref(string)[937939] "temp"
            (2002314 'move' tmp[2002309](2002311 '.' this[1156532] F26_s[2001383]))
            (1961375 call chpl__autoDestroy[1461530] tmp[2002309])
            ref tmp[2002316]:_ref(bool)[937199] "temp"
            (2002321 'move' tmp[2002316](2002318 '.' this[1156532] F5_yieldChunk[2001341]))
            (1961378 call =[435174] tmp[2002316] 0)
          }
          const-val call_tmp[1961382]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val tmp[2002323]:bool[10] "temp"
          (2002328 'move' tmp[2002323](2002325 '.v' this[1156532] F4_done[2001339]))
          (1961384 'move' call_tmp[1961382] tmp[2002323])
          if call_tmp[1961382]
          {
            ref moreRef1[1961450]:_ref(int(64))[936572] "temp"
            ref tmp[2002330]:_ref(_ic_these_range_int64_t_bounded_F)[1096846] "temp"
            (2002335 'move' tmp[2002330](2002332 '.' this[1156532] F15__iterator[2001361]))
            (1961452 'move' moreRef1[1961450](1961454 '.' tmp[2002330] more[1096706]))
            const-val moreVal1[1961457]:int(64)[13] "const" "temp"
            (1961459 '=' moreVal1[1961457] moreRef1[1961450])
            const-val moreValNeg1[1961462]:int(64)[13] "const" "temp"
            (1961464 'move' moreValNeg1[1961462](1961466 'u-' moreVal1[1961457]))
            (1961468 '=' moreRef1[1961450] moreValNeg1[1961462])
            val tmp[2002337]:_ic_these_range_int64_t_bounded_F[1096703] "temp"
            (2002342 'move' tmp[2002337](2002339 '.v' this[1156532] F15__iterator[2001361]))
            (1961472 call advance[1096729] tmp[2002337])
            ref moreRef2[1961474]:_ref(int(64))[936572] "temp"
            ref tmp[2002344]:_ref(_ic_chpl_bytes__ref_string)[1108399] "temp"
            (2002349 'move' tmp[2002344](2002346 '.' this[1156532] F16__iterator[2001363]))
            (1961476 'move' moreRef2[1961474](1961478 '.' tmp[2002344] more[1108259]))
            const-val moreVal2[1961481]:int(64)[13] "const" "temp"
            (1961483 '=' moreVal2[1961481] moreRef2[1961474])
            const-val moreValNeg2[1961486]:int(64)[13] "const" "temp"
            (1961488 'move' moreValNeg2[1961486](1961490 'u-' moreVal2[1961481]))
            (1961492 '=' moreRef2[1961474] moreValNeg2[1961486])
            val tmp[2002351]:_ic_chpl_bytes__ref_string[1108256] "temp"
            (2002356 'move' tmp[2002351](2002353 '.v' this[1156532] F16__iterator[2001363]))
            (1961496 call advance[1108282] tmp[2002351])
            break _breakLabel[1896148] _breakLabel[1896148]
          }
          val tmp[2002358]:_ic_these_range_int64_t_bounded_F[1096703] "temp"
          (2002363 'move' tmp[2002358](2002360 '.v' this[1156532] F15__iterator[2001361]))
          (1961394 call zip3[1096756] tmp[2002358])
          val tmp[2002365]:_ic_chpl_bytes__ref_string[1108256] "temp"
          (2002370 'move' tmp[2002365](2002367 '.v' this[1156532] F16__iterator[2001363]))
          (1961398 call zip3[1108309] tmp[2002365])
          {
            val tmp[2002372]:_ic_these_range_int64_t_bounded_F[1096703] "temp"
            (2002377 'move' tmp[2002372](2002374 '.v' this[1156532] F15__iterator[2001361]))
            (1960740 call init[1096792] tmp[2002372])
            val tmp[2002379]:_ic_chpl_bytes__ref_string[1108256] "temp"
            (2002384 'move' tmp[2002379](2002381 '.v' this[1156532] F16__iterator[2001363]))
            (1960775 call init[1108345] tmp[2002379])
          }
          {
            val tmp[2002386]:_ic_these_range_int64_t_bounded_F[1096703] "temp"
            (2002391 'move' tmp[2002386](2002388 '.v' this[1156532] F15__iterator[2001361]))
            (1960756 call hasMore[1096774] tmp[2002386])
          }
          {
            val tmp[2002393]:_ic_these_range_int64_t_bounded_F[1096703] "temp"
            (2002398 'move' tmp[2002393](2002395 '.v' this[1156532] F15__iterator[2001361]))
            (1960744 call incr[1096801] tmp[2002393])
            val tmp[2002400]:_ic_chpl_bytes__ref_string[1108256] "temp"
            (2002405 'move' tmp[2002400](2002402 '.v' this[1156532] F16__iterator[2001363]))
            (1960779 call incr[1108354] tmp[2002400])
          }
        }
        const-val retTmp[1960825]:int(64)[13] "temp"
        val tmp[2002407]:_ic_chpl_bytes__ref_string[1108256] "temp"
        (2002412 'move' tmp[2002407](2002409 '.v' this[1156532] F16__iterator[2001363]))
        (1960827 'move' retTmp[1960825](1960822 call hasMore[1108327] tmp[2002407]))
        (1960832 'move' hasMore[1960790](1960829 'cast' bool[10] retTmp[1960825]))
        if hasMore[1960790]
        {
          (1960817 'chpl_error' c"zippered iterations have non-equal lengths")
        }
        val tmp[2002414]:_ic_chpl_bytes__ref_string[1108256] "temp"
        (2002419 'move' tmp[2002414](2002416 '.v' this[1156532] F16__iterator[2001363]))
        (1960787 call zip4[1108318] tmp[2002414])
        val tmp[2002421]:_ic_these_range_int64_t_bounded_F[1096703] "temp"
        (2002426 'move' tmp[2002421](2002423 '.v' this[1156532] F15__iterator[2001361]))
        (1960752 call zip4[1096765] tmp[2002421])
        label _breakLabel[1896148]
        ref tmp[2002428]:_ref((_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string))[1108674] "temp"
        (2002433 'move' tmp[2002428](2002430 '.' this[1156532] F13__iterator[2001357]))
        (1896151 call _freeIterator[1108724] tmp[2002428])
        ref tmp[2002435]:_ref((_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string))[1108674] "temp"
        (2002440 'move' tmp[2002435](2002437 '.' this[1156532] F13__iterator[2001357]))
        (1896154 call chpl__autoDestroy[1541417] tmp[2002435])
        const-val tmp[2002442]:range(int(64),bounded,false)[1026814] "temp"
        (2002447 'move' tmp[2002442](2002444 '.v' this[1156532] F14_call_tmp[2001359]))
        (1896157 call chpl__autoDestroy[1534375] tmp[2002442])
        ref tmp[2002449]:_ref(string)[937939] "temp"
        (2002454 'move' tmp[2002449](2002451 '.' this[1156532] F6_chunk[2001343]))
        (1896160 call chpl__autoDestroy[1461530] tmp[2002449])
        ref tmp[2002456]:_ref(string)[937939] "temp"
        (2002461 'move' tmp[2002456](2002458 '.' this[1156532] F3_localx[2001337]))
        (1896163 call chpl__autoDestroy[1461530] tmp[2002456])
      }
      label _enddoSplitWSNoEnc[1896166]
      val tmp[2002463]:_ic_doSplitWSNoEnc[1124475] "temp"
      (2002468 'move' tmp[2002463](2002465 '.v' this[1156532] F2__iterator[2001335]))
      (1841931 call _freeIterator[1142575] tmp[2002463])
    }
    {
      const-val call_tmp[601172]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      ref tmp[2002470]:_ref(string)[937939] "temp"
      (2002475 'move' tmp[2002470](2002472 '.v' this[1156532] F0_this[2001327]))
      (601175 'move' call_tmp[601172](35545 call isEmpty[35061] tmp[2002470]))
      const-val call_tmp[601177]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (601180 'move' call_tmp[601177](35546 call ![7494] call_tmp[601172]))
      const-val call_tmp[601182]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (601185 'move' call_tmp[601182] call_tmp[601177])
      if call_tmp[601177]
      {
        const-val call_tmp[601189]:string[26] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[1829461]:string[26] "temp"
        ref tmp[2002477]:_ref(string)[937939] "temp"
        (2002482 'move' tmp[2002477](2002479 '.v' this[1156532] F0_this[2001327]))
        (35554 call localize[32886] tmp[2002477] ret_tmp[1829461])
        (1829464 'move' call_tmp[601189] ret_tmp[1829461])
        const tmp[2002484]:string[26] "temp"
        (540413 'move' tmp[2002484] call_tmp[601189])
        (2002486 '.=' this[1156532] F27_localThis[2001385] tmp[2002484])
        val tmp[2002490]:bool[10] "temp"
        (540415 'move' tmp[2002490] 0)
        (2002492 '.=' this[1156532] F28_done[2001387] tmp[2002490])
        val tmp[2002496]:bool[10] "temp"
        (540417 'move' tmp[2002496] 0)
        (2002498 '.=' this[1156532] F29_yieldChunk[2001389] tmp[2002496])
        ref tmp[2002502]:_ref(string)[937939] "temp"
        (2002507 'move' tmp[2002502](2002504 '.' this[1156532] F30_chunk[2001391]))
        (1156493 call init[30760] tmp[2002502])
        const-val call_tmp[601194]:bool[10] "dead at end of block" "maybe param" "temp"
        const-val tmp[2002509]:int(64)[13] "temp"
        (2002514 'move' tmp[2002509](2002511 '.v' this[1156532] F1_maxsplit[2001331]))
        (601197 'move' call_tmp[601194](35580 call ==[435628] tmp[2002509] 0))
        const tmp[2002516]:bool[10] "temp"
        (540421 'move' tmp[2002516] call_tmp[601194])
        (2002518 '.=' this[1156532] F31_noSplits[2001393] tmp[2002516])
        const-val call_tmp[601199]:bool[10] "dead at end of block" "maybe param" "temp"
        const-val tmp[2002522]:int(64)[13] "temp"
        (2002527 'move' tmp[2002522](2002524 '.v' this[1156532] F1_maxsplit[2001331]))
        (601202 'move' call_tmp[601199](35589 call >[437672] tmp[2002522] 0))
        const tmp[2002529]:bool[10] "temp"
        (540423 'move' tmp[2002529] call_tmp[601199])
        (2002531 '.=' this[1156532] F32_limitSplits[2001395] tmp[2002529])
        val tmp[2002535]:int(64)[13] "temp"
        (540425 'move' tmp[2002535] 0)
        (2002537 '.=' this[1156532] F33_splitCount[2001397] tmp[2002535])
        ref call_tmp[601206]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
        ref tmp[2002541]:_ref(string)[937939] "temp"
        (2002546 'move' tmp[2002541](2002543 '.' this[1156532] F27_localThis[2001385]))
        (601209 'move' call_tmp[601206](35603 call buffLen[757886] tmp[2002541]))
        const-val call_tmp[601211]:int(64)[13] "dead at end of block" "insert auto destroy" "maybe param" "temp"
        const-val coerce_tmp[1142647]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1142651 'move' coerce_tmp[1142647](1142649 'deref' call_tmp[601206]))
        (601214 'move' call_tmp[601211](35607 call -[1125438] coerce_tmp[1142647]))
        ref tmp[2002548]:_ref(byteIndex)[948759] "temp"
        (2002553 'move' tmp[2002548](2002550 '.' this[1156532] F34_iEnd[2001399]))
        (540427 call init=[28145] tmp[2002548] call_tmp[601211])
        val tmp[2002555]:bool[10] "temp"
        (540429 'move' tmp[2002555] 0)
        (2002557 '.=' this[1156532] F35_inChunk[2001401] tmp[2002555])
        ref tmp[2002561]:_ref(byteIndex)[948759] "temp"
        (2002566 'move' tmp[2002561](2002563 '.' this[1156532] F36_chunkStart[2001403]))
        (1156498 call init[28097] tmp[2002561])
        val _indexOfInterest[35874]:(int(32),byteIndex,int(64))[1122142] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        const-val call_tmp[601218]:_ir__cpIndexLen__ref_string[1122391] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val ret_tmp[1834078]:byteIndex[28170] "temp"
        ref tmp[2002568]:_ref(string)[937939] "temp"
        (2002573 'move' tmp[2002568](2002570 '.' this[1156532] F27_localThis[2001385]))
        (1142664 call _cpIndexLen_default_start[1122031] tmp[2002568] ret_tmp[1834078])
        val tmp[2002575]:byteIndex[28170] "temp"
        (1834081 'move' tmp[2002575] ret_tmp[1834078])
        (2002577 '.=' this[1156532] F38_default_arg_start[2001407] tmp[2002575])
        const-val ret_tmp[1829351]:_ir__cpIndexLen__ref_string[1122391] "temp"
        ref tmp[2002581]:_ref(string)[937939] "temp"
        (2002586 'move' tmp[2002581](2002583 '.' this[1156532] F27_localThis[2001385]))
        ref tmp[2002588]:_ref(byteIndex)[948759] "temp"
        (2002593 'move' tmp[2002588](2002590 '.' this[1156532] F38_default_arg_start[2001407]))
        (35637 call _cpIndexLen[31106] tmp[2002581] tmp[2002588] ret_tmp[1829351])
        (1829354 'move' call_tmp[601218] ret_tmp[1829351])
        val tmp[2002595]:_ic__cpIndexLen__ref_string[1122385] "temp"
        (35884 'move' tmp[2002595](35882 call _getIterator[1122400] call_tmp[601218]))
        (2002597 '.=' this[1156532] F37__iterator[2001405] tmp[2002595])
        val ret[1896267]:_ir__cpIndexLen__ref_string[1122391] "dead after last mention" "RVV" "temp"
        const-val call_tmp[1896269]:string[26] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[1896271]:string[26] "temp"
        ref this[1898310]:_ref(string)[937939] "temp"
        ref tmp[2002601]:_ref(_ic__cpIndexLen__ref_string)[1122528] "temp"
        (2002606 'move' tmp[2002601](2002603 '.' this[1156532] F37__iterator[2001405]))
        (1898315 'move' this[1898310](1898312 '.v' tmp[2002601] F0_this[1997101]))
        (1896274 call localize[32886] this[1898310] ret_tmp[1896271])
        (1896277 'move' call_tmp[1896269] ret_tmp[1896271])
        val tmp[2002608]:string[26] "temp"
        (1896282 'move' tmp[2002608] call_tmp[1896269])
        (2002610 '.=' this[1156532] F39_localThis[2001409] tmp[2002608])
        const-val call_tmp[1896285]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        ref tmp[2002614]:_ref(string)[937939] "temp"
        (2002619 'move' tmp[2002614](2002616 '.' this[1156532] F39_localThis[2001409]))
        (1896287 'move' call_tmp[1896285](1896290 call isASCII[31046] tmp[2002614]))
        const-val call_tmp[1896292]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1896294 'move' call_tmp[1896292] call_tmp[1896285])
        if call_tmp[1896285]
        {
          const-val ret_tmp[1896303]:range(int(64),bounded,false)[1026814] "temp"
          ref this[1898317]:_ref(string)[937939] "temp"
          ref tmp[2002621]:_ref(_ic__cpIndexLen__ref_string)[1122528] "temp"
          (2002626 'move' tmp[2002621](2002623 '.' this[1156532] F37__iterator[2001405]))
          (1898322 'move' this[1898317](1898319 '.v' tmp[2002621] F0_this[1997101]))
          (1896306 call byteIndices[31065] this[1898317] ret_tmp[1896303])
          val tmp[2002628]:range(int(64),bounded,false)[1026814] "temp"
          (1896309 'move' tmp[2002628] ret_tmp[1896303])
          (2002630 '.=' this[1156532] F41_call_tmp[2001413] tmp[2002628])
          val call_tmp[1896312]:_ic_these_range_int64_t_bounded_F[1096703] "dead at end of block" "expr temp" "maybe param" "temp"
          ref tmp[2002634]:_ref(range(int(64),bounded,false))[1026858] "temp"
          (2002639 'move' tmp[2002634](2002636 '.' this[1156532] F41_call_tmp[2001413]))
          (1896314 'move' call_tmp[1896312](1896317 call _getIterator[1095320] tmp[2002634]))
          const-val call_tmp[1896319]:_ir_chpl_bytes__ref_string[1108262] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val ret_tmp[1896321]:_ir_chpl_bytes__ref_string[1108262] "temp"
          ref this[1898324]:_ref(string)[937939] "temp"
          ref tmp[2002641]:_ref(_ic__cpIndexLen__ref_string)[1122528] "temp"
          (2002646 'move' tmp[2002641](2002643 '.' this[1156532] F37__iterator[2001405]))
          (1898329 'move' this[1898324](1898326 '.v' tmp[2002641] F0_this[1997101]))
          (1896324 call chpl_bytes[33574] this[1898324] ret_tmp[1896321])
          (1896327 'move' call_tmp[1896319] ret_tmp[1896321])
          val call_tmp[1896330]:_ic_chpl_bytes__ref_string[1108256] "dead at end of block" "expr temp" "maybe param" "temp"
          (1896332 'move' call_tmp[1896330](1896335 call _getIterator[1108271] call_tmp[1896319]))
          const-val ret_tmp[1896337]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108566] "temp"
          (1896340 call _build_tuple[1108524] call_tmp[1896312] call_tmp[1896330] ret_tmp[1896337])
          val tmp[2002648]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108566] "temp"
          (1896344 'move' tmp[2002648] ret_tmp[1896337])
          (2002650 '.=' this[1156532] F40__iterator[2001411] tmp[2002648])
          val tmp[2002654]:_ic_these_range_int64_t_bounded_F[1096703] "temp"
          const-val tmp[2002660]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108566] "temp"
          (2002665 'move' tmp[2002660](2002662 '.v' this[1156532] F40__iterator[2001411]))
          (1896349 'move' tmp[2002654](1896351 '.v' tmp[2002660] x0[1108562]))
          (2002656 '.=' this[1156532] F42__iterator[2001415] tmp[2002654])
          val tmp[2002667]:_ic_chpl_bytes__ref_string[1108256] "temp"
          const-val tmp[2002673]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108566] "temp"
          (2002678 'move' tmp[2002673](2002675 '.v' this[1156532] F40__iterator[2001411]))
          (1896356 'move' tmp[2002667](1896358 '.v' tmp[2002673] x1[1108564]))
          (2002669 '.=' this[1156532] F43__iterator[2001417] tmp[2002667])
          val tmp[2002680]:_ic_these_range_int64_t_bounded_F[1096703] "temp"
          (2002685 'move' tmp[2002680](2002682 '.v' this[1156532] F42__iterator[2001415]))
          (1896363 call zip1[1096738] tmp[2002680])
          val tmp[2002687]:_ic_chpl_bytes__ref_string[1108256] "temp"
          (2002692 'move' tmp[2002687](2002689 '.v' this[1156532] F43__iterator[2001417]))
          (1896367 call zip1[1108291] tmp[2002687])
          const-val isFinished[1896369]:bool[10] "temp"
          val hasMore[1896371]:bool[10] "temp"
          CForLoop[1896373]
          {
            val tmp[2002694]:_ic_chpl_bytes__ref_string[1108256] "temp"
            (2002699 'move' tmp[2002694](2002696 '.v' this[1156532] F43__iterator[2001417]))
            (1896400 call zip2[1108300] tmp[2002694])
            const-val retTmp[1896403]:int(64)[13] "temp"
            val tmp[2002701]:_ic_chpl_bytes__ref_string[1108256] "temp"
            (2002706 'move' tmp[2002701](2002703 '.v' this[1156532] F43__iterator[2001417]))
            (1896405 'move' retTmp[1896403](1896408 call hasMore[1108327] tmp[2002701]))
            (1896410 'move' hasMore[1896371](1896412 'cast' bool[10] retTmp[1896403]))
            (1896415 'move' isFinished[1896369](1896417 '!' hasMore[1896371]))
            if isFinished[1896369]
            {
              (1896421 'chpl_error' c"zippered iterations have non-equal lengths")
            }
            val tmp[2002708]:_ic_chpl_bytes__ref_string[1108256] "temp"
            (2002713 'move' tmp[2002708](2002710 '.v' this[1156532] F43__iterator[2001417]))
            (1896425 'move' _index[1896440](1896428 call getValue[1108336] tmp[2002708]))
            val tmp[2002715]:_ic_these_range_int64_t_bounded_F[1096703] "temp"
            (2002720 'move' tmp[2002715](2002717 '.v' this[1156532] F42__iterator[2001415]))
            (1896432 call zip2[1096747] tmp[2002715])
            val tmp[2002722]:_ic_these_range_int64_t_bounded_F[1096703] "temp"
            (2002727 'move' tmp[2002722](2002724 '.v' this[1156532] F42__iterator[2001415]))
            (1896435 'move' _index[1896446](1896438 call getValue[1096783] tmp[2002722]))
            val _index[1896440]:uint(8)[100] "temp"
            val tmp[2002729]:(int(64),uint(8))[1111040] "temp"
            (2002734 'move' tmp[2002729](2002731 '.v' this[1156532] F44__indexOfInterest[2001419]))
            (1896442 '.=' tmp[2002729] x1[1111038] _index[1896440])
            (2002736 '.=' this[1156532] F44__indexOfInterest[2001419] tmp[2002729])
            val _index[1896446]:int(64)[13] "temp"
            val tmp[2002740]:(int(64),uint(8))[1111040] "temp"
            (2002745 'move' tmp[2002740](2002742 '.v' this[1156532] F44__indexOfInterest[2001419]))
            (1896448 '.=' tmp[2002740] x0[1111036] _index[1896446])
            (2002747 '.=' this[1156532] F44__indexOfInterest[2001419] tmp[2002740])
            1
            const-val i[1896453]:int(64)[13] "const" "index var" "insert auto destroy"
            const-val tmp[2002751]:(int(64),uint(8))[1111040] "temp"
            (2002756 'move' tmp[2002751](2002753 '.v' this[1156532] F44__indexOfInterest[2001419]))
            (1896455 'move' i[1896453](1896457 '.v' tmp[2002751] x0[1111036]))
            const-val b[1896460]:uint(8)[100] "const" "index var" "insert auto destroy"
            const-val tmp[2002758]:(int(64),uint(8))[1111040] "temp"
            (2002763 'move' tmp[2002758](2002760 '.v' this[1156532] F44__indexOfInterest[2001419]))
            (1896462 'move' b[1896460](1896464 '.v' tmp[2002758] x1[1111038]))
            const-val yret[1896467]:(int(32),byteIndex,int(64))[1122142] "dead after last mention" "YVV" "temp"
            val call_tmp[1896469]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            const-val call_tmp[1896471]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
            (1896473 'move' call_tmp[1896471](1896475 'cast' int(32)[95] b[1896460]))
            ref tmp[2002765]:_ref(byteIndex)[948759] "temp"
            (2002770 'move' tmp[2002765](2002767 '.' this[1156532] F46_ret_tmp[2001423]))
            (1896483 call _cast[39483] i[1896453] tmp[2002765])
            val tmp[2002772]:byteIndex[28170] "temp"
            const-val tmp[2002778]:byteIndex[28170] "temp"
            (2002783 'move' tmp[2002778](2002780 '.v' this[1156532] F46_ret_tmp[2001423]))
            (1896486 'move' tmp[2002772] tmp[2002778])
            (2002774 '.=' this[1156532] F45_call_tmp[2001421] tmp[2002772])
            const-val call_tmp[1896489]:(int(32),byteIndex,int(64))[1122142] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            ref tmp[2002785]:_ref(byteIndex)[948759] "temp"
            (2002790 'move' tmp[2002785](2002787 '.' this[1156532] F45_call_tmp[2001421]))
            ref tmp[2002792]:_ref((int(32),byteIndex,int(64)))[1122214] "temp"
            (2002797 'move' tmp[2002792](2002794 '.' this[1156532] F47_ret_tmp[2001425]))
            (1896494 call _build_tuple[1122092] call_tmp[1896471] tmp[2002785] 1 tmp[2002792])
            const-val tmp[2002799]:(int(32),byteIndex,int(64))[1122142] "temp"
            (2002804 'move' tmp[2002799](2002801 '.v' this[1156532] F47_ret_tmp[2001425]))
            (1896499 'move' call_tmp[1896489] tmp[2002799])
            (1896502 'move' yret[1896467] call_tmp[1896489])
            const-val _yieldedIndex[1897084]:(int(32),byteIndex,int(64))[1122142] "temp"
            (1897749 'move' _yieldedIndex[1897084] call_tmp[1896489])
            1
            const-val c[1897087]:int(32)[95] "const" "index var" "insert auto destroy"
            (1897089 'move' c[1897087](1897091 '.v' _yieldedIndex[1897084] x0[1122136]))
            ref i[1897094]:_ref(byteIndex)[948759] "index var" "insert auto destroy"
            (1897096 'move' i[1897094](1897098 '.v' _yieldedIndex[1897084] x1[1122138]))
            const-val nBytes[1897101]:int(64)[13] "const" "index var" "insert auto destroy"
            (1897103 'move' nBytes[1897101](1897105 '.v' _yieldedIndex[1897084] x2[1122140]))
            const-val call_tmp[1897108]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val tmp[2002806]:bool[10] "temp"
            (2002811 'move' tmp[2002806](2002808 '.v' this[1156532] F31_noSplits[2001393]))
            (1897110 'move' call_tmp[1897108] tmp[2002806])
            const-val tmp[2002813]:bool[10] "temp"
            (2002818 'move' tmp[2002813](2002815 '.v' this[1156532] F31_noSplits[2001393]))
            if tmp[2002813]
            {
              ref tmp[2002820]:_ref(bool)[937199] "temp"
              (2002825 'move' tmp[2002820](2002822 '.' this[1156532] F28_done[2001387]))
              (1897116 call =[435174] tmp[2002820] 1)
              const-val call_tmp[1897119]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              ref tmp[2002827]:_ref(string)[937939] "temp"
              (2002832 'move' tmp[2002827](2002829 '.' this[1156532] F27_localThis[2001385]))
              (1897121 'move' call_tmp[1897119](1897124 call isSpace[36840] tmp[2002827]))
              const-val call_tmp[1897126]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1897128 'move' call_tmp[1897126](1897131 call ![7494] call_tmp[1897119]))
              const-val call_tmp[1897133]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1897135 'move' call_tmp[1897133] call_tmp[1897126])
              if call_tmp[1897126]
              {
                ref tmp[2002834]:_ref(string)[937939] "temp"
                (2002839 'move' tmp[2002834](2002836 '.' this[1156532] F30_chunk[2001391]))
                ref tmp[2002841]:_ref(string)[937939] "temp"
                (2002846 'move' tmp[2002841](2002843 '.' this[1156532] F27_localThis[2001385]))
                (1897141 call =[38269] tmp[2002834] tmp[2002841])
                ref tmp[2002848]:_ref(bool)[937199] "temp"
                (2002853 'move' tmp[2002848](2002850 '.' this[1156532] F29_yieldChunk[2001389]))
                (1897145 call =[435174] tmp[2002848] 1)
              }
            }
            {
              const-val call_tmp[1897150]:bool[10] "dead at end of block" "maybe param" "temp"
              (1897152 'move' call_tmp[1897150](1897155 call codepoint_isWhitespace[39153] c[1897087]))
              const-val cSpace[1897157]:bool[10] "dead at end of block" "insert auto destroy"
              (1897159 'move' cSpace[1897157] call_tmp[1897150])
              const-val tmp[1897162]:bool[10] "dead after last mention" "maybe param" "temp"
              const-val tmp[2002855]:bool[10] "temp"
              (2002860 'move' tmp[2002855](2002857 '.v' this[1156532] F35_inChunk[2001401]))
              (1897164 'move' tmp[1897162] tmp[2002855])
              val tmp[1897167]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
              const-val tmp[1897169]:bool[10] "dead after last mention" "maybe param" "temp"
              const-val call_tmp[1897171]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val tmp[2002862]:bool[10] "temp"
              (2002867 'move' tmp[2002862](2002864 '.v' this[1156532] F35_inChunk[2001401]))
              (1897173 'move' call_tmp[1897171] tmp[2002862])
              const-val tmp[2002869]:bool[10] "temp"
              (2002874 'move' tmp[2002869](2002871 '.v' this[1156532] F35_inChunk[2001401]))
              (1897176 'move' tmp[1897169] tmp[2002869])
              const-val tmp[2002876]:bool[10] "temp"
              (2002881 'move' tmp[2002876](2002878 '.v' this[1156532] F35_inChunk[2001401]))
              if tmp[2002876]
              {
                (1897181 'move' tmp[1897167] 1)
              }
              {
                const-val tmp[1897185]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                (1897187 'move' tmp[1897185] cSpace[1897157])
                (1897190 'move' tmp[1897167] cSpace[1897157])
              }
              const-val call_tmp[1897194]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1897196 'move' call_tmp[1897194](1897199 call ![7494] tmp[1897167]))
              const-val call_tmp[1897201]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1897203 'move' call_tmp[1897201] call_tmp[1897194])
              if call_tmp[1897194]
              {
                ref tmp[2002883]:_ref(byteIndex)[948759] "temp"
                (2002888 'move' tmp[2002883](2002885 '.' this[1156532] F36_chunkStart[2001403]))
                (1897209 call =[38191] tmp[2002883] i[1897094])
                ref tmp[2002890]:_ref(bool)[937199] "temp"
                (2002895 'move' tmp[2002890](2002892 '.' this[1156532] F35_inChunk[2001401]))
                (1897213 call =[435174] tmp[2002890] 1)
                const-val call_tmp[1897216]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                ref tmp[2002897]:_ref(byteIndex)[948759] "temp"
                (2002902 'move' tmp[2002897](2002899 '.' this[1156532] F48_ret_tmp[2001427]))
                (1897221 call -[28854] i[1897094] 1 tmp[2002897])
                const-val tmp[2002904]:byteIndex[28170] "temp"
                (2002909 'move' tmp[2002904](2002906 '.v' this[1156532] F48_ret_tmp[2001427]))
                (1897225 'move' call_tmp[1897216] tmp[2002904])
                const-val call_tmp[1897228]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                ref tmp[2002911]:_ref(byteIndex)[948759] "temp"
                (2002916 'move' tmp[2002911](2002913 '.' this[1156532] F49_ret_tmp[2001429]))
                (1897233 call +[28722] call_tmp[1897216] nBytes[1897101] tmp[2002911])
                const-val tmp[2002918]:byteIndex[28170] "temp"
                (2002923 'move' tmp[2002918](2002920 '.v' this[1156532] F49_ret_tmp[2001429]))
                (1897237 'move' call_tmp[1897228] tmp[2002918])
                const-val call_tmp[1897240]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                ref tmp[2002925]:_ref(byteIndex)[948759] "temp"
                (2002930 'move' tmp[2002925](2002927 '.' this[1156532] F34_iEnd[2001399]))
                (1897242 'move' call_tmp[1897240](1897245 call >[28572] call_tmp[1897228] tmp[2002925]))
                const-val call_tmp[1897248]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1897250 'move' call_tmp[1897248] call_tmp[1897240])
                if call_tmp[1897240]
                {
                  const-val call_tmp[1897255]:range(byteIndex,boundedLow,false)[1143403] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  ref tmp[2002932]:_ref(byteIndex)[948759] "temp"
                  (2002937 'move' tmp[2002932](2002934 '.' this[1156532] F36_chunkStart[2001403]))
                  ref tmp[2002939]:_ref(range(byteIndex,boundedLow,false))[1143447] "temp"
                  (2002944 'move' tmp[2002939](2002941 '.' this[1156532] F50_ret_tmp[2001431]))
                  (1897260 call chpl_build_low_bounded_range[1142710] tmp[2002932] tmp[2002939])
                  const-val tmp[2002946]:range(byteIndex,boundedLow,false)[1143403] "temp"
                  (2002951 'move' tmp[2002946](2002948 '.v' this[1156532] F50_ret_tmp[2001431]))
                  (1897263 'move' call_tmp[1897255] tmp[2002946])
                  const-val call_tmp[1897266]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  ref tmp[2002953]:_ref(string)[937939] "temp"
                  (2002958 'move' tmp[2002953](2002955 '.' this[1156532] F27_localThis[2001385]))
                  ref tmp[2002960]:_ref(string)[937939] "temp"
                  (2002965 'move' tmp[2002960](2002962 '.' this[1156532] F51_ret_tmp[2001433]))
                  (1897271 call this[1143723] tmp[2002953] call_tmp[1897255] tmp[2002960])
                  const-val tmp[2002967]:string[26] "temp"
                  (2002972 'move' tmp[2002967](2002969 '.v' this[1156532] F51_ret_tmp[2001433]))
                  (1897275 'move' call_tmp[1897266] tmp[2002967])
                  ref tmp[2002974]:_ref(string)[937939] "temp"
                  (2002979 'move' tmp[2002974](2002976 '.' this[1156532] F30_chunk[2001391]))
                  (1897279 call =[38269] tmp[2002974] call_tmp[1897266])
                  (1897283 call chpl__autoDestroy[1461530] call_tmp[1897266])
                  (1897286 call chpl__autoDestroy[1542826] call_tmp[1897255])
                  ref tmp[2002981]:_ref(bool)[937199] "temp"
                  (2002986 'move' tmp[2002981](2002983 '.' this[1156532] F29_yieldChunk[2001389]))
                  (1897289 call =[435174] tmp[2002981] 1)
                  ref tmp[2002988]:_ref(bool)[937199] "temp"
                  (2002993 'move' tmp[2002988](2002990 '.' this[1156532] F28_done[2001387]))
                  (1897293 call =[435174] tmp[2002988] 1)
                }
                (1897298 call chpl__autoDestroy[1461793] call_tmp[1897228])
                (1897301 call chpl__autoDestroy[1461793] call_tmp[1897216])
              }
              {
                const-val call_tmp[1897304]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val tmp[2002995]:bool[10] "temp"
                (2003000 'move' tmp[2002995](2002997 '.v' this[1156532] F35_inChunk[2001401]))
                (1897306 'move' call_tmp[1897304] tmp[2002995])
                if call_tmp[1897304]
                {
                  const-val call_tmp[1897311]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1897313 'move' call_tmp[1897311] cSpace[1897157])
                  if cSpace[1897157]
                  {
                    ref tmp[2003002]:_ref(int(64))[936572] "temp"
                    (2003007 'move' tmp[2003002](2003004 '.' this[1156532] F33_splitCount[2001397]))
                    (1897319 call +=[451315] tmp[2003002] 1)
                    const-val tmp[1897322]:bool[10] "dead after last mention" "maybe param" "temp"
                    const-val tmp[2003009]:bool[10] "temp"
                    (2003014 'move' tmp[2003009](2003011 '.v' this[1156532] F32_limitSplits[2001395]))
                    (1897324 'move' tmp[1897322] tmp[2003009])
                    val tmp[1897327]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                    const-val tmp[1897329]:bool[10] "dead after last mention" "maybe param" "temp"
                    const-val call_tmp[1897331]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val tmp[2003016]:bool[10] "temp"
                    (2003021 'move' tmp[2003016](2003018 '.v' this[1156532] F32_limitSplits[2001395]))
                    (1897333 'move' call_tmp[1897331] tmp[2003016])
                    const-val tmp[2003023]:bool[10] "temp"
                    (2003028 'move' tmp[2003023](2003025 '.v' this[1156532] F32_limitSplits[2001395]))
                    (1897336 'move' tmp[1897329] tmp[2003023])
                    const-val tmp[2003030]:bool[10] "temp"
                    (2003035 'move' tmp[2003030](2003032 '.v' this[1156532] F32_limitSplits[2001395]))
                    if tmp[2003030]
                    {
                      const-val tmp[1897341]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                      const-val call_tmp[1897343]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      const-val tmp[2003037]:int(64)[13] "temp"
                      (2003042 'move' tmp[2003037](2003039 '.v' this[1156532] F33_splitCount[2001397]))
                      const-val tmp[2003044]:int(64)[13] "temp"
                      (2003049 'move' tmp[2003044](2003046 '.v' this[1156532] F1_maxsplit[2001331]))
                      (1897345 'move' call_tmp[1897343](1897348 call >[437672] tmp[2003037] tmp[2003044]))
                      (1897351 'move' tmp[1897341] call_tmp[1897343])
                      (1897354 'move' tmp[1897327] call_tmp[1897343])
                    }
                    {
                      (1897358 'move' tmp[1897327] 0)
                    }
                    const-val call_tmp[1897362]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1897364 'move' call_tmp[1897362] tmp[1897327])
                    if tmp[1897327]
                    {
                      const-val call_tmp[1897369]:range(byteIndex,boundedLow,false)[1143403] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                      ref tmp[2003051]:_ref(byteIndex)[948759] "temp"
                      (2003056 'move' tmp[2003051](2003053 '.' this[1156532] F36_chunkStart[2001403]))
                      ref tmp[2003058]:_ref(range(byteIndex,boundedLow,false))[1143447] "temp"
                      (2003063 'move' tmp[2003058](2003060 '.' this[1156532] F52_ret_tmp[2001435]))
                      (1897374 call chpl_build_low_bounded_range[1142710] tmp[2003051] tmp[2003058])
                      const-val tmp[2003065]:range(byteIndex,boundedLow,false)[1143403] "temp"
                      (2003070 'move' tmp[2003065](2003067 '.v' this[1156532] F52_ret_tmp[2001435]))
                      (1897377 'move' call_tmp[1897369] tmp[2003065])
                      const-val call_tmp[1897380]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                      ref tmp[2003072]:_ref(string)[937939] "temp"
                      (2003077 'move' tmp[2003072](2003074 '.' this[1156532] F27_localThis[2001385]))
                      ref tmp[2003079]:_ref(string)[937939] "temp"
                      (2003084 'move' tmp[2003079](2003081 '.' this[1156532] F53_ret_tmp[2001437]))
                      (1897385 call this[1143723] tmp[2003072] call_tmp[1897369] tmp[2003079])
                      const-val tmp[2003086]:string[26] "temp"
                      (2003091 'move' tmp[2003086](2003088 '.v' this[1156532] F53_ret_tmp[2001437]))
                      (1897389 'move' call_tmp[1897380] tmp[2003086])
                      ref tmp[2003093]:_ref(string)[937939] "temp"
                      (2003098 'move' tmp[2003093](2003095 '.' this[1156532] F30_chunk[2001391]))
                      (1897393 call =[38269] tmp[2003093] call_tmp[1897380])
                      (1897397 call chpl__autoDestroy[1461530] call_tmp[1897380])
                      (1897400 call chpl__autoDestroy[1542826] call_tmp[1897369])
                      ref tmp[2003100]:_ref(bool)[937199] "temp"
                      (2003105 'move' tmp[2003100](2003102 '.' this[1156532] F29_yieldChunk[2001389]))
                      (1897403 call =[435174] tmp[2003100] 1)
                      ref tmp[2003107]:_ref(bool)[937199] "temp"
                      (2003112 'move' tmp[2003107](2003109 '.' this[1156532] F28_done[2001387]))
                      (1897407 call =[435174] tmp[2003107] 1)
                    }
                    {
                      const-val call_tmp[1897411]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                      ref tmp[2003114]:_ref(byteIndex)[948759] "temp"
                      (2003119 'move' tmp[2003114](2003116 '.' this[1156532] F54_ret_tmp[2001439]))
                      (1897416 call -[28854] i[1897094] 1 tmp[2003114])
                      const-val tmp[2003121]:byteIndex[28170] "temp"
                      (2003126 'move' tmp[2003121](2003123 '.v' this[1156532] F54_ret_tmp[2001439]))
                      (1897420 'move' call_tmp[1897411] tmp[2003121])
                      const-val call_tmp[1897423]:range(byteIndex,bounded,false)[1025792] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                      ref tmp[2003128]:_ref(byteIndex)[948759] "temp"
                      (2003133 'move' tmp[2003128](2003130 '.' this[1156532] F36_chunkStart[2001403]))
                      ref tmp[2003135]:_ref(range(byteIndex,bounded,false))[1025801] "temp"
                      (2003140 'move' tmp[2003135](2003137 '.' this[1156532] F55_ret_tmp[2001441]))
                      (1897428 call chpl_build_bounded_range[1123254] tmp[2003128] call_tmp[1897411] tmp[2003135])
                      const-val tmp[2003142]:range(byteIndex,bounded,false)[1025792] "temp"
                      (2003147 'move' tmp[2003142](2003144 '.v' this[1156532] F55_ret_tmp[2001441]))
                      (1897432 'move' call_tmp[1897423] tmp[2003142])
                      const-val call_tmp[1897435]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                      ref tmp[2003149]:_ref(string)[937939] "temp"
                      (2003154 'move' tmp[2003149](2003151 '.' this[1156532] F27_localThis[2001385]))
                      ref tmp[2003156]:_ref(string)[937939] "temp"
                      (2003161 'move' tmp[2003156](2003158 '.' this[1156532] F56_ret_tmp[2001443]))
                      (1897440 call this[1123500] tmp[2003149] call_tmp[1897423] tmp[2003156])
                      const-val tmp[2003163]:string[26] "temp"
                      (2003168 'move' tmp[2003163](2003165 '.v' this[1156532] F56_ret_tmp[2001443]))
                      (1897444 'move' call_tmp[1897435] tmp[2003163])
                      ref tmp[2003170]:_ref(string)[937939] "temp"
                      (2003175 'move' tmp[2003170](2003172 '.' this[1156532] F30_chunk[2001391]))
                      (1897448 call =[38269] tmp[2003170] call_tmp[1897435])
                      (1897452 call chpl__autoDestroy[1461530] call_tmp[1897435])
                      (1897455 call chpl__autoDestroy[1534330] call_tmp[1897423])
                      (1897458 call chpl__autoDestroy[1461793] call_tmp[1897411])
                      ref tmp[2003177]:_ref(bool)[937199] "temp"
                      (2003182 'move' tmp[2003177](2003179 '.' this[1156532] F29_yieldChunk[2001389]))
                      (1897461 call =[435174] tmp[2003177] 1)
                      ref tmp[2003184]:_ref(bool)[937199] "temp"
                      (2003189 'move' tmp[2003184](2003186 '.' this[1156532] F35_inChunk[2001401]))
                      (1897465 call =[435174] tmp[2003184] 0)
                    }
                  }
                  {
                    const-val call_tmp[1897470]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    ref tmp[2003191]:_ref(byteIndex)[948759] "temp"
                    (2003196 'move' tmp[2003191](2003193 '.' this[1156532] F57_ret_tmp[2001445]))
                    (1897475 call -[28854] i[1897094] 1 tmp[2003191])
                    const-val tmp[2003198]:byteIndex[28170] "temp"
                    (2003203 'move' tmp[2003198](2003200 '.v' this[1156532] F57_ret_tmp[2001445]))
                    (1897479 'move' call_tmp[1897470] tmp[2003198])
                    const-val call_tmp[1897482]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    ref tmp[2003205]:_ref(byteIndex)[948759] "temp"
                    (2003210 'move' tmp[2003205](2003207 '.' this[1156532] F58_ret_tmp[2001447]))
                    (1897487 call +[28722] call_tmp[1897470] nBytes[1897101] tmp[2003205])
                    const-val tmp[2003212]:byteIndex[28170] "temp"
                    (2003217 'move' tmp[2003212](2003214 '.v' this[1156532] F58_ret_tmp[2001447]))
                    (1897491 'move' call_tmp[1897482] tmp[2003212])
                    const-val call_tmp[1897494]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    ref tmp[2003219]:_ref(byteIndex)[948759] "temp"
                    (2003224 'move' tmp[2003219](2003221 '.' this[1156532] F34_iEnd[2001399]))
                    (1897496 'move' call_tmp[1897494](1897499 call >[28572] call_tmp[1897482] tmp[2003219]))
                    const-val call_tmp[1897502]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1897504 'move' call_tmp[1897502] call_tmp[1897494])
                    if call_tmp[1897494]
                    {
                      const-val call_tmp[1897509]:range(byteIndex,boundedLow,false)[1143403] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                      ref tmp[2003226]:_ref(byteIndex)[948759] "temp"
                      (2003231 'move' tmp[2003226](2003228 '.' this[1156532] F36_chunkStart[2001403]))
                      ref tmp[2003233]:_ref(range(byteIndex,boundedLow,false))[1143447] "temp"
                      (2003238 'move' tmp[2003233](2003235 '.' this[1156532] F59_ret_tmp[2001449]))
                      (1897514 call chpl_build_low_bounded_range[1142710] tmp[2003226] tmp[2003233])
                      const-val tmp[2003240]:range(byteIndex,boundedLow,false)[1143403] "temp"
                      (2003245 'move' tmp[2003240](2003242 '.v' this[1156532] F59_ret_tmp[2001449]))
                      (1897517 'move' call_tmp[1897509] tmp[2003240])
                      const-val call_tmp[1897520]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                      ref tmp[2003247]:_ref(string)[937939] "temp"
                      (2003252 'move' tmp[2003247](2003249 '.' this[1156532] F27_localThis[2001385]))
                      ref tmp[2003254]:_ref(string)[937939] "temp"
                      (2003259 'move' tmp[2003254](2003256 '.' this[1156532] F60_ret_tmp[2001451]))
                      (1897525 call this[1143723] tmp[2003247] call_tmp[1897509] tmp[2003254])
                      const-val tmp[2003261]:string[26] "temp"
                      (2003266 'move' tmp[2003261](2003263 '.v' this[1156532] F60_ret_tmp[2001451]))
                      (1897529 'move' call_tmp[1897520] tmp[2003261])
                      ref tmp[2003268]:_ref(string)[937939] "temp"
                      (2003273 'move' tmp[2003268](2003270 '.' this[1156532] F30_chunk[2001391]))
                      (1897533 call =[38269] tmp[2003268] call_tmp[1897520])
                      (1897537 call chpl__autoDestroy[1461530] call_tmp[1897520])
                      (1897540 call chpl__autoDestroy[1542826] call_tmp[1897509])
                      ref tmp[2003275]:_ref(bool)[937199] "temp"
                      (2003280 'move' tmp[2003275](2003277 '.' this[1156532] F29_yieldChunk[2001389]))
                      (1897543 call =[435174] tmp[2003275] 1)
                      ref tmp[2003282]:_ref(bool)[937199] "temp"
                      (2003287 'move' tmp[2003282](2003284 '.' this[1156532] F28_done[2001387]))
                      (1897547 call =[435174] tmp[2003282] 1)
                    }
                    (1897552 call chpl__autoDestroy[1461793] call_tmp[1897482])
                    (1897555 call chpl__autoDestroy[1461793] call_tmp[1897470])
                  }
                }
              }
            }
            const-val call_tmp[1897561]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val tmp[2003289]:bool[10] "temp"
            (2003294 'move' tmp[2003289](2003291 '.v' this[1156532] F29_yieldChunk[2001389]))
            (1897563 'move' call_tmp[1897561] tmp[2003289])
            if call_tmp[1897561]
            {
              const-val yret[1897568]:string[26] "dead after last mention" "YVV" "temp"
              val tmp[2003296]:string[26] "temp"
              ref tmp[2003302]:_ref(string)[937939] "temp"
              (2003307 'move' tmp[2003302](2003304 '.' this[1156532] F30_chunk[2001391]))
              (1897572 'move' tmp[2003296](1897575 call chpl__initCopy[981348] tmp[2003302]))
              (2003298 '.=' this[1156532] F82__yield_expr_tmp_[2001495] tmp[2003296])
              const-val tmp[2003309]:string[26] "temp"
              (2003314 'move' tmp[2003309](2003311 '.v' this[1156532] F82__yield_expr_tmp_[2001495]))
              (1897577 'move' yret[1897568] tmp[2003309])
              val tmp[2003320]:string[26] "temp"
              (2003325 'move' tmp[2003320](2003322 '.v' this[1156532] F82__yield_expr_tmp_[2001495]))
              (2003317 '.=' this[1156532] value[2001499] tmp[2003320])
              (2004549 '.=' this[1156532] more[1156507] 3)
              gotoIterEnd _end[2004537] _end[2004537]
              label _jump_break_3[2004557]
              ref moreRef1[1897685]:_ref(int(64))[936572] "temp"
              ref tmp[2003327]:_ref(_ic_these_range_int64_t_bounded_F)[1096846] "temp"
              (2003332 'move' tmp[2003327](2003329 '.' this[1156532] F42__iterator[2001415]))
              (1897687 'move' moreRef1[1897685](1897689 '.' tmp[2003327] more[1096706]))
              const-val moreVal1[1897692]:int(64)[13] "const" "temp"
              (1897694 '=' moreVal1[1897692] moreRef1[1897685])
              const-val moreValNeg1[1897697]:int(64)[13] "const" "temp"
              (1897699 'move' moreValNeg1[1897697](1897701 'u-' moreVal1[1897692]))
              (1897703 '=' moreRef1[1897685] moreValNeg1[1897697])
              val tmp[2003334]:_ic_these_range_int64_t_bounded_F[1096703] "temp"
              (2003339 'move' tmp[2003334](2003336 '.v' this[1156532] F42__iterator[2001415]))
              (1897707 call advance[1096729] tmp[2003334])
              ref moreRef2[1897709]:_ref(int(64))[936572] "temp"
              ref tmp[2003341]:_ref(_ic_chpl_bytes__ref_string)[1108399] "temp"
              (2003346 'move' tmp[2003341](2003343 '.' this[1156532] F43__iterator[2001417]))
              (1897711 'move' moreRef2[1897709](1897713 '.' tmp[2003341] more[1108259]))
              const-val moreVal2[1897716]:int(64)[13] "const" "temp"
              (1897718 '=' moreVal2[1897716] moreRef2[1897709])
              const-val moreValNeg2[1897721]:int(64)[13] "const" "temp"
              (1897723 'move' moreValNeg2[1897721](1897725 'u-' moreVal2[1897716]))
              (1897727 '=' moreRef2[1897709] moreValNeg2[1897721])
              val tmp[2003348]:_ic_chpl_bytes__ref_string[1108256] "temp"
              (2003353 'move' tmp[2003348](2003350 '.v' this[1156532] F43__iterator[2001417]))
              (1897731 call advance[1108282] tmp[2003348])
              ref tmp[2003355]:_ref(byteIndex)[948759] "temp"
              (2003360 'move' tmp[2003355](2003357 '.' this[1156532] F45_call_tmp[2001421]))
              (1897734 call chpl__autoDestroy[1461793] tmp[2003355])
              ref tmp[2003362]:_ref((_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string))[1108674] "temp"
              (2003367 'move' tmp[2003362](2003364 '.' this[1156532] F40__iterator[2001411]))
              (1897737 call _freeIterator[1108724] tmp[2003362])
              ref tmp[2003369]:_ref((_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string))[1108674] "temp"
              (2003374 'move' tmp[2003369](2003371 '.' this[1156532] F40__iterator[2001411]))
              (1897740 call chpl__autoDestroy[1541417] tmp[2003369])
              const-val tmp[2003376]:range(int(64),bounded,false)[1026814] "temp"
              (2003381 'move' tmp[2003376](2003378 '.v' this[1156532] F41_call_tmp[2001413]))
              (1897743 call chpl__autoDestroy[1534375] tmp[2003376])
              ref tmp[2003383]:_ref(string)[937939] "temp"
              (2003388 'move' tmp[2003383](2003385 '.' this[1156532] F39_localThis[2001409]))
              (1897746 call chpl__autoDestroy[1461530] tmp[2003383])
              val tmp[2003390]:_ic__cpIndexLen__ref_string[1122385] "temp"
              (2003395 'move' tmp[2003390](2003392 '.v' this[1156532] F37__iterator[2001405]))
              (1897585 call _freeIterator[1122573] tmp[2003390])
              ref tmp[2003397]:_ref(byteIndex)[948759] "temp"
              (2003402 'move' tmp[2003397](2003399 '.' this[1156532] F38_default_arg_start[2001407]))
              (1897588 call chpl__autoDestroy[1461793] tmp[2003397])
              ref tmp[2003404]:_ref(byteIndex)[948759] "temp"
              (2003409 'move' tmp[2003404](2003406 '.' this[1156532] F36_chunkStart[2001403]))
              (1897591 call chpl__autoDestroy[1461793] tmp[2003404])
              ref tmp[2003411]:_ref(byteIndex)[948759] "temp"
              (2003416 'move' tmp[2003411](2003413 '.' this[1156532] F34_iEnd[2001399]))
              (1897594 call chpl__autoDestroy[1461793] tmp[2003411])
              ref tmp[2003418]:_ref(string)[937939] "temp"
              (2003423 'move' tmp[2003418](2003420 '.' this[1156532] F30_chunk[2001391]))
              (1897597 call chpl__autoDestroy[1461530] tmp[2003418])
              ref tmp[2003425]:_ref(string)[937939] "temp"
              (2003430 'move' tmp[2003425](2003427 '.' this[1156532] F27_localThis[2001385]))
              (1897600 call chpl__autoDestroy[1461530] tmp[2003425])
              gotoReturn _endsplit[1813917] _endsplit[1813917]
              label _jump_3[2004555]
              ref tmp[2003432]:_ref(bool)[937199] "temp"
              (2003437 'move' tmp[2003432](2003434 '.' this[1156532] F29_yieldChunk[2001389]))
              (1897606 call =[435174] tmp[2003432] 0)
            }
            const-val call_tmp[1897610]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val tmp[2003439]:bool[10] "temp"
            (2003444 'move' tmp[2003439](2003441 '.v' this[1156532] F28_done[2001387]))
            (1897612 'move' call_tmp[1897610] tmp[2003439])
            if call_tmp[1897610]
            {
              ref moreRef1[1897621]:_ref(int(64))[936572] "temp"
              ref tmp[2003446]:_ref(_ic_these_range_int64_t_bounded_F)[1096846] "temp"
              (2003451 'move' tmp[2003446](2003448 '.' this[1156532] F42__iterator[2001415]))
              (1897623 'move' moreRef1[1897621](1897625 '.' tmp[2003446] more[1096706]))
              const-val moreVal1[1897628]:int(64)[13] "const" "temp"
              (1897630 '=' moreVal1[1897628] moreRef1[1897621])
              const-val moreValNeg1[1897633]:int(64)[13] "const" "temp"
              (1897635 'move' moreValNeg1[1897633](1897637 'u-' moreVal1[1897628]))
              (1897639 '=' moreRef1[1897621] moreValNeg1[1897633])
              val tmp[2003453]:_ic_these_range_int64_t_bounded_F[1096703] "temp"
              (2003458 'move' tmp[2003453](2003455 '.v' this[1156532] F42__iterator[2001415]))
              (1897643 call advance[1096729] tmp[2003453])
              ref moreRef2[1897645]:_ref(int(64))[936572] "temp"
              ref tmp[2003460]:_ref(_ic_chpl_bytes__ref_string)[1108399] "temp"
              (2003465 'move' tmp[2003460](2003462 '.' this[1156532] F43__iterator[2001417]))
              (1897647 'move' moreRef2[1897645](1897649 '.' tmp[2003460] more[1108259]))
              const-val moreVal2[1897652]:int(64)[13] "const" "temp"
              (1897654 '=' moreVal2[1897652] moreRef2[1897645])
              const-val moreValNeg2[1897657]:int(64)[13] "const" "temp"
              (1897659 'move' moreValNeg2[1897657](1897661 'u-' moreVal2[1897652]))
              (1897663 '=' moreRef2[1897645] moreValNeg2[1897657])
              val tmp[2003467]:_ic_chpl_bytes__ref_string[1108256] "temp"
              (2003472 'move' tmp[2003467](2003469 '.v' this[1156532] F43__iterator[2001417]))
              (1897667 call advance[1108282] tmp[2003467])
              ref tmp[2003474]:_ref(byteIndex)[948759] "temp"
              (2003479 'move' tmp[2003474](2003476 '.' this[1156532] F45_call_tmp[2001421]))
              (1897670 call chpl__autoDestroy[1461793] tmp[2003474])
              ref tmp[2003481]:_ref((_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string))[1108674] "temp"
              (2003486 'move' tmp[2003481](2003483 '.' this[1156532] F40__iterator[2001411]))
              (1897673 call _freeIterator[1108724] tmp[2003481])
              ref tmp[2003488]:_ref((_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string))[1108674] "temp"
              (2003493 'move' tmp[2003488](2003490 '.' this[1156532] F40__iterator[2001411]))
              (1897676 call chpl__autoDestroy[1541417] tmp[2003488])
              const-val tmp[2003495]:range(int(64),bounded,false)[1026814] "temp"
              (2003500 'move' tmp[2003495](2003497 '.v' this[1156532] F41_call_tmp[2001413]))
              (1897679 call chpl__autoDestroy[1534375] tmp[2003495])
              ref tmp[2003502]:_ref(string)[937939] "temp"
              (2003507 'move' tmp[2003502](2003504 '.' this[1156532] F39_localThis[2001409]))
              (1897682 call chpl__autoDestroy[1461530] tmp[2003502])
              break _breakLabel[35880] _breakLabel[35880]
            }
            ref tmp[2003509]:_ref(byteIndex)[948759] "temp"
            (2003514 'move' tmp[2003509](2003511 '.' this[1156532] F45_call_tmp[2001421]))
            (1896576 call chpl__autoDestroy[1461793] tmp[2003509])
            val tmp[2003516]:_ic_these_range_int64_t_bounded_F[1096703] "temp"
            (2003521 'move' tmp[2003516](2003518 '.v' this[1156532] F42__iterator[2001415]))
            (1896580 call zip3[1096756] tmp[2003516])
            val tmp[2003523]:_ic_chpl_bytes__ref_string[1108256] "temp"
            (2003528 'move' tmp[2003523](2003525 '.v' this[1156532] F43__iterator[2001417]))
            (1896584 call zip3[1108309] tmp[2003523])
            {
              val tmp[2003530]:_ic_these_range_int64_t_bounded_F[1096703] "temp"
              (2003535 'move' tmp[2003530](2003532 '.v' this[1156532] F42__iterator[2001415]))
              (1896377 call init[1096792] tmp[2003530])
              val tmp[2003537]:_ic_chpl_bytes__ref_string[1108256] "temp"
              (2003542 'move' tmp[2003537](2003539 '.v' this[1156532] F43__iterator[2001417]))
              (1896381 call init[1108345] tmp[2003537])
            }
            {
              val tmp[2003544]:_ic_these_range_int64_t_bounded_F[1096703] "temp"
              (2003549 'move' tmp[2003544](2003546 '.v' this[1156532] F42__iterator[2001415]))
              (1896385 call hasMore[1096774] tmp[2003544])
            }
            {
              val tmp[2003551]:_ic_these_range_int64_t_bounded_F[1096703] "temp"
              (2003556 'move' tmp[2003551](2003553 '.v' this[1156532] F42__iterator[2001415]))
              (1896390 call incr[1096801] tmp[2003551])
              val tmp[2003558]:_ic_chpl_bytes__ref_string[1108256] "temp"
              (2003563 'move' tmp[2003558](2003560 '.v' this[1156532] F43__iterator[2001417]))
              (1896394 call incr[1108354] tmp[2003558])
            }
          }
          const-val retTmp[1896587]:int(64)[13] "temp"
          val tmp[2003565]:_ic_chpl_bytes__ref_string[1108256] "temp"
          (2003570 'move' tmp[2003565](2003567 '.v' this[1156532] F43__iterator[2001417]))
          (1896589 'move' retTmp[1896587](1896592 call hasMore[1108327] tmp[2003565]))
          (1896594 'move' hasMore[1896371](1896596 'cast' bool[10] retTmp[1896587]))
          if hasMore[1896371]
          {
            (1896601 'chpl_error' c"zippered iterations have non-equal lengths")
          }
          val tmp[2003572]:_ic_chpl_bytes__ref_string[1108256] "temp"
          (2003577 'move' tmp[2003572](2003574 '.v' this[1156532] F43__iterator[2001417]))
          (1896606 call zip4[1108318] tmp[2003572])
          val tmp[2003579]:_ic_these_range_int64_t_bounded_F[1096703] "temp"
          (2003584 'move' tmp[2003579](2003581 '.v' this[1156532] F42__iterator[2001415]))
          (1896610 call zip4[1096765] tmp[2003579])
          ref tmp[2003586]:_ref((_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string))[1108674] "temp"
          (2003591 'move' tmp[2003586](2003588 '.' this[1156532] F40__iterator[2001411]))
          (1896613 call _freeIterator[1108724] tmp[2003586])
          ref tmp[2003593]:_ref((_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string))[1108674] "temp"
          (2003598 'move' tmp[2003593](2003595 '.' this[1156532] F40__iterator[2001411]))
          (1896616 call chpl__autoDestroy[1541417] tmp[2003593])
          const-val tmp[2003600]:range(int(64),bounded,false)[1026814] "temp"
          (2003605 'move' tmp[2003600](2003602 '.v' this[1156532] F41_call_tmp[2001413]))
          (1896619 call chpl__autoDestroy[1534375] tmp[2003600])
        }
        {
          const-val call_tmp[1896622]:int(64)[13] "dead at end of block" "maybe param" "temp"
          ref start[1898331]:_ref(byteIndex)[948759] "temp"
          ref tmp[2003607]:_ref(_ic__cpIndexLen__ref_string)[1122528] "temp"
          (2003612 'move' tmp[2003607](2003609 '.' this[1156532] F37__iterator[2001405]))
          (1898336 'move' start[1898331](1898333 '.v' tmp[2003607] F1_start[1997105]))
          (1896624 'move' call_tmp[1896622](1896627 call _cast[39462] start[1898331]))
          val tmp[2003614]:int(64)[13] "temp"
          (1896631 'move' tmp[2003614] call_tmp[1896622])
          (2003616 '.=' this[1156532] F61_i[2001453] tmp[2003614])
          const-val call_tmp[1896634]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1896636 'move' call_tmp[1896634](1896639 call >[437672] call_tmp[1896622] 0))
          const-val call_tmp[1896642]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1896644 'move' call_tmp[1896642] call_tmp[1896634])
          if call_tmp[1896634]
          {
            val tmp[1896649]:bool[10] "dead after last mention" "temp"
            const-val tmp[1896651]:bool[10] "dead after last mention" "maybe param" "temp"
            ref call_tmp[1896653]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
            ref tmp[2003620]:_ref(string)[937939] "temp"
            (2003625 'move' tmp[2003620](2003622 '.' this[1156532] F39_localThis[2001409]))
            (1896655 'move' call_tmp[1896653](1896658 call buffLen[757886] tmp[2003620]))
            const-val coerce_tmp[1896660]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (1896662 'move' coerce_tmp[1896660](1896664 'deref' call_tmp[1896653]))
            const-val tmp[2003627]:int(64)[13] "temp"
            (2003632 'move' tmp[2003627](2003629 '.v' this[1156532] F61_i[2001453]))
            (1896666 'move' tmp[1896651](1896669 call <[437452] tmp[2003627] coerce_tmp[1896660]))
            val tmp[1896672]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
            const-val tmp[1896674]:bool[10] "dead after last mention" "maybe param" "temp"
            const-val call_tmp[1896676]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1896678 'move' call_tmp[1896676] tmp[1896651])
            (1896681 'move' tmp[1896674] tmp[1896651])
            if tmp[1896651]
            {
              const-val tmp[1896686]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
              ref call_tmp[1896688]:_ref(uint(8))[936908] "dead after last mention" "maybe param" "temp"
              ref _this_tmp_[1896690]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "temp"
              ref tmp[2003634]:_ref(string)[937939] "temp"
              (2003639 'move' tmp[2003634](2003636 '.' this[1156532] F39_localThis[2001409]))
              (1896692 'move' _this_tmp_[1896690](1896695 call buff[757964] tmp[2003634]))
              val coerce_tmp[1896697]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1896699 'move' coerce_tmp[1896697](1896701 'deref' _this_tmp_[1896690]))
              const-val tmp[2003641]:int(64)[13] "temp"
              (2003646 'move' tmp[2003641](2003643 '.v' this[1156532] F61_i[2001453]))
              (1896703 'move' call_tmp[1896688](1896706 call this[954091] coerce_tmp[1896697] tmp[2003641]))
              const-val call_tmp[1896709]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1896711]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1896713 'move' coerce_tmp[1896711](1896715 'deref' call_tmp[1896688]))
              (1896717 'move' call_tmp[1896709](1896720 call isInitialByte[181528] coerce_tmp[1896711]))
              const-val call_tmp[1896722]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1896724 'move' call_tmp[1896722](1896727 call ![7494] call_tmp[1896709]))
              (1896729 'move' tmp[1896686] call_tmp[1896722])
              (1896732 'move' tmp[1896672] call_tmp[1896722])
            }
            {
              (1896736 'move' tmp[1896672] 0)
            }
            (1896740 'move' tmp[1896649] tmp[1896672])
            WhileDo[1896743]
            {
              ref tmp[2003648]:_ref(int(64))[936572] "temp"
              (2003653 'move' tmp[2003648](2003650 '.' this[1156532] F61_i[2001453]))
              (1896746 call +=[451315] tmp[2003648] 1)
              const-val tmp[1896749]:bool[10] "dead after last mention" "maybe param" "temp"
              ref call_tmp[1896751]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
              ref tmp[2003655]:_ref(string)[937939] "temp"
              (2003660 'move' tmp[2003655](2003657 '.' this[1156532] F39_localThis[2001409]))
              (1896753 'move' call_tmp[1896751](1896756 call buffLen[757886] tmp[2003655]))
              const-val coerce_tmp[1896758]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1896760 'move' coerce_tmp[1896758](1896762 'deref' call_tmp[1896751]))
              const-val tmp[2003662]:int(64)[13] "temp"
              (2003667 'move' tmp[2003662](2003664 '.v' this[1156532] F61_i[2001453]))
              (1896764 'move' tmp[1896749](1896767 call <[437452] tmp[2003662] coerce_tmp[1896758]))
              val tmp[1896770]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
              const-val tmp[1896772]:bool[10] "dead after last mention" "maybe param" "temp"
              const-val call_tmp[1896774]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1896776 'move' call_tmp[1896774] tmp[1896749])
              (1896779 'move' tmp[1896772] tmp[1896749])
              if tmp[1896749]
              {
                const-val tmp[1896784]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                ref call_tmp[1896786]:_ref(uint(8))[936908] "dead after last mention" "maybe param" "temp"
                ref _this_tmp_[1896788]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "temp"
                ref tmp[2003669]:_ref(string)[937939] "temp"
                (2003674 'move' tmp[2003669](2003671 '.' this[1156532] F39_localThis[2001409]))
                (1896790 'move' _this_tmp_[1896788](1896793 call buff[757964] tmp[2003669]))
                val coerce_tmp[1896795]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1896797 'move' coerce_tmp[1896795](1896799 'deref' _this_tmp_[1896788]))
                const-val tmp[2003676]:int(64)[13] "temp"
                (2003681 'move' tmp[2003676](2003678 '.v' this[1156532] F61_i[2001453]))
                (1896801 'move' call_tmp[1896786](1896804 call this[954091] coerce_tmp[1896795] tmp[2003676]))
                const-val call_tmp[1896807]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[1896809]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1896811 'move' coerce_tmp[1896809](1896813 'deref' call_tmp[1896786]))
                (1896815 'move' call_tmp[1896807](1896818 call isInitialByte[181528] coerce_tmp[1896809]))
                const-val call_tmp[1896820]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1896822 'move' call_tmp[1896820](1896825 call ![7494] call_tmp[1896807]))
                (1896827 'move' tmp[1896784] call_tmp[1896820])
                (1896830 'move' tmp[1896770] call_tmp[1896820])
              }
              {
                (1896834 'move' tmp[1896770] 0)
              }
              (1896838 'move' tmp[1896649] tmp[1896770])
              tmp[1896649]
            }
          }
          val tmp[1896842]:bool[10] "dead after last mention" "temp"
          ref call_tmp[1896844]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
          ref tmp[2003683]:_ref(string)[937939] "temp"
          (2003688 'move' tmp[2003683](2003685 '.' this[1156532] F39_localThis[2001409]))
          (1896846 'move' call_tmp[1896844](1896849 call buffLen[757886] tmp[2003683]))
          const-val call_tmp[1896851]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[1896853]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1896855 'move' coerce_tmp[1896853](1896857 'deref' call_tmp[1896844]))
          const-val tmp[2003690]:int(64)[13] "temp"
          (2003695 'move' tmp[2003690](2003692 '.v' this[1156532] F61_i[2001453]))
          (1896859 'move' call_tmp[1896851](1896862 call <[437452] tmp[2003690] coerce_tmp[1896853]))
          (1896865 'move' tmp[1896842] call_tmp[1896851])
          WhileDo[1896868]
          {
            ref call_tmp[1896870]:_ref(c_ptr(uint(8)))[937432] "dead at end of block" "maybe param" "temp"
            ref tmp[2003697]:_ref(string)[937939] "temp"
            (2003702 'move' tmp[2003697](2003699 '.' this[1156532] F39_localThis[2001409]))
            (1896872 'move' call_tmp[1896870](1896875 call buff[757964] tmp[2003697]))
            ref call_tmp[1896877]:_ref(int(64))[936572] "dead at end of block" "maybe param" "temp"
            ref tmp[2003704]:_ref(string)[937939] "temp"
            (2003709 'move' tmp[2003704](2003706 '.' this[1156532] F39_localThis[2001409]))
            (1896879 'move' call_tmp[1896877](1896882 call buffLen[757886] tmp[2003704]))
            const-val call_tmp[1896884]:(syserr,int(32),int(32))[964620] "dead at end of block" "maybe param" "temp"
            val coerce_tmp[1896886]:c_ptr(uint(8))[937423] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (1896888 'move' coerce_tmp[1896886](1896890 'deref' call_tmp[1896870]))
            const-val coerce_tmp[1896892]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (1896894 'move' coerce_tmp[1896892](1896896 'deref' call_tmp[1896877]))
            const-val tmp[2003711]:int(64)[13] "temp"
            (2003716 'move' tmp[2003711](2003713 '.v' this[1156532] F61_i[2001453]))
            ref tmp[2003718]:_ref((syserr,int(32),int(32)))[964727] "temp"
            (2003723 'move' tmp[2003718](2003720 '.' this[1156532] F62_ret_tmp[2001455]))
            (1896901 call decodeHelp[174406] coerce_tmp[1896886] coerce_tmp[1896892] tmp[2003711] 1 tmp[2003718])
            const-val tmp[2003725]:(syserr,int(32),int(32))[964620] "temp"
            (2003730 'move' tmp[2003725](2003727 '.v' this[1156532] F62_ret_tmp[2001455]))
            (1896907 'move' call_tmp[1896884] tmp[2003725])
            const tmp[2003732]:(syserr,int(32),int(32))[964620] "temp"
            (1896912 'move' tmp[2003732] call_tmp[1896884])
            (2003734 '.=' this[1156532] F63_tmp[2001457] tmp[2003732])
            1
            ref call_tmp[1896916]:_ref(syserr)[948832] "dead at end of block" "maybe param" "reference to a const" "temp"
            ref tmp[2003738]:_ref((syserr,int(32),int(32)))[964727] "temp"
            (2003743 'move' tmp[2003738](2003740 '.' this[1156532] F63_tmp[2001457]))
            (1896918 'move' call_tmp[1896916](1896920 '.' tmp[2003738] x0[964614]))
            const-val decodeRet[1896923]:syserr[223584] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1896925]:syserr[223584] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (1896927 'move' coerce_tmp[1896925](1896929 'deref' call_tmp[1896916]))
            (1896931 'move' decodeRet[1896923](1896934 call chpl__initCopy[964485] coerce_tmp[1896925]))
            ref call_tmp[1896936]:_ref(int(32))[936626] "dead at end of block" "maybe param" "reference to a const" "temp"
            ref tmp[2003745]:_ref((syserr,int(32),int(32)))[964727] "temp"
            (2003750 'move' tmp[2003745](2003747 '.' this[1156532] F63_tmp[2001457]))
            (1896938 'move' call_tmp[1896936](1896940 '.' tmp[2003745] x1[964616]))
            const-val cp[1896943]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1896945]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (1896947 'move' coerce_tmp[1896945](1896949 'deref' call_tmp[1896936]))
            (1896951 'move' cp[1896943](1896954 call chpl__initCopy[964757] coerce_tmp[1896945]))
            ref call_tmp[1896956]:_ref(int(32))[936626] "dead at end of block" "maybe param" "reference to a const" "temp"
            ref tmp[2003752]:_ref((syserr,int(32),int(32)))[964727] "temp"
            (2003757 'move' tmp[2003752](2003754 '.' this[1156532] F63_tmp[2001457]))
            (1896958 'move' call_tmp[1896956](1896960 '.' tmp[2003752] x2[964618]))
            const-val coerce_tmp[1896965]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (1896967 'move' coerce_tmp[1896965](1896969 'deref' call_tmp[1896956]))
            const tmp[2003759]:int(32)[95] "temp"
            (1896971 'move' tmp[2003759](1896974 call chpl__initCopy[964757] coerce_tmp[1896965]))
            (2003761 '.=' this[1156532] F64_nBytes[2001459] tmp[2003759])
            const-val yret[1896976]:(int(32),byteIndex,int(64))[1122142] "dead after last mention" "YVV" "temp"
            val call_tmp[1896978]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            const-val call_tmp[1896980]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
            (1896982 'move' call_tmp[1896980] cp[1896943])
            const-val tmp[2003765]:int(64)[13] "temp"
            (2003770 'move' tmp[2003765](2003767 '.v' this[1156532] F61_i[2001453]))
            ref tmp[2003772]:_ref(byteIndex)[948759] "temp"
            (2003777 'move' tmp[2003772](2003774 '.' this[1156532] F66_ret_tmp[2001463]))
            (1896990 call _cast[39483] tmp[2003765] tmp[2003772])
            val tmp[2003779]:byteIndex[28170] "temp"
            const-val tmp[2003785]:byteIndex[28170] "temp"
            (2003790 'move' tmp[2003785](2003787 '.v' this[1156532] F66_ret_tmp[2001463]))
            (1896993 'move' tmp[2003779] tmp[2003785])
            (2003781 '.=' this[1156532] F65_call_tmp[2001461] tmp[2003779])
            const-val call_tmp[1896996]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val tmp[2003792]:int(32)[95] "temp"
            (2003797 'move' tmp[2003792](2003794 '.v' this[1156532] F64_nBytes[2001459]))
            (1896998 'move' call_tmp[1896996](1897000 'cast' int(64)[13] tmp[2003792]))
            const-val call_tmp[1897003]:(int(32),byteIndex,int(64))[1122142] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            ref tmp[2003799]:_ref(byteIndex)[948759] "temp"
            (2003804 'move' tmp[2003799](2003801 '.' this[1156532] F65_call_tmp[2001461]))
            ref tmp[2003806]:_ref((int(32),byteIndex,int(64)))[1122214] "temp"
            (2003811 'move' tmp[2003806](2003808 '.' this[1156532] F67_ret_tmp[2001465]))
            (1897008 call _build_tuple[1122092] cp[1896943] tmp[2003799] call_tmp[1896996] tmp[2003806])
            const-val tmp[2003813]:(int(32),byteIndex,int(64))[1122142] "temp"
            (2003818 'move' tmp[2003813](2003815 '.v' this[1156532] F67_ret_tmp[2001465]))
            (1897013 'move' call_tmp[1897003] tmp[2003813])
            (1897016 'move' yret[1896976] call_tmp[1897003])
            const-val _yieldedIndex[1897751]:(int(32),byteIndex,int(64))[1122142] "temp"
            (1898308 'move' _yieldedIndex[1897751] call_tmp[1897003])
            1
            const-val c[1897754]:int(32)[95] "const" "index var" "insert auto destroy"
            (1897756 'move' c[1897754](1897758 '.v' _yieldedIndex[1897751] x0[1122136]))
            ref i[1897761]:_ref(byteIndex)[948759] "index var" "insert auto destroy"
            (1897763 'move' i[1897761](1897765 '.v' _yieldedIndex[1897751] x1[1122138]))
            const-val nBytes[1897768]:int(64)[13] "const" "index var" "insert auto destroy"
            (1897770 'move' nBytes[1897768](1897772 '.v' _yieldedIndex[1897751] x2[1122140]))
            const-val call_tmp[1897775]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val tmp[2003820]:bool[10] "temp"
            (2003825 'move' tmp[2003820](2003822 '.v' this[1156532] F31_noSplits[2001393]))
            (1897777 'move' call_tmp[1897775] tmp[2003820])
            const-val tmp[2003827]:bool[10] "temp"
            (2003832 'move' tmp[2003827](2003829 '.v' this[1156532] F31_noSplits[2001393]))
            if tmp[2003827]
            {
              ref tmp[2003834]:_ref(bool)[937199] "temp"
              (2003839 'move' tmp[2003834](2003836 '.' this[1156532] F28_done[2001387]))
              (1897783 call =[435174] tmp[2003834] 1)
              const-val call_tmp[1897786]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              ref tmp[2003841]:_ref(string)[937939] "temp"
              (2003846 'move' tmp[2003841](2003843 '.' this[1156532] F27_localThis[2001385]))
              (1897788 'move' call_tmp[1897786](1897791 call isSpace[36840] tmp[2003841]))
              const-val call_tmp[1897793]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1897795 'move' call_tmp[1897793](1897798 call ![7494] call_tmp[1897786]))
              const-val call_tmp[1897800]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1897802 'move' call_tmp[1897800] call_tmp[1897793])
              if call_tmp[1897793]
              {
                ref tmp[2003848]:_ref(string)[937939] "temp"
                (2003853 'move' tmp[2003848](2003850 '.' this[1156532] F30_chunk[2001391]))
                ref tmp[2003855]:_ref(string)[937939] "temp"
                (2003860 'move' tmp[2003855](2003857 '.' this[1156532] F27_localThis[2001385]))
                (1897808 call =[38269] tmp[2003848] tmp[2003855])
                ref tmp[2003862]:_ref(bool)[937199] "temp"
                (2003867 'move' tmp[2003862](2003864 '.' this[1156532] F29_yieldChunk[2001389]))
                (1897812 call =[435174] tmp[2003862] 1)
              }
            }
            {
              const-val call_tmp[1897817]:bool[10] "dead at end of block" "maybe param" "temp"
              (1897819 'move' call_tmp[1897817](1897822 call codepoint_isWhitespace[39153] c[1897754]))
              const-val cSpace[1897824]:bool[10] "dead at end of block" "insert auto destroy"
              (1897826 'move' cSpace[1897824] call_tmp[1897817])
              const-val tmp[1897829]:bool[10] "dead after last mention" "maybe param" "temp"
              const-val tmp[2003869]:bool[10] "temp"
              (2003874 'move' tmp[2003869](2003871 '.v' this[1156532] F35_inChunk[2001401]))
              (1897831 'move' tmp[1897829] tmp[2003869])
              val tmp[1897834]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
              const-val tmp[1897836]:bool[10] "dead after last mention" "maybe param" "temp"
              const-val call_tmp[1897838]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val tmp[2003876]:bool[10] "temp"
              (2003881 'move' tmp[2003876](2003878 '.v' this[1156532] F35_inChunk[2001401]))
              (1897840 'move' call_tmp[1897838] tmp[2003876])
              const-val tmp[2003883]:bool[10] "temp"
              (2003888 'move' tmp[2003883](2003885 '.v' this[1156532] F35_inChunk[2001401]))
              (1897843 'move' tmp[1897836] tmp[2003883])
              const-val tmp[2003890]:bool[10] "temp"
              (2003895 'move' tmp[2003890](2003892 '.v' this[1156532] F35_inChunk[2001401]))
              if tmp[2003890]
              {
                (1897848 'move' tmp[1897834] 1)
              }
              {
                const-val tmp[1897852]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                (1897854 'move' tmp[1897852] cSpace[1897824])
                (1897857 'move' tmp[1897834] cSpace[1897824])
              }
              const-val call_tmp[1897861]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1897863 'move' call_tmp[1897861](1897866 call ![7494] tmp[1897834]))
              const-val call_tmp[1897868]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1897870 'move' call_tmp[1897868] call_tmp[1897861])
              if call_tmp[1897861]
              {
                ref tmp[2003897]:_ref(byteIndex)[948759] "temp"
                (2003902 'move' tmp[2003897](2003899 '.' this[1156532] F36_chunkStart[2001403]))
                (1897876 call =[38191] tmp[2003897] i[1897761])
                ref tmp[2003904]:_ref(bool)[937199] "temp"
                (2003909 'move' tmp[2003904](2003906 '.' this[1156532] F35_inChunk[2001401]))
                (1897880 call =[435174] tmp[2003904] 1)
                const-val call_tmp[1897883]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                ref tmp[2003911]:_ref(byteIndex)[948759] "temp"
                (2003916 'move' tmp[2003911](2003913 '.' this[1156532] F68_ret_tmp[2001467]))
                (1897888 call -[28854] i[1897761] 1 tmp[2003911])
                const-val tmp[2003918]:byteIndex[28170] "temp"
                (2003923 'move' tmp[2003918](2003920 '.v' this[1156532] F68_ret_tmp[2001467]))
                (1897892 'move' call_tmp[1897883] tmp[2003918])
                const-val call_tmp[1897895]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                ref tmp[2003925]:_ref(byteIndex)[948759] "temp"
                (2003930 'move' tmp[2003925](2003927 '.' this[1156532] F69_ret_tmp[2001469]))
                (1897900 call +[28722] call_tmp[1897883] nBytes[1897768] tmp[2003925])
                const-val tmp[2003932]:byteIndex[28170] "temp"
                (2003937 'move' tmp[2003932](2003934 '.v' this[1156532] F69_ret_tmp[2001469]))
                (1897904 'move' call_tmp[1897895] tmp[2003932])
                const-val call_tmp[1897907]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                ref tmp[2003939]:_ref(byteIndex)[948759] "temp"
                (2003944 'move' tmp[2003939](2003941 '.' this[1156532] F34_iEnd[2001399]))
                (1897909 'move' call_tmp[1897907](1897912 call >[28572] call_tmp[1897895] tmp[2003939]))
                const-val call_tmp[1897915]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1897917 'move' call_tmp[1897915] call_tmp[1897907])
                if call_tmp[1897907]
                {
                  const-val call_tmp[1897922]:range(byteIndex,boundedLow,false)[1143403] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  ref tmp[2003946]:_ref(byteIndex)[948759] "temp"
                  (2003951 'move' tmp[2003946](2003948 '.' this[1156532] F36_chunkStart[2001403]))
                  ref tmp[2003953]:_ref(range(byteIndex,boundedLow,false))[1143447] "temp"
                  (2003958 'move' tmp[2003953](2003955 '.' this[1156532] F70_ret_tmp[2001471]))
                  (1897927 call chpl_build_low_bounded_range[1142710] tmp[2003946] tmp[2003953])
                  const-val tmp[2003960]:range(byteIndex,boundedLow,false)[1143403] "temp"
                  (2003965 'move' tmp[2003960](2003962 '.v' this[1156532] F70_ret_tmp[2001471]))
                  (1897930 'move' call_tmp[1897922] tmp[2003960])
                  const-val call_tmp[1897933]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  ref tmp[2003967]:_ref(string)[937939] "temp"
                  (2003972 'move' tmp[2003967](2003969 '.' this[1156532] F27_localThis[2001385]))
                  ref tmp[2003974]:_ref(string)[937939] "temp"
                  (2003979 'move' tmp[2003974](2003976 '.' this[1156532] F71_ret_tmp[2001473]))
                  (1897938 call this[1143723] tmp[2003967] call_tmp[1897922] tmp[2003974])
                  const-val tmp[2003981]:string[26] "temp"
                  (2003986 'move' tmp[2003981](2003983 '.v' this[1156532] F71_ret_tmp[2001473]))
                  (1897942 'move' call_tmp[1897933] tmp[2003981])
                  ref tmp[2003988]:_ref(string)[937939] "temp"
                  (2003993 'move' tmp[2003988](2003990 '.' this[1156532] F30_chunk[2001391]))
                  (1897946 call =[38269] tmp[2003988] call_tmp[1897933])
                  (1897950 call chpl__autoDestroy[1461530] call_tmp[1897933])
                  (1897953 call chpl__autoDestroy[1542826] call_tmp[1897922])
                  ref tmp[2003995]:_ref(bool)[937199] "temp"
                  (2004000 'move' tmp[2003995](2003997 '.' this[1156532] F29_yieldChunk[2001389]))
                  (1897956 call =[435174] tmp[2003995] 1)
                  ref tmp[2004002]:_ref(bool)[937199] "temp"
                  (2004007 'move' tmp[2004002](2004004 '.' this[1156532] F28_done[2001387]))
                  (1897960 call =[435174] tmp[2004002] 1)
                }
                (1897965 call chpl__autoDestroy[1461793] call_tmp[1897895])
                (1897968 call chpl__autoDestroy[1461793] call_tmp[1897883])
              }
              {
                const-val call_tmp[1897971]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val tmp[2004009]:bool[10] "temp"
                (2004014 'move' tmp[2004009](2004011 '.v' this[1156532] F35_inChunk[2001401]))
                (1897973 'move' call_tmp[1897971] tmp[2004009])
                if call_tmp[1897971]
                {
                  const-val call_tmp[1897978]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1897980 'move' call_tmp[1897978] cSpace[1897824])
                  if cSpace[1897824]
                  {
                    ref tmp[2004016]:_ref(int(64))[936572] "temp"
                    (2004021 'move' tmp[2004016](2004018 '.' this[1156532] F33_splitCount[2001397]))
                    (1897986 call +=[451315] tmp[2004016] 1)
                    const-val tmp[1897989]:bool[10] "dead after last mention" "maybe param" "temp"
                    const-val tmp[2004023]:bool[10] "temp"
                    (2004028 'move' tmp[2004023](2004025 '.v' this[1156532] F32_limitSplits[2001395]))
                    (1897991 'move' tmp[1897989] tmp[2004023])
                    val tmp[1897994]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                    const-val tmp[1897996]:bool[10] "dead after last mention" "maybe param" "temp"
                    const-val call_tmp[1897998]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val tmp[2004030]:bool[10] "temp"
                    (2004035 'move' tmp[2004030](2004032 '.v' this[1156532] F32_limitSplits[2001395]))
                    (1898000 'move' call_tmp[1897998] tmp[2004030])
                    const-val tmp[2004037]:bool[10] "temp"
                    (2004042 'move' tmp[2004037](2004039 '.v' this[1156532] F32_limitSplits[2001395]))
                    (1898003 'move' tmp[1897996] tmp[2004037])
                    const-val tmp[2004044]:bool[10] "temp"
                    (2004049 'move' tmp[2004044](2004046 '.v' this[1156532] F32_limitSplits[2001395]))
                    if tmp[2004044]
                    {
                      const-val tmp[1898008]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                      const-val call_tmp[1898010]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      const-val tmp[2004051]:int(64)[13] "temp"
                      (2004056 'move' tmp[2004051](2004053 '.v' this[1156532] F33_splitCount[2001397]))
                      const-val tmp[2004058]:int(64)[13] "temp"
                      (2004063 'move' tmp[2004058](2004060 '.v' this[1156532] F1_maxsplit[2001331]))
                      (1898012 'move' call_tmp[1898010](1898015 call >[437672] tmp[2004051] tmp[2004058]))
                      (1898018 'move' tmp[1898008] call_tmp[1898010])
                      (1898021 'move' tmp[1897994] call_tmp[1898010])
                    }
                    {
                      (1898025 'move' tmp[1897994] 0)
                    }
                    const-val call_tmp[1898029]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1898031 'move' call_tmp[1898029] tmp[1897994])
                    if tmp[1897994]
                    {
                      const-val call_tmp[1898036]:range(byteIndex,boundedLow,false)[1143403] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                      ref tmp[2004065]:_ref(byteIndex)[948759] "temp"
                      (2004070 'move' tmp[2004065](2004067 '.' this[1156532] F36_chunkStart[2001403]))
                      ref tmp[2004072]:_ref(range(byteIndex,boundedLow,false))[1143447] "temp"
                      (2004077 'move' tmp[2004072](2004074 '.' this[1156532] F72_ret_tmp[2001475]))
                      (1898041 call chpl_build_low_bounded_range[1142710] tmp[2004065] tmp[2004072])
                      const-val tmp[2004079]:range(byteIndex,boundedLow,false)[1143403] "temp"
                      (2004084 'move' tmp[2004079](2004081 '.v' this[1156532] F72_ret_tmp[2001475]))
                      (1898044 'move' call_tmp[1898036] tmp[2004079])
                      const-val call_tmp[1898047]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                      ref tmp[2004086]:_ref(string)[937939] "temp"
                      (2004091 'move' tmp[2004086](2004088 '.' this[1156532] F27_localThis[2001385]))
                      ref tmp[2004093]:_ref(string)[937939] "temp"
                      (2004098 'move' tmp[2004093](2004095 '.' this[1156532] F73_ret_tmp[2001477]))
                      (1898052 call this[1143723] tmp[2004086] call_tmp[1898036] tmp[2004093])
                      const-val tmp[2004100]:string[26] "temp"
                      (2004105 'move' tmp[2004100](2004102 '.v' this[1156532] F73_ret_tmp[2001477]))
                      (1898056 'move' call_tmp[1898047] tmp[2004100])
                      ref tmp[2004107]:_ref(string)[937939] "temp"
                      (2004112 'move' tmp[2004107](2004109 '.' this[1156532] F30_chunk[2001391]))
                      (1898060 call =[38269] tmp[2004107] call_tmp[1898047])
                      (1898064 call chpl__autoDestroy[1461530] call_tmp[1898047])
                      (1898067 call chpl__autoDestroy[1542826] call_tmp[1898036])
                      ref tmp[2004114]:_ref(bool)[937199] "temp"
                      (2004119 'move' tmp[2004114](2004116 '.' this[1156532] F29_yieldChunk[2001389]))
                      (1898070 call =[435174] tmp[2004114] 1)
                      ref tmp[2004121]:_ref(bool)[937199] "temp"
                      (2004126 'move' tmp[2004121](2004123 '.' this[1156532] F28_done[2001387]))
                      (1898074 call =[435174] tmp[2004121] 1)
                    }
                    {
                      const-val call_tmp[1898078]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                      ref tmp[2004128]:_ref(byteIndex)[948759] "temp"
                      (2004133 'move' tmp[2004128](2004130 '.' this[1156532] F74_ret_tmp[2001479]))
                      (1898083 call -[28854] i[1897761] 1 tmp[2004128])
                      const-val tmp[2004135]:byteIndex[28170] "temp"
                      (2004140 'move' tmp[2004135](2004137 '.v' this[1156532] F74_ret_tmp[2001479]))
                      (1898087 'move' call_tmp[1898078] tmp[2004135])
                      const-val call_tmp[1898090]:range(byteIndex,bounded,false)[1025792] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                      ref tmp[2004142]:_ref(byteIndex)[948759] "temp"
                      (2004147 'move' tmp[2004142](2004144 '.' this[1156532] F36_chunkStart[2001403]))
                      ref tmp[2004149]:_ref(range(byteIndex,bounded,false))[1025801] "temp"
                      (2004154 'move' tmp[2004149](2004151 '.' this[1156532] F75_ret_tmp[2001481]))
                      (1898095 call chpl_build_bounded_range[1123254] tmp[2004142] call_tmp[1898078] tmp[2004149])
                      const-val tmp[2004156]:range(byteIndex,bounded,false)[1025792] "temp"
                      (2004161 'move' tmp[2004156](2004158 '.v' this[1156532] F75_ret_tmp[2001481]))
                      (1898099 'move' call_tmp[1898090] tmp[2004156])
                      const-val call_tmp[1898102]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                      ref tmp[2004163]:_ref(string)[937939] "temp"
                      (2004168 'move' tmp[2004163](2004165 '.' this[1156532] F27_localThis[2001385]))
                      ref tmp[2004170]:_ref(string)[937939] "temp"
                      (2004175 'move' tmp[2004170](2004172 '.' this[1156532] F76_ret_tmp[2001483]))
                      (1898107 call this[1123500] tmp[2004163] call_tmp[1898090] tmp[2004170])
                      const-val tmp[2004177]:string[26] "temp"
                      (2004182 'move' tmp[2004177](2004179 '.v' this[1156532] F76_ret_tmp[2001483]))
                      (1898111 'move' call_tmp[1898102] tmp[2004177])
                      ref tmp[2004184]:_ref(string)[937939] "temp"
                      (2004189 'move' tmp[2004184](2004186 '.' this[1156532] F30_chunk[2001391]))
                      (1898115 call =[38269] tmp[2004184] call_tmp[1898102])
                      (1898119 call chpl__autoDestroy[1461530] call_tmp[1898102])
                      (1898122 call chpl__autoDestroy[1534330] call_tmp[1898090])
                      (1898125 call chpl__autoDestroy[1461793] call_tmp[1898078])
                      ref tmp[2004191]:_ref(bool)[937199] "temp"
                      (2004196 'move' tmp[2004191](2004193 '.' this[1156532] F29_yieldChunk[2001389]))
                      (1898128 call =[435174] tmp[2004191] 1)
                      ref tmp[2004198]:_ref(bool)[937199] "temp"
                      (2004203 'move' tmp[2004198](2004200 '.' this[1156532] F35_inChunk[2001401]))
                      (1898132 call =[435174] tmp[2004198] 0)
                    }
                  }
                  {
                    const-val call_tmp[1898137]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    ref tmp[2004205]:_ref(byteIndex)[948759] "temp"
                    (2004210 'move' tmp[2004205](2004207 '.' this[1156532] F77_ret_tmp[2001485]))
                    (1898142 call -[28854] i[1897761] 1 tmp[2004205])
                    const-val tmp[2004212]:byteIndex[28170] "temp"
                    (2004217 'move' tmp[2004212](2004214 '.v' this[1156532] F77_ret_tmp[2001485]))
                    (1898146 'move' call_tmp[1898137] tmp[2004212])
                    const-val call_tmp[1898149]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    ref tmp[2004219]:_ref(byteIndex)[948759] "temp"
                    (2004224 'move' tmp[2004219](2004221 '.' this[1156532] F78_ret_tmp[2001487]))
                    (1898154 call +[28722] call_tmp[1898137] nBytes[1897768] tmp[2004219])
                    const-val tmp[2004226]:byteIndex[28170] "temp"
                    (2004231 'move' tmp[2004226](2004228 '.v' this[1156532] F78_ret_tmp[2001487]))
                    (1898158 'move' call_tmp[1898149] tmp[2004226])
                    const-val call_tmp[1898161]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    ref tmp[2004233]:_ref(byteIndex)[948759] "temp"
                    (2004238 'move' tmp[2004233](2004235 '.' this[1156532] F34_iEnd[2001399]))
                    (1898163 'move' call_tmp[1898161](1898166 call >[28572] call_tmp[1898149] tmp[2004233]))
                    const-val call_tmp[1898169]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1898171 'move' call_tmp[1898169] call_tmp[1898161])
                    if call_tmp[1898161]
                    {
                      const-val call_tmp[1898176]:range(byteIndex,boundedLow,false)[1143403] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                      ref tmp[2004240]:_ref(byteIndex)[948759] "temp"
                      (2004245 'move' tmp[2004240](2004242 '.' this[1156532] F36_chunkStart[2001403]))
                      ref tmp[2004247]:_ref(range(byteIndex,boundedLow,false))[1143447] "temp"
                      (2004252 'move' tmp[2004247](2004249 '.' this[1156532] F79_ret_tmp[2001489]))
                      (1898181 call chpl_build_low_bounded_range[1142710] tmp[2004240] tmp[2004247])
                      const-val tmp[2004254]:range(byteIndex,boundedLow,false)[1143403] "temp"
                      (2004259 'move' tmp[2004254](2004256 '.v' this[1156532] F79_ret_tmp[2001489]))
                      (1898184 'move' call_tmp[1898176] tmp[2004254])
                      const-val call_tmp[1898187]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                      ref tmp[2004261]:_ref(string)[937939] "temp"
                      (2004266 'move' tmp[2004261](2004263 '.' this[1156532] F27_localThis[2001385]))
                      ref tmp[2004268]:_ref(string)[937939] "temp"
                      (2004273 'move' tmp[2004268](2004270 '.' this[1156532] F80_ret_tmp[2001491]))
                      (1898192 call this[1143723] tmp[2004261] call_tmp[1898176] tmp[2004268])
                      const-val tmp[2004275]:string[26] "temp"
                      (2004280 'move' tmp[2004275](2004277 '.v' this[1156532] F80_ret_tmp[2001491]))
                      (1898196 'move' call_tmp[1898187] tmp[2004275])
                      ref tmp[2004282]:_ref(string)[937939] "temp"
                      (2004287 'move' tmp[2004282](2004284 '.' this[1156532] F30_chunk[2001391]))
                      (1898200 call =[38269] tmp[2004282] call_tmp[1898187])
                      (1898204 call chpl__autoDestroy[1461530] call_tmp[1898187])
                      (1898207 call chpl__autoDestroy[1542826] call_tmp[1898176])
                      ref tmp[2004289]:_ref(bool)[937199] "temp"
                      (2004294 'move' tmp[2004289](2004291 '.' this[1156532] F29_yieldChunk[2001389]))
                      (1898210 call =[435174] tmp[2004289] 1)
                      ref tmp[2004296]:_ref(bool)[937199] "temp"
                      (2004301 'move' tmp[2004296](2004298 '.' this[1156532] F28_done[2001387]))
                      (1898214 call =[435174] tmp[2004296] 1)
                    }
                    (1898219 call chpl__autoDestroy[1461793] call_tmp[1898149])
                    (1898222 call chpl__autoDestroy[1461793] call_tmp[1898137])
                  }
                }
              }
            }
            const-val call_tmp[1898228]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val tmp[2004303]:bool[10] "temp"
            (2004308 'move' tmp[2004303](2004305 '.v' this[1156532] F29_yieldChunk[2001389]))
            (1898230 'move' call_tmp[1898228] tmp[2004303])
            if call_tmp[1898228]
            {
              const-val yret[1898235]:string[26] "dead after last mention" "YVV" "temp"
              val tmp[2004310]:string[26] "temp"
              ref tmp[2004316]:_ref(string)[937939] "temp"
              (2004321 'move' tmp[2004316](2004318 '.' this[1156532] F30_chunk[2001391]))
              (1898239 'move' tmp[2004310](1898242 call chpl__initCopy[981348] tmp[2004316]))
              (2004312 '.=' this[1156532] F83__yield_expr_tmp_[2001497] tmp[2004310])
              const-val tmp[2004323]:string[26] "temp"
              (2004328 'move' tmp[2004323](2004325 '.v' this[1156532] F83__yield_expr_tmp_[2001497]))
              (1898244 'move' yret[1898235] tmp[2004323])
              val tmp[2004334]:string[26] "temp"
              (2004339 'move' tmp[2004334](2004336 '.v' this[1156532] F83__yield_expr_tmp_[2001497]))
              (2004331 '.=' this[1156532] value[2001499] tmp[2004334])
              (2004559 '.=' this[1156532] more[1156507] 4)
              gotoIterEnd _end[2004537] _end[2004537]
              label _jump_break_4[2004567]
              ref tmp[2004341]:_ref(byteIndex)[948759] "temp"
              (2004346 'move' tmp[2004341](2004343 '.' this[1156532] F65_call_tmp[2001461]))
              (1898299 call chpl__autoDestroy[1461793] tmp[2004341])
              ref tmp[2004348]:_ref((syserr,int(32),int(32)))[964727] "temp"
              (2004353 'move' tmp[2004348](2004350 '.' this[1156532] F63_tmp[2001457]))
              (1898302 call chpl__autoDestroy[1465403] tmp[2004348])
              ref tmp[2004355]:_ref(string)[937939] "temp"
              (2004360 'move' tmp[2004355](2004357 '.' this[1156532] F39_localThis[2001409]))
              (1898305 call chpl__autoDestroy[1461530] tmp[2004355])
              val tmp[2004362]:_ic__cpIndexLen__ref_string[1122385] "temp"
              (2004367 'move' tmp[2004362](2004364 '.v' this[1156532] F37__iterator[2001405]))
              (1898252 call _freeIterator[1122573] tmp[2004362])
              ref tmp[2004369]:_ref(byteIndex)[948759] "temp"
              (2004374 'move' tmp[2004369](2004371 '.' this[1156532] F38_default_arg_start[2001407]))
              (1898255 call chpl__autoDestroy[1461793] tmp[2004369])
              ref tmp[2004376]:_ref(byteIndex)[948759] "temp"
              (2004381 'move' tmp[2004376](2004378 '.' this[1156532] F36_chunkStart[2001403]))
              (1898258 call chpl__autoDestroy[1461793] tmp[2004376])
              ref tmp[2004383]:_ref(byteIndex)[948759] "temp"
              (2004388 'move' tmp[2004383](2004385 '.' this[1156532] F34_iEnd[2001399]))
              (1898261 call chpl__autoDestroy[1461793] tmp[2004383])
              ref tmp[2004390]:_ref(string)[937939] "temp"
              (2004395 'move' tmp[2004390](2004392 '.' this[1156532] F30_chunk[2001391]))
              (1898264 call chpl__autoDestroy[1461530] tmp[2004390])
              ref tmp[2004397]:_ref(string)[937939] "temp"
              (2004402 'move' tmp[2004397](2004399 '.' this[1156532] F27_localThis[2001385]))
              (1898267 call chpl__autoDestroy[1461530] tmp[2004397])
              gotoReturn _endsplit[1813917] _endsplit[1813917]
              label _jump_4[2004565]
              ref tmp[2004404]:_ref(bool)[937199] "temp"
              (2004409 'move' tmp[2004404](2004406 '.' this[1156532] F29_yieldChunk[2001389]))
              (1898273 call =[435174] tmp[2004404] 0)
            }
            const-val call_tmp[1898277]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val tmp[2004411]:bool[10] "temp"
            (2004416 'move' tmp[2004411](2004413 '.v' this[1156532] F28_done[2001387]))
            (1898279 'move' call_tmp[1898277] tmp[2004411])
            if call_tmp[1898277]
            {
              ref tmp[2004418]:_ref(byteIndex)[948759] "temp"
              (2004423 'move' tmp[2004418](2004420 '.' this[1156532] F65_call_tmp[2001461]))
              (1898289 call chpl__autoDestroy[1461793] tmp[2004418])
              ref tmp[2004425]:_ref((syserr,int(32),int(32)))[964727] "temp"
              (2004430 'move' tmp[2004425](2004427 '.' this[1156532] F63_tmp[2001457]))
              (1898292 call chpl__autoDestroy[1465403] tmp[2004425])
              ref tmp[2004432]:_ref(string)[937939] "temp"
              (2004437 'move' tmp[2004432](2004434 '.' this[1156532] F39_localThis[2001409]))
              (1898295 call chpl__autoDestroy[1461530] tmp[2004432])
              break _breakLabel[35880] _breakLabel[35880]
            }
            ref tmp[2004439]:_ref(byteIndex)[948759] "temp"
            (2004444 'move' tmp[2004439](2004441 '.' this[1156532] F65_call_tmp[2001461]))
            (1897036 call chpl__autoDestroy[1461793] tmp[2004439])
            const-val coerce_tmp[1897038]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            const-val tmp[2004446]:int(32)[95] "temp"
            (2004451 'move' tmp[2004446](2004448 '.v' this[1156532] F64_nBytes[2001459]))
            (1897040 'move' coerce_tmp[1897038](1897042 'cast' int(64)[13] tmp[2004446]))
            ref tmp[2004453]:_ref(int(64))[936572] "temp"
            (2004458 'move' tmp[2004453](2004455 '.' this[1156532] F61_i[2001453]))
            (1897046 call +=[451315] tmp[2004453] coerce_tmp[1897038])
            ref tmp[2004460]:_ref((syserr,int(32),int(32)))[964727] "temp"
            (2004465 'move' tmp[2004460](2004462 '.' this[1156532] F63_tmp[2001457]))
            (1897050 call chpl__autoDestroy[1465403] tmp[2004460])
            ref call_tmp[1897052]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
            ref tmp[2004467]:_ref(string)[937939] "temp"
            (2004472 'move' tmp[2004467](2004469 '.' this[1156532] F39_localThis[2001409]))
            (1897054 'move' call_tmp[1897052](1897057 call buffLen[757886] tmp[2004467]))
            const-val call_tmp[1897059]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val coerce_tmp[1897061]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (1897063 'move' coerce_tmp[1897061](1897065 'deref' call_tmp[1897052]))
            const-val tmp[2004474]:int(64)[13] "temp"
            (2004479 'move' tmp[2004474](2004476 '.v' this[1156532] F61_i[2001453]))
            (1897067 'move' call_tmp[1897059](1897070 call <[437452] tmp[2004474] coerce_tmp[1897061]))
            (1897073 'move' tmp[1896842] call_tmp[1897059])
            tmp[1896842]
          }
        }
        ref tmp[2004481]:_ref(string)[937939] "temp"
        (2004486 'move' tmp[2004481](2004483 '.' this[1156532] F39_localThis[2001409]))
        (1897078 call chpl__autoDestroy[1461530] tmp[2004481])
        label _end_cpIndexLen[1897080]
        label _breakLabel[35880]
        val tmp[2004488]:_ic__cpIndexLen__ref_string[1122385] "temp"
        (2004493 'move' tmp[2004488](2004490 '.v' this[1156532] F37__iterator[2001405]))
        (1842000 call _freeIterator[1122573] tmp[2004488])
        ref tmp[2004495]:_ref(byteIndex)[948759] "temp"
        (2004500 'move' tmp[2004495](2004497 '.' this[1156532] F38_default_arg_start[2001407]))
        (1842002 call chpl__autoDestroy[1461793] tmp[2004495])
        ref tmp[2004502]:_ref(byteIndex)[948759] "temp"
        (2004507 'move' tmp[2004502](2004504 '.' this[1156532] F36_chunkStart[2001403]))
        (1842006 call chpl__autoDestroy[1461793] tmp[2004502])
        ref tmp[2004509]:_ref(byteIndex)[948759] "temp"
        (2004514 'move' tmp[2004509](2004511 '.' this[1156532] F34_iEnd[2001399]))
        (1842009 call chpl__autoDestroy[1461793] tmp[2004509])
        ref tmp[2004516]:_ref(string)[937939] "temp"
        (2004521 'move' tmp[2004516](2004518 '.' this[1156532] F30_chunk[2001391]))
        (1842012 call chpl__autoDestroy[1461530] tmp[2004516])
        ref tmp[2004523]:_ref(string)[937939] "temp"
        (2004528 'move' tmp[2004523](2004525 '.' this[1156532] F27_localThis[2001385]))
        (1842015 call chpl__autoDestroy[1461530] tmp[2004523])
      }
    }
    label _endsplit[1813917]
    (2004569 '.=' this[1156532] more[1156507] 0)
    label _end[2004537]
    (2004652 return _void[55])
  }
  function _ic_split__ref_string[1156504].zip1[1156539](const in arg this[1156541]:_ic_split__ref_string[1156504]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (2004530 call advance[1156530] this[1156541])
    (1156546 return _void[55])
  }
  function _ic_split__ref_string[1156504].zip2[1156548](const in arg this[1156550]:_ic_split__ref_string[1156504]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1156555 return _void[55])
  }
  function _ic_split__ref_string[1156504].zip3[1156557](const in arg this[1156559]:_ic_split__ref_string[1156504]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (2004533 call advance[1156530] this[1156559])
    (1156564 return _void[55])
  }
  function _ic_split__ref_string[1156504].zip4[1156566](const in arg this[1156568]:_ic_split__ref_string[1156504]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1156573 return _void[55])
  }
  function _ic_split__ref_string[1156504].hasMore[1156575](const in arg this[1156577]:_ic_split__ref_string[1156504]) : int(64)[13] "auto ii" "inline" "method" "resolved"
  {
    val tmp[2004655]:int(64)[13] "temp"
    (2004660 'move' tmp[2004655](2004657 '.v' this[1156577] more[1156507]))
    (2004662 return tmp[2004655])
  }
  function _ic_split__ref_string[1156504].getValue[1156584](const in arg this[1156586]:_ic_split__ref_string[1156504]) : string[26] "auto ii" "inline" "method" "resolved"
  {
    val tmp[2004665]:string[26] "temp"
    (2004670 'move' tmp[2004665](2004667 '.v' this[1156586] value[2001499]))
    (2004672 return tmp[2004665])
  }
  function _ref(string)[937939].split[35483](const  ref arg this[35485]:_ref(string)[937939], const in arg maxsplit[35479]:int(64)[13], ref arg _retArg[1829749]:_ref(_ir_split__ref_string)[1156621]) : void[4] "fn returns via _retArg" "inline" "iterator fn" "method" "resolved" "no return value for void"
  {
    val _ir[2004680]:_ir_split__ref_string[1156510] "temp"
    (2004682 '.=' _ir[2004680] F0_this[2001329] this[35485])
    (2004686 '.=' _ir[2004680] F1_maxsplit[2001333] maxsplit[35479])
    (2004690 '=' _retArg[1829749] _ir[2004680])
    (2004693 return _void[55])
  }
  function _ic_split__ref_string[1156504].init[1156593](const in arg this[1156595]:_ic_split__ref_string[1156504]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (2004675 return _void[55])
  }
  function _ic_split__ref_string[1156504].incr[1156602](const in arg this[1156604]:_ic_split__ref_string[1156504]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (2004678 return _void[55])
  }
  type _ic_split__ref_string[1156504] val super[1156505]:object[22] "super class" val more[1156507]:int(64)[13] ref F0_this[2001327]:_ref(string)[937939] const-val F1_maxsplit[2001331]:int(64)[13] val F2__iterator[2001335]:_ic_doSplitWSNoEnc[1124475] const F3_localx[2001337]:string[26] val F4_done[2001339]:bool[10] val F5_yieldChunk[2001341]:bool[10] const-val F6_chunk[2001343]:string[26] const F7_noSplits[2001345]:bool[10] const F8_limitSplits[2001347]:bool[10] val F9_splitCount[2001349]:int(64)[13] const F10_iEnd[2001351]:int(64)[13] val F11_inChunk[2001353]:bool[10] val F12_chunkStart[2001355]:int(64)[13] val F13__iterator[2001357]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108566] val F14_call_tmp[2001359]:range(int(64),bounded,false)[1026814] val F15__iterator[2001361]:_ic_these_range_int64_t_bounded_F[1096703] val F16__iterator[2001363]:_ic_chpl_bytes__ref_string[1108256] val F17__indexOfInterest[2001365]:(int(64),uint(8))[1111040] const-val F18_ret_tmp[2001367]:range(int(64),boundedLow,false)[1087565] const-val F19_ret_tmp[2001369]:string[26] const-val F20_ret_tmp[2001371]:range(int(64),boundedLow,false)[1087565] const-val F21_ret_tmp[2001373]:string[26] const-val F22_ret_tmp[2001375]:range(int(64),bounded,false)[1026814] const-val F23_ret_tmp[2001377]:string[26] const-val F24_ret_tmp[2001379]:range(int(64),boundedLow,false)[1087565] const-val F25_ret_tmp[2001381]:string[26] const F26_s[2001383]:string[26] const F27_localThis[2001385]:string[26] val F28_done[2001387]:bool[10] val F29_yieldChunk[2001389]:bool[10] const-val F30_chunk[2001391]:string[26] const F31_noSplits[2001393]:bool[10] const F32_limitSplits[2001395]:bool[10] val F33_splitCount[2001397]:int(64)[13] const-val F34_iEnd[2001399]:byteIndex[28170] val F35_inChunk[2001401]:bool[10] const-val F36_chunkStart[2001403]:byteIndex[28170] val F37__iterator[2001405]:_ic__cpIndexLen__ref_string[1122385] val F38_default_arg_start[2001407]:byteIndex[28170] val F39_localThis[2001409]:string[26] val F40__iterator[2001411]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108566] val F41_call_tmp[2001413]:range(int(64),bounded,false)[1026814] val F42__iterator[2001415]:_ic_these_range_int64_t_bounded_F[1096703] val F43__iterator[2001417]:_ic_chpl_bytes__ref_string[1108256] val F44__indexOfInterest[2001419]:(int(64),uint(8))[1111040] val F45_call_tmp[2001421]:byteIndex[28170] const-val F46_ret_tmp[2001423]:byteIndex[28170] const-val F47_ret_tmp[2001425]:(int(32),byteIndex,int(64))[1122142] const-val F48_ret_tmp[2001427]:byteIndex[28170] const-val F49_ret_tmp[2001429]:byteIndex[28170] const-val F50_ret_tmp[2001431]:range(byteIndex,boundedLow,false)[1143403] const-val F51_ret_tmp[2001433]:string[26] const-val F52_ret_tmp[2001435]:range(byteIndex,boundedLow,false)[1143403] const-val F53_ret_tmp[2001437]:string[26] const-val F54_ret_tmp[2001439]:byteIndex[28170] const-val F55_ret_tmp[2001441]:range(byteIndex,bounded,false)[1025792] const-val F56_ret_tmp[2001443]:string[26] const-val F57_ret_tmp[2001445]:byteIndex[28170] const-val F58_ret_tmp[2001447]:byteIndex[28170] const-val F59_ret_tmp[2001449]:range(byteIndex,boundedLow,false)[1143403] const-val F60_ret_tmp[2001451]:string[26] val F61_i[2001453]:int(64)[13] const-val F62_ret_tmp[2001455]:(syserr,int(32),int(32))[964620] const F63_tmp[2001457]:(syserr,int(32),int(32))[964620] const F64_nBytes[2001459]:int(32)[95] val F65_call_tmp[2001461]:byteIndex[28170] const-val F66_ret_tmp[2001463]:byteIndex[28170] const-val F67_ret_tmp[2001465]:(int(32),byteIndex,int(64))[1122142] const-val F68_ret_tmp[2001467]:byteIndex[28170] const-val F69_ret_tmp[2001469]:byteIndex[28170] const-val F70_ret_tmp[2001471]:range(byteIndex,boundedLow,false)[1143403] const-val F71_ret_tmp[2001473]:string[26] const-val F72_ret_tmp[2001475]:range(byteIndex,boundedLow,false)[1143403] const-val F73_ret_tmp[2001477]:string[26] const-val F74_ret_tmp[2001479]:byteIndex[28170] const-val F75_ret_tmp[2001481]:range(byteIndex,bounded,false)[1025792] const-val F76_ret_tmp[2001483]:string[26] const-val F77_ret_tmp[2001485]:byteIndex[28170] const-val F78_ret_tmp[2001487]:byteIndex[28170] const-val F79_ret_tmp[2001489]:range(byteIndex,boundedLow,false)[1143403] const-val F80_ret_tmp[2001491]:string[26] val F81__yield_expr_tmp_[2001493]:string[26] val F82__yield_expr_tmp_[2001495]:string[26] val F83__yield_expr_tmp_[2001497]:string[26] val value[2001499]:string[26]
  type _ir_split__ref_string[1156510] ref F0_this[2001329]:_ref(string)[937939] const-val F1_maxsplit[2001333]:int(64)[13]
  function _getIterator[1156519](const  ref arg ir[1156521]:_ir_split__ref_string[1156510]) : _ic_split__ref_string[1156504] "auto ii" "inline" "resolved" "unsafe"
  {
    val ret[1156628]:_ic_split__ref_string[1156504] "dead after last mention" "RVV" "temp"
    val _ic_[1156511]:_ic_split__ref_string[1156504] "dead after last mention" "temp"
    const-val call_tmp[1156635]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1156638 'move' call_tmp[1156635](1156650 'sizeof_bundle' _ic_split__ref_string[1156504]))
    const-val cast_tmp[1156653]:c_void_ptr[149] "dead after last mention" "temp"
    (1156655 'move' cast_tmp[1156653](1156516 call chpl_here_alloc[187742] call_tmp[1156635] 36))
    (1156524 'move' _ic_[1156511](1156657 'cast' _ic_split__ref_string[1156504] cast_tmp[1156653]))
    (1156526 'setcid' _ic_[1156511])
    (1156633 'move' ret[1156628] _ic_[1156511])
    (2004696 '.=' ret[1156628] more[1156507] 1)
    ref tmp[2004700]:_ref(string)[937939] "temp"
    (2004705 'move' tmp[2004700](2004701 '.v' ir[1156521] F0_this[2001329]))
    (2004707 '.=' ret[1156628] F0_this[2001327] tmp[2004700])
    const-val tmp[2004711]:int(64)[13] "temp"
    (2004716 'move' tmp[2004711](2004712 '.v' ir[1156521] F1_maxsplit[2001333]))
    (2004718 '.=' ret[1156628] F1_maxsplit[2001331] tmp[2004711])
    (1156630 return ret[1156628])
  }
  function _ref(string)[937939].strip[36092](const  ref arg this[36102]:_ref(string)[937939], const  ref arg chars[36088]:string[26], const in arg leading[36095]:bool[10], const in arg trailing[36099]:bool[10], ref arg _retArg[1829771]:_ref(string)[937939]) : void[4] "fn returns via _retArg" "method" "resolved"
  {
    val ret[504364]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[601465]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (601468 'move' call_tmp[601465](36113 call isASCII[31046] this[36102]))
    const-val call_tmp[601470]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (601473 'move' call_tmp[601470] call_tmp[601465])
    if call_tmp[601470]
    {
      const-val call_tmp[601475]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1833782]:string[26] "temp"
      (36120 call doStripNoEnc[1107634] this[36102] chars[36088] leading[36095] trailing[36099] ret_tmp[1833782])
      (1833785 'move' call_tmp[601475] ret_tmp[1833782])
      (1124385 'move' ret[504364] call_tmp[601475])
      gotoReturn _end_strip[504362] _end_strip[504362]
    }
    {
      const-val call_tmp[601482]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (601485 'move' call_tmp[601482](36129 call isEmpty[35061] this[36102]))
      const-val call_tmp[601487]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (601490 'move' call_tmp[601487] call_tmp[601482])
      if call_tmp[601487]
      {
        (504376 'move' ret[504364](1829775 call chpl__initCopy[981348] ""))
        gotoReturn _end_strip[504362] _end_strip[504362]
      }
      const-val call_tmp[601494]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (601497 'move' call_tmp[601494](36160 call isEmpty[35061] chars[36088]))
      const-val call_tmp[601499]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (601502 'move' call_tmp[601499] call_tmp[601494])
      if call_tmp[601499]
      {
        (1124390 'move' ret[504364](1124388 call chpl__autoCopy[1121975] this[36102]))
        gotoReturn _end_strip[504362] _end_strip[504362]
      }
      const-val call_tmp[601506]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1829467]:string[26] "temp"
      (36175 call localize[32886] this[36102] ret_tmp[1829467])
      (1829470 'move' call_tmp[601506] ret_tmp[1829467])
      const localThis[36176]:string[26] "dead at end of block" "const" "insert auto destroy"
      (540435 'move' localThis[36176] call_tmp[601506])
      const-val call_tmp[601513]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1829473]:string[26] "temp"
      (36186 call localize[32886] chars[36088] ret_tmp[1829473])
      (1829476 'move' call_tmp[601513] ret_tmp[1829473])
      const-val localChars[36187]:string[26] "dead at end of block" "const" "insert auto destroy"
      (540437 'move' localChars[36187] call_tmp[601513])
      val start[36193]:byteIndex[28170] "dead at end of block" "insert auto destroy"
      (540439 call init=[28145] start[36193] 0)
      ref call_tmp[601520]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
      (601523 'move' call_tmp[601520](36199 call buffLen[757886] localThis[36176]))
      const-val call_tmp[601525]:int(64)[13] "dead at end of block" "insert auto destroy" "maybe param" "temp"
      const-val coerce_tmp[1122016]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1122020 'move' coerce_tmp[1122016](1122018 'deref' call_tmp[601520]))
      (601528 'move' call_tmp[601525](36203 call -[962226] coerce_tmp[1122016]))
      val end[36205]:byteIndex[28170] "dead at end of block" "insert auto destroy"
      (540441 call init=[28145] end[36205] call_tmp[601525])
      const-val call_tmp[601530]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (601533 'move' call_tmp[601530] leading[36095])
      if call_tmp[601530]
      {
        {
          val _indexOfInterest[36288]:(int(32),byteIndex,int(64))[1122142] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[36289]:_ic__cpIndexLen__ref_string[1122385] "dead at end of block" "expr temp" "temp"
          const-val call_tmp[601537]:_ir__cpIndexLen__ref_string[1122391] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val default_arg_start[1122057]:byteIndex[28170] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
          const-val ret_tmp[1834072]:byteIndex[28170] "temp"
          (1122059 call _cpIndexLen_default_start[1122031] localThis[36176] ret_tmp[1834072])
          (1834075 'move' default_arg_start[1122057] ret_tmp[1834072])
          const-val ret_tmp[1829357]:_ir__cpIndexLen__ref_string[1122391] "temp"
          (36221 call _cpIndexLen[31106] localThis[36176] default_arg_start[1122057] ret_tmp[1829357])
          (1829360 'move' call_tmp[601537] ret_tmp[1829357])
          (36298 'move' _iterator[36289](36296 call _getIterator[1122400] call_tmp[601537]))
          {
            val ret[1898959]:_ir__cpIndexLen__ref_string[1122391] "dead after last mention" "RVV" "temp"
            const-val call_tmp[1898961]:string[26] "dead at end of block" "maybe param" "temp"
            const-val ret_tmp[1898963]:string[26] "temp"
            ref this[1901130]:_ref(string)[937939] "temp"
            (1901135 'move' this[1901130](1901132 '.v' _iterator[36289] F0_this[1997101]))
            (1898966 call localize[32886] this[1901130] ret_tmp[1898963])
            (1898969 'move' call_tmp[1898961] ret_tmp[1898963])
            val localThis[1898972]:string[26] "dead at end of block" "insert auto destroy"
            (1898974 'move' localThis[1898972] call_tmp[1898961])
            const-val call_tmp[1898977]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1898979 'move' call_tmp[1898977](1898982 call isASCII[31046] localThis[1898972]))
            const-val call_tmp[1898984]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1898986 'move' call_tmp[1898984] call_tmp[1898977])
            if call_tmp[1898977]
            {
              const-val _iterator[1898991]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108566] "dead at end of block" "expr temp" "insert auto destroy" "temp"
              const-val call_tmp[1898993]:range(int(64),bounded,false)[1026814] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
              const-val ret_tmp[1898995]:range(int(64),bounded,false)[1026814] "temp"
              ref this[1901137]:_ref(string)[937939] "temp"
              (1901142 'move' this[1901137](1901139 '.v' _iterator[36289] F0_this[1997101]))
              (1898998 call byteIndices[31065] this[1901137] ret_tmp[1898995])
              (1899001 'move' call_tmp[1898993] ret_tmp[1898995])
              val call_tmp[1899004]:_ic_these_range_int64_t_bounded_F[1096703] "dead at end of block" "expr temp" "maybe param" "temp"
              (1899006 'move' call_tmp[1899004](1899009 call _getIterator[1095320] call_tmp[1898993]))
              const-val call_tmp[1899011]:_ir_chpl_bytes__ref_string[1108262] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[1899013]:_ir_chpl_bytes__ref_string[1108262] "temp"
              ref this[1901144]:_ref(string)[937939] "temp"
              (1901149 'move' this[1901144](1901146 '.v' _iterator[36289] F0_this[1997101]))
              (1899016 call chpl_bytes[33574] this[1901144] ret_tmp[1899013])
              (1899019 'move' call_tmp[1899011] ret_tmp[1899013])
              val call_tmp[1899022]:_ic_chpl_bytes__ref_string[1108256] "dead at end of block" "expr temp" "maybe param" "temp"
              (1899024 'move' call_tmp[1899022](1899027 call _getIterator[1108271] call_tmp[1899011]))
              const-val ret_tmp[1899029]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108566] "temp"
              (1899032 call _build_tuple[1108524] call_tmp[1899004] call_tmp[1899022] ret_tmp[1899029])
              (1899036 'move' _iterator[1898991] ret_tmp[1899029])
              val _iterator[1899039]:_ic_these_range_int64_t_bounded_F[1096703] "temp"
              (1899041 'move' _iterator[1899039](1899043 '.v' _iterator[1898991] x0[1108562]))
              val _iterator[1899046]:_ic_chpl_bytes__ref_string[1108256] "temp"
              (1899048 'move' _iterator[1899046](1899050 '.v' _iterator[1898991] x1[1108564]))
              {
                (1899055 call zip1[1096738] _iterator[1899039])
              }
              {
                (1899059 call zip1[1108291] _iterator[1899046])
              }
              const-val isFinished[1899061]:bool[10] "temp"
              val hasMore[1899063]:bool[10] "temp"
              CForLoop[1899065]
              {
                val _indexOfInterest[1899088]:(int(64),uint(8))[1111040] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                {
                  (1899092 call zip2[1108300] _iterator[1899046])
                }
                {
                  const-val retTmp[1899095]:int(64)[13] "temp"
                  (1899097 'move' retTmp[1899095](1899100 call hasMore[1108327] _iterator[1899046]))
                  (1899102 'move' hasMore[1899063](1899104 'cast' bool[10] retTmp[1899095]))
                }
                (1899107 'move' isFinished[1899061](1899109 '!' hasMore[1899063]))
                if isFinished[1899061]
                {
                  (1899113 'chpl_error' c"zippered iterations have non-equal lengths")
                }
                {
                  (1899117 'move' _index[1899132](1899120 call getValue[1108336] _iterator[1899046]))
                }
                {
                  (1899124 call zip2[1096747] _iterator[1899039])
                }
                {
                  (1899127 'move' _index[1899138](1899130 call getValue[1096783] _iterator[1899039]))
                }
                val _index[1899132]:uint(8)[100] "temp"
                (1899134 '.=' _indexOfInterest[1899088] x1[1111038] _index[1899132])
                val _index[1899138]:int(64)[13] "temp"
                (1899140 '.=' _indexOfInterest[1899088] x0[1111036] _index[1899138])
                1
                const-val i[1899145]:int(64)[13] "const" "index var" "insert auto destroy"
                (1899147 'move' i[1899145](1899149 '.v' _indexOfInterest[1899088] x0[1111036]))
                const-val b[1899152]:uint(8)[100] "const" "index var" "insert auto destroy"
                (1899154 'move' b[1899152](1899156 '.v' _indexOfInterest[1899088] x1[1111038]))
                const-val yret[1899159]:(int(32),byteIndex,int(64))[1122142] "dead after last mention" "YVV" "temp"
                val call_tmp[1899161]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val call_tmp[1899163]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                (1899165 'move' call_tmp[1899163](1899167 'cast' int(32)[95] b[1899152]))
                const-val call_tmp[1899170]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1899172]:byteIndex[28170] "temp"
                (1899175 call _cast[39483] i[1899145] ret_tmp[1899172])
                (1899178 'move' call_tmp[1899170] ret_tmp[1899172])
                const-val call_tmp[1899181]:(int(32),byteIndex,int(64))[1122142] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1899183]:(int(32),byteIndex,int(64))[1122142] "temp"
                (1899186 call _build_tuple[1122092] call_tmp[1899163] call_tmp[1899170] 1 ret_tmp[1899183])
                (1899191 'move' call_tmp[1899181] ret_tmp[1899183])
                (1899194 'move' yret[1899159] call_tmp[1899181])
                const-val _yieldedIndex[1899776]:(int(32),byteIndex,int(64))[1122142] "temp"
                (1900478 'move' _yieldedIndex[1899776] call_tmp[1899181])
                {
                  1
                  const-val thisChar[1899779]:int(32)[95] "const" "index var" "insert auto destroy"
                  (1899781 'move' thisChar[1899779](1899783 '.v' _yieldedIndex[1899776] x0[1122136]))
                  ref i[1899786]:_ref(byteIndex)[948759] "index var" "insert auto destroy"
                  (1899788 'move' i[1899786](1899790 '.v' _yieldedIndex[1899776] x1[1122138]))
                  const-val nBytes[1899793]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1899795 'move' nBytes[1899793](1899797 '.v' _yieldedIndex[1899776] x2[1122140]))
                  {
                    {
                      val _indexOfInterest[1899802]:int(32)[95] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      val _iterator[1899804]:_ic_codepoints__ref_string[1122849] "dead at end of block" "expr temp" "temp"
                      const-val call_tmp[1899806]:_ir_codepoints__ref_string[1122855] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val ret_tmp[1899808]:_ir_codepoints__ref_string[1122855] "temp"
                      (1899811 call codepoints[33663] localChars[36187] ret_tmp[1899808])
                      (1899814 'move' call_tmp[1899806] ret_tmp[1899808])
                      (1899817 'move' _iterator[1899804](1899820 call _getIterator[1122864] call_tmp[1899806]))
                      {
                        val ret[1899823]:_ir_codepoints__ref_string[1122855] "dead at end of block" "RVV" "temp"
                        const-val call_tmp[1899825]:string[26] "dead at end of block" "maybe param" "temp"
                        const-val ret_tmp[1899827]:string[26] "temp"
                        ref this[1899829]:_ref(string)[937939] "temp"
                        (1899831 'move' this[1899829](1899833 '.v' _iterator[1899804] F0_this[2000627]))
                        (1899837 call localize[32886] this[1899829] ret_tmp[1899827])
                        (1899840 'move' call_tmp[1899825] ret_tmp[1899827])
                        val localThis[1899843]:string[26] "dead at end of block" "insert auto destroy"
                        (1899845 'move' localThis[1899843] call_tmp[1899825])
                        const-val call_tmp[1899848]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        ref this[1899850]:_ref(string)[937939] "temp"
                        (1899852 'move' this[1899850](1899854 '.v' _iterator[1899804] F0_this[2000627]))
                        (1899857 'move' call_tmp[1899848](1899860 call isASCII[31046] this[1899850]))
                        const-val call_tmp[1899862]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1899864 'move' call_tmp[1899862] call_tmp[1899848])
                        if call_tmp[1899848]
                        {
                          val _indexOfInterest[1899869]:uint(8)[100] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                          val _iterator[1899871]:_ic_chpl_bytes__ref_string[1108256] "dead at end of block" "expr temp" "temp"
                          const-val call_tmp[1899873]:_ir_chpl_bytes__ref_string[1108262] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val ret_tmp[1899875]:_ir_chpl_bytes__ref_string[1108262] "temp"
                          ref this[1899877]:_ref(string)[937939] "temp"
                          (1899879 'move' this[1899877](1899881 '.v' _iterator[1899804] F0_this[2000627]))
                          (1899885 call chpl_bytes[33574] this[1899877] ret_tmp[1899875])
                          (1899888 'move' call_tmp[1899873] ret_tmp[1899875])
                          (1899891 'move' _iterator[1899871](1899894 call _getIterator[1108271] call_tmp[1899873]))
                          {
                            val ret[1899897]:_ir_chpl_bytes__ref_string[1108262] "dead at end of block" "RVV" "temp"
                            const-val call_tmp[1899899]:string[26] "dead at end of block" "maybe param" "temp"
                            const-val ret_tmp[1899901]:string[26] "temp"
                            ref this[1899903]:_ref(string)[937939] "temp"
                            (1899905 'move' this[1899903](1899907 '.v' _iterator[1899871] F0_this[1998453]))
                            (1899911 call localize[32886] this[1899903] ret_tmp[1899901])
                            (1899914 'move' call_tmp[1899899] ret_tmp[1899901])
                            val localThis[1899917]:string[26] "dead at end of block" "insert auto destroy"
                            (1899919 'move' localThis[1899917] call_tmp[1899899])
                            val _indexOfInterest[1899922]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                            val _iterator[1899924]:_ic_chpl_direct_counted_range_iter[1103790] "dead at end of block" "expr temp" "temp"
                            ref call_tmp[1899926]:_ref(int(64))[936572] "dead at end of block" "maybe param" "temp"
                            (1899928 'move' call_tmp[1899926](1899931 call buffLen[757886] localThis[1899917]))
                            const-val call_tmp[1899933]:_ir_chpl_direct_counted_range_iter[1103796] "dead at end of block" "expr temp" "maybe param" "temp"
                            const-val coerce_tmp[1899935]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1899937 'move' coerce_tmp[1899935](1899939 'deref' call_tmp[1899926]))
                            const-val ret_tmp[1899941]:_ir_chpl_direct_counted_range_iter[1103796] "temp"
                            (1899944 call chpl_direct_counted_range_iter[457996] 0 coerce_tmp[1899935] ret_tmp[1899941])
                            (1899948 'move' call_tmp[1899933] ret_tmp[1899941])
                            (1899951 'move' _iterator[1899924](1899954 call _getIterator[1103805] call_tmp[1899933]))
                            {
                              val ret[1899957]:_ir_chpl_direct_counted_range_iter[1103796] "dead after last mention" "RVV" "temp"
                              val _indexOfInterest[1899959]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                              val _iterator[1899961]:_ic_chpl_direct_counted_range_iter_helper[1103540] "dead at end of block" "expr temp" "temp"
                              const-val call_tmp[1899963]:_ir_chpl_direct_counted_range_iter_helper[1103546] "dead at end of block" "expr temp" "maybe param" "temp"
                              const-val ret_tmp[1899965]:_ir_chpl_direct_counted_range_iter_helper[1103546] "temp"
                              const-val low[1899967]:int(64)[13] "temp"
                              (1899969 'move' low[1899967](1899971 '.v' _iterator[1899924] F0_low[2010431]))
                              const-val count[1899974]:int(64)[13] "temp"
                              (1899976 'move' count[1899974](1899978 '.v' _iterator[1899924] F1_count[2010435]))
                              (1899982 call chpl_direct_counted_range_iter_helper[1102098] low[1899967] count[1899974] ret_tmp[1899965])
                              (1899986 'move' call_tmp[1899963] ret_tmp[1899965])
                              (1899989 'move' _iterator[1899961](1899992 call _getIterator[1103555] call_tmp[1899963]))
                              {
                                val ret[1961548]:_ir_chpl_direct_counted_range_iter_helper[1103546] "dead after last mention" "RVV" "temp"
                                val call_tmp[1961550]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                const-val tmp[1961552]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val tmp[1961554]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                                const-val call_tmp[1961556]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                const-val count[1962044]:int(64)[13] "temp"
                                (1962049 'move' count[1962044](1962046 '.v' _iterator[1899961] F1_count[2014907]))
                                (1961558 'move' call_tmp[1961556](1961561 call <[948398] count[1962044]))
                                (1961563 'move' tmp[1961554] call_tmp[1961556])
                                (1961566 'move' tmp[1961552] call_tmp[1961556])
                                const-val call_tmp[1961569]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1961571 'move' call_tmp[1961569] call_tmp[1961556])
                                if call_tmp[1961556]
                                {
                                  (1961577 call boundsCheckHalt[210167] "With a negative count, the range must have a last index.")
                                }
                                const-val tmp[1961580]:2*int(64)[1040056] "dead at end of block" "const" "insert auto destroy" "temp"
                                val tmp[1961582]:2*int(64)[1040056] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                                const-val tmp[1961584]:bool[10] "dead after last mention" "maybe param" "temp"
                                const-val call_tmp[1961586]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                const-val count[1962051]:int(64)[13] "temp"
                                (1962056 'move' count[1962051](1962053 '.v' _iterator[1899961] F1_count[2014907]))
                                (1961588 'move' call_tmp[1961586](1961591 call ==[435628] count[1962051] 0))
                                (1961594 'move' tmp[1961584] call_tmp[1961586])
                                if call_tmp[1961586]
                                {
                                  const-val tmp[1961599]:2*int(64)[1040056] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                                  val call_tmp[1961601]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                                  const-val call_tmp[1961603]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val low[1962058]:int(64)[13] "temp"
                                  (1962063 'move' low[1962058](1962060 '.v' _iterator[1899961] F0_low[2014903]))
                                  (1961605 'move' call_tmp[1961603](1961608 call _cast[956034] low[1962058]))
                                  const-val call_tmp[1961610]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val coerce_tmp[1961612]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                                  (1961614 'move' coerce_tmp[1961612](1961616 'cast' uint(64)[115] 1))
                                  (1961619 'move' call_tmp[1961610](1961622 call -[962193] call_tmp[1961603]))
                                  const-val call_tmp[1961624]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  (1961626 'move' call_tmp[1961624](1961629 call _cast[953543] call_tmp[1961610]))
                                  const-val ret_tmp[1961631]:2*int(64)[1040056] "temp"
                                  const-val low[1962065]:int(64)[13] "temp"
                                  (1962070 'move' low[1962065](1962067 '.v' _iterator[1899961] F0_low[2014903]))
                                  (1961634 call _build_tuple[1040014] low[1962065] call_tmp[1961624] ret_tmp[1961631])
                                  (1961638 'move' tmp[1961599] ret_tmp[1961631])
                                  (1961641 'move' tmp[1961582] tmp[1961599])
                                }
                                {
                                  const-val tmp[1961645]:2*int(64)[1040056] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                                  val call_tmp[1961647]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  const-val call_tmp[1961649]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val count[1962072]:int(64)[13] "temp"
                                  (1962077 'move' count[1962072](1962074 '.v' _iterator[1899961] F1_count[2014907]))
                                  (1961651 'move' call_tmp[1961649] count[1962072])
                                  const-val call_tmp[1961654]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val count[1962079]:int(64)[13] "temp"
                                  (1962084 'move' count[1962079](1962081 '.v' _iterator[1899961] F1_count[2014907]))
                                  (1961656 'move' call_tmp[1961654](1961659 call -[962226] count[1962079]))
                                  const-val call_tmp[1961661]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val low[1962086]:int(64)[13] "temp"
                                  (1962091 'move' low[1962086](1962088 '.v' _iterator[1899961] F0_low[2014903]))
                                  (1961663 'move' call_tmp[1961661](1961666 call +[439636] low[1962086] call_tmp[1961654]))
                                  const-val ret_tmp[1961669]:2*int(64)[1040056] "temp"
                                  const-val low[1962093]:int(64)[13] "temp"
                                  (1962098 'move' low[1962093](1962095 '.v' _iterator[1899961] F0_low[2014903]))
                                  (1961672 call _build_tuple[1040014] low[1962093] call_tmp[1961661] ret_tmp[1961669])
                                  (1961676 'move' tmp[1961645] ret_tmp[1961669])
                                  (1961679 'move' tmp[1961582] tmp[1961645])
                                }
                                (1961683 '=' tmp[1961580] tmp[1961582])
                                (1961686 'noop')
                                1
                                ref call_tmp[1961688]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
                                (1961690 'move' call_tmp[1961688](1961692 '.' tmp[1961580] x0[1040052]))
                                const-val start[1961695]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                const-val coerce_tmp[1961697]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                (1961699 'move' coerce_tmp[1961697](1961701 'deref' call_tmp[1961688]))
                                (1961703 '=' start[1961695] coerce_tmp[1961697])
                                (1961706 'noop')
                                ref call_tmp[1961707]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
                                (1961709 'move' call_tmp[1961707](1961711 '.' tmp[1961580] x1[1040054]))
                                const-val end[1961714]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                const-val coerce_tmp[1961716]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                (1961718 'move' coerce_tmp[1961716](1961720 'deref' call_tmp[1961707]))
                                (1961722 '=' end[1961714] coerce_tmp[1961716])
                                (1961725 'noop')
                                val _indexOfInterest[1961726]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                                val _iterator[1961728]:_ic_chpl_direct_param_stride_range_iter[1103286] "dead at end of block" "expr temp" "temp"
                                const-val call_tmp[1961730]:_ir_chpl_direct_param_stride_range_iter[1103292] "dead at end of block" "expr temp" "maybe param" "temp"
                                const-val ret_tmp[1961732]:_ir_chpl_direct_param_stride_range_iter[1103292] "temp"
                                (1961735 call chpl_direct_param_stride_range_iter[1102524] coerce_tmp[1961697] coerce_tmp[1961716] ret_tmp[1961732])
                                (1961739 'move' call_tmp[1961730] ret_tmp[1961732])
                                (1961742 'move' _iterator[1961728](1961745 call _getIterator[1103301] call_tmp[1961730]))
                                {
                                  val ret[1961748]:_ir_chpl_direct_param_stride_range_iter[1103292] "dead after last mention" "RVV" "temp"
                                  val call_tmp[1961750]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  (1961753 call chpl_range_check_stride[1102844])
                                  val i[1961754]:int(64)[13] "dead at end of block" "insert auto destroy"
                                  val call_tmp[1961756]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  (1961758 'move' i[1961754] 0)
                                  val call_tmp[1961761]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  const-val default_arg_first[1961763]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                                  const-val low[1961765]:int(64)[13] "temp"
                                  (1961767 'move' low[1961765](1961769 '.v' _iterator[1961728] F0_low[2016401]))
                                  (1961772 'move' default_arg_first[1961763](1961775 call chpl_checkIfRangeIterWillOverflow_default_first[1103198] low[1961765]))
                                  const-val default_arg_last[1961777]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                                  const-val high[1961779]:int(64)[13] "temp"
                                  (1961781 'move' high[1961779](1961783 '.v' _iterator[1961728] F1_high[2016405]))
                                  (1961786 'move' default_arg_last[1961777](1961789 call chpl_checkIfRangeIterWillOverflow_default_last[1103226] high[1961779]))
                                  const-val _return_tmp_[1961791]:bool[10] "dead after last mention" "temp"
                                  const-val low[1961793]:int(64)[13] "temp"
                                  (1961795 'move' low[1961793](1961797 '.v' _iterator[1961728] F0_low[2016401]))
                                  const-val high[1961800]:int(64)[13] "temp"
                                  (1961802 'move' high[1961800](1961804 '.v' _iterator[1961728] F1_high[2016405]))
                                  (1961807 'move' _return_tmp_[1961791](1961810 call chpl_checkIfRangeIterWillOverflow[1096076] low[1961793] high[1961800] 1 default_arg_first[1961763] default_arg_last[1961777] 1))
                                  CForLoop[1961817]
                                  {
                                    const-val yret[1961846]:int(64)[13] "dead after last mention" "YVV" "temp"
                                    (1961848 'move' yret[1961846] i[1961754])
                                    const-val _yieldedIndex[1961851]:int(64)[13] "temp"
                                    (1961853 'move' _yieldedIndex[1961851] i[1961754])
                                    {
                                      const-val i[1961857]:int(64)[13] "const" "index var" "insert auto destroy"
                                      (1961859 'move' i[1961857] _yieldedIndex[1961851])
                                      const-val yret[1961862]:int(64)[13] "dead after last mention" "YVV" "temp"
                                      (1961864 'move' yret[1961862] _yieldedIndex[1961851])
                                      const-val _yieldedIndex[1961892]:int(64)[13] "temp"
                                      (1962042 'move' _yieldedIndex[1961892] _yieldedIndex[1961851])
                                      {
                                        const-val i[1961894]:int(64)[13] "const" "index var" "insert auto destroy"
                                        (1961896 'move' i[1961894] _yieldedIndex[1961892])
                                        const-val yret[1961899]:int(64)[13] "dead after last mention" "YVV" "temp"
                                        (1961901 'move' yret[1961899] _yieldedIndex[1961892])
                                        const-val _yieldedIndex[1961904]:int(64)[13] "temp"
                                        (1961906 'move' _yieldedIndex[1961904] _yieldedIndex[1961892])
                                        {
                                          const-val i[1961910]:int(64)[13] "const" "index var" "insert auto destroy"
                                          (1961912 'move' i[1961910] _yieldedIndex[1961904])
                                          const-val yret[1961915]:uint(8)[100] "dead after last mention" "YVV" "temp"
                                          ref call_tmp[1961917]:_ref(uint(8))[936908] "dead after last mention" "maybe param" "temp"
                                          ref _this_tmp_[1961919]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "temp"
                                          (1961921 'move' _this_tmp_[1961919](1961924 call buff[757964] localThis[1899917]))
                                          val coerce_tmp[1961926]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                          (1961928 'move' coerce_tmp[1961926](1961930 'deref' _this_tmp_[1961919]))
                                          (1961932 'move' call_tmp[1961917](1961935 call this[954091] coerce_tmp[1961926] _yieldedIndex[1961904]))
                                          const-val coerce_tmp[1961938]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                          (1961940 'move' coerce_tmp[1961938](1961942 'deref' call_tmp[1961917]))
                                          (1961944 '=' yret[1961915] coerce_tmp[1961938])
                                          (1961947 'noop')
                                          const-val _yieldedIndex[1961948]:uint(8)[100] "temp"
                                          (1961950 'move' _yieldedIndex[1961948] coerce_tmp[1961938])
                                          {
                                            const-val b[1961954]:uint(8)[100] "const" "index var" "insert auto destroy"
                                            (1961956 'move' b[1961954] _yieldedIndex[1961948])
                                            val yret[1961959]:int(32)[95] "dead after last mention" "YVV" "temp"
                                            val call_tmp[1961961]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                            const-val _yieldedIndex[1961963]:int(32)[95] "temp"
                                            (1961965 'move' _yieldedIndex[1961963](1961967 'cast' int(32)[95] _yieldedIndex[1961948]))
                                            {
                                              const-val removeChar[1961971]:int(32)[95] "const" "index var" "insert auto destroy"
                                              (1961973 'move' removeChar[1961971] _yieldedIndex[1961963])
                                              {
                                                const-val call_tmp[1961977]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                                (1961979 'move' call_tmp[1961977](1961982 call ==[435606] thisChar[1899779] removeChar[1961971]))
                                                const-val call_tmp[1961985]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                                (1961987 'move' call_tmp[1961985] call_tmp[1961977])
                                                if call_tmp[1961985]
                                                {
                                                  const-val call_tmp[1961992]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                                  const-val ret_tmp[1961994]:byteIndex[28170] "temp"
                                                  (1961997 call +[28722] i[1899786] nBytes[1899793] ret_tmp[1961994])
                                                  (1962001 'move' call_tmp[1961992] ret_tmp[1961994])
                                                  (1962005 call =[38191] start[36193] call_tmp[1961992])
                                                  (1962009 call chpl__autoDestroy[1461793] call_tmp[1961992])
                                                  (1962036 call _freeIterator[1103474] _iterator[1961728])
                                                  (1962039 call chpl__autoDestroy[1534672] tmp[1961580])
                                                  (1962012 call _freeIterator[1103724] _iterator[1899961])
                                                  (1962015 call _freeIterator[1103974] _iterator[1899924])
                                                  (1962018 call chpl__autoDestroy[1461530] localThis[1899917])
                                                  (1962021 call _freeIterator[1109569] _iterator[1899871])
                                                  (1962024 call chpl__autoDestroy[1461530] localThis[1899843])
                                                  (1962027 call _freeIterator[1123136] _iterator[1899804])
                                                  continue _continueLabel[1900411] _continueLabel[1900411]
                                                }
                                              }
                                              label _continueLabel[1962032]
                                            }
                                          }
                                        }
                                      }
                                    }
                                    {
                                      const-val low[1961819]:int(64)[13] "temp"
                                      (1961821 'move' low[1961819](1961823 '.v' _iterator[1961728] F0_low[2016401]))
                                      (1961826 '=' i[1961754] low[1961819])
                                    }
                                    {
                                      const-val high[1961830]:int(64)[13] "temp"
                                      (1961832 'move' high[1961830](1961834 '.v' _iterator[1961728] F1_high[2016405]))
                                      (1961837 '<=' i[1961754] high[1961830])
                                    }
                                    {
                                      val call_tmp[1961841]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                      (1961843 '+=' i[1961754] 1)
                                    }
                                  }
                                  label _endchpl_direct_param_stride_range_iter[1961880]
                                }
                                (1961883 call _freeIterator[1103474] _iterator[1961728])
                                (1961886 call chpl__autoDestroy[1534672] tmp[1961580])
                                label _endchpl_direct_counted_range_iter_helper[1961888]
                              }
                              (1900138 call _freeIterator[1103724] _iterator[1899961])
                              label _endchpl_direct_counted_range_iter[1900140]
                            }
                            (1900143 call _freeIterator[1103974] _iterator[1899924])
                            (1900146 call chpl__autoDestroy[1461530] localThis[1899917])
                            label _endchpl_bytes[1900148]
                          }
                          (1900151 call _freeIterator[1109569] _iterator[1899871])
                        }
                        {
                          val i[1900154]:int(64)[13] "dead at end of block" "insert auto destroy"
                          (1900156 'move' i[1900154] 0)
                          val tmp[1900159]:bool[10] "dead after last mention" "temp"
                          ref call_tmp[1900161]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
                          (1900163 'move' call_tmp[1900161](1900166 call buffLen[757886] localThis[1899843]))
                          const-val call_tmp[1900168]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val coerce_tmp[1900170]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (1900172 'move' coerce_tmp[1900170](1900174 'deref' call_tmp[1900161]))
                          (1900176 'move' call_tmp[1900168](1900179 call <[437452] 0 coerce_tmp[1900170]))
                          (1900182 'move' tmp[1900159] call_tmp[1900168])
                          WhileDo[1900185]
                          {
                            ref call_tmp[1900187]:_ref(c_ptr(uint(8)))[937432] "dead at end of block" "maybe param" "temp"
                            (1900189 'move' call_tmp[1900187](1900192 call buff[757964] localThis[1899843]))
                            ref call_tmp[1900194]:_ref(int(64))[936572] "dead at end of block" "maybe param" "temp"
                            (1900196 'move' call_tmp[1900194](1900199 call buffLen[757886] localThis[1899843]))
                            const-val call_tmp[1900201]:(syserr,int(32),int(32))[964620] "dead at end of block" "maybe param" "temp"
                            val coerce_tmp[1900203]:c_ptr(uint(8))[937423] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1900205 'move' coerce_tmp[1900203](1900207 'deref' call_tmp[1900187]))
                            const-val coerce_tmp[1900209]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1900211 'move' coerce_tmp[1900209](1900213 'deref' call_tmp[1900194]))
                            const-val ret_tmp[1900215]:(syserr,int(32),int(32))[964620] "temp"
                            (1900218 call decodeHelp[174406] coerce_tmp[1900203] coerce_tmp[1900209] i[1900154] 1 ret_tmp[1900215])
                            (1900224 'move' call_tmp[1900201] ret_tmp[1900215])
                            const-val tmp[1900227]:(syserr,int(32),int(32))[964620] "dead at end of block" "const" "insert auto destroy" "temp"
                            (1900229 'move' tmp[1900227] call_tmp[1900201])
                            1
                            ref call_tmp[1900233]:_ref(syserr)[948832] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1900235 'move' call_tmp[1900233](1900237 '.' tmp[1900227] x0[964614]))
                            const-val decodeRet[1900240]:syserr[223584] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1900242]:syserr[223584] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1900244 'move' coerce_tmp[1900242](1900246 'deref' call_tmp[1900233]))
                            (1900248 'move' decodeRet[1900240](1900251 call chpl__initCopy[964485] coerce_tmp[1900242]))
                            ref call_tmp[1900253]:_ref(int(32))[936626] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1900255 'move' call_tmp[1900253](1900257 '.' tmp[1900227] x1[964616]))
                            const-val cp[1900260]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1900262]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1900264 'move' coerce_tmp[1900262](1900266 'deref' call_tmp[1900253]))
                            (1900268 'move' cp[1900260](1900271 call chpl__initCopy[964757] coerce_tmp[1900262]))
                            ref call_tmp[1900273]:_ref(int(32))[936626] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1900275 'move' call_tmp[1900273](1900277 '.' tmp[1900227] x2[964618]))
                            const-val nBytes[1900280]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1900282]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1900284 'move' coerce_tmp[1900282](1900286 'deref' call_tmp[1900273]))
                            (1900288 'move' nBytes[1900280](1900291 call chpl__initCopy[964757] coerce_tmp[1900282]))
                            const-val yret[1900293]:int(32)[95] "dead after last mention" "YVV" "temp"
                            val call_tmp[1900295]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                            (1900297 'move' yret[1900293] cp[1900260])
                            const-val _yieldedIndex[1900300]:int(32)[95] "temp"
                            (1900302 'move' _yieldedIndex[1900300] cp[1900260])
                            {
                              const-val removeChar[1900306]:int(32)[95] "const" "index var" "insert auto destroy"
                              (1900308 'move' removeChar[1900306] _yieldedIndex[1900300])
                              {
                                const-val call_tmp[1900312]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1900314 'move' call_tmp[1900312](1900317 call ==[435606] thisChar[1899779] removeChar[1900306]))
                                const-val call_tmp[1900320]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1900322 'move' call_tmp[1900320] call_tmp[1900312])
                                if call_tmp[1900320]
                                {
                                  const-val call_tmp[1900327]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                  const-val ret_tmp[1900329]:byteIndex[28170] "temp"
                                  (1900332 call +[28722] i[1899786] nBytes[1899793] ret_tmp[1900329])
                                  (1900336 'move' call_tmp[1900327] ret_tmp[1900329])
                                  (1900340 call =[38191] start[36193] call_tmp[1900327])
                                  (1900344 call chpl__autoDestroy[1461793] call_tmp[1900327])
                                  (1900347 call chpl__autoDestroy[1465403] tmp[1900227])
                                  (1900350 call chpl__autoDestroy[1461530] localThis[1899843])
                                  (1900353 call _freeIterator[1123136] _iterator[1899804])
                                  continue _continueLabel[1900411] _continueLabel[1900411]
                                }
                              }
                              label _continueLabel[1900358]
                            }
                            const-val coerce_tmp[1900360]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (1900362 'move' coerce_tmp[1900360](1900364 'cast' int(64)[13] nBytes[1900280]))
                            (1900368 call +=[451315] i[1900154] coerce_tmp[1900360])
                            (1900372 call chpl__autoDestroy[1465403] tmp[1900227])
                            ref call_tmp[1900374]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
                            (1900376 'move' call_tmp[1900374](1900379 call buffLen[757886] localThis[1899843]))
                            const-val call_tmp[1900381]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            const-val coerce_tmp[1900383]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (1900385 'move' coerce_tmp[1900383](1900387 'deref' call_tmp[1900374]))
                            (1900389 'move' call_tmp[1900381](1900392 call <[437452] i[1900154] coerce_tmp[1900383]))
                            (1900395 'move' tmp[1900159] call_tmp[1900381])
                            tmp[1900159]
                          }
                        }
                        (1900400 call chpl__autoDestroy[1461530] localThis[1899843])
                        label _endcodepoints[1900402]
                      }
                      label _breakLabel[1900404]
                      (1900407 call _freeIterator[1123136] _iterator[1899804])
                    }
                    ref moreRef1[1900414]:_ref(int(64))[936572] "temp"
                    (1900416 'move' moreRef1[1900414](1900418 '.' _iterator[1899039] more[1096706]))
                    const-val moreVal1[1900421]:int(64)[13] "const" "temp"
                    (1900423 '=' moreVal1[1900421] moreRef1[1900414])
                    const-val moreValNeg1[1900426]:int(64)[13] "const" "temp"
                    (1900428 'move' moreValNeg1[1900426](1900430 'u-' moreVal1[1900421]))
                    (1900432 '=' moreRef1[1900414] moreValNeg1[1900426])
                    (1900436 call advance[1096729] _iterator[1899039])
                    ref moreRef2[1900438]:_ref(int(64))[936572] "temp"
                    (1900440 'move' moreRef2[1900438](1900442 '.' _iterator[1899046] more[1108259]))
                    const-val moreVal2[1900445]:int(64)[13] "const" "temp"
                    (1900447 '=' moreVal2[1900445] moreRef2[1900438])
                    const-val moreValNeg2[1900450]:int(64)[13] "const" "temp"
                    (1900452 'move' moreValNeg2[1900450](1900454 'u-' moreVal2[1900445]))
                    (1900456 '=' moreRef2[1900438] moreValNeg2[1900450])
                    (1900460 call advance[1108282] _iterator[1899046])
                    (1900463 call chpl__autoDestroy[1461793] call_tmp[1899170])
                    (1900466 call _freeIterator[1108724] _iterator[1898991])
                    (1900469 call chpl__autoDestroy[1541417] _iterator[1898991])
                    (1900472 call chpl__autoDestroy[1534375] call_tmp[1898993])
                    (1900475 call chpl__autoDestroy[1461530] localThis[1898972])
                    break _breakLabel[36294] _breakLabel[36294]
                  }
                  label _continueLabel[1900411]
                }
                (1899268 call chpl__autoDestroy[1461793] call_tmp[1899170])
                {
                  (1899272 call zip3[1096756] _iterator[1899039])
                }
                {
                  (1899276 call zip3[1108309] _iterator[1899046])
                }
                {
                  {
                    (1899069 call init[1096792] _iterator[1899039])
                  }
                  {
                    (1899073 call init[1108345] _iterator[1899046])
                  }
                }
                {
                  (1899077 call hasMore[1096774] _iterator[1899039])
                }
                {
                  {
                    (1899082 call incr[1096801] _iterator[1899039])
                  }
                  {
                    (1899086 call incr[1108354] _iterator[1899046])
                  }
                }
              }
              {
                const-val retTmp[1899279]:int(64)[13] "temp"
                (1899281 'move' retTmp[1899279](1899284 call hasMore[1108327] _iterator[1899046]))
                (1899286 'move' hasMore[1899063](1899288 'cast' bool[10] retTmp[1899279]))
              }
              if hasMore[1899063]
              {
                (1899293 'chpl_error' c"zippered iterations have non-equal lengths")
              }
              {
                (1899298 call zip4[1108318] _iterator[1899046])
              }
              {
                (1899302 call zip4[1096765] _iterator[1899039])
              }
              (1899305 call _freeIterator[1108724] _iterator[1898991])
              (1899308 call chpl__autoDestroy[1541417] _iterator[1898991])
              (1899311 call chpl__autoDestroy[1534375] call_tmp[1898993])
            }
            {
              const-val call_tmp[1899314]:int(64)[13] "dead at end of block" "maybe param" "temp"
              ref start[1901151]:_ref(byteIndex)[948759] "temp"
              (1901156 'move' start[1901151](1901153 '.v' _iterator[36289] F1_start[1997105]))
              (1899316 'move' call_tmp[1899314](1899319 call _cast[39462] start[1901151]))
              val i[1899321]:int(64)[13] "dead at end of block" "insert auto destroy"
              (1899323 'move' i[1899321] call_tmp[1899314])
              const-val call_tmp[1899326]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1899328 'move' call_tmp[1899326](1899331 call >[437672] call_tmp[1899314] 0))
              const-val call_tmp[1899334]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1899336 'move' call_tmp[1899334] call_tmp[1899326])
              if call_tmp[1899326]
              {
                val tmp[1899341]:bool[10] "dead after last mention" "temp"
                const-val tmp[1899343]:bool[10] "dead after last mention" "maybe param" "temp"
                ref call_tmp[1899345]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
                (1899347 'move' call_tmp[1899345](1899350 call buffLen[757886] localThis[1898972]))
                const-val coerce_tmp[1899352]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1899354 'move' coerce_tmp[1899352](1899356 'deref' call_tmp[1899345]))
                (1899358 'move' tmp[1899343](1899361 call <[437452] i[1899321] coerce_tmp[1899352]))
                val tmp[1899364]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val tmp[1899366]:bool[10] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[1899368]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1899370 'move' call_tmp[1899368] tmp[1899343])
                (1899373 'move' tmp[1899366] tmp[1899343])
                if tmp[1899343]
                {
                  const-val tmp[1899378]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  ref call_tmp[1899380]:_ref(uint(8))[936908] "dead after last mention" "maybe param" "temp"
                  ref _this_tmp_[1899382]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "temp"
                  (1899384 'move' _this_tmp_[1899382](1899387 call buff[757964] localThis[1898972]))
                  val coerce_tmp[1899389]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1899391 'move' coerce_tmp[1899389](1899393 'deref' _this_tmp_[1899382]))
                  (1899395 'move' call_tmp[1899380](1899398 call this[954091] coerce_tmp[1899389] i[1899321]))
                  const-val call_tmp[1899401]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[1899403]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1899405 'move' coerce_tmp[1899403](1899407 'deref' call_tmp[1899380]))
                  (1899409 'move' call_tmp[1899401](1899412 call isInitialByte[181528] coerce_tmp[1899403]))
                  const-val call_tmp[1899414]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1899416 'move' call_tmp[1899414](1899419 call ![7494] call_tmp[1899401]))
                  (1899421 'move' tmp[1899378] call_tmp[1899414])
                  (1899424 'move' tmp[1899364] call_tmp[1899414])
                }
                {
                  (1899428 'move' tmp[1899364] 0)
                }
                (1899432 'move' tmp[1899341] tmp[1899364])
                WhileDo[1899435]
                {
                  (1899438 call +=[451315] i[1899321] 1)
                  const-val tmp[1899441]:bool[10] "dead after last mention" "maybe param" "temp"
                  ref call_tmp[1899443]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
                  (1899445 'move' call_tmp[1899443](1899448 call buffLen[757886] localThis[1898972]))
                  const-val coerce_tmp[1899450]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1899452 'move' coerce_tmp[1899450](1899454 'deref' call_tmp[1899443]))
                  (1899456 'move' tmp[1899441](1899459 call <[437452] i[1899321] coerce_tmp[1899450]))
                  val tmp[1899462]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                  const-val tmp[1899464]:bool[10] "dead after last mention" "maybe param" "temp"
                  const-val call_tmp[1899466]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1899468 'move' call_tmp[1899466] tmp[1899441])
                  (1899471 'move' tmp[1899464] tmp[1899441])
                  if tmp[1899441]
                  {
                    const-val tmp[1899476]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                    ref call_tmp[1899478]:_ref(uint(8))[936908] "dead after last mention" "maybe param" "temp"
                    ref _this_tmp_[1899480]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "temp"
                    (1899482 'move' _this_tmp_[1899480](1899485 call buff[757964] localThis[1898972]))
                    val coerce_tmp[1899487]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1899489 'move' coerce_tmp[1899487](1899491 'deref' _this_tmp_[1899480]))
                    (1899493 'move' call_tmp[1899478](1899496 call this[954091] coerce_tmp[1899487] i[1899321]))
                    const-val call_tmp[1899499]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[1899501]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1899503 'move' coerce_tmp[1899501](1899505 'deref' call_tmp[1899478]))
                    (1899507 'move' call_tmp[1899499](1899510 call isInitialByte[181528] coerce_tmp[1899501]))
                    const-val call_tmp[1899512]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1899514 'move' call_tmp[1899512](1899517 call ![7494] call_tmp[1899499]))
                    (1899519 'move' tmp[1899476] call_tmp[1899512])
                    (1899522 'move' tmp[1899462] call_tmp[1899512])
                  }
                  {
                    (1899526 'move' tmp[1899462] 0)
                  }
                  (1899530 'move' tmp[1899341] tmp[1899462])
                  tmp[1899341]
                }
              }
              val tmp[1899534]:bool[10] "dead after last mention" "temp"
              ref call_tmp[1899536]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
              (1899538 'move' call_tmp[1899536](1899541 call buffLen[757886] localThis[1898972]))
              const-val call_tmp[1899543]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1899545]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1899547 'move' coerce_tmp[1899545](1899549 'deref' call_tmp[1899536]))
              (1899551 'move' call_tmp[1899543](1899554 call <[437452] i[1899321] coerce_tmp[1899545]))
              (1899557 'move' tmp[1899534] call_tmp[1899543])
              WhileDo[1899560]
              {
                ref call_tmp[1899562]:_ref(c_ptr(uint(8)))[937432] "dead at end of block" "maybe param" "temp"
                (1899564 'move' call_tmp[1899562](1899567 call buff[757964] localThis[1898972]))
                ref call_tmp[1899569]:_ref(int(64))[936572] "dead at end of block" "maybe param" "temp"
                (1899571 'move' call_tmp[1899569](1899574 call buffLen[757886] localThis[1898972]))
                const-val call_tmp[1899576]:(syserr,int(32),int(32))[964620] "dead at end of block" "maybe param" "temp"
                val coerce_tmp[1899578]:c_ptr(uint(8))[937423] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1899580 'move' coerce_tmp[1899578](1899582 'deref' call_tmp[1899562]))
                const-val coerce_tmp[1899584]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1899586 'move' coerce_tmp[1899584](1899588 'deref' call_tmp[1899569]))
                const-val ret_tmp[1899590]:(syserr,int(32),int(32))[964620] "temp"
                (1899593 call decodeHelp[174406] coerce_tmp[1899578] coerce_tmp[1899584] i[1899321] 1 ret_tmp[1899590])
                (1899599 'move' call_tmp[1899576] ret_tmp[1899590])
                const-val tmp[1899602]:(syserr,int(32),int(32))[964620] "dead at end of block" "const" "insert auto destroy" "temp"
                (1899604 'move' tmp[1899602] call_tmp[1899576])
                1
                ref call_tmp[1899608]:_ref(syserr)[948832] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1899610 'move' call_tmp[1899608](1899612 '.' tmp[1899602] x0[964614]))
                const-val decodeRet[1899615]:syserr[223584] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1899617]:syserr[223584] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1899619 'move' coerce_tmp[1899617](1899621 'deref' call_tmp[1899608]))
                (1899623 'move' decodeRet[1899615](1899626 call chpl__initCopy[964485] coerce_tmp[1899617]))
                ref call_tmp[1899628]:_ref(int(32))[936626] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1899630 'move' call_tmp[1899628](1899632 '.' tmp[1899602] x1[964616]))
                const-val cp[1899635]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1899637]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1899639 'move' coerce_tmp[1899637](1899641 'deref' call_tmp[1899628]))
                (1899643 'move' cp[1899635](1899646 call chpl__initCopy[964757] coerce_tmp[1899637]))
                ref call_tmp[1899648]:_ref(int(32))[936626] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1899650 'move' call_tmp[1899648](1899652 '.' tmp[1899602] x2[964618]))
                const-val nBytes[1899655]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1899657]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1899659 'move' coerce_tmp[1899657](1899661 'deref' call_tmp[1899648]))
                (1899663 'move' nBytes[1899655](1899666 call chpl__initCopy[964757] coerce_tmp[1899657]))
                const-val yret[1899668]:(int(32),byteIndex,int(64))[1122142] "dead after last mention" "YVV" "temp"
                val call_tmp[1899670]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val call_tmp[1899672]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                (1899674 'move' call_tmp[1899672] cp[1899635])
                const-val call_tmp[1899677]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1899679]:byteIndex[28170] "temp"
                (1899682 call _cast[39483] i[1899321] ret_tmp[1899679])
                (1899685 'move' call_tmp[1899677] ret_tmp[1899679])
                const-val call_tmp[1899688]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                (1899690 'move' call_tmp[1899688](1899692 'cast' int(64)[13] nBytes[1899655]))
                const-val call_tmp[1899695]:(int(32),byteIndex,int(64))[1122142] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1899697]:(int(32),byteIndex,int(64))[1122142] "temp"
                (1899700 call _build_tuple[1122092] cp[1899635] call_tmp[1899677] call_tmp[1899688] ret_tmp[1899697])
                (1899705 'move' call_tmp[1899695] ret_tmp[1899697])
                (1899708 'move' yret[1899668] call_tmp[1899695])
                const-val _yieldedIndex[1900480]:(int(32),byteIndex,int(64))[1122142] "temp"
                (1901128 'move' _yieldedIndex[1900480] call_tmp[1899695])
                {
                  1
                  const-val thisChar[1900483]:int(32)[95] "const" "index var" "insert auto destroy"
                  (1900485 'move' thisChar[1900483](1900487 '.v' _yieldedIndex[1900480] x0[1122136]))
                  ref i[1900490]:_ref(byteIndex)[948759] "index var" "insert auto destroy"
                  (1900492 'move' i[1900490](1900494 '.v' _yieldedIndex[1900480] x1[1122138]))
                  const-val nBytes[1900497]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1900499 'move' nBytes[1900497](1900501 '.v' _yieldedIndex[1900480] x2[1122140]))
                  {
                    {
                      val _indexOfInterest[1900506]:int(32)[95] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      val _iterator[1900508]:_ic_codepoints__ref_string[1122849] "dead at end of block" "expr temp" "temp"
                      const-val call_tmp[1900510]:_ir_codepoints__ref_string[1122855] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val ret_tmp[1900512]:_ir_codepoints__ref_string[1122855] "temp"
                      (1900515 call codepoints[33663] localChars[36187] ret_tmp[1900512])
                      (1900518 'move' call_tmp[1900510] ret_tmp[1900512])
                      (1900521 'move' _iterator[1900508](1900524 call _getIterator[1122864] call_tmp[1900510]))
                      {
                        val ret[1900527]:_ir_codepoints__ref_string[1122855] "dead at end of block" "RVV" "temp"
                        const-val call_tmp[1900529]:string[26] "dead at end of block" "maybe param" "temp"
                        const-val ret_tmp[1900531]:string[26] "temp"
                        ref this[1900533]:_ref(string)[937939] "temp"
                        (1900535 'move' this[1900533](1900537 '.v' _iterator[1900508] F0_this[2000627]))
                        (1900541 call localize[32886] this[1900533] ret_tmp[1900531])
                        (1900544 'move' call_tmp[1900529] ret_tmp[1900531])
                        val localThis[1900547]:string[26] "dead at end of block" "insert auto destroy"
                        (1900549 'move' localThis[1900547] call_tmp[1900529])
                        const-val call_tmp[1900552]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        ref this[1900554]:_ref(string)[937939] "temp"
                        (1900556 'move' this[1900554](1900558 '.v' _iterator[1900508] F0_this[2000627]))
                        (1900561 'move' call_tmp[1900552](1900564 call isASCII[31046] this[1900554]))
                        const-val call_tmp[1900566]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1900568 'move' call_tmp[1900566] call_tmp[1900552])
                        if call_tmp[1900552]
                        {
                          val _indexOfInterest[1900573]:uint(8)[100] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                          val _iterator[1900575]:_ic_chpl_bytes__ref_string[1108256] "dead at end of block" "expr temp" "temp"
                          const-val call_tmp[1900577]:_ir_chpl_bytes__ref_string[1108262] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val ret_tmp[1900579]:_ir_chpl_bytes__ref_string[1108262] "temp"
                          ref this[1900581]:_ref(string)[937939] "temp"
                          (1900583 'move' this[1900581](1900585 '.v' _iterator[1900508] F0_this[2000627]))
                          (1900589 call chpl_bytes[33574] this[1900581] ret_tmp[1900579])
                          (1900592 'move' call_tmp[1900577] ret_tmp[1900579])
                          (1900595 'move' _iterator[1900575](1900598 call _getIterator[1108271] call_tmp[1900577]))
                          {
                            val ret[1900601]:_ir_chpl_bytes__ref_string[1108262] "dead at end of block" "RVV" "temp"
                            const-val call_tmp[1900603]:string[26] "dead at end of block" "maybe param" "temp"
                            const-val ret_tmp[1900605]:string[26] "temp"
                            ref this[1900607]:_ref(string)[937939] "temp"
                            (1900609 'move' this[1900607](1900611 '.v' _iterator[1900575] F0_this[1998453]))
                            (1900615 call localize[32886] this[1900607] ret_tmp[1900605])
                            (1900618 'move' call_tmp[1900603] ret_tmp[1900605])
                            val localThis[1900621]:string[26] "dead at end of block" "insert auto destroy"
                            (1900623 'move' localThis[1900621] call_tmp[1900603])
                            val _indexOfInterest[1900626]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                            val _iterator[1900628]:_ic_chpl_direct_counted_range_iter[1103790] "dead at end of block" "expr temp" "temp"
                            ref call_tmp[1900630]:_ref(int(64))[936572] "dead at end of block" "maybe param" "temp"
                            (1900632 'move' call_tmp[1900630](1900635 call buffLen[757886] localThis[1900621]))
                            const-val call_tmp[1900637]:_ir_chpl_direct_counted_range_iter[1103796] "dead at end of block" "expr temp" "maybe param" "temp"
                            const-val coerce_tmp[1900639]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1900641 'move' coerce_tmp[1900639](1900643 'deref' call_tmp[1900630]))
                            const-val ret_tmp[1900645]:_ir_chpl_direct_counted_range_iter[1103796] "temp"
                            (1900648 call chpl_direct_counted_range_iter[457996] 0 coerce_tmp[1900639] ret_tmp[1900645])
                            (1900652 'move' call_tmp[1900637] ret_tmp[1900645])
                            (1900655 'move' _iterator[1900628](1900658 call _getIterator[1103805] call_tmp[1900637]))
                            {
                              val ret[1900661]:_ir_chpl_direct_counted_range_iter[1103796] "dead after last mention" "RVV" "temp"
                              val _indexOfInterest[1900663]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                              val _iterator[1900665]:_ic_chpl_direct_counted_range_iter_helper[1103540] "dead at end of block" "expr temp" "temp"
                              const-val call_tmp[1900667]:_ir_chpl_direct_counted_range_iter_helper[1103546] "dead at end of block" "expr temp" "maybe param" "temp"
                              const-val ret_tmp[1900669]:_ir_chpl_direct_counted_range_iter_helper[1103546] "temp"
                              const-val low[1900671]:int(64)[13] "temp"
                              (1900673 'move' low[1900671](1900675 '.v' _iterator[1900628] F0_low[2010431]))
                              const-val count[1900678]:int(64)[13] "temp"
                              (1900680 'move' count[1900678](1900682 '.v' _iterator[1900628] F1_count[2010435]))
                              (1900686 call chpl_direct_counted_range_iter_helper[1102098] low[1900671] count[1900678] ret_tmp[1900669])
                              (1900690 'move' call_tmp[1900667] ret_tmp[1900669])
                              (1900693 'move' _iterator[1900665](1900696 call _getIterator[1103555] call_tmp[1900667]))
                              {
                                val ret[1962101]:_ir_chpl_direct_counted_range_iter_helper[1103546] "dead after last mention" "RVV" "temp"
                                val call_tmp[1962103]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                const-val tmp[1962105]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val tmp[1962107]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                                const-val call_tmp[1962109]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                const-val count[1962597]:int(64)[13] "temp"
                                (1962602 'move' count[1962597](1962599 '.v' _iterator[1900665] F1_count[2014907]))
                                (1962111 'move' call_tmp[1962109](1962114 call <[948398] count[1962597]))
                                (1962116 'move' tmp[1962107] call_tmp[1962109])
                                (1962119 'move' tmp[1962105] call_tmp[1962109])
                                const-val call_tmp[1962122]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1962124 'move' call_tmp[1962122] call_tmp[1962109])
                                if call_tmp[1962109]
                                {
                                  (1962130 call boundsCheckHalt[210167] "With a negative count, the range must have a last index.")
                                }
                                const-val tmp[1962133]:2*int(64)[1040056] "dead at end of block" "const" "insert auto destroy" "temp"
                                val tmp[1962135]:2*int(64)[1040056] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                                const-val tmp[1962137]:bool[10] "dead after last mention" "maybe param" "temp"
                                const-val call_tmp[1962139]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                const-val count[1962604]:int(64)[13] "temp"
                                (1962609 'move' count[1962604](1962606 '.v' _iterator[1900665] F1_count[2014907]))
                                (1962141 'move' call_tmp[1962139](1962144 call ==[435628] count[1962604] 0))
                                (1962147 'move' tmp[1962137] call_tmp[1962139])
                                if call_tmp[1962139]
                                {
                                  const-val tmp[1962152]:2*int(64)[1040056] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                                  val call_tmp[1962154]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                                  const-val call_tmp[1962156]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val low[1962611]:int(64)[13] "temp"
                                  (1962616 'move' low[1962611](1962613 '.v' _iterator[1900665] F0_low[2014903]))
                                  (1962158 'move' call_tmp[1962156](1962161 call _cast[956034] low[1962611]))
                                  const-val call_tmp[1962163]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val coerce_tmp[1962165]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                                  (1962167 'move' coerce_tmp[1962165](1962169 'cast' uint(64)[115] 1))
                                  (1962172 'move' call_tmp[1962163](1962175 call -[962193] call_tmp[1962156]))
                                  const-val call_tmp[1962177]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  (1962179 'move' call_tmp[1962177](1962182 call _cast[953543] call_tmp[1962163]))
                                  const-val ret_tmp[1962184]:2*int(64)[1040056] "temp"
                                  const-val low[1962618]:int(64)[13] "temp"
                                  (1962623 'move' low[1962618](1962620 '.v' _iterator[1900665] F0_low[2014903]))
                                  (1962187 call _build_tuple[1040014] low[1962618] call_tmp[1962177] ret_tmp[1962184])
                                  (1962191 'move' tmp[1962152] ret_tmp[1962184])
                                  (1962194 'move' tmp[1962135] tmp[1962152])
                                }
                                {
                                  const-val tmp[1962198]:2*int(64)[1040056] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                                  val call_tmp[1962200]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  const-val call_tmp[1962202]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val count[1962625]:int(64)[13] "temp"
                                  (1962630 'move' count[1962625](1962627 '.v' _iterator[1900665] F1_count[2014907]))
                                  (1962204 'move' call_tmp[1962202] count[1962625])
                                  const-val call_tmp[1962207]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val count[1962632]:int(64)[13] "temp"
                                  (1962637 'move' count[1962632](1962634 '.v' _iterator[1900665] F1_count[2014907]))
                                  (1962209 'move' call_tmp[1962207](1962212 call -[962226] count[1962632]))
                                  const-val call_tmp[1962214]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val low[1962639]:int(64)[13] "temp"
                                  (1962644 'move' low[1962639](1962641 '.v' _iterator[1900665] F0_low[2014903]))
                                  (1962216 'move' call_tmp[1962214](1962219 call +[439636] low[1962639] call_tmp[1962207]))
                                  const-val ret_tmp[1962222]:2*int(64)[1040056] "temp"
                                  const-val low[1962646]:int(64)[13] "temp"
                                  (1962651 'move' low[1962646](1962648 '.v' _iterator[1900665] F0_low[2014903]))
                                  (1962225 call _build_tuple[1040014] low[1962646] call_tmp[1962214] ret_tmp[1962222])
                                  (1962229 'move' tmp[1962198] ret_tmp[1962222])
                                  (1962232 'move' tmp[1962135] tmp[1962198])
                                }
                                (1962236 '=' tmp[1962133] tmp[1962135])
                                (1962239 'noop')
                                1
                                ref call_tmp[1962241]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
                                (1962243 'move' call_tmp[1962241](1962245 '.' tmp[1962133] x0[1040052]))
                                const-val start[1962248]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                const-val coerce_tmp[1962250]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                (1962252 'move' coerce_tmp[1962250](1962254 'deref' call_tmp[1962241]))
                                (1962256 '=' start[1962248] coerce_tmp[1962250])
                                (1962259 'noop')
                                ref call_tmp[1962260]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
                                (1962262 'move' call_tmp[1962260](1962264 '.' tmp[1962133] x1[1040054]))
                                const-val end[1962267]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                const-val coerce_tmp[1962269]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                (1962271 'move' coerce_tmp[1962269](1962273 'deref' call_tmp[1962260]))
                                (1962275 '=' end[1962267] coerce_tmp[1962269])
                                (1962278 'noop')
                                val _indexOfInterest[1962279]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                                val _iterator[1962281]:_ic_chpl_direct_param_stride_range_iter[1103286] "dead at end of block" "expr temp" "temp"
                                const-val call_tmp[1962283]:_ir_chpl_direct_param_stride_range_iter[1103292] "dead at end of block" "expr temp" "maybe param" "temp"
                                const-val ret_tmp[1962285]:_ir_chpl_direct_param_stride_range_iter[1103292] "temp"
                                (1962288 call chpl_direct_param_stride_range_iter[1102524] coerce_tmp[1962250] coerce_tmp[1962269] ret_tmp[1962285])
                                (1962292 'move' call_tmp[1962283] ret_tmp[1962285])
                                (1962295 'move' _iterator[1962281](1962298 call _getIterator[1103301] call_tmp[1962283]))
                                {
                                  val ret[1962301]:_ir_chpl_direct_param_stride_range_iter[1103292] "dead after last mention" "RVV" "temp"
                                  val call_tmp[1962303]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  (1962306 call chpl_range_check_stride[1102844])
                                  val i[1962307]:int(64)[13] "dead at end of block" "insert auto destroy"
                                  val call_tmp[1962309]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  (1962311 'move' i[1962307] 0)
                                  val call_tmp[1962314]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  const-val default_arg_first[1962316]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                                  const-val low[1962318]:int(64)[13] "temp"
                                  (1962320 'move' low[1962318](1962322 '.v' _iterator[1962281] F0_low[2016401]))
                                  (1962325 'move' default_arg_first[1962316](1962328 call chpl_checkIfRangeIterWillOverflow_default_first[1103198] low[1962318]))
                                  const-val default_arg_last[1962330]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                                  const-val high[1962332]:int(64)[13] "temp"
                                  (1962334 'move' high[1962332](1962336 '.v' _iterator[1962281] F1_high[2016405]))
                                  (1962339 'move' default_arg_last[1962330](1962342 call chpl_checkIfRangeIterWillOverflow_default_last[1103226] high[1962332]))
                                  const-val _return_tmp_[1962344]:bool[10] "dead after last mention" "temp"
                                  const-val low[1962346]:int(64)[13] "temp"
                                  (1962348 'move' low[1962346](1962350 '.v' _iterator[1962281] F0_low[2016401]))
                                  const-val high[1962353]:int(64)[13] "temp"
                                  (1962355 'move' high[1962353](1962357 '.v' _iterator[1962281] F1_high[2016405]))
                                  (1962360 'move' _return_tmp_[1962344](1962363 call chpl_checkIfRangeIterWillOverflow[1096076] low[1962346] high[1962353] 1 default_arg_first[1962316] default_arg_last[1962330] 1))
                                  CForLoop[1962370]
                                  {
                                    const-val yret[1962399]:int(64)[13] "dead after last mention" "YVV" "temp"
                                    (1962401 'move' yret[1962399] i[1962307])
                                    const-val _yieldedIndex[1962404]:int(64)[13] "temp"
                                    (1962406 'move' _yieldedIndex[1962404] i[1962307])
                                    {
                                      const-val i[1962410]:int(64)[13] "const" "index var" "insert auto destroy"
                                      (1962412 'move' i[1962410] _yieldedIndex[1962404])
                                      const-val yret[1962415]:int(64)[13] "dead after last mention" "YVV" "temp"
                                      (1962417 'move' yret[1962415] _yieldedIndex[1962404])
                                      const-val _yieldedIndex[1962445]:int(64)[13] "temp"
                                      (1962595 'move' _yieldedIndex[1962445] _yieldedIndex[1962404])
                                      {
                                        const-val i[1962447]:int(64)[13] "const" "index var" "insert auto destroy"
                                        (1962449 'move' i[1962447] _yieldedIndex[1962445])
                                        const-val yret[1962452]:int(64)[13] "dead after last mention" "YVV" "temp"
                                        (1962454 'move' yret[1962452] _yieldedIndex[1962445])
                                        const-val _yieldedIndex[1962457]:int(64)[13] "temp"
                                        (1962459 'move' _yieldedIndex[1962457] _yieldedIndex[1962445])
                                        {
                                          const-val i[1962463]:int(64)[13] "const" "index var" "insert auto destroy"
                                          (1962465 'move' i[1962463] _yieldedIndex[1962457])
                                          const-val yret[1962468]:uint(8)[100] "dead after last mention" "YVV" "temp"
                                          ref call_tmp[1962470]:_ref(uint(8))[936908] "dead after last mention" "maybe param" "temp"
                                          ref _this_tmp_[1962472]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "temp"
                                          (1962474 'move' _this_tmp_[1962472](1962477 call buff[757964] localThis[1900621]))
                                          val coerce_tmp[1962479]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                          (1962481 'move' coerce_tmp[1962479](1962483 'deref' _this_tmp_[1962472]))
                                          (1962485 'move' call_tmp[1962470](1962488 call this[954091] coerce_tmp[1962479] _yieldedIndex[1962457]))
                                          const-val coerce_tmp[1962491]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                          (1962493 'move' coerce_tmp[1962491](1962495 'deref' call_tmp[1962470]))
                                          (1962497 '=' yret[1962468] coerce_tmp[1962491])
                                          (1962500 'noop')
                                          const-val _yieldedIndex[1962501]:uint(8)[100] "temp"
                                          (1962503 'move' _yieldedIndex[1962501] coerce_tmp[1962491])
                                          {
                                            const-val b[1962507]:uint(8)[100] "const" "index var" "insert auto destroy"
                                            (1962509 'move' b[1962507] _yieldedIndex[1962501])
                                            val yret[1962512]:int(32)[95] "dead after last mention" "YVV" "temp"
                                            val call_tmp[1962514]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                            const-val _yieldedIndex[1962516]:int(32)[95] "temp"
                                            (1962518 'move' _yieldedIndex[1962516](1962520 'cast' int(32)[95] _yieldedIndex[1962501]))
                                            {
                                              const-val removeChar[1962524]:int(32)[95] "const" "index var" "insert auto destroy"
                                              (1962526 'move' removeChar[1962524] _yieldedIndex[1962516])
                                              {
                                                const-val call_tmp[1962530]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                                (1962532 'move' call_tmp[1962530](1962535 call ==[435606] thisChar[1900483] removeChar[1962524]))
                                                const-val call_tmp[1962538]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                                (1962540 'move' call_tmp[1962538] call_tmp[1962530])
                                                if call_tmp[1962538]
                                                {
                                                  const-val call_tmp[1962545]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                                  const-val ret_tmp[1962547]:byteIndex[28170] "temp"
                                                  (1962550 call +[28722] i[1900490] nBytes[1900497] ret_tmp[1962547])
                                                  (1962554 'move' call_tmp[1962545] ret_tmp[1962547])
                                                  (1962558 call =[38191] start[36193] call_tmp[1962545])
                                                  (1962562 call chpl__autoDestroy[1461793] call_tmp[1962545])
                                                  (1962589 call _freeIterator[1103474] _iterator[1962281])
                                                  (1962592 call chpl__autoDestroy[1534672] tmp[1962133])
                                                  (1962565 call _freeIterator[1103724] _iterator[1900665])
                                                  (1962568 call _freeIterator[1103974] _iterator[1900628])
                                                  (1962571 call chpl__autoDestroy[1461530] localThis[1900621])
                                                  (1962574 call _freeIterator[1109569] _iterator[1900575])
                                                  (1962577 call chpl__autoDestroy[1461530] localThis[1900547])
                                                  (1962580 call _freeIterator[1123136] _iterator[1900508])
                                                  continue _continueLabel[1901115] _continueLabel[1901115]
                                                }
                                              }
                                              label _continueLabel[1962585]
                                            }
                                          }
                                        }
                                      }
                                    }
                                    {
                                      const-val low[1962372]:int(64)[13] "temp"
                                      (1962374 'move' low[1962372](1962376 '.v' _iterator[1962281] F0_low[2016401]))
                                      (1962379 '=' i[1962307] low[1962372])
                                    }
                                    {
                                      const-val high[1962383]:int(64)[13] "temp"
                                      (1962385 'move' high[1962383](1962387 '.v' _iterator[1962281] F1_high[2016405]))
                                      (1962390 '<=' i[1962307] high[1962383])
                                    }
                                    {
                                      val call_tmp[1962394]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                      (1962396 '+=' i[1962307] 1)
                                    }
                                  }
                                  label _endchpl_direct_param_stride_range_iter[1962433]
                                }
                                (1962436 call _freeIterator[1103474] _iterator[1962281])
                                (1962439 call chpl__autoDestroy[1534672] tmp[1962133])
                                label _endchpl_direct_counted_range_iter_helper[1962441]
                              }
                              (1900842 call _freeIterator[1103724] _iterator[1900665])
                              label _endchpl_direct_counted_range_iter[1900844]
                            }
                            (1900847 call _freeIterator[1103974] _iterator[1900628])
                            (1900850 call chpl__autoDestroy[1461530] localThis[1900621])
                            label _endchpl_bytes[1900852]
                          }
                          (1900855 call _freeIterator[1109569] _iterator[1900575])
                        }
                        {
                          val i[1900858]:int(64)[13] "dead at end of block" "insert auto destroy"
                          (1900860 'move' i[1900858] 0)
                          val tmp[1900863]:bool[10] "dead after last mention" "temp"
                          ref call_tmp[1900865]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
                          (1900867 'move' call_tmp[1900865](1900870 call buffLen[757886] localThis[1900547]))
                          const-val call_tmp[1900872]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val coerce_tmp[1900874]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (1900876 'move' coerce_tmp[1900874](1900878 'deref' call_tmp[1900865]))
                          (1900880 'move' call_tmp[1900872](1900883 call <[437452] 0 coerce_tmp[1900874]))
                          (1900886 'move' tmp[1900863] call_tmp[1900872])
                          WhileDo[1900889]
                          {
                            ref call_tmp[1900891]:_ref(c_ptr(uint(8)))[937432] "dead at end of block" "maybe param" "temp"
                            (1900893 'move' call_tmp[1900891](1900896 call buff[757964] localThis[1900547]))
                            ref call_tmp[1900898]:_ref(int(64))[936572] "dead at end of block" "maybe param" "temp"
                            (1900900 'move' call_tmp[1900898](1900903 call buffLen[757886] localThis[1900547]))
                            const-val call_tmp[1900905]:(syserr,int(32),int(32))[964620] "dead at end of block" "maybe param" "temp"
                            val coerce_tmp[1900907]:c_ptr(uint(8))[937423] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1900909 'move' coerce_tmp[1900907](1900911 'deref' call_tmp[1900891]))
                            const-val coerce_tmp[1900913]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1900915 'move' coerce_tmp[1900913](1900917 'deref' call_tmp[1900898]))
                            const-val ret_tmp[1900919]:(syserr,int(32),int(32))[964620] "temp"
                            (1900922 call decodeHelp[174406] coerce_tmp[1900907] coerce_tmp[1900913] i[1900858] 1 ret_tmp[1900919])
                            (1900928 'move' call_tmp[1900905] ret_tmp[1900919])
                            const-val tmp[1900931]:(syserr,int(32),int(32))[964620] "dead at end of block" "const" "insert auto destroy" "temp"
                            (1900933 'move' tmp[1900931] call_tmp[1900905])
                            1
                            ref call_tmp[1900937]:_ref(syserr)[948832] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1900939 'move' call_tmp[1900937](1900941 '.' tmp[1900931] x0[964614]))
                            const-val decodeRet[1900944]:syserr[223584] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1900946]:syserr[223584] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1900948 'move' coerce_tmp[1900946](1900950 'deref' call_tmp[1900937]))
                            (1900952 'move' decodeRet[1900944](1900955 call chpl__initCopy[964485] coerce_tmp[1900946]))
                            ref call_tmp[1900957]:_ref(int(32))[936626] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1900959 'move' call_tmp[1900957](1900961 '.' tmp[1900931] x1[964616]))
                            const-val cp[1900964]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1900966]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1900968 'move' coerce_tmp[1900966](1900970 'deref' call_tmp[1900957]))
                            (1900972 'move' cp[1900964](1900975 call chpl__initCopy[964757] coerce_tmp[1900966]))
                            ref call_tmp[1900977]:_ref(int(32))[936626] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1900979 'move' call_tmp[1900977](1900981 '.' tmp[1900931] x2[964618]))
                            const-val nBytes[1900984]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1900986]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1900988 'move' coerce_tmp[1900986](1900990 'deref' call_tmp[1900977]))
                            (1900992 'move' nBytes[1900984](1900995 call chpl__initCopy[964757] coerce_tmp[1900986]))
                            const-val yret[1900997]:int(32)[95] "dead after last mention" "YVV" "temp"
                            val call_tmp[1900999]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                            (1901001 'move' yret[1900997] cp[1900964])
                            const-val _yieldedIndex[1901004]:int(32)[95] "temp"
                            (1901006 'move' _yieldedIndex[1901004] cp[1900964])
                            {
                              const-val removeChar[1901010]:int(32)[95] "const" "index var" "insert auto destroy"
                              (1901012 'move' removeChar[1901010] _yieldedIndex[1901004])
                              {
                                const-val call_tmp[1901016]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1901018 'move' call_tmp[1901016](1901021 call ==[435606] thisChar[1900483] removeChar[1901010]))
                                const-val call_tmp[1901024]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1901026 'move' call_tmp[1901024] call_tmp[1901016])
                                if call_tmp[1901024]
                                {
                                  const-val call_tmp[1901031]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                  const-val ret_tmp[1901033]:byteIndex[28170] "temp"
                                  (1901036 call +[28722] i[1900490] nBytes[1900497] ret_tmp[1901033])
                                  (1901040 'move' call_tmp[1901031] ret_tmp[1901033])
                                  (1901044 call =[38191] start[36193] call_tmp[1901031])
                                  (1901048 call chpl__autoDestroy[1461793] call_tmp[1901031])
                                  (1901051 call chpl__autoDestroy[1465403] tmp[1900931])
                                  (1901054 call chpl__autoDestroy[1461530] localThis[1900547])
                                  (1901057 call _freeIterator[1123136] _iterator[1900508])
                                  continue _continueLabel[1901115] _continueLabel[1901115]
                                }
                              }
                              label _continueLabel[1901062]
                            }
                            const-val coerce_tmp[1901064]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (1901066 'move' coerce_tmp[1901064](1901068 'cast' int(64)[13] nBytes[1900984]))
                            (1901072 call +=[451315] i[1900858] coerce_tmp[1901064])
                            (1901076 call chpl__autoDestroy[1465403] tmp[1900931])
                            ref call_tmp[1901078]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
                            (1901080 'move' call_tmp[1901078](1901083 call buffLen[757886] localThis[1900547]))
                            const-val call_tmp[1901085]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            const-val coerce_tmp[1901087]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (1901089 'move' coerce_tmp[1901087](1901091 'deref' call_tmp[1901078]))
                            (1901093 'move' call_tmp[1901085](1901096 call <[437452] i[1900858] coerce_tmp[1901087]))
                            (1901099 'move' tmp[1900863] call_tmp[1901085])
                            tmp[1900863]
                          }
                        }
                        (1901104 call chpl__autoDestroy[1461530] localThis[1900547])
                        label _endcodepoints[1901106]
                      }
                      label _breakLabel[1901108]
                      (1901111 call _freeIterator[1123136] _iterator[1900508])
                    }
                    (1901119 call chpl__autoDestroy[1461793] call_tmp[1899677])
                    (1901122 call chpl__autoDestroy[1465403] tmp[1899602])
                    (1901125 call chpl__autoDestroy[1461530] localThis[1898972])
                    break _breakLabel[36294] _breakLabel[36294]
                  }
                  label _continueLabel[1901115]
                }
                (1899728 call chpl__autoDestroy[1461793] call_tmp[1899677])
                const-val coerce_tmp[1899730]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1899732 'move' coerce_tmp[1899730](1899734 'cast' int(64)[13] nBytes[1899655]))
                (1899738 call +=[451315] i[1899321] coerce_tmp[1899730])
                (1899742 call chpl__autoDestroy[1465403] tmp[1899602])
                ref call_tmp[1899744]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
                (1899746 'move' call_tmp[1899744](1899749 call buffLen[757886] localThis[1898972]))
                const-val call_tmp[1899751]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[1899753]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1899755 'move' coerce_tmp[1899753](1899757 'deref' call_tmp[1899744]))
                (1899759 'move' call_tmp[1899751](1899762 call <[437452] i[1899321] coerce_tmp[1899753]))
                (1899765 'move' tmp[1899534] call_tmp[1899751])
                tmp[1899534]
              }
            }
            (1899770 call chpl__autoDestroy[1461530] localThis[1898972])
            label _end_cpIndexLen[1899772]
          }
          label _breakLabel[36294]
          (1842033 call _freeIterator[1122573] _iterator[36289])
          (1842035 call chpl__autoDestroy[1461793] default_arg_start[1122057])
        }
      }
      const-val call_tmp[601564]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (601567 'move' call_tmp[601564] trailing[36099])
      if call_tmp[601564]
      {
        (36353 call =[38165] end[36205] -1)
        {
          val _indexOfInterest[36436]:(int(32),byteIndex,int(64))[1122142] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[36437]:_ic__cpIndexLen__ref_string[1122385] "dead at end of block" "expr temp" "temp"
          const-val call_tmp[601576]:_ir__cpIndexLen__ref_string[1122391] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val ret_tmp[1829363]:_ir__cpIndexLen__ref_string[1122391] "temp"
          (36369 call _cpIndexLen[31106] localThis[36176] start[36193] ret_tmp[1829363])
          (1829366 'move' call_tmp[601576] ret_tmp[1829363])
          (36446 'move' _iterator[36437](36444 call _getIterator[1122400] call_tmp[601576]))
          {
            val ret[1901741]:_ir__cpIndexLen__ref_string[1122391] "dead after last mention" "RVV" "temp"
            const-val call_tmp[1901743]:string[26] "dead at end of block" "maybe param" "temp"
            const-val ret_tmp[1901745]:string[26] "temp"
            ref this[1903826]:_ref(string)[937939] "temp"
            (1903831 'move' this[1903826](1903828 '.v' _iterator[36437] F0_this[1997101]))
            (1901748 call localize[32886] this[1903826] ret_tmp[1901745])
            (1901751 'move' call_tmp[1901743] ret_tmp[1901745])
            val localThis[1901754]:string[26] "dead at end of block" "insert auto destroy"
            (1901756 'move' localThis[1901754] call_tmp[1901743])
            const-val call_tmp[1901759]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1901761 'move' call_tmp[1901759](1901764 call isASCII[31046] localThis[1901754]))
            const-val call_tmp[1901766]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1901768 'move' call_tmp[1901766] call_tmp[1901759])
            if call_tmp[1901759]
            {
              const-val _iterator[1901773]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108566] "dead at end of block" "expr temp" "insert auto destroy" "temp"
              const-val call_tmp[1901775]:range(int(64),bounded,false)[1026814] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
              const-val ret_tmp[1901777]:range(int(64),bounded,false)[1026814] "temp"
              ref this[1903833]:_ref(string)[937939] "temp"
              (1903838 'move' this[1903833](1903835 '.v' _iterator[36437] F0_this[1997101]))
              (1901780 call byteIndices[31065] this[1903833] ret_tmp[1901777])
              (1901783 'move' call_tmp[1901775] ret_tmp[1901777])
              val call_tmp[1901786]:_ic_these_range_int64_t_bounded_F[1096703] "dead at end of block" "expr temp" "maybe param" "temp"
              (1901788 'move' call_tmp[1901786](1901791 call _getIterator[1095320] call_tmp[1901775]))
              const-val call_tmp[1901793]:_ir_chpl_bytes__ref_string[1108262] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[1901795]:_ir_chpl_bytes__ref_string[1108262] "temp"
              ref this[1903840]:_ref(string)[937939] "temp"
              (1903845 'move' this[1903840](1903842 '.v' _iterator[36437] F0_this[1997101]))
              (1901798 call chpl_bytes[33574] this[1903840] ret_tmp[1901795])
              (1901801 'move' call_tmp[1901793] ret_tmp[1901795])
              val call_tmp[1901804]:_ic_chpl_bytes__ref_string[1108256] "dead at end of block" "expr temp" "maybe param" "temp"
              (1901806 'move' call_tmp[1901804](1901809 call _getIterator[1108271] call_tmp[1901793]))
              const-val ret_tmp[1901811]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108566] "temp"
              (1901814 call _build_tuple[1108524] call_tmp[1901786] call_tmp[1901804] ret_tmp[1901811])
              (1901818 'move' _iterator[1901773] ret_tmp[1901811])
              val _iterator[1901821]:_ic_these_range_int64_t_bounded_F[1096703] "temp"
              (1901823 'move' _iterator[1901821](1901825 '.v' _iterator[1901773] x0[1108562]))
              val _iterator[1901828]:_ic_chpl_bytes__ref_string[1108256] "temp"
              (1901830 'move' _iterator[1901828](1901832 '.v' _iterator[1901773] x1[1108564]))
              {
                (1901837 call zip1[1096738] _iterator[1901821])
              }
              {
                (1901841 call zip1[1108291] _iterator[1901828])
              }
              const-val isFinished[1901843]:bool[10] "temp"
              val hasMore[1901845]:bool[10] "temp"
              CForLoop[1901847]
              {
                val _indexOfInterest[1901870]:(int(64),uint(8))[1111040] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                {
                  (1901874 call zip2[1108300] _iterator[1901828])
                }
                {
                  const-val retTmp[1901877]:int(64)[13] "temp"
                  (1901879 'move' retTmp[1901877](1901882 call hasMore[1108327] _iterator[1901828]))
                  (1901884 'move' hasMore[1901845](1901886 'cast' bool[10] retTmp[1901877]))
                }
                (1901889 'move' isFinished[1901843](1901891 '!' hasMore[1901845]))
                if isFinished[1901843]
                {
                  (1901895 'chpl_error' c"zippered iterations have non-equal lengths")
                }
                {
                  (1901899 'move' _index[1901914](1901902 call getValue[1108336] _iterator[1901828]))
                }
                {
                  (1901906 call zip2[1096747] _iterator[1901821])
                }
                {
                  (1901909 'move' _index[1901920](1901912 call getValue[1096783] _iterator[1901821]))
                }
                val _index[1901914]:uint(8)[100] "temp"
                (1901916 '.=' _indexOfInterest[1901870] x1[1111038] _index[1901914])
                val _index[1901920]:int(64)[13] "temp"
                (1901922 '.=' _indexOfInterest[1901870] x0[1111036] _index[1901920])
                1
                const-val i[1901927]:int(64)[13] "const" "index var" "insert auto destroy"
                (1901929 'move' i[1901927](1901931 '.v' _indexOfInterest[1901870] x0[1111036]))
                const-val b[1901934]:uint(8)[100] "const" "index var" "insert auto destroy"
                (1901936 'move' b[1901934](1901938 '.v' _indexOfInterest[1901870] x1[1111038]))
                const-val yret[1901941]:(int(32),byteIndex,int(64))[1122142] "dead after last mention" "YVV" "temp"
                val call_tmp[1901943]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val call_tmp[1901945]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                (1901947 'move' call_tmp[1901945](1901949 'cast' int(32)[95] b[1901934]))
                const-val call_tmp[1901952]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1901954]:byteIndex[28170] "temp"
                (1901957 call _cast[39483] i[1901927] ret_tmp[1901954])
                (1901960 'move' call_tmp[1901952] ret_tmp[1901954])
                const-val call_tmp[1901963]:(int(32),byteIndex,int(64))[1122142] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1901965]:(int(32),byteIndex,int(64))[1122142] "temp"
                (1901968 call _build_tuple[1122092] call_tmp[1901945] call_tmp[1901952] 1 ret_tmp[1901965])
                (1901973 'move' call_tmp[1901963] ret_tmp[1901965])
                (1901976 'move' yret[1901941] call_tmp[1901963])
                const-val _yieldedIndex[1902558]:(int(32),byteIndex,int(64))[1122142] "temp"
                (1903190 'move' _yieldedIndex[1902558] call_tmp[1901963])
                {
                  1
                  const-val thisChar[1902561]:int(32)[95] "const" "index var" "insert auto destroy"
                  (1902563 'move' thisChar[1902561](1902565 '.v' _yieldedIndex[1902558] x0[1122136]))
                  ref i[1902568]:_ref(byteIndex)[948759] "index var" "insert auto destroy"
                  (1902570 'move' i[1902568](1902572 '.v' _yieldedIndex[1902558] x1[1122138]))
                  const-val nBytes[1902575]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1902577 'move' nBytes[1902575](1902579 '.v' _yieldedIndex[1902558] x2[1122140]))
                  {
                    {
                      val _indexOfInterest[1902584]:int(32)[95] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      val _iterator[1902586]:_ic_codepoints__ref_string[1122849] "dead at end of block" "expr temp" "temp"
                      const-val call_tmp[1902588]:_ir_codepoints__ref_string[1122855] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val ret_tmp[1902590]:_ir_codepoints__ref_string[1122855] "temp"
                      (1902593 call codepoints[33663] localChars[36187] ret_tmp[1902590])
                      (1902596 'move' call_tmp[1902588] ret_tmp[1902590])
                      (1902599 'move' _iterator[1902586](1902602 call _getIterator[1122864] call_tmp[1902588]))
                      {
                        val ret[1902605]:_ir_codepoints__ref_string[1122855] "dead at end of block" "RVV" "temp"
                        const-val call_tmp[1902607]:string[26] "dead at end of block" "maybe param" "temp"
                        const-val ret_tmp[1902609]:string[26] "temp"
                        ref this[1902611]:_ref(string)[937939] "temp"
                        (1902613 'move' this[1902611](1902615 '.v' _iterator[1902586] F0_this[2000627]))
                        (1902619 call localize[32886] this[1902611] ret_tmp[1902609])
                        (1902622 'move' call_tmp[1902607] ret_tmp[1902609])
                        val localThis[1902625]:string[26] "dead at end of block" "insert auto destroy"
                        (1902627 'move' localThis[1902625] call_tmp[1902607])
                        const-val call_tmp[1902630]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        ref this[1902632]:_ref(string)[937939] "temp"
                        (1902634 'move' this[1902632](1902636 '.v' _iterator[1902586] F0_this[2000627]))
                        (1902639 'move' call_tmp[1902630](1902642 call isASCII[31046] this[1902632]))
                        const-val call_tmp[1902644]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1902646 'move' call_tmp[1902644] call_tmp[1902630])
                        if call_tmp[1902630]
                        {
                          val _indexOfInterest[1902651]:uint(8)[100] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                          val _iterator[1902653]:_ic_chpl_bytes__ref_string[1108256] "dead at end of block" "expr temp" "temp"
                          const-val call_tmp[1902655]:_ir_chpl_bytes__ref_string[1108262] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val ret_tmp[1902657]:_ir_chpl_bytes__ref_string[1108262] "temp"
                          ref this[1902659]:_ref(string)[937939] "temp"
                          (1902661 'move' this[1902659](1902663 '.v' _iterator[1902586] F0_this[2000627]))
                          (1902667 call chpl_bytes[33574] this[1902659] ret_tmp[1902657])
                          (1902670 'move' call_tmp[1902655] ret_tmp[1902657])
                          (1902673 'move' _iterator[1902653](1902676 call _getIterator[1108271] call_tmp[1902655]))
                          {
                            val ret[1902679]:_ir_chpl_bytes__ref_string[1108262] "dead at end of block" "RVV" "temp"
                            const-val call_tmp[1902681]:string[26] "dead at end of block" "maybe param" "temp"
                            const-val ret_tmp[1902683]:string[26] "temp"
                            ref this[1902685]:_ref(string)[937939] "temp"
                            (1902687 'move' this[1902685](1902689 '.v' _iterator[1902653] F0_this[1998453]))
                            (1902693 call localize[32886] this[1902685] ret_tmp[1902683])
                            (1902696 'move' call_tmp[1902681] ret_tmp[1902683])
                            val localThis[1902699]:string[26] "dead at end of block" "insert auto destroy"
                            (1902701 'move' localThis[1902699] call_tmp[1902681])
                            val _indexOfInterest[1902704]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                            val _iterator[1902706]:_ic_chpl_direct_counted_range_iter[1103790] "dead at end of block" "expr temp" "temp"
                            ref call_tmp[1902708]:_ref(int(64))[936572] "dead at end of block" "maybe param" "temp"
                            (1902710 'move' call_tmp[1902708](1902713 call buffLen[757886] localThis[1902699]))
                            const-val call_tmp[1902715]:_ir_chpl_direct_counted_range_iter[1103796] "dead at end of block" "expr temp" "maybe param" "temp"
                            const-val coerce_tmp[1902717]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1902719 'move' coerce_tmp[1902717](1902721 'deref' call_tmp[1902708]))
                            const-val ret_tmp[1902723]:_ir_chpl_direct_counted_range_iter[1103796] "temp"
                            (1902726 call chpl_direct_counted_range_iter[457996] 0 coerce_tmp[1902717] ret_tmp[1902723])
                            (1902730 'move' call_tmp[1902715] ret_tmp[1902723])
                            (1902733 'move' _iterator[1902706](1902736 call _getIterator[1103805] call_tmp[1902715]))
                            {
                              val ret[1902739]:_ir_chpl_direct_counted_range_iter[1103796] "dead after last mention" "RVV" "temp"
                              val _indexOfInterest[1902741]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                              val _iterator[1902743]:_ic_chpl_direct_counted_range_iter_helper[1103540] "dead at end of block" "expr temp" "temp"
                              const-val call_tmp[1902745]:_ir_chpl_direct_counted_range_iter_helper[1103546] "dead at end of block" "expr temp" "maybe param" "temp"
                              const-val ret_tmp[1902747]:_ir_chpl_direct_counted_range_iter_helper[1103546] "temp"
                              const-val low[1902749]:int(64)[13] "temp"
                              (1902751 'move' low[1902749](1902753 '.v' _iterator[1902706] F0_low[2010431]))
                              const-val count[1902756]:int(64)[13] "temp"
                              (1902758 'move' count[1902756](1902760 '.v' _iterator[1902706] F1_count[2010435]))
                              (1902764 call chpl_direct_counted_range_iter_helper[1102098] low[1902749] count[1902756] ret_tmp[1902747])
                              (1902768 'move' call_tmp[1902745] ret_tmp[1902747])
                              (1902771 'move' _iterator[1902743](1902774 call _getIterator[1103555] call_tmp[1902745]))
                              {
                                val ret[1962654]:_ir_chpl_direct_counted_range_iter_helper[1103546] "dead after last mention" "RVV" "temp"
                                val call_tmp[1962656]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                const-val tmp[1962658]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val tmp[1962660]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                                const-val call_tmp[1962662]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                const-val count[1963131]:int(64)[13] "temp"
                                (1963136 'move' count[1963131](1963133 '.v' _iterator[1902743] F1_count[2014907]))
                                (1962664 'move' call_tmp[1962662](1962667 call <[948398] count[1963131]))
                                (1962669 'move' tmp[1962660] call_tmp[1962662])
                                (1962672 'move' tmp[1962658] call_tmp[1962662])
                                const-val call_tmp[1962675]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1962677 'move' call_tmp[1962675] call_tmp[1962662])
                                if call_tmp[1962662]
                                {
                                  (1962683 call boundsCheckHalt[210167] "With a negative count, the range must have a last index.")
                                }
                                const-val tmp[1962686]:2*int(64)[1040056] "dead at end of block" "const" "insert auto destroy" "temp"
                                val tmp[1962688]:2*int(64)[1040056] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                                const-val tmp[1962690]:bool[10] "dead after last mention" "maybe param" "temp"
                                const-val call_tmp[1962692]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                const-val count[1963138]:int(64)[13] "temp"
                                (1963143 'move' count[1963138](1963140 '.v' _iterator[1902743] F1_count[2014907]))
                                (1962694 'move' call_tmp[1962692](1962697 call ==[435628] count[1963138] 0))
                                (1962700 'move' tmp[1962690] call_tmp[1962692])
                                if call_tmp[1962692]
                                {
                                  const-val tmp[1962705]:2*int(64)[1040056] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                                  val call_tmp[1962707]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                                  const-val call_tmp[1962709]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val low[1963145]:int(64)[13] "temp"
                                  (1963150 'move' low[1963145](1963147 '.v' _iterator[1902743] F0_low[2014903]))
                                  (1962711 'move' call_tmp[1962709](1962714 call _cast[956034] low[1963145]))
                                  const-val call_tmp[1962716]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val coerce_tmp[1962718]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                                  (1962720 'move' coerce_tmp[1962718](1962722 'cast' uint(64)[115] 1))
                                  (1962725 'move' call_tmp[1962716](1962728 call -[962193] call_tmp[1962709]))
                                  const-val call_tmp[1962730]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  (1962732 'move' call_tmp[1962730](1962735 call _cast[953543] call_tmp[1962716]))
                                  const-val ret_tmp[1962737]:2*int(64)[1040056] "temp"
                                  const-val low[1963152]:int(64)[13] "temp"
                                  (1963157 'move' low[1963152](1963154 '.v' _iterator[1902743] F0_low[2014903]))
                                  (1962740 call _build_tuple[1040014] low[1963152] call_tmp[1962730] ret_tmp[1962737])
                                  (1962744 'move' tmp[1962705] ret_tmp[1962737])
                                  (1962747 'move' tmp[1962688] tmp[1962705])
                                }
                                {
                                  const-val tmp[1962751]:2*int(64)[1040056] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                                  val call_tmp[1962753]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  const-val call_tmp[1962755]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val count[1963159]:int(64)[13] "temp"
                                  (1963164 'move' count[1963159](1963161 '.v' _iterator[1902743] F1_count[2014907]))
                                  (1962757 'move' call_tmp[1962755] count[1963159])
                                  const-val call_tmp[1962760]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val count[1963166]:int(64)[13] "temp"
                                  (1963171 'move' count[1963166](1963168 '.v' _iterator[1902743] F1_count[2014907]))
                                  (1962762 'move' call_tmp[1962760](1962765 call -[962226] count[1963166]))
                                  const-val call_tmp[1962767]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val low[1963173]:int(64)[13] "temp"
                                  (1963178 'move' low[1963173](1963175 '.v' _iterator[1902743] F0_low[2014903]))
                                  (1962769 'move' call_tmp[1962767](1962772 call +[439636] low[1963173] call_tmp[1962760]))
                                  const-val ret_tmp[1962775]:2*int(64)[1040056] "temp"
                                  const-val low[1963180]:int(64)[13] "temp"
                                  (1963185 'move' low[1963180](1963182 '.v' _iterator[1902743] F0_low[2014903]))
                                  (1962778 call _build_tuple[1040014] low[1963180] call_tmp[1962767] ret_tmp[1962775])
                                  (1962782 'move' tmp[1962751] ret_tmp[1962775])
                                  (1962785 'move' tmp[1962688] tmp[1962751])
                                }
                                (1962789 '=' tmp[1962686] tmp[1962688])
                                (1962792 'noop')
                                1
                                ref call_tmp[1962794]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
                                (1962796 'move' call_tmp[1962794](1962798 '.' tmp[1962686] x0[1040052]))
                                const-val start[1962801]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                const-val coerce_tmp[1962803]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                (1962805 'move' coerce_tmp[1962803](1962807 'deref' call_tmp[1962794]))
                                (1962809 '=' start[1962801] coerce_tmp[1962803])
                                (1962812 'noop')
                                ref call_tmp[1962813]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
                                (1962815 'move' call_tmp[1962813](1962817 '.' tmp[1962686] x1[1040054]))
                                const-val end[1962820]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                const-val coerce_tmp[1962822]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                (1962824 'move' coerce_tmp[1962822](1962826 'deref' call_tmp[1962813]))
                                (1962828 '=' end[1962820] coerce_tmp[1962822])
                                (1962831 'noop')
                                val _indexOfInterest[1962832]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                                val _iterator[1962834]:_ic_chpl_direct_param_stride_range_iter[1103286] "dead at end of block" "expr temp" "temp"
                                const-val call_tmp[1962836]:_ir_chpl_direct_param_stride_range_iter[1103292] "dead at end of block" "expr temp" "maybe param" "temp"
                                const-val ret_tmp[1962838]:_ir_chpl_direct_param_stride_range_iter[1103292] "temp"
                                (1962841 call chpl_direct_param_stride_range_iter[1102524] coerce_tmp[1962803] coerce_tmp[1962822] ret_tmp[1962838])
                                (1962845 'move' call_tmp[1962836] ret_tmp[1962838])
                                (1962848 'move' _iterator[1962834](1962851 call _getIterator[1103301] call_tmp[1962836]))
                                {
                                  val ret[1962854]:_ir_chpl_direct_param_stride_range_iter[1103292] "dead after last mention" "RVV" "temp"
                                  val call_tmp[1962856]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  (1962859 call chpl_range_check_stride[1102844])
                                  val i[1962860]:int(64)[13] "dead at end of block" "insert auto destroy"
                                  val call_tmp[1962862]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  (1962864 'move' i[1962860] 0)
                                  val call_tmp[1962867]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  const-val default_arg_first[1962869]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                                  const-val low[1962871]:int(64)[13] "temp"
                                  (1962873 'move' low[1962871](1962875 '.v' _iterator[1962834] F0_low[2016401]))
                                  (1962878 'move' default_arg_first[1962869](1962881 call chpl_checkIfRangeIterWillOverflow_default_first[1103198] low[1962871]))
                                  const-val default_arg_last[1962883]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                                  const-val high[1962885]:int(64)[13] "temp"
                                  (1962887 'move' high[1962885](1962889 '.v' _iterator[1962834] F1_high[2016405]))
                                  (1962892 'move' default_arg_last[1962883](1962895 call chpl_checkIfRangeIterWillOverflow_default_last[1103226] high[1962885]))
                                  const-val _return_tmp_[1962897]:bool[10] "dead after last mention" "temp"
                                  const-val low[1962899]:int(64)[13] "temp"
                                  (1962901 'move' low[1962899](1962903 '.v' _iterator[1962834] F0_low[2016401]))
                                  const-val high[1962906]:int(64)[13] "temp"
                                  (1962908 'move' high[1962906](1962910 '.v' _iterator[1962834] F1_high[2016405]))
                                  (1962913 'move' _return_tmp_[1962897](1962916 call chpl_checkIfRangeIterWillOverflow[1096076] low[1962899] high[1962906] 1 default_arg_first[1962869] default_arg_last[1962883] 1))
                                  CForLoop[1962923]
                                  {
                                    const-val yret[1962952]:int(64)[13] "dead after last mention" "YVV" "temp"
                                    (1962954 'move' yret[1962952] i[1962860])
                                    const-val _yieldedIndex[1962957]:int(64)[13] "temp"
                                    (1962959 'move' _yieldedIndex[1962957] i[1962860])
                                    {
                                      const-val i[1962963]:int(64)[13] "const" "index var" "insert auto destroy"
                                      (1962965 'move' i[1962963] _yieldedIndex[1962957])
                                      const-val yret[1962968]:int(64)[13] "dead after last mention" "YVV" "temp"
                                      (1962970 'move' yret[1962968] _yieldedIndex[1962957])
                                      const-val _yieldedIndex[1962998]:int(64)[13] "temp"
                                      (1963129 'move' _yieldedIndex[1962998] _yieldedIndex[1962957])
                                      {
                                        const-val i[1963000]:int(64)[13] "const" "index var" "insert auto destroy"
                                        (1963002 'move' i[1963000] _yieldedIndex[1962998])
                                        const-val yret[1963005]:int(64)[13] "dead after last mention" "YVV" "temp"
                                        (1963007 'move' yret[1963005] _yieldedIndex[1962998])
                                        const-val _yieldedIndex[1963010]:int(64)[13] "temp"
                                        (1963012 'move' _yieldedIndex[1963010] _yieldedIndex[1962998])
                                        {
                                          const-val i[1963016]:int(64)[13] "const" "index var" "insert auto destroy"
                                          (1963018 'move' i[1963016] _yieldedIndex[1963010])
                                          const-val yret[1963021]:uint(8)[100] "dead after last mention" "YVV" "temp"
                                          ref call_tmp[1963023]:_ref(uint(8))[936908] "dead after last mention" "maybe param" "temp"
                                          ref _this_tmp_[1963025]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "temp"
                                          (1963027 'move' _this_tmp_[1963025](1963030 call buff[757964] localThis[1902699]))
                                          val coerce_tmp[1963032]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                          (1963034 'move' coerce_tmp[1963032](1963036 'deref' _this_tmp_[1963025]))
                                          (1963038 'move' call_tmp[1963023](1963041 call this[954091] coerce_tmp[1963032] _yieldedIndex[1963010]))
                                          const-val coerce_tmp[1963044]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                          (1963046 'move' coerce_tmp[1963044](1963048 'deref' call_tmp[1963023]))
                                          (1963050 '=' yret[1963021] coerce_tmp[1963044])
                                          (1963053 'noop')
                                          const-val _yieldedIndex[1963054]:uint(8)[100] "temp"
                                          (1963056 'move' _yieldedIndex[1963054] coerce_tmp[1963044])
                                          {
                                            const-val b[1963060]:uint(8)[100] "const" "index var" "insert auto destroy"
                                            (1963062 'move' b[1963060] _yieldedIndex[1963054])
                                            val yret[1963065]:int(32)[95] "dead after last mention" "YVV" "temp"
                                            val call_tmp[1963067]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                            const-val _yieldedIndex[1963069]:int(32)[95] "temp"
                                            (1963071 'move' _yieldedIndex[1963069](1963073 'cast' int(32)[95] _yieldedIndex[1963054]))
                                            {
                                              const-val removeChar[1963077]:int(32)[95] "const" "index var" "insert auto destroy"
                                              (1963079 'move' removeChar[1963077] _yieldedIndex[1963069])
                                              {
                                                const-val call_tmp[1963083]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                                (1963085 'move' call_tmp[1963083](1963088 call ==[435606] thisChar[1902561] removeChar[1963077]))
                                                const-val call_tmp[1963091]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                                (1963093 'move' call_tmp[1963091] call_tmp[1963083])
                                                if call_tmp[1963091]
                                                {
                                                  (1963123 call _freeIterator[1103474] _iterator[1962834])
                                                  (1963126 call chpl__autoDestroy[1534672] tmp[1962686])
                                                  (1963099 call _freeIterator[1103724] _iterator[1902743])
                                                  (1963102 call _freeIterator[1103974] _iterator[1902706])
                                                  (1963105 call chpl__autoDestroy[1461530] localThis[1902699])
                                                  (1963108 call _freeIterator[1109569] _iterator[1902653])
                                                  (1963111 call chpl__autoDestroy[1461530] localThis[1902625])
                                                  (1963114 call _freeIterator[1123136] _iterator[1902586])
                                                  continue _continueLabel[1903187] _continueLabel[1903187]
                                                }
                                              }
                                              label _continueLabel[1963119]
                                            }
                                          }
                                        }
                                      }
                                    }
                                    {
                                      const-val low[1962925]:int(64)[13] "temp"
                                      (1962927 'move' low[1962925](1962929 '.v' _iterator[1962834] F0_low[2016401]))
                                      (1962932 '=' i[1962860] low[1962925])
                                    }
                                    {
                                      const-val high[1962936]:int(64)[13] "temp"
                                      (1962938 'move' high[1962936](1962940 '.v' _iterator[1962834] F1_high[2016405]))
                                      (1962943 '<=' i[1962860] high[1962936])
                                    }
                                    {
                                      val call_tmp[1962947]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                      (1962949 '+=' i[1962860] 1)
                                    }
                                  }
                                  label _endchpl_direct_param_stride_range_iter[1962986]
                                }
                                (1962989 call _freeIterator[1103474] _iterator[1962834])
                                (1962992 call chpl__autoDestroy[1534672] tmp[1962686])
                                label _endchpl_direct_counted_range_iter_helper[1962994]
                              }
                              (1902901 call _freeIterator[1103724] _iterator[1902743])
                              label _endchpl_direct_counted_range_iter[1902903]
                            }
                            (1902906 call _freeIterator[1103974] _iterator[1902706])
                            (1902909 call chpl__autoDestroy[1461530] localThis[1902699])
                            label _endchpl_bytes[1902911]
                          }
                          (1902914 call _freeIterator[1109569] _iterator[1902653])
                        }
                        {
                          val i[1902917]:int(64)[13] "dead at end of block" "insert auto destroy"
                          (1902919 'move' i[1902917] 0)
                          val tmp[1902922]:bool[10] "dead after last mention" "temp"
                          ref call_tmp[1902924]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
                          (1902926 'move' call_tmp[1902924](1902929 call buffLen[757886] localThis[1902625]))
                          const-val call_tmp[1902931]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val coerce_tmp[1902933]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (1902935 'move' coerce_tmp[1902933](1902937 'deref' call_tmp[1902924]))
                          (1902939 'move' call_tmp[1902931](1902942 call <[437452] 0 coerce_tmp[1902933]))
                          (1902945 'move' tmp[1902922] call_tmp[1902931])
                          WhileDo[1902948]
                          {
                            ref call_tmp[1902950]:_ref(c_ptr(uint(8)))[937432] "dead at end of block" "maybe param" "temp"
                            (1902952 'move' call_tmp[1902950](1902955 call buff[757964] localThis[1902625]))
                            ref call_tmp[1902957]:_ref(int(64))[936572] "dead at end of block" "maybe param" "temp"
                            (1902959 'move' call_tmp[1902957](1902962 call buffLen[757886] localThis[1902625]))
                            const-val call_tmp[1902964]:(syserr,int(32),int(32))[964620] "dead at end of block" "maybe param" "temp"
                            val coerce_tmp[1902966]:c_ptr(uint(8))[937423] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1902968 'move' coerce_tmp[1902966](1902970 'deref' call_tmp[1902950]))
                            const-val coerce_tmp[1902972]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1902974 'move' coerce_tmp[1902972](1902976 'deref' call_tmp[1902957]))
                            const-val ret_tmp[1902978]:(syserr,int(32),int(32))[964620] "temp"
                            (1902981 call decodeHelp[174406] coerce_tmp[1902966] coerce_tmp[1902972] i[1902917] 1 ret_tmp[1902978])
                            (1902987 'move' call_tmp[1902964] ret_tmp[1902978])
                            const-val tmp[1902990]:(syserr,int(32),int(32))[964620] "dead at end of block" "const" "insert auto destroy" "temp"
                            (1902992 'move' tmp[1902990] call_tmp[1902964])
                            1
                            ref call_tmp[1902996]:_ref(syserr)[948832] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1902998 'move' call_tmp[1902996](1903000 '.' tmp[1902990] x0[964614]))
                            const-val decodeRet[1903003]:syserr[223584] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1903005]:syserr[223584] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1903007 'move' coerce_tmp[1903005](1903009 'deref' call_tmp[1902996]))
                            (1903011 'move' decodeRet[1903003](1903014 call chpl__initCopy[964485] coerce_tmp[1903005]))
                            ref call_tmp[1903016]:_ref(int(32))[936626] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1903018 'move' call_tmp[1903016](1903020 '.' tmp[1902990] x1[964616]))
                            const-val cp[1903023]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1903025]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1903027 'move' coerce_tmp[1903025](1903029 'deref' call_tmp[1903016]))
                            (1903031 'move' cp[1903023](1903034 call chpl__initCopy[964757] coerce_tmp[1903025]))
                            ref call_tmp[1903036]:_ref(int(32))[936626] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1903038 'move' call_tmp[1903036](1903040 '.' tmp[1902990] x2[964618]))
                            const-val nBytes[1903043]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1903045]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1903047 'move' coerce_tmp[1903045](1903049 'deref' call_tmp[1903036]))
                            (1903051 'move' nBytes[1903043](1903054 call chpl__initCopy[964757] coerce_tmp[1903045]))
                            const-val yret[1903056]:int(32)[95] "dead after last mention" "YVV" "temp"
                            val call_tmp[1903058]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                            (1903060 'move' yret[1903056] cp[1903023])
                            const-val _yieldedIndex[1903063]:int(32)[95] "temp"
                            (1903065 'move' _yieldedIndex[1903063] cp[1903023])
                            {
                              const-val removeChar[1903069]:int(32)[95] "const" "index var" "insert auto destroy"
                              (1903071 'move' removeChar[1903069] _yieldedIndex[1903063])
                              {
                                const-val call_tmp[1903075]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1903077 'move' call_tmp[1903075](1903080 call ==[435606] thisChar[1902561] removeChar[1903069]))
                                const-val call_tmp[1903083]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1903085 'move' call_tmp[1903083] call_tmp[1903075])
                                if call_tmp[1903083]
                                {
                                  (1903091 call chpl__autoDestroy[1465403] tmp[1902990])
                                  (1903094 call chpl__autoDestroy[1461530] localThis[1902625])
                                  (1903097 call _freeIterator[1123136] _iterator[1902586])
                                  continue _continueLabel[1903187] _continueLabel[1903187]
                                }
                              }
                              label _continueLabel[1903102]
                            }
                            const-val coerce_tmp[1903104]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (1903106 'move' coerce_tmp[1903104](1903108 'cast' int(64)[13] nBytes[1903043]))
                            (1903112 call +=[451315] i[1902917] coerce_tmp[1903104])
                            (1903116 call chpl__autoDestroy[1465403] tmp[1902990])
                            ref call_tmp[1903118]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
                            (1903120 'move' call_tmp[1903118](1903123 call buffLen[757886] localThis[1902625]))
                            const-val call_tmp[1903125]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            const-val coerce_tmp[1903127]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (1903129 'move' coerce_tmp[1903127](1903131 'deref' call_tmp[1903118]))
                            (1903133 'move' call_tmp[1903125](1903136 call <[437452] i[1902917] coerce_tmp[1903127]))
                            (1903139 'move' tmp[1902922] call_tmp[1903125])
                            tmp[1902922]
                          }
                        }
                        (1903144 call chpl__autoDestroy[1461530] localThis[1902625])
                        label _endcodepoints[1903146]
                      }
                      label _breakLabel[1903148]
                      (1903151 call _freeIterator[1123136] _iterator[1902586])
                    }
                    const-val call_tmp[1903153]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[1903155]:byteIndex[28170] "temp"
                    (1903158 call +[28722] i[1902568] nBytes[1902575] ret_tmp[1903155])
                    (1903162 'move' call_tmp[1903153] ret_tmp[1903155])
                    const-val call_tmp[1903165]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[1903167]:byteIndex[28170] "temp"
                    (1903170 call -[28854] call_tmp[1903153] 1 ret_tmp[1903167])
                    (1903174 'move' call_tmp[1903165] ret_tmp[1903167])
                    (1903178 call =[38191] end[36205] call_tmp[1903165])
                    (1903182 call chpl__autoDestroy[1461793] call_tmp[1903165])
                    (1903185 call chpl__autoDestroy[1461793] call_tmp[1903153])
                  }
                  label _continueLabel[1903187]
                }
                (1902050 call chpl__autoDestroy[1461793] call_tmp[1901952])
                {
                  (1902054 call zip3[1096756] _iterator[1901821])
                }
                {
                  (1902058 call zip3[1108309] _iterator[1901828])
                }
                {
                  {
                    (1901851 call init[1096792] _iterator[1901821])
                  }
                  {
                    (1901855 call init[1108345] _iterator[1901828])
                  }
                }
                {
                  (1901859 call hasMore[1096774] _iterator[1901821])
                }
                {
                  {
                    (1901864 call incr[1096801] _iterator[1901821])
                  }
                  {
                    (1901868 call incr[1108354] _iterator[1901828])
                  }
                }
              }
              {
                const-val retTmp[1902061]:int(64)[13] "temp"
                (1902063 'move' retTmp[1902061](1902066 call hasMore[1108327] _iterator[1901828]))
                (1902068 'move' hasMore[1901845](1902070 'cast' bool[10] retTmp[1902061]))
              }
              if hasMore[1901845]
              {
                (1902075 'chpl_error' c"zippered iterations have non-equal lengths")
              }
              {
                (1902080 call zip4[1108318] _iterator[1901828])
              }
              {
                (1902084 call zip4[1096765] _iterator[1901821])
              }
              (1902087 call _freeIterator[1108724] _iterator[1901773])
              (1902090 call chpl__autoDestroy[1541417] _iterator[1901773])
              (1902093 call chpl__autoDestroy[1534375] call_tmp[1901775])
            }
            {
              const-val call_tmp[1902096]:int(64)[13] "dead at end of block" "maybe param" "temp"
              ref start[1903847]:_ref(byteIndex)[948759] "temp"
              (1903852 'move' start[1903847](1903849 '.v' _iterator[36437] F1_start[1997105]))
              (1902098 'move' call_tmp[1902096](1902101 call _cast[39462] start[1903847]))
              val i[1902103]:int(64)[13] "dead at end of block" "insert auto destroy"
              (1902105 'move' i[1902103] call_tmp[1902096])
              const-val call_tmp[1902108]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1902110 'move' call_tmp[1902108](1902113 call >[437672] call_tmp[1902096] 0))
              const-val call_tmp[1902116]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1902118 'move' call_tmp[1902116] call_tmp[1902108])
              if call_tmp[1902108]
              {
                val tmp[1902123]:bool[10] "dead after last mention" "temp"
                const-val tmp[1902125]:bool[10] "dead after last mention" "maybe param" "temp"
                ref call_tmp[1902127]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
                (1902129 'move' call_tmp[1902127](1902132 call buffLen[757886] localThis[1901754]))
                const-val coerce_tmp[1902134]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1902136 'move' coerce_tmp[1902134](1902138 'deref' call_tmp[1902127]))
                (1902140 'move' tmp[1902125](1902143 call <[437452] i[1902103] coerce_tmp[1902134]))
                val tmp[1902146]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val tmp[1902148]:bool[10] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[1902150]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1902152 'move' call_tmp[1902150] tmp[1902125])
                (1902155 'move' tmp[1902148] tmp[1902125])
                if tmp[1902125]
                {
                  const-val tmp[1902160]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  ref call_tmp[1902162]:_ref(uint(8))[936908] "dead after last mention" "maybe param" "temp"
                  ref _this_tmp_[1902164]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "temp"
                  (1902166 'move' _this_tmp_[1902164](1902169 call buff[757964] localThis[1901754]))
                  val coerce_tmp[1902171]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1902173 'move' coerce_tmp[1902171](1902175 'deref' _this_tmp_[1902164]))
                  (1902177 'move' call_tmp[1902162](1902180 call this[954091] coerce_tmp[1902171] i[1902103]))
                  const-val call_tmp[1902183]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[1902185]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1902187 'move' coerce_tmp[1902185](1902189 'deref' call_tmp[1902162]))
                  (1902191 'move' call_tmp[1902183](1902194 call isInitialByte[181528] coerce_tmp[1902185]))
                  const-val call_tmp[1902196]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1902198 'move' call_tmp[1902196](1902201 call ![7494] call_tmp[1902183]))
                  (1902203 'move' tmp[1902160] call_tmp[1902196])
                  (1902206 'move' tmp[1902146] call_tmp[1902196])
                }
                {
                  (1902210 'move' tmp[1902146] 0)
                }
                (1902214 'move' tmp[1902123] tmp[1902146])
                WhileDo[1902217]
                {
                  (1902220 call +=[451315] i[1902103] 1)
                  const-val tmp[1902223]:bool[10] "dead after last mention" "maybe param" "temp"
                  ref call_tmp[1902225]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
                  (1902227 'move' call_tmp[1902225](1902230 call buffLen[757886] localThis[1901754]))
                  const-val coerce_tmp[1902232]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1902234 'move' coerce_tmp[1902232](1902236 'deref' call_tmp[1902225]))
                  (1902238 'move' tmp[1902223](1902241 call <[437452] i[1902103] coerce_tmp[1902232]))
                  val tmp[1902244]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                  const-val tmp[1902246]:bool[10] "dead after last mention" "maybe param" "temp"
                  const-val call_tmp[1902248]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1902250 'move' call_tmp[1902248] tmp[1902223])
                  (1902253 'move' tmp[1902246] tmp[1902223])
                  if tmp[1902223]
                  {
                    const-val tmp[1902258]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                    ref call_tmp[1902260]:_ref(uint(8))[936908] "dead after last mention" "maybe param" "temp"
                    ref _this_tmp_[1902262]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "temp"
                    (1902264 'move' _this_tmp_[1902262](1902267 call buff[757964] localThis[1901754]))
                    val coerce_tmp[1902269]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1902271 'move' coerce_tmp[1902269](1902273 'deref' _this_tmp_[1902262]))
                    (1902275 'move' call_tmp[1902260](1902278 call this[954091] coerce_tmp[1902269] i[1902103]))
                    const-val call_tmp[1902281]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[1902283]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1902285 'move' coerce_tmp[1902283](1902287 'deref' call_tmp[1902260]))
                    (1902289 'move' call_tmp[1902281](1902292 call isInitialByte[181528] coerce_tmp[1902283]))
                    const-val call_tmp[1902294]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1902296 'move' call_tmp[1902294](1902299 call ![7494] call_tmp[1902281]))
                    (1902301 'move' tmp[1902258] call_tmp[1902294])
                    (1902304 'move' tmp[1902244] call_tmp[1902294])
                  }
                  {
                    (1902308 'move' tmp[1902244] 0)
                  }
                  (1902312 'move' tmp[1902123] tmp[1902244])
                  tmp[1902123]
                }
              }
              val tmp[1902316]:bool[10] "dead after last mention" "temp"
              ref call_tmp[1902318]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
              (1902320 'move' call_tmp[1902318](1902323 call buffLen[757886] localThis[1901754]))
              const-val call_tmp[1902325]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1902327]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1902329 'move' coerce_tmp[1902327](1902331 'deref' call_tmp[1902318]))
              (1902333 'move' call_tmp[1902325](1902336 call <[437452] i[1902103] coerce_tmp[1902327]))
              (1902339 'move' tmp[1902316] call_tmp[1902325])
              WhileDo[1902342]
              {
                ref call_tmp[1902344]:_ref(c_ptr(uint(8)))[937432] "dead at end of block" "maybe param" "temp"
                (1902346 'move' call_tmp[1902344](1902349 call buff[757964] localThis[1901754]))
                ref call_tmp[1902351]:_ref(int(64))[936572] "dead at end of block" "maybe param" "temp"
                (1902353 'move' call_tmp[1902351](1902356 call buffLen[757886] localThis[1901754]))
                const-val call_tmp[1902358]:(syserr,int(32),int(32))[964620] "dead at end of block" "maybe param" "temp"
                val coerce_tmp[1902360]:c_ptr(uint(8))[937423] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1902362 'move' coerce_tmp[1902360](1902364 'deref' call_tmp[1902344]))
                const-val coerce_tmp[1902366]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1902368 'move' coerce_tmp[1902366](1902370 'deref' call_tmp[1902351]))
                const-val ret_tmp[1902372]:(syserr,int(32),int(32))[964620] "temp"
                (1902375 call decodeHelp[174406] coerce_tmp[1902360] coerce_tmp[1902366] i[1902103] 1 ret_tmp[1902372])
                (1902381 'move' call_tmp[1902358] ret_tmp[1902372])
                const-val tmp[1902384]:(syserr,int(32),int(32))[964620] "dead at end of block" "const" "insert auto destroy" "temp"
                (1902386 'move' tmp[1902384] call_tmp[1902358])
                1
                ref call_tmp[1902390]:_ref(syserr)[948832] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1902392 'move' call_tmp[1902390](1902394 '.' tmp[1902384] x0[964614]))
                const-val decodeRet[1902397]:syserr[223584] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1902399]:syserr[223584] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1902401 'move' coerce_tmp[1902399](1902403 'deref' call_tmp[1902390]))
                (1902405 'move' decodeRet[1902397](1902408 call chpl__initCopy[964485] coerce_tmp[1902399]))
                ref call_tmp[1902410]:_ref(int(32))[936626] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1902412 'move' call_tmp[1902410](1902414 '.' tmp[1902384] x1[964616]))
                const-val cp[1902417]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1902419]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1902421 'move' coerce_tmp[1902419](1902423 'deref' call_tmp[1902410]))
                (1902425 'move' cp[1902417](1902428 call chpl__initCopy[964757] coerce_tmp[1902419]))
                ref call_tmp[1902430]:_ref(int(32))[936626] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1902432 'move' call_tmp[1902430](1902434 '.' tmp[1902384] x2[964618]))
                const-val nBytes[1902437]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1902439]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1902441 'move' coerce_tmp[1902439](1902443 'deref' call_tmp[1902430]))
                (1902445 'move' nBytes[1902437](1902448 call chpl__initCopy[964757] coerce_tmp[1902439]))
                const-val yret[1902450]:(int(32),byteIndex,int(64))[1122142] "dead after last mention" "YVV" "temp"
                val call_tmp[1902452]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val call_tmp[1902454]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                (1902456 'move' call_tmp[1902454] cp[1902417])
                const-val call_tmp[1902459]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1902461]:byteIndex[28170] "temp"
                (1902464 call _cast[39483] i[1902103] ret_tmp[1902461])
                (1902467 'move' call_tmp[1902459] ret_tmp[1902461])
                const-val call_tmp[1902470]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                (1902472 'move' call_tmp[1902470](1902474 'cast' int(64)[13] nBytes[1902437]))
                const-val call_tmp[1902477]:(int(32),byteIndex,int(64))[1122142] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1902479]:(int(32),byteIndex,int(64))[1122142] "temp"
                (1902482 call _build_tuple[1122092] cp[1902417] call_tmp[1902459] call_tmp[1902470] ret_tmp[1902479])
                (1902487 'move' call_tmp[1902477] ret_tmp[1902479])
                (1902490 'move' yret[1902450] call_tmp[1902477])
                const-val _yieldedIndex[1903192]:(int(32),byteIndex,int(64))[1122142] "temp"
                (1903824 'move' _yieldedIndex[1903192] call_tmp[1902477])
                {
                  1
                  const-val thisChar[1903195]:int(32)[95] "const" "index var" "insert auto destroy"
                  (1903197 'move' thisChar[1903195](1903199 '.v' _yieldedIndex[1903192] x0[1122136]))
                  ref i[1903202]:_ref(byteIndex)[948759] "index var" "insert auto destroy"
                  (1903204 'move' i[1903202](1903206 '.v' _yieldedIndex[1903192] x1[1122138]))
                  const-val nBytes[1903209]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1903211 'move' nBytes[1903209](1903213 '.v' _yieldedIndex[1903192] x2[1122140]))
                  {
                    {
                      val _indexOfInterest[1903218]:int(32)[95] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      val _iterator[1903220]:_ic_codepoints__ref_string[1122849] "dead at end of block" "expr temp" "temp"
                      const-val call_tmp[1903222]:_ir_codepoints__ref_string[1122855] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val ret_tmp[1903224]:_ir_codepoints__ref_string[1122855] "temp"
                      (1903227 call codepoints[33663] localChars[36187] ret_tmp[1903224])
                      (1903230 'move' call_tmp[1903222] ret_tmp[1903224])
                      (1903233 'move' _iterator[1903220](1903236 call _getIterator[1122864] call_tmp[1903222]))
                      {
                        val ret[1903239]:_ir_codepoints__ref_string[1122855] "dead at end of block" "RVV" "temp"
                        const-val call_tmp[1903241]:string[26] "dead at end of block" "maybe param" "temp"
                        const-val ret_tmp[1903243]:string[26] "temp"
                        ref this[1903245]:_ref(string)[937939] "temp"
                        (1903247 'move' this[1903245](1903249 '.v' _iterator[1903220] F0_this[2000627]))
                        (1903253 call localize[32886] this[1903245] ret_tmp[1903243])
                        (1903256 'move' call_tmp[1903241] ret_tmp[1903243])
                        val localThis[1903259]:string[26] "dead at end of block" "insert auto destroy"
                        (1903261 'move' localThis[1903259] call_tmp[1903241])
                        const-val call_tmp[1903264]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        ref this[1903266]:_ref(string)[937939] "temp"
                        (1903268 'move' this[1903266](1903270 '.v' _iterator[1903220] F0_this[2000627]))
                        (1903273 'move' call_tmp[1903264](1903276 call isASCII[31046] this[1903266]))
                        const-val call_tmp[1903278]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1903280 'move' call_tmp[1903278] call_tmp[1903264])
                        if call_tmp[1903264]
                        {
                          val _indexOfInterest[1903285]:uint(8)[100] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                          val _iterator[1903287]:_ic_chpl_bytes__ref_string[1108256] "dead at end of block" "expr temp" "temp"
                          const-val call_tmp[1903289]:_ir_chpl_bytes__ref_string[1108262] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val ret_tmp[1903291]:_ir_chpl_bytes__ref_string[1108262] "temp"
                          ref this[1903293]:_ref(string)[937939] "temp"
                          (1903295 'move' this[1903293](1903297 '.v' _iterator[1903220] F0_this[2000627]))
                          (1903301 call chpl_bytes[33574] this[1903293] ret_tmp[1903291])
                          (1903304 'move' call_tmp[1903289] ret_tmp[1903291])
                          (1903307 'move' _iterator[1903287](1903310 call _getIterator[1108271] call_tmp[1903289]))
                          {
                            val ret[1903313]:_ir_chpl_bytes__ref_string[1108262] "dead at end of block" "RVV" "temp"
                            const-val call_tmp[1903315]:string[26] "dead at end of block" "maybe param" "temp"
                            const-val ret_tmp[1903317]:string[26] "temp"
                            ref this[1903319]:_ref(string)[937939] "temp"
                            (1903321 'move' this[1903319](1903323 '.v' _iterator[1903287] F0_this[1998453]))
                            (1903327 call localize[32886] this[1903319] ret_tmp[1903317])
                            (1903330 'move' call_tmp[1903315] ret_tmp[1903317])
                            val localThis[1903333]:string[26] "dead at end of block" "insert auto destroy"
                            (1903335 'move' localThis[1903333] call_tmp[1903315])
                            val _indexOfInterest[1903338]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                            val _iterator[1903340]:_ic_chpl_direct_counted_range_iter[1103790] "dead at end of block" "expr temp" "temp"
                            ref call_tmp[1903342]:_ref(int(64))[936572] "dead at end of block" "maybe param" "temp"
                            (1903344 'move' call_tmp[1903342](1903347 call buffLen[757886] localThis[1903333]))
                            const-val call_tmp[1903349]:_ir_chpl_direct_counted_range_iter[1103796] "dead at end of block" "expr temp" "maybe param" "temp"
                            const-val coerce_tmp[1903351]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1903353 'move' coerce_tmp[1903351](1903355 'deref' call_tmp[1903342]))
                            const-val ret_tmp[1903357]:_ir_chpl_direct_counted_range_iter[1103796] "temp"
                            (1903360 call chpl_direct_counted_range_iter[457996] 0 coerce_tmp[1903351] ret_tmp[1903357])
                            (1903364 'move' call_tmp[1903349] ret_tmp[1903357])
                            (1903367 'move' _iterator[1903340](1903370 call _getIterator[1103805] call_tmp[1903349]))
                            {
                              val ret[1903373]:_ir_chpl_direct_counted_range_iter[1103796] "dead after last mention" "RVV" "temp"
                              val _indexOfInterest[1903375]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                              val _iterator[1903377]:_ic_chpl_direct_counted_range_iter_helper[1103540] "dead at end of block" "expr temp" "temp"
                              const-val call_tmp[1903379]:_ir_chpl_direct_counted_range_iter_helper[1103546] "dead at end of block" "expr temp" "maybe param" "temp"
                              const-val ret_tmp[1903381]:_ir_chpl_direct_counted_range_iter_helper[1103546] "temp"
                              const-val low[1903383]:int(64)[13] "temp"
                              (1903385 'move' low[1903383](1903387 '.v' _iterator[1903340] F0_low[2010431]))
                              const-val count[1903390]:int(64)[13] "temp"
                              (1903392 'move' count[1903390](1903394 '.v' _iterator[1903340] F1_count[2010435]))
                              (1903398 call chpl_direct_counted_range_iter_helper[1102098] low[1903383] count[1903390] ret_tmp[1903381])
                              (1903402 'move' call_tmp[1903379] ret_tmp[1903381])
                              (1903405 'move' _iterator[1903377](1903408 call _getIterator[1103555] call_tmp[1903379]))
                              {
                                val ret[1963188]:_ir_chpl_direct_counted_range_iter_helper[1103546] "dead after last mention" "RVV" "temp"
                                val call_tmp[1963190]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                const-val tmp[1963192]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val tmp[1963194]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                                const-val call_tmp[1963196]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                const-val count[1963665]:int(64)[13] "temp"
                                (1963670 'move' count[1963665](1963667 '.v' _iterator[1903377] F1_count[2014907]))
                                (1963198 'move' call_tmp[1963196](1963201 call <[948398] count[1963665]))
                                (1963203 'move' tmp[1963194] call_tmp[1963196])
                                (1963206 'move' tmp[1963192] call_tmp[1963196])
                                const-val call_tmp[1963209]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1963211 'move' call_tmp[1963209] call_tmp[1963196])
                                if call_tmp[1963196]
                                {
                                  (1963217 call boundsCheckHalt[210167] "With a negative count, the range must have a last index.")
                                }
                                const-val tmp[1963220]:2*int(64)[1040056] "dead at end of block" "const" "insert auto destroy" "temp"
                                val tmp[1963222]:2*int(64)[1040056] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                                const-val tmp[1963224]:bool[10] "dead after last mention" "maybe param" "temp"
                                const-val call_tmp[1963226]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                const-val count[1963672]:int(64)[13] "temp"
                                (1963677 'move' count[1963672](1963674 '.v' _iterator[1903377] F1_count[2014907]))
                                (1963228 'move' call_tmp[1963226](1963231 call ==[435628] count[1963672] 0))
                                (1963234 'move' tmp[1963224] call_tmp[1963226])
                                if call_tmp[1963226]
                                {
                                  const-val tmp[1963239]:2*int(64)[1040056] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                                  val call_tmp[1963241]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                                  const-val call_tmp[1963243]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val low[1963679]:int(64)[13] "temp"
                                  (1963684 'move' low[1963679](1963681 '.v' _iterator[1903377] F0_low[2014903]))
                                  (1963245 'move' call_tmp[1963243](1963248 call _cast[956034] low[1963679]))
                                  const-val call_tmp[1963250]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val coerce_tmp[1963252]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                                  (1963254 'move' coerce_tmp[1963252](1963256 'cast' uint(64)[115] 1))
                                  (1963259 'move' call_tmp[1963250](1963262 call -[962193] call_tmp[1963243]))
                                  const-val call_tmp[1963264]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  (1963266 'move' call_tmp[1963264](1963269 call _cast[953543] call_tmp[1963250]))
                                  const-val ret_tmp[1963271]:2*int(64)[1040056] "temp"
                                  const-val low[1963686]:int(64)[13] "temp"
                                  (1963691 'move' low[1963686](1963688 '.v' _iterator[1903377] F0_low[2014903]))
                                  (1963274 call _build_tuple[1040014] low[1963686] call_tmp[1963264] ret_tmp[1963271])
                                  (1963278 'move' tmp[1963239] ret_tmp[1963271])
                                  (1963281 'move' tmp[1963222] tmp[1963239])
                                }
                                {
                                  const-val tmp[1963285]:2*int(64)[1040056] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                                  val call_tmp[1963287]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  const-val call_tmp[1963289]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val count[1963693]:int(64)[13] "temp"
                                  (1963698 'move' count[1963693](1963695 '.v' _iterator[1903377] F1_count[2014907]))
                                  (1963291 'move' call_tmp[1963289] count[1963693])
                                  const-val call_tmp[1963294]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val count[1963700]:int(64)[13] "temp"
                                  (1963705 'move' count[1963700](1963702 '.v' _iterator[1903377] F1_count[2014907]))
                                  (1963296 'move' call_tmp[1963294](1963299 call -[962226] count[1963700]))
                                  const-val call_tmp[1963301]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val low[1963707]:int(64)[13] "temp"
                                  (1963712 'move' low[1963707](1963709 '.v' _iterator[1903377] F0_low[2014903]))
                                  (1963303 'move' call_tmp[1963301](1963306 call +[439636] low[1963707] call_tmp[1963294]))
                                  const-val ret_tmp[1963309]:2*int(64)[1040056] "temp"
                                  const-val low[1963714]:int(64)[13] "temp"
                                  (1963719 'move' low[1963714](1963716 '.v' _iterator[1903377] F0_low[2014903]))
                                  (1963312 call _build_tuple[1040014] low[1963714] call_tmp[1963301] ret_tmp[1963309])
                                  (1963316 'move' tmp[1963285] ret_tmp[1963309])
                                  (1963319 'move' tmp[1963222] tmp[1963285])
                                }
                                (1963323 '=' tmp[1963220] tmp[1963222])
                                (1963326 'noop')
                                1
                                ref call_tmp[1963328]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
                                (1963330 'move' call_tmp[1963328](1963332 '.' tmp[1963220] x0[1040052]))
                                const-val start[1963335]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                const-val coerce_tmp[1963337]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                (1963339 'move' coerce_tmp[1963337](1963341 'deref' call_tmp[1963328]))
                                (1963343 '=' start[1963335] coerce_tmp[1963337])
                                (1963346 'noop')
                                ref call_tmp[1963347]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
                                (1963349 'move' call_tmp[1963347](1963351 '.' tmp[1963220] x1[1040054]))
                                const-val end[1963354]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                const-val coerce_tmp[1963356]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                (1963358 'move' coerce_tmp[1963356](1963360 'deref' call_tmp[1963347]))
                                (1963362 '=' end[1963354] coerce_tmp[1963356])
                                (1963365 'noop')
                                val _indexOfInterest[1963366]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                                val _iterator[1963368]:_ic_chpl_direct_param_stride_range_iter[1103286] "dead at end of block" "expr temp" "temp"
                                const-val call_tmp[1963370]:_ir_chpl_direct_param_stride_range_iter[1103292] "dead at end of block" "expr temp" "maybe param" "temp"
                                const-val ret_tmp[1963372]:_ir_chpl_direct_param_stride_range_iter[1103292] "temp"
                                (1963375 call chpl_direct_param_stride_range_iter[1102524] coerce_tmp[1963337] coerce_tmp[1963356] ret_tmp[1963372])
                                (1963379 'move' call_tmp[1963370] ret_tmp[1963372])
                                (1963382 'move' _iterator[1963368](1963385 call _getIterator[1103301] call_tmp[1963370]))
                                {
                                  val ret[1963388]:_ir_chpl_direct_param_stride_range_iter[1103292] "dead after last mention" "RVV" "temp"
                                  val call_tmp[1963390]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  (1963393 call chpl_range_check_stride[1102844])
                                  val i[1963394]:int(64)[13] "dead at end of block" "insert auto destroy"
                                  val call_tmp[1963396]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  (1963398 'move' i[1963394] 0)
                                  val call_tmp[1963401]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  const-val default_arg_first[1963403]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                                  const-val low[1963405]:int(64)[13] "temp"
                                  (1963407 'move' low[1963405](1963409 '.v' _iterator[1963368] F0_low[2016401]))
                                  (1963412 'move' default_arg_first[1963403](1963415 call chpl_checkIfRangeIterWillOverflow_default_first[1103198] low[1963405]))
                                  const-val default_arg_last[1963417]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                                  const-val high[1963419]:int(64)[13] "temp"
                                  (1963421 'move' high[1963419](1963423 '.v' _iterator[1963368] F1_high[2016405]))
                                  (1963426 'move' default_arg_last[1963417](1963429 call chpl_checkIfRangeIterWillOverflow_default_last[1103226] high[1963419]))
                                  const-val _return_tmp_[1963431]:bool[10] "dead after last mention" "temp"
                                  const-val low[1963433]:int(64)[13] "temp"
                                  (1963435 'move' low[1963433](1963437 '.v' _iterator[1963368] F0_low[2016401]))
                                  const-val high[1963440]:int(64)[13] "temp"
                                  (1963442 'move' high[1963440](1963444 '.v' _iterator[1963368] F1_high[2016405]))
                                  (1963447 'move' _return_tmp_[1963431](1963450 call chpl_checkIfRangeIterWillOverflow[1096076] low[1963433] high[1963440] 1 default_arg_first[1963403] default_arg_last[1963417] 1))
                                  CForLoop[1963457]
                                  {
                                    const-val yret[1963486]:int(64)[13] "dead after last mention" "YVV" "temp"
                                    (1963488 'move' yret[1963486] i[1963394])
                                    const-val _yieldedIndex[1963491]:int(64)[13] "temp"
                                    (1963493 'move' _yieldedIndex[1963491] i[1963394])
                                    {
                                      const-val i[1963497]:int(64)[13] "const" "index var" "insert auto destroy"
                                      (1963499 'move' i[1963497] _yieldedIndex[1963491])
                                      const-val yret[1963502]:int(64)[13] "dead after last mention" "YVV" "temp"
                                      (1963504 'move' yret[1963502] _yieldedIndex[1963491])
                                      const-val _yieldedIndex[1963532]:int(64)[13] "temp"
                                      (1963663 'move' _yieldedIndex[1963532] _yieldedIndex[1963491])
                                      {
                                        const-val i[1963534]:int(64)[13] "const" "index var" "insert auto destroy"
                                        (1963536 'move' i[1963534] _yieldedIndex[1963532])
                                        const-val yret[1963539]:int(64)[13] "dead after last mention" "YVV" "temp"
                                        (1963541 'move' yret[1963539] _yieldedIndex[1963532])
                                        const-val _yieldedIndex[1963544]:int(64)[13] "temp"
                                        (1963546 'move' _yieldedIndex[1963544] _yieldedIndex[1963532])
                                        {
                                          const-val i[1963550]:int(64)[13] "const" "index var" "insert auto destroy"
                                          (1963552 'move' i[1963550] _yieldedIndex[1963544])
                                          const-val yret[1963555]:uint(8)[100] "dead after last mention" "YVV" "temp"
                                          ref call_tmp[1963557]:_ref(uint(8))[936908] "dead after last mention" "maybe param" "temp"
                                          ref _this_tmp_[1963559]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "temp"
                                          (1963561 'move' _this_tmp_[1963559](1963564 call buff[757964] localThis[1903333]))
                                          val coerce_tmp[1963566]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                          (1963568 'move' coerce_tmp[1963566](1963570 'deref' _this_tmp_[1963559]))
                                          (1963572 'move' call_tmp[1963557](1963575 call this[954091] coerce_tmp[1963566] _yieldedIndex[1963544]))
                                          const-val coerce_tmp[1963578]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                          (1963580 'move' coerce_tmp[1963578](1963582 'deref' call_tmp[1963557]))
                                          (1963584 '=' yret[1963555] coerce_tmp[1963578])
                                          (1963587 'noop')
                                          const-val _yieldedIndex[1963588]:uint(8)[100] "temp"
                                          (1963590 'move' _yieldedIndex[1963588] coerce_tmp[1963578])
                                          {
                                            const-val b[1963594]:uint(8)[100] "const" "index var" "insert auto destroy"
                                            (1963596 'move' b[1963594] _yieldedIndex[1963588])
                                            val yret[1963599]:int(32)[95] "dead after last mention" "YVV" "temp"
                                            val call_tmp[1963601]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                            const-val _yieldedIndex[1963603]:int(32)[95] "temp"
                                            (1963605 'move' _yieldedIndex[1963603](1963607 'cast' int(32)[95] _yieldedIndex[1963588]))
                                            {
                                              const-val removeChar[1963611]:int(32)[95] "const" "index var" "insert auto destroy"
                                              (1963613 'move' removeChar[1963611] _yieldedIndex[1963603])
                                              {
                                                const-val call_tmp[1963617]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                                (1963619 'move' call_tmp[1963617](1963622 call ==[435606] thisChar[1903195] removeChar[1963611]))
                                                const-val call_tmp[1963625]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                                (1963627 'move' call_tmp[1963625] call_tmp[1963617])
                                                if call_tmp[1963625]
                                                {
                                                  (1963657 call _freeIterator[1103474] _iterator[1963368])
                                                  (1963660 call chpl__autoDestroy[1534672] tmp[1963220])
                                                  (1963633 call _freeIterator[1103724] _iterator[1903377])
                                                  (1963636 call _freeIterator[1103974] _iterator[1903340])
                                                  (1963639 call chpl__autoDestroy[1461530] localThis[1903333])
                                                  (1963642 call _freeIterator[1109569] _iterator[1903287])
                                                  (1963645 call chpl__autoDestroy[1461530] localThis[1903259])
                                                  (1963648 call _freeIterator[1123136] _iterator[1903220])
                                                  continue _continueLabel[1903821] _continueLabel[1903821]
                                                }
                                              }
                                              label _continueLabel[1963653]
                                            }
                                          }
                                        }
                                      }
                                    }
                                    {
                                      const-val low[1963459]:int(64)[13] "temp"
                                      (1963461 'move' low[1963459](1963463 '.v' _iterator[1963368] F0_low[2016401]))
                                      (1963466 '=' i[1963394] low[1963459])
                                    }
                                    {
                                      const-val high[1963470]:int(64)[13] "temp"
                                      (1963472 'move' high[1963470](1963474 '.v' _iterator[1963368] F1_high[2016405]))
                                      (1963477 '<=' i[1963394] high[1963470])
                                    }
                                    {
                                      val call_tmp[1963481]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                      (1963483 '+=' i[1963394] 1)
                                    }
                                  }
                                  label _endchpl_direct_param_stride_range_iter[1963520]
                                }
                                (1963523 call _freeIterator[1103474] _iterator[1963368])
                                (1963526 call chpl__autoDestroy[1534672] tmp[1963220])
                                label _endchpl_direct_counted_range_iter_helper[1963528]
                              }
                              (1903535 call _freeIterator[1103724] _iterator[1903377])
                              label _endchpl_direct_counted_range_iter[1903537]
                            }
                            (1903540 call _freeIterator[1103974] _iterator[1903340])
                            (1903543 call chpl__autoDestroy[1461530] localThis[1903333])
                            label _endchpl_bytes[1903545]
                          }
                          (1903548 call _freeIterator[1109569] _iterator[1903287])
                        }
                        {
                          val i[1903551]:int(64)[13] "dead at end of block" "insert auto destroy"
                          (1903553 'move' i[1903551] 0)
                          val tmp[1903556]:bool[10] "dead after last mention" "temp"
                          ref call_tmp[1903558]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
                          (1903560 'move' call_tmp[1903558](1903563 call buffLen[757886] localThis[1903259]))
                          const-val call_tmp[1903565]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val coerce_tmp[1903567]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (1903569 'move' coerce_tmp[1903567](1903571 'deref' call_tmp[1903558]))
                          (1903573 'move' call_tmp[1903565](1903576 call <[437452] 0 coerce_tmp[1903567]))
                          (1903579 'move' tmp[1903556] call_tmp[1903565])
                          WhileDo[1903582]
                          {
                            ref call_tmp[1903584]:_ref(c_ptr(uint(8)))[937432] "dead at end of block" "maybe param" "temp"
                            (1903586 'move' call_tmp[1903584](1903589 call buff[757964] localThis[1903259]))
                            ref call_tmp[1903591]:_ref(int(64))[936572] "dead at end of block" "maybe param" "temp"
                            (1903593 'move' call_tmp[1903591](1903596 call buffLen[757886] localThis[1903259]))
                            const-val call_tmp[1903598]:(syserr,int(32),int(32))[964620] "dead at end of block" "maybe param" "temp"
                            val coerce_tmp[1903600]:c_ptr(uint(8))[937423] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1903602 'move' coerce_tmp[1903600](1903604 'deref' call_tmp[1903584]))
                            const-val coerce_tmp[1903606]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1903608 'move' coerce_tmp[1903606](1903610 'deref' call_tmp[1903591]))
                            const-val ret_tmp[1903612]:(syserr,int(32),int(32))[964620] "temp"
                            (1903615 call decodeHelp[174406] coerce_tmp[1903600] coerce_tmp[1903606] i[1903551] 1 ret_tmp[1903612])
                            (1903621 'move' call_tmp[1903598] ret_tmp[1903612])
                            const-val tmp[1903624]:(syserr,int(32),int(32))[964620] "dead at end of block" "const" "insert auto destroy" "temp"
                            (1903626 'move' tmp[1903624] call_tmp[1903598])
                            1
                            ref call_tmp[1903630]:_ref(syserr)[948832] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1903632 'move' call_tmp[1903630](1903634 '.' tmp[1903624] x0[964614]))
                            const-val decodeRet[1903637]:syserr[223584] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1903639]:syserr[223584] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1903641 'move' coerce_tmp[1903639](1903643 'deref' call_tmp[1903630]))
                            (1903645 'move' decodeRet[1903637](1903648 call chpl__initCopy[964485] coerce_tmp[1903639]))
                            ref call_tmp[1903650]:_ref(int(32))[936626] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1903652 'move' call_tmp[1903650](1903654 '.' tmp[1903624] x1[964616]))
                            const-val cp[1903657]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1903659]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1903661 'move' coerce_tmp[1903659](1903663 'deref' call_tmp[1903650]))
                            (1903665 'move' cp[1903657](1903668 call chpl__initCopy[964757] coerce_tmp[1903659]))
                            ref call_tmp[1903670]:_ref(int(32))[936626] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1903672 'move' call_tmp[1903670](1903674 '.' tmp[1903624] x2[964618]))
                            const-val nBytes[1903677]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1903679]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1903681 'move' coerce_tmp[1903679](1903683 'deref' call_tmp[1903670]))
                            (1903685 'move' nBytes[1903677](1903688 call chpl__initCopy[964757] coerce_tmp[1903679]))
                            const-val yret[1903690]:int(32)[95] "dead after last mention" "YVV" "temp"
                            val call_tmp[1903692]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                            (1903694 'move' yret[1903690] cp[1903657])
                            const-val _yieldedIndex[1903697]:int(32)[95] "temp"
                            (1903699 'move' _yieldedIndex[1903697] cp[1903657])
                            {
                              const-val removeChar[1903703]:int(32)[95] "const" "index var" "insert auto destroy"
                              (1903705 'move' removeChar[1903703] _yieldedIndex[1903697])
                              {
                                const-val call_tmp[1903709]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1903711 'move' call_tmp[1903709](1903714 call ==[435606] thisChar[1903195] removeChar[1903703]))
                                const-val call_tmp[1903717]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1903719 'move' call_tmp[1903717] call_tmp[1903709])
                                if call_tmp[1903717]
                                {
                                  (1903725 call chpl__autoDestroy[1465403] tmp[1903624])
                                  (1903728 call chpl__autoDestroy[1461530] localThis[1903259])
                                  (1903731 call _freeIterator[1123136] _iterator[1903220])
                                  continue _continueLabel[1903821] _continueLabel[1903821]
                                }
                              }
                              label _continueLabel[1903736]
                            }
                            const-val coerce_tmp[1903738]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (1903740 'move' coerce_tmp[1903738](1903742 'cast' int(64)[13] nBytes[1903677]))
                            (1903746 call +=[451315] i[1903551] coerce_tmp[1903738])
                            (1903750 call chpl__autoDestroy[1465403] tmp[1903624])
                            ref call_tmp[1903752]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
                            (1903754 'move' call_tmp[1903752](1903757 call buffLen[757886] localThis[1903259]))
                            const-val call_tmp[1903759]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            const-val coerce_tmp[1903761]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (1903763 'move' coerce_tmp[1903761](1903765 'deref' call_tmp[1903752]))
                            (1903767 'move' call_tmp[1903759](1903770 call <[437452] i[1903551] coerce_tmp[1903761]))
                            (1903773 'move' tmp[1903556] call_tmp[1903759])
                            tmp[1903556]
                          }
                        }
                        (1903778 call chpl__autoDestroy[1461530] localThis[1903259])
                        label _endcodepoints[1903780]
                      }
                      label _breakLabel[1903782]
                      (1903785 call _freeIterator[1123136] _iterator[1903220])
                    }
                    const-val call_tmp[1903787]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[1903789]:byteIndex[28170] "temp"
                    (1903792 call +[28722] i[1903202] nBytes[1903209] ret_tmp[1903789])
                    (1903796 'move' call_tmp[1903787] ret_tmp[1903789])
                    const-val call_tmp[1903799]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[1903801]:byteIndex[28170] "temp"
                    (1903804 call -[28854] call_tmp[1903787] 1 ret_tmp[1903801])
                    (1903808 'move' call_tmp[1903799] ret_tmp[1903801])
                    (1903812 call =[38191] end[36205] call_tmp[1903799])
                    (1903816 call chpl__autoDestroy[1461793] call_tmp[1903799])
                    (1903819 call chpl__autoDestroy[1461793] call_tmp[1903787])
                  }
                  label _continueLabel[1903821]
                }
                (1902510 call chpl__autoDestroy[1461793] call_tmp[1902459])
                const-val coerce_tmp[1902512]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1902514 'move' coerce_tmp[1902512](1902516 'cast' int(64)[13] nBytes[1902437]))
                (1902520 call +=[451315] i[1902103] coerce_tmp[1902512])
                (1902524 call chpl__autoDestroy[1465403] tmp[1902384])
                ref call_tmp[1902526]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
                (1902528 'move' call_tmp[1902526](1902531 call buffLen[757886] localThis[1901754]))
                const-val call_tmp[1902533]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[1902535]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1902537 'move' coerce_tmp[1902535](1902539 'deref' call_tmp[1902526]))
                (1902541 'move' call_tmp[1902533](1902544 call <[437452] i[1902103] coerce_tmp[1902535]))
                (1902547 'move' tmp[1902316] call_tmp[1902533])
                tmp[1902316]
              }
            }
            (1902552 call chpl__autoDestroy[1461530] localThis[1901754])
            label _end_cpIndexLen[1902554]
          }
          label _breakLabel[36442]
          (1842057 call _freeIterator[1122573] _iterator[36437])
        }
      }
      const-val call_tmp[601608]:range(byteIndex,bounded,false)[1025792] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1834132]:range(byteIndex,bounded,false)[1025792] "temp"
      (36498 call chpl_build_bounded_range[1123254] start[36193] end[36205] ret_tmp[1834132])
      (1834135 'move' call_tmp[601608] ret_tmp[1834132])
      const-val call_tmp[601613]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1834150]:string[26] "temp"
      (36501 call this[1123500] localThis[36176] call_tmp[601608] ret_tmp[1834150])
      (1834153 'move' call_tmp[601613] ret_tmp[1834150])
      (1124394 'move' ret[504364] call_tmp[601613])
      (1842059 call chpl__autoDestroy[1534330] call_tmp[601608])
      (1842062 call chpl__autoDestroy[1461793] end[36205])
      (1842065 call chpl__autoDestroy[1461793] start[36193])
      (1842068 call chpl__autoDestroy[1461530] localChars[36187])
      (1842071 call chpl__autoDestroy[1461530] localThis[36176])
      gotoReturn _end_strip[504362] _end_strip[504362]
    }
    label _end_strip[504362]
    (1829773 '=' _retArg[1829771] ret[504364])
    (1829777 return _void[55])
  }
  function _ref(string)[937939].isSpace[36840](const  ref arg this[36842]:_ref(string)[937939]) : bool[10] "method" "resolved" "fn synchronization free"
  {
    val ret[504443]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[601762]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (601765 'move' call_tmp[601762](36853 call isEmpty[35061] this[36842]))
    const-val call_tmp[601767]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (601770 'move' call_tmp[601767] call_tmp[601762])
    if call_tmp[601767]
    {
      (504449 'move' ret[504443] 0)
      gotoReturn _end_isSpace[504441] _end_isSpace[504441]
    }
    val result[36865]:bool[10] "dead at end of block" "insert auto destroy"
    (540451 'move' result[36865] 1)
    const-val tmp[36944]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[601774]:_ref(int(32))[936626] "dead after last mention" "maybe param" "temp"
    (601777 'move' call_tmp[601774](36873 call locale_id[758042] this[36842]))
    const-val call_tmp[601779]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1125502]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1125506 'move' coerce_tmp[1125502](1125504 'deref' call_tmp[601774]))
    (601782 'move' call_tmp[601779](36878 call chpl_buildLocaleID[209412] coerce_tmp[1125502] c_sublocid_any[89875]))
    const-val call_tmp[601784]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    (601787 'move' call_tmp[601784](36879 'chpl_on_locale_num' call_tmp[601779]))
    (36946 'move' tmp[36944] call_tmp[601784])
    val isdirect[2085530]:bool[10] "temp"
    (2085535 'move' isdirect[2085530](2085532 call chpl_doDirectExecuteOn[187423] tmp[36944]))
    if isdirect[2085530]
    {
      (2085539 call on_fn[933822] this[36842] result[36865])
    }
    {
      val _args_foron_fn[2085557]:_class_localson_fn[2085547] "temp"
      (2085561 'move' _args_foron_fn[2085557](2085559 'stack allocate class' _class_localson_fn[2085547]))
      (2085563 '.=' _args_foron_fn[2085557] _0_tmp[2085550] tmp[36944])
      ref tmp[2085567]:string[26] "temp"
      (2085571 'move' tmp[2085567](2085569 'set reference' this[36842]))
      (2085573 '.=' _args_foron_fn[2085557] _1_this[2085552] tmp[2085567])
      ref tmp[2085577]:bool[10] "temp"
      (2085581 'move' tmp[2085577](2085579 'set reference' result[36865]))
      (2085583 '.=' _args_foron_fn[2085557] _2_result[2085554] tmp[2085577])
      val _args_vforon_fn[2085587]:c_void_ptr[149] "temp"
      (2085591 'move' _args_vforon_fn[2085587](2085589 'cast_to_void_star' _args_foron_fn[2085557]))
      val _args_sizeon_fn[2085593]:int(64)[13] "temp"
      (2085597 'move' _args_sizeon_fn[2085593](2085595 'sizeof_bundle' _class_localson_fn[2085547]))
      on(2085637 call wrapon_fn[2085599] tmp[36944] _args_vforon_fn[2085587] _args_sizeon_fn[2085593] _args_foron_fn[2085557])
    }
    {
    }
    (1125532 'move' ret[504443] result[36865])
    gotoReturn _end_isSpace[504441] _end_isSpace[504441]
    label _end_isSpace[504441]
    (504445 return ret[504443])
  }
  function =[38165](ref arg lhs[38162]:_ref(byteIndex)[948759], const in arg rhs[38168]:int(64)[13]) : void[4] "assignop" "resolved" "no return value for void"
  {
    ref call_tmp[602358]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
    (602361 'move' call_tmp[602358](38172 call _bindex[757742] lhs[38162]))
    const-val call_tmp[602363]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (602366 'move' call_tmp[602363] rhs[38168])
    (38179 call =[435327] call_tmp[602358] call_tmp[602363])
    (504603 return _void[55])
  }
  function =[38191](ref arg lhs[38188]:_ref(byteIndex)[948759], const  ref arg rhs[38194]:_ref(byteIndex)[948759]) : void[4] "assignop" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    ref call_tmp[602370]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
    (602373 'move' call_tmp[602370](38198 call _bindex[757742] lhs[38188]))
    ref call_tmp[602377]:_ref(int(64))[936572] "dead after last mention" "maybe param" "reference to a const" "temp"
    (602380 'move' call_tmp[602377](38202 call _bindex[757742] rhs[38194]))
    const-val coerce_tmp[1123209]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1123213 'move' coerce_tmp[1123209](1123211 'deref' call_tmp[602377]))
    (38205 call =[435327] call_tmp[602370] coerce_tmp[1123209])
    (504605 return _void[55])
  }
  function =[38269](ref arg lhs[38266]:_ref(string)[937939], const  ref arg rhs[38272]:string[26]) : void[4] "assignop" "resolved" "fn synchronization free" "no return value for void"
  {
    (38279 call doAssign[1019168] lhs[38266] rhs[38272])
    (504611 return _void[55])
  }
  function +[38342](const  ref arg s0[38339]:string[26], const  ref arg s1[38345]:string[26], ref arg _retArg[1830367]:_ref(string)[937939]) : void[4] "fn returns via _retArg" "resolved" "fn synchronization free"
  {
    const-val ret[504617]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[602428]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1832159]:string[26] "temp"
    (38352 call doConcat[980863] s0[38339] s1[38345] ret_tmp[1832159])
    (1832162 'move' call_tmp[602428] ret_tmp[1832159])
    (504622 'move' ret[504617] call_tmp[602428])
    (1830369 '=' _retArg[1830367] ret[504617])
    (1830371 return _void[55])
  }
  function +=[38797](ref arg lhs[38794]:_ref(string)[937939], const  ref arg rhs[38800]:_ref(string)[937939]) : void[4] "assignop" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[504767]:void[4] "dead after last mention" "RVV" "temp"
    (38808 call doAppend[979070] lhs[38794] rhs[38800])
    (504769 return ret[504767])
  }
  function ==[38820](const  ref arg a[38817]:string[26], const  ref arg b[38823]:string[26]) : bool[10] "no doc" "resolved" "fn synchronization free"
  {
    val ret[504773]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[602643]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (602646 'move' call_tmp[602643](38831 call doEq[1206216] a[38817] b[38823]))
    (1207977 'move' ret[504773] call_tmp[602643])
    (504775 return ret[504773])
  }
  function !=[38844](const  ref arg a[38841]:string[26], const  ref arg b[38847]:string[26]) : bool[10] "inline" "no doc" "resolved"
  {
    val ret[504783]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[602648]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (602651 'move' call_tmp[602648](38855 call doEq[1206216] a[38841] b[38847]))
    const-val call_tmp[602653]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (602656 'move' call_tmp[602653](38856 call ![7494] call_tmp[602648]))
    (1770014 'move' ret[504783] call_tmp[602653])
    (504785 return ret[504783])
  }
  function <[38870](const  ref arg a[38867]:string[26], const  ref arg b[38873]:string[26]) : bool[10] "inline" "no doc" "resolved" "fn synchronization free"
  {
    val ret[504793]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[602658]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (602661 'move' call_tmp[602658](38881 call doLessThan[1769634] a[38867] b[38873]))
    (1769796 'move' ret[504793] call_tmp[602658])
    (504795 return ret[504793])
  }
  function >[38894](const  ref arg a[38891]:string[26], const  ref arg b[38897]:string[26]) : bool[10] "inline" "no doc" "resolved" "fn synchronization free"
  {
    val ret[504803]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[602663]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (602666 'move' call_tmp[602663](38905 call doGreaterThan[1769806] a[38891] b[38897]))
    (1769968 'move' ret[504803] call_tmp[602663])
    (504805 return ret[504803])
  }
  val wint_t[38984]:int(32)[95] "dead at end of block" "extern" "insert auto destroy" "no doc" "type variable"
  function codepoint_isWhitespace[39153](const in arg c[39150]:int(32)[95]) : bool[10] "inline" "private" "resolved" "fn synchronization free"
  {
    val ret[504903]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[602733]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (602736 'move' call_tmp[602733](39172 call iswspace[39162] c[39150]))
    const-val call_tmp[602738]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1125517]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1125523 'move' coerce_tmp[1125517](1125519 'cast' int(32)[95] 0))
    (602741 'move' call_tmp[602738](39174 call !=[435990] call_tmp[602733] coerce_tmp[1125517]))
    (1125527 'move' ret[504903] call_tmp[602738])
    (504905 return ret[504903])
  }
  function _cast[39392](const in arg cs[39395]:c_string[19]) : c_ptr(uint(8))[937423] "inline" "no doc" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1804446]:c_ptr(uint(8))[937423] "temp"
    val ret[504976]:c_ptr(uint(8))[937423] "dead after last mention" "RVV" "temp"
    val call_tmp[602843]:c_ptr(uint(8))[937423] "dead after last mention" "expr temp" "maybe param" "temp"
    (602846 'move' call_tmp[602843](39402 'cast' c_ptr(uint(8))[937423] cs[39395]))
    (504981 'move' ret[504976] call_tmp[602843])
    (504978 return ret[504976])
  }
  function _cast[39462](const  ref arg cpi[39465]:byteIndex[28170]) : int(64)[13] "inline" "no doc" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1804448]:int(64)[13] "temp"
    val ret[504996]:int(64)[13] "dead after last mention" "RVV" "temp"
    ref call_tmp[602870]:_ref(int(64))[936572] "dead after last mention" "maybe param" "reference to a const" "temp"
    (602873 'move' call_tmp[602870](39469 call _bindex[757742] cpi[39465]))
    (505001 'move' ret[504996](505000 'deref' call_tmp[602870]))
    (504998 return ret[504996])
  }
  function _cast[39483](const in arg i[39486]:int(64)[13], ref arg _retArg[1830445]:_ref(byteIndex)[948759]) : void[4] "fn returns via _retArg" "inline" "no doc" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1804450]:byteIndex[28170] "temp"
    const-val ret[505005]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[39490]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (1029731 call init[28097] cpi[39490])
    ref call_tmp[602877]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
    (602880 'move' call_tmp[602877](39496 call _bindex[757742] cpi[39490]))
    (39500 call =[435327] call_tmp[602877] i[39486])
    (505010 'move' ret[505005] cpi[39490])
    gotoReturn _end__cast[505003] _end__cast[505003]
    label _end__cast[505003]
    (1830447 '=' _retArg[1830445] ret[505005])
    (1830449 return _void[55])
  }
  function _cast[39514](const  ref arg cpi[39517]:codepointIndex[28274]) : int(64)[13] "inline" "no doc" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1804452]:int(64)[13] "temp"
    val ret[505016]:int(64)[13] "dead after last mention" "RVV" "temp"
    ref call_tmp[602884]:_ref(int(64))[936572] "dead after last mention" "maybe param" "reference to a const" "temp"
    (602887 'move' call_tmp[602884](39521 call _cpindex[757814] cpi[39517]))
    (505021 'move' ret[505016](505020 'deref' call_tmp[602884]))
    (505018 return ret[505016])
  }
  function _cast[39535](const in arg i[39538]:int(64)[13], ref arg _retArg[1830457]:_ref(codepointIndex)[948769]) : void[4] "fn returns via _retArg" "inline" "no doc" "resolved"
  {
    val _formal_type_tmp_[1804454]:codepointIndex[28274] "temp"
    const-val ret[505025]:codepointIndex[28274] "dead after last mention" "RVV" "temp"
    val cpi[39542]:codepointIndex[28274] "dead at end of block" "insert auto destroy"
    (1157036 call init[28201] cpi[39542])
    ref call_tmp[602891]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
    (602894 'move' call_tmp[602891](39548 call _cpindex[757814] cpi[39542]))
    (39552 call =[435327] call_tmp[602891] i[39538])
    (505030 'move' ret[505025] cpi[39542])
    gotoReturn _end__cast[505023] _end__cast[505023]
    label _end__cast[505023]
    (1830459 '=' _retArg[1830457] ret[505025])
    (1830461 return _void[55])
  }
  function iswspace[39162](const in arg wc[39159]:int(32)[95]) : int(32)[95] "extern" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[504897]:int(32)[95] "RVV" "temp"
    (504899 return ret[504897])
  }
  function on_fn[933786](const  ref arg this[1806864]:_ref(string)[937939]) : void[4] "on" "resolved" "fn synchronization free"
  {
    {
      ref call_tmp[598408]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "maybe param" "temp"
      (598411 'move' call_tmp[598408](30856 call buff[757964] this[1806864]))
      val coerce_tmp[938159]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (938163 'move' coerce_tmp[938159](938161 'deref' call_tmp[598408]))
      const-val coerce_tmp[938165]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (938171 'move' coerce_tmp[938165](938167 'cast' c_void_ptr[149] coerce_tmp[938159]))
      (30860 call chpl_here_free[188081] coerce_tmp[938165])
    }
    (933793 return _void[55])
  }
  function on_fn[933822](const  ref arg this[1806866]:_ref(string)[937939], ref arg result[1806868]:_ref(bool)[937199]) : void[4] "on" "resolved" "fn synchronization free"
  {
    {
      {
        val _indexOfInterest[36907]:int(32)[95] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[36908]:_ic_codepoints__ref_string[1122849] "dead at end of block" "expr temp" "temp"
        const-val call_tmp[601791]:_ir_codepoints__ref_string[1122855] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val ret_tmp[1829651]:_ir_codepoints__ref_string[1122855] "temp"
        (36886 call codepoints[33663] this[1806866] ret_tmp[1829651])
        (1829654 'move' call_tmp[601791] ret_tmp[1829651])
        (36917 'move' _iterator[36908](36915 call _getIterator[1122864] call_tmp[601791]))
        {
          val ret[1903855]:_ir_codepoints__ref_string[1122855] "dead at end of block" "RVV" "temp"
          const-val call_tmp[1903857]:string[26] "dead at end of block" "maybe param" "temp"
          const-val ret_tmp[1903859]:string[26] "temp"
          ref this[1904429]:_ref(string)[937939] "temp"
          (1904434 'move' this[1904429](1904431 '.v' _iterator[36908] F0_this[2000627]))
          (1903862 call localize[32886] this[1904429] ret_tmp[1903859])
          (1903865 'move' call_tmp[1903857] ret_tmp[1903859])
          val localThis[1903868]:string[26] "dead at end of block" "insert auto destroy"
          (1903870 'move' localThis[1903868] call_tmp[1903857])
          const-val call_tmp[1903873]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          ref this[1904436]:_ref(string)[937939] "temp"
          (1904441 'move' this[1904436](1904438 '.v' _iterator[36908] F0_this[2000627]))
          (1903875 'move' call_tmp[1903873](1903878 call isASCII[31046] this[1904436]))
          const-val call_tmp[1903880]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1903882 'move' call_tmp[1903880] call_tmp[1903873])
          if call_tmp[1903873]
          {
            val _indexOfInterest[1903887]:uint(8)[100] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1903889]:_ic_chpl_bytes__ref_string[1108256] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[1903891]:_ir_chpl_bytes__ref_string[1108262] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[1903893]:_ir_chpl_bytes__ref_string[1108262] "temp"
            ref this[1904443]:_ref(string)[937939] "temp"
            (1904448 'move' this[1904443](1904445 '.v' _iterator[36908] F0_this[2000627]))
            (1903896 call chpl_bytes[33574] this[1904443] ret_tmp[1903893])
            (1903899 'move' call_tmp[1903891] ret_tmp[1903893])
            (1903902 'move' _iterator[1903889](1903905 call _getIterator[1108271] call_tmp[1903891]))
            {
              val ret[1903908]:_ir_chpl_bytes__ref_string[1108262] "dead at end of block" "RVV" "temp"
              const-val call_tmp[1903910]:string[26] "dead at end of block" "maybe param" "temp"
              const-val ret_tmp[1903912]:string[26] "temp"
              ref this[1903914]:_ref(string)[937939] "temp"
              (1903916 'move' this[1903914](1903918 '.v' _iterator[1903889] F0_this[1998453]))
              (1903922 call localize[32886] this[1903914] ret_tmp[1903912])
              (1903925 'move' call_tmp[1903910] ret_tmp[1903912])
              val localThis[1903928]:string[26] "dead at end of block" "insert auto destroy"
              (1903930 'move' localThis[1903928] call_tmp[1903910])
              val _indexOfInterest[1903933]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[1903935]:_ic_chpl_direct_counted_range_iter[1103790] "dead at end of block" "expr temp" "temp"
              ref call_tmp[1903937]:_ref(int(64))[936572] "dead at end of block" "maybe param" "temp"
              (1903939 'move' call_tmp[1903937](1903942 call buffLen[757886] localThis[1903928]))
              const-val call_tmp[1903944]:_ir_chpl_direct_counted_range_iter[1103796] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1903946]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1903948 'move' coerce_tmp[1903946](1903950 'deref' call_tmp[1903937]))
              const-val ret_tmp[1903952]:_ir_chpl_direct_counted_range_iter[1103796] "temp"
              (1903955 call chpl_direct_counted_range_iter[457996] 0 coerce_tmp[1903946] ret_tmp[1903952])
              (1903959 'move' call_tmp[1903944] ret_tmp[1903952])
              (1903962 'move' _iterator[1903935](1903965 call _getIterator[1103805] call_tmp[1903944]))
              {
                val ret[1903968]:_ir_chpl_direct_counted_range_iter[1103796] "dead after last mention" "RVV" "temp"
                val _indexOfInterest[1903970]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[1903972]:_ic_chpl_direct_counted_range_iter_helper[1103540] "dead at end of block" "expr temp" "temp"
                const-val call_tmp[1903974]:_ir_chpl_direct_counted_range_iter_helper[1103546] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val ret_tmp[1903976]:_ir_chpl_direct_counted_range_iter_helper[1103546] "temp"
                const-val low[1903978]:int(64)[13] "temp"
                (1903980 'move' low[1903978](1903982 '.v' _iterator[1903935] F0_low[2010431]))
                const-val count[1903985]:int(64)[13] "temp"
                (1903987 'move' count[1903985](1903989 '.v' _iterator[1903935] F1_count[2010435]))
                (1903993 call chpl_direct_counted_range_iter_helper[1102098] low[1903978] count[1903985] ret_tmp[1903976])
                (1903997 'move' call_tmp[1903974] ret_tmp[1903976])
                (1904000 'move' _iterator[1903972](1904003 call _getIterator[1103555] call_tmp[1903974]))
                {
                  val ret[1963722]:_ir_chpl_direct_counted_range_iter_helper[1103546] "dead after last mention" "RVV" "temp"
                  val call_tmp[1963724]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val tmp[1963726]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  const-val tmp[1963728]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  const-val call_tmp[1963730]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val count[1964206]:int(64)[13] "temp"
                  (1964211 'move' count[1964206](1964208 '.v' _iterator[1903972] F1_count[2014907]))
                  (1963732 'move' call_tmp[1963730](1963735 call <[948398] count[1964206]))
                  (1963737 'move' tmp[1963728] call_tmp[1963730])
                  (1963740 'move' tmp[1963726] call_tmp[1963730])
                  const-val call_tmp[1963743]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1963745 'move' call_tmp[1963743] call_tmp[1963730])
                  if call_tmp[1963730]
                  {
                    (1963751 call boundsCheckHalt[210167] "With a negative count, the range must have a last index.")
                  }
                  const-val tmp[1963754]:2*int(64)[1040056] "dead at end of block" "const" "insert auto destroy" "temp"
                  val tmp[1963756]:2*int(64)[1040056] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                  const-val tmp[1963758]:bool[10] "dead after last mention" "maybe param" "temp"
                  const-val call_tmp[1963760]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val count[1964213]:int(64)[13] "temp"
                  (1964218 'move' count[1964213](1964215 '.v' _iterator[1903972] F1_count[2014907]))
                  (1963762 'move' call_tmp[1963760](1963765 call ==[435628] count[1964213] 0))
                  (1963768 'move' tmp[1963758] call_tmp[1963760])
                  if call_tmp[1963760]
                  {
                    const-val tmp[1963773]:2*int(64)[1040056] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                    val call_tmp[1963775]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                    const-val call_tmp[1963777]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val low[1964220]:int(64)[13] "temp"
                    (1964225 'move' low[1964220](1964222 '.v' _iterator[1903972] F0_low[2014903]))
                    (1963779 'move' call_tmp[1963777](1963782 call _cast[956034] low[1964220]))
                    const-val call_tmp[1963784]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[1963786]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                    (1963788 'move' coerce_tmp[1963786](1963790 'cast' uint(64)[115] 1))
                    (1963793 'move' call_tmp[1963784](1963796 call -[962193] call_tmp[1963777]))
                    const-val call_tmp[1963798]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                    (1963800 'move' call_tmp[1963798](1963803 call _cast[953543] call_tmp[1963784]))
                    const-val ret_tmp[1963805]:2*int(64)[1040056] "temp"
                    const-val low[1964227]:int(64)[13] "temp"
                    (1964232 'move' low[1964227](1964229 '.v' _iterator[1903972] F0_low[2014903]))
                    (1963808 call _build_tuple[1040014] low[1964227] call_tmp[1963798] ret_tmp[1963805])
                    (1963812 'move' tmp[1963773] ret_tmp[1963805])
                    (1963815 'move' tmp[1963756] tmp[1963773])
                  }
                  {
                    const-val tmp[1963819]:2*int(64)[1040056] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                    val call_tmp[1963821]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    const-val call_tmp[1963823]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val count[1964234]:int(64)[13] "temp"
                    (1964239 'move' count[1964234](1964236 '.v' _iterator[1903972] F1_count[2014907]))
                    (1963825 'move' call_tmp[1963823] count[1964234])
                    const-val call_tmp[1963828]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val count[1964241]:int(64)[13] "temp"
                    (1964246 'move' count[1964241](1964243 '.v' _iterator[1903972] F1_count[2014907]))
                    (1963830 'move' call_tmp[1963828](1963833 call -[962226] count[1964241]))
                    const-val call_tmp[1963835]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val low[1964248]:int(64)[13] "temp"
                    (1964253 'move' low[1964248](1964250 '.v' _iterator[1903972] F0_low[2014903]))
                    (1963837 'move' call_tmp[1963835](1963840 call +[439636] low[1964248] call_tmp[1963828]))
                    const-val ret_tmp[1963843]:2*int(64)[1040056] "temp"
                    const-val low[1964255]:int(64)[13] "temp"
                    (1964260 'move' low[1964255](1964257 '.v' _iterator[1903972] F0_low[2014903]))
                    (1963846 call _build_tuple[1040014] low[1964255] call_tmp[1963835] ret_tmp[1963843])
                    (1963850 'move' tmp[1963819] ret_tmp[1963843])
                    (1963853 'move' tmp[1963756] tmp[1963819])
                  }
                  (1963857 '=' tmp[1963754] tmp[1963756])
                  (1963860 'noop')
                  1
                  ref call_tmp[1963862]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
                  (1963864 'move' call_tmp[1963862](1963866 '.' tmp[1963754] x0[1040052]))
                  const-val start[1963869]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                  const-val coerce_tmp[1963871]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                  (1963873 'move' coerce_tmp[1963871](1963875 'deref' call_tmp[1963862]))
                  (1963877 '=' start[1963869] coerce_tmp[1963871])
                  (1963880 'noop')
                  ref call_tmp[1963881]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
                  (1963883 'move' call_tmp[1963881](1963885 '.' tmp[1963754] x1[1040054]))
                  const-val end[1963888]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                  const-val coerce_tmp[1963890]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                  (1963892 'move' coerce_tmp[1963890](1963894 'deref' call_tmp[1963881]))
                  (1963896 '=' end[1963888] coerce_tmp[1963890])
                  (1963899 'noop')
                  val _indexOfInterest[1963900]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                  val _iterator[1963902]:_ic_chpl_direct_param_stride_range_iter[1103286] "dead at end of block" "expr temp" "temp"
                  const-val call_tmp[1963904]:_ir_chpl_direct_param_stride_range_iter[1103292] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val ret_tmp[1963906]:_ir_chpl_direct_param_stride_range_iter[1103292] "temp"
                  (1963909 call chpl_direct_param_stride_range_iter[1102524] coerce_tmp[1963871] coerce_tmp[1963890] ret_tmp[1963906])
                  (1963913 'move' call_tmp[1963904] ret_tmp[1963906])
                  (1963916 'move' _iterator[1963902](1963919 call _getIterator[1103301] call_tmp[1963904]))
                  {
                    val ret[1963922]:_ir_chpl_direct_param_stride_range_iter[1103292] "dead after last mention" "RVV" "temp"
                    val call_tmp[1963924]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    (1963927 call chpl_range_check_stride[1102844])
                    val i[1963928]:int(64)[13] "dead at end of block" "insert auto destroy"
                    val call_tmp[1963930]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    (1963932 'move' i[1963928] 0)
                    val call_tmp[1963935]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    const-val default_arg_first[1963937]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                    const-val low[1963939]:int(64)[13] "temp"
                    (1963941 'move' low[1963939](1963943 '.v' _iterator[1963902] F0_low[2016401]))
                    (1963946 'move' default_arg_first[1963937](1963949 call chpl_checkIfRangeIterWillOverflow_default_first[1103198] low[1963939]))
                    const-val default_arg_last[1963951]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                    const-val high[1963953]:int(64)[13] "temp"
                    (1963955 'move' high[1963953](1963957 '.v' _iterator[1963902] F1_high[2016405]))
                    (1963960 'move' default_arg_last[1963951](1963963 call chpl_checkIfRangeIterWillOverflow_default_last[1103226] high[1963953]))
                    const-val _return_tmp_[1963965]:bool[10] "dead after last mention" "temp"
                    const-val low[1963967]:int(64)[13] "temp"
                    (1963969 'move' low[1963967](1963971 '.v' _iterator[1963902] F0_low[2016401]))
                    const-val high[1963974]:int(64)[13] "temp"
                    (1963976 'move' high[1963974](1963978 '.v' _iterator[1963902] F1_high[2016405]))
                    (1963981 'move' _return_tmp_[1963965](1963984 call chpl_checkIfRangeIterWillOverflow[1096076] low[1963967] high[1963974] 1 default_arg_first[1963937] default_arg_last[1963951] 1))
                    CForLoop[1963991]
                    {
                      const-val yret[1964020]:int(64)[13] "dead after last mention" "YVV" "temp"
                      (1964022 'move' yret[1964020] i[1963928])
                      const-val _yieldedIndex[1964025]:int(64)[13] "temp"
                      (1964027 'move' _yieldedIndex[1964025] i[1963928])
                      {
                        const-val i[1964031]:int(64)[13] "const" "index var" "insert auto destroy"
                        (1964033 'move' i[1964031] _yieldedIndex[1964025])
                        const-val yret[1964036]:int(64)[13] "dead after last mention" "YVV" "temp"
                        (1964038 'move' yret[1964036] _yieldedIndex[1964025])
                        const-val _yieldedIndex[1964066]:int(64)[13] "temp"
                        (1964204 'move' _yieldedIndex[1964066] _yieldedIndex[1964025])
                        {
                          const-val i[1964068]:int(64)[13] "const" "index var" "insert auto destroy"
                          (1964070 'move' i[1964068] _yieldedIndex[1964066])
                          const-val yret[1964073]:int(64)[13] "dead after last mention" "YVV" "temp"
                          (1964075 'move' yret[1964073] _yieldedIndex[1964066])
                          const-val _yieldedIndex[1964078]:int(64)[13] "temp"
                          (1964080 'move' _yieldedIndex[1964078] _yieldedIndex[1964066])
                          {
                            const-val i[1964084]:int(64)[13] "const" "index var" "insert auto destroy"
                            (1964086 'move' i[1964084] _yieldedIndex[1964078])
                            const-val yret[1964089]:uint(8)[100] "dead after last mention" "YVV" "temp"
                            ref call_tmp[1964091]:_ref(uint(8))[936908] "dead after last mention" "maybe param" "temp"
                            ref _this_tmp_[1964093]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "temp"
                            (1964095 'move' _this_tmp_[1964093](1964098 call buff[757964] localThis[1903928]))
                            val coerce_tmp[1964100]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (1964102 'move' coerce_tmp[1964100](1964104 'deref' _this_tmp_[1964093]))
                            (1964106 'move' call_tmp[1964091](1964109 call this[954091] coerce_tmp[1964100] _yieldedIndex[1964078]))
                            const-val coerce_tmp[1964112]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                            (1964114 'move' coerce_tmp[1964112](1964116 'deref' call_tmp[1964091]))
                            (1964118 '=' yret[1964089] coerce_tmp[1964112])
                            (1964121 'noop')
                            const-val _yieldedIndex[1964122]:uint(8)[100] "temp"
                            (1964124 'move' _yieldedIndex[1964122] coerce_tmp[1964112])
                            {
                              const-val b[1964128]:uint(8)[100] "const" "index var" "insert auto destroy"
                              (1964130 'move' b[1964128] _yieldedIndex[1964122])
                              val yret[1964133]:int(32)[95] "dead after last mention" "YVV" "temp"
                              val call_tmp[1964135]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                              const-val _yieldedIndex[1964137]:int(32)[95] "temp"
                              (1964139 'move' _yieldedIndex[1964137](1964141 'cast' int(32)[95] _yieldedIndex[1964122]))
                              {
                                const-val cp[1964145]:int(32)[95] "const" "index var" "insert auto destroy"
                                (1964147 'move' cp[1964145] _yieldedIndex[1964137])
                                {
                                  const-val call_tmp[1964151]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                  (1964153 'move' call_tmp[1964151](1964156 call codepoint_isWhitespace[39153] cp[1964145]))
                                  const-val call_tmp[1964158]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                  (1964160 'move' call_tmp[1964158](1964163 call ![7494] call_tmp[1964151]))
                                  const-val call_tmp[1964165]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                  (1964167 'move' call_tmp[1964165] call_tmp[1964158])
                                  if call_tmp[1964165]
                                  {
                                    (1964173 call =[435174] result[1806868] 0)
                                    (1964198 call _freeIterator[1103474] _iterator[1963902])
                                    (1964201 call chpl__autoDestroy[1534672] tmp[1963754])
                                    (1964177 call _freeIterator[1103724] _iterator[1903972])
                                    (1964180 call _freeIterator[1103974] _iterator[1903935])
                                    (1964183 call chpl__autoDestroy[1461530] localThis[1903928])
                                    (1964186 call _freeIterator[1109569] _iterator[1903889])
                                    (1964189 call chpl__autoDestroy[1461530] localThis[1903868])
                                    break _breakLabel[36913] _breakLabel[36913]
                                  }
                                }
                                label _continueLabel[1964194]
                              }
                            }
                          }
                        }
                      }
                      {
                        const-val low[1963993]:int(64)[13] "temp"
                        (1963995 'move' low[1963993](1963997 '.v' _iterator[1963902] F0_low[2016401]))
                        (1964000 '=' i[1963928] low[1963993])
                      }
                      {
                        const-val high[1964004]:int(64)[13] "temp"
                        (1964006 'move' high[1964004](1964008 '.v' _iterator[1963902] F1_high[2016405]))
                        (1964011 '<=' i[1963928] high[1964004])
                      }
                      {
                        val call_tmp[1964015]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                        (1964017 '+=' i[1963928] 1)
                      }
                    }
                    label _endchpl_direct_param_stride_range_iter[1964054]
                  }
                  (1964057 call _freeIterator[1103474] _iterator[1963902])
                  (1964060 call chpl__autoDestroy[1534672] tmp[1963754])
                  label _endchpl_direct_counted_range_iter_helper[1964062]
                }
                (1904105 call _freeIterator[1103724] _iterator[1903972])
                label _endchpl_direct_counted_range_iter[1904107]
              }
              (1904110 call _freeIterator[1103974] _iterator[1903935])
              (1904113 call chpl__autoDestroy[1461530] localThis[1903928])
              label _endchpl_bytes[1904115]
            }
            (1904118 call _freeIterator[1109569] _iterator[1903889])
          }
          {
            val i[1904121]:int(64)[13] "dead at end of block" "insert auto destroy"
            (1904123 'move' i[1904121] 0)
            val tmp[1904126]:bool[10] "dead after last mention" "temp"
            ref call_tmp[1904128]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
            (1904130 'move' call_tmp[1904128](1904133 call buffLen[757886] localThis[1903868]))
            const-val call_tmp[1904135]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val coerce_tmp[1904137]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (1904139 'move' coerce_tmp[1904137](1904141 'deref' call_tmp[1904128]))
            (1904143 'move' call_tmp[1904135](1904146 call <[437452] 0 coerce_tmp[1904137]))
            (1904149 'move' tmp[1904126] call_tmp[1904135])
            WhileDo[1904152]
            {
              ref call_tmp[1904154]:_ref(c_ptr(uint(8)))[937432] "dead at end of block" "maybe param" "temp"
              (1904156 'move' call_tmp[1904154](1904159 call buff[757964] localThis[1903868]))
              ref call_tmp[1904161]:_ref(int(64))[936572] "dead at end of block" "maybe param" "temp"
              (1904163 'move' call_tmp[1904161](1904166 call buffLen[757886] localThis[1903868]))
              const-val call_tmp[1904168]:(syserr,int(32),int(32))[964620] "dead at end of block" "maybe param" "temp"
              val coerce_tmp[1904170]:c_ptr(uint(8))[937423] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1904172 'move' coerce_tmp[1904170](1904174 'deref' call_tmp[1904154]))
              const-val coerce_tmp[1904176]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1904178 'move' coerce_tmp[1904176](1904180 'deref' call_tmp[1904161]))
              const-val ret_tmp[1904182]:(syserr,int(32),int(32))[964620] "temp"
              (1904185 call decodeHelp[174406] coerce_tmp[1904170] coerce_tmp[1904176] i[1904121] 1 ret_tmp[1904182])
              (1904191 'move' call_tmp[1904168] ret_tmp[1904182])
              const-val tmp[1904194]:(syserr,int(32),int(32))[964620] "dead at end of block" "const" "insert auto destroy" "temp"
              (1904196 'move' tmp[1904194] call_tmp[1904168])
              1
              ref call_tmp[1904200]:_ref(syserr)[948832] "dead at end of block" "maybe param" "reference to a const" "temp"
              (1904202 'move' call_tmp[1904200](1904204 '.' tmp[1904194] x0[964614]))
              const-val decodeRet[1904207]:syserr[223584] "dead at end of block" "const" "insert auto destroy"
              const-val coerce_tmp[1904209]:syserr[223584] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1904211 'move' coerce_tmp[1904209](1904213 'deref' call_tmp[1904200]))
              (1904215 'move' decodeRet[1904207](1904218 call chpl__initCopy[964485] coerce_tmp[1904209]))
              ref call_tmp[1904220]:_ref(int(32))[936626] "dead at end of block" "maybe param" "reference to a const" "temp"
              (1904222 'move' call_tmp[1904220](1904224 '.' tmp[1904194] x1[964616]))
              const-val cp[1904227]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
              const-val coerce_tmp[1904229]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1904231 'move' coerce_tmp[1904229](1904233 'deref' call_tmp[1904220]))
              (1904235 'move' cp[1904227](1904238 call chpl__initCopy[964757] coerce_tmp[1904229]))
              ref call_tmp[1904240]:_ref(int(32))[936626] "dead at end of block" "maybe param" "reference to a const" "temp"
              (1904242 'move' call_tmp[1904240](1904244 '.' tmp[1904194] x2[964618]))
              const-val nBytes[1904247]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
              const-val coerce_tmp[1904249]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1904251 'move' coerce_tmp[1904249](1904253 'deref' call_tmp[1904240]))
              (1904255 'move' nBytes[1904247](1904258 call chpl__initCopy[964757] coerce_tmp[1904249]))
              const-val yret[1904260]:int(32)[95] "dead after last mention" "YVV" "temp"
              val call_tmp[1904262]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (1904264 'move' yret[1904260] cp[1904227])
              const-val _yieldedIndex[1904381]:int(32)[95] "temp"
              (1904427 'move' _yieldedIndex[1904381] cp[1904227])
              {
                const-val cp[1904383]:int(32)[95] "const" "index var" "insert auto destroy"
                (1904385 'move' cp[1904383] _yieldedIndex[1904381])
                {
                  const-val call_tmp[1904389]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1904391 'move' call_tmp[1904389](1904394 call codepoint_isWhitespace[39153] cp[1904383]))
                  const-val call_tmp[1904396]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1904398 'move' call_tmp[1904396](1904401 call ![7494] call_tmp[1904389]))
                  const-val call_tmp[1904403]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1904405 'move' call_tmp[1904403] call_tmp[1904396])
                  if call_tmp[1904403]
                  {
                    (1904411 call =[435174] result[1806868] 0)
                    (1904421 call chpl__autoDestroy[1465403] tmp[1904194])
                    (1904424 call chpl__autoDestroy[1461530] localThis[1903868])
                    break _breakLabel[36913] _breakLabel[36913]
                  }
                }
                label _continueLabel[1904417]
              }
              const-val coerce_tmp[1904280]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1904282 'move' coerce_tmp[1904280](1904284 'cast' int(64)[13] nBytes[1904247]))
              (1904288 call +=[451315] i[1904121] coerce_tmp[1904280])
              (1904292 call chpl__autoDestroy[1465403] tmp[1904194])
              ref call_tmp[1904294]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
              (1904296 'move' call_tmp[1904294](1904299 call buffLen[757886] localThis[1903868]))
              const-val call_tmp[1904301]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1904303]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1904305 'move' coerce_tmp[1904303](1904307 'deref' call_tmp[1904294]))
              (1904309 'move' call_tmp[1904301](1904312 call <[437452] i[1904121] coerce_tmp[1904303]))
              (1904315 'move' tmp[1904126] call_tmp[1904301])
              tmp[1904126]
            }
          }
          (1904320 call chpl__autoDestroy[1461530] localThis[1903868])
          label _endcodepoints[1904322]
        }
        label _breakLabel[36913]
        (1842616 call _freeIterator[1123136] _iterator[36908])
      }
    }
    (933829 return _void[55])
  }
  function chpl_enc_validate_buf[986737](const in arg buf[986739]:c_ptr(uint(8))[937423], const in arg len[986741]:int(64)[13], ref arg numCodepoints[986743]:_ref(int(64))[936572]) : int(32)[95] "extern" "instantiated generic" "invisible fn" "local args" "no fn body" "resolved" "no return value for void"
  {
    val ret[986747]:int(32)[95] "RVV" "temp"
    (986759 return ret[986747])
  }
  function on_fn[1106182](const in arg needle[1807122]:__serializeHelper[28086], const  ref arg this[1807124]:_ref(string)[937939], const in arg region[1807126]:range(byteIndex,bounded,false)[1025792], ref arg ret[1807128]:_ref(int(64))[936572]) : void[4] "on" "resolved"
  {
    val needle[2083951]:string[26] "temp"
    ref needle[2083952]:string[26] "temp"
    ref tmp[2083958]:string[26] "temp"
    (2083962 'move' tmp[2083958](2083960 'set reference' needle[2083951]))
    (2083955 call chpl__deserialize[1792422] needle[1807122] tmp[2083958])
    (2083967 'move' needle[2083952](2083965 'set reference' needle[2083951]))
    {
      val localRet[1106195]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1106197 'move' localRet[1106195] -2)
      ref call_tmp[1106202]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1106204 'move' call_tmp[1106202](1106207 call buffLen[757886] needle[2083952]))
      const-val nLen[1106210]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[1107363]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1107367 'move' coerce_tmp[1107363](1107365 'deref' call_tmp[1106202]))
      (1844338 '=' nLen[1106210] coerce_tmp[1107363])
      (1106212 'noop')
      const-val call_tmp[1106216]:(range(int(64),bounded,false),int(64))[1084924] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1832695]:(range(int(64),bounded,false),int(64))[1084924] "temp"
      (1106221 call getView[1031154] this[1807124] region[1807126] ret_tmp[1832695])
      (1832698 'move' call_tmp[1106216] ret_tmp[1832695])
      const-val tmp[1106224]:(range(int(64),bounded,false),int(64))[1084924] "dead at end of block" "const" "insert auto destroy" "temp"
      (1106226 'move' tmp[1106224] call_tmp[1106216])
      1
      ref call_tmp[1106234]:_ref(range(int(64),bounded,false))[1026858] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1106236 'move' call_tmp[1106234](1107378 '.' tmp[1106224] x0[1084920]))
      const-val view[1106241]:range(int(64),bounded,false)[1026814] "dead at end of block" "const" "insert auto destroy"
      (1106243 'move' view[1106241](1107381 'deref' call_tmp[1106234]))
      const-val call_tmp[1106247]:int(64)[13] "dead at end of block" "maybe param" "temp"
      (1106249 'move' call_tmp[1106247](1106252 call size[1035789] view[1106241]))
      const-val thisLen[1106255]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      (1106257 'move' thisLen[1106255] call_tmp[1106247])
      {
        const-val call_tmp[1106700]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1106702 'move' call_tmp[1106700](1106705 call ==[435628] nLen[1106210] 0))
        const-val call_tmp[1106708]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1106710 'move' call_tmp[1106708] call_tmp[1106700])
        if call_tmp[1106708]
        {
          {
            (1106734 call =[435327] localRet[1106195] -1)
          }
        }
      }
      const-val call_tmp[1106789]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1106791 'move' call_tmp[1106789](1106794 call >[437672] nLen[1106210] thisLen[1106255]))
      const-val call_tmp[1106797]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1106799 'move' call_tmp[1106797] call_tmp[1106789])
      if call_tmp[1106797]
      {
        (1106814 call =[435327] localRet[1106195] -1)
      }
      const-val call_tmp[1106827]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1106829 'move' call_tmp[1106827](1106832 call ==[435628] localRet[1106195] -2))
      const-val call_tmp[1106835]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1106837 'move' call_tmp[1106835] call_tmp[1106827])
      if call_tmp[1106835]
      {
        (1106852 call =[435327] localRet[1106195] -1)
        const-val call_tmp[1106857]:string[26] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[1829503]:string[26] "temp"
        (1106865 call localize[32886] needle[2083952] ret_tmp[1829503])
        (1829506 'move' call_tmp[1106857] ret_tmp[1829503])
        const localNeedle[1106866]:string[26] "dead at end of block" "const" "insert auto destroy"
        (1106868 'move' localNeedle[1106866] call_tmp[1106857])
        const-val call_tmp[1106873]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (1106875 'move' call_tmp[1106873](1106878 call -[440416] thisLen[1106255] nLen[1106210]))
        const-val call_tmp[1106881]:int(64)[13] "dead at end of block" "maybe param" "temp"
        (1106883 'move' call_tmp[1106881](1106886 call +[949666] call_tmp[1106873]))
        const-val numPossible[1106889]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        (1106891 'move' numPossible[1106889] call_tmp[1106881])
        const-val searchSpace[1106895]:range(int(64),bounded,false)[1026814] "dead at end of block" "const" "insert auto destroy"
        const-val tmp[1106897]:range(int(64),bounded,false)[1026814] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        const-val tmp[1106908]:range(int(64),bounded,false)[1026814] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1106910]:range(int(64),boundedLow,false)[1087565] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1833539]:range(int(64),boundedLow,false)[1087565] "temp"
        (1106915 call chpl_build_low_bounded_range[1086958] 0 ret_tmp[1833539])
        (1833542 'move' call_tmp[1106910] ret_tmp[1833539])
        const-val ret_tmp[1833653]:range(int(64),bounded,false)[1026814] "temp"
        (1106920 call #[1087925] call_tmp[1106910] numPossible[1106889] ret_tmp[1833653])
        (1833656 'move' tmp[1106908] ret_tmp[1833653])
        (1106923 'move' tmp[1106897] tmp[1106908])
        (1106965 'move' searchSpace[1106895] tmp[1106897])
        {
          val _indexOfInterest[1106974]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1106976]:_ic_these_range_int64_t_bounded_F[1096703] "dead at end of block" "expr temp" "temp"
          (1106978 'move' _iterator[1106976](1106981 call _getIterator[1095320] searchSpace[1106895]))
          {
            val ret[1911963]:_ir_these_range_int64_t_bounded_F[1096709] "dead after last mention" "RVV" "temp"
            const-val _return_tmp_[1911965]:bool[10] "dead after last mention" "temp"
            const-val this[1912266]:range(int(64),bounded,false)[1026814] "temp"
            (1912271 'move' this[1912266](1912268 '.v' _iterator[1106976] F0_this[2014280]))
            (1911967 'move' _return_tmp_[1911965](1911970 call checkIfIterWillOverflow[1095814] this[1912266] 1))
            val i[1911973]:int(64)[13] "dead at end of block" "insert auto destroy"
            val call_tmp[1911975]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (1911977 'move' i[1911973] 0)
            ref call_tmp[1911980]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[1912273]:range(int(64),bounded,false)[1026814] "temp"
            (1912278 'move' this[1912273](1912275 '.v' _iterator[1106976] F0_this[2014280]))
            (1911982 'move' call_tmp[1911980](1911985 call _low[1028452] this[1912273]))
            const-val start[1911987]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1911989]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1911991 'move' coerce_tmp[1911989](1911993 'deref' call_tmp[1911980]))
            (1911995 '=' start[1911987] coerce_tmp[1911989])
            (1911998 'noop')
            ref call_tmp[1911999]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[1912280]:range(int(64),bounded,false)[1026814] "temp"
            (1912285 'move' this[1912280](1912282 '.v' _iterator[1106976] F0_this[2014280]))
            (1912001 'move' call_tmp[1911999](1912004 call _high[1028660] this[1912280]))
            const end[1912006]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1912008]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1912010 'move' coerce_tmp[1912008](1912012 'deref' call_tmp[1911999]))
            (1912014 '=' end[1912006] coerce_tmp[1912008])
            (1912017 'noop')
            CForLoop[1912018] hazard
            {
              const-val yret[1912033]:int(64)[13] "dead after last mention" "YVV" "temp"
              const-val call_tmp[1912035]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val this[1912287]:range(int(64),bounded,false)[1026814] "temp"
              (1912292 'move' this[1912287](1912289 '.v' _iterator[1106976] F0_this[2014280]))
              (1912037 'move' call_tmp[1912035](1912040 call chpl_intToIdx[1028480] this[1912287] i[1911973]))
              (1912043 'move' yret[1912033] call_tmp[1912035])
              const-val _yieldedIndex[1912057]:int(64)[13] "temp"
              (1912264 'move' _yieldedIndex[1912057] call_tmp[1912035])
              {
                const-val i[1912059]:int(64)[13] "const" "index var" "insert auto destroy"
                (1912061 'move' i[1912059] _yieldedIndex[1912057])
                {
                  {
                    val _indexOfInterest[1912066]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    val _iterator[1912068]:_ic_chpl_direct_counted_range_iter[1103790] "dead at end of block" "expr temp" "temp"
                    const-val call_tmp[1912070]:_ir_chpl_direct_counted_range_iter[1103796] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val ret_tmp[1912072]:_ir_chpl_direct_counted_range_iter[1103796] "temp"
                    (1912075 call chpl_direct_counted_range_iter[457996] 0 nLen[1106210] ret_tmp[1912072])
                    (1912079 'move' call_tmp[1912070] ret_tmp[1912072])
                    (1912082 'move' _iterator[1912068](1912085 call _getIterator[1103805] call_tmp[1912070]))
                    {
                      val ret[1972540]:_ir_chpl_direct_counted_range_iter[1103796] "dead after last mention" "RVV" "temp"
                      val _indexOfInterest[1972542]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      val _iterator[1972544]:_ic_chpl_direct_counted_range_iter_helper[1103540] "dead at end of block" "expr temp" "temp"
                      const-val call_tmp[1972546]:_ir_chpl_direct_counted_range_iter_helper[1103546] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val ret_tmp[1972548]:_ir_chpl_direct_counted_range_iter_helper[1103546] "temp"
                      const-val low[1973140]:int(64)[13] "temp"
                      (1973145 'move' low[1973140](1973142 '.v' _iterator[1912068] F0_low[2010431]))
                      const-val count[1973147]:int(64)[13] "temp"
                      (1973152 'move' count[1973147](1973149 '.v' _iterator[1912068] F1_count[2010435]))
                      (1972551 call chpl_direct_counted_range_iter_helper[1102098] low[1973140] count[1973147] ret_tmp[1972548])
                      (1972555 'move' call_tmp[1972546] ret_tmp[1972548])
                      (1972558 'move' _iterator[1972544](1972561 call _getIterator[1103555] call_tmp[1972546]))
                      {
                        val ret[1972564]:_ir_chpl_direct_counted_range_iter_helper[1103546] "dead after last mention" "RVV" "temp"
                        val call_tmp[1972566]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                        const-val tmp[1972568]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        const-val tmp[1972570]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                        const-val call_tmp[1972572]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val count[1972574]:int(64)[13] "temp"
                        (1972576 'move' count[1972574](1972578 '.v' _iterator[1972544] F1_count[2014907]))
                        (1972581 'move' call_tmp[1972572](1972584 call <[948398] count[1972574]))
                        (1972586 'move' tmp[1972570] call_tmp[1972572])
                        (1972589 'move' tmp[1972568] call_tmp[1972572])
                        const-val call_tmp[1972592]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1972594 'move' call_tmp[1972592] call_tmp[1972572])
                        if call_tmp[1972572]
                        {
                          (1972600 call boundsCheckHalt[210167] "With a negative count, the range must have a last index.")
                        }
                        const-val tmp[1972603]:2*int(64)[1040056] "dead at end of block" "const" "insert auto destroy" "temp"
                        val tmp[1972605]:2*int(64)[1040056] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                        const-val tmp[1972607]:bool[10] "dead after last mention" "maybe param" "temp"
                        const-val call_tmp[1972609]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val count[1972611]:int(64)[13] "temp"
                        (1972613 'move' count[1972611](1972615 '.v' _iterator[1972544] F1_count[2014907]))
                        (1972618 'move' call_tmp[1972609](1972621 call ==[435628] count[1972611] 0))
                        (1972624 'move' tmp[1972607] call_tmp[1972609])
                        if call_tmp[1972609]
                        {
                          const-val tmp[1972629]:2*int(64)[1040056] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                          val call_tmp[1972631]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                          const-val call_tmp[1972633]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val low[1972635]:int(64)[13] "temp"
                          (1972637 'move' low[1972635](1972639 '.v' _iterator[1972544] F0_low[2014903]))
                          (1972642 'move' call_tmp[1972633](1972645 call _cast[956034] low[1972635]))
                          const-val call_tmp[1972647]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val coerce_tmp[1972649]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                          (1972651 'move' coerce_tmp[1972649](1972653 'cast' uint(64)[115] 1))
                          (1972656 'move' call_tmp[1972647](1972659 call -[962193] call_tmp[1972633]))
                          const-val call_tmp[1972661]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          (1972663 'move' call_tmp[1972661](1972666 call _cast[953543] call_tmp[1972647]))
                          const-val ret_tmp[1972668]:2*int(64)[1040056] "temp"
                          const-val low[1972670]:int(64)[13] "temp"
                          (1972672 'move' low[1972670](1972674 '.v' _iterator[1972544] F0_low[2014903]))
                          (1972678 call _build_tuple[1040014] low[1972670] call_tmp[1972661] ret_tmp[1972668])
                          (1972682 'move' tmp[1972629] ret_tmp[1972668])
                          (1972685 'move' tmp[1972605] tmp[1972629])
                        }
                        {
                          const-val tmp[1972689]:2*int(64)[1040056] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                          val call_tmp[1972691]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val call_tmp[1972693]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val count[1972695]:int(64)[13] "temp"
                          (1972697 'move' count[1972695](1972699 '.v' _iterator[1972544] F1_count[2014907]))
                          (1972702 'move' call_tmp[1972693] count[1972695])
                          const-val call_tmp[1972705]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val count[1972707]:int(64)[13] "temp"
                          (1972709 'move' count[1972707](1972711 '.v' _iterator[1972544] F1_count[2014907]))
                          (1972714 'move' call_tmp[1972705](1972717 call -[962226] count[1972707]))
                          const-val call_tmp[1972719]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val low[1972721]:int(64)[13] "temp"
                          (1972723 'move' low[1972721](1972725 '.v' _iterator[1972544] F0_low[2014903]))
                          (1972728 'move' call_tmp[1972719](1972731 call +[439636] low[1972721] call_tmp[1972705]))
                          const-val ret_tmp[1972734]:2*int(64)[1040056] "temp"
                          const-val low[1972736]:int(64)[13] "temp"
                          (1972738 'move' low[1972736](1972740 '.v' _iterator[1972544] F0_low[2014903]))
                          (1972744 call _build_tuple[1040014] low[1972736] call_tmp[1972719] ret_tmp[1972734])
                          (1972748 'move' tmp[1972689] ret_tmp[1972734])
                          (1972751 'move' tmp[1972605] tmp[1972689])
                        }
                        (1972755 '=' tmp[1972603] tmp[1972605])
                        (1972758 'noop')
                        1
                        ref call_tmp[1972760]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
                        (1972762 'move' call_tmp[1972760](1972764 '.' tmp[1972603] x0[1040052]))
                        const-val start[1972767]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                        const-val coerce_tmp[1972769]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                        (1972771 'move' coerce_tmp[1972769](1972773 'deref' call_tmp[1972760]))
                        (1972775 '=' start[1972767] coerce_tmp[1972769])
                        (1972778 'noop')
                        ref call_tmp[1972779]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
                        (1972781 'move' call_tmp[1972779](1972783 '.' tmp[1972603] x1[1040054]))
                        const-val end[1972786]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                        const-val coerce_tmp[1972788]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                        (1972790 'move' coerce_tmp[1972788](1972792 'deref' call_tmp[1972779]))
                        (1972794 '=' end[1972786] coerce_tmp[1972788])
                        (1972797 'noop')
                        val _indexOfInterest[1972798]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                        val _iterator[1972800]:_ic_chpl_direct_param_stride_range_iter[1103286] "dead at end of block" "expr temp" "temp"
                        const-val call_tmp[1972802]:_ir_chpl_direct_param_stride_range_iter[1103292] "dead at end of block" "expr temp" "maybe param" "temp"
                        const-val ret_tmp[1972804]:_ir_chpl_direct_param_stride_range_iter[1103292] "temp"
                        (1972807 call chpl_direct_param_stride_range_iter[1102524] coerce_tmp[1972769] coerce_tmp[1972788] ret_tmp[1972804])
                        (1972811 'move' call_tmp[1972802] ret_tmp[1972804])
                        (1972814 'move' _iterator[1972800](1972817 call _getIterator[1103301] call_tmp[1972802]))
                        {
                          val ret[1972820]:_ir_chpl_direct_param_stride_range_iter[1103292] "dead after last mention" "RVV" "temp"
                          val call_tmp[1972822]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (1972825 call chpl_range_check_stride[1102844])
                          val i[1972826]:int(64)[13] "dead at end of block" "insert auto destroy"
                          val call_tmp[1972828]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (1972830 'move' i[1972826] 0)
                          val call_tmp[1972833]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val default_arg_first[1972835]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                          const-val low[1972837]:int(64)[13] "temp"
                          (1972839 'move' low[1972837](1972841 '.v' _iterator[1972800] F0_low[2016401]))
                          (1972844 'move' default_arg_first[1972835](1972847 call chpl_checkIfRangeIterWillOverflow_default_first[1103198] low[1972837]))
                          const-val default_arg_last[1972849]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                          const-val high[1972851]:int(64)[13] "temp"
                          (1972853 'move' high[1972851](1972855 '.v' _iterator[1972800] F1_high[2016405]))
                          (1972858 'move' default_arg_last[1972849](1972861 call chpl_checkIfRangeIterWillOverflow_default_last[1103226] high[1972851]))
                          const-val _return_tmp_[1972863]:bool[10] "dead after last mention" "temp"
                          const-val low[1972865]:int(64)[13] "temp"
                          (1972867 'move' low[1972865](1972869 '.v' _iterator[1972800] F0_low[2016401]))
                          const-val high[1972872]:int(64)[13] "temp"
                          (1972874 'move' high[1972872](1972876 '.v' _iterator[1972800] F1_high[2016405]))
                          (1972879 'move' _return_tmp_[1972863](1972882 call chpl_checkIfRangeIterWillOverflow[1096076] low[1972865] high[1972872] 1 default_arg_first[1972835] default_arg_last[1972849] 1))
                          CForLoop[1972889]
                          {
                            const-val yret[1972918]:int(64)[13] "dead after last mention" "YVV" "temp"
                            (1972920 'move' yret[1972918] i[1972826])
                            const-val _yieldedIndex[1972923]:int(64)[13] "temp"
                            (1972925 'move' _yieldedIndex[1972923] i[1972826])
                            {
                              const-val i[1972929]:int(64)[13] "const" "index var" "insert auto destroy"
                              (1972931 'move' i[1972929] _yieldedIndex[1972923])
                              const-val yret[1972934]:int(64)[13] "dead after last mention" "YVV" "temp"
                              (1972936 'move' yret[1972934] _yieldedIndex[1972923])
                              const-val _yieldedIndex[1972939]:int(64)[13] "temp"
                              (1972941 'move' _yieldedIndex[1972939] _yieldedIndex[1972923])
                              {
                                const-val i[1972945]:int(64)[13] "const" "index var" "insert auto destroy"
                                (1972947 'move' i[1972945] _yieldedIndex[1972939])
                                const-val yret[1972950]:int(64)[13] "dead after last mention" "YVV" "temp"
                                (1972952 'move' yret[1972950] _yieldedIndex[1972939])
                                const-val _yieldedIndex[1972988]:int(64)[13] "temp"
                                (1973138 'move' _yieldedIndex[1972988] _yieldedIndex[1972939])
                                {
                                  const-val j[1972990]:int(64)[13] "const" "index var" "insert auto destroy"
                                  (1972992 'move' j[1972990] _yieldedIndex[1972988])
                                  {
                                    const-val call_tmp[1972996]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                    (1972998 'move' call_tmp[1972996](1973001 call +[439636] i[1912059] j[1972990]))
                                    const-val call_tmp[1973004]:int(64)[13] "dead at end of block" "maybe param" "temp"
                                    (1973006 'move' call_tmp[1973004](1973009 call orderToIndex[1104040] view[1106241] call_tmp[1972996]))
                                    const-val idx[1973012]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                    (1973014 'move' idx[1973012] call_tmp[1973004])
                                    ref call_tmp[1973017]:_ref(uint(8))[936908] "dead after last mention" "maybe param" "temp"
                                    ref _this_tmp_[1973019]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "temp"
                                    (1973021 'move' _this_tmp_[1973019](1973024 call buff[757964] this[1807124]))
                                    val coerce_tmp[1973026]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1973028 'move' coerce_tmp[1973026](1973030 'deref' _this_tmp_[1973019]))
                                    (1973032 'move' call_tmp[1973017](1973035 call this[954091] coerce_tmp[1973026] idx[1973012]))
                                    ref call_tmp[1973038]:_ref(uint(8))[936908] "dead after last mention" "maybe param" "temp"
                                    ref _this_tmp_[1973040]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "reference to a const" "temp"
                                    (1973042 'move' _this_tmp_[1973040](1973045 call buff[757964] localNeedle[1106866]))
                                    val coerce_tmp[1973047]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1973049 'move' coerce_tmp[1973047](1973051 'deref' _this_tmp_[1973040]))
                                    (1973053 'move' call_tmp[1973038](1973056 call this[954091] coerce_tmp[1973047] j[1972990]))
                                    const-val call_tmp[1973059]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    const-val coerce_tmp[1973061]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1973063 'move' coerce_tmp[1973061](1973065 'deref' call_tmp[1973017]))
                                    const-val coerce_tmp[1973067]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1973069 'move' coerce_tmp[1973067](1973071 'deref' call_tmp[1973038]))
                                    (1973073 'move' call_tmp[1973059](1973076 call !=[436034] coerce_tmp[1973061] coerce_tmp[1973067]))
                                    const-val call_tmp[1973079]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1973081 'move' call_tmp[1973079] call_tmp[1973059])
                                    if call_tmp[1973079]
                                    {
                                      (1973129 call _freeIterator[1103474] _iterator[1972800])
                                      (1973132 call chpl__autoDestroy[1534672] tmp[1972603])
                                      (1973135 call _freeIterator[1103724] _iterator[1972544])
                                      break _breakLabel[1912227] _breakLabel[1912227]
                                    }
                                    const-val call_tmp[1973089]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1973091 'move' call_tmp[1973089](1973094 call -[962226] nLen[1106210]))
                                    const-val call_tmp[1973096]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1973098 'move' call_tmp[1973096](1973101 call ==[435628] j[1972990] call_tmp[1973089]))
                                    const-val call_tmp[1973104]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1973106 'move' call_tmp[1973104] call_tmp[1973096])
                                    if call_tmp[1973104]
                                    {
                                      {
                                        const-val call_tmp[1973112]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                                        (1973114 'move' call_tmp[1973112](1973117 call orderToIndex[1104040] view[1106241] i[1912059]))
                                        (1973121 call =[435327] localRet[1106195] call_tmp[1973112])
                                      }
                                    }
                                  }
                                  label _continueLabel[1973125]
                                }
                              }
                            }
                            {
                              const-val low[1972891]:int(64)[13] "temp"
                              (1972893 'move' low[1972891](1972895 '.v' _iterator[1972800] F0_low[2016401]))
                              (1972898 '=' i[1972826] low[1972891])
                            }
                            {
                              const-val high[1972902]:int(64)[13] "temp"
                              (1972904 'move' high[1972902](1972906 '.v' _iterator[1972800] F1_high[2016405]))
                              (1972909 '<=' i[1972826] high[1972902])
                            }
                            {
                              val call_tmp[1972913]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                              (1972915 '+=' i[1972826] 1)
                            }
                          }
                          label _endchpl_direct_param_stride_range_iter[1972971]
                        }
                        (1972974 call _freeIterator[1103474] _iterator[1972800])
                        (1972977 call chpl__autoDestroy[1534672] tmp[1972603])
                        label _endchpl_direct_counted_range_iter_helper[1972979]
                      }
                      (1972982 call _freeIterator[1103724] _iterator[1972544])
                      label _endchpl_direct_counted_range_iter[1972984]
                    }
                    label _breakLabel[1912227]
                    (1912230 call _freeIterator[1103974] _iterator[1912068])
                  }
                  const-val tmp[1912232]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  const-val tmp[1912234]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  const-val call_tmp[1912236]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1912238 'move' call_tmp[1912236](1912241 call !=[436012] localRet[1106195] -1))
                  (1912244 'move' tmp[1912234] call_tmp[1912236])
                  (1912247 'move' tmp[1912232] tmp[1912234])
                  const-val call_tmp[1912250]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1912252 'move' call_tmp[1912250] tmp[1912232])
                  if call_tmp[1912250]
                  {
                    break _breakLabel[1107265] _breakLabel[1107265]
                  }
                }
                label _continueLabel[1912260]
              }
              {
                (1912020 '=' i[1911973] coerce_tmp[1911989])
              }
              {
                (1912024 '<=' i[1911973] end[1912006])
              }
              {
                val call_tmp[1912028]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (1912030 '+=' i[1911973] 1)
              }
            }
            label _endthese[1912053]
          }
          label _breakLabel[1107265]
          (1844349 call _freeIterator[1102006] _iterator[1106976])
        }
        (1844352 call chpl__autoDestroy[1534375] searchSpace[1106895])
        (1844355 call chpl__autoDestroy[1540744] call_tmp[1106910])
        (1844358 call chpl__autoDestroy[1461530] localNeedle[1106866])
      }
      (1107285 call =[435327] ret[1807128] localRet[1106195])
      (1844362 call chpl__autoDestroy[1534375] view[1106241])
      (1844365 call chpl__autoDestroy[1540699] tmp[1106224])
    }
    (2083969 call chpl__autoDestroy[1461717] needle[1807122])
    (2083972 call chpl__autoDestroy[1461530] needle[2083951])
    (1107291 return _void[55])
  }
  function on_fn[1182878](const in arg needle[1807162]:__serializeHelper[28086], const  ref arg this[1807164]:_ref(string)[937939], const in arg region[1807166]:range(byteIndex,boundedLow,false)[1143403], ref arg ret[1807168]:_ref(int(64))[936572]) : void[4] "on" "resolved"
  {
    val needle[2084207]:string[26] "temp"
    ref needle[2084208]:string[26] "temp"
    ref tmp[2084214]:string[26] "temp"
    (2084218 'move' tmp[2084214](2084216 'set reference' needle[2084207]))
    (2084211 call chpl__deserialize[1792422] needle[1807162] tmp[2084214])
    (2084223 'move' needle[2084208](2084221 'set reference' needle[2084207]))
    {
      val localRet[1182891]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1182893 'move' localRet[1182891] -2)
      ref call_tmp[1182898]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1182900 'move' call_tmp[1182898](1182903 call buffLen[757886] needle[2084208]))
      const-val nLen[1182906]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[1184059]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1184063 'move' coerce_tmp[1184059](1184061 'deref' call_tmp[1182898]))
      (1847004 '=' nLen[1182906] coerce_tmp[1184059])
      (1182908 'noop')
      const-val call_tmp[1182912]:(range(int(64),bounded,false),int(64))[1084924] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1834452]:(range(int(64),bounded,false),int(64))[1084924] "temp"
      (1182917 call getView[1144441] this[1807164] region[1807166] ret_tmp[1834452])
      (1834455 'move' call_tmp[1182912] ret_tmp[1834452])
      const-val tmp[1182920]:(range(int(64),bounded,false),int(64))[1084924] "dead at end of block" "const" "insert auto destroy" "temp"
      (1182922 'move' tmp[1182920] call_tmp[1182912])
      1
      ref call_tmp[1182930]:_ref(range(int(64),bounded,false))[1026858] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1182932 'move' call_tmp[1182930](1184074 '.' tmp[1182920] x0[1084920]))
      const-val view[1182937]:range(int(64),bounded,false)[1026814] "dead at end of block" "const" "insert auto destroy"
      (1182939 'move' view[1182937](1184077 'deref' call_tmp[1182930]))
      const-val call_tmp[1182943]:int(64)[13] "dead at end of block" "maybe param" "temp"
      (1182945 'move' call_tmp[1182943](1182948 call size[1035789] view[1182937]))
      const-val thisLen[1182951]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      (1182953 'move' thisLen[1182951] call_tmp[1182943])
      {
        const-val call_tmp[1183396]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1183398 'move' call_tmp[1183396](1183401 call ==[435628] nLen[1182906] 0))
        const-val call_tmp[1183404]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1183406 'move' call_tmp[1183404] call_tmp[1183396])
        if call_tmp[1183404]
        {
          {
            (1183430 call =[435327] localRet[1182891] -1)
          }
        }
      }
      const-val call_tmp[1183485]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1183487 'move' call_tmp[1183485](1183490 call >[437672] nLen[1182906] thisLen[1182951]))
      const-val call_tmp[1183493]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1183495 'move' call_tmp[1183493] call_tmp[1183485])
      if call_tmp[1183493]
      {
        (1183510 call =[435327] localRet[1182891] -1)
      }
      const-val call_tmp[1183523]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1183525 'move' call_tmp[1183523](1183528 call ==[435628] localRet[1182891] -2))
      const-val call_tmp[1183531]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1183533 'move' call_tmp[1183531] call_tmp[1183523])
      if call_tmp[1183531]
      {
        (1183548 call =[435327] localRet[1182891] -1)
        const-val call_tmp[1183553]:string[26] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[1829569]:string[26] "temp"
        (1183561 call localize[32886] needle[2084208] ret_tmp[1829569])
        (1829572 'move' call_tmp[1183553] ret_tmp[1829569])
        const localNeedle[1183562]:string[26] "dead at end of block" "const" "insert auto destroy"
        (1183564 'move' localNeedle[1183562] call_tmp[1183553])
        const-val call_tmp[1183569]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (1183571 'move' call_tmp[1183569](1183574 call -[440416] thisLen[1182951] nLen[1182906]))
        const-val call_tmp[1183577]:int(64)[13] "dead at end of block" "maybe param" "temp"
        (1183579 'move' call_tmp[1183577](1183582 call +[949666] call_tmp[1183569]))
        const-val numPossible[1183585]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        (1183587 'move' numPossible[1183585] call_tmp[1183577])
        const-val searchSpace[1183591]:range(int(64),bounded,false)[1026814] "dead at end of block" "const" "insert auto destroy"
        const-val tmp[1183593]:range(int(64),bounded,false)[1026814] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        const-val tmp[1183604]:range(int(64),bounded,false)[1026814] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1183606]:range(int(64),boundedLow,false)[1087565] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1833569]:range(int(64),boundedLow,false)[1087565] "temp"
        (1183611 call chpl_build_low_bounded_range[1086958] 0 ret_tmp[1833569])
        (1833572 'move' call_tmp[1183606] ret_tmp[1833569])
        const-val ret_tmp[1833665]:range(int(64),bounded,false)[1026814] "temp"
        (1183616 call #[1087925] call_tmp[1183606] numPossible[1183585] ret_tmp[1833665])
        (1833668 'move' tmp[1183604] ret_tmp[1833665])
        (1183619 'move' tmp[1183593] tmp[1183604])
        (1183661 'move' searchSpace[1183591] tmp[1183593])
        {
          val _indexOfInterest[1183670]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1183672]:_ic_these_range_int64_t_bounded_F[1096703] "dead at end of block" "expr temp" "temp"
          (1183674 'move' _iterator[1183672](1183677 call _getIterator[1095320] searchSpace[1183591]))
          {
            val ret[1915521]:_ir_these_range_int64_t_bounded_F[1096709] "dead after last mention" "RVV" "temp"
            const-val _return_tmp_[1915523]:bool[10] "dead after last mention" "temp"
            const-val this[1915824]:range(int(64),bounded,false)[1026814] "temp"
            (1915829 'move' this[1915824](1915826 '.v' _iterator[1183672] F0_this[2014280]))
            (1915525 'move' _return_tmp_[1915523](1915528 call checkIfIterWillOverflow[1095814] this[1915824] 1))
            val i[1915531]:int(64)[13] "dead at end of block" "insert auto destroy"
            val call_tmp[1915533]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (1915535 'move' i[1915531] 0)
            ref call_tmp[1915538]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[1915831]:range(int(64),bounded,false)[1026814] "temp"
            (1915836 'move' this[1915831](1915833 '.v' _iterator[1183672] F0_this[2014280]))
            (1915540 'move' call_tmp[1915538](1915543 call _low[1028452] this[1915831]))
            const-val start[1915545]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1915547]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1915549 'move' coerce_tmp[1915547](1915551 'deref' call_tmp[1915538]))
            (1915553 '=' start[1915545] coerce_tmp[1915547])
            (1915556 'noop')
            ref call_tmp[1915557]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[1915838]:range(int(64),bounded,false)[1026814] "temp"
            (1915843 'move' this[1915838](1915840 '.v' _iterator[1183672] F0_this[2014280]))
            (1915559 'move' call_tmp[1915557](1915562 call _high[1028660] this[1915838]))
            const end[1915564]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1915566]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1915568 'move' coerce_tmp[1915566](1915570 'deref' call_tmp[1915557]))
            (1915572 '=' end[1915564] coerce_tmp[1915566])
            (1915575 'noop')
            CForLoop[1915576] hazard
            {
              const-val yret[1915591]:int(64)[13] "dead after last mention" "YVV" "temp"
              const-val call_tmp[1915593]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val this[1915845]:range(int(64),bounded,false)[1026814] "temp"
              (1915850 'move' this[1915845](1915847 '.v' _iterator[1183672] F0_this[2014280]))
              (1915595 'move' call_tmp[1915593](1915598 call chpl_intToIdx[1028480] this[1915845] i[1915531]))
              (1915601 'move' yret[1915591] call_tmp[1915593])
              const-val _yieldedIndex[1915615]:int(64)[13] "temp"
              (1915822 'move' _yieldedIndex[1915615] call_tmp[1915593])
              {
                const-val i[1915617]:int(64)[13] "const" "index var" "insert auto destroy"
                (1915619 'move' i[1915617] _yieldedIndex[1915615])
                {
                  {
                    val _indexOfInterest[1915624]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    val _iterator[1915626]:_ic_chpl_direct_counted_range_iter[1103790] "dead at end of block" "expr temp" "temp"
                    const-val call_tmp[1915628]:_ir_chpl_direct_counted_range_iter[1103796] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val ret_tmp[1915630]:_ir_chpl_direct_counted_range_iter[1103796] "temp"
                    (1915633 call chpl_direct_counted_range_iter[457996] 0 nLen[1182906] ret_tmp[1915630])
                    (1915637 'move' call_tmp[1915628] ret_tmp[1915630])
                    (1915640 'move' _iterator[1915626](1915643 call _getIterator[1103805] call_tmp[1915628]))
                    {
                      val ret[1975031]:_ir_chpl_direct_counted_range_iter[1103796] "dead after last mention" "RVV" "temp"
                      val _indexOfInterest[1975033]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      val _iterator[1975035]:_ic_chpl_direct_counted_range_iter_helper[1103540] "dead at end of block" "expr temp" "temp"
                      const-val call_tmp[1975037]:_ir_chpl_direct_counted_range_iter_helper[1103546] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val ret_tmp[1975039]:_ir_chpl_direct_counted_range_iter_helper[1103546] "temp"
                      const-val low[1975631]:int(64)[13] "temp"
                      (1975636 'move' low[1975631](1975633 '.v' _iterator[1915626] F0_low[2010431]))
                      const-val count[1975638]:int(64)[13] "temp"
                      (1975643 'move' count[1975638](1975640 '.v' _iterator[1915626] F1_count[2010435]))
                      (1975042 call chpl_direct_counted_range_iter_helper[1102098] low[1975631] count[1975638] ret_tmp[1975039])
                      (1975046 'move' call_tmp[1975037] ret_tmp[1975039])
                      (1975049 'move' _iterator[1975035](1975052 call _getIterator[1103555] call_tmp[1975037]))
                      {
                        val ret[1975055]:_ir_chpl_direct_counted_range_iter_helper[1103546] "dead after last mention" "RVV" "temp"
                        val call_tmp[1975057]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                        const-val tmp[1975059]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        const-val tmp[1975061]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                        const-val call_tmp[1975063]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val count[1975065]:int(64)[13] "temp"
                        (1975067 'move' count[1975065](1975069 '.v' _iterator[1975035] F1_count[2014907]))
                        (1975072 'move' call_tmp[1975063](1975075 call <[948398] count[1975065]))
                        (1975077 'move' tmp[1975061] call_tmp[1975063])
                        (1975080 'move' tmp[1975059] call_tmp[1975063])
                        const-val call_tmp[1975083]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1975085 'move' call_tmp[1975083] call_tmp[1975063])
                        if call_tmp[1975063]
                        {
                          (1975091 call boundsCheckHalt[210167] "With a negative count, the range must have a last index.")
                        }
                        const-val tmp[1975094]:2*int(64)[1040056] "dead at end of block" "const" "insert auto destroy" "temp"
                        val tmp[1975096]:2*int(64)[1040056] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                        const-val tmp[1975098]:bool[10] "dead after last mention" "maybe param" "temp"
                        const-val call_tmp[1975100]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val count[1975102]:int(64)[13] "temp"
                        (1975104 'move' count[1975102](1975106 '.v' _iterator[1975035] F1_count[2014907]))
                        (1975109 'move' call_tmp[1975100](1975112 call ==[435628] count[1975102] 0))
                        (1975115 'move' tmp[1975098] call_tmp[1975100])
                        if call_tmp[1975100]
                        {
                          const-val tmp[1975120]:2*int(64)[1040056] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                          val call_tmp[1975122]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                          const-val call_tmp[1975124]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val low[1975126]:int(64)[13] "temp"
                          (1975128 'move' low[1975126](1975130 '.v' _iterator[1975035] F0_low[2014903]))
                          (1975133 'move' call_tmp[1975124](1975136 call _cast[956034] low[1975126]))
                          const-val call_tmp[1975138]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val coerce_tmp[1975140]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                          (1975142 'move' coerce_tmp[1975140](1975144 'cast' uint(64)[115] 1))
                          (1975147 'move' call_tmp[1975138](1975150 call -[962193] call_tmp[1975124]))
                          const-val call_tmp[1975152]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          (1975154 'move' call_tmp[1975152](1975157 call _cast[953543] call_tmp[1975138]))
                          const-val ret_tmp[1975159]:2*int(64)[1040056] "temp"
                          const-val low[1975161]:int(64)[13] "temp"
                          (1975163 'move' low[1975161](1975165 '.v' _iterator[1975035] F0_low[2014903]))
                          (1975169 call _build_tuple[1040014] low[1975161] call_tmp[1975152] ret_tmp[1975159])
                          (1975173 'move' tmp[1975120] ret_tmp[1975159])
                          (1975176 'move' tmp[1975096] tmp[1975120])
                        }
                        {
                          const-val tmp[1975180]:2*int(64)[1040056] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                          val call_tmp[1975182]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val call_tmp[1975184]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val count[1975186]:int(64)[13] "temp"
                          (1975188 'move' count[1975186](1975190 '.v' _iterator[1975035] F1_count[2014907]))
                          (1975193 'move' call_tmp[1975184] count[1975186])
                          const-val call_tmp[1975196]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val count[1975198]:int(64)[13] "temp"
                          (1975200 'move' count[1975198](1975202 '.v' _iterator[1975035] F1_count[2014907]))
                          (1975205 'move' call_tmp[1975196](1975208 call -[962226] count[1975198]))
                          const-val call_tmp[1975210]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val low[1975212]:int(64)[13] "temp"
                          (1975214 'move' low[1975212](1975216 '.v' _iterator[1975035] F0_low[2014903]))
                          (1975219 'move' call_tmp[1975210](1975222 call +[439636] low[1975212] call_tmp[1975196]))
                          const-val ret_tmp[1975225]:2*int(64)[1040056] "temp"
                          const-val low[1975227]:int(64)[13] "temp"
                          (1975229 'move' low[1975227](1975231 '.v' _iterator[1975035] F0_low[2014903]))
                          (1975235 call _build_tuple[1040014] low[1975227] call_tmp[1975210] ret_tmp[1975225])
                          (1975239 'move' tmp[1975180] ret_tmp[1975225])
                          (1975242 'move' tmp[1975096] tmp[1975180])
                        }
                        (1975246 '=' tmp[1975094] tmp[1975096])
                        (1975249 'noop')
                        1
                        ref call_tmp[1975251]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
                        (1975253 'move' call_tmp[1975251](1975255 '.' tmp[1975094] x0[1040052]))
                        const-val start[1975258]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                        const-val coerce_tmp[1975260]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                        (1975262 'move' coerce_tmp[1975260](1975264 'deref' call_tmp[1975251]))
                        (1975266 '=' start[1975258] coerce_tmp[1975260])
                        (1975269 'noop')
                        ref call_tmp[1975270]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
                        (1975272 'move' call_tmp[1975270](1975274 '.' tmp[1975094] x1[1040054]))
                        const-val end[1975277]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                        const-val coerce_tmp[1975279]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                        (1975281 'move' coerce_tmp[1975279](1975283 'deref' call_tmp[1975270]))
                        (1975285 '=' end[1975277] coerce_tmp[1975279])
                        (1975288 'noop')
                        val _indexOfInterest[1975289]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                        val _iterator[1975291]:_ic_chpl_direct_param_stride_range_iter[1103286] "dead at end of block" "expr temp" "temp"
                        const-val call_tmp[1975293]:_ir_chpl_direct_param_stride_range_iter[1103292] "dead at end of block" "expr temp" "maybe param" "temp"
                        const-val ret_tmp[1975295]:_ir_chpl_direct_param_stride_range_iter[1103292] "temp"
                        (1975298 call chpl_direct_param_stride_range_iter[1102524] coerce_tmp[1975260] coerce_tmp[1975279] ret_tmp[1975295])
                        (1975302 'move' call_tmp[1975293] ret_tmp[1975295])
                        (1975305 'move' _iterator[1975291](1975308 call _getIterator[1103301] call_tmp[1975293]))
                        {
                          val ret[1975311]:_ir_chpl_direct_param_stride_range_iter[1103292] "dead after last mention" "RVV" "temp"
                          val call_tmp[1975313]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (1975316 call chpl_range_check_stride[1102844])
                          val i[1975317]:int(64)[13] "dead at end of block" "insert auto destroy"
                          val call_tmp[1975319]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (1975321 'move' i[1975317] 0)
                          val call_tmp[1975324]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val default_arg_first[1975326]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                          const-val low[1975328]:int(64)[13] "temp"
                          (1975330 'move' low[1975328](1975332 '.v' _iterator[1975291] F0_low[2016401]))
                          (1975335 'move' default_arg_first[1975326](1975338 call chpl_checkIfRangeIterWillOverflow_default_first[1103198] low[1975328]))
                          const-val default_arg_last[1975340]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                          const-val high[1975342]:int(64)[13] "temp"
                          (1975344 'move' high[1975342](1975346 '.v' _iterator[1975291] F1_high[2016405]))
                          (1975349 'move' default_arg_last[1975340](1975352 call chpl_checkIfRangeIterWillOverflow_default_last[1103226] high[1975342]))
                          const-val _return_tmp_[1975354]:bool[10] "dead after last mention" "temp"
                          const-val low[1975356]:int(64)[13] "temp"
                          (1975358 'move' low[1975356](1975360 '.v' _iterator[1975291] F0_low[2016401]))
                          const-val high[1975363]:int(64)[13] "temp"
                          (1975365 'move' high[1975363](1975367 '.v' _iterator[1975291] F1_high[2016405]))
                          (1975370 'move' _return_tmp_[1975354](1975373 call chpl_checkIfRangeIterWillOverflow[1096076] low[1975356] high[1975363] 1 default_arg_first[1975326] default_arg_last[1975340] 1))
                          CForLoop[1975380]
                          {
                            const-val yret[1975409]:int(64)[13] "dead after last mention" "YVV" "temp"
                            (1975411 'move' yret[1975409] i[1975317])
                            const-val _yieldedIndex[1975414]:int(64)[13] "temp"
                            (1975416 'move' _yieldedIndex[1975414] i[1975317])
                            {
                              const-val i[1975420]:int(64)[13] "const" "index var" "insert auto destroy"
                              (1975422 'move' i[1975420] _yieldedIndex[1975414])
                              const-val yret[1975425]:int(64)[13] "dead after last mention" "YVV" "temp"
                              (1975427 'move' yret[1975425] _yieldedIndex[1975414])
                              const-val _yieldedIndex[1975430]:int(64)[13] "temp"
                              (1975432 'move' _yieldedIndex[1975430] _yieldedIndex[1975414])
                              {
                                const-val i[1975436]:int(64)[13] "const" "index var" "insert auto destroy"
                                (1975438 'move' i[1975436] _yieldedIndex[1975430])
                                const-val yret[1975441]:int(64)[13] "dead after last mention" "YVV" "temp"
                                (1975443 'move' yret[1975441] _yieldedIndex[1975430])
                                const-val _yieldedIndex[1975479]:int(64)[13] "temp"
                                (1975629 'move' _yieldedIndex[1975479] _yieldedIndex[1975430])
                                {
                                  const-val j[1975481]:int(64)[13] "const" "index var" "insert auto destroy"
                                  (1975483 'move' j[1975481] _yieldedIndex[1975479])
                                  {
                                    const-val call_tmp[1975487]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                    (1975489 'move' call_tmp[1975487](1975492 call +[439636] i[1915617] j[1975481]))
                                    const-val call_tmp[1975495]:int(64)[13] "dead at end of block" "maybe param" "temp"
                                    (1975497 'move' call_tmp[1975495](1975500 call orderToIndex[1104040] view[1182937] call_tmp[1975487]))
                                    const-val idx[1975503]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                    (1975505 'move' idx[1975503] call_tmp[1975495])
                                    ref call_tmp[1975508]:_ref(uint(8))[936908] "dead after last mention" "maybe param" "temp"
                                    ref _this_tmp_[1975510]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "temp"
                                    (1975512 'move' _this_tmp_[1975510](1975515 call buff[757964] this[1807164]))
                                    val coerce_tmp[1975517]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1975519 'move' coerce_tmp[1975517](1975521 'deref' _this_tmp_[1975510]))
                                    (1975523 'move' call_tmp[1975508](1975526 call this[954091] coerce_tmp[1975517] idx[1975503]))
                                    ref call_tmp[1975529]:_ref(uint(8))[936908] "dead after last mention" "maybe param" "temp"
                                    ref _this_tmp_[1975531]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "reference to a const" "temp"
                                    (1975533 'move' _this_tmp_[1975531](1975536 call buff[757964] localNeedle[1183562]))
                                    val coerce_tmp[1975538]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1975540 'move' coerce_tmp[1975538](1975542 'deref' _this_tmp_[1975531]))
                                    (1975544 'move' call_tmp[1975529](1975547 call this[954091] coerce_tmp[1975538] j[1975481]))
                                    const-val call_tmp[1975550]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    const-val coerce_tmp[1975552]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1975554 'move' coerce_tmp[1975552](1975556 'deref' call_tmp[1975508]))
                                    const-val coerce_tmp[1975558]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1975560 'move' coerce_tmp[1975558](1975562 'deref' call_tmp[1975529]))
                                    (1975564 'move' call_tmp[1975550](1975567 call !=[436034] coerce_tmp[1975552] coerce_tmp[1975558]))
                                    const-val call_tmp[1975570]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1975572 'move' call_tmp[1975570] call_tmp[1975550])
                                    if call_tmp[1975570]
                                    {
                                      (1975620 call _freeIterator[1103474] _iterator[1975291])
                                      (1975623 call chpl__autoDestroy[1534672] tmp[1975094])
                                      (1975626 call _freeIterator[1103724] _iterator[1975035])
                                      break _breakLabel[1915785] _breakLabel[1915785]
                                    }
                                    const-val call_tmp[1975580]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1975582 'move' call_tmp[1975580](1975585 call -[962226] nLen[1182906]))
                                    const-val call_tmp[1975587]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1975589 'move' call_tmp[1975587](1975592 call ==[435628] j[1975481] call_tmp[1975580]))
                                    const-val call_tmp[1975595]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1975597 'move' call_tmp[1975595] call_tmp[1975587])
                                    if call_tmp[1975595]
                                    {
                                      {
                                        const-val call_tmp[1975603]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                                        (1975605 'move' call_tmp[1975603](1975608 call orderToIndex[1104040] view[1182937] i[1915617]))
                                        (1975612 call =[435327] localRet[1182891] call_tmp[1975603])
                                      }
                                    }
                                  }
                                  label _continueLabel[1975616]
                                }
                              }
                            }
                            {
                              const-val low[1975382]:int(64)[13] "temp"
                              (1975384 'move' low[1975382](1975386 '.v' _iterator[1975291] F0_low[2016401]))
                              (1975389 '=' i[1975317] low[1975382])
                            }
                            {
                              const-val high[1975393]:int(64)[13] "temp"
                              (1975395 'move' high[1975393](1975397 '.v' _iterator[1975291] F1_high[2016405]))
                              (1975400 '<=' i[1975317] high[1975393])
                            }
                            {
                              val call_tmp[1975404]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                              (1975406 '+=' i[1975317] 1)
                            }
                          }
                          label _endchpl_direct_param_stride_range_iter[1975462]
                        }
                        (1975465 call _freeIterator[1103474] _iterator[1975291])
                        (1975468 call chpl__autoDestroy[1534672] tmp[1975094])
                        label _endchpl_direct_counted_range_iter_helper[1975470]
                      }
                      (1975473 call _freeIterator[1103724] _iterator[1975035])
                      label _endchpl_direct_counted_range_iter[1975475]
                    }
                    label _breakLabel[1915785]
                    (1915788 call _freeIterator[1103974] _iterator[1915626])
                  }
                  const-val tmp[1915790]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  const-val tmp[1915792]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  const-val call_tmp[1915794]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1915796 'move' call_tmp[1915794](1915799 call !=[436012] localRet[1182891] -1))
                  (1915802 'move' tmp[1915792] call_tmp[1915794])
                  (1915805 'move' tmp[1915790] tmp[1915792])
                  const-val call_tmp[1915808]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1915810 'move' call_tmp[1915808] tmp[1915790])
                  if call_tmp[1915808]
                  {
                    break _breakLabel[1183961] _breakLabel[1183961]
                  }
                }
                label _continueLabel[1915818]
              }
              {
                (1915578 '=' i[1915531] coerce_tmp[1915547])
              }
              {
                (1915582 '<=' i[1915531] end[1915564])
              }
              {
                val call_tmp[1915586]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (1915588 '+=' i[1915531] 1)
              }
            }
            label _endthese[1915611]
          }
          label _breakLabel[1183961]
          (1847015 call _freeIterator[1102006] _iterator[1183672])
        }
        (1847018 call chpl__autoDestroy[1534375] searchSpace[1183591])
        (1847021 call chpl__autoDestroy[1540744] call_tmp[1183606])
        (1847024 call chpl__autoDestroy[1461530] localNeedle[1183562])
      }
      (1183981 call =[435327] ret[1807168] localRet[1182891])
      (1847028 call chpl__autoDestroy[1534375] view[1182937])
      (1847031 call chpl__autoDestroy[1540699] tmp[1182920])
    }
    (2084225 call chpl__autoDestroy[1461717] needle[1807162])
    (2084228 call chpl__autoDestroy[1461530] needle[2084207])
    (1183987 return _void[55])
  }
  function wrapon_fn[2085495](const in arg dummy_locale_arg[2085497]:chpl_localeID_t[209294], in arg buf[2085499]:c_void_ptr[149], in arg buf_size[2085501]:int(64)[13], in arg c[2085503]:_class_localson_fn[2085455]) : void[4] "on block"
  {
    val _0_tmp[2085508]:chpl_localeID_t[209294] "temp"
    (2085513 'move' _0_tmp[2085508](2085510 '.v' c[2085503] _0_tmp[2085458]))
    ref _1_this[2085515]:string[26] "temp"
    (2085520 'move' _1_this[2085515](2085517 '.v' c[2085503] _1_this[2085460]))
    (2085506 call on_fn[933786] _1_this[2085515])
    (2085523 return _void[55])
  }
  function wrapon_fn[2085599](const in arg dummy_locale_arg[2085601]:chpl_localeID_t[209294], in arg buf[2085603]:c_void_ptr[149], in arg buf_size[2085605]:int(64)[13], in arg c[2085607]:_class_localson_fn[2085547]) : void[4] "on block"
  {
    val _0_tmp[2085612]:chpl_localeID_t[209294] "temp"
    (2085617 'move' _0_tmp[2085612](2085614 '.v' c[2085607] _0_tmp[2085550]))
    ref _1_this[2085619]:string[26] "temp"
    (2085624 'move' _1_this[2085619](2085621 '.v' c[2085607] _1_this[2085552]))
    ref _2_result[2085627]:bool[10] "temp"
    (2085632 'move' _2_result[2085627](2085629 '.v' c[2085607] _2_result[2085554]))
    (2085610 call on_fn[933822] _1_this[2085619] _2_result[2085627])
    (2085635 return _void[55])
  }
  function wrapon_fn[2091065](const in arg dummy_locale_arg[2091067]:chpl_localeID_t[209294], in arg buf[2091069]:c_void_ptr[149], in arg buf_size[2091071]:int(64)[13], in arg c[2091073]:_class_localson_fn[2091001]) : void[4] "on block"
  {
    val _0_tmp[2091078]:chpl_localeID_t[209294] "temp"
    (2091083 'move' _0_tmp[2091078](2091080 '.v' c[2091073] _0_tmp[2091004]))
    val _1_needle_data[2091085]:__serializeHelper[28086] "temp"
    (2091090 'move' _1_needle_data[2091085](2091087 '.v' c[2091073] _1_needle_data[2091006]))
    ref _2_this[2091093]:string[26] "temp"
    (2091098 'move' _2_this[2091093](2091095 '.v' c[2091073] _2_this[2091008]))
    val _3_region[2091101]:range(byteIndex,bounded,false)[1025792] "temp"
    (2091106 'move' _3_region[2091101](2091103 '.v' c[2091073] _3_region[2091010]))
    ref _4_ret[2091109]:int(64)[13] "temp"
    (2091114 'move' _4_ret[2091109](2091111 '.v' c[2091073] _4_ret[2091012]))
    (2091076 call on_fn[1106182] _1_needle_data[2091085] _2_this[2091093] _3_region[2091101] _4_ret[2091109])
    (2091117 return _void[55])
  }
  function wrapon_fn[2091633](const in arg dummy_locale_arg[2091635]:chpl_localeID_t[209294], in arg buf[2091637]:c_void_ptr[149], in arg buf_size[2091639]:int(64)[13], in arg c[2091641]:_class_localson_fn[2091569]) : void[4] "on block"
  {
    val _0_tmp[2091646]:chpl_localeID_t[209294] "temp"
    (2091651 'move' _0_tmp[2091646](2091648 '.v' c[2091641] _0_tmp[2091572]))
    val _1_needle_data[2091653]:__serializeHelper[28086] "temp"
    (2091658 'move' _1_needle_data[2091653](2091655 '.v' c[2091641] _1_needle_data[2091574]))
    ref _2_this[2091661]:string[26] "temp"
    (2091666 'move' _2_this[2091661](2091663 '.v' c[2091641] _2_this[2091576]))
    val _3_region[2091669]:range(byteIndex,boundedLow,false)[1143403] "temp"
    (2091674 'move' _3_region[2091669](2091671 '.v' c[2091641] _3_region[2091578]))
    ref _4_ret[2091677]:int(64)[13] "temp"
    (2091682 'move' _4_ret[2091677](2091679 '.v' c[2091641] _4_ret[2091580]))
    (2091644 call on_fn[1182878] _1_needle_data[2091653] _2_this[2091661] _3_region[2091669] _4_ret[2091677])
    (2091685 return _void[55])
  }
}