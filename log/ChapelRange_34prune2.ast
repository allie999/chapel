AST dump for ChapelRange after pass prune2.
Module use list: ChapelBase SysBasic HaltWrappers DSIUtil ChapelStandard SysCTypes 

{
  function chpl__init_ChapelRange[415951]() : void[4] "insert line file info" "module init" "resolved"
  {
    (512121 return _void[55])
  }
  type BoundedRangeType[64213] def bounded[64205]:BoundedRangeType[64213] def boundedLow[64207]:BoundedRangeType[64213] def boundedHigh[64209]:BoundedRangeType[64213] def boundedNone[64211]:BoundedRangeType[64213]
  type range(byteIndex,bounded,false)[1025792] val _low[1025754]:int(64)[13] val _high[1025759]:int(64)[13]
  type range(byteIndex,boundedLow,false)[1143403] val _low[1143365]:int(64)[13] val _high[1143370]:int(64)[13]
  type range(byteIndex,boundedHigh,false)[1184919] val _low[1184881]:int(64)[13] val _high[1184886]:int(64)[13]
  type range(int(64),bounded,false)[1026814] val _low[1026776]:int(64)[13] val _high[1026781]:int(64)[13]
  type range(int(64),bounded,true)[1413447] val _low[1413409]:int(64)[13] val _high[1413414]:int(64)[13] val _stride[1413419]:int(64)[13] val _alignment[1413429]:int(64)[13] val _aligned[1413439]:bool[10]
  type range(int(64),boundedLow,false)[1087565] val _low[1087527]:int(64)[13] val _high[1087532]:int(64)[13]
  type range(int(64),boundedHigh,false)[1187429] val _low[1187391]:int(64)[13] val _high[1187396]:int(64)[13]
  function range(int(64),bounded,false)[1026814].init[1026037](ref arg this[1026043]:range(int(64),bounded,false)[1026814], const in arg _low[1026064]:int(64)[13], const in arg _high[1026073]:int(64)[13], const in arg _stride[1026081]:int(64)[13], const in arg _alignment[1026090]:int(64)[13], const in arg _aligned[1026094]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (1026335 '.=' this[1026043] _low[1026776] _low[1026064])
    (1026367 '.=' this[1026043] _high[1026781] _high[1026073])
    const-val call_tmp[2117778]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2117780 'move' call_tmp[2117778](2117782 '==' _stride[1026081] 1))
    (1026650 call assert[210345] call_tmp[2117778])
    (1026653 return _void[55])
  }
  function range(byteIndex,bounded,false)[1025792].init[1028708](ref arg this[1028714]:range(byteIndex,bounded,false)[1025792], const  ref arg _low[1028735]:byteIndex[28170], const  ref arg _high[1028744]:byteIndex[28170], const in arg _stride[1028752]:int(64)[13], const  ref arg _alignment[1028761]:byteIndex[28170], const in arg _aligned[1028765]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[2261740]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2261742 'move' ret[2261740](2261744 '.v' _low[1028735] _bindex[28091]))
    (1028843 '.=' this[1028714] _low[1025754] ret[2261740])
    val ret[2261750]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2261752 'move' ret[2261750](2261754 '.v' _high[1028744] _bindex[28091]))
    (1028875 '.=' this[1028714] _high[1025759] ret[2261750])
    const-val call_tmp[2117793]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2117795 'move' call_tmp[2117793](2117797 '==' _stride[1028752] 1))
    (1029158 call assert[210345] call_tmp[2117793])
    (1029161 return _void[55])
  }
  function range(int(64),boundedLow,false)[1087565].init[1087012](ref arg this[1087018]:range(int(64),boundedLow,false)[1087565], const in arg _low[1087039]:int(64)[13], const in arg _high[1087048]:int(64)[13], const in arg _stride[1087056]:int(64)[13], const in arg _alignment[1087065]:int(64)[13], const in arg _aligned[1087069]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (1087138 '.=' this[1087018] _low[1087527] _low[1087039])
    (1087170 '.=' this[1087018] _high[1087532] _high[1087048])
    const-val call_tmp[2117908]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2117910 'move' call_tmp[2117908](2117912 '==' _stride[1087056] 1))
    (1087453 call assert[210345] call_tmp[2117908])
    (1087456 return _void[55])
  }
  function range(byteIndex,boundedLow,false)[1143403].init[1142850](ref arg this[1142856]:range(byteIndex,boundedLow,false)[1143403], const  ref arg _low[1142877]:byteIndex[28170], const  ref arg _high[1142886]:byteIndex[28170], const in arg _stride[1142894]:int(64)[13], const  ref arg _alignment[1142903]:byteIndex[28170], const in arg _aligned[1142907]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[2261796]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2261798 'move' ret[2261796](2261800 '.v' _low[1142877] _bindex[28091]))
    (1142976 '.=' this[1142856] _low[1143365] ret[2261796])
    val ret[2261806]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2261808 'move' ret[2261806](2261810 '.v' _high[1142886] _bindex[28091]))
    (1143008 '.=' this[1142856] _high[1143370] ret[2261806])
    const-val call_tmp[2118038]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2118040 'move' call_tmp[2118038](2118042 '==' _stride[1142894] 1))
    (1143291 call assert[210345] call_tmp[2118038])
    (1143294 return _void[55])
  }
  function range(byteIndex,boundedHigh,false)[1184919].init[1184366](ref arg this[1184372]:range(byteIndex,boundedHigh,false)[1184919], const  ref arg _low[1184393]:byteIndex[28170], const  ref arg _high[1184402]:byteIndex[28170], const in arg _stride[1184410]:int(64)[13], const  ref arg _alignment[1184419]:byteIndex[28170], const in arg _aligned[1184423]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[2261868]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2261870 'move' ret[2261868](2261872 '.v' _low[1184393] _bindex[28091]))
    (1184492 '.=' this[1184372] _low[1184881] ret[2261868])
    val ret[2261878]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2261880 'move' ret[2261878](2261882 '.v' _high[1184402] _bindex[28091]))
    (1184524 '.=' this[1184372] _high[1184886] ret[2261878])
    const-val call_tmp[2118113]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2118115 'move' call_tmp[2118113](2118117 '==' _stride[1184410] 1))
    (1184807 call assert[210345] call_tmp[2118113])
    (1184810 return _void[55])
  }
  function range(int(64),boundedHigh,false)[1187429].init[1188713](ref arg this[1188719]:range(int(64),boundedHigh,false)[1187429], const in arg _low[1188740]:int(64)[13], const in arg _high[1188749]:int(64)[13], const in arg _stride[1188757]:int(64)[13], const in arg _alignment[1188766]:int(64)[13], const in arg _aligned[1188770]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (1188839 '.=' this[1188719] _low[1187391] _low[1188740])
    (1188871 '.=' this[1188719] _high[1187396] _high[1188749])
    const-val call_tmp[2118128]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2118130 'move' call_tmp[2118128](2118132 '==' _stride[1188757] 1))
    (1189154 call assert[210345] call_tmp[2118128])
    (1189157 return _void[55])
  }
  function range(int(64),bounded,true)[1413447].init[1412886](ref arg this[1412892]:range(int(64),bounded,true)[1413447], const in arg _low[1412913]:int(64)[13], const in arg _high[1412922]:int(64)[13], const in arg _stride[1412930]:int(64)[13], const in arg _alignment[1412939]:int(64)[13], const in arg _aligned[1412943]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (1413072 '.=' this[1412892] _low[1413409] _low[1412913])
    (1413104 '.=' this[1412892] _high[1413414] _high[1412922])
    (1413158 '.=' this[1412892] _stride[1413419] 0)
    (1413212 '.=' this[1412892] _alignment[1413429] 0)
    (1413252 '.=' this[1412892] _aligned[1413439] 0)
    (2373037 '.=' this[1412892] _stride[1413419] _stride[1412930])
    (2373043 '.=' this[1412892] _alignment[1413429] _alignment[1412939])
    (2373049 '.=' this[1412892] _aligned[1413439] _aligned[1412943])
    (1413390 return _void[55])
  }
  function range(int(64),bounded,false)[1026814].init[1091264](ref arg this[1091270]:range(int(64),bounded,false)[1026814], const in arg _low[1091291]:int(64)[13], const in arg _high[1091300]:int(64)[13], const in arg _stride[1091302]:int(64)[13], const in arg _aligned[1091306]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (1091936 '.=' this[1091270] _low[1026776] _low[1091291])
    (1091968 '.=' this[1091270] _high[1026781] _high[1091300])
    (1092134 return _void[55])
  }
  function range(int(64),bounded,false)[1026814].init[1094475](ref arg this[1094481]:range(int(64),bounded,false)[1026814], const in arg _low[1094502]:int(64)[13], const in arg _high[1094511]:int(64)[13]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (1095075 '.=' this[1094481] _low[1026776] _low[1094502])
    (1095107 '.=' this[1094481] _high[1026781] _high[1094511])
    (1095273 return _void[55])
  }
  function chpl_build_bounded_range[455137](const in arg low[455144]:int(64)[13], const in arg high[455150]:int(64)[13], ref arg _retArg[1831823]:range(int(64),bounded,false)[1026814]) : void[4] "fn returns via _retArg" "resolved" "fn synchronization free"
  {
    const-val call_tmp[616791]:range(int(64),bounded,false)[1026814] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1026025]:range(int(64),bounded,false)[1026814] "dead after last mention" "delay instantiation" "temp"
    (1026028 call init[1026037] initTemp[1026025] low[455144] high[455150] 1 0 0)
    (616794 'move' call_tmp[616791] initTemp[1026025])
    (1831825 '=' _retArg[1831823] call_tmp[616791])
    (1831827 return _void[55])
  }
  function chpl_build_low_bounded_range[1086958](const in arg low[1086960]:int(64)[13], ref arg _retArg[1833629]:range(int(64),boundedLow,false)[1087565]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[1086983]:range(int(64),boundedLow,false)[1087565] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1087001]:range(int(64),boundedLow,false)[1087565] "dead after last mention" "delay instantiation" "temp"
    (1087004 call init[1087012] initTemp[1087001] low[1086960] 0 1 0 0)
    (1086985 'move' call_tmp[1086983] initTemp[1087001])
    (1833631 '=' _retArg[1833629] call_tmp[1086983])
    (1833633 return _void[55])
  }
  function range(int(64),bounded,false)[1026814].alignment[1034251](const in arg this[1034257]:range(int(64),bounded,false)[1026814]) : int(64)[13] "instantiated generic" "invisible fn" "method" "no doc" "no parens" "resolved" "fn synchronization free"
  {
    const-val coerce_tmp[2261430]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2261432 'move' coerce_tmp[2261430](2261434 '.v' this[1034257] _low[1026776]))
    (1034379 return coerce_tmp[2261430])
  }
  function range(int(64),boundedLow,false)[1087565].alignment[1128120](const in arg this[1128126]:range(int(64),boundedLow,false)[1087565]) : int(64)[13] "instantiated generic" "invisible fn" "method" "no doc" "no parens" "resolved" "fn synchronization free"
  {
    const-val coerce_tmp[2271852]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2271854 'move' coerce_tmp[2271852](2271856 '.v' this[1128126] _low[1087527]))
    (1128248 return coerce_tmp[2271852])
  }
  function range(byteIndex,boundedLow,false)[1143403].alignment[1148238](const in arg this[1148244]:range(byteIndex,boundedLow,false)[1143403], ref arg _retArg[1834582]:byteIndex[28170]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "no parens" "resolved"
  {
    const-val coerce_tmp[2272541]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2272543 'move' coerce_tmp[2272541](2272545 '.v' this[1148244] _low[1143365]))
    const-val ret[2272548]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2272550]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2272553 call init[28097] cpi[2272550])
    (2272555 '.=' cpi[2272550] _bindex[28091] coerce_tmp[2272541])
    (2272559 'move' ret[2272548] cpi[2272550])
    (1834584 '=' _retArg[1834582] ret[2272548])
    (1834586 return _void[55])
  }
  function range(int(64),boundedHigh,false)[1187429].alignment[1190594](const in arg this[1190600]:range(int(64),boundedHigh,false)[1187429]) : int(64)[13] "instantiated generic" "invisible fn" "method" "no doc" "no parens" "resolved" "fn synchronization free"
  {
    (1190624 return 0)
  }
  function range(byteIndex,boundedHigh,false)[1184919].alignment[1192661](const in arg this[1192667]:range(byteIndex,boundedHigh,false)[1184919], ref arg _retArg[1834904]:byteIndex[28170]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "no parens" "resolved"
  {
    const-val ret[2275596]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2275598]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2275601 call init[28097] cpi[2275598])
    (2275603 '.=' cpi[2275598] _bindex[28091] 0)
    (2275607 'move' ret[2275596] cpi[2275598])
    (1834906 '=' _retArg[1834904] ret[2275596])
    (1834908 return _void[55])
  }
  function range(int(64),bounded,false)[1026814].size[1035789](const in arg this[1035795]:range(int(64),bounded,false)[1026814]) : int(64)[13] "instantiated generic" "invisible fn" "method" "no parens" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_71[2378029]:string[26] "temp"
    (2378030 'move' "Attempt to divide by zero" "Attempt to divide by zero")
    val ret[1035802]:int(64)[13] "dead after last mention" "RVV" "temp"
    val ret[2262726]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2262728 'move' ret[2262726](2262730 '.v' this[1035795] _high[1026781]))
    val ret[2262758]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2262760 'move' ret[2262758](2262762 '.v' this[1035795] _low[1026776]))
    const-val call_tmp[2124237]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2124239 'move' call_tmp[2124237](2124241 '>' ret[2262758] ret[2262726]))
    if call_tmp[2124237]
    {
      (1035907 'move' ret[1035802] 0)
      gotoReturn _end_size[1036011] _end_size[1036011]
    }
    const-val call_tmp[2127251]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2127253 'move' call_tmp[2127251](2127255 '-' ret[2262726] ret[2262758]))
    const-val call_tmp[2212943]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2212945 'move' call_tmp[2212943](2212947 '==' 1 0))
    if call_tmp[2212943]
    {
      (2212953 call halt[154067] "Attempt to divide by zero")
    }
    const-val call_tmp[2212956]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2212958 'move' call_tmp[2212956](2212960 '/' call_tmp[2127251] 1))
    const-val call_tmp[2120477]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2120479 'move' call_tmp[2120477](2120481 '+' call_tmp[2212956] 1))
    (1036967 'move' ret[1035802] call_tmp[2120477])
    label _end_size[1036011]
    (1036013 return ret[1035802])
  }
  function range(int(64),bounded,true)[1413447].isAmbiguous[1415504](const in arg this[1415510]:range(int(64),bounded,true)[1413447]) : bool[10] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    val ret[2323837]:bool[10] "dead after last mention" "RVV" "temp"
    (2323839 'move' ret[2323837](2323841 '.v' this[1415510] _aligned[1413439]))
    const-val call_tmp[2114563]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2114565 'move' call_tmp[2114563](2114567 '!' ret[2323837]))
    val tmp[1415555]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2114563]
    {
      val ret[2322753]:int(64)[13] "dead after last mention" "RVV" "temp"
      (2322755 'move' ret[2322753](2322757 '.v' this[1415510] _stride[1413419]))
      const-val call_tmp[2124812]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2124814 'move' call_tmp[2124812](2124816 '>' ret[2322753] 1))
      val tmp[1415602]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if call_tmp[2124812]
      {
        (1415620 'move' tmp[1415602] 1)
      }
      {
        val ret[2322763]:int(64)[13] "dead after last mention" "RVV" "temp"
        (2322765 'move' ret[2322763](2322767 '.v' this[1415510] _stride[1413419]))
        const-val call_tmp[2323847]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2323849 'move' call_tmp[2323847](2323851 '<' ret[2322763] -1))
        (1415656 'move' tmp[1415602] call_tmp[2323847])
      }
      (1415669 'move' tmp[1415555] tmp[1415602])
    }
    {
      (1415675 'move' tmp[1415555] 0)
    }
    (1415685 return tmp[1415555])
  }
  function ==[1041912](const in arg r1[1041914]:range(int(64),bounded,false)[1026814], const in arg r2[1041916]:range(int(64),bounded,false)[1026814]) : bool[10] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1041941]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1042050]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1042052 'move' call_tmp[1042050](1042055 call size[1035789] r1[1041914]))
    const-val call_tmp[1042063]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1042065 'move' call_tmp[1042063](1042068 call size[1035789] r2[1041916]))
    const-val call_tmp[2115355]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2115357 'move' call_tmp[2115355](2115359 '!=' call_tmp[1042050] call_tmp[1042063]))
    if call_tmp[2115355]
    {
      (1042094 'move' ret[1041941] 0)
      gotoReturn _end_==[1042411] _end_==[1042411]
    }
    const-val call_tmp[2117848]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2117850 'move' call_tmp[2117848](2117852 '==' call_tmp[1042050] 0))
    if call_tmp[2117848]
    {
      (1042119 'move' ret[1041941] 1)
      gotoReturn _end_==[1042411] _end_==[1042411]
    }
    val ret[2262901]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2262903 'move' ret[2262901](2262905 '.v' r1[1041914] _low[1026776]))
    val ret[2262911]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2262913 'move' ret[2262911](2262915 '.v' r2[1041916] _low[1026776]))
    const-val call_tmp[2115365]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2115367 'move' call_tmp[2115365](2115369 '!=' ret[2262901] ret[2262911]))
    if call_tmp[2115365]
    {
      (1042160 'move' ret[1041941] 0)
      gotoReturn _end_==[1042411] _end_==[1042411]
    }
    const-val call_tmp[2117863]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2117865 'move' call_tmp[2117863](2117867 '==' call_tmp[1042050] 1))
    if call_tmp[2117863]
    {
      (1042185 'move' ret[1041941] 1)
      gotoReturn _end_==[1042411] _end_==[1042411]
    }
    (1042234 'move' ret[1041941] 1)
    label _end_==[1042411]
    (1042413 return ret[1041941])
  }
  function !=[1771704](const in arg r1[1771706]:range(int(64),bounded,false)[1026814], const in arg r2[1771708]:range(int(64),bounded,false)[1026814]) : bool[10] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[1771720]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1771722 'move' call_tmp[1771720](1771725 call ==[1041912] r1[1771706] r2[1771708]))
    const-val call_tmp[2114725]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2114727 'move' call_tmp[2114725](2114729 '!' call_tmp[1771720]))
    (1771739 return call_tmp[2114725])
  }
  function range(int(64),bounded,false)[1026814].safeCast[1297017](const in arg this[1297023]:range(int(64),bounded,false)[1026814], ref arg _retArg[1837084]:range(int(64),bounded,false)[1026814]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1297027]:range(int(64),bounded,false)[1026814] "dead after last mention" "RVV" "temp"
    val tmp[1297052]:range(int(64),bounded,false)[1026814] "dead at end of block" "insert auto destroy"
    (1297426 call init[1026037] tmp[1297052] 1 0 1 0 0)
    const-val coerce_tmp[1297404]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1297408 'move' coerce_tmp[1297404](2371836 '.v' this[1297023] _low[1026776]))
    (2371829 '.=' tmp[1297052] _low[1026776] coerce_tmp[1297404])
    const-val coerce_tmp[1297416]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1297420 'move' coerce_tmp[1297416](2371850 '.v' this[1297023] _high[1026781]))
    (2371843 '.=' tmp[1297052] _high[1026781] coerce_tmp[1297416])
    (1297358 'move' ret[1297027] tmp[1297052])
    label _end_safeCast[1297366]
    (1837086 '=' _retArg[1837084] ret[1297027])
    (1837088 return _void[55])
  }
  function _cast[1027562](const in arg r[1027566]:range(int(64),bounded,false)[1026814], ref arg _retArg[1832623]:range(byteIndex,bounded,false)[1025792]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "resolved"
  {
    const-val ret[1027568]:range(byteIndex,bounded,false)[1025792] "dead after last mention" "RVV" "temp"
    val tmp[1027578]:range(byteIndex,bounded,false)[1025792] "dead at end of block" "insert auto destroy"
    const-val default_arg__low[1029751]:byteIndex[28170] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val ret[2261947]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2261949]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2261952 call init[28097] cpi[2261949])
    (2261954 '.=' cpi[2261949] _bindex[28091] 1)
    (2261958 'move' ret[2261947] cpi[2261949])
    (1832632 'move' default_arg__low[1029751] ret[2261947])
    const-val default_arg__high[1029803]:byteIndex[28170] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val ret[2261974]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2261976]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2261979 call init[28097] cpi[2261976])
    (2261981 '.=' cpi[2261976] _bindex[28091] 0)
    (2261985 'move' ret[2261974] cpi[2261976])
    (1832644 'move' default_arg__high[1029803] ret[2261974])
    const-val default_arg__alignment[1029876]:byteIndex[28170] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val ret[2262007]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2262009]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2262012 call init[28097] cpi[2262009])
    (2262014 '.=' cpi[2262009] _bindex[28091] 0)
    (2262018 'move' ret[2262007] cpi[2262009])
    (1832656 'move' default_arg__alignment[1029876] ret[2262007])
    (1028699 call init[1028708] tmp[1027578] default_arg__low[1029751] default_arg__high[1029803] 1 default_arg__alignment[1029876] 0)
    const-val coerce_tmp[2261410]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2261412 'move' coerce_tmp[2261410](2261414 '.v' r[1027566] _low[1026776]))
    (2368999 '.=' tmp[1027578] _low[1025754] coerce_tmp[2261410])
    const-val coerce_tmp[2261640]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2261642 'move' coerce_tmp[2261640](2261644 '.v' r[1027566] _high[1026781]))
    (2369006 '.=' tmp[1027578] _high[1025759] coerce_tmp[2261640])
    (1027837 'move' ret[1027568] tmp[1027578])
    label _end__cast[1027845]
    (1832625 '=' _retArg[1832623] ret[1027568])
    (1832627 return _void[55])
  }
  function _cast[1032483](const in arg r[1032487]:range(byteIndex,bounded,false)[1025792], ref arg _retArg[1832731]:range(int(64),bounded,false)[1026814]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1032489]:range(int(64),bounded,false)[1026814] "dead after last mention" "RVV" "temp"
    val tmp[1032499]:range(int(64),bounded,false)[1026814] "dead at end of block" "insert auto destroy"
    (1033043 call init[1026037] tmp[1032499] 1 0 1 0 0)
    const-val call_tmp[1032696]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2262121]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2262123 'move' coerce_tmp[2262121](2262125 '.v' r[1032487] _low[1025754]))
    const-val ret[2262128]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2262130]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2262133 call init[28097] cpi[2262130])
    (2262135 '.=' cpi[2262130] _bindex[28091] coerce_tmp[2262121])
    (2262139 'move' ret[2262128] cpi[2262130])
    (1832740 'move' call_tmp[1032696] ret[2262128])
    val ret[2123872]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2123874 'move' ret[2123872](2123876 '.v' call_tmp[1032696] _bindex[28091]))
    (2369084 '.=' tmp[1032499] _low[1026776] ret[2123872])
    const-val call_tmp[1032735]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2262229]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2262231 'move' coerce_tmp[2262229](2262233 '.v' r[1032487] _high[1025759]))
    const-val ret[2262236]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2262238]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2262241 call init[28097] cpi[2262238])
    (2262243 '.=' cpi[2262238] _bindex[28091] coerce_tmp[2262229])
    (2262247 'move' ret[2262236] cpi[2262238])
    (1832782 'move' call_tmp[1032735] ret[2262236])
    val ret[2123888]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2123890 'move' ret[2123888](2123892 '.v' call_tmp[1032735] _bindex[28091]))
    (2369093 '.=' tmp[1032499] _high[1026781] ret[2123888])
    (1032758 'move' ret[1032489] tmp[1032499])
    label _end__cast[1032766]
    (1832733 '=' _retArg[1832731] ret[1032489])
    (1832735 return _void[55])
  }
  function _cast[1145813](const in arg r[1145817]:range(byteIndex,boundedLow,false)[1143403], ref arg _retArg[1834482]:range(int(64),boundedLow,false)[1087565]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1145819]:range(int(64),boundedLow,false)[1087565] "dead after last mention" "RVV" "temp"
    val tmp[1145829]:range(int(64),boundedLow,false)[1087565] "dead at end of block" "insert auto destroy"
    (1146333 call init[1087012] tmp[1145829] 1 0 1 0 0)
    const-val call_tmp[1146026]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2272508]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2272510 'move' coerce_tmp[2272508](2272512 '.v' r[1145817] _low[1143365]))
    const-val ret[2272515]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2272517]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2272520 call init[28097] cpi[2272517])
    (2272522 '.=' cpi[2272517] _bindex[28091] coerce_tmp[2272508])
    (2272526 'move' ret[2272515] cpi[2272517])
    (1834491 'move' call_tmp[1146026] ret[2272515])
    val ret[2123954]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2123956 'move' ret[2123954](2123958 '.v' call_tmp[1146026] _bindex[28091]))
    (2370372 '.=' tmp[1145829] _low[1087527] ret[2123954])
    const-val call_tmp[1146065]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2272652]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2272654 'move' coerce_tmp[2272652](2272656 '.v' r[1145817] _high[1143370]))
    const-val ret[2272659]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2272661]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2272664 call init[28097] cpi[2272661])
    (2272666 '.=' cpi[2272661] _bindex[28091] coerce_tmp[2272652])
    (2272670 'move' ret[2272659] cpi[2272661])
    (1834533 'move' call_tmp[1146065] ret[2272659])
    val ret[2123970]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2123972 'move' ret[2123970](2123974 '.v' call_tmp[1146065] _bindex[28091]))
    (2370381 '.=' tmp[1145829] _high[1087532] ret[2123970])
    (1146088 'move' ret[1145819] tmp[1145829])
    label _end__cast[1146096]
    (1834484 '=' _retArg[1834482] ret[1145819])
    (1834486 return _void[55])
  }
  function _cast[1187631](const in arg r[1187635]:range(byteIndex,boundedHigh,false)[1184919], ref arg _retArg[1834804]:range(int(64),boundedHigh,false)[1187429]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1187637]:range(int(64),boundedHigh,false)[1187429] "dead after last mention" "RVV" "temp"
    val tmp[1187647]:range(int(64),boundedHigh,false)[1187429] "dead at end of block" "insert auto destroy"
    (1188704 call init[1188713] tmp[1187647] 1 0 1 0 0)
    const-val call_tmp[1187844]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2275631]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2275633 'move' coerce_tmp[2275631](2275635 '.v' r[1187635] _low[1184881]))
    const-val ret[2275638]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2275640]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2275643 call init[28097] cpi[2275640])
    (2275645 '.=' cpi[2275640] _bindex[28091] coerce_tmp[2275631])
    (2275649 'move' ret[2275638] cpi[2275640])
    (1834813 'move' call_tmp[1187844] ret[2275638])
    val ret[2123996]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2123998 'move' ret[2123996](2124000 '.v' call_tmp[1187844] _bindex[28091]))
    (2370713 '.=' tmp[1187647] _low[1187391] ret[2123996])
    const-val call_tmp[1187883]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2275761]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2275763 'move' coerce_tmp[2275761](2275765 '.v' r[1187635] _high[1184886]))
    const-val ret[2275768]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2275770]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2275773 call init[28097] cpi[2275770])
    (2275775 '.=' cpi[2275770] _bindex[28091] coerce_tmp[2275761])
    (2275779 'move' ret[2275768] cpi[2275770])
    (1834849 'move' call_tmp[1187883] ret[2275768])
    val ret[2124012]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2124014 'move' ret[2124012](2124016 '.v' call_tmp[1187883] _bindex[28091]))
    (2370722 '.=' tmp[1187647] _high[1187396] ret[2124012])
    (1187906 'move' ret[1187637] tmp[1187647])
    label _end__cast[1187914]
    (1834806 '=' _retArg[1834804] ret[1187637])
    (1834808 return _void[55])
  }
  function range(int(64),bounded,false)[1026814].orderToIndex[1104040](const in arg this[1104046]:range(int(64),bounded,false)[1026814], const in arg ord[1104048]:int(64)[13]) : int(64)[13] "instantiated generic" "invisible fn" "method" "resolved"
  {
    const-val local__str_literal_923[2378453]:string[26] "temp"
    (2378454 'move' " that is larger than the range's number of indices " " that is larger than the range's number of indices ")
    const-val local__str_literal_921[2378447]:string[26] "temp"
    (2378448 'move' "invoking orderToIndex on an integer " "invoking orderToIndex on an integer ")
    const-val local__str_literal_919[2378441]:string[26] "temp"
    (2378442 'move' "invoking orderToIndex on a negative integer: " "invoking orderToIndex on a negative integer: ")
    const-val local__str_literal_915[2378435]:string[26] "temp"
    (2378436 'move' "invoking orderToIndex on a range that has no first index" "invoking orderToIndex on a range that has no first index")
    val ret[2270963]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2270965 'move' ret[2270963](2270967 '.v' this[1104046] _low[1026776]))
    val ret[2270970]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2270972 'move' ret[2270970](2270974 '.v' this[1104046] _high[1026781]))
    const-val call_tmp[2270977]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2270979 'move' call_tmp[2270977](2270981 '>' ret[2270963] ret[2270970]))
    val tmp[2270984]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2270977]
    {
      (2270988 'move' tmp[2270984] 0)
    }
    {
      (2270992 'move' tmp[2270984] 1)
    }
    const-val call_tmp[2114230]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2114232 'move' call_tmp[2114230](2114234 '!' tmp[2270984]))
    if call_tmp[2114230]
    {
      (1104104 call boundsCheckHalt[210167] "invoking orderToIndex on a range that has no first index")
    }
    const-val call_tmp[2116032]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2116034 'move' call_tmp[2116032](2116036 '<' ord[1104048] 0))
    if call_tmp[2116032]
    {
      const-val call_tmp[1104154]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1833083]:string[26] "temp"
      (1104159 call _cast[1063153] ord[1104048] ret_tmp[1833083])
      (1833086 'move' call_tmp[1104154] ret_tmp[1833083])
      const-val call_tmp[1104162]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1830037]:string[26] "temp"
      (1104167 call +[38342] "invoking orderToIndex on a negative integer: " call_tmp[1104154] ret_tmp[1830037])
      (1830040 'move' call_tmp[1104162] ret_tmp[1830037])
      (1104171 call boundsCheckHalt[210167] call_tmp[1104162])
      ref i_x[2131161]:string[26] "temp"
      (2131165 'move' i_x[2131161](2131163 'set reference' call_tmp[1104162]))
      (2131169 call deinit[30831] i_x[2131161])
      ref i_x[2131173]:string[26] "temp"
      (2131177 'move' i_x[2131173](2131175 'set reference' call_tmp[1104154]))
      (2131181 call deinit[30831] i_x[2131173])
    }
    const-val call_tmp[1104216]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1104218 'move' call_tmp[1104216](1104221 call size[1035789] this[1104046]))
    const-val call_tmp[2129029]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2129031 'move' call_tmp[2129029](2129033 '>=' ord[1104048] call_tmp[1104216]))
    if call_tmp[2129029]
    {
      const-val call_tmp[1104260]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1833089]:string[26] "temp"
      (1104265 call _cast[1063153] ord[1104048] ret_tmp[1833089])
      (1833092 'move' call_tmp[1104260] ret_tmp[1833089])
      const-val call_tmp[1104268]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1830043]:string[26] "temp"
      (1104273 call +[38342] "invoking orderToIndex on an integer " call_tmp[1104260] ret_tmp[1830043])
      (1830046 'move' call_tmp[1104268] ret_tmp[1830043])
      const-val call_tmp[1104276]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1830049]:string[26] "temp"
      (1104281 call +[38342] call_tmp[1104268] " that is larger than the range's number of indices " ret_tmp[1830049])
      (1830052 'move' call_tmp[1104276] ret_tmp[1830049])
      const-val call_tmp[1104284]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1104286 'move' call_tmp[1104284](1104289 call size[1035789] this[1104046]))
      const-val call_tmp[1104292]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1833095]:string[26] "temp"
      (1104297 call _cast[1063153] call_tmp[1104284] ret_tmp[1833095])
      (1833098 'move' call_tmp[1104292] ret_tmp[1833095])
      const-val call_tmp[1104300]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1830055]:string[26] "temp"
      (1104305 call +[38342] call_tmp[1104276] call_tmp[1104292] ret_tmp[1830055])
      (1830058 'move' call_tmp[1104300] ret_tmp[1830055])
      (1104309 call boundsCheckHalt[210167] call_tmp[1104300])
      ref i_x[2131185]:string[26] "temp"
      (2131189 'move' i_x[2131185](2131187 'set reference' call_tmp[1104300]))
      (2131193 call deinit[30831] i_x[2131185])
      ref i_x[2131197]:string[26] "temp"
      (2131201 'move' i_x[2131197](2131199 'set reference' call_tmp[1104292]))
      (2131205 call deinit[30831] i_x[2131197])
      ref i_x[2131209]:string[26] "temp"
      (2131213 'move' i_x[2131209](2131211 'set reference' call_tmp[1104276]))
      (2131217 call deinit[30831] i_x[2131209])
      ref i_x[2131221]:string[26] "temp"
      (2131225 'move' i_x[2131221](2131223 'set reference' call_tmp[1104268]))
      (2131229 call deinit[30831] i_x[2131221])
      ref i_x[2131233]:string[26] "temp"
      (2131237 'move' i_x[2131233](2131235 'set reference' call_tmp[1104260]))
      (2131241 call deinit[30831] i_x[2131233])
    }
    val ret[2262889]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2262891 'move' ret[2262889](2262893 '.v' this[1104046] _low[1026776]))
    const-val call_tmp[1104331]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1104333 'move' call_tmp[1104331](1104336 call chpl__addRangeStrides[1105027] ret[2262889] 1 ord[1104048]))
    (1104363 return call_tmp[1104331])
  }
  function chpl_by_help[1412169](const in arg r[1412171]:range(int(64),bounded,false)[1026814], const in arg step[1412173]:int(64)[13], ref arg _retArg[1838414]:range(int(64),bounded,true)[1413447]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val coerce_tmp[2261570]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2261572 'move' coerce_tmp[2261570](2261574 '.v' r[1412171] _low[1026776]))
    const-val coerce_tmp[2261730]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2261732 'move' coerce_tmp[2261730](2261734 '.v' r[1412171] _high[1026781]))
    const-val call_tmp[2285353]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2285355 'move' call_tmp[2285353](2285357 '*' 1 step[1412173]))
    const-val call_tmp[2124767]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2124769 'move' call_tmp[2124767](2124771 '>' call_tmp[2285353] 0))
    val tmp_x0[2352707]:bool[10] "temp"
    val tmp_x1[2352709]:int(64)[13] "temp"
    if call_tmp[2124767]
    {
      val ret[2270862]:int(64)[13] "dead after last mention" "RVV" "temp"
      (2270864 'move' ret[2270862](2270866 '.v' r[1412171] _low[1026776]))
      (2352715 'move' tmp_x0[2352707] 1)
      (2352720 'move' tmp_x1[2352709] ret[2270862])
    }
    {
      const-val call_tmp[2116152]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2116154 'move' call_tmp[2116152](2116156 '<' call_tmp[2285353] 0))
      val tmp_x0[2352749]:bool[10] "temp"
      val tmp_x1[2352751]:int(64)[13] "temp"
      if call_tmp[2116152]
      {
        val ret[2270912]:int(64)[13] "dead after last mention" "RVV" "temp"
        (2270914 'move' ret[2270912](2270916 '.v' r[1412171] _high[1026781]))
        (2352757 'move' tmp_x0[2352749] 1)
        (2352762 'move' tmp_x1[2352751] ret[2270912])
      }
      {
        (2352767 'move' tmp_x0[2352749] 0)
        (2352772 'move' tmp_x1[2352751] 0)
      }
      (2352725 'move' tmp_x0[2352707] tmp_x0[2352749])
      (2352730 'move' tmp_x1[2352709] tmp_x1[2352751])
    }
    (1412673 'noop')
    (1412691 'noop')
    (1412703 'noop')
    const-val call_tmp[1412721]:range(int(64),bounded,true)[1413447] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1412871]:range(int(64),bounded,true)[1413447] "dead after last mention" "delay instantiation" "temp"
    (1412874 call init[1412886] initTemp[1412871] coerce_tmp[2261570] coerce_tmp[2261730] call_tmp[2285353] tmp_x1[2352709] tmp_x0[2352707])
    (1412723 'move' call_tmp[1412721] initTemp[1412871])
    label _end_chpl_by_help[1412747]
    (1838416 '=' _retArg[1838414] call_tmp[1412721])
    (1838418 return _void[55])
  }
  function range(int(64),bounded,false)[1026814].this[1037448](const in arg this[1037454]:range(int(64),bounded,false)[1026814], const in arg other[1037456]:range(int(64),bounded,false)[1026814], ref arg _retArg[1832821]:range(int(64),bounded,false)[1026814]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    const-val coerce_tmp[1039938]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1039942 'move' coerce_tmp[1039938](2369117 '.v' this[1037454] _low[1026776]))
    (1038047 'noop')
    const-val coerce_tmp[1039951]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1039955 'move' coerce_tmp[1039951](2369127 '.v' this[1037454] _high[1026781]))
    (1038101 'noop')
    const-val coerce_tmp[1039968]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1039972 'move' coerce_tmp[1039968](2369137 '.v' other[1037456] _low[1026776]))
    (1038176 'noop')
    const-val coerce_tmp[1039981]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1039985 'move' coerce_tmp[1039981](2369147 '.v' other[1037456] _high[1026781]))
    (1038230 'noop')
    const-val ret_tmp[1832827]:2*int(64)[1040056] "temp"
    (2364340 '.=' ret_tmp[1832827] x0[1040052] 1)
    (2364344 '.=' ret_tmp[1832827] x1[1040054] 0)
    (1038417 'noop')
    (1038429 'noop')
    val tmp[2194007]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2194009]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2194011 'move' call_tmp[2194009](2194013 '>' coerce_tmp[1039938] coerce_tmp[1039968]))
    if call_tmp[2194009]
    {
      (2194018 'move' tmp[2194007] coerce_tmp[1039938])
    }
    {
      (2194022 'move' tmp[2194007] coerce_tmp[1039968])
    }
    val newlo[1039081]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1039083 'move' newlo[1039081] tmp[2194007])
    val tmp[2153524]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2153526]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2153528 'move' call_tmp[2153526](2153530 '<' coerce_tmp[1039951] coerce_tmp[1039981]))
    if call_tmp[2153526]
    {
      (2153535 'move' tmp[2153524] coerce_tmp[1039951])
    }
    {
      (2153539 'move' tmp[2153524] coerce_tmp[1039981])
    }
    val newhi[1039111]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1039113 'move' newhi[1039111] tmp[2153524])
    (2376756 'noop')
    const-val call_tmp[2114203]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2114205 'move' call_tmp[2114203](2114207 '!' 0))
    val tmp[1039161]:bool[10] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2114203]
    {
      (1039252 'move' tmp[1039161] 1)
    }
    {
      (1039258 'move' tmp[1039161] 0)
    }
    const-val call_tmp[1039334]:range(int(64),bounded,false)[1026814] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[1041828]:range(int(64),bounded,false)[1026814] "dead at end of block" "delay instantiation" "temp"
    (1041831 call init[1026037] initTemp[1041828] newlo[1039081] newhi[1039111] 1 0 tmp[1039161])
    (1039336 'move' call_tmp[1039334] initTemp[1041828])
    label _end_this[1039915]
    (1832823 '=' _retArg[1832821] call_tmp[1039334])
    (1832825 return _void[55])
  }
  function range(int(64),boundedLow,false)[1087565].this[1138969](const in arg this[1138975]:range(int(64),boundedLow,false)[1087565], const in arg other[1138977]:range(int(64),bounded,false)[1026814], ref arg _retArg[1834330]:range(int(64),bounded,false)[1026814]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    const-val coerce_tmp[1141459]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1141463 'move' coerce_tmp[1141459](2370304 '.v' this[1138975] _low[1087527]))
    (1139568 'noop')
    const-val coerce_tmp[1141472]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1141476 'move' coerce_tmp[1141472](2370314 '.v' other[1138977] _high[1026781]))
    (1139622 'noop')
    const-val coerce_tmp[1141489]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1141493 'move' coerce_tmp[1141489](2370324 '.v' other[1138977] _low[1026776]))
    (1139697 'noop')
    const-val coerce_tmp[1141502]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1141506 'move' coerce_tmp[1141502](2370334 '.v' other[1138977] _high[1026781]))
    (1139751 'noop')
    const-val ret_tmp[1832845]:2*int(64)[1040056] "temp"
    (2364354 '.=' ret_tmp[1832845] x0[1040052] 1)
    (2364358 '.=' ret_tmp[1832845] x1[1040054] 0)
    (1139938 'noop')
    (1139950 'noop')
    val tmp[2194029]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2194031]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2194033 'move' call_tmp[2194031](2194035 '>' coerce_tmp[1141459] coerce_tmp[1141489]))
    if call_tmp[2194031]
    {
      (2194040 'move' tmp[2194029] coerce_tmp[1141459])
    }
    {
      (2194044 'move' tmp[2194029] coerce_tmp[1141489])
    }
    val newlo[1140602]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1140604 'move' newlo[1140602] tmp[2194029])
    val tmp[2153546]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2153548]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2153550 'move' call_tmp[2153548](2153552 '<' coerce_tmp[1141472] coerce_tmp[1141502]))
    if call_tmp[2153548]
    {
      (2153557 'move' tmp[2153546] coerce_tmp[1141472])
    }
    {
      (2153561 'move' tmp[2153546] coerce_tmp[1141502])
    }
    val newhi[1140632]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1140634 'move' newhi[1140632] tmp[2153546])
    (2376757 'noop')
    const-val call_tmp[2114257]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2114259 'move' call_tmp[2114257](2114261 '!' 0))
    val tmp[1140682]:bool[10] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2114257]
    {
      (1140773 'move' tmp[1140682] 1)
    }
    {
      (1140779 'move' tmp[1140682] 0)
    }
    const-val call_tmp[1140855]:range(int(64),bounded,false)[1026814] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[1141943]:range(int(64),bounded,false)[1026814] "dead at end of block" "delay instantiation" "temp"
    (1141946 call init[1026037] initTemp[1141943] newlo[1140602] newhi[1140632] 1 0 tmp[1140682])
    (1140857 'move' call_tmp[1140855] initTemp[1141943])
    label _end_this[1141436]
    (1834332 '=' _retArg[1834330] call_tmp[1140855])
    (1834334 return _void[55])
  }
  function range(int(64),boundedHigh,false)[1187429].this[1200349](const in arg this[1200355]:range(int(64),boundedHigh,false)[1187429], const in arg other[1200357]:range(int(64),bounded,false)[1026814], ref arg _retArg[1834928]:range(int(64),bounded,false)[1026814]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    const-val coerce_tmp[1202839]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1202843 'move' coerce_tmp[1202839](2370787 '.v' other[1200357] _low[1026776]))
    (1200948 'noop')
    const-val coerce_tmp[1202852]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1202856 'move' coerce_tmp[1202852](2370797 '.v' this[1200355] _high[1187396]))
    (1201002 'noop')
    const-val coerce_tmp[1202869]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1202873 'move' coerce_tmp[1202869](2370807 '.v' other[1200357] _low[1026776]))
    (1201077 'noop')
    const-val coerce_tmp[1202882]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1202886 'move' coerce_tmp[1202882](2370817 '.v' other[1200357] _high[1026781]))
    (1201131 'noop')
    const-val ret_tmp[1832851]:2*int(64)[1040056] "temp"
    (2364368 '.=' ret_tmp[1832851] x0[1040052] 1)
    (2364372 '.=' ret_tmp[1832851] x1[1040054] 0)
    (1201318 'noop')
    (1201330 'noop')
    val tmp[2194051]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2194053]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2194055 'move' call_tmp[2194053](2194057 '>' coerce_tmp[1202839] coerce_tmp[1202869]))
    if call_tmp[2194053]
    {
      (2194062 'move' tmp[2194051] coerce_tmp[1202839])
    }
    {
      (2194066 'move' tmp[2194051] coerce_tmp[1202869])
    }
    val newlo[1201982]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1201984 'move' newlo[1201982] tmp[2194051])
    val tmp[2153568]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2153570]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2153572 'move' call_tmp[2153570](2153574 '<' coerce_tmp[1202852] coerce_tmp[1202882]))
    if call_tmp[2153570]
    {
      (2153579 'move' tmp[2153568] coerce_tmp[1202852])
    }
    {
      (2153583 'move' tmp[2153568] coerce_tmp[1202882])
    }
    val newhi[1202012]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1202014 'move' newhi[1202012] tmp[2153568])
    (2376758 'noop')
    const-val call_tmp[2114284]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2114286 'move' call_tmp[2114284](2114288 '!' 0))
    val tmp[1202062]:bool[10] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2114284]
    {
      (1202153 'move' tmp[1202062] 1)
    }
    {
      (1202159 'move' tmp[1202062] 0)
    }
    const-val call_tmp[1202235]:range(int(64),bounded,false)[1026814] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[1203550]:range(int(64),bounded,false)[1026814] "dead at end of block" "delay instantiation" "temp"
    (1203553 call init[1026037] initTemp[1203550] newlo[1201982] newhi[1202012] 1 0 tmp[1202062])
    (1202237 'move' call_tmp[1202235] initTemp[1203550])
    label _end_this[1202816]
    (1834930 '=' _retArg[1834928] call_tmp[1202235])
    (1834932 return _void[55])
  }
  function chpl_count_help[1088316](const in arg r[1088318]:range(int(64),boundedLow,false)[1087565], const in arg count[1088320]:int(64)[13], ref arg _retArg[1833731]:range(int(64),bounded,false)[1026814]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_978[2378423]:string[26] "temp"
    (2378424 'move' "With a negative count, the range must have a last index." "With a negative count, the range must have a last index.")
    val ret[1088322]:range(int(64),bounded,false)[1026814] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2117923]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2117925 'move' call_tmp[2117923](2117927 '==' count[1088320] 0))
    if call_tmp[2117923]
    {
      const-val coerce_tmp[1090713]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1090717 'move' coerce_tmp[1090713](2369528 '.v' r[1088318] _low[1087527]))
      const-val call_tmp[1088620]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1088622 'move' call_tmp[1088620](1088625 call absSameType[1090842] 1))
      const-val coerce_tmp[1090946]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1090950 'move' coerce_tmp[1090946](2369535 '.v' r[1088318] _low[1087527]))
      const-val call_tmp[2127261]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2127263 'move' call_tmp[2127261](2127265 '-' coerce_tmp[1090946] call_tmp[1088620]))
      const-val call_tmp[1088683]:range(int(64),bounded,false)[1026814] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[1091241]:range(int(64),bounded,false)[1026814] "dead after last mention" "delay instantiation" "temp"
      (1091244 call init[1091264] initTemp[1091241] coerce_tmp[1090713] call_tmp[2127261] 1 1)
      (1088685 'move' call_tmp[1088683] initTemp[1091241])
      (1088705 'move' ret[1088322] call_tmp[1088683])
      gotoReturn _end_chpl_count_help[1090288] _end_chpl_count_help[1090288]
    }
    (2270569 'noop')
    const-val call_tmp[2114221]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2114223 'move' call_tmp[2114221](2114225 '!' 0))
    val tmp[1089128]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2114221]
    {
      const-val call_tmp[2115972]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2115974 'move' call_tmp[2115972](2115976 '<' count[1088320] 0))
      (1089161 'move' tmp[1089128] call_tmp[2115972])
    }
    {
      (1089167 'move' tmp[1089128] 0)
    }
    if tmp[1089128]
    {
      (1089183 call boundsCheckHalt[210167] "With a negative count, the range must have a last index.")
    }
    const-val call_tmp[2270576]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2270578 'move' call_tmp[2270576](2270580 '*' count[1088320] 1))
    val tmp[1089690]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2124252]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2124254 'move' call_tmp[2124252](2124256 '>' call_tmp[2270576] 0))
    if call_tmp[2124252]
    {
      (1095317 'move' tmp[1089690](2369542 '.v' r[1088318] _low[1087527]))
    }
    {
      const-val tmp[1089723]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[2120507]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2120509 'move' call_tmp[2120507](2120511 '+' call_tmp[2270576] 1))
      const-val coerce_tmp[1094320]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1094324 'move' coerce_tmp[1094320](2369552 '.v' r[1088318] _high[1087532]))
      (1089757 'move' tmp[1089723](1089760 call chpl__add[1093372] coerce_tmp[1094320] call_tmp[2120507]))
      (1089764 'move' tmp[1089690] tmp[1089723])
    }
    val tmp[1089777]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2116002]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2116004 'move' call_tmp[2116002](2116006 '<' call_tmp[2270576] 0))
    if call_tmp[2116002]
    {
      (1095319 'move' tmp[1089777](2369559 '.v' r[1088318] _high[1087532]))
    }
    {
      const-val tmp[1089810]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[2144370]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2144372 'move' call_tmp[2144370](2144374 '-' call_tmp[2270576] 1))
      const-val coerce_tmp[1094373]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1094377 'move' coerce_tmp[1094373](2369569 '.v' r[1088318] _low[1087527]))
      (1089844 'move' tmp[1089810](1089847 call chpl__add[1093372] coerce_tmp[1094373] call_tmp[2144370]))
      (1089851 'move' tmp[1089777] tmp[1089810])
    }
    const-val call_tmp[1090256]:range(int(64),bounded,false)[1026814] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1094452]:range(int(64),bounded,false)[1026814] "dead after last mention" "delay instantiation" "temp"
    (1094455 call init[1094475] initTemp[1094452] tmp[1089690] tmp[1089777])
    (1090258 'move' call_tmp[1090256] initTemp[1094452])
    (1090278 'move' ret[1088322] call_tmp[1090256])
    label _end_chpl_count_help[1090288]
    (1833733 '=' _retArg[1833731] ret[1088322])
    (1833735 return _void[55])
  }
  function #[1087925](const in arg r[1087927]:range(int(64),boundedLow,false)[1087565], const in arg count[1087940]:int(64)[13], ref arg _retArg[1833719]:range(int(64),bounded,false)[1026814]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[1088171]:range(int(64),bounded,false)[1026814] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1833725]:range(int(64),bounded,false)[1026814] "temp"
    (1088176 call chpl_count_help[1088316] r[1087927] count[1087940] ret_tmp[1833725])
    (1833728 'move' call_tmp[1088171] ret_tmp[1833725])
    (1833721 '=' _retArg[1833719] call_tmp[1088171])
    (1833723 return _void[55])
  }
  function chpl_checkIfRangeIterWillOverflow[976350](const in arg low[976354]:int(32)[95], const in arg high[976356]:int(32)[95], const in arg stride[976358]:int(64)[13], const in arg first[976364]:int(32)[95], const in arg last[976370]:int(32)[95], const in arg shouldHalt[976376]:bool[10]) : bool[10] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_992[2377797]:string[26] "temp"
    (2377798 'move' "Iteration over a bounded range may be incorrect due to overflow." "Iteration over a bounded range may be incorrect due to overflow.")
    val ret[976378]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2212239]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2212241 'move' call_tmp[2212239](2212243 '>' low[976354] high[976356]))
    if call_tmp[2212239]
    {
      (976409 'move' ret[976378] 0)
      gotoReturn _end_chpl_checkIfRangeIterWillOverflow[976890] _end_chpl_checkIfRangeIterWillOverflow[976890]
    }
    val willOverFlow[976416]:bool[10] "dead at end of block" "insert auto destroy"
    (976418 'move' willOverFlow[976416] 0)
    const-val coerce_tmp[976998]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (977004 'move' coerce_tmp[976998](977000 'cast' int(32)[95] 0))
    const-val call_tmp[2212249]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2212251 'move' call_tmp[2212249](2212253 '>' last[976370] coerce_tmp[976998]))
    val tmp[976459]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2212249]
    {
      const-val call_tmp[2124197]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2124199 'move' call_tmp[2124197](2124201 '>' stride[976358] 0))
      (976492 'move' tmp[976459] call_tmp[2124197])
    }
    {
      (976498 'move' tmp[976459] 0)
    }
    if tmp[976459]
    {
      const-val call_tmp[2212543]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2212545 'move' call_tmp[2212543](2212547 '-' 2147483647 last[976370]))
      const-val coerce_tmp[977158]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (977164 'move' coerce_tmp[977158](977160 'cast' int(64)[13] call_tmp[2212543]))
      const-val call_tmp[2124207]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2124209 'move' call_tmp[2124207](2124211 '>' stride[976358] coerce_tmp[977158]))
      if call_tmp[2124207]
      {
        (2134872 '=' willOverFlow[976416] 1)
      }
    }
    {
      const-val coerce_tmp[977168]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (977174 'move' coerce_tmp[977168](977170 'cast' int(32)[95] 0))
      const-val call_tmp[2212169]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2212171 'move' call_tmp[2212169](2212173 '<' last[976370] coerce_tmp[977168]))
      val tmp[976574]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if call_tmp[2212169]
      {
        const-val call_tmp[2115952]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2115954 'move' call_tmp[2115952](2115956 '<' stride[976358] 0))
        (976607 'move' tmp[976574] call_tmp[2115952])
      }
      {
        (976613 'move' tmp[976574] 0)
      }
      if tmp[976574]
      {
        const-val call_tmp[2212558]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
        (2212560 'move' call_tmp[2212558](2212562 '-' -2147483648 last[976370]))
        const-val coerce_tmp[977786]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (977792 'move' coerce_tmp[977786](977788 'cast' int(64)[13] call_tmp[2212558]))
        const-val call_tmp[2128322]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2128324 'move' call_tmp[2128322](2128326 '<' stride[976358] coerce_tmp[977786]))
        if call_tmp[2128322]
        {
          (2134889 '=' willOverFlow[976416] 1)
        }
      }
    }
    val tmp[976828]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if willOverFlow[976416]
    {
      (976853 'move' tmp[976828] shouldHalt[976376])
    }
    {
      (976859 'move' tmp[976828] 0)
    }
    if tmp[976828]
    {
      (976877 call boundsCheckHalt[210167] "Iteration over a bounded range may be incorrect due to overflow.")
    }
    (976882 'move' ret[976378] willOverFlow[976416])
    label _end_chpl_checkIfRangeIterWillOverflow[976890]
    (976892 return ret[976378])
  }
  function chpl_checkIfRangeIterWillOverflow[1096076](const in arg low[1096080]:int(64)[13], const in arg high[1096082]:int(64)[13], const in arg stride[1096084]:int(64)[13], const in arg first[1096090]:int(64)[13], const in arg last[1096096]:int(64)[13], const in arg shouldHalt[1096102]:bool[10]) : bool[10] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_992[2378429]:string[26] "temp"
    (2378430 'move' "Iteration over a bounded range may be incorrect due to overflow." "Iteration over a bounded range may be incorrect due to overflow.")
    val ret[1096104]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2124302]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2124304 'move' call_tmp[2124302](2124306 '>' low[1096080] high[1096082]))
    if call_tmp[2124302]
    {
      (1096135 'move' ret[1096104] 0)
      gotoReturn _end_chpl_checkIfRangeIterWillOverflow[1096616] _end_chpl_checkIfRangeIterWillOverflow[1096616]
    }
    val willOverFlow[1096142]:bool[10] "dead at end of block" "insert auto destroy"
    (1096144 'move' willOverFlow[1096142] 0)
    const-val call_tmp[2124317]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2124319 'move' call_tmp[2124317](2124321 '>' last[1096096] 0))
    val tmp[1096185]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2124317]
    {
      const-val call_tmp[2124332]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2124334 'move' call_tmp[2124332](2124336 '>' stride[1096084] 0))
      (1096218 'move' tmp[1096185] call_tmp[2124332])
    }
    {
      (1096224 'move' tmp[1096185] 0)
    }
    if tmp[1096185]
    {
      const-val call_tmp[2220242]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2220244 'move' call_tmp[2220242](2220246 '-' 9223372036854775807 last[1096096]))
      const-val call_tmp[2124342]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2124344 'move' call_tmp[2124342](2124346 '>' stride[1096084] call_tmp[2220242]))
      if call_tmp[2124342]
      {
        (2134945 '=' willOverFlow[1096142] 1)
      }
    }
    {
      const-val call_tmp[2116012]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2116014 'move' call_tmp[2116012](2116016 '<' last[1096096] 0))
      val tmp[1096300]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if call_tmp[2116012]
      {
        const-val call_tmp[2116022]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2116024 'move' call_tmp[2116022](2116026 '<' stride[1096084] 0))
        (1096333 'move' tmp[1096300] call_tmp[2116022])
      }
      {
        (1096339 'move' tmp[1096300] 0)
      }
      if tmp[1096300]
      {
        const-val call_tmp[2220212]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2220214 'move' call_tmp[2220212](2220216 '-' -9223372036854775808 last[1096096]))
        const-val call_tmp[2128412]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2128414 'move' call_tmp[2128412](2128416 '<' stride[1096084] call_tmp[2220212]))
        if call_tmp[2128412]
        {
          (2134962 '=' willOverFlow[1096142] 1)
        }
      }
    }
    val tmp[1096554]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if willOverFlow[1096142]
    {
      (1096579 'move' tmp[1096554] shouldHalt[1096102])
    }
    {
      (1096585 'move' tmp[1096554] 0)
    }
    if tmp[1096554]
    {
      (1096603 call boundsCheckHalt[210167] "Iteration over a bounded range may be incorrect due to overflow.")
    }
    (1096608 'move' ret[1096104] willOverFlow[1096142])
    label _end_chpl_checkIfRangeIterWillOverflow[1096616]
    (1096618 return ret[1096104])
  }
  function range(int(64),bounded,false)[1026814].checkIfIterWillOverflow[1095814](const in arg this[1095820]:range(int(64),bounded,false)[1026814], const in arg shouldHalt[1095826]:bool[10]) : bool[10] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    val ret[2262877]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2262879 'move' ret[2262877](2262881 '.v' this[1095820] _low[1026776]))
    val ret[2270688]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2270690 'move' ret[2270688](2270692 '.v' this[1095820] _high[1026781]))
    const-val call_tmp[1095884]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1096620]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1096624 'move' coerce_tmp[1096620](2369578 '.v' this[1095820] _low[1026776]))
    const-val coerce_tmp[1096626]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1096630 'move' coerce_tmp[1096626](2369585 '.v' this[1095820] _high[1026781]))
    (1095886 'move' call_tmp[1095884](1095889 call chpl_checkIfRangeIterWillOverflow[1096076] coerce_tmp[1096620] coerce_tmp[1096626] 1 ret[2262877] ret[2270688] shouldHalt[1095826]))
    (1095901 return call_tmp[1095884])
  }
  function range(int(64),bounded,true)[1413447].checkIfIterWillOverflow[1414403](const in arg this[1414409]:range(int(64),bounded,true)[1413447], const in arg shouldHalt[1414415]:bool[10]) : bool[10] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    val ret[2322713]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2322715 'move' ret[2322713](2322717 '.v' this[1414409] _stride[1413419]))
    val tmp[2323087]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val coerce_tmp[2323089]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2323091 'move' coerce_tmp[2323089](2323093 '.v' this[1414409] _stride[1413419]))
    const-val call_tmp[2323096]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2323098 'move' call_tmp[2323096](2323100 '>' coerce_tmp[2323089] 0))
    if call_tmp[2323096]
    {
      val ret[2323105]:int(64)[13] "dead after last mention" "RVV" "temp"
      (2323107 'move' ret[2323105](2323109 '.v' this[1414409] _stride[1413419]))
      const-val call_tmp[2323112]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[2323114]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2323116 'move' coerce_tmp[2323114](2323118 '.v' this[1414409] _alignment[1413429]))
      const-val coerce_tmp[2323121]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2323123 'move' coerce_tmp[2323121](2323125 '.v' this[1414409] _low[1413409]))
      (2323128 'move' call_tmp[2323112](2323131 call chpl__diffMod[1414958] coerce_tmp[2323114] coerce_tmp[2323121] ret[2323105]))
      const-val coerce_tmp[2323135]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2323137 'move' coerce_tmp[2323135](2323139 '.v' this[1414409] _low[1413409]))
      const-val call_tmp[2323142]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2323144 'move' call_tmp[2323142](2323146 '+' coerce_tmp[2323135] call_tmp[2323112]))
      (2323149 'move' tmp[2323087] call_tmp[2323142])
    }
    {
      val ret[2323153]:int(64)[13] "dead after last mention" "RVV" "temp"
      (2323155 'move' ret[2323153](2323157 '.v' this[1414409] _stride[1413419]))
      const-val call_tmp[2323160]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[2323162]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2323164 'move' coerce_tmp[2323162](2323166 '.v' this[1414409] _high[1413414]))
      const-val coerce_tmp[2323169]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2323171 'move' coerce_tmp[2323169](2323173 '.v' this[1414409] _alignment[1413429]))
      (2323176 'move' call_tmp[2323160](2323179 call chpl__diffMod[1414958] coerce_tmp[2323162] coerce_tmp[2323169] ret[2323153]))
      const-val coerce_tmp[2323183]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2323185 'move' coerce_tmp[2323183](2323187 '.v' this[1414409] _high[1413414]))
      const-val call_tmp[2323190]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2323192 'move' call_tmp[2323190](2323194 '-' coerce_tmp[2323183] call_tmp[2323160]))
      (2323197 'move' tmp[2323087] call_tmp[2323190])
    }
    val tmp[2323459]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    val ret[2323461]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2323463 'move' ret[2323461](2323465 '.v' this[1414409] _stride[1413419]))
    const-val call_tmp[2323468]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2323470 'move' call_tmp[2323468](2323472 '>' ret[2323461] 0))
    if call_tmp[2323468]
    {
      val ret[2323477]:int(64)[13] "dead after last mention" "RVV" "temp"
      (2323479 'move' ret[2323477](2323481 '.v' this[1414409] _stride[1413419]))
      const-val call_tmp[2323484]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[2323486]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2323488 'move' coerce_tmp[2323486](2323490 '.v' this[1414409] _high[1413414]))
      const-val coerce_tmp[2323493]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2323495 'move' coerce_tmp[2323493](2323497 '.v' this[1414409] _alignment[1413429]))
      (2323500 'move' call_tmp[2323484](2323503 call chpl__diffMod[1414958] coerce_tmp[2323486] coerce_tmp[2323493] ret[2323477]))
      const-val coerce_tmp[2323507]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2323509 'move' coerce_tmp[2323507](2323511 '.v' this[1414409] _high[1413414]))
      const-val call_tmp[2323514]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2323516 'move' call_tmp[2323514](2323518 '-' coerce_tmp[2323507] call_tmp[2323484]))
      (2323521 'move' tmp[2323459] call_tmp[2323514])
    }
    {
      val ret[2323525]:int(64)[13] "dead after last mention" "RVV" "temp"
      (2323527 'move' ret[2323525](2323529 '.v' this[1414409] _stride[1413419]))
      const-val call_tmp[2323532]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[2323534]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2323536 'move' coerce_tmp[2323534](2323538 '.v' this[1414409] _alignment[1413429]))
      const-val coerce_tmp[2323541]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2323543 'move' coerce_tmp[2323541](2323545 '.v' this[1414409] _low[1413409]))
      (2323548 'move' call_tmp[2323532](2323551 call chpl__diffMod[1414958] coerce_tmp[2323534] coerce_tmp[2323541] ret[2323525]))
      const-val coerce_tmp[2323555]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2323557 'move' coerce_tmp[2323555](2323559 '.v' this[1414409] _low[1413409]))
      const-val call_tmp[2323562]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2323564 'move' call_tmp[2323562](2323566 '+' coerce_tmp[2323555] call_tmp[2323532]))
      (2323569 'move' tmp[2323459] call_tmp[2323562])
    }
    const-val call_tmp[1414473]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1415462]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1415466 'move' coerce_tmp[1415462](2373058 '.v' this[1414409] _low[1413409]))
    const-val coerce_tmp[1415468]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1415472 'move' coerce_tmp[1415468](2373065 '.v' this[1414409] _high[1413414]))
    (1414475 'move' call_tmp[1414473](1414478 call chpl_checkIfRangeIterWillOverflow[1096076] coerce_tmp[1415462] coerce_tmp[1415468] ret[2322713] tmp[2323087] tmp[2323459] shouldHalt[1414415]))
    (1414490 return call_tmp[1414473])
  }
  type _ic_chpl_direct_counted_range_iter[1103790] val super[1103791]:object[22] "super class" val more[1103793]:int(64)[13] const-val F0_low[2010431]:int(64)[13] const-val F1_count[2010435]:int(64)[13] val F2__iterator[2010439]:_ic_chpl_direct_counted_range_iter_helper[1103540] const F3_tmp[2010441]:2*int(64)[1040056] val F4__iterator[2010443]:_ic_chpl_direct_param_stride_range_iter[1103286] val F5_i[2010445]:int(64)[13] const-val F6_low[2010447]:int(64)[13] val value[2010449]:int(64)[13]
  type _ic_chpl_direct_counted_range_iter_helper[1103540] val super[1103541]:object[22] "super class" val more[1103543]:int(64)[13] const-val F0_low[2014903]:int(64)[13] const-val F1_count[2014907]:int(64)[13] const F2_tmp[2014911]:2*int(64)[1040056] val F3__iterator[2014913]:_ic_chpl_direct_param_stride_range_iter[1103286] val F4_i[2014915]:int(64)[13] const-val F5_low[2014917]:int(64)[13] val value[2014919]:int(64)[13]
  type _ic_chpl_direct_param_stride_range_iter[1103286] val super[1103287]:object[22] "super class" val more[1103289]:int(64)[13] const-val F0_low[2016401]:int(64)[13] const-val F1_high[2016405]:int(64)[13] val value[2016409]:int(64)[13]
  function _ic_these_range_int64_t_bounded_F[1096703].advance[1096729](const in arg this[1096731]:_ic_these_range_int64_t_bounded_F[1096703]) : void[4] "auto ii" "method" "resolved"
  {
    const-val more[2014771]:int(64)[13]
    (2014799 'move' more[2014771](2014796 '.v' this[1096731] more[1096706]))
    const-val tmp[2014774]:bool[10] "temp"
    (2014781 'move' tmp[2014774](2014778 '==' more[2014771] 2))
    if tmp[2014774]
    {
      gotoIterResume _jump_2[2014763] _jump_2[2014763]
    }
    const-val tmp[2014786]:bool[10] "temp"
    (2014791 'move' tmp[2014786](2014788 '==' more[2014771] -2))
    if tmp[2014786]
    {
      gotoIterResume _jump_break_2[2014765] _jump_break_2[2014765]
    }
    const-val tmp[2014292]:range(int(64),bounded,false)[1026814] "temp"
    (2014297 'move' tmp[2014292](2014294 '.v' this[1096731] F0_this[2014280]))
    (1095630 call checkIfIterWillOverflow[1095814] tmp[2014292] 1)
    (2014301 '.=' this[1096731] F1_i[2014284] 0)
    ref tmp[2014305]:range(int(64),bounded,false)[1026814] "temp"
    (2014310 'move' tmp[2014305](2014307 '.' this[1096731] F0_this[2014280]))
    val tmp[2014312]:int(64)[13] "temp"
    (1096680 'move' tmp[2014312](2369595 '.v' tmp[2014305] _low[1026776]))
    (2014314 '.=' this[1096731] F3_coerce_tmp[2014288] tmp[2014312])
    (1095656 'noop')
    ref tmp[2014325]:range(int(64),bounded,false)[1026814] "temp"
    (2014330 'move' tmp[2014325](2014327 '.' this[1096731] F0_this[2014280]))
    const-val coerce_tmp[1096686]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1096690 'move' coerce_tmp[1096686](2369601 '.v' tmp[2014325] _high[1026781]))
    (2014334 '.=' this[1096731] F2_end[2014286] coerce_tmp[1096686])
    (1095670 'noop')
    CForLoop[1095674]
    {
      const-val tmp[2014351]:int(64)[13] "temp"
      (2014356 'move' tmp[2014351](2014353 '.v' this[1096731] F1_i[2014284]))
      (2014340 '.=' this[1096731] value[2014290] tmp[2014351])
      (2014757 '.=' this[1096731] more[1096706] 2)
      gotoIterEnd _end[2014755] _end[2014755]
      label _jump_break_2[2014765]
      gotoReturn _endthese[1813978] _endthese[1813978]
      label _jump_2[2014763]
      {
        const-val tmp[2014371]:int(64)[13] "temp"
        (2014376 'move' tmp[2014371](2014373 '.v' this[1096731] F3_coerce_tmp[2014288]))
        (2014367 '.=' this[1096731] F1_i[2014284] tmp[2014371])
      }
      {
        val tmp[2014378]:int(64)[13] "temp"
        (2014383 'move' tmp[2014378](2014380 '.v' this[1096731] F1_i[2014284]))
        const tmp[2014385]:int(64)[13] "temp"
        (2014390 'move' tmp[2014385](2014387 '.v' this[1096731] F2_end[2014286]))
        (1095683 '<=' tmp[2014378] tmp[2014385])
      }
      {
        val tmp[2014392]:int(64)[13] "temp"
        (2014397 'move' tmp[2014392](2014394 '.v' this[1096731] F1_i[2014284]))
        (1095714 '+=' tmp[2014392] 1)
        (2014399 '.=' this[1096731] F1_i[2014284] tmp[2014392])
      }
    }
    label _endthese[1813978]
    (2014767 '.=' this[1096731] more[1096706] 0)
    label _end[2014755]
    (2014802 return _void[55])
  }
  type _ic_these_range_int64_t_bounded_F[1096703] val super[1096704]:object[22] "super class" val more[1096706]:int(64)[13] const-val F0_this[2014280]:range(int(64),bounded,false)[1026814] val F1_i[2014284]:int(64)[13] const F2_end[2014286]:int(64)[13] val F3_coerce_tmp[2014288]:int(64)[13] val value[2014290]:int(64)[13]
  function _cast[1054358](const in arg x[1054362]:range(byteIndex,bounded,false)[1025792], ref arg _retArg[1832957]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_1075[2378053]:string[26] "temp"
    (2378054 'move' ".." "..")
    const-val ret[1054364]:string[26] "dead after last mention" "RVV" "temp"
    val ret[1054372]:string[26] "dead at end of block" "insert auto destroy"
    (1084708 call init[30760] ret[1054372])
    const-val call_tmp[1054396]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2262187]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2262189 'move' coerce_tmp[2262187](2262191 '.v' x[1054362] _low[1025754]))
    const-val ret[2262194]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2262196]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2262199 call init[28097] cpi[2262196])
    (2262201 '.=' cpi[2262196] _bindex[28091] coerce_tmp[2262187])
    (2262205 'move' ret[2262194] cpi[2262196])
    (1832752 'move' call_tmp[1054396] ret[2262194])
    const-val call_tmp[1054404]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1832963]:string[26] "temp"
    (1054409 call _cast[1054641] call_tmp[1054396] ret_tmp[1832963])
    (1832966 'move' call_tmp[1054404] ret_tmp[1832963])
    (1054413 call +=[38797] ret[1054372] call_tmp[1054404])
    ref i_x[2130825]:string[26] "temp"
    (2130829 'move' i_x[2130825](2130827 'set reference' call_tmp[1054404]))
    (2130833 call deinit[30831] i_x[2130825])
    (1054420 call +=[38797] ret[1054372] "..")
    const-val call_tmp[1054443]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2262262]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2262264 'move' coerce_tmp[2262262](2262266 '.v' x[1054362] _high[1025759]))
    const-val ret[2262269]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2262271]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2262274 call init[28097] cpi[2262271])
    (2262276 '.=' cpi[2262271] _bindex[28091] coerce_tmp[2262262])
    (2262280 'move' ret[2262269] cpi[2262271])
    (1832788 'move' call_tmp[1054443] ret[2262269])
    const-val call_tmp[1054451]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1832969]:string[26] "temp"
    (1054456 call _cast[1054641] call_tmp[1054443] ret_tmp[1832969])
    (1832972 'move' call_tmp[1054451] ret_tmp[1832969])
    (1054460 call +=[38797] ret[1054372] call_tmp[1054451])
    ref i_x[2130837]:string[26] "temp"
    (2130841 'move' i_x[2130837](2130839 'set reference' call_tmp[1054451]))
    (2130845 call deinit[30831] i_x[2130837])
    const-val alignCheckRange[1054522]:range(byteIndex,bounded,false)[1025792] "dead at end of block" "insert auto destroy"
    (1054524 'move' alignCheckRange[1054522] x[1054362])
    (1054532 call normalizeAlignment[1083606] alignCheckRange[1054522])
    (1054614 'move' ret[1054364] ret[1054372])
    label _end__cast[1054622]
    (1832959 '=' _retArg[1832957] ret[1054364])
    (1832961 return _void[55])
  }
  function _cast[1119437](const in arg x[1119441]:range(int(64),bounded,false)[1026814], ref arg _retArg[1834024]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_1075[2378544]:string[26] "temp"
    (2378545 'move' ".." "..")
    const-val ret[1119443]:string[26] "dead after last mention" "RVV" "temp"
    val ret[1119451]:string[26] "dead at end of block" "insert auto destroy"
    (1120744 call init[30760] ret[1119451])
    const-val coerce_tmp[2261440]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2261442 'move' coerce_tmp[2261440](2261444 '.v' x[1119441] _low[1026776]))
    const-val call_tmp[1119483]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1833107]:string[26] "temp"
    (1119488 call _cast[1063153] coerce_tmp[2261440] ret_tmp[1833107])
    (1833110 'move' call_tmp[1119483] ret_tmp[1833107])
    (1119492 call +=[38797] ret[1119451] call_tmp[1119483])
    ref i_x[2131329]:string[26] "temp"
    (2131333 'move' i_x[2131329](2131331 'set reference' call_tmp[1119483]))
    (2131337 call deinit[30831] i_x[2131329])
    (1119499 call +=[38797] ret[1119451] "..")
    const-val coerce_tmp[2261660]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2261662 'move' coerce_tmp[2261660](2261664 '.v' x[1119441] _high[1026781]))
    const-val call_tmp[1119530]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1833113]:string[26] "temp"
    (1119535 call _cast[1063153] coerce_tmp[2261660] ret_tmp[1833113])
    (1833116 'move' call_tmp[1119530] ret_tmp[1833113])
    (1119539 call +=[38797] ret[1119451] call_tmp[1119530])
    ref i_x[2131341]:string[26] "temp"
    (2131345 'move' i_x[2131341](2131343 'set reference' call_tmp[1119530]))
    (2131349 call deinit[30831] i_x[2131341])
    const-val alignCheckRange[1119601]:range(int(64),bounded,false)[1026814] "dead at end of block" "insert auto destroy"
    (1119603 'move' alignCheckRange[1119601] x[1119441])
    (1119611 call normalizeAlignment[1119740] alignCheckRange[1119601])
    (1119693 'move' ret[1119443] ret[1119451])
    label _end__cast[1119701]
    (1834026 '=' _retArg[1834024] ret[1119443])
    (1834028 return _void[55])
  }
  function _cast[1135960](const in arg x[1135964]:range(int(64),boundedLow,false)[1087565], ref arg _retArg[1834312]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_1079[2378607]:string[26] "temp"
    (2378608 'move' " align " " align ")
    const-val local__str_literal_1075[2378601]:string[26] "temp"
    (2378602 'move' ".." "..")
    const-val ret[1135966]:string[26] "dead after last mention" "RVV" "temp"
    val ret[1135974]:string[26] "dead at end of block" "insert auto destroy"
    (1138798 call init[30760] ret[1135974])
    const-val coerce_tmp[2271862]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2271864 'move' coerce_tmp[2271862](2271866 '.v' x[1135964] _low[1087527]))
    const-val call_tmp[1136006]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1833125]:string[26] "temp"
    (1136011 call _cast[1063153] coerce_tmp[2271862] ret_tmp[1833125])
    (1833128 'move' call_tmp[1136006] ret_tmp[1833125])
    (1136015 call +=[38797] ret[1135974] call_tmp[1136006])
    ref i_x[2131401]:string[26] "temp"
    (2131405 'move' i_x[2131401](2131403 'set reference' call_tmp[1136006]))
    (2131409 call deinit[30831] i_x[2131401])
    (1136022 call +=[38797] ret[1135974] "..")
    const-val alignCheckRange[1136124]:range(int(64),boundedLow,false)[1087565] "dead at end of block" "insert auto destroy"
    (1136126 'move' alignCheckRange[1136124] x[1135964])
    (1136134 call normalizeAlignment[1136260] alignCheckRange[1136124])
    val ret[2272238]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2272240 'move' ret[2272238](2272242 '.v' alignCheckRange[1136124] _low[1087527]))
    const-val coerce_tmp[2272245]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2272247 'move' coerce_tmp[2272245](2272249 '.v' alignCheckRange[1136124] _low[1087527]))
    const-val call_tmp[2272252]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2272254 'move' call_tmp[2272252](2272256 '==' ret[2272238] coerce_tmp[2272245]))
    const-val call_tmp[2114248]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2114250 'move' call_tmp[2114248](2114252 '!' call_tmp[2272252]))
    if call_tmp[2114248]
    {
      const-val call_tmp[1136162]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1136164 'move' call_tmp[1136162](1136167 call alignment[1128120] x[1135964]))
      const-val call_tmp[1136185]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1136187 'move' call_tmp[1136185](1136190 call chpl__mod[1137416] call_tmp[1136162] 1))
      const-val call_tmp[1136193]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1833131]:string[26] "temp"
      (1136198 call _cast[1063153] call_tmp[1136185] ret_tmp[1833131])
      (1833134 'move' call_tmp[1136193] ret_tmp[1833131])
      const-val call_tmp[1136201]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1830073]:string[26] "temp"
      (1136206 call +[38342] " align " call_tmp[1136193] ret_tmp[1830073])
      (1830076 'move' call_tmp[1136201] ret_tmp[1830073])
      (1136210 call +=[38797] ret[1135974] call_tmp[1136201])
      ref i_x[2131413]:string[26] "temp"
      (2131417 'move' i_x[2131413](2131415 'set reference' call_tmp[1136201]))
      (2131421 call deinit[30831] i_x[2131413])
      ref i_x[2131425]:string[26] "temp"
      (2131429 'move' i_x[2131425](2131427 'set reference' call_tmp[1136193]))
      (2131433 call deinit[30831] i_x[2131425])
    }
    (1136216 'move' ret[1135966] ret[1135974])
    label _end__cast[1136224]
    (1834314 '=' _retArg[1834312] ret[1135966])
    (1834316 return _void[55])
  }
  function _cast[1154424](const in arg x[1154428]:range(byteIndex,boundedLow,false)[1143403], ref arg _retArg[1834594]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_1079[2378655]:string[26] "temp"
    (2378656 'move' " align " " align ")
    const-val local__str_literal_1075[2378649]:string[26] "temp"
    (2378650 'move' ".." "..")
    const-val ret[1154430]:string[26] "dead after last mention" "RVV" "temp"
    val ret[1154438]:string[26] "dead at end of block" "insert auto destroy"
    (1156119 call init[30760] ret[1154438])
    const-val call_tmp[1154462]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2272574]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2272576 'move' coerce_tmp[2272574](2272578 '.v' x[1154428] _low[1143365]))
    const-val ret[2272581]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2272583]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2272586 call init[28097] cpi[2272583])
    (2272588 '.=' cpi[2272583] _bindex[28091] coerce_tmp[2272574])
    (2272592 'move' ret[2272581] cpi[2272583])
    (1834503 'move' call_tmp[1154462] ret[2272581])
    const-val call_tmp[1154470]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1832975]:string[26] "temp"
    (1154475 call _cast[1054641] call_tmp[1154462] ret_tmp[1832975])
    (1832978 'move' call_tmp[1154470] ret_tmp[1832975])
    (1154479 call +=[38797] ret[1154438] call_tmp[1154470])
    ref i_x[2131485]:string[26] "temp"
    (2131489 'move' i_x[2131485](2131487 'set reference' call_tmp[1154470]))
    (2131493 call deinit[30831] i_x[2131485])
    (1154486 call +=[38797] ret[1154438] "..")
    const-val alignCheckRange[1154588]:range(byteIndex,boundedLow,false)[1143403] "dead at end of block" "insert auto destroy"
    (1154590 'move' alignCheckRange[1154588] x[1154428])
    (1154598 call normalizeAlignment[1154959] alignCheckRange[1154588])
    val ret[2272745]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2272747 'move' ret[2272745](2272749 '.v' alignCheckRange[1154588] _low[1143365]))
    const-val coerce_tmp[2272752]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2272754 'move' coerce_tmp[2272752](2272756 '.v' alignCheckRange[1154588] _low[1143365]))
    const-val call_tmp[2272759]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2272761 'move' call_tmp[2272759](2272763 '==' ret[2272745] coerce_tmp[2272752]))
    const-val call_tmp[2114275]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2114277 'move' call_tmp[2114275](2114279 '!' call_tmp[2272759]))
    if call_tmp[2114275]
    {
      const-val call_tmp[1154626]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1834576]:byteIndex[28170] "temp"
      (1154631 call alignment[1148238] x[1154428] ret_tmp[1834576])
      (1834579 'move' call_tmp[1154626] ret_tmp[1834576])
      val ret[2261858]:int(64)[13] "dead after last mention" "RVV" "temp"
      (2261860 'move' ret[2261858](2261862 '.v' call_tmp[1154626] _bindex[28091]))
      const-val call_tmp[1154649]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1154651 'move' call_tmp[1154649](1154654 call chpl__mod[1137416] ret[2261858] 1))
      const-val call_tmp[1154657]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1833143]:string[26] "temp"
      (1154662 call _cast[1063153] call_tmp[1154649] ret_tmp[1833143])
      (1833146 'move' call_tmp[1154657] ret_tmp[1833143])
      const-val call_tmp[1154665]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1830085]:string[26] "temp"
      (1154670 call +[38342] " align " call_tmp[1154657] ret_tmp[1830085])
      (1830088 'move' call_tmp[1154665] ret_tmp[1830085])
      (1154674 call +=[38797] ret[1154438] call_tmp[1154665])
      ref i_x[2131497]:string[26] "temp"
      (2131501 'move' i_x[2131497](2131499 'set reference' call_tmp[1154665]))
      (2131505 call deinit[30831] i_x[2131497])
      ref i_x[2131509]:string[26] "temp"
      (2131513 'move' i_x[2131509](2131511 'set reference' call_tmp[1154657]))
      (2131517 call deinit[30831] i_x[2131509])
    }
    (1154680 'move' ret[1154430] ret[1154438])
    label _end__cast[1154688]
    (1834596 '=' _retArg[1834594] ret[1154430])
    (1834598 return _void[55])
  }
  function _cast[1198631](const in arg x[1198635]:range(byteIndex,boundedHigh,false)[1184919], ref arg _retArg[1834916]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_1079[2378885]:string[26] "temp"
    (2378886 'move' " align " " align ")
    const-val local__str_literal_1075[2378879]:string[26] "temp"
    (2378880 'move' ".." "..")
    const-val ret[1198637]:string[26] "dead after last mention" "RVV" "temp"
    val ret[1198645]:string[26] "dead at end of block" "insert auto destroy"
    (1200178 call init[30760] ret[1198645])
    (1198693 call +=[38797] ret[1198645] "..")
    const-val call_tmp[1198716]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2275794]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2275796 'move' coerce_tmp[2275794](2275798 '.v' x[1198635] _high[1184886]))
    const-val ret[2275801]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2275803]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2275806 call init[28097] cpi[2275803])
    (2275808 '.=' cpi[2275803] _bindex[28091] coerce_tmp[2275794])
    (2275812 'move' ret[2275801] cpi[2275803])
    (1834855 'move' call_tmp[1198716] ret[2275801])
    const-val call_tmp[1198724]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1832981]:string[26] "temp"
    (1198729 call _cast[1054641] call_tmp[1198716] ret_tmp[1832981])
    (1832984 'move' call_tmp[1198724] ret_tmp[1832981])
    (1198733 call +=[38797] ret[1198645] call_tmp[1198724])
    ref i_x[2131881]:string[26] "temp"
    (2131885 'move' i_x[2131881](2131883 'set reference' call_tmp[1198724]))
    (2131889 call deinit[30831] i_x[2131881])
    const-val alignCheckRange[1198795]:range(byteIndex,boundedHigh,false)[1184919] "dead at end of block" "insert auto destroy"
    (1198797 'move' alignCheckRange[1198795] x[1198635])
    (1198805 call normalizeAlignment[1199166] alignCheckRange[1198795])
    const-val call_tmp[1198833]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1834898]:byteIndex[28170] "temp"
    (1198838 call alignment[1192661] x[1198635] ret_tmp[1834898])
    (1834901 'move' call_tmp[1198833] ret_tmp[1834898])
    val ret[2261930]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2261932 'move' ret[2261930](2261934 '.v' call_tmp[1198833] _bindex[28091]))
    const-val call_tmp[1198856]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1198858 'move' call_tmp[1198856](1198861 call chpl__mod[1137416] ret[2261930] 1))
    const-val call_tmp[1198864]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1833155]:string[26] "temp"
    (1198869 call _cast[1063153] call_tmp[1198856] ret_tmp[1833155])
    (1833158 'move' call_tmp[1198864] ret_tmp[1833155])
    const-val call_tmp[1198872]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1830133]:string[26] "temp"
    (1198877 call +[38342] " align " call_tmp[1198864] ret_tmp[1830133])
    (1830136 'move' call_tmp[1198872] ret_tmp[1830133])
    (1198881 call +=[38797] ret[1198645] call_tmp[1198872])
    ref i_x[2131893]:string[26] "temp"
    (2131897 'move' i_x[2131893](2131895 'set reference' call_tmp[1198872]))
    (2131901 call deinit[30831] i_x[2131893])
    ref i_x[2131905]:string[26] "temp"
    (2131909 'move' i_x[2131905](2131907 'set reference' call_tmp[1198864]))
    (2131913 call deinit[30831] i_x[2131905])
    (1198887 'move' ret[1198637] ret[1198645])
    label _end__cast[1198895]
    (1834918 '=' _retArg[1834916] ret[1198637])
    (1834920 return _void[55])
  }
  function range(byteIndex,bounded,false)[1025792].normalizeAlignment[1083606](ref arg this[1083612]:range(byteIndex,bounded,false)[1025792]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    (1083892 return _void[55])
  }
  function range(int(64),bounded,false)[1026814].normalizeAlignment[1119740](ref arg this[1119746]:range(int(64),bounded,false)[1026814]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    (1120026 return _void[55])
  }
  function range(int(64),boundedLow,false)[1087565].normalizeAlignment[1136260](ref arg this[1136266]:range(int(64),boundedLow,false)[1087565]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    (1136546 return _void[55])
  }
  function range(byteIndex,boundedLow,false)[1143403].normalizeAlignment[1154959](ref arg this[1154965]:range(byteIndex,boundedLow,false)[1143403]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    (1155245 return _void[55])
  }
  function range(byteIndex,boundedHigh,false)[1184919].normalizeAlignment[1199166](ref arg this[1199172]:range(byteIndex,boundedHigh,false)[1184919]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    (1199452 return _void[55])
  }
  function chpl__mod[1137416](const in arg dividend[1137418]:int(64)[13], const in arg modulus[1137420]:int(64)[13]) : int(64)[13] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_76[2378613]:string[26] "temp"
    (2378614 'move' "Attempt to compute a modulus by zero" "Attempt to compute a modulus by zero")
    val ret[1137422]:int(64)[13] "dead after last mention" "RVV" "temp"
    val tmp[2213389]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2213391]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2213393 'move' call_tmp[2213391](2213395 '<' modulus[1137420] 0))
    if call_tmp[2213391]
    {
      const-val call_tmp[2213400]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2213402 'move' call_tmp[2213400](2213404 'u-' modulus[1137420]))
      (2213406 'move' tmp[2213389] call_tmp[2213400])
    }
    {
      (2213410 'move' tmp[2213389] modulus[1137420])
    }
    const-val call_tmp[2213026]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2213028 'move' call_tmp[2213026](2213030 '==' tmp[2213389] 0))
    if call_tmp[2213026]
    {
      (2213036 call halt[154067] "Attempt to compute a modulus by zero")
    }
    const-val call_tmp[2213039]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2213041 'move' call_tmp[2213039](2213043 '%' dividend[1137418] tmp[2213389]))
    val tmp[1137469]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1137471 'move' tmp[1137469] call_tmp[2213039])
    const-val call_tmp[2116052]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2116054 'move' call_tmp[2116052](2116056 '<' call_tmp[2213039] 0))
    if call_tmp[2116052]
    {
      ref i_lhs[2175531]:int(64)[13] "temp"
      (2175535 'move' i_lhs[2175531](2175533 'set reference' tmp[1137469]))
      (2175538 '+=' i_lhs[2175531] tmp[2213389])
    }
    (1137518 'move' ret[1137422] tmp[1137469])
    label _end_chpl__mod[1137526]
    (1137528 return ret[1137422])
  }
  function chpl__diffMod[1414958](const in arg minuend[1414960]:int(64)[13], const in arg subtrahend[1414962]:int(64)[13], const in arg modulus[1414964]:int(64)[13]) : int(64)[13] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val tmp[2213417]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2213419]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2213421 'move' call_tmp[2213419](2213423 '<' modulus[1414964] 0))
    if call_tmp[2213419]
    {
      const-val call_tmp[2213428]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2213430 'move' call_tmp[2213428](2213432 'u-' modulus[1414964]))
      (2213434 'move' tmp[2213417] call_tmp[2213428])
    }
    {
      (2213438 'move' tmp[2213417] modulus[1414964])
    }
    const-val call_tmp[1415043]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1415045 'move' call_tmp[1415043](1415048 call chpl__mod[1137416] minuend[1414960] tmp[2213417]))
    const-val call_tmp[1415057]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1415059 'move' call_tmp[1415057](1415062 call chpl__mod[1137416] subtrahend[1414962] tmp[2213417]))
    val tmp[1415073]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2128502]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2128504 'move' call_tmp[2128502](2128506 '<' call_tmp[1415043] call_tmp[1415057]))
    if call_tmp[2128502]
    {
      const-val call_tmp[2127371]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2127373 'move' call_tmp[2127371](2127375 '-' call_tmp[1415057] call_tmp[1415043]))
      const-val call_tmp[2127381]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2127383 'move' call_tmp[2127381](2127385 '-' tmp[2213417] call_tmp[2127371]))
      (1415108 'move' tmp[1415073] call_tmp[2127381])
    }
    {
      const-val call_tmp[2127391]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2127393 'move' call_tmp[2127391](2127395 '-' call_tmp[1415043] call_tmp[1415057]))
      (1415122 'move' tmp[1415073] call_tmp[2127391])
    }
    label _end_chpl__diffMod[1415149]
    (1415151 return tmp[1415073])
  }
  function chpl__add[1093372](const in arg a[1093374]:int(64)[13], const in arg b[1093379]:int(64)[13]) : int(64)[13] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1093383]:int(64)[13] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2124267]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2124269 'move' call_tmp[2124267](2124271 '>' a[1093374] 0))
    val tmp[1093449]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2124267]
    {
      const-val call_tmp[2124282]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2124284 'move' call_tmp[2124282](2124286 '>' b[1093379] 0))
      (1093482 'move' tmp[1093449] call_tmp[2124282])
    }
    {
      (1093488 'move' tmp[1093449] 0)
    }
    val tmp[1093510]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if tmp[1093449]
    {
      const-val call_tmp[2220232]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2220234 'move' call_tmp[2220232](2220236 '-' 9223372036854775807 a[1093374]))
      const-val call_tmp[2124292]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2124294 'move' call_tmp[2124292](2124296 '>' b[1093379] call_tmp[2220232]))
      (1093564 'move' tmp[1093510] call_tmp[2124292])
    }
    {
      (1093570 'move' tmp[1093510] 0)
    }
    if tmp[1093510]
    {
      (1093592 'move' ret[1093383] 9223372036854775807)
      gotoReturn _end_chpl__add[1094316] _end_chpl__add[1094316]
    }
    const-val call_tmp[2115982]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2115984 'move' call_tmp[2115982](2115986 '<' a[1093374] 0))
    val tmp[1093622]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2115982]
    {
      const-val call_tmp[2115992]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2115994 'move' call_tmp[2115992](2115996 '<' b[1093379] 0))
      (1093655 'move' tmp[1093622] call_tmp[2115992])
    }
    {
      (1093661 'move' tmp[1093622] 0)
    }
    val tmp[1093683]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if tmp[1093622]
    {
      const-val call_tmp[2220202]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2220204 'move' call_tmp[2220202](2220206 '-' -9223372036854775808 a[1093374]))
      const-val call_tmp[2128402]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2128404 'move' call_tmp[2128402](2128406 '<' b[1093379] call_tmp[2220202]))
      (1093737 'move' tmp[1093683] call_tmp[2128402])
    }
    {
      (1093743 'move' tmp[1093683] 0)
    }
    if tmp[1093683]
    {
      (1093765 'move' ret[1093383] -9223372036854775808)
      gotoReturn _end_chpl__add[1094316] _end_chpl__add[1094316]
    }
    const-val call_tmp[2126000]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2126002 'move' call_tmp[2126000](2126004 '+' a[1093374] b[1093379]))
    (1094312 'move' ret[1093383] call_tmp[2126000])
    label _end_chpl__add[1094316]
    (1094318 return ret[1093383])
  }
  function chpl__addRangeStrides[1105027](const in arg start[1105029]:int(64)[13], const in arg stride[1105031]:int(64)[13], const in arg count[1105033]:int(64)[13]) : int(64)[13] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[1105497]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1105499 'move' call_tmp[1105497](1105502 call mul[1105535] stride[1105031] count[1105033]))
    const-val call_tmp[1105505]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1105507 'move' call_tmp[1105505](1105510 call add[1105922] start[1105029] call_tmp[1105497]))
    (1105532 return call_tmp[1105505])
  }
  function absSameType[1090842](const in arg str[1090844]:int(64)[13]) : int(64)[13] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    label _end_absSameType[1090932]
    (1090934 return 1)
  }
  function mul[1105535](const in arg a[1105537]:int(64)[13], const in arg b[1105539]:int(64)[13]) : int(64)[13] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[2212878]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2212880 'move' call_tmp[2212878](2212882 '*' a[1105537] b[1105539]))
    (1105632 return call_tmp[2212878])
  }
  function add[1105922](const in arg a[1105924]:int(64)[13], const in arg b[1105926]:int(64)[13]) : int(64)[13] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[2126120]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2126122 'move' call_tmp[2126120](2126124 '+' a[1105924] b[1105926]))
    (1106019 return call_tmp[2126120])
  }
}