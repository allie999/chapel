AST dump for FormattedIO after pass flattenClasses.
Module use list: ChapelStandard IO SysCTypes SysBasic SysError Regexp 

{
  function _toIntegral[251308](arg x[251305] :
  unknown t[251303]) : _unknown[51] "inline" "private"
  {
    (251319 return(251317 call _build_tuple x[251305] 1))
  }
  where {
    (251313 call isIntegralType t[251303])
  }
  function _toIntegral[251332](arg x[251329] :
  unknown t[251327]) : _unknown[51] throws "inline" "private"
  {
    unknown ret[251351](251349 call _build_tuple int(64)[13] bool[10])
    (251354 'end of statement')
    if(251381 call _cond_test(251359 call isAbstractEnumType t[251327]))
    {
      (251366 call = ret[251351](251364 call _build_tuple 0 0))
    }
    {
      (251378 call = ret[251351](251376 call _build_tuple(251372 call _cast int(64)[13] x[251329]) 1))
    }
    (251388 return ret[251351])
  }
  where {
    (251344 call &&(251337 call _isIoPrimitiveType t[251327])(251342 call !(251341 call isIntegralType t[251327])))
  }
  function _toIntegral[251400](arg x[251397] :
  unknown t[251395]) : _unknown[51] "inline" "private"
  {
    (251413 return(251411 call _build_tuple 0 0))
  }
  where {
    (251406 call !(251405 call _isIoPrimitiveType t[251395]))
  }
  function _toSigned[251426](arg x[251423] :
  unknown t[251421]) : _unknown[51] "inline" "private"
  {
    (251437 return(251435 call _build_tuple x[251423] 1))
  }
  where {
    (251431 call isIntType t[251421])
  }
  function _toSigned[251452](arg x[251449] :
  (251448 call uint(64)[115] 8)) : _unknown[51] "inline" "private"
  {
    (251465 return(251463 call _build_tuple(251459 call _cast(251458 call int(64)[13] 8) x[251449]) 1))
  }
  function _toSigned[251479](arg x[251476] :
  (251475 call uint(64)[115] 16)) : _unknown[51] "inline" "private"
  {
    (251492 return(251490 call _build_tuple(251486 call _cast(251485 call int(64)[13] 16) x[251476]) 1))
  }
  function _toSigned[251506](arg x[251503] :
  (251502 call uint(64)[115] 32)) : _unknown[51] "inline" "private"
  {
    (251519 return(251517 call _build_tuple(251513 call _cast(251512 call int(64)[13] 32) x[251503]) 1))
  }
  function _toSigned[251533](arg x[251530] :
  (251529 call uint(64)[115] 64)) : _unknown[51] "inline" "private"
  {
    (251546 return(251544 call _build_tuple(251540 call _cast(251539 call int(64)[13] 64) x[251530]) 1))
  }
  function _toSigned[251558](arg x[251555] :
  unknown t[251553]) : _unknown[51] throws "inline" "private"
  {
    unknown ret[251577](251575 call _build_tuple int(64)[13] bool[10])
    (251580 'end of statement')
    if(251607 call _cond_test(251585 call isAbstractEnumType t[251553]))
    {
      (251592 call = ret[251577](251590 call _build_tuple 0 0))
    }
    {
      (251604 call = ret[251577](251602 call _build_tuple(251598 call _cast int(64)[13] x[251555]) 1))
    }
    (251614 return ret[251577])
  }
  where {
    (251570 call &&(251563 call _isIoPrimitiveType t[251553])(251568 call !(251567 call isIntegralType t[251553])))
  }
  function _toSigned[251626](arg x[251623] :
  unknown t[251621]) : _unknown[51] "inline" "private"
  {
    (251642 return(251640 call _build_tuple(251636 call _cast int(64)[13] 0) 0))
  }
  where {
    (251632 call !(251631 call _isIoPrimitiveType t[251621]))
  }
  function _toUnsigned[251655](arg x[251652] :
  unknown t[251650]) : _unknown[51] "inline" "private"
  {
    (251666 return(251664 call _build_tuple x[251652] 1))
  }
  where {
    (251660 call isUintType t[251650])
  }
  function _toUnsigned[251681](arg x[251678] :
  (251677 call int(64)[13] 8)) : _unknown[51] "inline" "private"
  {
    (251694 return(251692 call _build_tuple(251688 call _cast(251687 call uint(64)[115] 8) x[251678]) 1))
  }
  function _toUnsigned[251708](arg x[251705] :
  (251704 call int(64)[13] 16)) : _unknown[51] "inline" "private"
  {
    (251721 return(251719 call _build_tuple(251715 call _cast(251714 call uint(64)[115] 16) x[251705]) 1))
  }
  function _toUnsigned[251735](arg x[251732] :
  (251731 call int(64)[13] 32)) : _unknown[51] "inline" "private"
  {
    (251748 return(251746 call _build_tuple(251742 call _cast(251741 call uint(64)[115] 32) x[251732]) 1))
  }
  function _toUnsigned[251762](arg x[251759] :
  (251758 call int(64)[13] 64)) : _unknown[51] "inline" "private"
  {
    (251775 return(251773 call _build_tuple(251769 call _cast(251768 call uint(64)[115] 64) x[251759]) 1))
  }
  function _toUnsigned[251787](arg x[251784] :
  unknown t[251782]) : _unknown[51] throws "inline" "private"
  {
    unknown ret[251806](251804 call _build_tuple uint(64)[115] bool[10])
    (251809 'end of statement')
    if(251839 call _cond_test(251814 call isAbstractEnumType t[251782]))
    {
      (251824 call = ret[251806](251822 call _build_tuple(251818 call _cast uint(64)[115] 0) 0))
    }
    {
      (251836 call = ret[251806](251834 call _build_tuple(251830 call _cast uint(64)[115] x[251784]) 1))
    }
    (251846 return ret[251806])
  }
  where {
    (251799 call &&(251792 call _isIoPrimitiveType t[251782])(251797 call !(251796 call isIntegralType t[251782])))
  }
  function _toUnsigned[251858](arg x[251855] :
  unknown t[251853]) : _unknown[51] "inline" "private"
  {
    (251874 return(251872 call _build_tuple(251868 call _cast uint(64)[115] 0) 0))
  }
  where {
    (251864 call !(251863 call _isIoPrimitiveType t[251853]))
  }
  function _toReal[251887](arg x[251884] :
  unknown t[251882]) : _unknown[51] "inline" "private"
  {
    (251898 return(251896 call _build_tuple x[251884] 1))
  }
  where {
    (251892 call isRealType t[251882])
  }
  function _toReal[251911](arg x[251908] :
  unknown t[251906]) : _unknown[51] throws "inline" "private"
  {
    unknown ret[251930](251928 call _build_tuple real(64)[16] bool[10])
    (251933 'end of statement')
    if(251960 call _cond_test(251938 call isAbstractEnumType t[251906]))
    {
      (251945 call = ret[251930](251943 call _build_tuple 0.0 0))
    }
    {
      (251957 call = ret[251930](251955 call _build_tuple(251951 call _cast real(64)[16] x[251908]) 1))
    }
    (251967 return ret[251930])
  }
  where {
    (251923 call &&(251916 call _isIoPrimitiveType t[251906])(251921 call !(251920 call isRealType t[251906])))
  }
  function _toReal[251979](arg x[251976] :
  unknown t[251974]) : _unknown[51] "inline" "private"
  {
    (251992 return(251990 call _build_tuple 0.0 0))
  }
  where {
    (251985 call !(251984 call _isIoPrimitiveType t[251974]))
  }
  function _toImag[252005](arg x[252002] :
  unknown t[252000]) : _unknown[51] "inline" "private"
  {
    (252016 return(252014 call _build_tuple x[252002] 1))
  }
  where {
    (252010 call isImagType t[252000])
  }
  function _toImag[252029](arg x[252026] :
  unknown t[252024]) : _unknown[51] throws "inline" "private"
  {
    unknown ret[252048](252046 call _build_tuple imag(64)[130] bool[10])
    (252051 'end of statement')
    if(252078 call _cond_test(252056 call isAbstractEnumType t[252024]))
    {
      (252063 call = ret[252048](252061 call _build_tuple 0.0i 0))
    }
    {
      (252075 call = ret[252048](252073 call _build_tuple(252069 call _cast imag(64)[130] x[252026]) 1))
    }
    (252085 return ret[252048])
  }
  where {
    (252041 call &&(252034 call _isIoPrimitiveType t[252024])(252039 call !(252038 call isImagType t[252024])))
  }
  function _toImag[252097](arg x[252094] :
  unknown t[252092]) : _unknown[51] "inline" "private"
  {
    (252110 return(252108 call _build_tuple 0.0i 0))
  }
  where {
    (252103 call !(252102 call _isIoPrimitiveType t[252092]))
  }
  function _toComplex[252123](arg x[252120] :
  unknown t[252118]) : _unknown[51] "inline" "private"
  {
    (252134 return(252132 call _build_tuple x[252120] 1))
  }
  where {
    (252128 call isComplexType t[252118])
  }
  function _toComplex[252147](arg x[252144] :
  unknown t[252142]) : _unknown[51] throws "inline" "private"
  {
    unknown ret[252166](252164 call _build_tuple complex(128)[140] bool[10])
    (252169 'end of statement')
    if(252199 call _cond_test(252174 call isAbstractEnumType t[252142]))
    {
      (252184 call = ret[252166](252182 call _build_tuple(252178 call + 0.0 0.0i) 0))
    }
    {
      (252196 call = ret[252166](252194 call _build_tuple(252190 call _cast complex(128)[140] x[252144]) 1))
    }
    (252206 return ret[252166])
  }
  where {
    (252159 call &&(252152 call _isIoPrimitiveType t[252142])(252157 call !(252156 call isComplexType t[252142])))
  }
  function _toComplex[252218](arg x[252215] :
  unknown t[252213]) : _unknown[51] "inline" "private"
  {
    (252234 return(252232 call _build_tuple(252228 call + 0.0 0.0i) 0))
  }
  where {
    (252224 call !(252223 call _isIoPrimitiveType t[252213]))
  }
  function _toRealOrComplex[252247](arg x[252244] :
  unknown t[252242]) : _unknown[51] "inline" "private"
  {
    (252258 return(252256 call _build_tuple x[252244] 1))
  }
  where {
    (252252 call isComplexType t[252242])
  }
  function _toRealOrComplex[252271](arg x[252268] :
  unknown t[252266]) : _unknown[51] "inline" "private"
  {
    (252282 return(252280 call _build_tuple x[252268] 1))
  }
  where {
    (252276 call isFloatType t[252266])
  }
  function _toRealOrComplex[252295](arg x[252292] :
  unknown t[252290]) : _unknown[51] "inline" "private"
  {
    (252325 return(252323 call _build_tuple(252319 call _cast real(64)[16] x[252292]) 1))
  }
  where {
    (252315 call &&(252307 call &&(252300 call _isIoPrimitiveType t[252290])(252305 call !(252304 call isComplexType t[252290])))(252313 call !(252312 call isFloatType t[252290])))
  }
  function _toRealOrComplex[252338](arg x[252335] :
  unknown t[252333]) : _unknown[51] "inline" "private"
  {
    (252351 return(252349 call _build_tuple 0.0 0))
  }
  where {
    (252344 call !(252343 call _isIoPrimitiveType t[252333]))
  }
  function _toNumeric[252364](arg x[252361] :
  unknown t[252359]) : _unknown[51] "inline" "private"
  {
    (252375 return(252373 call _build_tuple x[252361] 1))
  }
  where {
    (252369 call isNumericType t[252359])
  }
  function _toNumeric[252388](arg x[252385] :
  unknown t[252383]) : _unknown[51] throws "inline" "private"
  {
    unknown ret[252407](252405 call _build_tuple int(64)[13] bool[10])
    (252410 'end of statement')
    if(252437 call _cond_test(252415 call isAbstractEnumType t[252383]))
    {
      (252422 call = ret[252407](252420 call _build_tuple 0 0))
    }
    {
      (252434 call = ret[252407](252432 call _build_tuple(252428 call _cast int(64)[13] x[252385]) 1))
    }
    (252444 return ret[252407])
  }
  where {
    (252400 call &&(252393 call _isIoPrimitiveType t[252383])(252398 call !(252397 call isNumericType t[252383])))
  }
  function _toNumeric[252456](arg x[252453] :
  unknown t[252451]) : _unknown[51] "inline" "private"
  {
    (252469 return(252467 call _build_tuple 0 0))
  }
  where {
    (252462 call !(252461 call _isIoPrimitiveType t[252451]))
  }
  function _toBytes[252481](arg x[252478] :
  bytes[24]) : _unknown[51] "inline" "private"
  {
    (252488 return(252486 call _build_tuple x[252478] 1))
  }
  function _toBytes[252499](arg x[252496] :
  string[26]) : _unknown[51] "inline" "private"
  {
    (252509 return(252507 call _build_tuple(252503 call _cast bytes[24] x[252496]) 1))
  }
  function _toBytes[252521](arg x[252518] :
  unknown t[252516]) : _unknown[51] "inline" "private"
  {
    (252547 return(252545 call _build_tuple(252541 call _cast bytes[24] "") 0))
  }
  function _toString[252558](arg x[252555] :
  string[26]) : _unknown[51] "inline" "private"
  {
    (252565 return(252563 call _build_tuple x[252555] 1))
  }
  function _toString[252576](arg x[252573] :
  bytes[24]) : _unknown[51] "inline" "private"
  {
    (252599 return(252597 call _build_tuple "" 0))
  }
  function _toString[252611](arg x[252608] :
  unknown t[252606]) : _unknown[51] "inline" "private"
  {
    (252637 return(252635 call _build_tuple(252631 call _cast string[26] x[252608]) 1))
  }
  where {
    (252627 call &&(252621 call &&(252616 call _isIoPrimitiveType t[252606])(252619 call != t[252606] bytes[24]))(252625 call != t[252606] string[26]))
  }
  function _toString[252650](arg x[252647] :
  unknown t[252645]) : _unknown[51] "inline" "private"
  {
    (252679 return(252677 call _build_tuple "" 0))
  }
  where {
    (252656 call !(252655 call _isIoPrimitiveType t[252645]))
  }
  function _toChar[252692](arg x[252689] :
  unknown t[252687]) : _unknown[51] "inline" "private"
  {
    (252709 return(252707 call _build_tuple(252703 call _cast(252702 call int(64)[13] 32) x[252689]) 1))
  }
  where {
    (252697 call isIntegralType t[252687])
  }
  function _toChar[252722](arg x[252719] :
  unknown t[252717]) : _unknown[51] "inline" "private"
  {
    unknown chr[252732](252731 call int(64)[13] 32)
    (252735 'end of statement')
    unknown nbytes[252738] c_int[20552]
    (252741 'end of statement')
    unknown local_x[252748](252747 call(252743 call . x[252719] c"localize"))
    (252751 'end of statement')
    (252769 call qio_decode_char_buf chr[252732] nbytes[252738](252761 call(252757 call . local_x[252748] c"c_str"))(252767 call _cast ssize_t[20650](252763 call . local_x[252748] c"numBytes")))
    (252776 return(252774 call _build_tuple chr[252732] 1))
  }
  where {
    (252726 call == t[252717] string[26])
  }
  function _toChar[252788](arg x[252785] :
  unknown t[252783]) : _unknown[51] "inline" "private"
  {
    (252813 return(252811 call _build_tuple(252807 call _cast(252806 call int(64)[13] 32) 0) 0))
  }
  where {
    (252800 call !(252798 call ||(252792 call == t[252783] string[26])(252797 call isIntegralType t[252783])))
  }
  function _setIfPrimitive[252826](ref arg lhs[252823] :
  unknown t[252821], arg rhs[252830] :
  unknown t2[252828], arg argi[252834] :
  int(64)[13]) : _unknown[51] "inline" "private"
  {
    unknown empty[252849] t2[252828]
    (252852 'end of statement')
    if(252870 call _cond_test(252856 call == rhs[252830] empty[252849]))
    {
      (252860 call = lhs[252823] 0)
    }
    {
      (252866 call = lhs[252823] 1)
    }
    (252875 return(398502 call ENOERR[223673]))
  }
  where {
    (252846 call &&(252840 call == t[252821] bool[10])(252845 call _isIoPrimitiveType t2[252828]))
  }
  { scopeless type
    syserr[223603]
  }
  function _setIfPrimitive[252888](ref arg lhs[252885] :
  unknown t[252883], arg rhs[252892] :
  unknown t2[252890], arg argi[252896] :
  int(64)[13]) : _unknown[51] "inline" "private"
  {
    Try
    {
      {
        if(253019 call _cond_test(252913 call isAbstractEnumType t[252883]))
        {
          if(252931 call _cond_test(252917 call isStringType t2[252890]))
          {
            (252923 call = lhs[252885](252921 call _cast t[252883] rhs[252892]))
          }
          {
            (252928 return ERANGE[224793])
          }
        }
        {
          if(253015 call _cond_test(252939 call isEnumType t[252883]))
          {
            if(252971 call _cond_test(252948 call ||(252943 call isIntType t2[252890])(252947 call isStringType t2[252890])))
            {
              (252955 call = lhs[252885](252953 call _cast t[252883] rhs[252892]))
            }
            {
              (252967 call = lhs[252885](252965 call _cast t[252883](252962 call _cast int(64)[13] rhs[252892])))
            }
          }
          {
            if(253010 call _cond_test(252984 call &&(252979 call isBytesType t2[252890])(252983 call isStringType t[252883])))
            {
              (252997 call = lhs[252885](252996 call(252988 call . rhs[252892] c"decode") strict[173692]))
            }
            {
              (253006 call = lhs[252885](253004 call _cast t[252883] rhs[252892]))
            }
          }
        }
      }
    }
    Catch
    {
      unknown tmp[354679] "temp"(354682 'current error')
      unknown chpl_anon_error[354685](354690 'new'(354688 call _owned[30](?)(354686 'to non nilable class' tmp[354679])))
      {
        (253027 return ERANGE[224793])
      }
    }
    (253035 return(398529 call ENOERR[223673]))
  }
  where {
    (252908 call &&(252902 call != t[252883] bool[10])(252907 call _isIoPrimitiveType t[252883]))
  }
  { scopeless type
    syserr[223603]
  }
  function _setIfPrimitive[253048](ref arg lhs[253045] :
  unknown t[253043], arg rhs[253050]:_any[178](?), arg argi[253053] :
  int(64)[13]) : _unknown[51] "inline" "private"
  {
    (253067 return(253066 call qio_format_error_arg_mismatch argi[253053]))
  }
  where {
    (253061 call !(253060 call _isIoPrimitiveType t[253043]))
  }
  { scopeless type
    syserr[223603]
  }
  function _setIfChar[253081](ref arg lhs[253078] :
  unknown t[253076], arg rhs[253087] :
  (253086 call int(64)[13] 32)) : _unknown[51] "inline" "private" "no return value for void"
  {
    (253103 call = lhs[253078](253101 call _cast string[26](253095 'new'(253099 call ioChar[238652] rhs[253087]))))
  }
  where {
    (253092 call == t[253076] string[26])
  }
  function _setIfChar[253117](ref arg lhs[253114] :
  unknown t[253112], arg rhs[253123] :
  (253122 call int(64)[13] 32)) : _unknown[51] "inline" "private" "no return value for void"
  {
    (253135 call = lhs[253114](253133 call _cast t[253112] rhs[253123]))
  }
  where {
    (253129 call isIntegralType t[253112])
  }
  function _setIfChar[253149](ref arg lhs[253146] :
  unknown t[253144], arg rhs[253155] :
  (253154 call int(64)[13] 32)) : _unknown[51] "inline" "private" "no return value for void"
  {
  }
  where {
    (253168 call !(253166 call ||(253160 call == t[253144] string[26])(253165 call isIntegralType t[253144])))
  }
  function _toRegexp[253181](arg x[253178] :
  unknown t[253176]) : _unknown[51] "inline" "private"
  {
    (253196 return(253194 call _build_tuple x[253178] 1))
  }
  where {
    (354692 'is_subtype'(253189 call regexp[297144](?) ?[260]) t[253176])
  }
  function _toRegexp[253209](arg x[253206] :
  unknown t[253204]) : _unknown[51] "inline" "private"
  {
    unknown r[253215](253214 call regexp[297144](?) string[26])
    (253218 'end of statement')
    (253225 return(253223 call _build_tuple r[253215] 0))
  }
  function _channel_regexp_info[253617].clear[253282](arg _mt[253621]:_MT[238], arg this[253619]:_channel_regexp_info[253617]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    if(253291 call _cond_test(398554 call . this[253619] c"releaseRegexp"))
    {
      (253288 call qio_regexp_release(398559 call . this[253619] c"theRegexp"))
    }
    (253300 call =(398564 call . this[253619] c"theRegexp")(253299 call qio_regexp_null))
    (253305 call =(398569 call . this[253619] c"hasRegexp") 0)
    (253310 call =(398574 call . this[253619] c"matchedRegexp") 0)
    (253315 call =(398579 call . this[253619] c"releaseRegexp") 0)
    if(253328 call _cond_test(398584 call . this[253619] c"matches"))
    {
      (253326 call _ddata_free(398589 call . this[253619] c"matches")(253324 call +(398594 call . this[253619] c"ncaptures") 1))
    }
    {
      unknown _indexOfInterest[253363] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[253364] "expr temp" "temp"
      (253373 'move' _iterator[253364](253371 call _getIterator(253380 call chpl_direct_counted_range_iter 0(398605 call . this[253619] c"ncaptures"))))
      Defer
      {
        {
          (253396 call _freeIterator _iterator[253364])
        }
      }
      { scopeless type
        (253385 'move' _indexOfInterest[253363](253382 call iteratorIndex _iterator[253364]))
      }
      ForLoop[253365]
      {
        unknown i[253389] "index var" "insert auto destroy"
        (253391 'move' i[253389] _indexOfInterest[253363])
        (253360 call =(253343 call(398599 call . this[253619] c"capArr") i[253389]) b"")
        label _continueLabel[253368]
        _indexOfInterest[253363]
        _iterator[253364]
      }
      label _breakLabel[253369]
    }
    if(253410 call _cond_test(398610 call . this[253619] c"capArr"))
    {
      (253408 call _ddata_free(398615 call . this[253619] c"capArr")(398620 call . this[253619] c"ncaptures"))
    }
  }
  function _channel_regexp_info[253617].allocate_captures[253419](arg _mt[253625]:_MT[238], arg this[253623]:_channel_regexp_info[253617]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (253426 call =(398625 call . this[253623] c"ncaptures")(253425 call qio_regexp_get_ncaptures(398630 call . this[253623] c"theRegexp")))
    (253439 call =(398635 call . this[253623] c"matches")(253438 call _ddata_allocate qio_regexp_string_piece_t[293915](253436 call +(398641 call . this[253623] c"ncaptures") 1)))
    (253448 call =(398646 call . this[253623] c"capArr")(253447 call _ddata_allocate bytes[24](398651 call . this[253623] c"ncaptures")))
    (253453 call =(398656 call . this[253623] c"capturei") 0)
  }
  function _channel_regexp_info[253617].deinit[253460](arg _mt[253629]:_MT[238], arg this[253627]:_channel_regexp_info[253617]) : _unknown[51] "destructor" "method" "primary method" "no return value for void"
  {
    (253464 call(398660 call . this[253627] c"clear"))
  }
  function _channel_regexp_info[253617].writeThis[253473](arg _mt[253633]:_MT[238], arg this[253631]:_channel_regexp_info[253617], arg f[253471]:_any[178](?)) : _unknown[51] throws "method" "primary method" "method overrides" "no return value for void"
  {
    (253499 call <~> f[253471](253497 call + "{hasRegexp = "(253495 call _cast string[26](398666 call . this[253631] c"hasRegexp"))))
    (253527 call <~> f[253471](253525 call + ", matchedRegexp = "(253523 call _cast string[26](398672 call . this[253631] c"matchedRegexp"))))
    (253554 call <~> f[253471](253552 call + ", releaseRegexp = "(253550 call _cast string[26](398678 call . this[253631] c"releaseRegexp"))))
    (253581 call <~> f[253471](253579 call + ", ... capturei = "(253577 call _cast string[26](398684 call . this[253631] c"capturei"))))
    (253611 call <~> f[253471](253609 call +(253606 call + ", ncaptures = "(253604 call _cast string[26](398690 call . this[253631] c"ncaptures"))) "}"))
  }
  type _channel_regexp_info[253617] val super[355768]:object[22] "super class" unknown hasRegexp[253231] 0 unknown matchedRegexp[253236] 0 unknown releaseRegexp[253241] 0 unknown theRegexp[253248](253247 call qio_regexp_null) unknown matches[253257] nil[44](253255 call _ddata[11696](?) qio_regexp_string_piece_t[293915]) unknown capArr[253266] nil[44](253264 call _ddata[11696](?) bytes[24]) unknown capturei[253271] int(64)[13] unknown ncaptures[253276] int(64)[13]
  type unmanaged _channel_regexp_info?[415563]
  type _channel_regexp_info?[415560](?)
  type unmanaged _channel_regexp_info[415557]
  type _channel_regexp_info[398698](?)
  function channel[237749](?)._match_regexp_if_needed[253643](arg _mt[253665]:_MT[238], arg this[253662]:channel[237749](?) :
  channel[237749](?), arg cur[253640] :
  size_t[20657], arg len[253646] :
  size_t[20657], ref arg error[253650] :
  syserr[223603], ref arg style[253654] :
  iostyle[231863], arg r[253659] :
  unmanaged _channel_regexp_info[415557]) : _unknown[51] "method" "no doc" "no return value for void"
  {
    if(254066 call _cond_test(253675 call qio_regexp_ok(253671 call . r[253659] c"theRegexp")))
    {
      if(253684 call _cond_test(253679 call . r[253659] c"matchedRegexp"))
      {
        (253682 return _void[55])
      }
      (253695 call =(253691 call . r[253659] c"matchedRegexp") 1)
      (253705 call(253701 call . r[253659] c"allocate_captures"))
      unknown ncaps[253713](253710 call . r[253659] c"ncaptures")
      (253716 'end of statement')
      unknown nm[253721](253719 call + ncaps[253713] 1)
      (253724 'end of statement')
      unknown maxlen[253735](253732 call . style[253654] c"max_width_characters")(253728 call int(64)[13] 64)
      (253738 'end of statement')
      unknown can_discard[253743](253741 call == cur[253640] len[253646])
      (253746 'end of statement')
      if(253768 call _cond_test(253755 call == maxlen[253735](253754 call max(253752 call uint(64)[115] 32))))
      {
        (253765 call = maxlen[253735](253764 call max(253762 call int(64)[13] 64)))
      }
      unknown before_match[253777](253776 call qio_channel_offset_unlocked(398708 call . this[253662] c"_channel_internal"))
      (253780 'end of statement')
      (253803 call = error[253650](253802 call qio_regexp_channel_match(253784 call . r[253659] c"theRegexp") 0(398714 call . this[253662] c"_channel_internal") maxlen[253735] QIO_REGEXP_ANCHOR_START[293888] can_discard[253743] 1 0(253798 call . r[253659] c"matches") nm[253721]))
      unknown after_match[253810](253809 call qio_channel_offset_unlocked(398723 call . this[253662] c"_channel_internal"))
      (253813 'end of statement')
      if(254052 call _cond_test(253815 call ! error[253650]))
      {
        {
          unknown _indexOfInterest[253866] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[253867] "expr temp" "temp"
          (253876 'move' _iterator[253867](253874 call _getIterator(253883 call chpl_direct_counted_range_iter 0 ncaps[253713])))
          Defer
          {
            {
              (253899 call _freeIterator _iterator[253867])
            }
          }
          { scopeless type
            (253888 'move' _indexOfInterest[253866](253885 call iteratorIndex _iterator[253867]))
          }
          ForLoop[253868]
          {
            unknown j[253892] "index var" "insert auto destroy"
            (253894 'move' j[253892] _indexOfInterest[253866])
            {
              unknown m[253837](253836 call _to_reMatch(253834 call(253826 call . r[253659] c"matches")(253831 call + 1 j[253892])))
              (253840 'end of statement')
              (253855 call(398731 call . this[253662] c"_extractMatch") m[253837](253853 call(253848 call . r[253659] c"capArr") j[253892]) error[253650])
              if(253861 call _cond_test error[253650])
              {
                break _breakLabel[253872] _breakLabel[253872]
              }
            }
            label _continueLabel[253871]
            _indexOfInterest[253866]
            _iterator[253867]
          }
          label _breakLabel[253872]
        }
        unknown cur[253911](253910 call qio_channel_offset_unlocked(398741 call . this[253662] c"_channel_internal"))
        (253914 'end of statement')
        unknown target[253942](253940 call _cast int(64)[13](253937 call +(253922 call .(253921 call(253916 call . r[253659] c"matches") 0) c"offset")(253934 call .(253931 call(253926 call . r[253659] c"matches") 0) c"len")))
        (253945 'end of statement')
        (253956 call = error[253650](253955 call qio_channel_advance 0(398747 call . this[253662] c"_channel_internal")(253953 call - target[253942] cur[253911])))
      }
      {
        {
          unknown _indexOfInterest[253993] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[253994] "expr temp" "temp"
          (254003 'move' _iterator[253994](254001 call _getIterator(254010 call chpl_direct_counted_range_iter 0 ncaps[253713])))
          Defer
          {
            {
              (254026 call _freeIterator _iterator[253994])
            }
          }
          { scopeless type
            (254015 'move' _indexOfInterest[253993](254012 call iteratorIndex _iterator[253994]))
          }
          ForLoop[253995]
          {
            unknown j[254019] "index var" "insert auto destroy"
            (254021 'move' j[254019] _indexOfInterest[253993])
            {
              (253989 call =(253972 call(253967 call . r[253659] c"capArr") j[254019]) b"")
            }
            label _continueLabel[253998]
            _indexOfInterest[253993]
            _iterator[253994]
          }
          label _breakLabel[253999]
        }
        unknown cur[254038](254037 call qio_channel_offset_unlocked(398756 call . this[253662] c"_channel_internal"))
        (254041 'end of statement')
        (254050 call qio_channel_advance 0(398761 call . this[253662] c"_channel_internal")(254048 call - before_match[253777] cur[254038]))
      }
    }
    {
      (254060 call = error[253650](254059 call qio_format_error_bad_regexp))
      {
      }
    }
  }
  function channel[237749](?)._format_reader[254081](arg _mt[254120]:_MT[238], arg this[254117]:channel[237749](?) :
  channel[237749](?), arg fmtStr[254078] :
  unknown fmtType[254076], ref arg cur[254084] :
  size_t[20657], arg len[254088] :
  size_t[20657], ref arg error[254092] :
  syserr[223603], ref arg conv[254096] :
  qio_conv_t[235075], ref arg gotConv[254100] :
  bool[10], ref arg style[254104] :
  iostyle[231863], ref arg r[254110] :
  unmanaged _channel_regexp_info?[415563], arg isReadf[254114] :
  bool[10]) : _unknown[51] "method" "no doc" "no return value for void"
  {
    if(254138 call _cond_test(254124 call != r[254110] nil[44]))
    {
      (254135 call =(254131 call .(254127 call postfix! r[254110]) c"hasRegexp") 0)
    }
    if(254669 call _cond_test(254145 call ! error[254092]))
    {
      unknown fmt[254158](254157 call(254153 call .(254152 call(254148 call . fmtStr[254078] c"localize")) c"c_str"))
      (254161 'end of statement')
      {
        unknown tmp[254642] "temp"
        (254666 'move' tmp[254642](254661 call _cond_test(254663 call < cur[254084] len[254088])))
        WhileDo[254647]
        {
          {
            (254169 call = gotConv[254100] 0)
            if(254177 call _cond_test error[254092])
            {
              break _breakLabel[254646] _breakLabel[254646]
            }
            unknown end[254186](254185 call uint(64)[115] 64)
            (254189 'end of statement')
            (254200 call = error[254092](254199 call qio_conv_parse fmt[254158] cur[254084] end[254186] isReadf[254114] conv[254096] style[254104]))
            if(254205 call _cond_test error[254092])
            {
            }
            (254214 call = cur[254084](254212 call _cast size_t[20657] end[254186]))
            if(254221 call _cond_test error[254092])
            {
              break _breakLabel[254646] _breakLabel[254646]
            }
            if(254637 call _cond_test(254233 call ==(254229 call . conv[254096] c"argType") QIO_CONV_ARG_TYPE_NONE_LITERAL[235169]))
            {
              if(254406 call _cond_test isReadf[254114])
              {
                if(254379 call _cond_test(254243 call ==(254239 call . conv[254096] c"literal_is_whitespace") 2))
                {
                  unknown offsetA[254249](254248 call qio_channel_offset_unlocked(398794 call . this[254117] c"_channel_internal"))
                  (254252 'end of statement')
                  (254261 call = error[254092](254260 call qio_channel_skip_past_newline 0(398800 call . this[254117] c"_channel_internal") 1))
                  unknown offsetB[254268](254267 call qio_channel_offset_unlocked(398805 call . this[254117] c"_channel_internal"))
                  (254271 'end of statement')
                  if(254287 call _cond_test(254279 call &&(254273 call ! error[254092])(254277 call == offsetA[254249] offsetB[254268])))
                  {
                    (254283 call = error[254092](398812 call EFORMAT[224289]))
                  }
                }
                {
                  if(254375 call _cond_test(254296 call ==(254292 call . conv[254096] c"literal_is_whitespace") 1))
                  {
                    unknown offsetA[254302](254301 call qio_channel_offset_unlocked(398816 call . this[254117] c"_channel_internal"))
                    (254305 'end of statement')
                    (254321 call = error[254092](254320 call qio_channel_scan_literal_2 0(398822 call . this[254117] c"_channel_internal")(254315 call . conv[254096] c"literal") 0 1))
                    unknown offsetB[254328](254327 call qio_channel_offset_unlocked(398827 call . this[254117] c"_channel_internal"))
                    (254331 'end of statement')
                    if(254347 call _cond_test(254339 call &&(254333 call ! error[254092])(254337 call == offsetA[254302] offsetB[254328])))
                    {
                      (254343 call = error[254092](398834 call EFORMAT[224289]))
                    }
                  }
                  {
                    (254371 call = error[254092](254370 call qio_channel_scan_literal_2 0(398839 call . this[254117] c"_channel_internal")(254357 call . conv[254096] c"literal")(254367 call _cast ssize_t[20650](254363 call . conv[254096] c"literal_length")) 0))
                  }
                }
              }
              {
                (254402 call = error[254092](254401 call qio_channel_print_literal_2 0(398846 call . this[254117] c"_channel_internal")(254391 call . conv[254096] c"literal")(254399 call _cast ssize_t[20650](254395 call . conv[254096] c"literal_length"))))
              }
            }
            {
              if(254633 call _cond_test(254416 call ==(254412 call . conv[254096] c"argType") QIO_CONV_ARG_TYPE_NONE_REGEXP_LITERAL[235164]))
              {
                if(254619 call _cond_test(254419 call ! isReadf[254114]))
                {
                  (254425 call = error[254092](254424 call qio_format_error_write_regexp))
                }
                {
                  if(254443 call _cond_test(254431 call == r[254110] nil[44]))
                  {
                    (254440 call = r[254110](254436 'new'(_chpl_manager = unmanaged[220](?))(254439 call _channel_regexp_info[398698](?))))
                  }
                  const rnn[254452] "const"(254450 call postfix! r[254110])
                  (254455 'end of statement')
                  (254461 call(254457 call . rnn[254452] c"clear"))
                  unknown errstr[254464] string[26]
                  (254467 'end of statement')
                  (254502 call qio_regexp_create_compile_flags_2(254472 call . conv[254096] c"regexp")(254479 call . conv[254096] c"regexp_length")(254485 call . conv[254096] c"regexp_flags")(254491 call . conv[254096] c"regexp_flags_length")(254496 call == fmtType[254076] string[26])(254499 call . rnn[254452] c"theRegexp"))
                  (254511 call =(254507 call . rnn[254452] c"releaseRegexp") 1)
                  if(254615 call _cond_test(254520 call qio_regexp_ok(254516 call . rnn[254452] c"theRegexp")))
                  {
                    (254526 call =(254522 call . rnn[254452] c"hasRegexp") 1)
                    (254541 call =(254531 call . rnn[254452] c"ncaptures")(254540 call qio_regexp_get_ncaptures(254536 call . rnn[254452] c"theRegexp")))
                    if(254603 call _cond_test(254582 call ||(254571 call ||(254560 call ||(254549 call >(254545 call . rnn[254452] c"ncaptures") 0)(254558 call !=(254554 call . conv[254096] c"preArg1") QIO_CONV_UNK[235079]))(254569 call !=(254565 call . conv[254096] c"preArg2") QIO_CONV_UNK[235079]))(254580 call !=(254576 call . conv[254096] c"preArg3") QIO_CONV_UNK[235079])))
                    {
                      (254586 call = gotConv[254100] 1)
                      break _breakLabel[254646] _breakLabel[254646]
                    }
                    {
                      (254600 call(398865 call . this[254117] c"_match_regexp_if_needed") cur[254084] len[254088] error[254092] style[254104] rnn[254452])
                    }
                  }
                  {
                    (254611 call = error[254092](254610 call qio_format_error_bad_regexp))
                  }
                }
              }
              {
                (254626 call = gotConv[254100] 1)
                break _breakLabel[254646] _breakLabel[254646]
              }
            }
          }
          label _continueLabel[254645]
          (254656 'move' tmp[254642](254651 call _cond_test(254653 call < cur[254084] len[254088])))
          tmp[254642]
        }
        label _breakLabel[254646]
      }
    }
  }
  function channel[237749](?)._conv_helper[254682](arg _mt[254701]:_MT[238], arg this[254698]:channel[237749](?) :
  channel[237749](?), ref arg error[254679] :
  syserr[223603], ref arg conv[254685] :
  qio_conv_t[235075], ref arg gotConv[254689] :
  bool[10], ref arg j[254693] :
  int(64)[13], ref arg argType[254696]:_any[178](?)) : _unknown[51] "method" "no doc" "no return value for void"
  {
    if(254706 call _cond_test error[254679])
    {
      (254704 return _void[55])
    }
    if(254838 call _cond_test gotConv[254689])
    {
      if(254737 call _cond_test(254718 call !=(254714 call . conv[254685] c"preArg1") QIO_CONV_UNK[235079]))
      {
        (254728 call =(254723 call argType[254696] j[254693])(254725 call . conv[254685] c"preArg1"))
        (254734 call += j[254693] 1)
      }
      if(254766 call _cond_test(254747 call !=(254743 call . conv[254685] c"preArg2") QIO_CONV_UNK[235079]))
      {
        (254757 call =(254752 call argType[254696] j[254693])(254754 call . conv[254685] c"preArg2"))
        (254763 call += j[254693] 1)
      }
      if(254794 call _cond_test(254775 call !=(254771 call . conv[254685] c"preArg3") QIO_CONV_UNK[235079]))
      {
        (254785 call =(254780 call argType[254696] j[254693])(254782 call . conv[254685] c"preArg3"))
        (254791 call += j[254693] 1)
      }
      if(254834 call _cond_test(254803 call !=(254799 call . conv[254685] c"argType") QIO_CONV_UNK[235079]))
      {
        if(254824 call _cond_test(254810 call ==(254808 call argType[254696] j[254693]) QIO_CONV_UNK[235079]))
        {
          (254820 call =(254815 call argType[254696] j[254693])(254817 call . conv[254685] c"argType"))
        }
        (254831 call += j[254693] 1)
      }
    }
  }
  function channel[237749](?)._conv_sethandler[254851](arg _mt[254874]:_MT[238], arg this[254871]:channel[237749](?) :
  channel[237749](?), ref arg error[254848] :
  syserr[223603], arg argtypei[254854] :
  c_int[20552], ref arg style[254858] :
  iostyle[231863], arg i[254862] :
  int(64)[13], arg argi[254865]:_any[178](?), arg isReadf[254868] :
  bool[10]) : _unknown[51] throws "method" "no doc"
  {
    if(254881 call _cond_test error[254848])
    {
      (254879 return 0)
    }
    {
      unknown tmp[255508] "expr temp" "maybe param" "maybe type" "temp"
      (255510 'move' tmp[255508] argtypei[254854])
      if(255515 call _cond_test(255512 call == tmp[255508] QIO_CONV_SET_MIN_WIDTH_COLS[235174]))
      {
        unknown tmp[254900] "temp"(254899 call _toIntegral argi[254865])
        (254907 call _check_tuple_var_decl tmp[254900] 2)
        unknown t[254891](254901 call tmp[254900] 0)
        unknown ok[254893](254904 call tmp[254900] 1)
        (254912 'end of statement')
        if(254942 call _cond_test(254915 call ! ok[254893]))
        {
          (254922 call = error[254848](254921 call qio_format_error_arg_mismatch i[254862]))
        }
        {
          (254939 call =(254929 call . style[254858] c"min_width_columns")(254937 call _cast(254936 call uint(64)[115] 32) t[254891]))
        }
      }
      {
        if(255521 call _cond_test(255518 call == tmp[255508] QIO_CONV_SET_MAX_WIDTH_COLS[235179]))
        {
          unknown tmp[254960] "temp"(254959 call _toIntegral argi[254865])
          (254967 call _check_tuple_var_decl tmp[254960] 2)
          unknown t[254951](254961 call tmp[254960] 0)
          unknown ok[254953](254964 call tmp[254960] 1)
          (254972 'end of statement')
          if(255002 call _cond_test(254975 call ! ok[254953]))
          {
            (254982 call = error[254848](254981 call qio_format_error_arg_mismatch i[254862]))
          }
          {
            (254999 call =(254989 call . style[254858] c"max_width_columns")(254997 call _cast(254996 call uint(64)[115] 32) t[254951]))
          }
        }
        {
          if(255528 call _cond_test(255525 call == tmp[255508] QIO_CONV_SET_MAX_WIDTH_CHARS[235184]))
          {
            unknown tmp[255020] "temp"(255019 call _toIntegral argi[254865])
            (255027 call _check_tuple_var_decl tmp[255020] 2)
            unknown t[255011](255021 call tmp[255020] 0)
            unknown ok[255013](255024 call tmp[255020] 1)
            (255032 'end of statement')
            if(255060 call _cond_test(255035 call ! ok[255013]))
            {
              (255042 call = error[254848](255041 call qio_format_error_arg_mismatch i[254862]))
            }
            {
              (255057 call =(255047 call . style[254858] c"max_width_characters")(255055 call _cast(255054 call uint(64)[115] 32) t[255011]))
            }
          }
          {
            if(255535 call _cond_test(255532 call == tmp[255508] QIO_CONV_SET_MAX_WIDTH_BYTES[235189]))
            {
              unknown tmp[255078] "temp"(255077 call _toIntegral argi[254865])
              (255085 call _check_tuple_var_decl tmp[255078] 2)
              unknown t[255069](255079 call tmp[255078] 0)
              unknown ok[255071](255082 call tmp[255078] 1)
              (255090 'end of statement')
              if(255120 call _cond_test(255093 call ! ok[255071]))
              {
                (255100 call = error[254848](255099 call qio_format_error_arg_mismatch i[254862]))
              }
              {
                (255117 call =(255107 call . style[254858] c"max_width_bytes")(255115 call _cast(255114 call uint(64)[115] 32) t[255069]))
              }
            }
            {
              if(255542 call _cond_test(255539 call == tmp[255508] QIO_CONV_SET_PRECISION[235194]))
              {
                unknown tmp[255138] "temp"(255137 call _toIntegral argi[254865])
                (255145 call _check_tuple_var_decl tmp[255138] 2)
                unknown t[255129](255139 call tmp[255138] 0)
                unknown ok[255131](255142 call tmp[255138] 1)
                (255150 'end of statement')
                if(255180 call _cond_test(255153 call ! ok[255131]))
                {
                  (255160 call = error[254848](255159 call qio_format_error_arg_mismatch i[254862]))
                }
                {
                  (255177 call =(255167 call . style[254858] c"precision")(255175 call _cast(255174 call int(64)[13] 32) t[255129]))
                }
              }
              {
                if(255549 call _cond_test(255546 call == tmp[255508] QIO_CONV_SET_STRINGSTART[235209]))
                {
                  unknown tmp[255198] "temp"(255197 call _toChar argi[254865])
                  (255205 call _check_tuple_var_decl tmp[255198] 2)
                  unknown t[255189](255199 call tmp[255198] 0)
                  unknown ok[255191](255202 call tmp[255198] 1)
                  (255210 'end of statement')
                  if(255237 call _cond_test(255213 call ! ok[255191]))
                  {
                    (255220 call = error[254848](255219 call qio_format_error_arg_mismatch i[254862]))
                  }
                  {
                    (255234 call =(255227 call . style[254858] c"string_start")(255232 call _cast style_char_t[231506] t[255189]))
                  }
                }
                {
                  if(255556 call _cond_test(255553 call == tmp[255508] QIO_CONV_SET_STRINGEND[235219]))
                  {
                    unknown tmp[255255] "temp"(255254 call _toChar argi[254865])
                    (255262 call _check_tuple_var_decl tmp[255255] 2)
                    unknown t[255246](255256 call tmp[255255] 0)
                    unknown ok[255248](255259 call tmp[255255] 1)
                    (255267 'end of statement')
                    if(255292 call _cond_test(255270 call ! ok[255248]))
                    {
                      (255277 call = error[254848](255276 call qio_format_error_arg_mismatch i[254862]))
                    }
                    {
                      (255289 call =(255282 call . style[254858] c"string_end")(255287 call _cast style_char_t[231506] t[255246]))
                    }
                  }
                  {
                    if(255563 call _cond_test(255560 call == tmp[255508] QIO_CONV_SET_STRINGSTARTEND[235214]))
                    {
                      unknown tmp[255310] "temp"(255309 call _toChar argi[254865])
                      (255317 call _check_tuple_var_decl tmp[255310] 2)
                      unknown t[255301](255311 call tmp[255310] 0)
                      unknown ok[255303](255314 call tmp[255310] 1)
                      (255322 'end of statement')
                      if(255359 call _cond_test(255325 call ! ok[255303]))
                      {
                        (255332 call = error[254848](255331 call qio_format_error_arg_mismatch i[254862]))
                      }
                      {
                        (255344 call =(255337 call . style[254858] c"string_start")(255342 call _cast style_char_t[231506] t[255301]))
                        (255356 call =(255349 call . style[254858] c"string_end")(255354 call _cast style_char_t[231506] t[255301]))
                      }
                    }
                    {
                      if(255570 call _cond_test(255567 call == tmp[255508] QIO_CONV_SET_STRINGLEN[235199]))
                      {
                        unknown tmp[255376] "temp"(255375 call _toIntegral argi[254865])
                        (255383 call _check_tuple_var_decl tmp[255376] 2)
                        unknown t[255367](255377 call tmp[255376] 0)
                        unknown ok[255369](255380 call tmp[255376] 1)
                        (255388 'end of statement')
                        if(255417 call _cond_test(255391 call ! ok[255369]))
                        {
                          (255398 call = error[254848](255397 call qio_format_error_arg_mismatch i[254862]))
                        }
                        {
                          (255413 call =(255403 call . style[254858] c"str_style")(255411 call _cast(255410 call int(64)[13] 64) t[255367]))
                        }
                      }
                      {
                        if(255577 call _cond_test(255574 call == tmp[255508] QIO_CONV_SET_TERMINATOR[235204]))
                        {
                          unknown tmp[255434] "temp"(255433 call _toChar argi[254865])
                          (255441 call _check_tuple_var_decl tmp[255434] 2)
                          unknown t[255425](255435 call tmp[255434] 0)
                          unknown ok[255427](255438 call tmp[255434] 1)
                          (255446 'end of statement')
                          if(255478 call _cond_test(255449 call ! ok[255427]))
                          {
                            (255456 call = error[254848](255455 call qio_format_error_arg_mismatch i[254862]))
                          }
                          {
                            (255474 call =(255461 call . style[254858] c"str_style")(255473 call stringStyleTerminated(255470 call _cast(255469 call uint(64)[115] 8) t[255425])))
                          }
                        }
                        {
                          if(255584 call _cond_test(255581 call == tmp[255508] QIO_CONV_SET_DONE[235229]))
                          {
                          }
                          {
                            if(255591 call _cond_test(255588 call == tmp[255508] QIO_CONV_UNK[235079]))
                            {
                              (255495 call = error[254848](255494 call qio_format_error_too_many_args))
                            }
                            {
                              (255502 return 1)
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    (255597 return 0)
  }
  { scopeless type
    bool[10]
  }
  function channel[237749](?)._write_signed[255612](arg _mt[255625]:_MT[238], arg this[255622]:channel[237749](?) :
  channel[237749](?), arg width[255609] :
  (255608 call uint(64)[115] 32), arg t[255615] :
  int(64)[13], arg i[255619] :
  int(64)[13]) : _unknown[51] "method" "no doc"
  {
    unknown err[255629] syserr[223603]
    (255632 'end of statement')
    unknown byteorder[255638](255637 call qio_channel_byteorder(398979 call . this[255622] c"_channel_internal"))
    (255641 'end of statement')
    {
      unknown tmp[255763] "expr temp" "maybe param" "maybe type" "temp"
      (255765 'move' tmp[255763] width[255609])
      if(255770 call _cond_test(255767 call == tmp[255763] 1))
      {
        unknown x[255653](255651 call _cast(255650 call int(64)[13] 8) t[255615])
        (255656 'end of statement')
        (255665 call = err[255629](255664 call qio_channel_write_int8 0(398987 call . this[255622] c"_channel_internal") x[255653]))
      }
      {
        if(255776 call _cond_test(255773 call == tmp[255763] 2))
        {
          unknown x[255679](255677 call _cast(255676 call int(64)[13] 16) t[255615])
          (255682 'end of statement')
          (255692 call = err[255629](255691 call qio_channel_write_int16 0 byteorder[255638](398996 call . this[255622] c"_channel_internal") x[255679]))
        }
        {
          if(255783 call _cond_test(255780 call == tmp[255763] 4))
          {
            unknown x[255706](255704 call _cast(255703 call int(64)[13] 32) t[255615])
            (255709 'end of statement')
            (255719 call = err[255629](255718 call qio_channel_write_int32 0 byteorder[255638](399005 call . this[255622] c"_channel_internal") x[255706]))
          }
          {
            if(255790 call _cond_test(255787 call == tmp[255763] 8))
            {
              unknown x[255733](255731 call _cast(255730 call int(64)[13] 64) t[255615])
              (255736 'end of statement')
              (255746 call = err[255629](255745 call qio_channel_write_int64 0 byteorder[255638](399014 call . this[255622] c"_channel_internal") x[255733]))
            }
            {
              (255756 call = err[255629](255755 call qio_format_error_arg_mismatch i[255619]))
            }
          }
        }
      }
    }
    (255796 return err[255629])
  }
  { scopeless type
    syserr[223603]
  }
  function channel[237749](?)._read_signed[255811](arg _mt[255824]:_MT[238], arg this[255821]:channel[237749](?) :
  channel[237749](?), arg width[255808] :
  (255807 call uint(64)[115] 32), out arg t[255814] :
  int(64)[13], arg i[255818] :
  int(64)[13]) : _unknown[51] "method" "no doc"
  {
    unknown err[255828] syserr[223603]
    (255831 'end of statement')
    unknown byteorder[255837](255836 call qio_channel_byteorder(399025 call . this[255821] c"_channel_internal"))
    (255840 'end of statement')
    {
      unknown tmp[255970] "expr temp" "maybe param" "maybe type" "temp"
      (255972 'move' tmp[255970] width[255808])
      if(255977 call _cond_test(255974 call == tmp[255970] 1))
      {
        unknown x[255849](255848 call int(64)[13] 8)
        (255852 'end of statement')
        (255861 call = err[255828](255860 call qio_channel_read_int8 0(399032 call . this[255821] c"_channel_internal") x[255849]))
        (255866 call = t[255814] x[255849])
      }
      {
        if(255983 call _cond_test(255980 call == tmp[255970] 2))
        {
          unknown x[255877](255876 call int(64)[13] 16)
          (255880 'end of statement')
          (255890 call = err[255828](255889 call qio_channel_read_int16 0 byteorder[255837](399042 call . this[255821] c"_channel_internal") x[255877]))
          (255895 call = t[255814] x[255877])
        }
        {
          if(255990 call _cond_test(255987 call == tmp[255970] 4))
          {
            unknown x[255906](255905 call int(64)[13] 32)
            (255909 'end of statement')
            (255919 call = err[255828](255918 call qio_channel_read_int32 0 byteorder[255837](399052 call . this[255821] c"_channel_internal") x[255906]))
            (255924 call = t[255814] x[255906])
          }
          {
            if(255997 call _cond_test(255994 call == tmp[255970] 8))
            {
              unknown x[255935](255934 call int(64)[13] 64)
              (255938 'end of statement')
              (255948 call = err[255828](255947 call qio_channel_read_int64 0 byteorder[255837](399062 call . this[255821] c"_channel_internal") x[255935]))
              (255953 call = t[255814] x[255935])
            }
            {
              (255963 call = err[255828](255962 call qio_format_error_arg_mismatch i[255818]))
            }
          }
        }
      }
    }
    (256003 return err[255828])
  }
  { scopeless type
    syserr[223603]
  }
  function channel[237749](?)._write_unsigned[256018](arg _mt[256031]:_MT[238], arg this[256028]:channel[237749](?) :
  channel[237749](?), arg width[256015] :
  (256014 call uint(64)[115] 32), arg t[256021] :
  uint(64)[115], arg i[256025] :
  int(64)[13]) : _unknown[51] "method" "no doc"
  {
    unknown err[256034] syserr[223603]
    (256037 'end of statement')
    unknown byteorder[256043](256042 call qio_channel_byteorder(399074 call . this[256028] c"_channel_internal"))
    (256046 'end of statement')
    {
      unknown tmp[256168] "expr temp" "maybe param" "maybe type" "temp"
      (256170 'move' tmp[256168] width[256015])
      if(256175 call _cond_test(256172 call == tmp[256168] 1))
      {
        unknown x[256058](256056 call _cast(256055 call uint(64)[115] 8) t[256021])
        (256061 'end of statement')
        (256070 call = err[256034](256069 call qio_channel_write_uint8 0(399082 call . this[256028] c"_channel_internal") x[256058]))
      }
      {
        if(256181 call _cond_test(256178 call == tmp[256168] 2))
        {
          unknown x[256084](256082 call _cast(256081 call uint(64)[115] 16) t[256021])
          (256087 'end of statement')
          (256097 call = err[256034](256096 call qio_channel_write_uint16 0 byteorder[256043](399091 call . this[256028] c"_channel_internal") x[256084]))
        }
        {
          if(256188 call _cond_test(256185 call == tmp[256168] 4))
          {
            unknown x[256111](256109 call _cast(256108 call uint(64)[115] 32) t[256021])
            (256114 'end of statement')
            (256124 call = err[256034](256123 call qio_channel_write_uint32 0 byteorder[256043](399100 call . this[256028] c"_channel_internal") x[256111]))
          }
          {
            if(256195 call _cond_test(256192 call == tmp[256168] 8))
            {
              unknown x[256138](256136 call _cast(256135 call uint(64)[115] 64) t[256021])
              (256141 'end of statement')
              (256151 call = err[256034](256150 call qio_channel_write_uint64 0 byteorder[256043](399109 call . this[256028] c"_channel_internal") x[256138]))
            }
            {
              (256161 call = err[256034](256160 call qio_format_error_arg_mismatch i[256025]))
            }
          }
        }
      }
    }
    (256201 return err[256034])
  }
  function channel[237749](?)._read_unsigned[256215](arg _mt[256228]:_MT[238], arg this[256225]:channel[237749](?) :
  channel[237749](?), arg width[256212] :
  (256211 call uint(64)[115] 32), out arg t[256218] :
  uint(64)[115], arg i[256222] :
  int(64)[13]) : _unknown[51] "method" "no doc"
  {
    unknown err[256231] syserr[223603]
    (256234 'end of statement')
    unknown byteorder[256240](256239 call qio_channel_byteorder(399119 call . this[256225] c"_channel_internal"))
    (256243 'end of statement')
    {
      unknown tmp[256373] "expr temp" "maybe param" "maybe type" "temp"
      (256375 'move' tmp[256373] width[256212])
      if(256380 call _cond_test(256377 call == tmp[256373] 1))
      {
        unknown x[256252](256251 call uint(64)[115] 8)
        (256255 'end of statement')
        (256264 call = err[256231](256263 call qio_channel_read_uint8 0(399126 call . this[256225] c"_channel_internal") x[256252]))
        (256269 call = t[256218] x[256252])
      }
      {
        if(256386 call _cond_test(256383 call == tmp[256373] 2))
        {
          unknown x[256280](256279 call uint(64)[115] 16)
          (256283 'end of statement')
          (256293 call = err[256231](256292 call qio_channel_read_uint16 0 byteorder[256240](399136 call . this[256225] c"_channel_internal") x[256280]))
          (256298 call = t[256218] x[256280])
        }
        {
          if(256393 call _cond_test(256390 call == tmp[256373] 4))
          {
            unknown x[256309](256308 call uint(64)[115] 32)
            (256312 'end of statement')
            (256322 call = err[256231](256321 call qio_channel_read_uint32 0 byteorder[256240](399146 call . this[256225] c"_channel_internal") x[256309]))
            (256327 call = t[256218] x[256309])
          }
          {
            if(256400 call _cond_test(256397 call == tmp[256373] 8))
            {
              unknown x[256338](256337 call uint(64)[115] 64)
              (256341 'end of statement')
              (256351 call = err[256231](256350 call qio_channel_read_uint64 0 byteorder[256240](399156 call . this[256225] c"_channel_internal") x[256338]))
              (256356 call = t[256218] x[256338])
            }
            {
              (256366 call = err[256231](256365 call qio_format_error_arg_mismatch i[256222]))
            }
          }
        }
      }
    }
    (256406 return err[256231])
  }
  function channel[237749](?)._write_real[256420](arg _mt[256433]:_MT[238], arg this[256430]:channel[237749](?) :
  channel[237749](?), arg width[256417] :
  (256416 call uint(64)[115] 32), arg t[256423] :
  real(64)[16], arg i[256427] :
  int(64)[13]) : _unknown[51] "method" "no doc"
  {
    unknown err[256436] syserr[223603]
    (256439 'end of statement')
    unknown byteorder[256445](256444 call qio_channel_byteorder(399168 call . this[256430] c"_channel_internal"))
    (256448 'end of statement')
    {
      unknown tmp[256517] "expr temp" "maybe param" "maybe type" "temp"
      (256519 'move' tmp[256517] width[256417])
      if(256524 call _cond_test(256521 call == tmp[256517] 4))
      {
        unknown x[256460](256458 call _cast(256457 call real(64)[16] 32) t[256423])
        (256463 'end of statement')
        (256473 call = err[256436](256472 call qio_channel_write_float32 0 byteorder[256445](399177 call . this[256430] c"_channel_internal") x[256460]))
      }
      {
        if(256530 call _cond_test(256527 call == tmp[256517] 8))
        {
          unknown x[256487](256485 call _cast(256484 call real(64)[16] 64) t[256423])
          (256490 'end of statement')
          (256500 call = err[256436](256499 call qio_channel_write_float64 0 byteorder[256445](399186 call . this[256430] c"_channel_internal") x[256487]))
        }
        {
          (256510 call = err[256436](256509 call qio_format_error_arg_mismatch i[256427]))
        }
      }
    }
    (256536 return err[256436])
  }
  function channel[237749](?)._read_real[256550](arg _mt[256563]:_MT[238], arg this[256560]:channel[237749](?) :
  channel[237749](?), arg width[256547] :
  (256546 call uint(64)[115] 32), out arg t[256553] :
  real(64)[16], arg i[256557] :
  int(64)[13]) : _unknown[51] "method" "no doc"
  {
    unknown err[256566] syserr[223603]
    (256569 'end of statement')
    unknown byteorder[256575](256574 call qio_channel_byteorder(399196 call . this[256560] c"_channel_internal"))
    (256578 'end of statement')
    {
      unknown tmp[256651] "expr temp" "maybe param" "maybe type" "temp"
      (256653 'move' tmp[256651] width[256547])
      if(256658 call _cond_test(256655 call == tmp[256651] 4))
      {
        unknown x[256587](256586 call real(64)[16] 32)
        (256590 'end of statement')
        (256600 call = err[256566](256599 call qio_channel_read_float32 0 byteorder[256575](399204 call . this[256560] c"_channel_internal") x[256587]))
        (256605 call = t[256553] x[256587])
      }
      {
        if(256664 call _cond_test(256661 call == tmp[256651] 8))
        {
          unknown x[256616](256615 call real(64)[16] 64)
          (256619 'end of statement')
          (256629 call = err[256566](256628 call qio_channel_read_float64 0 byteorder[256575](399214 call . this[256560] c"_channel_internal") x[256616]))
          (256634 call = t[256553] x[256616])
        }
        {
          (256644 call = err[256566](256643 call qio_format_error_arg_mismatch i[256557]))
        }
      }
    }
    (256670 return err[256566])
  }
  function channel[237749](?)._write_complex[256684](arg _mt[256697]:_MT[238], arg this[256694]:channel[237749](?) :
  channel[237749](?), arg width[256681] :
  (256680 call uint(64)[115] 32), arg t[256687] :
  complex(128)[140], arg i[256691] :
  int(64)[13]) : _unknown[51] "method" "no doc"
  {
    unknown err[256701](399224 call ENOERR[223673]) syserr[223603]
    (256704 'end of statement')
    unknown byteorder[256710](256709 call qio_channel_byteorder(399228 call . this[256694] c"_channel_internal"))
    (256713 'end of statement')
    {
      unknown tmp[256852] "expr temp" "maybe param" "maybe type" "temp"
      (256854 'move' tmp[256852] width[256681])
      if(256859 call _cond_test(256856 call == tmp[256852] 8))
      {
        unknown x[256725](256723 call _cast(256722 call complex(128)[140] 64) t[256687])
        (256728 'end of statement')
        unknown re[256734](256731 call . x[256725] c"re")
        (256737 'end of statement')
        unknown im[256742](256739 call . x[256725] c"im")
        (256745 'end of statement')
        (256754 call = err[256701](256753 call qio_channel_write_float32 0 byteorder[256710](399237 call . this[256694] c"_channel_internal") re[256734]))
        if(256772 call _cond_test(256758 call ! err[256701]))
        {
          (256768 call = err[256701](256767 call qio_channel_write_float32 0 byteorder[256710](399246 call . this[256694] c"_channel_internal") im[256742]))
        }
      }
      {
        if(256865 call _cond_test(256862 call == tmp[256852] 16))
        {
          unknown x[256787](256785 call _cast(256784 call complex(128)[140] 128) t[256687])
          (256790 'end of statement')
          unknown re[256796](256793 call . x[256787] c"re")
          (256799 'end of statement')
          unknown im[256804](256801 call . x[256787] c"im")
          (256807 'end of statement')
          (256816 call = err[256701](256815 call qio_channel_write_float64 0 byteorder[256710](399255 call . this[256694] c"_channel_internal") re[256796]))
          if(256834 call _cond_test(256820 call ! err[256701]))
          {
            (256830 call = err[256701](256829 call qio_channel_write_float64 0 byteorder[256710](399264 call . this[256694] c"_channel_internal") im[256804]))
          }
        }
        {
          (256845 call = err[256701](256844 call qio_format_error_arg_mismatch i[256691]))
        }
      }
    }
    (256871 return err[256701])
  }
  function channel[237749](?)._read_complex[256885](arg _mt[256898]:_MT[238], arg this[256895]:channel[237749](?) :
  channel[237749](?), arg width[256882] :
  (256881 call uint(64)[115] 32), out arg t[256888] :
  complex(128)[140], arg i[256892] :
  int(64)[13]) : _unknown[51] "method" "no doc"
  {
    unknown err[256902](399272 call ENOERR[223673]) syserr[223603]
    (256905 'end of statement')
    unknown byteorder[256911](256910 call qio_channel_byteorder(399276 call . this[256895] c"_channel_internal"))
    (256914 'end of statement')
    {
      unknown tmp[257091] "expr temp" "maybe param" "maybe type" "temp"
      (257093 'move' tmp[257091] width[256882])
      if(257098 call _cond_test(257095 call == tmp[257091] 8))
      {
        unknown x[256923](256922 call complex(128)[140] 64)
        (256926 'end of statement')
        unknown re[256933](256932 'typeof'(256929 call . x[256923] c"re"))
        (256936 'end of statement')
        unknown im[256942](256941 'typeof'(256938 call . x[256923] c"im"))
        (256945 'end of statement')
        (256954 call = err[256902](256953 call qio_channel_read_float32 0 byteorder[256911](399284 call . this[256895] c"_channel_internal") re[256933]))
        if(256972 call _cond_test(256958 call ! err[256902]))
        {
          (256968 call = err[256902](256967 call qio_channel_read_float32 0 byteorder[256911](399293 call . this[256895] c"_channel_internal") im[256942]))
        }
        (256988 call = x[256923](256986 call _cast(256985 call complex(128)[140] 64)(256980 call _build_tuple re[256933] im[256942])))
        (256993 call = t[256888] x[256923])
      }
      {
        if(257104 call _cond_test(257101 call == tmp[257091] 16))
        {
          unknown x[257004](257003 call complex(128)[140] 128)
          (257007 'end of statement')
          unknown re[257014](257013 'typeof'(257010 call . x[257004] c"re"))
          (257017 'end of statement')
          unknown im[257023](257022 'typeof'(257019 call . x[257004] c"im"))
          (257026 'end of statement')
          (257035 call = err[256902](257034 call qio_channel_read_float64 0 byteorder[256911](399306 call . this[256895] c"_channel_internal") re[257014]))
          if(257053 call _cond_test(257039 call ! err[256902]))
          {
            (257049 call = err[256902](257048 call qio_channel_read_float64 0 byteorder[256911](399315 call . this[256895] c"_channel_internal") im[257023]))
          }
          (257069 call = x[257004](257067 call _cast(257066 call complex(128)[140] 128)(257061 call _build_tuple re[257014] im[257023])))
          (257074 call = t[256888] x[257004])
        }
        {
          (257084 call = err[256902](257083 call qio_format_error_arg_mismatch i[256892]))
        }
      }
    }
    (257110 return err[256902])
  }
  function channel[237749](?).writef[257122](arg _mt[257132]:_MT[238], arg this[257129]:channel[237749](?) :
  channel[237749](?), arg fmtStr[257119] :
  unknown t[257117], const arg args[257126]:_any[178](?) ...) : _unknown[51] throws "method"
  {
    if(257169 call _cond_test(257146 call !(399331 call . this[257129] c"writing")))
    {
      (257167 call compilerError "writef on read-only channel")
    }
    const origLocale[257181] "const"(257180 call(257176 call . this[257129] c"getLocaleOfIoRequest"))
    (257184 'end of statement')
    unknown err[257187](399335 call ENOERR[223673]) syserr[223603]
    (257190 'end of statement')
    const tmp[258420] "const" "temp"
    (258422 'move' tmp[258420](258418 'deref'(258417 '_wide_get_locale'(257192 call . this[257129] c"home"))))
    {
      {
        Try
        {
          {
            (257200 call(257196 call . this[257129] c"lock"))
          }
        }
        Defer
        {
          {
            (257210 call(257206 call . this[257129] c"unlock"))
          }
        }
        unknown save_style[257221](257220 call(257216 call . this[257129] c"_style"))
        (257224 'end of statement')
        unknown cur[257227] 0 size_t[20657]
        (257230 'end of statement')
        unknown len[257239](257237 call _cast size_t[20657](257233 call . fmtStr[257119] c"size")) size_t[20657]
        (257242 'end of statement')
        unknown conv[257244] qio_conv_t[235075]
        (257247 'end of statement')
        unknown gotConv[257249] bool[10]
        (257252 'end of statement')
        unknown style[257254] iostyle[231863]
        (257257 'end of statement')
        unknown end[257259] size_t[20657]
        (257262 'end of statement')
        unknown argType[257270](257268 call *(257265 call + k[257124] 5) c_int[20552])
        (257273 'end of statement')
        unknown r[257277] unmanaged _channel_regexp_info?[415563]
        (257280 'end of statement')
        Defer
        {
          {
            if(257287 call _cond_test r[257277])
            {
              (257284 call chpl__delete r[257277])
            }
          }
        }
        {
          unknown _indexOfInterest[257315] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[257316] "expr temp" "temp"
          (257325 'move' _iterator[257316](257323 call _getIterator(257336 call chpl_direct_range_iter 0(257330 call -(257332 call . argType[257270] c"size") 1) 1)))
          Defer
          {
            {
              (257352 call _freeIterator _iterator[257316])
            }
          }
          { scopeless type
            (257341 'move' _indexOfInterest[257315](257338 call iteratorIndex _iterator[257316]))
          }
          ForLoop[257317]
          {
            unknown i[257345] "index var" "insert auto destroy"
            (257347 'move' i[257345] _indexOfInterest[257315])
            {
              (257311 call =(257309 call argType[257270] i[257345]) QIO_CONV_UNK[235079])
            }
            label _continueLabel[257320]
            _indexOfInterest[257315]
            _iterator[257316]
          }
          label _breakLabel[257321]
        }
        unknown j[257360] 0
        (257363 'end of statement')
        {
          unknown i[258321] 0
          unknown tmp[258322] "maybe param" "temp"
          (258334 'move' tmp[258322](258332 call chpl_compute_low_param_loop_bound 0(257367 call - k[257124] 1)))
          unknown tmp[258323] "maybe param" "temp"
          (258344 'move' tmp[258323](258342 call chpl_compute_high_param_loop_bound 0(258339 call - k[257124] 1)))
          unknown tmp[258324] "maybe param" "temp"
          (258347 'move' tmp[258324] 1)
          ParamForLoop[258349]
          { i[258321] tmp[258322] tmp[258323] tmp[258324]
            {
              (257373 call = gotConv[257249] 0)
              if(257395 call _cond_test(257379 call <= j[257360] i[258321]))
              {
                (257392 call(399358 call . this[257129] c"_format_reader") fmtStr[257119] cur[257227] len[257239] err[257187] conv[257244] gotConv[257249] style[257254] r[257277] 0)
              }
              (257406 call(399372 call . this[257129] c"_conv_helper") err[257187] conv[257244] gotConv[257249] j[257360] argType[257270])
              unknown domore[257423](257422 call(399383 call . this[257129] c"_conv_sethandler") err[257187](257414 call argType[257270] i[258321]) style[257254] i[258321](257420 call args[257126] i[258321]) 0)
              (257426 'end of statement')
              if(258317 call _cond_test domore[257423])
              {
                (257434 call(257429 call . this[257129] c"_set_style") style[257254])
                {
                  unknown tmp[258211] "expr temp" "maybe param" "maybe type" "temp"
                  (258213 'move' tmp[258211](257440 call argType[257270] i[258321]))
                  if(258223 call _cond_test(258221 call ||(258215 call == tmp[258211] QIO_CONV_ARG_TYPE_SIGNED[235089])(258218 call == tmp[258211] QIO_CONV_ARG_TYPE_BINARY_SIGNED[235094])))
                  {
                    unknown tmp[257457] "temp"(257456 call _toSigned(257454 call args[257126] i[258321]))
                    (257464 call _check_tuple_var_decl tmp[257457] 2)
                    unknown t[257445](257458 call tmp[257457] 0)
                    unknown ok[257447](257461 call tmp[257457] 1)
                    (257469 'end of statement')
                    if(257522 call _cond_test(257472 call ! ok[257447]))
                    {
                      (257479 call = err[257187](257478 call qio_format_error_arg_mismatch i[258321]))
                    }
                    {
                      if(257515 call _cond_test(257488 call ==(257486 call argType[257270] i[258321]) QIO_CONV_ARG_TYPE_BINARY_SIGNED[235094]))
                      {
                        (257500 call = err[257187](257499 call(399411 call . this[257129] c"_write_signed")(257493 call . style[257254] c"max_width_bytes") t[257445] i[258321]))
                      }
                      {
                        Try
                        {
                          {
                            (257511 call(399417 call . this[257129] c"_writeOne") dynamic[230939] t[257445] origLocale[257181])
                          }
                        }
                      }
                    }
                  }
                  {
                    if(258234 call _cond_test(258232 call ||(258226 call == tmp[258211] QIO_CONV_ARG_TYPE_UNSIGNED[235099])(258229 call == tmp[258211] QIO_CONV_ARG_TYPE_BINARY_UNSIGNED[235104])))
                    {
                      unknown tmp[257543] "temp"(257542 call _toUnsigned(257540 call args[257126] i[258321]))
                      (257550 call _check_tuple_var_decl tmp[257543] 2)
                      unknown t[257531](257544 call tmp[257543] 0)
                      unknown ok[257533](257547 call tmp[257543] 1)
                      (257555 'end of statement')
                      if(257608 call _cond_test(257558 call ! ok[257533]))
                      {
                        (257565 call = err[257187](257564 call qio_format_error_arg_mismatch i[258321]))
                      }
                      {
                        if(257601 call _cond_test(257574 call ==(257572 call argType[257270] i[258321]) QIO_CONV_ARG_TYPE_BINARY_UNSIGNED[235104]))
                        {
                          (257586 call = err[257187](257585 call(399436 call . this[257129] c"_write_unsigned")(257579 call . style[257254] c"max_width_bytes") t[257531] i[258321]))
                        }
                        {
                          Try
                          {
                            {
                              (257597 call(399442 call . this[257129] c"_writeOne") dynamic[230939] t[257531] origLocale[257181])
                            }
                          }
                        }
                      }
                    }
                    {
                      if(258246 call _cond_test(258244 call ||(258238 call == tmp[258211] QIO_CONV_ARG_TYPE_REAL[235109])(258241 call == tmp[258211] QIO_CONV_ARG_TYPE_BINARY_REAL[235114])))
                      {
                        unknown tmp[257629] "temp"(257628 call _toReal(257626 call args[257126] i[258321]))
                        (257636 call _check_tuple_var_decl tmp[257629] 2)
                        unknown t[257617](257630 call tmp[257629] 0)
                        unknown ok[257619](257633 call tmp[257629] 1)
                        (257641 'end of statement')
                        if(257694 call _cond_test(257644 call ! ok[257619]))
                        {
                          (257651 call = err[257187](257650 call qio_format_error_arg_mismatch i[258321]))
                        }
                        {
                          if(257687 call _cond_test(257660 call ==(257658 call argType[257270] i[258321]) QIO_CONV_ARG_TYPE_BINARY_REAL[235114]))
                          {
                            (257672 call = err[257187](257671 call(399461 call . this[257129] c"_write_real")(257665 call . style[257254] c"max_width_bytes") t[257617] i[258321]))
                          }
                          {
                            Try
                            {
                              {
                                (257683 call(399467 call . this[257129] c"_writeOne") dynamic[230939] t[257617] origLocale[257181])
                              }
                            }
                          }
                        }
                      }
                      {
                        if(258258 call _cond_test(258256 call ||(258250 call == tmp[258211] QIO_CONV_ARG_TYPE_IMAG[235119])(258253 call == tmp[258211] QIO_CONV_ARG_TYPE_BINARY_IMAG[235124])))
                        {
                          unknown tmp[257715] "temp"(257714 call _toImag(257712 call args[257126] i[258321]))
                          (257722 call _check_tuple_var_decl tmp[257715] 2)
                          unknown t[257703](257716 call tmp[257715] 0)
                          unknown ok[257705](257719 call tmp[257715] 1)
                          (257727 'end of statement')
                          if(257783 call _cond_test(257730 call ! ok[257705]))
                          {
                            (257737 call = err[257187](257736 call qio_format_error_arg_mismatch i[258321]))
                          }
                          {
                            if(257776 call _cond_test(257746 call ==(257744 call argType[257270] i[258321]) QIO_CONV_ARG_TYPE_BINARY_IMAG[235124]))
                            {
                              (257761 call = err[257187](257760 call(399484 call . this[257129] c"_write_real")(257751 call . style[257254] c"max_width_bytes")(257757 call _cast real(64)[16] t[257703]) i[258321]))
                            }
                            {
                              Try
                              {
                                {
                                  (257772 call(399490 call . this[257129] c"_writeOne") dynamic[230939] t[257703] origLocale[257181])
                                }
                              }
                            }
                          }
                        }
                        {
                          if(258270 call _cond_test(258268 call ||(258262 call == tmp[258211] QIO_CONV_ARG_TYPE_COMPLEX[235129])(258265 call == tmp[258211] QIO_CONV_ARG_TYPE_BINARY_COMPLEX[235134])))
                          {
                            unknown tmp[257804] "temp"(257803 call _toComplex(257801 call args[257126] i[258321]))
                            (257811 call _check_tuple_var_decl tmp[257804] 2)
                            unknown t[257792](257805 call tmp[257804] 0)
                            unknown ok[257794](257808 call tmp[257804] 1)
                            (257816 'end of statement')
                            if(257869 call _cond_test(257819 call ! ok[257794]))
                            {
                              (257826 call = err[257187](257825 call qio_format_error_arg_mismatch i[258321]))
                            }
                            {
                              if(257862 call _cond_test(257835 call ==(257833 call argType[257270] i[258321]) QIO_CONV_ARG_TYPE_BINARY_COMPLEX[235134]))
                              {
                                (257847 call = err[257187](257846 call(399509 call . this[257129] c"_write_complex")(257840 call . style[257254] c"max_width_bytes") t[257792] i[258321]))
                              }
                              {
                                Try
                                {
                                  {
                                    (257858 call(399515 call . this[257129] c"_writeOne") dynamic[230939] t[257792] origLocale[257181])
                                  }
                                }
                              }
                            }
                          }
                          {
                            if(258277 call _cond_test(258274 call == tmp[258211] QIO_CONV_ARG_TYPE_NUMERIC[235084]))
                            {
                              unknown tmp[257889] "temp"(257888 call _toNumeric(257886 call args[257126] i[258321]))
                              (257896 call _check_tuple_var_decl tmp[257889] 2)
                              unknown t[257877](257890 call tmp[257889] 0)
                              unknown ok[257879](257893 call tmp[257889] 1)
                              (257901 'end of statement')
                              if(257927 call _cond_test(257904 call ! ok[257879]))
                              {
                                (257911 call = err[257187](257910 call qio_format_error_arg_mismatch i[258321]))
                              }
                              {
                                Try
                                {
                                  {
                                    (257923 call(399527 call . this[257129] c"_writeOne") dynamic[230939] t[257877] origLocale[257181])
                                  }
                                }
                              }
                            }
                            {
                              if(258284 call _cond_test(258281 call == tmp[258211] QIO_CONV_ARG_TYPE_CHAR[235139]))
                              {
                                unknown tmp[257948] "temp"(257947 call _toChar(257945 call args[257126] i[258321]))
                                (257955 call _check_tuple_var_decl tmp[257948] 2)
                                unknown t[257936](257949 call tmp[257948] 0)
                                unknown ok[257938](257952 call tmp[257948] 1)
                                (257960 'end of statement')
                                if(257990 call _cond_test(257963 call ! ok[257938]))
                                {
                                  (257970 call = err[257187](257969 call qio_format_error_arg_mismatch i[258321]))
                                }
                                {
                                  Try
                                  {
                                    {
                                      (257986 call(399539 call . this[257129] c"_writeOne") dynamic[230939](257980 'new'(257984 call ioChar[238652] t[257936])) origLocale[257181])
                                    }
                                  }
                                }
                              }
                              {
                                if(258291 call _cond_test(258288 call == tmp[258211] QIO_CONV_ARG_TYPE_BINARY_STRING[235149]))
                                {
                                  unknown tmp[258011] "temp"(258010 call _toBytes(258008 call args[257126] i[258321]))
                                  (258018 call _check_tuple_var_decl tmp[258011] 2)
                                  unknown t[257999](258012 call tmp[258011] 0)
                                  unknown ok[258001](258015 call tmp[258011] 1)
                                  (258023 'end of statement')
                                  if(258049 call _cond_test(258026 call ! ok[258001]))
                                  {
                                    (258033 call = err[257187](258032 call qio_format_error_arg_mismatch i[258321]))
                                  }
                                  {
                                    Try
                                    {
                                      {
                                        (258045 call(399552 call . this[257129] c"_writeOne") dynamic[230939] t[257999] origLocale[257181])
                                      }
                                    }
                                  }
                                }
                                {
                                  if(258298 call _cond_test(258295 call == tmp[258211] QIO_CONV_ARG_TYPE_STRING[235144]))
                                  {
                                    unknown tmp[258070] "temp"(258069 call _toString(258067 call args[257126] i[258321]))
                                    (258077 call _check_tuple_var_decl tmp[258070] 2)
                                    unknown t[258058](258071 call tmp[258070] 0)
                                    unknown ok[258060](258074 call tmp[258070] 1)
                                    (258082 'end of statement')
                                    if(258108 call _cond_test(258085 call ! ok[258060]))
                                    {
                                      (258092 call = err[257187](258091 call qio_format_error_arg_mismatch i[258321]))
                                    }
                                    {
                                      Try
                                      {
                                        {
                                          (258104 call(399564 call . this[257129] c"_writeOne") dynamic[230939] t[258058] origLocale[257181])
                                        }
                                      }
                                    }
                                  }
                                  {
                                    if(258305 call _cond_test(258302 call == tmp[258211] QIO_CONV_ARG_TYPE_REGEXP[235159]))
                                    {
                                      (258121 call = err[257187](258120 call qio_format_error_write_regexp))
                                    }
                                    {
                                      if(258312 call _cond_test(258309 call == tmp[258211] QIO_CONV_ARG_TYPE_REPR[235154]))
                                      {
                                        Try
                                        {
                                          {
                                            (258140 call(399573 call . this[257129] c"_writeOne") dynamic[230939](258138 call args[257126] i[258321]) origLocale[257181])
                                          }
                                        }
                                      }
                                      {
                                        (258205 'throw'(258149 'new'(_chpl_manager = _owned[30](?))(258204 call IllegalArgumentError[388818](?)(258175 call +(258172 call + "args("(258170 call _cast string[26] i[258321])) ")")(258202 call + "writef internal error "(258200 call _cast string[26](258198 call argType[257270] i[258321]))))))
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          label _unused_continueLabel[258326]
          label _breakLabel[258325]
        }
        if(258405 call _cond_test(258359 call ! err[257187]))
        {
          if(258384 call _cond_test(258363 call < cur[257227] len[257239]))
          {
            unknown dummy[258366] c_int[20552]
            (258369 'end of statement')
            (258382 call(399589 call . this[257129] c"_format_reader") fmtStr[257119] cur[257227] len[257239] err[257187] conv[257244] gotConv[257249] style[257254] r[257277] 0)
          }
          if(258401 call _cond_test(258391 call < cur[257227] len[257239]))
          {
            (258397 call = err[257187](258396 call qio_format_error_too_few_args))
          }
        }
        (258415 call(258410 call . this[257129] c"_set_style") save_style[257221])
      }
      (258425 'on block' 0 tmp[258420])
    }
    if(258456 call _cond_test err[257187])
    {
      Try
      {
        {
          (258452 call(258430 call . this[257129] c"_ch_ioerror") err[257187] "in channel.writef(fmt:string)")
        }
      }
    }
    (258462 return 1)
  }
  where {
    (257143 call ||(257138 call isStringType t[257117])(257142 call isBytesType t[257117]))
  }
  { scopeless type
    bool[10]
  }
  function channel[237749](?).writef[258476](arg _mt[258481]:_MT[238], arg this[258478]:channel[237749](?) :
  channel[237749](?), arg fmtStr[258473] :
  unknown t[258471]) : _unknown[51] throws "method"
  {
    if(258502 call _cond_test(258495 call !(399610 call . this[258478] c"writing")))
    {
      (258500 call compilerError "writef on read-only channel")
    }
    unknown err[258510](399614 call ENOERR[223673]) syserr[223603]
    (258513 'end of statement')
    const tmp[258681] "const" "temp"
    (258683 'move' tmp[258681](258679 'deref'(258678 '_wide_get_locale'(258515 call . this[258478] c"home"))))
    {
      {
        Try
        {
          {
            (258523 call(258519 call . this[258478] c"lock"))
          }
        }
        Defer
        {
          {
            (258533 call(258529 call . this[258478] c"unlock"))
          }
        }
        unknown save_style[258544](258543 call(258539 call . this[258478] c"_style"))
        (258547 'end of statement')
        unknown cur[258550] 0 size_t[20657]
        (258553 'end of statement')
        unknown len[258562](258560 call _cast size_t[20657](258556 call . fmtStr[258473] c"size")) size_t[20657]
        (258565 'end of statement')
        unknown conv[258567] qio_conv_t[235075]
        (258570 'end of statement')
        unknown gotConv[258572] bool[10]
        (258575 'end of statement')
        unknown style[258577] iostyle[231863]
        (258580 'end of statement')
        unknown end[258582] size_t[20657]
        (258585 'end of statement')
        unknown dummy[258587] c_int[20552]
        (258590 'end of statement')
        unknown r[258594] unmanaged _channel_regexp_info?[415563]
        (258597 'end of statement')
        Defer
        {
          {
            if(258604 call _cond_test r[258594])
            {
              (258601 call chpl__delete r[258594])
            }
          }
        }
        (258623 call(399627 call . this[258478] c"_format_reader") fmtStr[258473] cur[258550] len[258562] err[258510] conv[258567] gotConv[258572] style[258577] r[258594] 0)
        if(258642 call _cond_test(258626 call ! err[258510]))
        {
          if(258637 call _cond_test gotConv[258572])
          {
            (258633 call = err[258510](258632 call qio_format_error_too_few_args))
          }
        }
        if(258666 call _cond_test(258647 call ! err[258510]))
        {
          if(258661 call _cond_test(258651 call < cur[258550] len[258562]))
          {
            (258657 call = err[258510](258656 call qio_format_error_too_few_args))
          }
        }
        (258676 call(258671 call . this[258478] c"_set_style") save_style[258544])
      }
      (258686 'on block' 0 tmp[258681])
    }
    if(258717 call _cond_test err[258510])
    {
      Try
      {
        {
          (258713 call(258691 call . this[258478] c"_ch_ioerror") err[258510] "in channel.writef(fmt:string, ...)")
        }
      }
    }
    (258723 return 1)
  }
  where {
    (258492 call ||(258487 call isStringType t[258471])(258491 call isBytesType t[258471]))
  }
  { scopeless type
    bool[10]
  }
  function channel[237749](?).readf[258737](arg _mt[258747]:_MT[238], arg this[258744]:channel[237749](?) :
  channel[237749](?), arg fmtStr[258734] :
  unknown t[258732], ref arg args[258741]:_any[178](?) ...) : _unknown[51] throws "method"
  {
    if(258782 call _cond_test(399652 call . this[258744] c"writing"))
    {
      (258780 call compilerError "readf on write-only channel")
    }
    const origLocale[258794] "const"(258793 call(258789 call . this[258744] c"getLocaleOfIoRequest"))
    (258797 'end of statement')
    unknown err[258800](399656 call ENOERR[223673]) syserr[223603]
    (258803 'end of statement')
    const tmp[260885] "const" "temp"
    (260887 'move' tmp[260885](260883 'deref'(260882 '_wide_get_locale'(258805 call . this[258744] c"home"))))
    {
      {
        Try
        {
          {
            (258813 call(258809 call . this[258744] c"lock"))
          }
        }
        Defer
        {
          {
            (258823 call(258819 call . this[258744] c"unlock"))
          }
        }
        unknown save_style[258834](258833 call(258829 call . this[258744] c"_style"))
        (258837 'end of statement')
        Defer
        {
          {
            (258844 call(258839 call . this[258744] c"_set_style") save_style[258834])
          }
        }
        unknown cur[258851] 0 size_t[20657]
        (258854 'end of statement')
        unknown len[258863](258861 call _cast size_t[20657](258857 call . fmtStr[258734] c"size")) size_t[20657]
        (258866 'end of statement')
        unknown conv[258868] qio_conv_t[235075]
        (258871 'end of statement')
        unknown gotConv[258873] bool[10]
        (258876 'end of statement')
        unknown style[258878] iostyle[231863]
        (258881 'end of statement')
        unknown end[258883] size_t[20657]
        (258886 'end of statement')
        unknown argType[258894](258892 call *(258889 call + k[258739] 5) c_int[20552])
        (258897 'end of statement')
        unknown r[258901] unmanaged _channel_regexp_info?[415563]
        (258904 'end of statement')
        Defer
        {
          {
            if(258911 call _cond_test r[258901])
            {
              (258908 call chpl__delete r[258901])
            }
          }
        }
        {
          unknown _indexOfInterest[258939] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[258940] "expr temp" "temp"
          (258949 'move' _iterator[258940](258947 call _getIterator(258960 call chpl_direct_range_iter 0(258954 call -(258956 call . argType[258894] c"size") 1) 1)))
          Defer
          {
            {
              (258976 call _freeIterator _iterator[258940])
            }
          }
          { scopeless type
            (258965 'move' _indexOfInterest[258939](258962 call iteratorIndex _iterator[258940]))
          }
          ForLoop[258941]
          {
            unknown i[258969] "index var" "insert auto destroy"
            (258971 'move' i[258969] _indexOfInterest[258939])
            {
              (258935 call =(258933 call argType[258894] i[258969]) QIO_CONV_UNK[235079])
            }
            label _continueLabel[258944]
            _indexOfInterest[258939]
            _iterator[258940]
          }
          label _breakLabel[258945]
        }
        (258989 call = err[258800](258988 call qio_channel_mark 0(399676 call . this[258744] c"_channel_internal")))
        if(260877 call _cond_test(258993 call ! err[258800]))
        {
          Try
          {
            {
              unknown j[258996] 0
              (258999 'end of statement')
              {
                unknown i[260734] 0
                unknown tmp[260735] "maybe param" "temp"
                (260747 'move' tmp[260735](260745 call chpl_compute_low_param_loop_bound 0(259004 call - k[258739] 1)))
                unknown tmp[260736] "maybe param" "temp"
                (260757 'move' tmp[260736](260755 call chpl_compute_high_param_loop_bound 0(260752 call - k[258739] 1)))
                unknown tmp[260737] "maybe param" "temp"
                (260760 'move' tmp[260737] 1)
                ParamForLoop[260762]
                { i[260734] tmp[260735] tmp[260736] tmp[260737]
                  {
                    if(259156 call _cond_test(259010 call <= j[258996] i[260734]))
                    {
                      (259023 call(399684 call . this[258744] c"_format_reader") fmtStr[258734] cur[258851] len[258863] err[258800] conv[258868] gotConv[258873] style[258878] r[258901] 1)
                      if(259152 call _cond_test(259028 call != r[258901] nil[44]))
                      {
                        const rnn[259033] "const"(259031 call postfix! r[258901])
                        (259036 'end of statement')
                        if(259148 call _cond_test(259039 call . rnn[259033] c"hasRegexp"))
                        {
                          if(259063 call _cond_test(259053 call >(259050 call -(259047 call + i[260734](259044 call . rnn[259033] c"ncaptures")) 1) k[258739]))
                          {
                            (259059 call = err[258800](259058 call qio_format_error_too_few_args))
                          }
                          {
                            unknown _indexOfInterest[259105] "an _indexOfInterest or chpl__followIdx variable" "temp"
                            unknown _iterator[259106] "expr temp" "temp"
                            (259115 'move' _iterator[259106](259113 call _getIterator(259125 call chpl_direct_counted_range_iter 0(259121 call . rnn[259033] c"ncaptures"))))
                            Defer
                            {
                              {
                                (259141 call _freeIterator _iterator[259106])
                              }
                            }
                            { scopeless type
                              (259130 'move' _indexOfInterest[259105](259127 call iteratorIndex _iterator[259106]))
                            }
                            ForLoop[259107]
                            {
                              unknown z[259134] "index var" "insert auto destroy"
                              (259136 'move' z[259134] _indexOfInterest[259105])
                              {
                                if(259100 call _cond_test(259086 call <=(259080 call + i[260734] z[259134])(259083 call . argType[258894] c"size")))
                                {
                                  (259096 call =(259094 call argType[258894](259091 call + i[260734] z[259134])) QIO_CONV_SET_CAPTURE[235224])
                                }
                              }
                              label _continueLabel[259110]
                              _indexOfInterest[259105]
                              _iterator[259106]
                            }
                            label _breakLabel[259111]
                          }
                        }
                      }
                    }
                    (259168 call(399707 call . this[258744] c"_conv_helper") err[258800] conv[258868] gotConv[258873] j[258996] argType[258894])
                    unknown domore[259185](259184 call(399716 call . this[258744] c"_conv_sethandler") err[258800](259176 call argType[258894] i[260734]) style[258878] i[260734](259182 call args[258741] i[260734]) 0)
                    (259188 'end of statement')
                    if(260730 call _cond_test domore[259185])
                    {
                      (259196 call(259191 call . this[258744] c"_set_style") style[258878])
                      {
                        unknown tmp[260617] "expr temp" "maybe param" "maybe type" "temp"
                        (260619 'move' tmp[260617](259202 call argType[258894] i[260734]))
                        if(260629 call _cond_test(260627 call ||(260621 call == tmp[260617] QIO_CONV_ARG_TYPE_SIGNED[235089])(260624 call == tmp[260617] QIO_CONV_ARG_TYPE_BINARY_SIGNED[235094])))
                        {
                          unknown tmp[259219] "temp"(259218 call _toSigned(259216 call args[258741] i[260734]))
                          (259226 call _check_tuple_var_decl tmp[259219] 2)
                          unknown t[259207](259220 call tmp[259219] 0)
                          unknown ok[259209](259223 call tmp[259219] 1)
                          (259231 'end of statement')
                          if(259310 call _cond_test(259234 call ! ok[259209]))
                          {
                            (259241 call = err[258800](259240 call qio_format_error_arg_mismatch i[260734]))
                          }
                          {
                            unknown ti[259246] int(64)[13]
                            (259249 'end of statement')
                            if(259283 call _cond_test(259256 call ==(259254 call argType[258894] i[260734]) QIO_CONV_ARG_TYPE_BINARY_SIGNED[235094]))
                            {
                              (259268 call = err[258800](259267 call(399744 call . this[258744] c"_read_signed")(259261 call . style[258878] c"max_width_bytes") ti[259246] i[260734]))
                            }
                            {
                              Try
                              {
                                {
                                  (259279 call(399750 call . this[258744] c"_readOne") dynamic[230939] ti[259246] origLocale[258794])
                                }
                              }
                            }
                            if(259305 call _cond_test(259290 call ! err[258800]))
                            {
                              (259302 call = err[258800](259301 call _setIfPrimitive(259297 call args[258741] i[260734]) ti[259246] i[260734]))
                            }
                          }
                        }
                        {
                          if(260640 call _cond_test(260638 call ||(260632 call == tmp[260617] QIO_CONV_ARG_TYPE_UNSIGNED[235099])(260635 call == tmp[260617] QIO_CONV_ARG_TYPE_BINARY_UNSIGNED[235104])))
                          {
                            unknown tmp[259331] "temp"(259330 call _toUnsigned(259328 call args[258741] i[260734]))
                            (259338 call _check_tuple_var_decl tmp[259331] 2)
                            unknown t[259319](259332 call tmp[259331] 0)
                            unknown ok[259321](259335 call tmp[259331] 1)
                            (259343 'end of statement')
                            if(259422 call _cond_test(259346 call ! ok[259321]))
                            {
                              (259353 call = err[258800](259352 call qio_format_error_arg_mismatch i[260734]))
                            }
                            {
                              unknown ti[259358] uint(64)[115]
                              (259361 'end of statement')
                              if(259395 call _cond_test(259368 call ==(259366 call argType[258894] i[260734]) QIO_CONV_ARG_TYPE_BINARY_UNSIGNED[235104]))
                              {
                                (259380 call = err[258800](259379 call(399775 call . this[258744] c"_read_unsigned")(259373 call . style[258878] c"max_width_bytes") ti[259358] i[260734]))
                              }
                              {
                                Try
                                {
                                  {
                                    (259391 call(399781 call . this[258744] c"_readOne") dynamic[230939] ti[259358] origLocale[258794])
                                  }
                                }
                              }
                              if(259417 call _cond_test(259402 call ! err[258800]))
                              {
                                (259414 call = err[258800](259413 call _setIfPrimitive(259409 call args[258741] i[260734]) ti[259358] i[260734]))
                              }
                            }
                          }
                          {
                            if(260652 call _cond_test(260650 call ||(260644 call == tmp[260617] QIO_CONV_ARG_TYPE_REAL[235109])(260647 call == tmp[260617] QIO_CONV_ARG_TYPE_BINARY_REAL[235114])))
                            {
                              unknown tmp[259443] "temp"(259442 call _toReal(259440 call args[258741] i[260734]))
                              (259450 call _check_tuple_var_decl tmp[259443] 2)
                              unknown t[259431](259444 call tmp[259443] 0)
                              unknown ok[259433](259447 call tmp[259443] 1)
                              (259455 'end of statement')
                              if(259534 call _cond_test(259458 call ! ok[259433]))
                              {
                                (259465 call = err[258800](259464 call qio_format_error_arg_mismatch i[260734]))
                              }
                              {
                                unknown ti[259470] real(64)[16]
                                (259473 'end of statement')
                                if(259507 call _cond_test(259480 call ==(259478 call argType[258894] i[260734]) QIO_CONV_ARG_TYPE_BINARY_REAL[235114]))
                                {
                                  (259492 call = err[258800](259491 call(399806 call . this[258744] c"_read_real")(259485 call . style[258878] c"max_width_bytes") ti[259470] i[260734]))
                                }
                                {
                                  Try
                                  {
                                    {
                                      (259503 call(399812 call . this[258744] c"_readOne") dynamic[230939] ti[259470] origLocale[258794])
                                    }
                                  }
                                }
                                if(259529 call _cond_test(259514 call ! err[258800]))
                                {
                                  (259526 call = err[258800](259525 call _setIfPrimitive(259521 call args[258741] i[260734]) ti[259470] i[260734]))
                                }
                              }
                            }
                            {
                              if(260664 call _cond_test(260662 call ||(260656 call == tmp[260617] QIO_CONV_ARG_TYPE_IMAG[235119])(260659 call == tmp[260617] QIO_CONV_ARG_TYPE_BINARY_IMAG[235124])))
                              {
                                unknown tmp[259555] "temp"(259554 call _toImag(259552 call args[258741] i[260734]))
                                (259562 call _check_tuple_var_decl tmp[259555] 2)
                                unknown t[259543](259556 call tmp[259555] 0)
                                unknown ok[259545](259559 call tmp[259555] 1)
                                (259567 'end of statement')
                                if(259659 call _cond_test(259570 call ! ok[259545]))
                                {
                                  (259577 call = err[258800](259576 call qio_format_error_arg_mismatch i[260734]))
                                }
                                {
                                  unknown ti[259582] imag(64)[130]
                                  (259585 'end of statement')
                                  if(259633 call _cond_test(259592 call ==(259590 call argType[258894] i[260734]) QIO_CONV_ARG_TYPE_BINARY_IMAG[235124]))
                                  {
                                    unknown tr[259595] real(64)[16]
                                    (259598 'end of statement')
                                    (259610 call = err[258800](259609 call(399835 call . this[258744] c"_read_real")(259603 call . style[258878] c"max_width_bytes") tr[259595] i[260734]))
                                    (259618 call = ti[259582](259616 call _cast imag(64)[130] tr[259595]))
                                  }
                                  {
                                    Try
                                    {
                                      {
                                        (259629 call(399843 call . this[258744] c"_readOne") dynamic[230939] ti[259582] origLocale[258794])
                                      }
                                    }
                                  }
                                  if(259654 call _cond_test(259639 call ! err[258800]))
                                  {
                                    (259651 call = err[258800](259650 call _setIfPrimitive(259646 call args[258741] i[260734]) ti[259582] i[260734]))
                                  }
                                }
                              }
                              {
                                if(260676 call _cond_test(260674 call ||(260668 call == tmp[260617] QIO_CONV_ARG_TYPE_COMPLEX[235129])(260671 call == tmp[260617] QIO_CONV_ARG_TYPE_BINARY_COMPLEX[235134])))
                                {
                                  unknown tmp[259680] "temp"(259679 call _toComplex(259677 call args[258741] i[260734]))
                                  (259687 call _check_tuple_var_decl tmp[259680] 2)
                                  unknown t[259668](259681 call tmp[259680] 0)
                                  unknown ok[259670](259684 call tmp[259680] 1)
                                  (259692 'end of statement')
                                  if(259771 call _cond_test(259695 call ! ok[259670]))
                                  {
                                    (259702 call = err[258800](259701 call qio_format_error_arg_mismatch i[260734]))
                                  }
                                  {
                                    unknown ti[259707] complex(128)[140]
                                    (259710 'end of statement')
                                    if(259744 call _cond_test(259717 call ==(259715 call argType[258894] i[260734]) QIO_CONV_ARG_TYPE_BINARY_COMPLEX[235134]))
                                    {
                                      (259729 call = err[258800](259728 call(399868 call . this[258744] c"_read_complex")(259722 call . style[258878] c"max_width_bytes") ti[259707] i[260734]))
                                    }
                                    {
                                      Try
                                      {
                                        {
                                          (259740 call(399874 call . this[258744] c"_readOne") dynamic[230939] ti[259707] origLocale[258794])
                                        }
                                      }
                                    }
                                    if(259766 call _cond_test(259751 call ! err[258800]))
                                    {
                                      (259763 call = err[258800](259762 call _setIfPrimitive(259758 call args[258741] i[260734]) ti[259707] i[260734]))
                                    }
                                  }
                                }
                                {
                                  if(260683 call _cond_test(260680 call == tmp[260617] QIO_CONV_ARG_TYPE_NUMERIC[235084]))
                                  {
                                    unknown tmp[259791] "temp"(259790 call _toNumeric(259788 call args[258741] i[260734]))
                                    (259798 call _check_tuple_var_decl tmp[259791] 2)
                                    unknown t[259779](259792 call tmp[259791] 0)
                                    unknown ok[259781](259795 call tmp[259791] 1)
                                    (259803 'end of statement')
                                    if(259856 call _cond_test(259806 call ! ok[259781]))
                                    {
                                      (259813 call = err[258800](259812 call qio_format_error_arg_mismatch i[260734]))
                                    }
                                    {
                                      unknown ti[259818] t[259779]
                                      (259821 'end of statement')
                                      Try
                                      {
                                        {
                                          (259831 call(399893 call . this[258744] c"_readOne") dynamic[230939] ti[259818] origLocale[258794])
                                        }
                                      }
                                      if(259851 call _cond_test(259836 call ! err[258800]))
                                      {
                                        (259848 call = err[258800](259847 call _setIfPrimitive(259843 call args[258741] i[260734]) ti[259818] i[260734]))
                                      }
                                    }
                                  }
                                  {
                                    if(260690 call _cond_test(260687 call == tmp[260617] QIO_CONV_ARG_TYPE_CHAR[235139]))
                                    {
                                      unknown tmp[259876] "temp"(259875 call _toChar(259873 call args[258741] i[260734]))
                                      (259883 call _check_tuple_var_decl tmp[259876] 2)
                                      unknown t[259864](259877 call tmp[259876] 0)
                                      unknown ok[259866](259880 call tmp[259876] 1)
                                      (259888 'end of statement')
                                      unknown chr[259895](259890 'new'(259894 call ioChar[238652] t[259864]))
                                      (259898 'end of statement')
                                      if(259923 call _cond_test(259900 call ! ok[259866]))
                                      {
                                        (259907 call = err[258800](259906 call qio_format_error_arg_mismatch i[260734]))
                                      }
                                      {
                                        Try
                                        {
                                          {
                                            (259919 call(399913 call . this[258744] c"_readOne") dynamic[230939] chr[259895] origLocale[258794])
                                          }
                                        }
                                      }
                                      if(259943 call _cond_test(259929 call ! err[258800]))
                                      {
                                        (259941 call _setIfChar(259935 call args[258741] i[260734])(259938 call . chr[259895] c"ch"))
                                      }
                                    }
                                    {
                                      if(260697 call _cond_test(260694 call == tmp[260617] QIO_CONV_ARG_TYPE_BINARY_STRING[235149]))
                                      {
                                        unknown tmp[259964] "temp"(259963 call _toBytes(259961 call args[258741] i[260734]))
                                        (259971 call _check_tuple_var_decl tmp[259964] 2)
                                        unknown t[259952](259965 call tmp[259964] 0)
                                        unknown ok[259954](259968 call tmp[259964] 1)
                                        (259976 'end of statement')
                                        if(260002 call _cond_test(259979 call ! ok[259954]))
                                        {
                                          (259986 call = err[258800](259985 call qio_format_error_arg_mismatch i[260734]))
                                        }
                                        {
                                          Try
                                          {
                                            {
                                              (259998 call(399928 call . this[258744] c"_readOne") dynamic[230939] t[259952] origLocale[258794])
                                            }
                                          }
                                        }
                                        if(260023 call _cond_test(260008 call ! err[258800]))
                                        {
                                          (260020 call = err[258800](260019 call _setIfPrimitive(260015 call args[258741] i[260734]) t[259952] i[260734]))
                                        }
                                      }
                                      {
                                        if(260704 call _cond_test(260701 call == tmp[260617] QIO_CONV_ARG_TYPE_STRING[235144]))
                                        {
                                          unknown tmp[260044] "temp"(260043 call _toString(260041 call args[258741] i[260734]))
                                          (260051 call _check_tuple_var_decl tmp[260044] 2)
                                          unknown t[260032](260045 call tmp[260044] 0)
                                          unknown ok[260034](260048 call tmp[260044] 1)
                                          (260056 'end of statement')
                                          if(260082 call _cond_test(260059 call ! ok[260034]))
                                          {
                                            (260066 call = err[258800](260065 call qio_format_error_arg_mismatch i[260734]))
                                          }
                                          {
                                            Try
                                            {
                                              {
                                                (260078 call(399946 call . this[258744] c"_readOne") dynamic[230939] t[260032] origLocale[258794])
                                              }
                                            }
                                          }
                                          if(260103 call _cond_test(260088 call ! err[258800]))
                                          {
                                            (260100 call = err[258800](260099 call _setIfPrimitive(260095 call args[258741] i[260734]) t[260032] i[260734]))
                                          }
                                        }
                                        {
                                          if(260711 call _cond_test(260708 call == tmp[260617] QIO_CONV_ARG_TYPE_REGEXP[235159]))
                                          {
                                            unknown tmp[260124] "temp"(260123 call _toRegexp(260121 call args[258741] i[260734]))
                                            (260131 call _check_tuple_var_decl tmp[260124] 2)
                                            unknown t[260112](260125 call tmp[260124] 0)
                                            unknown ok[260114](260128 call tmp[260124] 1)
                                            (260136 'end of statement')
                                            if(260330 call _cond_test(260139 call ! ok[260114]))
                                            {
                                              (260146 call = err[258800](260145 call qio_format_error_arg_mismatch i[260734]))
                                            }
                                            {
                                              if(260164 call _cond_test(260152 call == r[258901] nil[44]))
                                              {
                                                (260161 call = r[258901](260157 'new'(_chpl_manager = unmanaged[220](?))(260160 call _channel_regexp_info[398698](?))))
                                              }
                                              const rnn[260173] "const"(260171 call postfix! r[258901])
                                              (260176 'end of statement')
                                              (260182 call(260178 call . rnn[260173] c"clear"))
                                              (260194 call =(260185 call . rnn[260173] c"theRegexp")(260191 call . t[260112] c"_regexp"))
                                              (260202 call =(260198 call . rnn[260173] c"hasRegexp") 1)
                                              (260210 call =(260206 call . rnn[260173] c"releaseRegexp") 0)
                                              (260220 call(399968 call . this[258744] c"_match_regexp_if_needed") cur[258851] len[258863] err[258800] style[258878] rnn[260173])
                                              if(260243 call _cond_test(260233 call >(260230 call -(260227 call + i[260734](260224 call . rnn[260173] c"ncaptures")) 1) k[258739]))
                                              {
                                                (260239 call = err[258800](260238 call qio_format_error_too_few_args))
                                              }
                                              {
                                                unknown _indexOfInterest[260287] "an _indexOfInterest or chpl__followIdx variable" "temp"
                                                unknown _iterator[260288] "expr temp" "temp"
                                                (260297 'move' _iterator[260288](260295 call _getIterator(260307 call chpl_direct_counted_range_iter 0(260303 call . rnn[260173] c"ncaptures"))))
                                                Defer
                                                {
                                                  {
                                                    (260323 call _freeIterator _iterator[260288])
                                                  }
                                                }
                                                { scopeless type
                                                  (260312 'move' _indexOfInterest[260287](260309 call iteratorIndex _iterator[260288]))
                                                }
                                                ForLoop[260289]
                                                {
                                                  unknown z[260316] "index var" "insert auto destroy"
                                                  (260318 'move' z[260316] _indexOfInterest[260287])
                                                  {
                                                    if(260282 call _cond_test(260265 call <=(260259 call + i[260734] z[260316])(260262 call . argType[258894] c"size")))
                                                    {
                                                      (260278 call =(260276 call argType[258894](260273 call +(260270 call + i[260734] z[260316]) 1)) QIO_CONV_SET_CAPTURE[235224])
                                                    }
                                                  }
                                                  label _continueLabel[260292]
                                                  _indexOfInterest[260287]
                                                  _iterator[260288]
                                                }
                                                label _breakLabel[260293]
                                              }
                                            }
                                          }
                                          {
                                            if(260718 call _cond_test(260715 call == tmp[260617] QIO_CONV_ARG_TYPE_REPR[235154]))
                                            {
                                              Try
                                              {
                                                {
                                                  (260349 call(399987 call . this[258744] c"_readOne") dynamic[230939](260347 call args[258741] i[260734]) origLocale[258794])
                                                }
                                              }
                                            }
                                            {
                                              if(260725 call _cond_test(260722 call == tmp[260617] QIO_CONV_SET_CAPTURE[235224]))
                                              {
                                                if(260562 call _cond_test(260360 call == r[258901] nil[44]))
                                                {
                                                  (260366 call = err[258800](260365 call qio_format_error_bad_regexp))
                                                }
                                                {
                                                  const rnn[260373] "const"(260371 call postfix! r[258901])
                                                  (260376 'end of statement')
                                                  (260385 call(399998 call . this[258744] c"_match_regexp_if_needed") cur[258851] len[258863] err[258800] style[258878] rnn[260373])
                                                  if(260558 call _cond_test(260397 call >=(260390 call . rnn[260373] c"capturei")(260394 call . rnn[260373] c"ncaptures")))
                                                  {
                                                    (260403 call = err[258800](260402 call qio_format_error_bad_regexp))
                                                  }
                                                  {
                                                    if(260545 call _cond_test(260414 call _isIoPrimitiveType(260412 'typeof'(260411 call args[258741] i[260734]))))
                                                    {
                                                      Try
                                                      {
                                                        {
                                                          if(260512 call _cond_test(260421 call ==(260419 'typeof'(260418 call args[258741] i[260734])) string[26]))
                                                          {
                                                            (260442 call =(260426 call args[258741] i[260734])(260441 call(260437 call .(260436 call(260428 call . rnn[260373] c"capArr")(260432 call . rnn[260373] c"capturei")) c"decode")))
                                                          }
                                                          {
                                                            if(260506 call _cond_test(260452 call isEnumType(260450 'typeof'(260449 call args[258741] i[260734]))))
                                                            {
                                                              (260479 call =(260456 call args[258741] i[260734])(260477 call _cast(260476 'typeof'(260475 call args[258741] i[260734]))(260471 call(260467 call .(260466 call(260458 call . rnn[260373] c"capArr")(260462 call . rnn[260373] c"capturei")) c"decode"))))
                                                            }
                                                            {
                                                              (260503 call =(260485 call args[258741] i[260734])(260501 call _cast(260500 'typeof'(260499 call args[258741] i[260734]))(260495 call(260487 call . rnn[260373] c"capArr")(260491 call . rnn[260373] c"capturei"))))
                                                            }
                                                          }
                                                        }
                                                      }
                                                      Catch e : DecodeError
                                                      {
                                                        unknown tmp[354696] "temp"(354700 'dynamic_cast' unmanaged DecodeError?[415638](354699 'current error'))
                                                        if(354703 '!=' tmp[354696] nil[44])
                                                        {
                                                          unknown e[354709](354714 'new'(354712 call _owned[30](?)(354710 'to non nilable class' tmp[354696])))
                                                          {
                                                            (260528 call = err[258800](260527 call qio_format_error_arg_mismatch i[260734]))
                                                          }
                                                        }
                                                        {
                                                        }
                                                      }
                                                      Catch
                                                      {
                                                        unknown tmp[354717] "temp"(354720 'current error')
                                                        unknown chpl_anon_error[354723](354728 'new'(354726 call _owned[30](?)(354724 'to non nilable class' tmp[354717])))
                                                        {
                                                          (260537 call = err[258800](260536 call qio_format_error_bad_regexp))
                                                        }
                                                      }
                                                    }
                                                    (260555 call +=(260551 call . rnn[260373] c"capturei") 1)
                                                  }
                                                }
                                              }
                                              {
                                                (260611 'throw'(260571 'new'(_chpl_manager = _owned[30](?))(260610 call IllegalArgumentError[388818](?)(260581 call +(260578 call + "args("(260576 call _cast string[26] i[260734])) ")")(260608 call + "readf internal error "(260606 call _cast string[26](260604 call argType[258894] i[260734]))))))
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                label _unused_continueLabel[260739]
                label _breakLabel[260738]
              }
              if(260802 call _cond_test(260772 call ! err[258800]))
              {
                if(260797 call _cond_test(260776 call < cur[258851] len[258863]))
                {
                  unknown dummy[260779] c_int[20552]
                  (260782 'end of statement')
                  (260795 call(400037 call . this[258744] c"_format_reader") fmtStr[258734] cur[258851] len[258863] err[258800] conv[258868] gotConv[258873] style[258878] r[258901] 1)
                }
              }
              if(260826 call _cond_test(260807 call ! err[258800]))
              {
                if(260821 call _cond_test(260811 call < cur[258851] len[258863]))
                {
                  (260817 call = err[258800](260816 call qio_format_error_too_few_args))
                }
              }
              if(260845 call _cond_test(260831 call ! err[258800]))
              {
                (260836 call qio_channel_commit_unlocked(400055 call . this[258744] c"_channel_internal"))
              }
              {
                (260842 call qio_channel_revert_unlocked(400060 call . this[258744] c"_channel_internal"))
              }
            }
          }
          Catch thrownError : SystemError
          {
            unknown tmp[354731] "temp"(354735 'dynamic_cast' unmanaged SystemError?[415650](354734 'current error'))
            if(354738 '!=' tmp[354731] nil[44])
            {
              unknown thrownError[354744](354749 'new'(354747 call _owned[30](?)(354745 'to non nilable class' tmp[354731])))
              {
                if(260863 call _cond_test(260858 call !=(260854 call . thrownError[354744] c"err")(400064 call EEOF[224243])))
                {
                  (260861 'throw' thrownError[354744])
                }
                (260871 call = err[258800](400068 call EEOF[224243]))
              }
            }
            {
            }
          }
        }
      }
      (260890 'on block' 0 tmp[260885])
    }
    if(260940 call _cond_test(260894 call ! err[258800]))
    {
      (260897 return 1)
    }
    {
      if(260936 call _cond_test(260902 call == err[258800](400072 call EEOF[224243])))
      {
        (260905 return 0)
      }
      {
        Try
        {
          {
            (260931 call(260909 call . this[258744] c"_ch_ioerror") err[258800] "in channel.readf(fmt:string, ...)")
          }
        }
      }
    }
    (260946 return 0)
  }
  where {
    (258758 call ||(258753 call isStringType t[258732])(258757 call isBytesType t[258732]))
  }
  { scopeless type
    bool[10]
  }
  function channel[237749](?).readf[260960](arg _mt[260965]:_MT[238], arg this[260962]:channel[237749](?) :
  channel[237749](?), arg fmtStr[260957] :
  unknown t[260955]) : _unknown[51] throws "method" "no doc"
  {
    if(260983 call _cond_test(400079 call . this[260962] c"writing"))
    {
      (260981 call compilerError "readf on write-only channel")
    }
    unknown err[260991](400083 call ENOERR[223673]) syserr[223603]
    (260994 'end of statement')
    const tmp[261193] "const" "temp"
    (261195 'move' tmp[261193](261191 'deref'(261190 '_wide_get_locale'(260996 call . this[260962] c"home"))))
    {
      {
        Try
        {
          {
            (261004 call(261000 call . this[260962] c"lock"))
          }
        }
        Defer
        {
          {
            (261014 call(261010 call . this[260962] c"unlock"))
          }
        }
        unknown save_style[261025](261024 call(261020 call . this[260962] c"_style"))
        (261028 'end of statement')
        Defer
        {
          {
            (261035 call(261030 call . this[260962] c"_set_style") save_style[261025])
          }
        }
        unknown cur[261042] 0 size_t[20657]
        (261045 'end of statement')
        unknown len[261054](261052 call _cast size_t[20657](261048 call . fmtStr[260957] c"size")) size_t[20657]
        (261057 'end of statement')
        unknown conv[261059] qio_conv_t[235075]
        (261062 'end of statement')
        unknown gotConv[261064] bool[10]
        (261067 'end of statement')
        unknown style[261069] iostyle[231863]
        (261072 'end of statement')
        unknown end[261074] size_t[20657]
        (261077 'end of statement')
        unknown dummy[261079] c_int[20552]
        (261082 'end of statement')
        unknown r[261086] unmanaged _channel_regexp_info?[415563]
        (261089 'end of statement')
        Defer
        {
          {
            if(261096 call _cond_test r[261086])
            {
              (261093 call chpl__delete r[261086])
            }
          }
        }
        (261110 call = err[260991](261109 call qio_channel_mark 0(400099 call . this[260962] c"_channel_internal")))
        if(261143 call _cond_test(261114 call ! err[260991]))
        {
          (261127 call(400104 call . this[260962] c"_format_reader") fmtStr[260957] cur[261042] len[261054] err[260991] conv[261059] gotConv[261064] style[261069] r[261086] 1)
          if(261139 call _cond_test gotConv[261064])
          {
            (261135 call = err[260991](261134 call qio_format_error_too_few_args))
          }
        }
        if(261167 call _cond_test(261148 call ! err[260991]))
        {
          if(261162 call _cond_test(261152 call < cur[261042] len[261054]))
          {
            (261158 call = err[260991](261157 call qio_format_error_too_few_args))
          }
        }
        if(261186 call _cond_test(261172 call ! err[260991]))
        {
          (261177 call qio_channel_commit_unlocked(400124 call . this[260962] c"_channel_internal"))
        }
        {
          (261183 call qio_channel_revert_unlocked(400129 call . this[260962] c"_channel_internal"))
        }
      }
      (261198 'on block' 0 tmp[261193])
    }
    if(261251 call _cond_test(261202 call ! err[260991]))
    {
      (261205 return 1)
    }
    {
      if(261247 call _cond_test(261210 call == err[260991](400134 call EEOF[224243])))
      {
        (261213 return 0)
      }
      {
        Try
        {
          {
            (261239 call(261217 call . this[260962] c"_ch_ioerror") err[260991] "in channel.readf(fmt:string)")
          }
        }
        (261245 return 0)
      }
    }
  }
  where {
    (260975 call ||(260970 call isStringType t[260955])(260974 call isBytesType t[260955]))
  }
  function readf[261265](arg fmt[261262] :
  string[26], ref arg args[261269]:_any[178](?) ...) : _unknown[51] throws
  {
    (261285 return(261284 'try-expr'(261283 call(261276 call . stdin[250227] c"readf") fmt[261262](261282 'expand_tuple' args[261269]))))
  }
  { scopeless type
    bool[10]
  }
  function readf[261297](arg fmt[261294] :
  string[26]) : _unknown[51] throws "no doc"
  {
    (261308 return(261307 'try-expr'(261306 call(261301 call . stdin[250227] c"readf") fmt[261294])))
  }
  { scopeless type
    bool[10]
  }
  function channel[237749](?).skipField[261317](arg _mt[261322]:_MT[238], arg this[261319]:channel[237749](?) :
  channel[237749](?)) : _unknown[51] throws "method" "no return value for void"
  {
    unknown err[261326](400141 call ENOERR[223673]) syserr[223603]
    (261329 'end of statement')
    const tmp[261393] "const" "temp"
    (261395 'move' tmp[261393](261391 'deref'(261390 '_wide_get_locale'(261332 call . this[261319] c"home"))))
    {
      {
        Try
        {
          {
            (261340 call(261336 call . this[261319] c"lock"))
          }
        }
        Defer
        {
          {
            (261350 call(261346 call . this[261319] c"unlock"))
          }
        }
        unknown st[261362](261361 call(261356 call . this[261319] c"styleElement") QIO_STYLE_ELEMENT_AGGREGATE[19670])
        (261365 'end of statement')
        if(261386 call _cond_test(261368 call == st[261362] QIO_AGGREGATE_FORMAT_JSON[19720]))
        {
          (261376 call = err[261326](261375 call qio_channel_skip_json_field 0(400149 call . this[261319] c"_channel_internal")))
        }
        {
          (261382 call = err[261326] ENOTSUP[224733])
        }
      }
      (261398 'on block' 0 tmp[261393])
    }
    if(261429 call _cond_test err[261326])
    {
      Try
      {
        {
          (261425 call(261403 call . this[261319] c"_ch_ioerror") err[261326] "in skipField")
        }
      }
    }
  }
  function string[26].format[261444](arg _mt[261449]:_MT[238], arg this[261446]:string[26] :
  string[26], arg args[261441]:_any[178](?) ...) : _unknown[51] throws "method"
  {
    Try
    {
      {
        (261458 return(261457 call chpl_do_format this[261446](261456 'expand_tuple' args[261441])))
      }
    }
    Catch e : IllegalArgumentError
    {
      unknown tmp[354752] "temp"(354756 'dynamic_cast' unmanaged IllegalArgumentError?[415656](354755 'current error'))
      if(354759 '!=' tmp[354752] nil[44])
      {
        unknown e[354765](354770 'new'(354768 call _owned[30](?)(354766 'to non nilable class' tmp[354752])))
        {
          (261466 'throw' e[354765])
        }
      }
      {
      }
    }
    Catch e : SystemError
    {
      unknown tmp[354773] "temp"(354777 'dynamic_cast' unmanaged SystemError?[415650](354776 'current error'))
      if(354780 '!=' tmp[354773] nil[44])
      {
        unknown e[354786](354791 'new'(354789 call _owned[30](?)(354787 'to non nilable class' tmp[354773])))
        {
          Try
          {
            {
              (261496 call ioerror(261475 call . e[354786] c"err") "in string.format")
            }
          }
        }
      }
      {
      }
    }
    Catch e : DecodeError
    {
      unknown tmp[354794] "temp"(354798 'dynamic_cast' unmanaged DecodeError?[415638](354797 'current error'))
      if(354801 '!=' tmp[354794] nil[44])
      {
        unknown e[354807](354812 'new'(354810 call _owned[30](?)(354808 'to non nilable class' tmp[354794])))
        {
          Try
          {
            {
              (261512 call ioerror(261508 call _cast syserr[223603] EILSEQ[224463]) "in string.format")
            }
          }
        }
      }
      {
      }
    }
    Catch
    {
      unknown tmp[354815] "temp"(354818 'current error')
      unknown chpl_anon_error[354821](354826 'new'(354824 call _owned[30](?)(354822 'to non nilable class' tmp[354815])))
      {
        Try
        {
          {
            (261525 call ioerror(261521 call _cast syserr[223603] EINVAL[224478]) "in string.format")
          }
        }
      }
    }
    (261551 return "")
  }
  { scopeless type
    string[26]
  }
  function bytes[24].format[261564](arg _mt[261569]:_MT[238], arg this[261566]:bytes[24] :
  bytes[24], arg args[261561]:_any[178](?) ...) : _unknown[51] throws "method"
  {
    Try
    {
      {
        (261578 return(261577 call chpl_do_format this[261566](261576 'expand_tuple' args[261561])))
      }
    }
    Catch e : SystemError
    {
      unknown tmp[354829] "temp"(354833 'dynamic_cast' unmanaged SystemError?[415650](354832 'current error'))
      if(354836 '!=' tmp[354829] nil[44])
      {
        unknown e[354842](354847 'new'(354845 call _owned[30](?)(354843 'to non nilable class' tmp[354829])))
        {
          Try
          {
            {
              (261608 call ioerror(261587 call . e[354842] c"err") "in bytes.format")
            }
          }
        }
      }
      {
      }
    }
    Catch
    {
      unknown tmp[354850] "temp"(354853 'current error')
      unknown chpl_anon_error[354856](354861 'new'(354859 call _owned[30](?)(354857 'to non nilable class' tmp[354850])))
      {
        Try
        {
          {
            (261621 call ioerror(261617 call _cast syserr[223603] EINVAL[224478]) "in bytes.format")
          }
        }
      }
    }
    (261646 return b"")
  }
  { scopeless type
    bytes[24]
  }
  function chpl_do_format[261658](arg fmt[261655] :
  unknown t[261653], arg args[261662]:_any[178](?) ...) : _unknown[51] throws "inline" "private"
  {
    unknown f[261680](261679 'try-expr'(261678 call openmem))
    (261683 'end of statement')
    Defer
    {
      {
        Try
        {
          {
            (261690 call(261686 call . f[261680] c"close"))
          }
        }
        Catch
        {
          unknown tmp[354864] "temp"(354867 'current error')
          unknown chpl_anon_error[354870](354875 'new'(354873 call _owned[30](?)(354871 'to non nilable class' tmp[354864])))
          {
          }
        }
      }
    }
    unknown offset[261703] 0 int(64)[13]
    (261706 'end of statement')
    {
      unknown w[261716](261715 'try-expr'(261714 call(261708 call . f[261680] c"writer")(locking = 0)))
      (261719 'end of statement')
      Defer
      {
        {
          Try
          {
            {
              (261726 call(261722 call . w[261716] c"close"))
            }
          }
          Catch
          {
            unknown tmp[354878] "temp"(354881 'current error')
            unknown chpl_anon_error[354884](354889 'new'(354887 call _owned[30](?)(354885 'to non nilable class' tmp[354878])))
            {
            }
          }
        }
      }
      Try
      {
        {
          (261745 call(261738 call . w[261716] c"writef") fmt[261655](261744 'expand_tuple' args[261662]))
        }
      }
      (261756 call = offset[261703](261755 call(261751 call . w[261716] c"offset")))
      Try
      {
        {
          (261764 call(261760 call . w[261716] c"close"))
        }
      }
    }
    unknown buf[261779](261778 call c_malloc(261772 call uint(64)[115] 8)(261776 call + offset[261703] 1))
    (261782 'end of statement')
    unknown r[261792](261791 'try-expr'(261790 call(261784 call . f[261680] c"reader")(locking = 0)))
    (261795 'end of statement')
    Defer
    {
      {
        Try
        {
          {
            (261801 call(261797 call . r[261792] c"close"))
          }
        }
        Catch
        {
          unknown tmp[354892] "temp"(354895 'current error')
          unknown chpl_anon_error[354898](354903 'new'(354901 call _owned[30](?)(354899 'to non nilable class' tmp[354892])))
          {
          }
        }
      }
    }
    Try
    {
      {
        (261822 call(261813 call . r[261792] c"readBytes") buf[261779](261820 call _cast ssize_t[20650] offset[261703]))
      }
    }
    Try
    {
      {
        (261831 call(261827 call . r[261792] c"close"))
      }
    }
    Try
    {
      {
        (261840 call(261836 call . f[261680] c"close"))
      }
    }
    (261849 call =(261847 call buf[261779] offset[261703]) 0)
    if(261878 call _cond_test(261855 call isStringType t[261653]))
    {
      (261865 return(261864 call createStringWithOwnedBuffer buf[261779] offset[261703](261862 call + offset[261703] 1)))
    }
    {
      (261876 return(261875 call createBytesWithOwnedBuffer buf[261779] offset[261703](261873 call + offset[261703] 1)))
    }
  }
  where {
    (261674 call ||(261669 call isStringType t[261653])(261673 call isBytesType t[261653]))
  }
  { scopeless type
    t[261653]
  }
  function qio_regexp_channel_match[261897](const  ref arg re[261894] :
  qio_regexp_t[293633], arg threadsafe[261900] :
  c_int[20552], arg ch[261904] :
  qio_channel_ptr_t[231484], arg maxlen[261911] :
  (261910 call int(64)[13] 64), arg anchor[261915] :
  c_int[20552], arg can_discard[261919] :
  bool[10], arg keep_unmatched[261923] :
  bool[10], arg keep_whole_pattern[261927] :
  bool[10], arg submatch[261934] :
  (261933 call _ddata[11696](?) qio_regexp_string_piece_t[293915]), arg nsubmatch[261941] :
  (261940 call int(64)[13] 64)) : _unknown[51] "extern" "local args" "no fn body" "private" "no return value for void"
  {
  }
  { scopeless type
    syserr[223603]
  }
  function channel[237749](?)._extractMatch[261955](arg _mt[261968]:_MT[238], arg this[261965]:channel[237749](?) :
  channel[237749](?), arg m[261952] :
  reMatch[294600], ref arg arg[261958] :
  reMatch[294600], ref arg error[261962] :
  syserr[223603]) : _unknown[51] "method" "no doc" "no return value for void"
  {
    (261972 call = arg[261958] m[261952])
  }
  function channel[237749](?)._extractMatch[261985](arg _mt[261998]:_MT[238], arg this[261995]:channel[237749](?) :
  channel[237749](?), arg m[261982] :
  reMatch[294600], ref arg arg[261988] :
  bytes[24], ref arg error[261992] :
  syserr[223603]) : _unknown[51] "method" "no doc" "no return value for void"
  {
    unknown cur[262004](262003 call int(64)[13] 64)
    (262007 'end of statement')
    unknown target[262016](262014 call _cast int(64)[13](262010 call . m[261982] c"offset"))
    (262019 'end of statement')
    unknown len[262024](262021 call . m[261982] c"size")
    (262027 'end of statement')
    if(262057 call _cond_test(262034 call !(262031 call . m[261982] c"matched")))
    {
      (262053 call = arg[261988] b"")
    }
    if(262087 call _cond_test(262062 call ! error[261992]))
    {
      (262067 call qio_channel_revert_unlocked(400208 call . this[261995] c"_channel_internal"))
      (262076 call = error[261992](262075 call qio_channel_mark 0(400214 call . this[261995] c"_channel_internal")))
      (262084 call = cur[262004](262083 call qio_channel_offset_unlocked(400220 call . this[261995] c"_channel_internal")))
    }
    if(262108 call _cond_test(262092 call ! error[261992]))
    {
      (262104 call = error[261992](262103 call qio_channel_advance 0(400227 call . this[261995] c"_channel_internal")(262101 call - target[262016] cur[262004])))
    }
    unknown s[262113] bytes[24]
    (262116 'end of statement')
    if(262170 call _cond_test(262118 call ! error[261992]))
    {
      unknown gotlen[262124](262123 call int(64)[13] 64)
      (262127 'end of statement')
      unknown ts[262130] c_string[19]
      (262133 'end of statement')
      (262157 call = error[261992](262156 call qio_channel_read_string 0(262143 call _cast c_int[20552] native[230942])(262148 call stringStyleExactLen len[262024])(400239 call . this[261995] c"_channel_internal") ts[262130] gotlen[262124](262154 call _cast ssize_t[20650] len[262024])))
      (262167 call = s[262113](262166 call createBytesWithOwnedBuffer ts[262130](length = gotlen[262124])))
    }
    if(262204 call _cond_test(262175 call ! error[261992]))
    {
      (262179 call = arg[261988] s[262113])
    }
    {
      (262200 call = arg[261988] b"")
    }
  }
  function channel[237749](?)._extractMatch[262217](arg _mt[262231]:_MT[238], arg this[262228]:channel[237749](?) :
  channel[237749](?), arg m[262214] :
  reMatch[294600], ref arg arg[262221] :
  unknown t[262219], ref arg error[262225] :
  syserr[223603]) : _unknown[51] "method" "no doc" "no return value for void"
  {
    if(262261 call _cond_test(262247 call !(262244 call . m[262214] c"matched")))
    {
      unknown empty[262251](262250 'typeof' arg[262221])
      (262254 'end of statement')
      (262258 call = arg[262221] empty[262251])
    }
    unknown s[262267] bytes[24]
    (262270 'end of statement')
    (262276 call(400262 call . this[262228] c"_extractMatch") m[262214] s[262267] error[262225])
    if(262335 call _cond_test(262279 call ! error[262225]))
    {
      if(262318 call _cond_test(262284 call ==(262282 'typeof' arg[262221]) string[26]))
      {
        Try
        {
          {
            (262293 call = arg[262221](262292 call(262288 call . s[262267] c"decode")))
          }
        }
        Catch
        {
          unknown tmp[354906] "temp"(354909 'current error')
          unknown chpl_anon_error[354912](354917 'new'(354915 call _owned[30](?)(354913 'to non nilable class' tmp[354906])))
          {
            (262300 call = error[262225](400272 call EFORMAT[224289]))
          }
        }
      }
      {
        (262314 call = arg[262221](262312 call _cast(262311 'typeof' arg[262221]) s[262267]))
      }
    }
    {
      unknown empty[262325](262324 'typeof' arg[262221])
      (262328 'end of statement')
      (262332 call = arg[262221] empty[262325])
    }
  }
  where {
    (262241 call &&(262235 call != t[262219] reMatch[294600])(262239 call != t[262219] bytes[24]))
  }
  function channel[237749](?).extractMatch[262349](arg _mt[262356]:_MT[238], arg this[262353]:channel[237749](?) :
  channel[237749](?), arg m[262346] :
  reMatch[294600], ref arg arg[262351]:_any[178](?)) : _unknown[51] throws "method" "no return value for void"
  {
    unknown err[262360](400282 call ENOERR[223673]) syserr[223603]
    (262363 'end of statement')
    const tmp[262399] "const" "temp"
    (262401 'move' tmp[262399](262397 'deref'(262396 '_wide_get_locale'(262366 call . this[262353] c"home"))))
    {
      {
        Try
        {
          {
            (262374 call(262370 call . this[262353] c"lock"))
          }
        }
        Defer
        {
          {
            (262384 call(262380 call . this[262353] c"unlock"))
          }
        }
        (262394 call(400285 call . this[262353] c"_extractMatch") m[262346] arg[262351] err[262360])
      }
      (262404 'on block' 0 tmp[262399])
    }
    if(262446 call _cond_test err[262360])
    {
      Try
      {
        {
          (262441 call(262409 call . this[262353] c"_ch_ioerror") err[262360](262439 call +(262436 call + "in channel.extractMatch(m:reMatch, ref "(262434 call _cast string[26](262432 'typeof' arg[262351]))) ")"))
        }
      }
    }
  }
  function channel[237749](?).extractMatch[262459](arg _mt[262470]:_MT[238], arg this[262467]:channel[237749](?) :
  channel[237749](?), arg m[262456] :
  reMatch[294600], ref arg arg[262461]:_any[178](?), ref arg error[262464] :
  syserr[223603]) : _unknown[51] "method" "no doc" "no return value for void"
  {
    const tmp[262503] "const" "temp"
    (262505 'move' tmp[262503](262501 'deref'(262500 '_wide_get_locale'(262473 call . this[262467] c"home"))))
    {
      {
        Try!
        {
          {
            (262481 call(262477 call . this[262467] c"lock"))
          }
        }
        (262491 call(400297 call . this[262467] c"_extractMatch") m[262456] arg[262461] error[262464])
        (262498 call(262494 call . this[262467] c"unlock"))
      }
      (262508 'on block' 0 tmp[262503])
    }
  }
  function channel[237749](?)._ch_handle_captures[262524](arg _mt[262539]:_MT[238], arg this[262536]:channel[237749](?) :
  channel[237749](?), arg matches[262521] :
  (262520 call _ddata[11696](?) qio_regexp_string_piece_t[293915]), arg nmatches[262527] :
  int(64)[13], ref arg captures[262530]:_any[178](?), ref arg error[262533] :
  syserr[223603]) : _unknown[51] "method" "no doc" "no return value for void"
  {
    (262550 call assert(262547 call >= nmatches[262527](262544 call . captures[262530] c"size")))
    {
      unknown i[262585] 0
      unknown tmp[262586] "maybe param" "temp"
      (262598 'move' tmp[262586](262596 call chpl_compute_low_param_loop_bound 0(262559 call -(262555 call . captures[262530] c"size") 1)))
      unknown tmp[262587] "maybe param" "temp"
      (262611 'move' tmp[262587](262609 call chpl_compute_high_param_loop_bound 0(262603 call -(262605 call . captures[262530] c"size") 1)))
      unknown tmp[262588] "maybe param" "temp"
      (262614 'move' tmp[262588] 1)
      ParamForLoop[262616]
      { i[262585] tmp[262586] tmp[262587] tmp[262588]
        {
          unknown m[262570](262569 call _to_reMatch(262567 call matches[262521] i[262585]))
          (262573 'end of statement')
          (262583 call(400310 call . this[262536] c"_extractMatch") m[262570](262581 call captures[262530] i[262585]) error[262533])
        }
      }
      label _unused_continueLabel[262590]
      label _breakLabel[262589]
    }
  }
  function channel[237749](?).search[262637](arg _mt[262646]:_MT[238], arg this[262643]:channel[237749](?) :
  channel[237749](?), arg re[262634] :
  (262633 call regexp[297144](?) ?[260]), ref arg error[262640] :
  syserr[223603]) : _unknown[51] "method" "no doc"
  {
    unknown m[262650] reMatch[294600]
    (262653 'end of statement')
    const tmp[262833] "const" "temp"
    (262835 'move' tmp[262833](262831 'deref'(262830 '_wide_get_locale'(262656 call . this[262643] c"home"))))
    {
      {
        Try!
        {
          {
            (262664 call(262660 call . this[262643] c"lock"))
          }
        }
        unknown nm[262670] 1
        (262673 'end of statement')
        unknown matches[262679](262678 call _ddata_allocate qio_regexp_string_piece_t[293915] nm[262670])
        (262682 'end of statement')
        (262689 call = error[262640](262688 call qio_channel_mark 0(400326 call . this[262643] c"_channel_internal")))
        if(262722 call _cond_test(262693 call ! error[262640]))
        {
          (262718 call = error[262640](262717 call qio_regexp_channel_match(262698 call . re[262634] c"_regexp") 0(400333 call . this[262643] c"_channel_internal")(262710 call max(262708 call int(64)[13] 64)) QIO_REGEXP_ANCHOR_UNANCHORED[293883] 1 0 1 matches[262679] nm[262670]))
        }
        if(262741 call _cond_test(262734 call ||(262728 call == error[262640](400340 call EFORMAT[224289]))(262732 call == error[262640](400343 call EEOF[224243]))))
        {
          (262738 call = error[262640](400346 call ENOERR[223673]))
        }
        if(262813 call _cond_test(262747 call ! error[262640]))
        {
          (262757 call = m[262650](262756 call _to_reMatch(262754 call matches[262679] 0)))
          if(262809 call _cond_test(262762 call . m[262650] c"matched"))
          {
            (262768 call qio_channel_revert_unlocked(400353 call . this[262643] c"_channel_internal"))
            unknown cur[262775](262774 call qio_channel_offset_unlocked(400358 call . this[262643] c"_channel_internal"))
            (262778 'end of statement')
            unknown target[262786](262784 call _cast int(64)[13](262780 call . m[262650] c"offset"))
            (262789 'end of statement')
            (262800 call = error[262640](262799 call qio_channel_advance 0(400364 call . this[262643] c"_channel_internal")(262797 call - target[262786] cur[262775])))
          }
          {
            (262806 call qio_channel_commit_unlocked(400371 call . this[262643] c"_channel_internal"))
          }
        }
        (262821 call _ddata_free matches[262679] nm[262670])
        (262828 call(262824 call . this[262643] c"unlock"))
      }
      (262838 'on block' 0 tmp[262833])
    }
    (262842 return m[262650])
  }
  { scopeless type
    reMatch[294600]
  }
  function channel[237749](?).search[262857](arg _mt[262862]:_MT[238], arg this[262859]:channel[237749](?) :
  channel[237749](?), arg re[262854] :
  (262853 call regexp[297144](?) ?[260])) : _unknown[51] throws "method" "no doc"
  {
    unknown e[262867](400380 call ENOERR[223673]) syserr[223603]
    (262870 'end of statement')
    unknown ret[262883](262882 call(262875 call . this[262859] c"search") re[262854](error = e[262867]))
    (262886 'end of statement')
    if(262915 call _cond_test e[262867])
    {
      Try
      {
        {
          (262911 call(262889 call . this[262859] c"_ch_ioerror") e[262867] "in channel.search")
        }
      }
    }
    (262921 return ret[262883])
  }
  { scopeless type
    reMatch[294600]
  }
  function channel[237749](?).search[262936](arg _mt[262946]:_MT[238], arg this[262943]:channel[237749](?) :
  channel[237749](?), arg re[262933] :
  (262932 call regexp[297144](?) ?[260]), ref arg captures[262940]:_any[178](?) ...) : _unknown[51] throws "method"
  {
    unknown m[262950] reMatch[294600]
    (262953 'end of statement')
    unknown err[262957](400391 call ENOERR[223673]) syserr[223603]
    (262960 'end of statement')
    const tmp[263156] "const" "temp"
    (263158 'move' tmp[263156](263154 'deref'(263153 '_wide_get_locale'(262962 call . this[262943] c"home"))))
    {
      {
        Try
        {
          {
            (262970 call(262966 call . this[262943] c"lock"))
          }
        }
        Defer
        {
          {
            (262980 call(262976 call . this[262943] c"unlock"))
          }
        }
        unknown nm[262992](262990 call +(262986 call . captures[262940] c"size") 1)
        (262995 'end of statement')
        unknown matches[263001](263000 call _ddata_allocate qio_regexp_string_piece_t[293915] nm[262992])
        (263004 'end of statement')
        (263011 call = err[262957](263010 call qio_channel_mark 0(400398 call . this[262943] c"_channel_internal")))
        if(263044 call _cond_test(263015 call ! err[262957]))
        {
          (263040 call = err[262957](263039 call qio_regexp_channel_match(263020 call . re[262933] c"_regexp") 0(400405 call . this[262943] c"_channel_internal")(263032 call max(263030 call int(64)[13] 64)) QIO_REGEXP_ANCHOR_UNANCHORED[293883] 1 0 1 matches[263001] nm[262992]))
        }
        if(263063 call _cond_test(263056 call ||(263050 call == err[262957](400412 call EFORMAT[224289]))(263054 call == err[262957](400415 call EEOF[224243]))))
        {
          (263060 call = err[262957](400418 call ENOERR[223673]))
        }
        if(263143 call _cond_test(263069 call ! err[262957]))
        {
          (263079 call = m[262950](263078 call _to_reMatch(263076 call matches[263001] 0)))
          if(263139 call _cond_test(263084 call . m[262950] c"matched"))
          {
            (263093 call(400426 call . this[262943] c"_ch_handle_captures") matches[263001] nm[262992] captures[262940] err[262957])
            (263099 call qio_channel_revert_unlocked(400435 call . this[262943] c"_channel_internal"))
            unknown cur[263105](263104 call qio_channel_offset_unlocked(400440 call . this[262943] c"_channel_internal"))
            (263108 'end of statement')
            unknown target[263116](263114 call _cast int(64)[13](263110 call . m[262950] c"offset"))
            (263119 'end of statement')
            (263130 call = err[262957](263129 call qio_channel_advance 0(400446 call . this[262943] c"_channel_internal")(263127 call - target[263116] cur[263105])))
          }
          {
            (263136 call qio_channel_commit_unlocked(400453 call . this[262943] c"_channel_internal"))
          }
        }
        (263151 call _ddata_free matches[263001] nm[262992])
      }
      (263161 'on block' 0 tmp[263156])
    }
    if(263176 call _cond_test err[262957])
    {
      Try
      {
        {
          (263172 call(263166 call . this[262943] c"_ch_ioerror") err[262957] "in channel.search")
        }
      }
    }
    (263182 return m[262950])
  }
  { scopeless type
    reMatch[294600]
  }
  function channel[237749](?).match[263197](arg _mt[263206]:_MT[238], arg this[263203]:channel[237749](?) :
  channel[237749](?), arg re[263194] :
  (263193 call regexp[297144](?) ?[260]), ref arg error[263200] :
  syserr[223603]) : _unknown[51] "method" "no doc"
  {
    unknown m[263210] reMatch[294600]
    (263213 'end of statement')
    const tmp[263393] "const" "temp"
    (263395 'move' tmp[263393](263391 'deref'(263390 '_wide_get_locale'(263216 call . this[263203] c"home"))))
    {
      {
        Try!
        {
          {
            (263224 call(263220 call . this[263203] c"lock"))
          }
        }
        unknown nm[263230] 1
        (263233 'end of statement')
        unknown matches[263239](263238 call _ddata_allocate qio_regexp_string_piece_t[293915] nm[263230])
        (263242 'end of statement')
        (263249 call = error[263200](263248 call qio_channel_mark 0(400470 call . this[263203] c"_channel_internal")))
        if(263282 call _cond_test(263253 call ! error[263200]))
        {
          (263278 call = error[263200](263277 call qio_regexp_channel_match(263258 call . re[263194] c"_regexp") 0(400477 call . this[263203] c"_channel_internal")(263270 call max(263268 call int(64)[13] 64)) QIO_REGEXP_ANCHOR_START[293888] 1 1 1 matches[263239] nm[263230]))
        }
        if(263301 call _cond_test(263294 call ||(263288 call == error[263200](400484 call EFORMAT[224289]))(263292 call == error[263200](400487 call EEOF[224243]))))
        {
          (263298 call = error[263200](400490 call ENOERR[223673]))
        }
        if(263373 call _cond_test(263307 call ! error[263200]))
        {
          (263317 call = m[263210](263316 call _to_reMatch(263314 call matches[263239] 0)))
          if(263369 call _cond_test(263322 call . m[263210] c"matched"))
          {
            (263328 call qio_channel_revert_unlocked(400497 call . this[263203] c"_channel_internal"))
            unknown cur[263335](263334 call qio_channel_offset_unlocked(400502 call . this[263203] c"_channel_internal"))
            (263338 'end of statement')
            unknown target[263346](263344 call _cast int(64)[13](263340 call . m[263210] c"offset"))
            (263349 'end of statement')
            (263360 call = error[263200](263359 call qio_channel_advance 0(400508 call . this[263203] c"_channel_internal")(263357 call - target[263346] cur[263335])))
          }
          {
            (263366 call qio_channel_revert_unlocked(400515 call . this[263203] c"_channel_internal"))
          }
        }
        (263381 call _ddata_free matches[263239] nm[263230])
        (263388 call(263384 call . this[263203] c"unlock"))
      }
      (263398 'on block' 0 tmp[263393])
    }
    (263402 return m[263210])
  }
  { scopeless type
    reMatch[294600]
  }
  function channel[237749](?).match[263417](arg _mt[263422]:_MT[238], arg this[263419]:channel[237749](?) :
  channel[237749](?), arg re[263414] :
  (263413 call regexp[297144](?) ?[260])) : _unknown[51] throws "method" "no doc"
  {
    unknown e[263427](400524 call ENOERR[223673]) syserr[223603]
    (263430 'end of statement')
    unknown ret[263443](263442 call(263435 call . this[263419] c"match") re[263414](error = e[263427]))
    (263446 'end of statement')
    if(263475 call _cond_test e[263427])
    {
      Try
      {
        {
          (263471 call(263449 call . this[263419] c"_ch_ioerror") e[263427] "in channel.match")
        }
      }
    }
    (263481 return ret[263443])
  }
  { scopeless type
    reMatch[294600]
  }
  function channel[237749](?).match[263496](arg _mt[263510]:_MT[238], arg this[263507]:channel[237749](?) :
  channel[237749](?), arg re[263493] :
  (263492 call regexp[297144](?) ?[260]), ref arg captures[263500]:_any[178](?) ..., ref arg error[263504] :
  syserr[223603]) : _unknown[51] "method"
  {
    unknown m[263514] reMatch[294600]
    (263517 'end of statement')
    const tmp[263711] "const" "temp"
    (263713 'move' tmp[263711](263709 'deref'(263708 '_wide_get_locale'(263520 call . this[263507] c"home"))))
    {
      {
        Try!
        {
          {
            (263528 call(263524 call . this[263507] c"lock"))
          }
        }
        unknown nm[263540](263538 call + 1(263535 call . captures[263500] c"size"))
        (263543 'end of statement')
        unknown matches[263549](263548 call _ddata_allocate qio_regexp_string_piece_t[293915] nm[263540])
        (263552 'end of statement')
        (263559 call = error[263504](263558 call qio_channel_mark 0(400540 call . this[263507] c"_channel_internal")))
        if(263592 call _cond_test(263563 call ! error[263504]))
        {
          (263588 call = error[263504](263587 call qio_regexp_channel_match(263568 call . re[263493] c"_regexp") 0(400547 call . this[263507] c"_channel_internal")(263580 call max(263578 call int(64)[13] 64)) QIO_REGEXP_ANCHOR_START[293888] 1 1 1 matches[263549] nm[263540]))
        }
        if(263611 call _cond_test(263604 call ||(263598 call == error[263504](400554 call EFORMAT[224289]))(263602 call == error[263504](400557 call EEOF[224243]))))
        {
          (263608 call = error[263504](400560 call ENOERR[223673]))
        }
        if(263691 call _cond_test(263617 call ! error[263504]))
        {
          (263627 call = m[263514](263626 call _to_reMatch(263624 call matches[263549] 0)))
          if(263687 call _cond_test(263632 call . m[263514] c"matched"))
          {
            (263641 call(400566 call . this[263507] c"_ch_handle_captures") matches[263549] nm[263540] captures[263500] error[263504])
            (263647 call qio_channel_revert_unlocked(400575 call . this[263507] c"_channel_internal"))
            unknown cur[263653](263652 call qio_channel_offset_unlocked(400580 call . this[263507] c"_channel_internal"))
            (263656 'end of statement')
            unknown target[263664](263662 call _cast int(64)[13](263658 call . m[263514] c"offset"))
            (263667 'end of statement')
            (263678 call = error[263504](263677 call qio_channel_advance 0(400586 call . this[263507] c"_channel_internal")(263675 call - target[263664] cur[263653])))
          }
          {
            (263684 call qio_channel_revert_unlocked(400593 call . this[263507] c"_channel_internal"))
          }
        }
        (263699 call _ddata_free matches[263549] nm[263540])
        (263706 call(263702 call . this[263507] c"unlock"))
      }
      (263716 'on block' 0 tmp[263711])
    }
    (263720 return m[263514])
  }
  { scopeless type
    reMatch[294600]
  }
  function channel[237749](?).match[263735](arg _mt[263745]:_MT[238], arg this[263742]:channel[237749](?) :
  channel[237749](?), arg re[263732] :
  (263731 call regexp[297144](?) ?[260]), ref arg captures[263739]:_any[178](?) ...) : _unknown[51] throws "method" "no doc"
  {
    unknown e[263750](400602 call ENOERR[223673]) syserr[223603]
    (263753 'end of statement')
    unknown ret[263766](263765 call(263756 call . this[263742] c"match") re[263732](263762 'expand_tuple' captures[263739])(error = e[263750]))
    (263769 'end of statement')
    if(263782 call _cond_test e[263750])
    {
      Try
      {
        {
          (263778 call(263772 call . this[263742] c"_ch_ioerror") e[263750] "in channel.match")
        }
      }
    }
    (263788 return ret[263766])
  }
  { scopeless type
    reMatch[294600]
  }
  function channel[237749](?).matches[263803](arg _mt[263821]:_MT[238], arg this[263818]:channel[237749](?) :
  channel[237749](?), arg re[263800] :
  (263799 call regexp[297144](?) ?[260]), param arg captures[263806] =
  0, arg maxmatches[263814] :
  int(64)[13] =
  (263813 call max int(64)[13])) : _unknown[51] "iterator fn" "method" "no return value for void"
  {
    unknown m[263824] reMatch[294600]
    (263827 'end of statement')
    unknown go[263830] 1
    (263833 'end of statement')
    unknown i[263835] 0
    (263838 'end of statement')
    unknown error[263841](400613 call ENOERR[223673]) syserr[223603]
    (263844 'end of statement')
    unknown nret[263849] "param"(263847 call + captures[263806] 1)
    (263852 'end of statement')
    unknown ret[263857](263855 call * nret[263849] reMatch[294600])
    (263860 'end of statement')
    Try!
    {
      {
        (263863 call(400619 call . this[263818] c"lock"))
      }
    }
    const tmp[263880] "const" "temp"
    (263882 'move' tmp[263880](263878 'deref'(263877 '_wide_get_locale'(263868 call . this[263818] c"home"))))
    {
      Try!
      {
        {
          (263873 call(400625 call . this[263818] c"_mark"))
        }
      }
      (263885 'on block' 0 tmp[263880])
    }
    {
      unknown tmp[264145] "temp"
      (264175 'move' tmp[264145](264167 call _cond_test(264169 call && go[263830](264172 call < i[263835] maxmatches[263814]))))
      WhileDo[264150]
      {
        {
          const tmp[264120] "const" "temp"
          (264122 'move' tmp[264120](264118 'deref'(264117 '_wide_get_locale'(263896 call . this[263818] c"home"))))
          {
            {
              unknown nm[263903](263901 call + 1 captures[263806])
              (263906 'end of statement')
              unknown matches[263913](263912 call _ddata_allocate qio_regexp_string_piece_t[293915] nm[263903])
              (263916 'end of statement')
              if(263947 call _cond_test(263918 call ! error[263841]))
              {
                (263943 call = error[263841](263942 call qio_regexp_channel_match(263923 call . re[263800] c"_regexp") 0(400635 call . this[263818] c"_channel_internal")(263935 call max(263933 call int(64)[13] 64)) QIO_REGEXP_ANCHOR_UNANCHORED[293883] 1 0 1 matches[263913] nm[263903]))
              }
              if(264096 call _cond_test(263952 call ! error[263841]))
              {
                (263962 call = m[263824](263961 call _to_reMatch(263959 call matches[263913] 0)))
                if(264092 call _cond_test(263967 call . m[263824] c"matched"))
                {
                  {
                    unknown i[263999] 0
                    unknown tmp[264000] "maybe param" "temp"
                    (264012 'move' tmp[264000](264010 call chpl_compute_low_param_loop_bound 0(263973 call - nret[263849] 1)))
                    unknown tmp[264001] "maybe param" "temp"
                    (264022 'move' tmp[264001](264020 call chpl_compute_high_param_loop_bound 0(264017 call - nret[263849] 1)))
                    unknown tmp[264002] "maybe param" "temp"
                    (264025 'move' tmp[264002] 1)
                    ParamForLoop[264027]
                    { i[263999] tmp[264000] tmp[264001] tmp[264002]
                      {
                        (263985 call = m[263824](263984 call _to_reMatch(263982 call matches[263913] i[263999])))
                        (263997 call(400649 call . this[263818] c"_extractMatch") m[263824](263995 call ret[263857] i[263999]) error[263841])
                      }
                    }
                    label _unused_continueLabel[264004]
                    label _breakLabel[264003]
                  }
                  (264040 call qio_channel_revert_unlocked(400659 call . this[263818] c"_channel_internal"))
                  (264048 call = error[263841](264047 call qio_channel_mark 0(400665 call . this[263818] c"_channel_internal")))
                  if(264087 call _cond_test(264052 call ! error[263841]))
                  {
                    unknown cur[264058](264057 call qio_channel_offset_unlocked(400671 call . this[263818] c"_channel_internal"))
                    (264061 'end of statement')
                    unknown target[264070](264068 call _cast int(64)[13](264064 call . m[263824] c"offset"))
                    (264073 'end of statement')
                    (264084 call = error[263841](264083 call qio_channel_advance 0(400677 call . this[263818] c"_channel_internal")(264081 call - target[264070] cur[264058])))
                  }
                }
                {
                }
              }
              (264104 call _ddata_free matches[263913] nm[263903])
              if(264112 call _cond_test error[263841])
              {
                (264109 call = go[263830] 0)
              }
            }
            (264125 'on block' 0 tmp[264120])
          }
          if(264135 call _cond_test(264130 call ! error[263841]))
          {
            (264133 yield ret[263857])
          }
          (264142 call += i[263835] 1)
        }
        label _continueLabel[264148]
        (264162 'move' tmp[264145](264154 call _cond_test(264156 call && go[263830](264159 call < i[263835] maxmatches[263814]))))
        tmp[264145]
      }
      label _breakLabel[264149]
    }
    (264180 call(400698 call . this[263818] c"_commit"))
    (264184 call(400702 call . this[263818] c"unlock"))
    if(264201 call _cond_test(264194 call ||(264188 call == error[263841](400706 call EFORMAT[224289]))(264192 call == error[263841](400709 call EEOF[224243]))))
    {
      (264198 call = error[263841](400712 call ENOERR[223673]))
    }
    if(264234 call _cond_test error[263841])
    {
      Try!
      {
        {
          (264230 call(264208 call . this[263818] c"_ch_ioerror") error[263841] "in channel.matches")
        }
      }
    }
  }
  (355352 'used modules list'(353052 'use' ChapelStandard[20267])(251289 'use' IO[230910])(251293 'use' SysCTypes[20943])(251296 'use' SysBasic[223535])(251299 'use' SysError[264250])(261889 'use' Regexp[293620]))
}