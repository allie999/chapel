AST dump for ExternalArray after pass cullOverReferences.
Module use list: ChapelStandard HaltWrappers 

{
  function chpl__init_ExternalArray[416117]() : void[4] "insert line file info" "module init" "resolved"
  {
    (524400 return _void[55])
  }
  function _ref(chpl_opaque_array)[963439]._instance[821502](ref arg this[821506]:_ref(chpl_opaque_array)[963439]) ref : _ref(c_void_ptr)[936085] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[821516]:_ref(c_void_ptr)[936085] "dead after last mention" "RVV" "temp"
    ref call_tmp[821523]:_ref(c_void_ptr)[936085] "dead after last mention" "maybe param" "temp"
    (821526 'move' call_tmp[821523](821510 '.' this[821506] _instance[188577]))
    (821521 'move' ret[821516] call_tmp[821523])
    (821518 return ret[821516])
  }
  function _ref(chpl_opaque_array)[963439]._unowned[821528](ref arg this[821532]:_ref(chpl_opaque_array)[963439]) ref : _ref(bool)[935162] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[821542]:_ref(bool)[935162] "dead after last mention" "RVV" "temp"
    ref call_tmp[821549]:_ref(bool)[935162] "dead after last mention" "maybe param" "temp"
    (821552 'move' call_tmp[821549](821536 '.' this[821532] _unowned[188582]))
    (821547 'move' ret[821542] call_tmp[821549])
    (821544 return ret[821542])
  }
  function _ref(chpl_opaque_array)[963439].deinit[821628](const  ref arg this[821632]:_ref(chpl_opaque_array)[963439]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved"
  {
    (821640 return _void[55])
  }
  type chpl_opaque_array[188587] val _pid[188572]:int(64)[13] val _instance[188577]:c_void_ptr[149] val _unowned[188582]:bool[10]
  function _ref(chpl_external_array)[963449].deinit[823886](const  ref arg this[823890]:_ref(chpl_external_array)[963449]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved"
  {
    (823898 return _void[55])
  }
  type chpl_external_array[188607] val elts[188592]:c_void_ptr[149] val num_elts[188597]:uint(64)[115] val freer[188602]:c_void_ptr[149]
  function chpl_call_free_func[188674](const in arg func[188671]:c_void_ptr[149], const in arg elts[188677]:c_void_ptr[149]) : void[4] "extern" "local args" "no fn body" "resolved" "no return value for void"
  {
    (524263 return _void[55])
  }
  function cleanupOpaqueArray[189659](const  ref arg arr[189656]:_ref(chpl_opaque_array)[963439]) : void[4] "export" "local args" "resolved" "no return value for void"
  {
    ref call_tmp[691701]:_ref(c_void_ptr)[936085] "dead at end of block" "maybe param" "reference to a const" "temp"
    (691704 'move' call_tmp[691701](189662 call _instance[821502] arr[189656]))
    val call_tmp[691706]:unmanaged BaseArr?[415544] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1381774]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1381778 'move' coerce_tmp[1381774](1381776 'deref' call_tmp[691701]))
    (691709 'move' call_tmp[691706](189668 call _cast[1381747] coerce_tmp[1381774]))
    val cleanup[189670]:unmanaged BaseArr?[415544] "dead at end of block" "insert auto destroy"
    (545610 'move' cleanup[189670](1381782 call chpl__initCopy[1381784] call_tmp[691706]))
    (189673 'end of statement')
    val call_tmp[691711]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1381810]:borrowed object?[415395] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1381815 'move' coerce_tmp[1381810](1381812 'cast' borrowed object?[415395] cleanup[189670]))
    (691714 'move' call_tmp[691711](189687 call _cond_test[9881] coerce_tmp[1381810]))
    if call_tmp[691711]
    {
      ref call_tmp[691718]:_ref(bool)[935162] "dead after last mention" "maybe param" "reference to a const" "temp"
      (691721 'move' call_tmp[691718](189678 call _unowned[821528] arr[189656]))
      val call_tmp[691723]:unmanaged BaseArr[415511] "dead after last mention" "expr temp" "maybe param" "temp"
      (691726 'move' call_tmp[691723](189683 call postfix![1381819] cleanup[189670]))
      val coerce_tmp[1382700]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1382704 'move' coerce_tmp[1382700](1382702 'deref' call_tmp[691718]))
      (189685 call _do_destroy_arr[1382108] coerce_tmp[1382700] call_tmp[691723] 1)
      (484688 'end of statement' cleanup[189670])
    }
    (524398 return _void[55])
  }
}