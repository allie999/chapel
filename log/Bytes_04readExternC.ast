AST dump for Bytes after pass readExternC.
Module use list: 

{
  (22821 'use' ChapelStandard)
  (22825 'use' ByteBufferHelpers)
  (22828 'use' BytesStringCommon)
  (22831 'use' SysCTypes)
  (22834 'use' BytesCasts)
  (22838 'use' BytesStringCommon 'only' decodePolicy)
  unknown idxType[22841] "no doc" "type variable" int[13]
  function bytesFactoryArgDepr[22846]() : _unknown[51] "private"
  {
    (22886 call compilerWarning "createBytesWith* with formal argument `s` is deprecated. " "Use argument name `x` instead")
  }
  function joinArgDepr[22893]() : _unknown[51] "private"
  {
    (22917 call compilerWarning "bytes.join with formal argument `S` is deprecated. " "Use argument name `x` instead")
  }
  function createBytesWithBorrowedBuffer[22928](arg x[22925] :
  bytes[24]) : _unknown[51] "inline"
  {
    { scopeless
      unknown ret[22931] bytes[24]
      (22934 'end of statement')
    }
    (22940 call initWithBorrowedBuffer ret x)
    (22943 return ret)
  }
  function createBytesWithBorrowedBuffer[22953](arg s[22950] :
  bytes[24]) : _unknown[51] "inline" "last resort" "no doc"
  {
    (22957 call bytesFactoryArgDepr)
    (22965 return(22964 call createBytesWithBorrowedBuffer(x = s)))
  }
  function createBytesWithBorrowedBuffer[22975](arg x[22972] :
  c_string, arg length[22981] =
  (22978 call . x c"size")) : _unknown[51] "inline"
  {
    (23004 return(23003 call createBytesWithBorrowedBuffer(22993 call _cast(22992 call c_ptr(22990 call uint[115] 8)) x)(length = length)(size =(23000 call + length 1))))
  }
  function chpl_createBytesWithLiteral[23015](arg x[23012] :
  c_string, arg length[23018] :
  int[13]) : _unknown[51] "no doc"
  {
    (23026 return(23025 call createBytesWithBorrowedBuffer x length))
  }
  function createBytesWithBorrowedBuffer[23037](arg s[23034] :
  c_string, arg length[23043] =
  (23040 call . s c"size")) : _unknown[51] "last resort" "no doc"
  {
    (23048 call bytesFactoryArgDepr)
    (23057 return(23056 call createBytesWithBorrowedBuffer(x = s) length))
  }
  function createBytesWithBorrowedBuffer[23067](arg x[23064] :
  bufferType, arg length[23070] :
  int[13], arg size[23074] :
  int[13]) : _unknown[51] "inline"
  {
    { scopeless
      unknown ret[23078] bytes[24]
      (23081 'end of statement')
    }
    (23089 call initWithBorrowedBuffer ret x length size)
    (23092 return ret)
  }
  function createBytesWithBorrowedBuffer[23102](arg s[23099] :
  bufferType, arg length[23105] :
  int[13], arg size[23109] :
  int[13]) : _unknown[51] "inline" "last resort" "no doc"
  {
    (23114 call bytesFactoryArgDepr)
    (23124 return(23123 call createBytesWithBorrowedBuffer(x = s) length size))
  }
  function createBytesWithOwnedBuffer[23134](arg s[23131] :
  bytes[24]) : _unknown[51] "inline" "no doc"
  {
    (23155 call compilerError "A bytes cannot be passed to createBytesWithOwnedBuffer")
  }
  function createBytesWithOwnedBuffer[23166](arg s[23163] :
  bytes[24]) : _unknown[51] "inline" "last resort" "no doc"
  {
    (23170 call bytesFactoryArgDepr)
    (23178 return(23177 call createBytesWithOwnedBuffer(x = s)))
  }
  function createBytesWithOwnedBuffer[23188](arg x[23185] :
  c_string, arg length[23194] =
  (23191 call . x c"size")) : _unknown[51] "inline"
  {
    (23211 return(23210 call createBytesWithOwnedBuffer(23200 call _cast bufferType x)(length = length)(size =(23207 call + length 1))))
  }
  function createBytesWithOwnedBuffer[23222](arg s[23219] :
  c_string, arg length[23228] =
  (23225 call . s c"size")) : _unknown[51] "inline" "last resort" "no doc"
  {
    (23233 call bytesFactoryArgDepr)
    (23242 return(23241 call createBytesWithOwnedBuffer(x = s) length))
  }
  function createBytesWithOwnedBuffer[23252](arg x[23249] :
  bufferType, arg length[23255] :
  int[13], arg size[23259] :
  int[13]) : _unknown[51] "inline"
  {
    { scopeless
      unknown ret[23263] bytes[24]
      (23266 'end of statement')
    }
    (23274 call initWithOwnedBuffer ret x length size)
    (23277 return ret)
  }
  function createBytesWithOwnedBuffer[23287](arg s[23284] :
  bufferType, arg length[23290] :
  int[13], arg size[23294] :
  int[13]) : _unknown[51] "inline" "last resort" "no doc"
  {
    (23299 call bytesFactoryArgDepr)
    (23309 return(23308 call createBytesWithOwnedBuffer(x = s) length size))
  }
  function createBytesWithNewBuffer[23319](arg x[23316] :
  bytes[24]) : _unknown[51] "inline"
  {
    { scopeless
      unknown ret[23322] bytes[24]
      (23325 'end of statement')
    }
    (23331 call initWithNewBuffer ret x)
    (23334 return ret)
  }
  function createBytesWithNewBuffer[23344](arg s[23341] :
  bytes[24]) : _unknown[51] "inline" "last resort" "no doc"
  {
    (23348 call bytesFactoryArgDepr)
    (23356 return(23355 call createBytesWithNewBuffer(x = s)))
  }
  function createBytesWithNewBuffer[23366](arg x[23363] :
  c_string, arg length[23372] =
  (23369 call . x c"size")) : _unknown[51] "inline"
  {
    (23389 return(23388 call createBytesWithNewBuffer(23378 call _cast bufferType x)(length = length)(size =(23385 call + length 1))))
  }
  function createBytesWithNewBuffer[23400](arg s[23397] :
  c_string, arg length[23406] =
  (23403 call . s c"size")) : _unknown[51] "inline" "last resort" "no doc"
  {
    (23411 call bytesFactoryArgDepr)
    (23420 return(23419 call createBytesWithNewBuffer(x = s) length))
  }
  function createBytesWithNewBuffer[23430](arg x[23427] :
  bufferType, arg length[23433] :
  int[13], arg size[23440] =
  (23438 call + length 1)) : _unknown[51] "inline"
  {
    { scopeless
      unknown ret[23444] bytes[24]
      (23447 'end of statement')
    }
    (23455 call initWithNewBuffer ret x length size)
    (23458 return ret)
  }
  function createBytesWithNewBuffer[23468](arg s[23465] :
  bufferType, arg length[23471] :
  int[13], arg size[23478] =
  (23476 call + length 1)) : _unknown[51] "inline" "last resort" "no doc"
  {
    (23483 call bytesFactoryArgDepr)
    (23493 return(23492 call createBytesWithNewBuffer(x = s) length size))
  }
  type bytes[24] unknown buffLen[23500] 0 int[13] unknown buffSize[23506] 0 int[13] unknown buff[23512] nil[44] bufferType unknown isOwned[23518] 1 bool[10] unknown locale_id[23523] chpl_nodeID function bytes[24].init[23529](arg _mt[24415]:_MT[238], arg this[24413]:bytes[24]) : _unknown[51] "method" "primary method"
  {
  } function bytes[24].deinit[23536](arg _mt[24419]:_MT[238], ref arg this[24417]:bytes[24]) : _unknown[51] "destructor" "method" "primary method"
  {
    if(23599 call _cond_test(23548 call && isOwned(23546 call !=(23542 call . this c"buff") nil[44])))
    {
      { scopeless
        const tmp[23590] "const" "temp"
        (23592 'move' tmp[23590](23588 'deref'(23578 'chpl_on_locale_num'(23577 call chpl_buildLocaleID(23572 call . this c"locale_id") c_sublocid_any))))
        {
          {
            (23585 call chpl_here_free(23581 call . this c"buff"))
          }
          (23595 'on block' 0 tmp[23590])
        }
      }
    }
  } function bytes[24].writeThis[23610](arg _mt[24423]:_MT[238], arg this[24421]:bytes[24], arg f[23608]:_any[178](?)) : _unknown[51] throws "method" "primary method"
  {
    (23633 call compilerError "not implemented: writeThis")
  } function bytes[24].readThis[23642](arg _mt[24427]:_MT[238], arg this[24425]:bytes[24], arg f[23640]:_any[178](?)) : _unknown[51] throws "method" "primary method"
  {
    (23663 call compilerError "not implemented: readThis")
  } function bytes[24].init=[23674](arg _mt[24431]:_MT[238], arg this[24429]:bytes[24], arg b[23671] :
  bytes[24]) : _unknown[51] "method" "primary method"
  {
    (23683 call(23679 call . this c"complete"))
    (23690 call initWithNewBuffer this b)
  } function bytes[24].init=[23700](arg _mt[24435]:_MT[238], arg this[24433]:bytes[24], arg b[23697] :
  string[26]) : _unknown[51] "method" "primary method"
  {
    (23707 call(23703 call . this c"complete"))
    (23732 call initWithNewBuffer this(23714 call . b c"buff")(length =(23720 call . b c"numBytes"))(size =(23729 call +(23725 call . b c"numBytes") 1)))
  } function bytes[24].byteIndices[23738](arg _mt[24439]:_MT[238], arg this[24437]:bytes[24]) : _unknown[51] "inline" "method" "primary method" "no parens"
  {
    { scopeless
      (23747 return(23745 call chpl_build_bounded_range 0(23743 call - size 1)))
    }
  } function bytes[24].length[23754](arg _mt[24443]:_MT[238], param arg this[24441]:bytes[24]) param : _unknown[51] "inline" "method" "primary method" "no parens"
  {
    (23794 call compilerWarning(23791 call + "'bytes.length' is deprecated - " "please use 'bytes.size' instead"))
    (23798 return size)
  } function bytes[24].size[23804](arg _mt[24447]:_MT[238], param arg this[24445]:bytes[24]) param : _unknown[51] "inline" "method" "primary method" "no parens"
  {
    { scopeless
      (23810 return(23809 'string_length_bytes' this))
    }
  } function bytes[24].numBytes[23817](arg _mt[24451]:_MT[238], param arg this[24449]:bytes[24]) param : _unknown[51] "inline" "method" "primary method" "no parens"
  {
    { scopeless
      (23823 return(23822 'string_length_bytes' this))
    }
  } function bytes[24].c_str[23830](arg _mt[24455]:_MT[238], param arg this[24453]:bytes[24]) param : _unknown[51] "inline" "method" "primary method"
  {
    (23837 return(23835 call _cast c_string this))
  }
  { scopeless type
    c_string
  } function bytes[24].item[23849](arg _mt[24459]:_MT[238], arg this[24457]:bytes[24], arg i[23846] :
  byteIndex) : _unknown[51] "method" "primary method"
  {
    (23864 return(23863 call(23855 call . this c"item")(23860 call _cast int[13] i)))
  }
  { scopeless type
    bytes[24]
  } function bytes[24].this[23876](arg _mt[24463]:_MT[238], arg this[24461]:bytes[24], arg i[23873] :
  byteIndex) : _unknown[51] "method" "primary method"
  {
    (23891 return(23890 call(23882 call . this c"byte")(23887 call _cast int[13] i)))
  }
  { scopeless type
    byteType
  } function bytes[24].toByte[23899](arg _mt[24467]:_MT[238], param arg this[24465]:bytes[24]) param : _unknown[51] "inline" "method" "primary method"
  {
    if(23935 call _cond_test(23910 call !=(23906 call . this c"numBytes") 1))
    {
      { scopeless
        (23933 call compilerError "bytes.toByte() only accepts single-byte bytes")
      }
    }
    (23961 return(23960 'ascii' this))
  }
  { scopeless type
    (23904 call uint[115] 8)
  } function bytes[24].byte[23972](arg _mt[24471]:_MT[238], param arg this[24469]:bytes[24], param arg i[23969] :
  int[13]) param : _unknown[51] "inline" "method" "primary method"
  {
    if(24046 call _cond_test(23989 call ||(23980 call < i 0)(23987 call >= i(23984 call . this c"numBytes"))))
    {
      { scopeless
        (24044 call compilerError(24041 call +(24032 call +(24013 call + "index "(24011 call _cast string[26] i)) " out of bounds for bytes with length ")(24039 call _cast string[26](24035 call . this c"numBytes"))))
      }
    }
    (24057 return(24056 'ascii' this i))
  }
  { scopeless type
    (23977 call uint[115] 8)
  } function bytes[24].join[24066](arg _mt[24475]:_MT[238], arg this[24473]:bytes[24], const  ref arg S[24064]:_any[178](?)) : _unknown[51] "inline" "last resort" "method" "primary method"
  {
    (24075 call joinArgDepr)
    (24083 return(24082 call join(x = S)))
  }
  where {
    (24072 call isTuple S)
  }
  { scopeless type
    bytes[24]
  } function bytes[24].join[24098](arg _mt[24479]:_MT[238], arg this[24477]:bytes[24], const  ref arg x[24095] :
  (24092 call chpl__buildArrayRuntimeType nil[44] bytes[24])) : _unknown[51] "inline" "method" "primary method"
  {
    (24105 return(24104 call _join x))
  }
  { scopeless type
    bytes[24]
  } function bytes[24].join[24120](arg _mt[24483]:_MT[238], arg this[24481]:bytes[24], const  ref arg S[24117] :
  (24114 call chpl__buildArrayRuntimeType nil[44] bytes[24])) : _unknown[51] "inline" "last resort" "method" "primary method"
  {
    (24125 call joinArgDepr)
    (24133 return(24132 call join(x = S)))
  }
  { scopeless type
    bytes[24]
  } function bytes[24].join[24144](arg _mt[24487]:_MT[238], arg this[24485]:bytes[24], arg ir[24141] :
  _iteratorRecord) : _unknown[51] "inline" "method" "primary method"
  {
    (24152 return(24151 call doJoinIterator this ir))
  }
  { scopeless type
    bytes[24]
  } function bytes[24]._join[24162](arg _mt[24491]:_MT[238], arg this[24489]:bytes[24], const  ref arg S[24160]:_any[178](?)) : _unknown[51] "inline" "method" "primary method"
  {
    (24180 return(24179 call doJoin this S))
  }
  where {
    (24173 call ||(24168 call isTuple S)(24172 call isArray S))
  }
  { scopeless type
    bytes[24]
  } function bytes[24].decode[24198](arg _mt[24495]:_MT[238], arg this[24493]:bytes[24], arg errors[24195] =
  (24192 call . decodePolicy c"strict")) : _unknown[51] throws "last resort" "method" "primary method"
  {
    (24237 call compilerWarning "'errors' argument to bytes.decode is deprecated. " "Use 'policy' instead.")
    (24250 return(24249 call(24243 call . this c"decode")(policy = errors)))
  }
  { scopeless type
    string[26]
  } function bytes[24].decode[24261](arg _mt[24499]:_MT[238], arg this[24497]:bytes[24], param arg errors[24258] :
  decodePolicy) : _unknown[51] throws "last resort" "method" "primary method"
  {
    (24268 call compilerWarning "'errors' argument to bytes.decode is deprecated. " "Use 'policy' instead.")
    if(24318 call _cond_test(24278 call == errors(24275 call . decodePolicy c"ignore")))
    {
      { scopeless
        (24316 call compilerWarning "decodePolicy.ignore is deprecated. " "Use decodePolicy.drop instead")
      }
    }
    { scopeless
      unknown localThis[24332](24331 call(24327 call . this c"localize")) bytes[24]
      (24335 'end of statement')
    }
    (24350 return(24349 call decodeByteBuffer(24338 call . localThis c"buff")(24345 call . localThis c"buffLen") errors))
  }
  { scopeless type
    string[26]
  } function bytes[24].decode[24361](arg _mt[24503]:_MT[238], arg this[24501]:bytes[24], param arg policy[24358] :
  decodePolicy) : _unknown[51] throws "method" "primary method"
  {
    if(24377 call _cond_test(24369 call == policy(24366 call . decodePolicy c"ignore")))
    {
      { scopeless
        (24375 call compilerWarning "decodePolicy.ignore is deprecated. " "Use decodePolicy.drop instead")
      }
    }
    { scopeless
      unknown localThis[24390](24389 call(24385 call . this c"localize")) bytes[24]
      (24393 'end of statement')
    }
    (24406 return(24405 call decodeByteBuffer(24396 call . localThis c"buff")(24401 call . localThis c"buffLen") policy))
  }
  { scopeless type
    string[26]
  }
  function _unknown[51].length[24509](arg _mt[24514]:_MT[238], arg this[24511] :
  bytes[24]) : _unknown[51] "inline" "method" "no parens"
  {
    (24522 call compilerWarning(24519 call + "'bytes.length' is deprecated - " "please use 'bytes.size' instead"))
    (24526 return buffLen)
  }
  function _unknown[51].size[24533](arg _mt[24538]:_MT[238], arg this[24535] :
  bytes[24]) : _unknown[51] "inline" "method" "no parens"
  {
    { scopeless
      (24541 return buffLen)
    }
  }
  function _unknown[51].indices[24549](arg _mt[24554]:_MT[238], arg this[24551] :
  bytes[24]) : _unknown[51] "method" "no parens"
  {
    { scopeless
      (24563 return(24561 call chpl_build_bounded_range 0(24559 call - size 1)))
    }
  }
  function _unknown[51].numBytes[24571](arg _mt[24576]:_MT[238], arg this[24573] :
  bytes[24]) : _unknown[51] "inline" "method" "no parens"
  {
    { scopeless
      (24579 return buffLen)
    }
  }
  function _unknown[51].localize[24587](arg _mt[24592]:_MT[238], arg this[24589] :
  bytes[24]) : _unknown[51] "inline" "method"
  {
    if(24622 call _cond_test(24603 call || _local(24601 call ==(24597 call . this c"locale_id") chpl_nodeID)))
    {
      (24609 return(24608 call createBytesWithBorrowedBuffer this))
    }
    {
      { scopeless
        const x[24614] "const" this bytes[24]
        (24617 'end of statement')
      }
      (24620 return x)
    }
  }
  { scopeless type
    bytes[24]
  }
  function _unknown[51].c_str[24633](arg _mt[24638]:_MT[238], arg this[24635] :
  bytes[24]) : _unknown[51] "inline" "method"
  {
    (24645 return(24644 call getCStr this))
  }
  { scopeless type
    c_string
  }
  function _unknown[51].item[24658](arg _mt[24663]:_MT[238], arg this[24660] :
  bytes[24], arg i[24655] :
  int[13]) : _unknown[51] "method"
  {
    if(24693 call _cond_test(24680 call && boundsChecking(24678 call ||(24669 call < i 0)(24676 call >= i(24673 call . this c"buffLen")))))
    {
      { scopeless
        (24691 call halt "index " i " out of bounds for bytes with length "(24688 call . this c"buffLen"))
      }
    }
    { scopeless
      unknown tmp[24721] "temp"(24720 call bufferCopy(buf =(24706 call . this c"buff"))(off = i)(len = 1)(loc =(24716 call . this c"locale_id")))
      (24728 call _check_tuple_var_decl tmp[24721] 2)
      unknown buf[24699](24722 call tmp[24721] 0)
      unknown size[24701](24725 call tmp[24721] 1)
      (24733 'end of statement')
    }
    (24742 return(24741 call createBytesWithOwnedBuffer buf(length = 1)(size = size)))
  }
  { scopeless type
    bytes[24]
  }
  function _unknown[51].this[24754](arg _mt[24759]:_MT[238], arg this[24756] :
  bytes[24], arg i[24751] :
  int[13]) : _unknown[51] "method"
  {
    (24769 return(24768 call(24763 call . this c"byte") i))
  }
  { scopeless type
    byteType
  }
  function _unknown[51].toByte[24778](arg _mt[24783]:_MT[238], arg this[24780] :
  bytes[24]) : _unknown[51] "method"
  {
    if(24802 call _cond_test(24794 call !=(24790 call . this c"buffLen") 1))
    {
      (24799 call halt "bytes.toByte() only accepts single-byte bytes")
    }
    (24822 return(24821 call bufferGetByte(buf =(24809 call . this c"buff"))(off = 0)(loc =(24817 call . this c"locale_id"))))
  }
  { scopeless type
    (24788 call uint[115] 8)
  }
  function _unknown[51].byte[24834](arg _mt[24839]:_MT[238], arg this[24836] :
  bytes[24], arg i[24831] :
  int[13]) : _unknown[51] "method"
  {
    if(24869 call _cond_test(24856 call && boundsChecking(24854 call ||(24845 call < i 0)(24852 call >= i(24849 call . this c"buffLen")))))
    {
      { scopeless
        (24867 call halt "index " i " out of bounds for bytes with length "(24864 call . this c"buffLen"))
      }
    }
    (24890 return(24889 call bufferGetByte(buf =(24877 call . this c"buff"))(off = i)(loc =(24885 call . this c"locale_id"))))
  }
  { scopeless type
    byteType
  }
  function _unknown[51].items[24898](arg _mt[24903]:_MT[238], arg this[24900] :
  bytes[24]) : _unknown[51] "iterator fn" "method"
  {
    if(24916 call _cond_test(24913 call(24909 call . this c"isEmpty")))
    {
      { scopeless
        (24914 return)
      }
    }
    {
      unknown _indexOfInterest[24938] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[24939] "expr temp" "temp"
      (24948 'move' _iterator[24939](24946 call _getIterator(24926 call . this c"indices")))
      Defer
      {
        {
          (24965 call _freeIterator _iterator[24939])
        }
      }
      { scopeless type
        (24954 'move' _indexOfInterest[24938](24951 call iteratorIndex _iterator[24939]))
      }
      ForLoop[24940]
      {
        unknown i[24958] "index var" "insert auto destroy"
        (24960 'move' i[24958] _indexOfInterest[24938])
        { scopeless
          (24936 yield(24935 call(24930 call . this c"item") i))
        }
        label _continueLabel[24943]
        _indexOfInterest[24938]
        _iterator[24939]
      }
      label _breakLabel[24944]
    }
  }
  { scopeless type
    bytes[24]
  }
  function _unknown[51].these[24978](arg _mt[24983]:_MT[238], arg this[24980] :
  bytes[24]) : _unknown[51] "iterator fn" "method"
  {
    {
      unknown _indexOfInterest[24997] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[24998] "expr temp" "temp"
      (25007 'move' _iterator[24998](25005 call _getIterator(24993 call(24990 call . this c"chpl_bytes"))))
      Defer
      {
        {
          (25024 call _freeIterator _iterator[24998])
        }
      }
      { scopeless type
        (25013 'move' _indexOfInterest[24997](25010 call iteratorIndex _iterator[24998]))
      }
      ForLoop[24999]
      {
        unknown i[25017] "index var" "insert auto destroy"
        (25019 'move' i[25017] _indexOfInterest[24997])
        { scopeless
          (24995 yield i)
        }
        label _continueLabel[25002]
        _indexOfInterest[24997]
        _iterator[24998]
      }
      label _breakLabel[25003]
    }
  }
  { scopeless type
    byteType
  }
  function _unknown[51].chpl_bytes[25038](arg _mt[25043]:_MT[238], arg this[25040] :
  bytes[24]) : _unknown[51] "iterator fn" "method"
  {
    {
      unknown _indexOfInterest[25060] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[25061] "expr temp" "temp"
      (25070 'move' _iterator[25061](25068 call _getIterator(25048 call . this c"indices")))
      Defer
      {
        {
          (25087 call _freeIterator _iterator[25061])
        }
      }
      { scopeless type
        (25076 'move' _indexOfInterest[25060](25073 call iteratorIndex _iterator[25061]))
      }
      ForLoop[25062]
      {
        unknown i[25080] "index var" "insert auto destroy"
        (25082 'move' i[25080] _indexOfInterest[25060])
        { scopeless
          (25058 yield(25057 call(25052 call . this c"byte") i))
        }
        label _continueLabel[25065]
        _indexOfInterest[25060]
        _iterator[25061]
      }
      label _breakLabel[25066]
    }
  }
  { scopeless type
    byteType
  }
  function _unknown[51].this[25108](arg _mt[25113]:_MT[238], arg this[25110] :
  bytes[24], arg r[25105] :
  (25104 call range ?[260])) : _unknown[51] "inline" "method"
  {
    (25121 return(25120 call getSlice this r))
  }
  { scopeless type
    bytes[24]
  }
  function _unknown[51].isEmpty[25130](arg _mt[25135]:_MT[238], arg this[25132] :
  bytes[24]) : _unknown[51] "inline" "method"
  {
    (25145 return(25143 call ==(25139 call . this c"buffLen") 0))
  }
  { scopeless type
    bool[10]
  }
  function _unknown[51].startsWith[25160](arg _mt[25165]:_MT[238], arg this[25162] :
  bytes[24], arg needles[25156] ... :
  bytes[24]) : _unknown[51] "inline" "method"
  {
    (25175 return(25174 call startsEndsWith this needles(fromLeft = 1)))
  }
  { scopeless type
    bool[10]
  }
  function _unknown[51].endsWith[25190](arg _mt[25195]:_MT[238], arg this[25192] :
  bytes[24], arg needles[25186] ... :
  bytes[24]) : _unknown[51] "inline" "method"
  {
    (25205 return(25204 call startsEndsWith this needles(fromLeft = 0)))
  }
  { scopeless type
    bool[10]
  }
  function _unknown[51].find[25218](arg _mt[25235]:_MT[238], arg this[25232] :
  bytes[24], arg needle[25215] :
  bytes[24], arg region[25228] :
  (25223 call range ?[260]) =
  (25225 call . this c"indices")) : _unknown[51] "inline" "method"
  {
    (25249 return(25247 call _cast idxType(25245 call doSearchNoEnc this needle region(count = 0))))
  }
  { scopeless type
    idxType
  }
  function _unknown[51].rfind[25262](arg _mt[25279]:_MT[238], arg this[25276] :
  bytes[24], arg needle[25259] :
  bytes[24], arg region[25272] :
  (25267 call range ?[260]) =
  (25269 call . this c"indices")) : _unknown[51] "inline" "method"
  {
    (25295 return(25293 call _cast idxType(25291 call doSearchNoEnc this needle region(count = 0)(fromLeft = 0))))
  }
  { scopeless type
    idxType
  }
  function _unknown[51].count[25308](arg _mt[25325]:_MT[238], arg this[25322] :
  bytes[24], arg needle[25305] :
  bytes[24], arg region[25318] :
  (25313 call range ?[260]) =
  (25315 call . this c"indices")) : _unknown[51] "inline" "method"
  {
    (25336 return(25335 call doSearchNoEnc this needle region(count = 1)))
  }
  { scopeless type
    int[13]
  }
  function _unknown[51].replace[25349](arg _mt[25366]:_MT[238], arg this[25363] :
  bytes[24], arg needle[25346] :
  bytes[24], arg replacement[25352] :
  bytes[24], arg count[25359] :
  int[13] =
  (25357 call - 1)) : _unknown[51] "inline" "method"
  {
    (25376 return(25375 call doReplace this needle replacement count))
  }
  { scopeless type
    bytes[24]
  }
  function _unknown[51].split[25389](arg _mt[25408]:_MT[238], arg this[25405] :
  bytes[24], arg sep[25386] :
  bytes[24], arg maxsplit[25395] :
  int[13] =
  (25393 call - 1), arg ignoreEmpty[25401] :
  bool[10] =
  0) : _unknown[51] "iterator fn" "method"
  {
    {
      unknown _indexOfInterest[25422] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[25423] "expr temp" "temp"
      (25432 'move' _iterator[25423](25430 call _getIterator(25418 call doSplit this sep maxsplit ignoreEmpty)))
      Defer
      {
        {
          (25449 call _freeIterator _iterator[25423])
        }
      }
      { scopeless type
        (25438 'move' _indexOfInterest[25422](25435 call iteratorIndex _iterator[25423]))
      }
      ForLoop[25424]
      {
        unknown s[25442] "index var" "insert auto destroy"
        (25444 'move' s[25442] _indexOfInterest[25422])
        { scopeless
          (25420 yield s)
        }
        label _continueLabel[25427]
        _indexOfInterest[25422]
        _iterator[25423]
      }
      label _breakLabel[25428]
    }
  }
  { scopeless type
    bytes[24]
  }
  function _unknown[51].split[25471](arg _mt[25476]:_MT[238], arg this[25473] :
  bytes[24], arg maxsplit[25467] :
  int[13] =
  (25465 call - 1)) : _unknown[51] "iterator fn" "method"
  {
    {
      unknown _indexOfInterest[25488] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[25489] "expr temp" "temp"
      (25498 'move' _iterator[25489](25496 call _getIterator(25484 call doSplitWSNoEnc this maxsplit)))
      Defer
      {
        {
          (25515 call _freeIterator _iterator[25489])
        }
      }
      { scopeless type
        (25504 'move' _indexOfInterest[25488](25501 call iteratorIndex _iterator[25489]))
      }
      ForLoop[25490]
      {
        unknown s[25508] "index var" "insert auto destroy"
        (25510 'move' s[25508] _indexOfInterest[25488])
        { scopeless
          (25486 yield s)
        }
        label _continueLabel[25493]
        _indexOfInterest[25488]
        _iterator[25489]
      }
      label _breakLabel[25494]
    }
  }
  { scopeless type
    bytes[24]
  }
  function _unknown[51].join[25535](arg _mt[25540]:_MT[238], arg this[25537] :
  bytes[24], const  ref arg S[25531] ... :
  bytes[24]) : _unknown[51] "inline" "method"
  {
    (25547 return(25546 call _join S))
  }
  { scopeless type
    bytes[24]
  }
  function _unknown[51].join[25558](arg _mt[25563]:_MT[238], arg this[25560] :
  bytes[24], const  ref arg x[25556]:_any[178](?)) : _unknown[51] "inline" "method"
  {
    if(25608 call _cond_test(25585 call ||(25574 call !(25573 call isHomogeneousTuple x))(25583 call !(25582 call isBytes(25580 call x 1)))))
    {
      { scopeless
        (25606 call compilerError "join() on tuples only handles homogeneous tuples of bytes")
      }
    }
    (25618 return(25617 call _join x))
  }
  where {
    (25569 call isTuple x)
  }
  { scopeless type
    bytes[24]
  }
  function _unknown[51].strip[25646](arg _mt[25659]:_MT[238], arg this[25656] :
  bytes[24], arg chars[25643] =
  b" \t\r\n", arg leading[25649] =
  1, arg trailing[25653] =
  1) : _unknown[51] "method"
  {
    (25669 return(25668 call doStripNoEnc this chars leading trailing))
  }
  { scopeless type
    bytes[24]
  }
  function _unknown[51].partition[25682](arg _mt[25687]:_MT[238], const arg this[25684] :
  bytes[24], arg sep[25679] :
  bytes[24]) : _unknown[51] "inline" "method"
  {
    (25698 return(25697 call doPartition this sep))
  }
  { scopeless type
    (25691 call * 3 bytes[24])
  }
  function _unknown[51].decode[25714](arg _mt[25719]:_MT[238], arg this[25716] :
  bytes[24], arg policy[25711] =
  (25708 call . decodePolicy c"strict")) : _unknown[51] throws "method"
  {
    { scopeless
      unknown localThis[25729](25728 call(25724 call . this c"localize")) bytes[24]
      (25732 'end of statement')
    }
    (25746 return(25745 call decodeByteBuffer(25736 call . localThis c"buff")(25741 call . localThis c"buffLen") policy))
  }
  { scopeless type
    string[26]
  }
  function _unknown[51].isUpper[25754](arg _mt[25759]:_MT[238], arg this[25756] :
  bytes[24]) : _unknown[51] "method"
  {
    if(25771 call _cond_test(25767 call(25763 call . this c"isEmpty")))
    {
      { scopeless
        (25769 return 0)
      }
    }
    { scopeless
      unknown result[25779] 1 bool[10]
      (25782 'end of statement')
    }
    { scopeless
      const tmp[25857] "const" "temp"
      (25859 'move' tmp[25857](25855 'deref'(25793 'chpl_on_locale_num'(25792 call chpl_buildLocaleID(25787 call . this c"locale_id") c_sublocid_any))))
      {
        {
          {
            unknown _indexOfInterest[25820] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[25821] "expr temp" "temp"
            (25830 'move' _iterator[25821](25828 call _getIterator(25799 call(25796 call . this c"chpl_bytes"))))
            Defer
            {
              {
                (25847 call _freeIterator _iterator[25821])
              }
            }
            { scopeless type
              (25836 'move' _indexOfInterest[25820](25833 call iteratorIndex _iterator[25821]))
            }
            ForLoop[25822]
            {
              unknown b[25840] "index var" "insert auto destroy"
              (25842 'move' b[25840] _indexOfInterest[25820])
              {
                if(25815 call _cond_test(25804 call !(25803 call byte_isUpper b)))
                {
                  (25808 call = result 0)
                  break nil[44]
                }
              }
              label _continueLabel[25825]
              _indexOfInterest[25820]
              _iterator[25821]
            }
            label _breakLabel[25826]
          }
        }
        (25862 'on block' 0 tmp[25857])
      }
    }
    (25866 return result)
  }
  { scopeless type
    bool[10]
  }
  function _unknown[51].isLower[25874](arg _mt[25879]:_MT[238], arg this[25876] :
  bytes[24]) : _unknown[51] "method"
  {
    if(25891 call _cond_test(25887 call(25883 call . this c"isEmpty")))
    {
      { scopeless
        (25889 return 0)
      }
    }
    { scopeless
      unknown result[25899] 1 bool[10]
      (25902 'end of statement')
    }
    { scopeless
      const tmp[25977] "const" "temp"
      (25979 'move' tmp[25977](25975 'deref'(25913 'chpl_on_locale_num'(25912 call chpl_buildLocaleID(25907 call . this c"locale_id") c_sublocid_any))))
      {
        {
          {
            unknown _indexOfInterest[25940] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[25941] "expr temp" "temp"
            (25950 'move' _iterator[25941](25948 call _getIterator(25919 call(25916 call . this c"chpl_bytes"))))
            Defer
            {
              {
                (25967 call _freeIterator _iterator[25941])
              }
            }
            { scopeless type
              (25956 'move' _indexOfInterest[25940](25953 call iteratorIndex _iterator[25941]))
            }
            ForLoop[25942]
            {
              unknown b[25960] "index var" "insert auto destroy"
              (25962 'move' b[25960] _indexOfInterest[25940])
              {
                if(25935 call _cond_test(25924 call !(25923 call byte_isLower b)))
                {
                  (25928 call = result 0)
                  break nil[44]
                }
              }
              label _continueLabel[25945]
              _indexOfInterest[25940]
              _iterator[25941]
            }
            label _breakLabel[25946]
          }
        }
        (25982 'on block' 0 tmp[25977])
      }
    }
    (25986 return result)
  }
  { scopeless type
    bool[10]
  }
  function _unknown[51].isSpace[25994](arg _mt[25999]:_MT[238], arg this[25996] :
  bytes[24]) : _unknown[51] "method"
  {
    if(26011 call _cond_test(26007 call(26003 call . this c"isEmpty")))
    {
      { scopeless
        (26009 return 0)
      }
    }
    { scopeless
      unknown result[26019] 1 bool[10]
      (26022 'end of statement')
    }
    { scopeless
      const tmp[26097] "const" "temp"
      (26099 'move' tmp[26097](26095 'deref'(26033 'chpl_on_locale_num'(26032 call chpl_buildLocaleID(26027 call . this c"locale_id") c_sublocid_any))))
      {
        {
          {
            unknown _indexOfInterest[26060] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[26061] "expr temp" "temp"
            (26070 'move' _iterator[26061](26068 call _getIterator(26039 call(26036 call . this c"chpl_bytes"))))
            Defer
            {
              {
                (26087 call _freeIterator _iterator[26061])
              }
            }
            { scopeless type
              (26076 'move' _indexOfInterest[26060](26073 call iteratorIndex _iterator[26061]))
            }
            ForLoop[26062]
            {
              unknown b[26080] "index var" "insert auto destroy"
              (26082 'move' b[26080] _indexOfInterest[26060])
              {
                if(26055 call _cond_test(26044 call !(26043 call byte_isWhitespace b)))
                {
                  (26048 call = result 0)
                  break nil[44]
                }
              }
              label _continueLabel[26065]
              _indexOfInterest[26060]
              _iterator[26061]
            }
            label _breakLabel[26066]
          }
        }
        (26102 'on block' 0 tmp[26097])
      }
    }
    (26106 return result)
  }
  { scopeless type
    bool[10]
  }
  function _unknown[51].isAlpha[26114](arg _mt[26119]:_MT[238], arg this[26116] :
  bytes[24]) : _unknown[51] "method"
  {
    if(26131 call _cond_test(26127 call(26123 call . this c"isEmpty")))
    {
      { scopeless
        (26129 return 0)
      }
    }
    { scopeless
      unknown result[26139] 1 bool[10]
      (26142 'end of statement')
    }
    { scopeless
      const tmp[26217] "const" "temp"
      (26219 'move' tmp[26217](26215 'deref'(26153 'chpl_on_locale_num'(26152 call chpl_buildLocaleID(26147 call . this c"locale_id") c_sublocid_any))))
      {
        {
          {
            unknown _indexOfInterest[26180] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[26181] "expr temp" "temp"
            (26190 'move' _iterator[26181](26188 call _getIterator(26159 call(26156 call . this c"chpl_bytes"))))
            Defer
            {
              {
                (26207 call _freeIterator _iterator[26181])
              }
            }
            { scopeless type
              (26196 'move' _indexOfInterest[26180](26193 call iteratorIndex _iterator[26181]))
            }
            ForLoop[26182]
            {
              unknown b[26200] "index var" "insert auto destroy"
              (26202 'move' b[26200] _indexOfInterest[26180])
              {
                if(26175 call _cond_test(26164 call !(26163 call byte_isAlpha b)))
                {
                  (26168 call = result 0)
                  break nil[44]
                }
              }
              label _continueLabel[26185]
              _indexOfInterest[26180]
              _iterator[26181]
            }
            label _breakLabel[26186]
          }
        }
        (26222 'on block' 0 tmp[26217])
      }
    }
    (26226 return result)
  }
  { scopeless type
    bool[10]
  }
  function _unknown[51].isDigit[26234](arg _mt[26239]:_MT[238], arg this[26236] :
  bytes[24]) : _unknown[51] "method"
  {
    if(26251 call _cond_test(26247 call(26243 call . this c"isEmpty")))
    {
      { scopeless
        (26249 return 0)
      }
    }
    { scopeless
      unknown result[26259] 1 bool[10]
      (26262 'end of statement')
    }
    { scopeless
      const tmp[26337] "const" "temp"
      (26339 'move' tmp[26337](26335 'deref'(26273 'chpl_on_locale_num'(26272 call chpl_buildLocaleID(26267 call . this c"locale_id") c_sublocid_any))))
      {
        {
          {
            unknown _indexOfInterest[26300] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[26301] "expr temp" "temp"
            (26310 'move' _iterator[26301](26308 call _getIterator(26279 call(26276 call . this c"chpl_bytes"))))
            Defer
            {
              {
                (26327 call _freeIterator _iterator[26301])
              }
            }
            { scopeless type
              (26316 'move' _indexOfInterest[26300](26313 call iteratorIndex _iterator[26301]))
            }
            ForLoop[26302]
            {
              unknown b[26320] "index var" "insert auto destroy"
              (26322 'move' b[26320] _indexOfInterest[26300])
              {
                if(26295 call _cond_test(26284 call !(26283 call byte_isDigit b)))
                {
                  (26288 call = result 0)
                  break nil[44]
                }
              }
              label _continueLabel[26305]
              _indexOfInterest[26300]
              _iterator[26301]
            }
            label _breakLabel[26306]
          }
        }
        (26342 'on block' 0 tmp[26337])
      }
    }
    (26346 return result)
  }
  { scopeless type
    bool[10]
  }
  function _unknown[51].isAlnum[26354](arg _mt[26359]:_MT[238], arg this[26356] :
  bytes[24]) : _unknown[51] "method"
  {
    if(26371 call _cond_test(26367 call(26363 call . this c"isEmpty")))
    {
      { scopeless
        (26369 return 0)
      }
    }
    { scopeless
      unknown result[26379] 1 bool[10]
      (26382 'end of statement')
    }
    { scopeless
      const tmp[26457] "const" "temp"
      (26459 'move' tmp[26457](26455 'deref'(26393 'chpl_on_locale_num'(26392 call chpl_buildLocaleID(26387 call . this c"locale_id") c_sublocid_any))))
      {
        {
          {
            unknown _indexOfInterest[26420] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[26421] "expr temp" "temp"
            (26430 'move' _iterator[26421](26428 call _getIterator(26399 call(26396 call . this c"chpl_bytes"))))
            Defer
            {
              {
                (26447 call _freeIterator _iterator[26421])
              }
            }
            { scopeless type
              (26436 'move' _indexOfInterest[26420](26433 call iteratorIndex _iterator[26421]))
            }
            ForLoop[26422]
            {
              unknown b[26440] "index var" "insert auto destroy"
              (26442 'move' b[26440] _indexOfInterest[26420])
              {
                if(26415 call _cond_test(26404 call !(26403 call byte_isAlnum b)))
                {
                  (26408 call = result 0)
                  break nil[44]
                }
              }
              label _continueLabel[26425]
              _indexOfInterest[26420]
              _iterator[26421]
            }
            label _breakLabel[26426]
          }
        }
        (26462 'on block' 0 tmp[26457])
      }
    }
    (26466 return result)
  }
  { scopeless type
    bool[10]
  }
  function _unknown[51].isPrintable[26474](arg _mt[26479]:_MT[238], arg this[26476] :
  bytes[24]) : _unknown[51] "method"
  {
    if(26491 call _cond_test(26487 call(26483 call . this c"isEmpty")))
    {
      { scopeless
        (26489 return 0)
      }
    }
    { scopeless
      unknown result[26499] 1 bool[10]
      (26502 'end of statement')
    }
    { scopeless
      const tmp[26577] "const" "temp"
      (26579 'move' tmp[26577](26575 'deref'(26513 'chpl_on_locale_num'(26512 call chpl_buildLocaleID(26507 call . this c"locale_id") c_sublocid_any))))
      {
        {
          {
            unknown _indexOfInterest[26540] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[26541] "expr temp" "temp"
            (26550 'move' _iterator[26541](26548 call _getIterator(26519 call(26516 call . this c"chpl_bytes"))))
            Defer
            {
              {
                (26567 call _freeIterator _iterator[26541])
              }
            }
            { scopeless type
              (26556 'move' _indexOfInterest[26540](26553 call iteratorIndex _iterator[26541]))
            }
            ForLoop[26542]
            {
              unknown b[26560] "index var" "insert auto destroy"
              (26562 'move' b[26560] _indexOfInterest[26540])
              {
                if(26535 call _cond_test(26524 call !(26523 call byte_isPrintable b)))
                {
                  (26528 call = result 0)
                  break nil[44]
                }
              }
              label _continueLabel[26545]
              _indexOfInterest[26540]
              _iterator[26541]
            }
            label _breakLabel[26546]
          }
        }
        (26582 'on block' 0 tmp[26577])
      }
    }
    (26586 return result)
  }
  { scopeless type
    bool[10]
  }
  function _unknown[51].isTitle[26594](arg _mt[26599]:_MT[238], arg this[26596] :
  bytes[24]) : _unknown[51] "method"
  {
    if(26611 call _cond_test(26607 call(26603 call . this c"isEmpty")))
    {
      { scopeless
        (26609 return 0)
      }
    }
    { scopeless
      unknown result[26619] 1 bool[10]
      (26622 'end of statement')
    }
    { scopeless
      const tmp[26773] "const" "temp"
      (26775 'move' tmp[26773](26771 'deref'(26633 'chpl_on_locale_num'(26632 call chpl_buildLocaleID(26627 call . this c"locale_id") c_sublocid_any))))
      {
        {
          { scopeless
            unknown UN[26635] "param" 0
            unknown UPPER[26639] "param" 1
            unknown LOWER[26643] "param" 2
            (26646 'end of statement')
          }
          { scopeless
            unknown last[26649] UN
            (26652 'end of statement')
          }
          {
            unknown _indexOfInterest[26737] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[26738] "expr temp" "temp"
            (26747 'move' _iterator[26738](26745 call _getIterator(26658 call(26655 call . this c"chpl_bytes"))))
            Defer
            {
              {
                (26764 call _freeIterator _iterator[26738])
              }
            }
            { scopeless type
              (26753 'move' _indexOfInterest[26737](26750 call iteratorIndex _iterator[26738]))
            }
            ForLoop[26739]
            {
              unknown b[26757] "index var" "insert auto destroy"
              (26759 'move' b[26757] _indexOfInterest[26737])
              {
                if(26731 call _cond_test(26662 call byte_isLower b))
                {
                  if(26688 call _cond_test(26671 call ||(26665 call == last UPPER)(26669 call == last LOWER)))
                  {
                    (26675 call = last LOWER)
                  }
                  {
                    (26681 call = result 0)
                    break nil[44]
                  }
                }
                {
                  { scopeless
                    if(26727 call _cond_test(26696 call byte_isUpper b))
                    {
                      if(26716 call _cond_test(26699 call == last UN))
                      {
                        (26703 call = last UPPER)
                      }
                      {
                        (26709 call = result 0)
                        break nil[44]
                      }
                    }
                    {
                      (26723 call = last UN)
                    }
                  }
                }
              }
              label _continueLabel[26742]
              _indexOfInterest[26737]
              _iterator[26738]
            }
            label _breakLabel[26743]
          }
        }
        (26778 'on block' 0 tmp[26773])
      }
    }
    (26782 return result)
  }
  { scopeless type
    bool[10]
  }
  function _unknown[51].toLower[26790](arg _mt[26795]:_MT[238], arg this[26792] :
  bytes[24]) : _unknown[51] "method"
  {
    { scopeless
      unknown result[26800] this bytes[24]
      (26803 'end of statement')
    }
    if(26814 call _cond_test(26810 call(26806 call . result c"isEmpty")))
    {
      { scopeless
        (26812 return result)
      }
    }
    {
      unknown _indexOfInterest[26849] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[26850] "expr temp" "temp"
      (26872 'move' _iterator[26850](26833 call _build_tuple(26861 call _getIterator(26859 call chpl_build_low_bounded_range 0))(26869 call _getIterator(26868 call(26865 call . result c"chpl_bytes")))))
      Defer
      {
        {
          (26902 call _freeIterator _iterator[26850])
        }
      }
      { scopeless type
        (26877 'move' _indexOfInterest[26849](26874 call iteratorIndex _iterator[26850]))
      }
      ForLoop[26851]
      {
        (26882 call _check_tuple_var_decl _indexOfInterest[26849] 2)
        unknown i[26888] "index var" "insert auto destroy"
        (26890 'move' i[26888](26886 call _indexOfInterest[26849] 0))
        unknown b[26895] "index var" "insert auto destroy"
        (26897 'move' b[26895](26893 call _indexOfInterest[26849] 1))
        {
          (26845 call =(26840 call(26835 call . result c"buff") i)(26844 call byte_toLower b))
        }
        label _continueLabel[26854]
        _indexOfInterest[26849]
        _iterator[26850]
      }
      label _breakLabel[26855]
    }
    (26910 return result)
  }
  { scopeless type
    bytes[24]
  }
  function _unknown[51].toUpper[26918](arg _mt[26923]:_MT[238], arg this[26920] :
  bytes[24]) : _unknown[51] "method"
  {
    { scopeless
      unknown result[26928] this bytes[24]
      (26931 'end of statement')
    }
    if(26942 call _cond_test(26938 call(26934 call . result c"isEmpty")))
    {
      { scopeless
        (26940 return result)
      }
    }
    {
      unknown _indexOfInterest[26977] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[26978] "expr temp" "temp"
      (27000 'move' _iterator[26978](26961 call _build_tuple(26989 call _getIterator(26987 call chpl_build_low_bounded_range 0))(26997 call _getIterator(26996 call(26993 call . result c"chpl_bytes")))))
      Defer
      {
        {
          (27030 call _freeIterator _iterator[26978])
        }
      }
      { scopeless type
        (27005 'move' _indexOfInterest[26977](27002 call iteratorIndex _iterator[26978]))
      }
      ForLoop[26979]
      {
        (27010 call _check_tuple_var_decl _indexOfInterest[26977] 2)
        unknown i[27016] "index var" "insert auto destroy"
        (27018 'move' i[27016](27014 call _indexOfInterest[26977] 0))
        unknown b[27023] "index var" "insert auto destroy"
        (27025 'move' b[27023](27021 call _indexOfInterest[26977] 1))
        {
          (26973 call =(26968 call(26963 call . result c"buff") i)(26972 call byte_toUpper b))
        }
        label _continueLabel[26982]
        _indexOfInterest[26977]
        _iterator[26978]
      }
      label _breakLabel[26983]
    }
    (27038 return result)
  }
  { scopeless type
    bytes[24]
  }
  function _unknown[51].toTitle[27046](arg _mt[27051]:_MT[238], arg this[27048] :
  bytes[24]) : _unknown[51] "method"
  {
    { scopeless
      unknown result[27056] this bytes[24]
      (27059 'end of statement')
    }
    if(27070 call _cond_test(27066 call(27062 call . result c"isEmpty")))
    {
      { scopeless
        (27068 return result)
      }
    }
    { scopeless
      unknown UN[27076] "param" 0
      unknown LETTER[27080] "param" 1
      (27083 'end of statement')
    }
    { scopeless
      unknown last[27085] UN
      (27088 'end of statement')
    }
    {
      unknown _indexOfInterest[27163] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[27164] "expr temp" "temp"
      (27186 'move' _iterator[27164](27103 call _build_tuple(27175 call _getIterator(27173 call chpl_build_low_bounded_range 0))(27183 call _getIterator(27182 call(27179 call . result c"chpl_bytes")))))
      Defer
      {
        {
          (27216 call _freeIterator _iterator[27164])
        }
      }
      { scopeless type
        (27191 'move' _indexOfInterest[27163](27188 call iteratorIndex _iterator[27164]))
      }
      ForLoop[27165]
      {
        (27196 call _check_tuple_var_decl _indexOfInterest[27163] 2)
        unknown i[27202] "index var" "insert auto destroy"
        (27204 'move' i[27202](27200 call _indexOfInterest[27163] 0))
        unknown b[27209] "index var" "insert auto destroy"
        (27211 'move' b[27209](27207 call _indexOfInterest[27163] 1))
        {
          if(27158 call _cond_test(27107 call byte_isAlpha b))
          {
            if(27147 call _cond_test(27110 call == last UN))
            {
              (27114 call = last LETTER)
              (27129 call =(27124 call(27119 call . result c"buff") i)(27128 call byte_toUpper b))
            }
            {
              (27143 call =(27138 call(27133 call . result c"buff") i)(27142 call byte_toLower b))
            }
          }
          {
            (27154 call = last UN)
          }
        }
        label _continueLabel[27168]
        _indexOfInterest[27163]
        _iterator[27164]
      }
      label _breakLabel[27169]
    }
    (27224 return result)
  }
  { scopeless type
    bytes[24]
  }
  function _cast[27235](arg t[27232] :
  bytes[24], arg x[27238] :
  string[26]) : _unknown[51] "inline" "no doc"
  {
    (27261 return(27260 call createBytesWithNewBuffer(27243 call . x c"buff")(length =(27248 call . x c"numBytes"))(size =(27257 call +(27253 call . x c"numBytes") 1))))
  }
  function +=[27272](ref arg lhs[27269] :
  bytes[24], const  ref arg rhs[27275] :
  bytes[24]) : _unknown[51] "assignop"
  {
    (27283 call doAppend lhs rhs)
  }
  { scopeless type
    void[4]
  }
  function =[27295](ref arg lhs[27292] :
  bytes[24], arg rhs[27298] :
  bytes[24]) : _unknown[51] "assignop"
  {
    (27305 call doAssign lhs rhs)
  }
  function =[27316](ref arg lhs[27313] :
  bytes[24], arg rhs_c[27319] :
  c_string) : _unknown[51] "assignop"
  {
    (27327 call = lhs(27326 call createBytesWithNewBuffer rhs_c))
  }
  function +[27339](arg s0[27336] :
  bytes[24], arg s1[27342] :
  bytes[24]) : _unknown[51]
  {
    (27350 return(27349 call doConcat s0 s1))
  }
  function +[27361](param arg s0[27358] :
  bytes[24], param arg s1[27364] :
  bytes[24]) param : _unknown[51] "inline" "no doc"
  {
    { scopeless
      (27388 return(27387 'string_concat' s0 s1))
    }
  }
  function *[27399](arg s[27396] :
  bytes[24], arg n[27402] :
  integral) : _unknown[51]
  {
    (27410 return(27409 call doMultiply s n))
  }
  function ==[27421](arg a[27418] :
  bytes[24], arg b[27424] :
  bytes[24]) : _unknown[51] "no doc"
  {
    (27433 return(27432 call doEq a b))
  }
  { scopeless type
    bool[10]
  }
  function !=[27445](arg a[27442] :
  bytes[24], arg b[27448] :
  bytes[24]) : _unknown[51] "inline" "no doc"
  {
    (27459 return(27457 call !(27456 call doEq a b)))
  }
  { scopeless type
    bool[10]
  }
  function comparisonDeprWarn[27467]() : _unknown[51] "no doc"
  {
    (27507 call compilerWarning(27504 call + "Comparison between bytes and string is deprecated. " "Cast the string to bytes first"))
  }
  function ==[27518](arg a[27515] :
  bytes[24], arg b[27521] :
  string[26]) : _unknown[51] "no doc"
  {
    (27527 call comparisonDeprWarn)
    (27535 return(27534 call doEq a b))
  }
  { scopeless type
    bool[10]
  }
  function ==[27546](arg a[27543] :
  string[26], arg b[27549] :
  bytes[24]) : _unknown[51] "no doc"
  {
    (27555 call comparisonDeprWarn)
    (27563 return(27562 call doEq a b))
  }
  { scopeless type
    bool[10]
  }
  function !=[27574](arg a[27571] :
  bytes[24], arg b[27577] :
  string[26]) : _unknown[51] "inline" "no doc"
  {
    (27583 call comparisonDeprWarn)
    (27593 return(27591 call !(27590 call doEq a b)))
  }
  { scopeless type
    bool[10]
  }
  function !=[27604](arg a[27601] :
  string[26], arg b[27607] :
  bytes[24]) : _unknown[51] "inline" "no doc"
  {
    (27613 call comparisonDeprWarn)
    (27623 return(27621 call !(27620 call doEq a b)))
  }
  { scopeless type
    bool[10]
  }
  function <[27634](arg a[27631] :
  bytes[24], arg b[27637] :
  bytes[24]) : _unknown[51] "inline" "no doc"
  {
    (27646 return(27645 call doLessThan a b))
  }
  { scopeless type
    bool[10]
  }
  function >[27658](arg a[27655] :
  bytes[24], arg b[27661] :
  bytes[24]) : _unknown[51] "inline" "no doc"
  {
    (27670 return(27669 call doGreaterThan a b))
  }
  { scopeless type
    bool[10]
  }
  function <=[27682](arg a[27679] :
  bytes[24], arg b[27685] :
  bytes[24]) : _unknown[51] "inline" "no doc"
  {
    (27694 return(27693 call doLessThanOrEq a b))
  }
  { scopeless type
    bool[10]
  }
  function >=[27706](arg a[27703] :
  bytes[24], arg b[27709] :
  bytes[24]) : _unknown[51] "inline" "no doc"
  {
    (27718 return(27717 call doGreaterThanOrEq a b))
  }
  { scopeless type
    bool[10]
  }
  function ==[27730](param arg s0[27727] :
  bytes[24], param arg s1[27733] :
  bytes[24]) param : _unknown[51] "inline" "no doc"
  {
    (27744 return(27742 call ==(27740 'string_compare' s0 s1) 0))
  }
  function !=[27755](param arg s0[27752] :
  bytes[24], param arg s1[27758] :
  bytes[24]) param : _unknown[51] "inline" "no doc"
  {
    (27769 return(27767 call !=(27765 'string_compare' s0 s1) 0))
  }
  function <=[27780](param arg a[27777] :
  bytes[24], param arg b[27783] :
  bytes[24]) param : _unknown[51] "inline" "no doc"
  {
    (27794 return(27792 call <=(27790 'string_compare' a b) 0))
  }
  function >=[27805](param arg a[27802] :
  bytes[24], param arg b[27808] :
  bytes[24]) param : _unknown[51] "inline" "no doc"
  {
    (27819 return(27817 call >=(27815 'string_compare' a b) 0))
  }
  function <[27830](param arg a[27827] :
  bytes[24], param arg b[27833] :
  bytes[24]) param : _unknown[51] "inline" "no doc"
  {
    (27844 return(27842 call <(27840 'string_compare' a b) 0))
  }
  function >[27855](param arg a[27852] :
  bytes[24], param arg b[27858] :
  bytes[24]) param : _unknown[51] "inline" "no doc"
  {
    (27869 return(27867 call >(27865 'string_compare' a b) 0))
  }
  function chpl__defaultHash[27880](arg x[27877] :
  bytes[24]) : _unknown[51] "inline" "no doc"
  {
    (27887 return(27886 call getHash x))
  }
  { scopeless type
    uint[115]
  }
}